// Code generated by "uaxplc -module=device -input=~/dev/php/device-detector/regexes/device". DO NOT EDIT.

package uaxpl

import (
	"regexp"
)

var (
	__dr_idx = [8][]dr{
		// cameras.yml
		{
			dr{ne: 0x00000005, re: -0x0001, si: 0x500000012, sm: 0x0000, me: 0x00000000},
			dr{ne: 0x1200000019, re: 0x0000, si: 0x00000000, sm: -0x0001, me: 0x100000006},
		},
		// car_browsers.yml
		{
			dr{ne: 0x850000008e, re: -0x0001, si: 0x8e0000009c, sm: -0x0001, me: 0x600000007},
			dr{ne: 0xa5000000aa, re: 0x0002, si: 0x00000000, sm: -0x0001, me: 0x700000009},
			dr{ne: 0xbd000000c3, re: -0x0001, si: 0xc3000000d3, sm: -0x0001, me: 0x90000000a},
		},
		// consoles.yml
		{
			dr{ne: 0xd6000000dc, re: 0x0004, si: 0x00000000, sm: 0x000a, me: 0x00000000},
			dr{ne: 0xe6000000ef, re: -0x0001, si: 0xef000000f3, sm: -0x0001, me: 0xb00000010},
			dr{ne: 0x12f00000137, re: 0x0005, si: 0x00000000, sm: 0x0010, me: 0x00000000},
			dr{ne: 0x1390000013d, re: -0x0001, si: 0x1390000013d, sm: 0x0011, me: 0x00000000},
			dr{ne: 0x13d0000014b, re: -0x0001, si: 0x14b0000015f, sm: 0x0012, me: 0x00000000},
			dr{ne: 0x16500000169, re: -0x0001, si: 0x16900000172, sm: 0x0013, me: 0x00000000},
			dr{ne: 0x17200000176, re: 0x0006, si: 0x00000000, sm: 0x0014, me: 0x00000000},
		},
		// mobiles.yml
		{
			dr{ne: 0x18400000186, re: 0x0007, si: 0x00000000, sm: -0x0001, me: 0x1500000017},
			dr{ne: 0x19d000001a0, re: 0x000a, si: 0x00000000, sm: -0x0001, me: 0x1700000023},
			dr{ne: 0x1d2000001d7, re: 0x0017, si: 0x00000000, sm: -0x0001, me: 0x2300000025},
			dr{ne: 0x1db000001de, re: 0x001a, si: 0x00000000, sm: -0x0001, me: 0x2500000026},
			dr{ne: 0x1e6000001e8, re: 0x001c, si: 0x00000000, sm: -0x0001, me: 0x260000002e},
			dr{ne: 0x23f00000244, re: 0x0024, si: 0x00000000, sm: -0x0001, me: 0x2e00000033},
			dr{ne: 0x2580000025c, re: 0x002a, si: 0x00000000, sm: 0x0033, me: 0x00000000},
			dr{ne: 0x25c00000264, re: 0x002b, si: 0x00000000, sm: -0x0001, me: 0x3400000036},
			dr{ne: 0x27400000278, re: 0x002c, si: 0x00000000, sm: 0x0036, me: 0x00000000},
			dr{ne: 0x2780000027a, re: 0x002d, si: 0x00000000, sm: -0x0001, me: 0x370000003b},
			dr{ne: 0x2a4000002ad, re: 0x002f, si: 0x00000000, sm: 0x003b, me: 0x00000000},
			dr{ne: 0x2ad000002b0, re: 0x0030, si: 0x00000000, sm: -0x0001, me: 0x3c00000040},
			dr{ne: 0x2c1000002c7, re: 0x0035, si: 0x00000000, sm: -0x0001, me: 0x4000000043},
			dr{ne: 0x2e7000002ec, re: 0x0037, si: 0x00000000, sm: 0x0043, me: 0x00000000},
			dr{ne: 0x2fa000002fd, re: 0x0038, si: 0x00000000, sm: -0x0001, me: 0x4400000046},
			dr{ne: 0x33000000339, re: 0x0039, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x33900000342, re: 0x003a, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x34200000347, re: 0x003b, si: 0x00000000, sm: -0x0001, me: 0x4600000055},
			dr{ne: 0x3c0000003c3, re: 0x003e, si: 0x00000000, sm: -0x0001, me: 0x5500000057},
			dr{ne: 0x3db000003de, re: 0x003f, si: 0x00000000, sm: -0x0001, me: 0x5700000059},
			dr{ne: 0x3de000003e5, re: -0x0001, si: 0x3de000003e5, sm: -0x0001, me: 0x590000005a},
			dr{ne: 0x3e5000003ea, re: 0x0043, si: 0x00000000, sm: 0x005a, me: 0x00000000},
			dr{ne: 0x3f2000003f7, re: -0x0001, si: 0x3f2000003f7, sm: -0x0001, me: 0x5b0000005c},
			dr{ne: 0x3f7000003fb, re: 0x0045, si: 0x00000000, sm: -0x0001, me: 0x5c00000067},
			dr{ne: 0x46400000469, re: 0x0051, si: 0x00000000, sm: 0x0067, me: 0x00000000},
			dr{ne: 0x4690000046c, re: 0x0052, si: 0x00000000, sm: -0x0001, me: 0x680000006c},
			dr{ne: 0x49200000498, re: 0x0057, si: 0x00000000, sm: -0x0001, me: 0x6c00000076},
			dr{ne: 0x4fb000004fe, re: 0x0062, si: 0x00000000, sm: -0x0001, me: 0x760000007c},
			dr{ne: 0x55100000555, re: 0x0066, si: 0x00000000, sm: -0x0001, me: 0x7c000000b9},
			dr{ne: 0x7c1000007c7, re: -0x0001, si: 0x7c7000007cc, sm: 0x00b9, me: 0x00000000},
			dr{ne: 0x7d1000007d8, re: 0x009a, si: 0x00000000, sm: -0x0001, me: 0xba000000bc},
			dr{ne: 0x7e5000007ea, re: 0x009d, si: 0x00000000, sm: -0x0001, me: 0xbc000000c6},
			dr{ne: 0x8350000083c, re: 0x00a3, si: 0x00000000, sm: -0x0001, me: 0xc6000000cb},
			dr{ne: 0x87200000879, re: 0x00a9, si: 0x00000000, sm: -0x0001, me: 0xcb000000cf},
			dr{ne: 0x89d000008a2, re: 0x00ae, si: 0x00000000, sm: -0x0001, me: 0xcf000000df},
			dr{ne: 0x9ab000009b2, re: 0x00b7, si: 0x00000000, sm: 0x00df, me: 0x00000000},
			dr{ne: 0x9b2000009b8, re: 0x00b8, si: 0x00000000, sm: -0x0001, me: 0xe0000000e1},
			dr{ne: 0x9cb000009d0, re: 0x00b9, si: 0x00000000, sm: 0x00e1, me: 0x00000000},
			dr{ne: 0x9d0000009d4, re: 0x00ba, si: 0x00000000, sm: -0x0001, me: 0xe2000000e6},
			dr{ne: 0x9e7000009eb, re: 0x00bf, si: 0x00000000, sm: -0x0001, me: 0xe6000000ee},
			dr{ne: 0xa2000000a24, re: 0x00c5, si: 0x00000000, sm: -0x0001, me: 0xee000000f2},
			dr{ne: 0xa4000000a47, re: 0x00c8, si: 0x00000000, sm: -0x0001, me: 0xf2000001b2},
			dr{ne: 0x155e00001563, re: 0x013f, si: 0x00000000, sm: 0x01b2, me: 0x00000000},
			dr{ne: 0x15630000156b, re: 0x0140, si: 0x00000000, sm: -0x0001, me: 0x1b3000001b6},
			dr{ne: 0x15720000157a, re: 0x0144, si: 0x00000000, sm: -0x0001, me: 0x1b6000001b7},
			dr{ne: 0x157a00001581, re: 0x0146, si: 0x00000000, sm: -0x0001, me: 0x1b7000001c0},
			dr{ne: 0x15e5000015ee, re: 0x014b, si: 0x00000000, sm: -0x0001, me: 0x1c0000001ca},
			dr{ne: 0x162e00001635, re: 0x0156, si: 0x00000000, sm: -0x0001, me: 0x1ca00000214},
			dr{ne: 0x1ae600001aef, re: 0x0172, si: 0x00000000, sm: -0x0001, me: 0x2140000021e},
			dr{ne: 0x1bd600001bda, re: 0x0174, si: 0x00000000, sm: -0x0001, me: 0x21e00000220},
			dr{ne: 0x1bda00001be0, re: 0x0177, si: 0x00000000, sm: 0x0220, me: 0x00000000},
			dr{ne: 0x1be000001be6, re: 0x0178, si: 0x00000000, sm: -0x0001, me: 0x22100000249},
			dr{ne: 0x1e9600001e9c, re: 0x0197, si: 0x00000000, sm: 0x0249, me: 0x00000000},
			dr{ne: 0x1e9c00001ea1, re: 0x0198, si: 0x00000000, sm: -0x0001, me: 0x24a0000024c},
			dr{ne: 0x1ebd00001ec1, re: 0x0199, si: 0x00000000, sm: -0x0001, me: 0x24c00000253},
			dr{ne: 0x1ef800001efe, re: 0x019e, si: 0x00000000, sm: 0x0253, me: 0x00000000},
			dr{ne: 0x1efe00001f07, re: 0x019f, si: 0x00000000, sm: -0x0001, me: 0x25400000256},
			dr{ne: 0x1f0e00001f13, re: 0x01a2, si: 0x00000000, sm: 0x0256, me: 0x00000000},
			dr{ne: 0x1f2200001f26, re: 0x01a3, si: 0x00000000, sm: 0x0257, me: 0x00000000},
			dr{ne: 0x1f2600001f2b, re: 0x01a4, si: 0x00000000, sm: 0x0258, me: 0x00000000},
			dr{ne: 0x1f2b00001f30, re: 0x01a5, si: 0x00000000, sm: -0x0001, me: 0x2590000025e},
			dr{ne: 0x1f5800001f5d, re: 0x01ab, si: 0x00000000, sm: -0x0001, me: 0x25e0000032a},
			dr{ne: 0xd6000000dc, re: 0x026f, si: 0x00000000, sm: -0x0001, me: 0x32a00000336},
			dr{ne: 0x2c2000002c2b, re: -0x0001, si: 0x2c2000002c2b, sm: -0x0001, me: 0x3360000033a},
			dr{ne: 0x2c6100002c64, re: 0x027c, si: 0x00000000, sm: -0x0001, me: 0x33a00000342},
			dr{ne: 0x2cac00002cb4, re: 0x0285, si: 0x00000000, sm: 0x0342, me: 0x00000000},
			dr{ne: 0x2cb400002cba, re: 0x0286, si: 0x00000000, sm: -0x0001, me: 0x34300000360},
			dr{ne: 0x2de800002def, re: 0x028c, si: 0x00000000, sm: 0x0360, me: 0x00000000},
			dr{ne: 0x2def00002df4, re: 0x028d, si: 0x00000000, sm: -0x0001, me: 0x3610000036a},
			dr{ne: 0x2e1600002e1e, re: 0x0297, si: 0x00000000, sm: -0x0001, me: 0x36a0000036d},
			dr{ne: 0x2e2b00002e30, re: 0x029b, si: 0x00000000, sm: -0x0001, me: 0x36d0000036e},
			dr{ne: 0x2e3a00002e40, re: 0x029d, si: 0x00000000, sm: -0x0001, me: 0x36e00000370},
			dr{ne: 0x2e4700002e4a, re: 0x02a0, si: 0x00000000, sm: -0x0001, me: 0x37000000372},
			dr{ne: 0x2e5200002e58, re: 0x02a3, si: 0x00000000, sm: -0x0001, me: 0x37200000374},
			dr{ne: 0x2e5c00002e65, re: 0x02a6, si: 0x00000000, sm: -0x0001, me: 0x3740000038a},
			dr{ne: 0x2ee600002eeb, re: 0x02bd, si: 0x00000000, sm: 0x038a, me: 0x00000000},
			dr{ne: 0x2eeb00002eef, re: 0x02be, si: 0x00000000, sm: -0x0001, me: 0x38b000003f7},
			dr{ne: 0x34a1000034b2, re: -0x0001, si: 0x34b2000034b9, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x34b9000034bd, re: 0x0320, si: 0x00000000, sm: 0x03f7, me: 0x00000000},
			dr{ne: 0x34bd000034c2, re: 0x0321, si: 0x00000000, sm: 0x03f8, me: 0x00000000},
			dr{ne: 0x34c2000034ca, re: 0x0322, si: 0x00000000, sm: -0x0001, me: 0x3f9000003fd},
			dr{ne: 0x34d0000034d5, re: 0x0327, si: 0x00000000, sm: -0x0001, me: 0x3fd000003fe},
			dr{ne: 0x34d5000034db, re: 0x0329, si: 0x00000000, sm: -0x0001, me: 0x3fe00000400},
			dr{ne: 0x34ef000034f4, re: 0x032c, si: 0x00000000, sm: -0x0001, me: 0x40000000405},
			dr{ne: 0x35370000353b, re: 0x032f, si: 0x00000000, sm: 0x0405, me: 0x00000000},
			dr{ne: 0x353b00003540, re: 0x0330, si: 0x00000000, sm: -0x0001, me: 0x40600000409},
			dr{ne: 0x357300003579, re: 0x0333, si: 0x00000000, sm: -0x0001, me: 0x4090000040a},
			dr{ne: 0x35800000358c, re: 0x0335, si: 0x00000000, sm: -0x0001, me: 0x40a0000040e},
			dr{ne: 0x35b9000035c2, re: 0x0338, si: 0x00000000, sm: -0x0001, me: 0x40e00000419},
			dr{ne: 0x36b6000036b9, re: 0x0344, si: 0x00000000, sm: 0x0419, me: 0x00000000},
			dr{ne: 0x36c4000036c7, re: 0x0345, si: 0x00000000, sm: -0x0001, me: 0x41a0000041c},
			dr{ne: 0x36d2000036d5, re: 0x0348, si: 0x00000000, sm: -0x0001, me: 0x41c0000041e},
			dr{ne: 0x36ee000036f7, re: -0x0001, si: 0x36f700003700, sm: 0x041e, me: 0x00000000},
			dr{ne: 0x370000003703, re: 0x0349, si: 0x00000000, sm: -0x0001, me: 0x41f00000424},
			dr{ne: 0x372400003729, re: 0x034d, si: 0x00000000, sm: -0x0001, me: 0x42400000425},
			dr{ne: 0x37290000372d, re: 0x034f, si: 0x00000000, sm: 0x0425, me: 0x00000000},
			dr{ne: 0x373a00003743, re: 0x0350, si: 0x00000000, sm: -0x0001, me: 0x42600000427},
			dr{ne: 0x374a00003758, re: 0x0352, si: 0x00000000, sm: -0x0001, me: 0x4270000042a},
			dr{ne: 0x375f00003765, re: 0x0356, si: 0x00000000, sm: 0x042a, me: 0x00000000},
			dr{ne: 0x37650000376c, re: 0x0357, si: 0x00000000, sm: -0x0001, me: 0x42b00000435},
			dr{ne: 0x37a7000037ae, re: 0x0360, si: 0x00000000, sm: -0x0001, me: 0x4350000043a},
			dr{ne: 0x37d2000037d8, re: 0x0366, si: 0x00000000, sm: 0x043a, me: 0x00000000},
			dr{ne: 0x37d8000037de, re: 0x0367, si: 0x00000000, sm: 0x043b, me: 0x00000000},
			dr{ne: 0x37de000037e7, re: 0x0368, si: 0x00000000, sm: 0x043c, me: 0x00000000},
			dr{ne: 0x37f4000037f8, re: 0x0369, si: 0x00000000, sm: -0x0001, me: 0x43d0000043f},
			dr{ne: 0x37fb00003807, re: 0x036c, si: 0x00000000, sm: 0x043f, me: 0x00000000},
			dr{ne: 0x38070000380c, re: 0x036d, si: 0x00000000, sm: -0x0001, me: 0x44000000442},
			dr{ne: 0x381e00003825, re: 0x036e, si: 0x00000000, sm: 0x0442, me: 0x00000000},
			dr{ne: 0x38250000382a, re: 0x036f, si: 0x00000000, sm: 0x0443, me: 0x00000000},
			dr{ne: 0x382a00003830, re: 0x0370, si: 0x00000000, sm: -0x0001, me: 0x44400000447},
			dr{ne: 0x384f00003855, re: 0x0373, si: 0x00000000, sm: 0x0447, me: 0x00000000},
			dr{ne: 0x38550000385b, re: 0x0374, si: 0x00000000, sm: 0x0448, me: 0x00000000},
			dr{ne: 0x38660000386f, re: 0x0375, si: 0x00000000, sm: 0x0449, me: 0x00000000},
			dr{ne: 0x387d00003884, re: 0x0376, si: 0x00000000, sm: 0x044a, me: 0x00000000},
			dr{ne: 0x389000003899, re: 0x0377, si: 0x00000000, sm: -0x0001, me: 0x44b0000044d},
			dr{ne: 0x38b4000038b8, re: 0x0379, si: 0x00000000, sm: -0x0001, me: 0x44d0000044f},
			dr{ne: 0x38b8000038bd, re: 0x037c, si: 0x00000000, sm: -0x0001, me: 0x44f00000451},
			dr{ne: 0x38bd000038c4, re: 0x037f, si: 0x00000000, sm: -0x0001, me: 0x45100000454},
			dr{ne: 0x38e3000038ea, re: -0x0001, si: 0x38e3000038ea, sm: -0x0001, me: 0x45400000455},
			dr{ne: 0x38f8000038fc, re: 0x0384, si: 0x00000000, sm: 0x0455, me: 0x00000000},
			dr{ne: 0x39050000390f, re: 0x0385, si: 0x00000000, sm: 0x0456, me: 0x00000000},
			dr{ne: 0x390f00003918, re: 0x0386, si: 0x00000000, sm: -0x0001, me: 0x45700000468},
			dr{ne: 0x39d1000039da, re: 0x038b, si: 0x00000000, sm: -0x0001, me: 0x46800000477},
			dr{ne: 0x3a2200003a2b, re: 0x039a, si: 0x00000000, sm: -0x0001, me: 0x47700000485},
			dr{ne: 0x7cc000007d1, re: 0x03a7, si: 0x00000000, sm: -0x0001, me: 0x48500000487},
			dr{ne: 0x3ad200003ad7, re: 0x03a9, si: 0x00000000, sm: 0x0487, me: 0x00000000},
			dr{ne: 0x3ad700003adb, re: 0x03aa, si: 0x00000000, sm: -0x0001, me: 0x4880000048a},
			dr{ne: 0x3b0600003b09, re: 0x03ac, si: 0x00000000, sm: -0x0001, me: 0x48a000004cf},
			dr{ne: 0x3e7900003e7f, re: 0x03cb, si: 0x00000000, sm: -0x0001, me: 0x4cf000004d6},
			dr{ne: 0x3eb000003eb8, re: 0x03d0, si: 0x00000000, sm: 0x04d6, me: 0x00000000},
			dr{ne: 0x3eb800003ebf, re: 0x03d1, si: 0x00000000, sm: -0x0001, me: 0x4d7000004d9},
			dr{ne: 0x3ebf00003ec7, re: -0x0001, si: 0x3ec700003ecf, sm: -0x0001, me: 0x4d9000004da},
			dr{ne: 0x3ed100003ed9, re: 0x03d4, si: 0x00000000, sm: -0x0001, me: 0x4da000004dd},
			dr{ne: 0x3f1700003f1e, re: 0x03d6, si: 0x00000000, sm: -0x0001, me: 0x4dd000004e5},
			dr{ne: 0x3f6900003f70, re: 0x03db, si: 0x00000000, sm: 0x04e5, me: 0x00000000},
			dr{ne: 0x3f7600003f7b, re: 0x03dc, si: 0x00000000, sm: -0x0001, me: 0x4e6000004e9},
			dr{ne: 0x3f7b00003f81, re: 0x03e0, si: 0x00000000, sm: 0x04e9, me: 0x00000000},
			dr{ne: 0x3f8100003f87, re: 0x03e1, si: 0x00000000, sm: -0x0001, me: 0x4ea0000050a},
			dr{ne: 0x412c00004136, re: -0x0001, si: 0x412c00004136, sm: -0x0001, me: 0x50a0000050b},
			dr{ne: 0x41360000413c, re: 0x03ef, si: 0x00000000, sm: -0x0001, me: 0x50b00000516},
			dr{ne: 0x41a8000041b1, re: 0x03fb, si: 0x00000000, sm: 0x0516, me: 0x00000000},
			dr{ne: 0x41b1000041b6, re: 0x03fc, si: 0x00000000, sm: -0x0001, me: 0x5170000051a},
			dr{ne: 0x41f0000041f4, re: 0x03ff, si: 0x00000000, sm: -0x0001, me: 0x51a0000051e},
			dr{ne: 0x420a0000420e, re: -0x0001, si: 0x420e00004213, sm: -0x0001, me: 0x51e00000520},
			dr{ne: 0x421d00004226, re: 0x0404, si: 0x00000000, sm: -0x0001, me: 0x52000000524},
			dr{ne: 0x425000004253, re: 0x0409, si: 0x00000000, sm: 0x0524, me: 0x00000000},
			dr{ne: 0x42530000425b, re: 0x040a, si: 0x00000000, sm: -0x0001, me: 0x52500000526},
			dr{ne: 0x426a0000426e, re: 0x040b, si: 0x00000000, sm: -0x0001, me: 0x52600000528},
			dr{ne: 0x42750000427b, re: 0x040e, si: 0x00000000, sm: -0x0001, me: 0x52800000529},
			dr{ne: 0x428f00004294, re: 0x040f, si: 0x00000000, sm: -0x0001, me: 0x52900000548},
			dr{ne: 0x44180000441c, re: 0x041c, si: 0x00000000, sm: 0x0548, me: 0x00000000},
			dr{ne: 0x441c00004423, re: 0x041d, si: 0x00000000, sm: -0x0001, me: 0x5490000054b},
			dr{ne: 0x442300004430, re: 0x0420, si: 0x00000000, sm: 0x054b, me: 0x00000000},
			dr{ne: 0x44380000443f, re: 0x0421, si: 0x00000000, sm: 0x054c, me: 0x00000000},
			dr{ne: 0x443f00004446, re: 0x0422, si: 0x00000000, sm: 0x054d, me: 0x00000000},
			dr{ne: 0x444c00004455, re: 0x0423, si: 0x00000000, sm: -0x0001, me: 0x54e00000551},
			dr{ne: 0x446f00004474, re: 0x0426, si: 0x00000000, sm: -0x0001, me: 0x55100000554},
			dr{ne: 0x44a6000044ac, re: 0x042a, si: 0x00000000, sm: -0x0001, me: 0x5540000055c},
			dr{ne: 0x44e3000044e6, re: 0x0432, si: 0x00000000, sm: -0x0001, me: 0x55c00000562},
			dr{ne: 0x44fb00004501, re: 0x0436, si: 0x00000000, sm: -0x0001, me: 0x5620000056b},
			dr{ne: 0x45cd000045d3, re: 0x043b, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x45d3000045d9, re: 0x043c, si: 0x00000000, sm: -0x0001, me: 0x56b00000576},
			dr{ne: 0x461b00004621, re: 0x0445, si: 0x00000000, sm: -0x0001, me: 0x57600000578},
			dr{ne: 0x46330000463d, re: 0x0447, si: 0x00000000, sm: -0x0001, me: 0x5780000057b},
			dr{ne: 0x46650000466e, re: 0x0449, si: 0x00000000, sm: -0x0001, me: 0x57b0000057d},
			dr{ne: 0x46870000468e, re: 0x044a, si: 0x00000000, sm: -0x0001, me: 0x57d00000582},
			dr{ne: 0x4699000046a2, re: -0x0001, si: 0x4699000046a2, sm: -0x0001, me: 0x58200000586},
			dr{ne: 0x46b6000046c3, re: 0x0453, si: 0x00000000, sm: -0x0001, me: 0x586000005aa},
			dr{ne: 0x48c2000048ce, re: 0x046a, si: 0x00000000, sm: -0x0001, me: 0x5aa000005b5},
			dr{ne: 0x4994000049a0, re: 0x046d, si: 0x00000000, sm: -0x0001, me: 0x5b5000005b8},
			dr{ne: 0x49b5000049c2, re: 0x046f, si: 0x00000000, sm: -0x0001, me: 0x5b8000005bc},
			dr{ne: 0x4a1600004a1b, re: 0x0470, si: 0x00000000, sm: -0x0001, me: 0x5bc000005d1},
			dr{ne: 0x4a9f00004aa7, re: 0x0486, si: 0x00000000, sm: -0x0001, me: 0x5d1000005d4},
			dr{ne: 0x4ab200004ab9, re: -0x0001, si: 0x4ab200004ab9, sm: -0x0001, me: 0x5d4000005d5},
			dr{ne: 0x4ab900004ac3, re: -0x0001, si: 0x4ab900004ac3, sm: -0x0001, me: 0x5d5000005d6},
			dr{ne: 0x4ac600004ad0, re: 0x048c, si: 0x00000000, sm: -0x0001, me: 0x5d6000005dc},
			dr{ne: 0x4b2b00004b30, re: 0x0490, si: 0x00000000, sm: -0x0001, me: 0x5dc000005e0},
			dr{ne: 0x4b6000004b69, re: 0x0493, si: 0x00000000, sm: -0x0001, me: 0x5e0000005ed},
			dr{ne: 0x4c0900004c11, re: 0x049d, si: 0x00000000, sm: -0x0001, me: 0x5ed000005ef},
			dr{ne: 0x4c1c00004c21, re: 0x04a0, si: 0x00000000, sm: -0x0001, me: 0x5ef000005f6},
			dr{ne: 0x4c6600004c69, re: -0x0001, si: 0x4c6600004c69, sm: -0x0001, me: 0x5f6000005f7},
			dr{ne: 0x4c7400004c7a, re: 0x04a9, si: 0x00000000, sm: -0x0001, me: 0x5f7000005fa},
			dr{ne: 0x4c8c00004c96, re: 0x04ad, si: 0x00000000, sm: 0x05fa, me: 0x00000000},
			dr{ne: 0x4c9600004c9c, re: 0x04ae, si: 0x00000000, sm: -0x0001, me: 0x5fb000005ff},
			dr{ne: 0x4cb400004cc2, re: 0x04b3, si: 0x00000000, sm: -0x0001, me: 0x5ff00000617},
			dr{ne: 0x4da500004daa, re: 0x04c4, si: 0x00000000, sm: -0x0001, me: 0x6170000061b},
			dr{ne: 0x4dcb00004dd1, re: 0x04c6, si: 0x00000000, sm: 0x061b, me: 0x00000000},
			dr{ne: 0x4dd100004dd9, re: 0x04c7, si: 0x00000000, sm: -0x0001, me: 0x61c00000620},
			dr{ne: 0x4de300004dea, re: 0x04cc, si: 0x00000000, sm: -0x0001, me: 0x62000000624},
			dr{ne: 0x4e0c00004e12, re: 0x04ce, si: 0x00000000, sm: -0x0001, me: 0x62400000658},
			dr{ne: 0x4fdc00004fe5, re: 0x04fc, si: 0x00000000, sm: 0x0658, me: 0x00000000},
			dr{ne: 0x4ff300004ff9, re: 0x04fd, si: 0x00000000, sm: -0x0001, me: 0x6590000065b},
			dr{ne: 0x501800005020, re: 0x04ff, si: 0x00000000, sm: -0x0001, me: 0x65b0000065d},
			dr{ne: 0x503000005037, re: 0x0501, si: 0x00000000, sm: -0x0001, me: 0x65d00000667},
			dr{ne: 0x50b9000050c0, re: 0x050c, si: 0x00000000, sm: -0x0001, me: 0x66700000688},
			dr{ne: 0x51a3000051aa, re: -0x0001, si: 0x51a3000051aa, sm: -0x0001, me: 0x68800000689},
			dr{ne: 0x51c8000051cd, re: 0x052a, si: 0x00000000, sm: 0x0689, me: 0x00000000},
			dr{ne: 0x51cd000051d5, re: 0x052b, si: 0x00000000, sm: -0x0001, me: 0x68a0000068d},
			dr{ne: 0x51f4000051fb, re: 0x052d, si: 0x00000000, sm: -0x0001, me: 0x68d00000697},
			dr{ne: 0x527c00005285, re: 0x052f, si: 0x00000000, sm: 0x0697, me: 0x00000000},
			dr{ne: 0x52850000528a, re: 0x0530, si: 0x00000000, sm: 0x0698, me: 0x00000000},
			dr{ne: 0x528e00005297, re: 0x0531, si: 0x00000000, sm: -0x0001, me: 0x699000006a2},
			dr{ne: 0x52fd00005302, re: 0x0538, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x530200005306, re: 0x0539, si: 0x00000000, sm: -0x0001, me: 0x6a2000006b0},
			dr{ne: 0x539400005399, re: 0x0544, si: 0x00000000, sm: -0x0001, me: 0x6b0000006b2},
			dr{ne: 0x53990000539d, re: 0x0547, si: 0x00000000, sm: -0x0001, me: 0x6b2000006c8},
			dr{ne: 0x543b0000543d, re: 0x055d, si: 0x00000000, sm: -0x0001, me: 0x6c8000006cc},
			dr{ne: 0x54760000547e, re: 0x055f, si: 0x00000000, sm: 0x06cc, me: 0x00000000},
			dr{ne: 0x547e00005487, re: 0x0560, si: 0x00000000, sm: 0x06cd, me: 0x00000000},
			dr{ne: 0x54870000548b, re: 0x0561, si: 0x00000000, sm: -0x0001, me: 0x6ce000006cf},
			dr{ne: 0x549e000054a3, re: 0x0562, si: 0x00000000, sm: -0x0001, me: 0x6cf000006d3},
			dr{ne: 0x54c2000054c5, re: 0x0565, si: 0x00000000, sm: -0x0001, me: 0x6d3000006d7},
			dr{ne: 0x54d3000054da, re: 0x056a, si: 0x00000000, sm: 0x06d7, me: 0x00000000},
			dr{ne: 0x54da000054e6, re: 0x056b, si: 0x00000000, sm: -0x0001, me: 0x6d8000006d9},
			dr{ne: 0x54e6000054ec, re: 0x056d, si: 0x00000000, sm: -0x0001, me: 0x6d9000006db},
			dr{ne: 0x54f6000054fb, re: 0x0570, si: 0x00000000, sm: -0x0001, me: 0x6db000006df},
			dr{ne: 0x552d00005536, re: 0x0574, si: 0x00000000, sm: 0x06df, me: 0x00000000},
			dr{ne: 0x553e00005546, re: 0x0575, si: 0x00000000, sm: 0x06e0, me: 0x00000000},
			dr{ne: 0x55460000554c, re: -0x0001, si: 0x554c00005552, sm: -0x0001, me: 0x6e1000006e3},
			dr{ne: 0x55520000555a, re: 0x0578, si: 0x00000000, sm: -0x0001, me: 0x6e3000006e5},
			dr{ne: 0x557e00005584, re: -0x0001, si: 0x55840000558a, sm: -0x0001, me: 0x6e5000006e7},
			dr{ne: 0x55ac000055b1, re: -0x0001, si: 0x55b1000055b6, sm: -0x0001, me: 0x6e7000006e8},
			dr{ne: 0x55b8000055bd, re: 0x057a, si: 0x00000000, sm: 0x06e8, me: 0x00000000},
			dr{ne: 0x55bd000055c3, re: 0x057b, si: 0x00000000, sm: 0x06e9, me: 0x00000000},
			dr{ne: 0x55c3000055c7, re: 0x057c, si: 0x00000000, sm: -0x0001, me: 0x6ea000006f4},
			dr{ne: 0x55e2000055e8, re: 0x0586, si: 0x00000000, sm: -0x0001, me: 0x6f4000006f7},
			dr{ne: 0x55f4000055f9, re: -0x0001, si: 0x55f4000055f9, sm: -0x0001, me: 0x6f7000006f9},
			dr{ne: 0x55f9000055ff, re: 0x058c, si: 0x00000000, sm: 0x06f9, me: 0x00000000},
			dr{ne: 0x55ff00005604, re: 0x058d, si: 0x00000000, sm: 0x06fa, me: 0x00000000},
			dr{ne: 0x560400005608, re: 0x058e, si: 0x00000000, sm: 0x06fb, me: 0x00000000},
			dr{ne: 0x56080000560f, re: 0x058f, si: 0x00000000, sm: -0x0001, me: 0x6fc00000701},
			dr{ne: 0x56320000563a, re: 0x0592, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x563a00005642, re: 0x0593, si: 0x00000000, sm: -0x0001, me: 0x70100000704},
			dr{ne: 0x564d00005652, re: 0x0596, si: 0x00000000, sm: -0x0001, me: 0x70400000735},
			dr{ne: 0x58e9000058f0, re: 0x05aa, si: 0x00000000, sm: 0x0735, me: 0x00000000},
			dr{ne: 0x58f0000058f4, re: 0x05ab, si: 0x00000000, sm: 0x0736, me: 0x00000000},
			dr{ne: 0x58f4000058fb, re: 0x05ac, si: 0x00000000, sm: -0x0001, me: 0x73700000739},
			dr{ne: 0x590200005908, re: 0x05af, si: 0x00000000, sm: -0x0001, me: 0x7390000073d},
			dr{ne: 0x59080000590f, re: 0x05b4, si: 0x00000000, sm: 0x073d, me: 0x00000000},
			dr{ne: 0x590f00005916, re: 0x05b5, si: 0x00000000, sm: 0x073e, me: 0x00000000},
			dr{ne: 0x59160000591c, re: 0x05b6, si: 0x00000000, sm: -0x0001, me: 0x73f00000760},
			dr{ne: 0x5a8400005a8a, re: 0x05ca, si: 0x00000000, sm: 0x0760, me: 0x00000000},
			dr{ne: 0x5a8c00005a90, re: 0x05cb, si: 0x00000000, sm: -0x0001, me: 0x76100000763},
			dr{ne: 0x5a9000005a95, re: 0x05ce, si: 0x00000000, sm: 0x0763, me: 0x00000000},
			dr{ne: 0x5a9500005a9b, re: -0x0001, si: 0x5a9b00005aa2, sm: -0x0001, me: 0x76400000766},
			dr{ne: 0x5aa700005aab, re: 0x05d1, si: 0x00000000, sm: -0x0001, me: 0x7660000076a},
			dr{ne: 0x5ab300005abf, re: 0x05d6, si: 0x00000000, sm: 0x076a, me: 0x00000000},
			dr{ne: 0x5abf00005ac8, re: 0x05d7, si: 0x00000000, sm: -0x0001, me: 0x76b0000076c},
			dr{ne: 0x5ace00005ad4, re: 0x05d9, si: 0x00000000, sm: 0x076c, me: 0x00000000},
			dr{ne: 0x5ad400005adb, re: 0x05da, si: 0x00000000, sm: -0x0001, me: 0x76d00000770},
			dr{ne: 0x5ae200005ae8, re: 0x05de, si: 0x00000000, sm: -0x0001, me: 0x77000000774},
			dr{ne: 0x5afe00005b05, re: 0x05e2, si: 0x00000000, sm: -0x0001, me: 0x77400000776},
			dr{ne: 0x5b1c00005b21, re: -0x0001, si: 0x5b2100005b2b, sm: -0x0001, me: 0x77600000777},
			dr{ne: 0x5b2f00005b34, re: -0x0001, si: 0x5b2f00005b34, sm: -0x0001, me: 0x77700000779},
			dr{ne: 0x5b3400005b37, re: 0x05e8, si: 0x00000000, sm: -0x0001, me: 0x7790000077d},
			dr{ne: 0x5b4900005b4b, re: 0x05ed, si: 0x00000000, sm: -0x0001, me: 0x77d00000780},
			dr{ne: 0x5b4f00005b52, re: -0x0001, si: 0x5b5200005b5a, sm: -0x0001, me: 0x78000000781},
			dr{ne: 0x5b5f00005b62, re: -0x0001, si: 0x5b5f00005b62, sm: -0x0001, me: 0x78100000784},
			dr{ne: 0x5b8000005b83, re: 0x05f3, si: 0x00000000, sm: -0x0001, me: 0x78400000786},
			dr{ne: 0x5b8800005b8d, re: 0x05f6, si: 0x00000000, sm: 0x0786, me: 0x00000000},
			dr{ne: 0x5b9800005b9d, re: 0x05f7, si: 0x00000000, sm: -0x0001, me: 0x78700000788},
			dr{ne: 0x5ba700005bab, re: 0x05f9, si: 0x00000000, sm: 0x0788, me: 0x00000000},
			dr{ne: 0x5bb500005bbb, re: 0x05fa, si: 0x00000000, sm: 0x0789, me: 0x00000000},
			dr{ne: 0x5bbb00005bbe, re: 0x05fb, si: 0x00000000, sm: 0x078a, me: 0x00000000},
			dr{ne: 0x5bbe00005bc3, re: 0x05fc, si: 0x00000000, sm: 0x078b, me: 0x00000000},
			dr{ne: 0x5bc300005bca, re: 0x05fd, si: 0x00000000, sm: -0x0001, me: 0x78c0000078e},
			dr{ne: 0x5bd400005be0, re: 0x0600, si: 0x00000000, sm: -0x0001, me: 0x78e00000793},
			dr{ne: 0x5c1c00005c24, re: 0x0603, si: 0x00000000, sm: 0x0793, me: 0x00000000},
			dr{ne: 0x5c2400005c30, re: 0x0604, si: 0x00000000, sm: -0x0001, me: 0x79400000796},
			dr{ne: 0x5c4300005c4e, re: 0x0605, si: 0x00000000, sm: 0x0796, me: 0x00000000},
			dr{ne: 0x5c4e00005c54, re: 0x0606, si: 0x00000000, sm: -0x0001, me: 0x7970000079b},
			dr{ne: 0x5caa00005cb1, re: -0x0001, si: 0x5cb100005cb6, sm: 0x079b, me: 0x00000000},
			dr{ne: 0x5cc700005ccf, re: 0x060b, si: 0x00000000, sm: 0x079c, me: 0x00000000},
			dr{ne: 0x5ccf00005cd7, re: 0x060c, si: 0x00000000, sm: -0x0001, me: 0x79d000007ac},
			dr{ne: 0x5d2900005d2e, re: 0x061c, si: 0x00000000, sm: -0x0001, me: 0x7ac000007af},
			dr{ne: 0x5d4600005d4c, re: 0x0620, si: 0x00000000, sm: 0x07af, me: 0x00000000},
			dr{ne: 0x5d4c00005d55, re: 0x0621, si: 0x00000000, sm: -0x0001, me: 0x7b0000007b7},
			dr{ne: 0x5dab00005db8, re: 0x0628, si: 0x00000000, sm: -0x0001, me: 0x7b7000007b9},
			dr{ne: 0x5dca00005dcf, re: 0x062a, si: 0x00000000, sm: 0x07b9, me: 0x00000000},
			dr{ne: 0x5dcf00005dd3, re: 0x062b, si: 0x00000000, sm: 0x07ba, me: 0x00000000},
			dr{ne: 0x5dd300005ddb, re: 0x062c, si: 0x00000000, sm: -0x0001, me: 0x7bb000007d2},
			dr{ne: 0x5ee500005eea, re: 0x062d, si: 0x00000000, sm: 0x07d2, me: 0x00000000},
			dr{ne: 0x5efd00005f01, re: 0x062e, si: 0x00000000, sm: -0x0001, me: 0x7d3000007f2},
			dr{ne: 0x60720000607a, re: 0x063e, si: 0x00000000, sm: -0x0001, me: 0x7f2000007f4},
			dr{ne: 0x607e00006083, re: 0x0641, si: 0x00000000, sm: 0x07f4, me: 0x00000000},
			dr{ne: 0x60830000608a, re: 0x0642, si: 0x00000000, sm: 0x07f5, me: 0x00000000},
			dr{ne: 0x608a00006093, re: 0x0643, si: 0x00000000, sm: -0x0001, me: 0x7f6000007f7},
			dr{ne: 0x6097000060a1, re: 0x0645, si: 0x00000000, sm: -0x0001, me: 0x7f7000007f9},
			dr{ne: 0x60b1000060b5, re: -0x0001, si: 0x60b1000060b5, sm: -0x0001, me: 0x7f9000007fb},
			dr{ne: 0x60b5000060bc, re: 0x064a, si: 0x00000000, sm: -0x0001, me: 0x7fb000007fd},
			dr{ne: 0x60bc000060c4, re: 0x064d, si: 0x00000000, sm: -0x0001, me: 0x7fd000007fe},
			dr{ne: 0x60f1000060f9, re: 0x064e, si: 0x00000000, sm: -0x0001, me: 0x7fe00000800},
			dr{ne: 0x61070000610f, re: 0x0651, si: 0x00000000, sm: -0x0001, me: 0x80000000805},
			dr{ne: 0x613000006137, re: 0x0657, si: 0x00000000, sm: -0x0001, me: 0x80500000809},
			dr{ne: 0x615f00006165, re: 0x065a, si: 0x00000000, sm: -0x0001, me: 0x8090000080c},
			dr{ne: 0x61860000618d, re: 0x065c, si: 0x00000000, sm: -0x0001, me: 0x80c00000811},
			dr{ne: 0x61e2000061e6, re: 0x0661, si: 0x00000000, sm: -0x0001, me: 0x81100000812},
			dr{ne: 0x61ec000061f5, re: 0x0663, si: 0x00000000, sm: -0x0001, me: 0x81200000818},
			dr{ne: 0x62970000629f, re: 0x0664, si: 0x00000000, sm: 0x0818, me: 0x00000000},
			dr{ne: 0x62a5000062ab, re: 0x0665, si: 0x00000000, sm: 0x0819, me: 0x00000000},
			dr{ne: 0x62ab000062b1, re: 0x0666, si: 0x00000000, sm: -0x0001, me: 0x81a0000082f},
			dr{ne: 0x636200006368, re: 0x067a, si: 0x00000000, sm: -0x0001, me: 0x82f00000831},
			dr{ne: 0x638000006384, re: 0x067c, si: 0x00000000, sm: 0x0831, me: 0x00000000},
			dr{ne: 0x638400006388, re: 0x067d, si: 0x00000000, sm: -0x0001, me: 0x83200000834},
			dr{ne: 0x638c00006390, re: 0x0680, si: 0x00000000, sm: -0x0001, me: 0x83400000836},
			dr{ne: 0x63950000639e, re: 0x0683, si: 0x00000000, sm: -0x0001, me: 0x8360000083c},
			dr{ne: 0x63f7000063fd, re: 0x0685, si: 0x00000000, sm: 0x083c, me: 0x00000000},
			dr{ne: 0x63fd00006401, re: -0x0001, si: 0x640100006406, sm: -0x0001, me: 0x83d0000083e},
			dr{ne: 0x640f00006415, re: -0x0001, si: 0x640f00006415, sm: -0x0001, me: 0x83e00000840},
			dr{ne: 0x64280000642b, re: 0x0689, si: 0x00000000, sm: -0x0001, me: 0x84000000847},
			dr{ne: 0x64a8000064ab, re: 0x068a, si: 0x00000000, sm: -0x0001, me: 0x8470000084c},
			dr{ne: 0x64da000064dd, re: 0x068b, si: 0x00000000, sm: -0x0001, me: 0x84c00000850},
			dr{ne: 0x651a0000651f, re: 0x068e, si: 0x00000000, sm: -0x0001, me: 0x85000000852},
			dr{ne: 0x65260000652f, re: 0x0691, si: 0x00000000, sm: 0x0852, me: 0x00000000},
			dr{ne: 0x652f00006537, re: -0x0001, si: 0x65370000653f, sm: 0x0853, me: 0x00000000},
			dr{ne: 0x654800006551, re: 0x0692, si: 0x00000000, sm: 0x0854, me: 0x00000000},
			dr{ne: 0x655100006557, re: 0x0693, si: 0x00000000, sm: 0x0855, me: 0x00000000},
			dr{ne: 0x65570000655d, re: 0x0694, si: 0x00000000, sm: 0x0856, me: 0x00000000},
			dr{ne: 0x65620000656c, re: 0x0695, si: 0x00000000, sm: 0x0857, me: 0x00000000},
			dr{ne: 0x656c00006575, re: 0x0696, si: 0x00000000, sm: 0x0858, me: 0x00000000},
			dr{ne: 0x657500006579, re: 0x0697, si: 0x00000000, sm: -0x0001, me: 0x8590000085e},
			dr{ne: 0x65a6000065aa, re: 0x069a, si: 0x00000000, sm: -0x0001, me: 0x85e0000086a},
			dr{ne: 0x666300006667, re: 0x069d, si: 0x00000000, sm: -0x0001, me: 0x86a0000086b},
			dr{ne: 0x66720000667b, re: 0x069f, si: 0x00000000, sm: -0x0001, me: 0x86b0000086d},
			dr{ne: 0x667b00006681, re: 0x06a2, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x66810000668f, re: 0x06a3, si: 0x00000000, sm: -0x0001, me: 0x86d0000087c},
			dr{ne: 0x67480000674b, re: 0x06b3, si: 0x00000000, sm: -0x0001, me: 0x87c000008e6},
			dr{ne: 0x6b8200006b87, re: 0x06f1, si: 0x00000000, sm: -0x0001, me: 0x8e6000008e9},
			dr{ne: 0x6b8700006b8c, re: 0x06f5, si: 0x00000000, sm: 0x08e9, me: 0x00000000},
			dr{ne: 0x6b8c00006b94, re: 0x06f6, si: 0x00000000, sm: -0x0001, me: 0x8ea000008ec},
			dr{ne: 0x6b9f00006ba6, re: 0x06f9, si: 0x00000000, sm: -0x0001, me: 0x8ec000008ed},
			dr{ne: 0x6bb000006bb6, re: 0x06fb, si: 0x00000000, sm: 0x08ed, me: 0x00000000},
			dr{ne: 0x6bb600006bc1, re: 0x06fc, si: 0x00000000, sm: -0x0001, me: 0x8ee000008f1},
			dr{ne: 0x6bd400006bda, re: 0x0700, si: 0x00000000, sm: -0x0001, me: 0x8f1000008f2},
			dr{ne: 0x6be800006bef, re: 0x0702, si: 0x00000000, sm: -0x0001, me: 0x8f2000008f3},
			dr{ne: 0x6bfa00006c01, re: 0x0704, si: 0x00000000, sm: -0x0001, me: 0x8f300000905},
			dr{ne: 0x6cff00006d06, re: 0x070a, si: 0x00000000, sm: -0x0001, me: 0x90500000935},
			dr{ne: 0x6fd700006fdc, re: 0x073a, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x6fdc00006fe3, re: 0x073b, si: 0x00000000, sm: -0x0001, me: 0x93500000937},
			dr{ne: 0x6fef00006ff5, re: -0x0001, si: 0x6fef00006ff5, sm: -0x0001, me: 0x9370000093b},
			dr{ne: 0x700f00007016, re: 0x0740, si: 0x00000000, sm: -0x0001, me: 0x93b0000093d},
			dr{ne: 0x70250000702b, re: 0x0743, si: 0x00000000, sm: 0x093d, me: 0x00000000},
			dr{ne: 0x703100007036, re: 0x0744, si: 0x00000000, sm: -0x0001, me: 0x93e00000940},
			dr{ne: 0x706b00007071, re: 0x0746, si: 0x00000000, sm: 0x0940, me: 0x00000000},
			dr{ne: 0x707a0000707d, re: 0x0747, si: 0x00000000, sm: -0x0001, me: 0x94100000944},
			dr{ne: 0x70870000708f, re: 0x074a, si: 0x00000000, sm: -0x0001, me: 0x94400000959},
			dr{ne: 0x718100007193, re: 0x075c, si: 0x00000000, sm: 0x0959, me: 0x00000000},
			dr{ne: 0x7198000071a3, re: 0x075d, si: 0x00000000, sm: -0x0001, me: 0x95a0000095d},
			dr{ne: 0x71b0000071b7, re: -0x0001, si: 0x71b7000071be, sm: -0x0001, me: 0x95d0000095e},
			dr{ne: 0x71c7000071cd, re: 0x0761, si: 0x00000000, sm: 0x095e, me: 0x00000000},
			dr{ne: 0x71cd000071db, re: 0x0762, si: 0x00000000, sm: -0x0001, me: 0x95f0000096e},
			dr{ne: 0x728d00007294, re: 0x0765, si: 0x00000000, sm: 0x096e, me: 0x00000000},
			dr{ne: 0x72940000729a, re: 0x0766, si: 0x00000000, sm: -0x0001, me: 0x96f00000972},
			dr{ne: 0x72a3000072a9, re: 0x0769, si: 0x00000000, sm: 0x0972, me: 0x00000000},
			dr{ne: 0x72a9000072ad, re: 0x076a, si: 0x00000000, sm: -0x0001, me: 0x9730000097e},
			dr{ne: 0x732200007327, re: 0x0770, si: 0x00000000, sm: 0x097e, me: 0x00000000},
			dr{ne: 0x73270000732c, re: 0x0771, si: 0x00000000, sm: -0x0001, me: 0x97f00000980},
			dr{ne: 0x732f00007337, re: 0x0773, si: 0x00000000, sm: -0x0001, me: 0x98000000984},
			dr{ne: 0x735000007357, re: 0x0777, si: 0x00000000, sm: -0x0001, me: 0x9840000098e},
			dr{ne: 0x739f000073a3, re: 0x077e, si: 0x00000000, sm: -0x0001, me: 0x98e00000992},
			dr{ne: 0x73af000073b5, re: 0x0783, si: 0x00000000, sm: -0x0001, me: 0x99200000996},
			dr{ne: 0x73c0000073c6, re: 0x0788, si: 0x00000000, sm: -0x0001, me: 0x996000009a7},
			dr{ne: 0x743000007436, re: 0x0796, si: 0x00000000, sm: -0x0001, me: 0x9a7000009aa},
			dr{ne: 0x743f00007447, re: 0x079a, si: 0x00000000, sm: 0x09aa, me: 0x00000000},
			dr{ne: 0x744e00007456, re: 0x079b, si: 0x00000000, sm: -0x0001, me: 0x9ab000009ad},
			dr{ne: 0x74680000746f, re: -0x0001, si: 0x746f0000747b, sm: 0x09ad, me: 0x00000000},
			dr{ne: 0x747d00007487, re: -0x0001, si: 0x748700007490, sm: -0x0001, me: 0x9ae000009af},
			dr{ne: 0x74990000749d, re: 0x079d, si: 0x00000000, sm: -0x0001, me: 0x9af000009b1},
			dr{ne: 0x749d000074a1, re: 0x07a0, si: 0x00000000, sm: -0x0001, me: 0x9b1000009bc},
			dr{ne: 0x74b9000074bf, re: 0x07ac, si: 0x00000000, sm: -0x0001, me: 0x9bc000009d8},
			dr{ne: 0x75d3000075db, re: 0x07b7, si: 0x00000000, sm: -0x0001, me: 0x9d8000009e0},
			dr{ne: 0x75ff00007606, re: 0x07c0, si: 0x00000000, sm: -0x0001, me: 0x9e0000009e2},
			dr{ne: 0x76060000760b, re: 0x07c2, si: 0x00000000, sm: 0x09e2, me: 0x00000000},
			dr{ne: 0x760b00007614, re: -0x0001, si: 0x76140000761d, sm: -0x0001, me: 0x9e3000009e5},
			dr{ne: 0x761d00007622, re: 0x07c5, si: 0x00000000, sm: 0x09e5, me: 0x00000000},
			dr{ne: 0x76290000762d, re: 0x07c6, si: 0x00000000, sm: -0x0001, me: 0x9e6000009e9},
			dr{ne: 0x764900007651, re: 0x07c8, si: 0x00000000, sm: -0x0001, me: 0x9e9000009ea},
			dr{ne: 0x765d00007663, re: 0x07ca, si: 0x00000000, sm: -0x0001, me: 0x9ea000009ec},
			dr{ne: 0x76780000767e, re: 0x07cc, si: 0x00000000, sm: -0x0001, me: 0x9ec000009ee},
			dr{ne: 0x767e00007685, re: 0x07cf, si: 0x00000000, sm: -0x0001, me: 0x9ee000009f4},
			dr{ne: 0x76d4000076d8, re: 0x07d3, si: 0x00000000, sm: -0x0001, me: 0x9f4000009f6},
			dr{ne: 0x76ed000076f0, re: 0x07d6, si: 0x00000000, sm: -0x0001, me: 0x9f6000009f9},
			dr{ne: 0x770000007705, re: 0x07da, si: 0x00000000, sm: 0x09f9, me: 0x00000000},
			dr{ne: 0x770500007709, re: 0x07db, si: 0x00000000, sm: -0x0001, me: 0x9fa000009fb},
			dr{ne: 0x770f00007714, re: 0x07dd, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x771400007716, re: 0x07de, si: 0x00000000, sm: -0x0001, me: 0x9fb00000a0a},
			dr{ne: 0x77d8000077db, re: 0x07e9, si: 0x00000000, sm: -0x0001, me: 0xa0a00000a5a},
			dr{ne: 0x7a7800007a7e, re: 0x0831, si: 0x00000000, sm: -0x0001, me: 0xa5a00000a5c},
			dr{ne: 0x7a8200007a87, re: 0x0834, si: 0x00000000, sm: -0x0001, me: 0xa5c00000a71},
			dr{ne: 0x7b3400007b3a, re: -0x0001, si: 0x7b3400007b3a, sm: -0x0001, me: 0xa7100000a72},
			dr{ne: 0x7b4200007b48, re: 0x083f, si: 0x00000000, sm: -0x0001, me: 0xa7200000a73},
			dr{ne: 0x7b5400007b5d, re: 0x0841, si: 0x00000000, sm: -0x0001, me: 0xa7300000a7a},
			dr{ne: 0x7b9300007b9d, re: 0x0844, si: 0x00000000, sm: 0x0a7a, me: 0x00000000},
			dr{ne: 0x7ba600007bab, re: -0x0001, si: 0x7ba600007bab, sm: -0x0001, me: 0xa7b00000a7d},
			dr{ne: 0x7bab00007bb0, re: 0x0847, si: 0x00000000, sm: 0x0a7d, me: 0x00000000},
			dr{ne: 0x7bb000007bb6, re: 0x0848, si: 0x00000000, sm: 0x0a7e, me: 0x00000000},
			dr{ne: 0x7bb600007bb8, re: 0x0849, si: 0x00000000, sm: -0x0001, me: 0xa7f00000a81},
			dr{ne: 0x7bc800007bcf, re: 0x084c, si: 0x00000000, sm: -0x0001, me: 0xa8100000a83},
			dr{ne: 0x7be700007bef, re: 0x084d, si: 0x00000000, sm: 0x0a83, me: 0x00000000},
			dr{ne: 0x7bf600007bfb, re: 0x084e, si: 0x00000000, sm: -0x0001, me: 0xa8400000a86},
			dr{ne: 0x7c0b00007c11, re: 0x0851, si: 0x00000000, sm: 0x0a86, me: 0x00000000},
			dr{ne: 0x7c1100007c1b, re: 0x0852, si: 0x00000000, sm: -0x0001, me: 0xa8700000aaa},
			dr{ne: 0x7d5800007d61, re: 0x0876, si: 0x00000000, sm: -0x0001, me: 0xaaa00000aad},
			dr{ne: 0x7d6600007d6d, re: 0x087a, si: 0x00000000, sm: -0x0001, me: 0xaad00000ae1},
			dr{ne: 0x7f3300007f3a, re: 0x089f, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x7f3a00007f40, re: 0x08a0, si: 0x00000000, sm: 0x0ae1, me: 0x00000000},
			dr{ne: 0x7f4000007f48, re: 0x08a1, si: 0x00000000, sm: -0x0001, me: 0xae200000ae5},
			dr{ne: 0x7f4c00007f54, re: 0x08a5, si: 0x00000000, sm: -0x0001, me: 0xae500000ae9},
			dr{ne: 0x7f7100007f77, re: 0x08aa, si: 0x00000000, sm: -0x0001, me: 0xae900000aec},
			dr{ne: 0x7f8300007f8c, re: 0x08ae, si: 0x00000000, sm: -0x0001, me: 0xaec00000aee},
			dr{ne: 0x7fa000007fa5, re: 0x08b1, si: 0x00000000, sm: -0x0001, me: 0xaee00000af1},
			dr{ne: 0x7fa500007fad, re: 0x08b5, si: 0x00000000, sm: 0x0af1, me: 0x00000000},
			dr{ne: 0x7fad00007fb2, re: 0x08b6, si: 0x00000000, sm: -0x0001, me: 0xaf200000af4},
			dr{ne: 0x7fb200007fbc, re: 0x08b9, si: 0x00000000, sm: -0x0001, me: 0xaf400000af7},
			dr{ne: 0x7fdd00007fe3, re: 0x08ba, si: 0x00000000, sm: -0x0001, me: 0xaf700000b00},
			dr{ne: 0x802a0000802d, re: 0x08c1, si: 0x00000000, sm: -0x0001, me: 0xb0000000b03},
			dr{ne: 0x804200008048, re: 0x08c5, si: 0x00000000, sm: 0x0b03, me: 0x00000000},
			dr{ne: 0x80480000804e, re: 0x08c6, si: 0x00000000, sm: -0x0001, me: 0xb0400000b05},
			dr{ne: 0x804e00008053, re: 0x08c8, si: 0x00000000, sm: -0x0001, me: 0xb0500000b06},
			dr{ne: 0x806200008068, re: 0x08ca, si: 0x00000000, sm: -0x0001, me: 0xb0600000ca3},
			dr{ne: 0x93720000937b, re: 0x0a41, si: 0x00000000, sm: -0x0001, me: 0xca300000cb3},
			dr{ne: 0x941100009417, re: 0x0a46, si: 0x00000000, sm: 0x0cb3, me: 0x00000000},
			dr{ne: 0x941e00009425, re: 0x0a47, si: 0x00000000, sm: -0x0001, me: 0xcb400000cca},
			dr{ne: 0x953200009536, re: 0x0a51, si: 0x00000000, sm: -0x0001, me: 0xcca00000ccc},
			dr{ne: 0x954c00009556, re: 0x0a52, si: 0x00000000, sm: -0x0001, me: 0xccc00000cd0},
			dr{ne: 0x958d00009597, re: 0x0a54, si: 0x00000000, sm: -0x0001, me: 0xcd000000cd4},
			dr{ne: 0x959c000095a6, re: 0x0a59, si: 0x00000000, sm: -0x0001, me: 0xcd400000ce7},
			dr{ne: 0x96370000963c, re: 0x0a6d, si: 0x00000000, sm: 0x0ce7, me: 0x00000000},
			dr{ne: 0x963c0000963f, re: 0x0a6e, si: 0x00000000, sm: -0x0001, me: 0xce800000cea},
			dr{ne: 0x963f00009644, re: 0x0a71, si: 0x00000000, sm: -0x0001, me: 0xcea00000ceb},
			dr{ne: 0x964c0000964f, re: 0x0a72, si: 0x00000000, sm: -0x0001, me: 0xceb00000cee},
			dr{ne: 0x965c0000965f, re: 0x0a76, si: 0x00000000, sm: 0x0cee, me: 0x00000000},
			dr{ne: 0x96690000966b, re: 0x0a77, si: 0x00000000, sm: -0x0001, me: 0xcef00000cf1},
			dr{ne: 0x968000009684, re: 0x0a79, si: 0x00000000, sm: -0x0001, me: 0xcf100000cf2},
			dr{ne: 0x96840000968b, re: 0x0a7b, si: 0x00000000, sm: -0x0001, me: 0xcf200000d09},
			dr{ne: 0x98c1000098cb, re: 0x0a7e, si: 0x00000000, sm: -0x0001, me: 0xd0900000d0e},
			dr{ne: 0x98dd000098e4, re: 0x0a84, si: 0x00000000, sm: -0x0001, me: 0xd0e00000d16},
			dr{ne: 0x994300009947, re: 0x0a85, si: 0x00000000, sm: -0x0001, me: 0xd1600000d18},
			dr{ne: 0x994a0000994e, re: 0x0a88, si: 0x00000000, sm: -0x0001, me: 0xd1800000d1c},
			dr{ne: 0x997200009979, re: -0x0001, si: 0x997200009979, sm: -0x0001, me: 0xd1c00000d76},
			dr{ne: 0x9c0800009c0f, re: 0x0ae3, si: 0x00000000, sm: 0x0d76, me: 0x00000000},
			dr{ne: 0x9c0f00009c14, re: 0x0ae4, si: 0x00000000, sm: 0x0d77, me: 0x00000000},
			dr{ne: 0x9c1400009c1a, re: 0x0ae5, si: 0x00000000, sm: -0x0001, me: 0xd7800000d85},
			dr{ne: 0x9c9100009c96, re: 0x0af1, si: 0x00000000, sm: 0x0d85, me: 0x00000000},
			dr{ne: 0x9c9600009ca0, re: 0x0af2, si: 0x00000000, sm: 0x0d86, me: 0x00000000},
			dr{ne: 0x9ca600009caa, re: -0x0001, si: 0x9caa00009cae, sm: -0x0001, me: 0xd8700000d8f},
			dr{ne: 0x9cf900009d01, re: 0x0afa, si: 0x00000000, sm: -0x0001, me: 0xd8f00000d97},
			dr{ne: 0x9d8000009d85, re: 0x0afd, si: 0x00000000, sm: -0x0001, me: 0xd9700000da4},
			dr{ne: 0x9e0000009e06, re: 0x0b0a, si: 0x00000000, sm: 0x0da4, me: 0x00000000},
			dr{ne: 0x9e0600009e0b, re: 0x0b0b, si: 0x00000000, sm: -0x0001, me: 0xda500000da7},
			dr{ne: 0x9e1800009e1d, re: 0x0b0d, si: 0x00000000, sm: -0x0001, me: 0xda700000da9},
			dr{ne: 0x9e1d00009e21, re: 0x0b10, si: 0x00000000, sm: -0x0001, me: 0xda900000db7},
			dr{ne: 0x9f0100009f09, re: 0x0b15, si: 0x00000000, sm: -0x0001, me: 0xdb700000db9},
			dr{ne: 0x9f1500009f1a, re: 0x0b18, si: 0x00000000, sm: 0x0db9, me: 0x00000000},
			dr{ne: 0x9f1a00009f1d, re: 0x0b19, si: 0x00000000, sm: 0x0dba, me: 0x00000000},
			dr{ne: 0x9f1d00009f20, re: 0x0b1a, si: 0x00000000, sm: -0x0001, me: 0xdbb00000dbe},
			dr{ne: 0x9f2000009f24, re: 0x0b1e, si: 0x00000000, sm: -0x0001, me: 0xdbe00000dc0},
			dr{ne: 0x9f3700009f3b, re: 0x0b1f, si: 0x00000000, sm: -0x0001, me: 0xdc000000dc2},
			dr{ne: 0x9f4800009f4c, re: 0x0b22, si: 0x00000000, sm: -0x0001, me: 0xdc200000dc4},
			dr{ne: 0x9f5a00009f5f, re: 0x0b24, si: 0x00000000, sm: 0x0dc4, me: 0x00000000},
			dr{ne: 0x9f6400009f69, re: 0x0b25, si: 0x00000000, sm: -0x0001, me: 0xdc500000dc8},
			dr{ne: 0x9f7300009f78, re: 0x0b29, si: 0x00000000, sm: -0x0001, me: 0xdc800000dde},
			dr{ne: 0xa0190000a01c, re: 0x0b40, si: 0x00000000, sm: -0x0001, me: 0xdde00000ddf},
			dr{ne: 0xa0290000a02d, re: 0x0b42, si: 0x00000000, sm: -0x0001, me: 0xddf00000de3},
			dr{ne: 0xa0680000a06d, re: -0x0001, si: 0xa0680000a06d, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xa06d0000a070, re: 0x0b47, si: 0x00000000, sm: -0x0001, me: 0xde300000de4},
			dr{ne: 0xa0700000a076, re: 0x0b49, si: 0x00000000, sm: 0x0de4, me: 0x00000000},
			dr{ne: 0xa07e0000a08d, re: -0x0001, si: 0xa08d0000a096, sm: -0x0001, me: 0xde500000de6},
			dr{ne: 0xa0a20000a0a7, re: 0x0b4a, si: 0x00000000, sm: -0x0001, me: 0xde600000dee},
			dr{ne: 0xa1020000a109, re: 0x0b4f, si: 0x00000000, sm: -0x0001, me: 0xdee00000df1},
			dr{ne: 0xa1140000a119, re: 0x0b52, si: 0x00000000, sm: 0x0df1, me: 0x00000000},
			dr{ne: 0xa1190000a11d, re: 0x0b53, si: 0x00000000, sm: -0x0001, me: 0xdf200000df4},
			dr{ne: 0xa12c0000a134, re: 0x0b56, si: 0x00000000, sm: -0x0001, me: 0xdf400000df6},
			dr{ne: 0xa13c0000a140, re: 0x0b59, si: 0x00000000, sm: -0x0001, me: 0xdf600000df8},
			dr{ne: 0xa1400000a144, re: 0x0b5c, si: 0x00000000, sm: -0x0001, me: 0xdf800000dfa},
			dr{ne: 0xa1440000a148, re: 0x0b5f, si: 0x00000000, sm: -0x0001, me: 0xdfa00000dfc},
			dr{ne: 0xa14d0000a152, re: 0x0b62, si: 0x00000000, sm: -0x0001, me: 0xdfc00000dfe},
			dr{ne: 0xa1670000a16e, re: 0x0b64, si: 0x00000000, sm: 0x0dfe, me: 0x00000000},
			dr{ne: 0xa16e0000a172, re: 0x0b65, si: 0x00000000, sm: 0x0dff, me: 0x00000000},
			dr{ne: 0xa1720000a178, re: 0x0b66, si: 0x00000000, sm: 0x0e00, me: 0x00000000},
			dr{ne: 0xa1830000a189, re: 0x0b67, si: 0x00000000, sm: -0x0001, me: 0xe0100000e0b},
			dr{ne: 0xa2160000a21b, re: 0x0b6c, si: 0x00000000, sm: -0x0001, me: 0xe0b00000e11},
			dr{ne: 0xa2710000a278, re: 0x0b6d, si: 0x00000000, sm: -0x0001, me: 0xe1100000e39},
			dr{ne: 0xa4980000a49c, re: 0x0b7d, si: 0x00000000, sm: -0x0001, me: 0xe3900000e3e},
			dr{ne: 0xa4ab0000a4b0, re: 0x0b83, si: 0x00000000, sm: -0x0001, me: 0xe3e00000e43},
			dr{ne: 0xa4e10000a4e7, re: -0x0001, si: 0xa4e70000a4ee, sm: -0x0001, me: 0xe4300000e44},
			dr{ne: 0xa4fa0000a50b, re: 0x0b87, si: 0x00000000, sm: -0x0001, me: 0xe4400000e4c},
			dr{ne: 0xa56f0000a576, re: 0x0b8a, si: 0x00000000, sm: -0x0001, me: 0xe4c00000e53},
			dr{ne: 0xa5890000a591, re: 0x0b92, si: 0x00000000, sm: 0x0e53, me: 0x00000000},
			dr{ne: 0xa5a40000a5a9, re: 0x0b93, si: 0x00000000, sm: -0x0001, me: 0xe5400000e5b},
			dr{ne: 0xa6060000a60d, re: -0x0001, si: 0xa6060000a60d, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xa60d0000a614, re: 0x0b9a, si: 0x00000000, sm: -0x0001, me: 0xe5b00000e5d},
			dr{ne: 0xa6140000a619, re: 0x0b9d, si: 0x00000000, sm: -0x0001, me: 0xe5d00000e5e},
			dr{ne: 0xa6230000a627, re: 0x0b9f, si: 0x00000000, sm: -0x0001, me: 0xe5e00000e61},
			dr{ne: 0xa62d0000a633, re: 0x0ba3, si: 0x00000000, sm: -0x0001, me: 0xe6100000e63},
			dr{ne: 0xa6330000a639, re: 0x0ba6, si: 0x00000000, sm: -0x0001, me: 0xe6300000e71},
			dr{ne: 0xa65e0000a663, re: 0x0bb5, si: 0x00000000, sm: -0x0001, me: 0xe7100000e77},
			dr{ne: 0xa6960000a69b, re: -0x0001, si: 0xa6960000a69b, sm: -0x0001, me: 0xe7700000e7a},
			dr{ne: 0xa69b0000a69f, re: 0x0bbe, si: 0x00000000, sm: -0x0001, me: 0xe7a00000e7c},
			dr{ne: 0xa69f0000a6a4, re: 0x0bc1, si: 0x00000000, sm: -0x0001, me: 0xe7c00000e82},
			dr{ne: 0xa6d80000a6de, re: 0x0bc5, si: 0x00000000, sm: -0x0001, me: 0xe8200000e8c},
			dr{ne: 0xa71b0000a721, re: -0x0001, si: 0xa71b0000a721, sm: -0x0001, me: 0xe8c00000e8e},
			dr{ne: 0xa7210000a728, re: 0x0bd2, si: 0x00000000, sm: 0x0e8e, me: 0x00000000},
			dr{ne: 0xa7280000a72e, re: 0x0bd3, si: 0x00000000, sm: 0x0e8f, me: 0x00000000},
			dr{ne: 0xa7390000a73f, re: 0x0bd4, si: 0x00000000, sm: 0x0e90, me: 0x00000000},
			dr{ne: 0xa73f0000a745, re: 0x0bd5, si: 0x00000000, sm: 0x0e91, me: 0x00000000},
			dr{ne: 0xa7450000a751, re: 0x0bd6, si: 0x00000000, sm: -0x0001, me: 0xe9200000ea9},
			dr{ne: 0xa83e0000a844, re: 0x0beb, si: 0x00000000, sm: 0x0ea9, me: 0x00000000},
			dr{ne: 0xa8440000a848, re: 0x0bec, si: 0x00000000, sm: 0x0eaa, me: 0x00000000},
			dr{ne: 0xa8480000a84d, re: 0x0bed, si: 0x00000000, sm: -0x0001, me: 0xeab00000ead},
			dr{ne: 0xa84d0000a852, re: -0x0001, si: 0xa84d0000a852, sm: -0x0001, me: 0xead00000eaf},
			dr{ne: 0xa85e0000a865, re: 0x0bf2, si: 0x00000000, sm: -0x0001, me: 0xeaf00000ef7},
			dr{ne: 0xab130000ab19, re: 0x0c33, si: 0x00000000, sm: 0x0ef7, me: 0x00000000},
			dr{ne: 0xab190000ab1d, re: 0x0c34, si: 0x00000000, sm: -0x0001, me: 0xef800000efc},
			dr{ne: 0xab540000ab59, re: 0x0c35, si: 0x00000000, sm: -0x0001, me: 0xefc00000efe},
			dr{ne: 0xab700000ab74, re: -0x0001, si: 0xab700000ab74, sm: -0x0001, me: 0xefe00000eff},
			dr{ne: 0xab740000ab77, re: 0x0c39, si: 0x00000000, sm: 0x0eff, me: 0x00000000},
			dr{ne: 0xab770000ab7c, re: 0x0c3a, si: 0x00000000, sm: -0x0001, me: 0xf0000000f02},
			dr{ne: 0xab7c0000ab7e, re: 0x0c3d, si: 0x00000000, sm: -0x0001, me: 0xf020000100d},
			dr{ne: 0xb53d0000b543, re: 0x0ce3, si: 0x00000000, sm: 0x100d, me: 0x00000000},
			dr{ne: 0xb5430000b54c, re: 0x0ce4, si: 0x00000000, sm: -0x0001, me: 0x100e00001011},
			dr{ne: 0xb5630000b566, re: 0x0ce7, si: 0x00000000, sm: -0x0001, me: 0x101100001032},
			dr{ne: 0xb71e0000b728, re: 0x0ceb, si: 0x00000000, sm: -0x0001, me: 0x103200001035},
			dr{ne: 0xb7470000b74d, re: 0x0cee, si: 0x00000000, sm: -0x0001, me: 0x103500001037},
			dr{ne: 0xb75f0000b764, re: 0x0cf0, si: 0x00000000, sm: -0x0001, me: 0x10370000103d},
			dr{ne: 0xb7a00000b7a4, re: 0x0cf5, si: 0x00000000, sm: -0x0001, me: 0x103d0000104c},
			dr{ne: 0xb87e0000b882, re: 0x0d01, si: 0x00000000, sm: -0x0001, me: 0x104c00001074},
			dr{ne: 0xb99b0000b9a1, re: 0x0d26, si: 0x00000000, sm: -0x0001, me: 0x107400001078},
			dr{ne: 0xb9c30000b9c8, re: 0x0d2a, si: 0x00000000, sm: -0x0001, me: 0x107800001086},
			dr{ne: 0xba160000ba22, re: 0x0d38, si: 0x00000000, sm: -0x0001, me: 0x10860000108d},
			dr{ne: 0xba7b0000ba81, re: 0x0d3a, si: 0x00000000, sm: -0x0001, me: 0x108d0000109d},
			dr{ne: 0xbb0f0000bb16, re: 0x0d48, si: 0x00000000, sm: -0x0001, me: 0x109d0000109f},
			dr{ne: 0xbb320000bb36, re: 0x0d4b, si: 0x00000000, sm: 0x109f, me: 0x00000000},
			dr{ne: 0xbb360000bb3a, re: 0x0d4c, si: 0x00000000, sm: 0x10a0, me: 0x00000000},
			dr{ne: 0xbb400000bb47, re: -0x0001, si: 0xbb400000bb47, sm: -0x0001, me: 0x10a1000010a2},
			dr{ne: 0xbb470000bb4c, re: 0x0d4e, si: 0x00000000, sm: -0x0001, me: 0x10a2000010a4},
			dr{ne: 0xbb680000bb6e, re: 0x0d50, si: 0x00000000, sm: -0x0001, me: 0x10a40000113f},
			dr{ne: 0xc16f0000c175, re: 0x0dce, si: 0x00000000, sm: -0x0001, me: 0x113f00001144},
			dr{ne: 0xc1c70000c1ce, re: 0x0dd1, si: 0x00000000, sm: -0x0001, me: 0x114400001147},
			dr{ne: 0xc1e40000c1e9, re: 0x0dd4, si: 0x00000000, sm: 0x1147, me: 0x00000000},
			dr{ne: 0xc1f10000c1f7, re: 0x0dd5, si: 0x00000000, sm: -0x0001, me: 0x114800001156},
			dr{ne: 0xc2840000c28c, re: 0x0dd8, si: 0x00000000, sm: -0x0001, me: 0x11560000116d},
			dr{ne: 0xc46d0000c475, re: 0x0ddb, si: 0x00000000, sm: 0x116d, me: 0x00000000},
			dr{ne: 0xc4750000c47d, re: 0x0ddc, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xc47d0000c484, re: 0x0ddd, si: 0x00000000, sm: -0x0001, me: 0x116e00001170},
			dr{ne: 0xc4840000c48a, re: 0x0de0, si: 0x00000000, sm: 0x1170, me: 0x00000000},
			dr{ne: 0xc48f0000c494, re: 0x0de1, si: 0x00000000, sm: -0x0001, me: 0x117100001176},
			dr{ne: 0xc4a50000c4b5, re: -0x0001, si: 0xc4a50000c4b5, sm: -0x0001, me: 0x117600001177},
			dr{ne: 0xc4c10000c4c8, re: 0x0de8, si: 0x00000000, sm: -0x0001, me: 0x117700001199},
			dr{ne: 0xc6330000c63a, re: 0x0e04, si: 0x00000000, sm: 0x1199, me: 0x00000000},
			dr{ne: 0xc63a0000c63f, re: 0x0e05, si: 0x00000000, sm: -0x0001, me: 0x119a0000119e},
			dr{ne: 0xc6500000c654, re: 0x0e0a, si: 0x00000000, sm: -0x0001, me: 0x119e000011a0},
			dr{ne: 0xc6540000c659, re: 0x0e0d, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xc6590000c660, re: 0x0e0e, si: 0x00000000, sm: -0x0001, me: 0x11a0000011a2},
			dr{ne: 0xc66d0000c673, re: 0x0e10, si: 0x00000000, sm: -0x0001, me: 0x11a2000011a7},
			dr{ne: 0xc69f0000c6a5, re: 0x0e12, si: 0x00000000, sm: -0x0001, me: 0x11a7000011a9},
			dr{ne: 0xc6ad0000c6b2, re: 0x0e15, si: 0x00000000, sm: -0x0001, me: 0x11a9000011c2},
			dr{ne: 0xc7d70000c7dc, re: 0x0e18, si: 0x00000000, sm: -0x0001, me: 0x11c2000011c6},
			dr{ne: 0xc7f60000c7fa, re: 0x0e1c, si: 0x00000000, sm: 0x11c6, me: 0x00000000},
			dr{ne: 0xc7fa0000c7fe, re: 0x0e1d, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xc7fe0000c807, re: 0x0e1e, si: 0x00000000, sm: -0x0001, me: 0x11c7000011ca},
			dr{ne: 0xc8130000c817, re: 0x0e22, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xc8170000c81b, re: 0x0e23, si: 0x00000000, sm: -0x0001, me: 0x11ca000011cc},
			dr{ne: 0xc81b0000c81e, re: 0x0e26, si: 0x00000000, sm: 0x11cc, me: 0x00000000},
			dr{ne: 0xc81e0000c822, re: 0x0e27, si: 0x00000000, sm: -0x0001, me: 0x11cd000011cf},
			dr{ne: 0xc8300000c834, re: 0x0e2a, si: 0x00000000, sm: -0x0001, me: 0x11cf000011d1},
			dr{ne: 0xc8340000c839, re: 0x0e2d, si: 0x00000000, sm: -0x0001, me: 0x11d1000011d3},
			dr{ne: 0xc8390000c83c, re: 0x0e30, si: 0x00000000, sm: -0x0001, me: 0x11d30000120a},
			dr{ne: 0xca640000ca67, re: 0x0e68, si: 0x00000000, sm: 0x120a, me: 0x00000000},
			dr{ne: 0xca670000ca6a, re: 0x0e69, si: 0x00000000, sm: -0x0001, me: 0x120b0000120d},
			dr{ne: 0xca720000ca75, re: 0x0e6b, si: 0x00000000, sm: -0x0001, me: 0x120d0000121d},
			dr{ne: 0xcb520000cb55, re: -0x0001, si: 0xcb550000cb59, sm: -0x0001, me: 0x121d00001220},
			dr{ne: 0xcb7b0000cb80, re: -0x0001, si: 0xcb800000cb87, sm: 0x1220, me: 0x00000000},
			dr{ne: 0xcb900000cb96, re: 0x0e79, si: 0x00000000, sm: 0x1221, me: 0x00000000},
			dr{ne: 0xcba00000cba4, re: 0x0e7a, si: 0x00000000, sm: -0x0001, me: 0x122200001223},
			dr{ne: 0xcbb70000cbbf, re: 0x0e7b, si: 0x00000000, sm: 0x1223, me: 0x00000000},
			dr{ne: 0xcbc60000cbcc, re: 0x0e7c, si: 0x00000000, sm: -0x0001, me: 0x122400001226},
			dr{ne: 0xcbdf0000cbe7, re: 0x0e7f, si: 0x00000000, sm: -0x0001, me: 0x122600001231},
			dr{ne: 0xcc380000cc3e, re: 0x0e89, si: 0x00000000, sm: 0x1231, me: 0x00000000},
			dr{ne: 0xcc3e0000cc42, re: 0x0e8a, si: 0x00000000, sm: 0x1232, me: 0x00000000},
			dr{ne: 0xcc420000cc52, re: 0x0e8b, si: 0x00000000, sm: -0x0001, me: 0x12330000123d},
			dr{ne: 0xccd30000ccd9, re: 0x0e8e, si: 0x00000000, sm: 0x123d, me: 0x00000000},
			dr{ne: 0xccd90000ccdd, re: 0x0e8f, si: 0x00000000, sm: 0x123e, me: 0x00000000},
			dr{ne: 0xccdd0000cce3, re: 0x0e90, si: 0x00000000, sm: -0x0001, me: 0x123f00001241},
			dr{ne: 0xcce80000ccef, re: 0x0e93, si: 0x00000000, sm: -0x0001, me: 0x124100001247},
			dr{ne: 0xcd170000cd21, re: 0x0e99, si: 0x00000000, sm: 0x1247, me: 0x00000000},
			dr{ne: 0xcd210000cd27, re: 0x0e9a, si: 0x00000000, sm: -0x0001, me: 0x12480000124b},
			dr{ne: 0xcd430000cd49, re: 0x0e9d, si: 0x00000000, sm: -0x0001, me: 0x124b0000124d},
			dr{ne: 0xcd4d0000cd54, re: 0x0ea0, si: 0x00000000, sm: -0x0001, me: 0x124d00001250},
			dr{ne: 0xcd5b0000cd62, re: 0x0ea4, si: 0x00000000, sm: -0x0001, me: 0x125000001252},
			dr{ne: 0xcd620000cd69, re: 0x0ea7, si: 0x00000000, sm: -0x0001, me: 0x125200001263},
			dr{ne: 0xce560000ce5a, re: 0x0eb2, si: 0x00000000, sm: -0x0001, me: 0x126300001266},
			dr{ne: 0xce610000ce6b, re: 0x0eb6, si: 0x00000000, sm: -0x0001, me: 0x126600001267},
			dr{ne: 0xce710000ce76, re: 0x0eb8, si: 0x00000000, sm: -0x0001, me: 0x12670000126e},
			dr{ne: 0xcefa0000cf00, re: 0x0ec0, si: 0x00000000, sm: -0x0001, me: 0x126e0000127b},
			dr{ne: 0xcf630000cf6b, re: 0x0ece, si: 0x00000000, sm: -0x0001, me: 0x127b000012b1},
			dr{ne: 0xd3480000d34e, re: 0x0f02, si: 0x00000000, sm: -0x0001, me: 0x12b1000012b8},
			dr{ne: 0xd35f0000d366, re: 0x0f0a, si: 0x00000000, sm: -0x0001, me: 0x12b8000012bf},
			dr{ne: 0xd39e0000d3a3, re: 0x0f10, si: 0x00000000, sm: -0x0001, me: 0x12bf000012ca},
			dr{ne: 0xd3ae0000d3b3, re: 0x0f1c, si: 0x00000000, sm: -0x0001, me: 0x12ca000012f3},
			dr{ne: 0xd4650000d46c, re: 0x0f45, si: 0x00000000, sm: -0x0001, me: 0x12f3000012f6},
			dr{ne: 0xd4870000d48c, re: 0x0f49, si: 0x00000000, sm: -0x0001, me: 0x12f6000012fa},
			dr{ne: 0xd4c20000d4c7, re: 0x0f4e, si: 0x00000000, sm: -0x0001, me: 0x12fa000012fe},
			dr{ne: 0xd4e80000d4f0, re: 0x0f53, si: 0x00000000, sm: -0x0001, me: 0x12fe00001322},
			dr{ne: 0xe6000000ef, re: 0x0f71, si: 0x00000000, sm: -0x0001, me: 0x13220000133f},
			dr{ne: 0xd7fc0000d805, re: 0x0f80, si: 0x00000000, sm: 0x133f, me: 0x00000000},
			dr{ne: 0xd80e0000d813, re: 0x0f81, si: 0x00000000, sm: -0x0001, me: 0x13400000134b},
			dr{ne: 0xd8680000d86d, re: 0x0f8d, si: 0x00000000, sm: -0x0001, me: 0x134b0000134e},
			dr{ne: 0xd8930000d896, re: 0x0f91, si: 0x00000000, sm: -0x0001, me: 0x134e00001351},
			dr{ne: 0xd8ca0000d8cf, re: 0x0f94, si: 0x00000000, sm: -0x0001, me: 0x135100001353},
			dr{ne: 0xd8d60000d8db, re: 0x0f97, si: 0x00000000, sm: -0x0001, me: 0x135300001355},
			dr{ne: 0xd8e80000d8ec, re: 0x0f9a, si: 0x00000000, sm: -0x0001, me: 0x135500001359},
			dr{ne: 0xd8fb0000d905, re: 0x0f9f, si: 0x00000000, sm: -0x0001, me: 0x13590000135c},
			dr{ne: 0xd9050000d90b, re: 0x0fa3, si: 0x00000000, sm: 0x135c, me: 0x00000000},
			dr{ne: 0xd90b0000d912, re: 0x0fa4, si: 0x00000000, sm: -0x0001, me: 0x135d0000135e},
			dr{ne: 0xd9220000d92a, re: 0x0fa6, si: 0x00000000, sm: -0x0001, me: 0x135e00001362},
			dr{ne: 0xd9550000d95c, re: 0x0fa8, si: 0x00000000, sm: -0x0001, me: 0x13620000138b},
			dr{ne: 0xdb460000db4f, re: 0x0faf, si: 0x00000000, sm: -0x0001, me: 0x138b000013a7},
			dr{ne: 0xdd0b0000dd12, re: 0x0fc2, si: 0x00000000, sm: -0x0001, me: 0x13a7000013b6},
			dr{ne: 0xde000000de08, re: 0x0fc4, si: 0x00000000, sm: 0x13b6, me: 0x00000000},
			dr{ne: 0xde080000de0c, re: 0x0fc5, si: 0x00000000, sm: -0x0001, me: 0x13b7000013b8},
			dr{ne: 0xde0c0000de13, re: 0x0fc7, si: 0x00000000, sm: -0x0001, me: 0x13b8000013bd},
			dr{ne: 0xde370000de3c, re: -0x0001, si: 0xde370000de3c, sm: -0x0001, me: 0x13bd000013bf},
			dr{ne: 0xde3c0000de44, re: 0x0fcf, si: 0x00000000, sm: -0x0001, me: 0x13bf0000145d},
			dr{ne: 0xe5560000e55b, re: 0x1058, si: 0x00000000, sm: -0x0001, me: 0x145d0000145f},
			dr{ne: 0xe5600000e565, re: 0x105a, si: 0x00000000, sm: -0x0001, me: 0x145f00001464},
			dr{ne: 0xe57a0000e584, re: 0x1060, si: 0x00000000, sm: -0x0001, me: 0x146400001476},
			dr{ne: 0xe6140000e61a, re: 0x1073, si: 0x00000000, sm: -0x0001, me: 0x147600001479},
			dr{ne: 0xe6550000e65c, re: 0x1076, si: 0x00000000, sm: -0x0001, me: 0x1479000014a4},
			dr{ne: 0xe8e60000e8eb, re: 0x1091, si: 0x00000000, sm: -0x0001, me: 0x14a4000014a6},
			dr{ne: 0xe8fb0000e901, re: -0x0001, si: 0xe9010000e908, sm: -0x0001, me: 0x14a6000014a9},
			dr{ne: 0xe9270000e92d, re: 0x1095, si: 0x00000000, sm: 0x14a9, me: 0x00000000},
			dr{ne: 0xe92d0000e932, re: 0x1096, si: 0x00000000, sm: -0x0001, me: 0x14aa000014b1},
			dr{ne: 0xe97c0000e981, re: 0x109a, si: 0x00000000, sm: 0x14b1, me: 0x00000000},
			dr{ne: 0xe9810000e988, re: 0x109b, si: 0x00000000, sm: -0x0001, me: 0x14b2000014b4},
			dr{ne: 0xe98e0000e991, re: 0x109e, si: 0x00000000, sm: -0x0001, me: 0x14b4000014bc},
			dr{ne: 0xe9d50000e9db, re: 0x10a7, si: 0x00000000, sm: -0x0001, me: 0x14bc000014bf},
			dr{ne: 0xe9fd0000ea02, re: 0x10a9, si: 0x00000000, sm: 0x14bf, me: 0x00000000},
			dr{ne: 0xea020000ea0b, re: 0x10aa, si: 0x00000000, sm: 0x14c0, me: 0x00000000},
			dr{ne: 0xea0b0000ea0e, re: 0x10ab, si: 0x00000000, sm: -0x0001, me: 0x14c1000014c6},
			dr{ne: 0xea280000ea2b, re: 0x10b0, si: 0x00000000, sm: -0x0001, me: 0x14c6000014d7},
			dr{ne: 0xeac30000eac8, re: 0x10be, si: 0x00000000, sm: 0x14d7, me: 0x00000000},
			dr{ne: 0xead60000eada, re: 0x10bf, si: 0x00000000, sm: -0x0001, me: 0x14d8000014d9},
			dr{ne: 0xeae40000eaee, re: 0x10c1, si: 0x00000000, sm: -0x0001, me: 0x14d9000014e3},
			dr{ne: 0xeb1f0000eb29, re: 0x10c6, si: 0x00000000, sm: -0x0001, me: 0x14e3000014f8},
			dr{ne: 0xec0d0000ec11, re: 0x10c8, si: 0x00000000, sm: -0x0001, me: 0x14f8000014fe},
			dr{ne: 0xec920000ec9d, re: 0x10cb, si: 0x00000000, sm: -0x0001, me: 0x14fe00001500},
			dr{ne: 0xeca80000ecb0, re: 0x10ce, si: 0x00000000, sm: 0x1500, me: 0x00000000},
			dr{ne: 0xecb00000ecb7, re: 0x10cf, si: 0x00000000, sm: -0x0001, me: 0x150100001506},
			dr{ne: 0xed100000ed17, re: 0x10d0, si: 0x00000000, sm: -0x0001, me: 0x150600001507},
			dr{ne: 0xed280000ed30, re: 0x10d1, si: 0x00000000, sm: 0x1507, me: 0x00000000},
			dr{ne: 0xed300000ed37, re: 0x10d2, si: 0x00000000, sm: -0x0001, me: 0x15080000150d},
			dr{ne: 0xed510000ed56, re: 0x10d8, si: 0x00000000, sm: -0x0001, me: 0x150d00001520},
			dr{ne: 0xee3e0000ee44, re: 0x10ec, si: 0x00000000, sm: 0x1520, me: 0x00000000},
			dr{ne: 0xee440000ee4a, re: 0x10ed, si: 0x00000000, sm: -0x0001, me: 0x152100001525},
			dr{ne: 0xdab10000dab4, re: 0x10f1, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xee650000ee6a, re: 0x10f2, si: 0x00000000, sm: 0x1525, me: 0x00000000},
			dr{ne: 0xee6a0000ee71, re: 0x10f3, si: 0x00000000, sm: -0x0001, me: 0x152600001529},
			dr{ne: 0xee990000eea0, re: -0x0001, si: 0xeea00000eea6, sm: -0x0001, me: 0x15290000152a},
			dr{ne: 0xeeb10000eeb9, re: -0x0001, si: 0xeeb90000eebd, sm: -0x0001, me: 0x152a0000152b},
			dr{ne: 0xeebd0000eec8, re: 0x10f7, si: 0x00000000, sm: 0x152b, me: 0x00000000},
			dr{ne: 0xeec80000eece, re: 0x10f8, si: 0x00000000, sm: 0x152c, me: 0x00000000},
			dr{ne: 0xeece0000eed5, re: 0x10f9, si: 0x00000000, sm: 0x152d, me: 0x00000000},
			dr{ne: 0xeede0000eee4, re: 0x10fa, si: 0x00000000, sm: 0x152e, me: 0x00000000},
			dr{ne: 0xeee40000eeea, re: 0x10fb, si: 0x00000000, sm: 0x152f, me: 0x00000000},
			dr{ne: 0xeeea0000eef1, re: 0x10fc, si: 0x00000000, sm: 0x1530, me: 0x00000000},
			dr{ne: 0xeef10000eef5, re: 0x10fd, si: 0x00000000, sm: -0x0001, me: 0x153100001533},
			dr{ne: 0xeef50000eefb, re: 0x1100, si: 0x00000000, sm: -0x0001, me: 0x153300001535},
			dr{ne: 0xeefb0000ef03, re: 0x1103, si: 0x00000000, sm: -0x0001, me: 0x153500001541},
			dr{ne: 0xefc10000efc8, re: 0x1105, si: 0x00000000, sm: 0x1541, me: 0x00000000},
			dr{ne: 0xefc80000efcf, re: 0x1106, si: 0x00000000, sm: -0x0001, me: 0x154200001543},
			dr{ne: 0xefcf0000efd4, re: -0x0001, si: 0xefd40000efd9, sm: -0x0001, me: 0x154300001545},
			dr{ne: 0xefd90000efde, re: 0x110a, si: 0x00000000, sm: 0x1545, me: 0x00000000},
			dr{ne: 0xefde0000efe4, re: 0x110b, si: 0x00000000, sm: -0x0001, me: 0x154600001548},
			dr{ne: 0xefe40000efe9, re: 0x110e, si: 0x00000000, sm: -0x0001, me: 0x15480000158f},
			dr{ne: 0xf27f0000f283, re: 0x113d, si: 0x00000000, sm: -0x0001, me: 0x158f000015be},
			dr{ne: 0xf3f70000f3fb, re: 0x116c, si: 0x00000000, sm: -0x0001, me: 0x15be000015c3},
			dr{ne: 0xf4090000f410, re: -0x0001, si: 0xf4100000f418, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xf4180000f421, re: 0x1172, si: 0x00000000, sm: 0x15c3, me: 0x00000000},
			dr{ne: 0xf42f0000f432, re: 0x1173, si: 0x00000000, sm: -0x0001, me: 0x15c4000015ca},
			dr{ne: 0xf4500000f454, re: 0x117a, si: 0x00000000, sm: -0x0001, me: 0x15ca000015cc},
			dr{ne: 0xf45a0000f45f, re: 0x117d, si: 0x00000000, sm: 0x15cc, me: 0x00000000},
			dr{ne: 0xf45f0000f464, re: 0x117e, si: 0x00000000, sm: 0x15cd, me: 0x00000000},
			dr{ne: 0xf4700000f475, re: 0x117f, si: 0x00000000, sm: -0x0001, me: 0x15ce000015f9},
			dr{ne: 0xf6480000f64c, re: 0x1189, si: 0x00000000, sm: -0x0001, me: 0x15f9000015fc},
			dr{ne: 0xf6500000f656, re: 0x118d, si: 0x00000000, sm: -0x0001, me: 0x15fc00001602},
			dr{ne: 0xf6d40000f6d6, re: 0x1190, si: 0x00000000, sm: -0x0001, me: 0x160200001605},
			dr{ne: 0xf6eb0000f6ed, re: 0x1194, si: 0x00000000, sm: -0x0001, me: 0x160500001609},
			dr{ne: 0xf6ed0000f6f2, re: 0x1199, si: 0x00000000, sm: 0x1609, me: 0x00000000},
			dr{ne: 0xf6f20000f6f7, re: 0x119a, si: 0x00000000, sm: 0x160a, me: 0x00000000},
			dr{ne: 0xf6f70000f6fb, re: 0x119b, si: 0x00000000, sm: 0x160b, me: 0x00000000},
			dr{ne: 0xf6fb0000f6ff, re: 0x119c, si: 0x00000000, sm: 0x160c, me: 0x00000000},
			dr{ne: 0xf6ff0000f703, re: 0x119d, si: 0x00000000, sm: -0x0001, me: 0x160d0000160e},
			dr{ne: 0xf7030000f706, re: 0x119f, si: 0x00000000, sm: 0x160e, me: 0x00000000},
			dr{ne: 0xf7060000f70f, re: 0x11a0, si: 0x00000000, sm: -0x0001, me: 0x160f00001611},
			dr{ne: 0xf7300000f734, re: 0x11a2, si: 0x00000000, sm: -0x0001, me: 0x1611000016c9},
			dr{ne: 0xfb670000fb6c, re: 0x1257, si: 0x00000000, sm: 0x16c9, me: 0x00000000},
			dr{ne: 0xfb6c0000fb70, re: 0x1258, si: 0x00000000, sm: -0x0001, me: 0x16ca000016cc},
			dr{ne: 0xfb770000fb7d, re: 0x125b, si: 0x00000000, sm: -0x0001, me: 0x16cc000016ce},
			dr{ne: 0xfb8e0000fb91, re: 0x125d, si: 0x00000000, sm: -0x0001, me: 0x16ce000016df},
			dr{ne: 0xfbf00000fbf6, re: 0x126f, si: 0x00000000, sm: -0x0001, me: 0x16df000016e2},
			dr{ne: 0xfc060000fc0a, re: 0x1271, si: 0x00000000, sm: -0x0001, me: 0x16e200001714},
			dr{ne: 0xfff60000fff8, re: 0x1281, si: 0x00000000, sm: 0x1714, me: 0x00000000},
			dr{ne: 0x1000100010007, re: 0x1282, si: 0x00000000, sm: -0x0001, me: 0x171500001716},
			dr{ne: 0x1001300010017, re: 0x1284, si: 0x00000000, sm: -0x0001, me: 0x171600001728},
			dr{ne: 0x1012c00010133, re: 0x1292, si: 0x00000000, sm: -0x0001, me: 0x17280000174b},
			dr{ne: 0x101d9000101dd, re: 0x12b6, si: 0x00000000, sm: -0x0001, me: 0x174b0000174e},
			dr{ne: 0x101e9000101ee, re: 0x12ba, si: 0x00000000, sm: 0x174e, me: 0x00000000},
			dr{ne: 0x101ee000101f3, re: -0x0001, si: 0x101f3000101fb, sm: 0x174f, me: 0x00000000},
			dr{ne: 0x101fb00010205, re: 0x12bb, si: 0x00000000, sm: -0x0001, me: 0x175000001754},
			dr{ne: 0x1026c00010273, re: 0x12bc, si: 0x00000000, sm: -0x0001, me: 0x175400001757},
			dr{ne: 0x1029b000102a1, re: 0x12be, si: 0x00000000, sm: -0x0001, me: 0x17570000175b},
			dr{ne: 0x102a9000102af, re: 0x12c3, si: 0x00000000, sm: -0x0001, me: 0x175b00001765},
			dr{ne: 0x1030100010306, re: 0x12ca, si: 0x00000000, sm: -0x0001, me: 0x176500001768},
			dr{ne: 0x103140001031a, re: 0x12ce, si: 0x00000000, sm: 0x1768, me: 0x00000000},
			dr{ne: 0x1031a00010323, re: 0x12cf, si: 0x00000000, sm: 0x1769, me: 0x00000000},
			dr{ne: 0x1032300010328, re: 0x12d0, si: 0x00000000, sm: -0x0001, me: 0x176a0000176c},
			dr{ne: 0x1033100010335, re: 0x12d3, si: 0x00000000, sm: -0x0001, me: 0x176c00001770},
			dr{ne: 0x103350001033c, re: 0x12d8, si: 0x00000000, sm: -0x0001, me: 0x17700000177b},
			dr{ne: 0x1035000010357, re: 0x12e4, si: 0x00000000, sm: -0x0001, me: 0x177b00001784},
			dr{ne: 0x103d6000103da, re: -0x0001, si: 0x103da000103e2, sm: 0x1784, me: 0x00000000},
			dr{ne: 0x103e2000103e6, re: 0x12e8, si: 0x00000000, sm: -0x0001, me: 0x178500001787},
			dr{ne: 0x103f1000103f8, re: 0x12eb, si: 0x00000000, sm: -0x0001, me: 0x178700001792},
			dr{ne: 0x1046a0001046e, re: 0x12f2, si: 0x00000000, sm: 0x1792, me: 0x00000000},
			dr{ne: 0x104740001047b, re: 0x12f3, si: 0x00000000, sm: 0x1793, me: 0x00000000},
			dr{ne: 0x1047b0001047f, re: 0x12f4, si: 0x00000000, sm: -0x0001, me: 0x179400001797},
			dr{ne: 0x1049e000104a3, re: 0x12f8, si: 0x00000000, sm: -0x0001, me: 0x17970000179c},
			dr{ne: 0x104ef000104f2, re: -0x0001, si: 0x104f2000104f8, sm: -0x0001, me: 0x179c0000179d},
			dr{ne: 0x104f800010505, re: 0x12f9, si: 0x00000000, sm: -0x0001, me: 0x179d0000179e},
			dr{ne: 0x1050500010509, re: 0x12fb, si: 0x00000000, sm: -0x0001, me: 0x179e000017ae},
			dr{ne: 0x105550001055b, re: 0x130a, si: 0x00000000, sm: -0x0001, me: 0x17ae000017af},
			dr{ne: 0x1056400010568, re: 0x130c, si: 0x00000000, sm: 0x17af, me: 0x00000000},
			dr{ne: 0x105680001056d, re: 0x130d, si: 0x00000000, sm: -0x0001, me: 0x17b0000017b3},
			dr{ne: 0x1056d00010579, re: 0x1311, si: 0x00000000, sm: -0x0001, me: 0x17b3000017b6},
			dr{ne: 0x1059f000105a6, re: -0x0001, si: 0x105a6000105b0, sm: 0x17b6, me: 0x00000000},
			dr{ne: 0x105b6000105ba, re: 0x1313, si: 0x00000000, sm: -0x0001, me: 0x17b7000017bd},
			dr{ne: 0x105d5000105dc, re: -0x0001, si: 0x105dc000105e3, sm: -0x0001, me: 0x17bd000017be},
			dr{ne: 0x105e3000105ec, re: 0x1318, si: 0x00000000, sm: -0x0001, me: 0x17be000017d2},
			dr{ne: 0x106960001069d, re: 0x132a, si: 0x00000000, sm: -0x0001, me: 0x17d2000017da},
			dr{ne: 0x106bb000106c8, re: 0x1331, si: 0x00000000, sm: 0x17da, me: 0x00000000},
			dr{ne: 0x106c8000106ce, re: 0x1332, si: 0x00000000, sm: -0x0001, me: 0x17db000017dd},
			dr{ne: 0x106f6000106fc, re: 0x1333, si: 0x00000000, sm: -0x0001, me: 0x17dd000017e2},
			dr{ne: 0x1071900010722, re: 0x1338, si: 0x00000000, sm: -0x0001, me: 0x17e2000017e8},
			dr{ne: 0x1074f00010755, re: -0x0001, si: 0x1074f00010755, sm: -0x0001, me: 0x17e8000017ea},
			dr{ne: 0x1077d00010784, re: 0x133f, si: 0x00000000, sm: -0x0001, me: 0x17ea000017ee},
			dr{ne: 0x107a2000107a8, re: 0x1344, si: 0x00000000, sm: -0x0001, me: 0x17ee000017f2},
			dr{ne: 0x107ae000107b5, re: 0x1349, si: 0x00000000, sm: -0x0001, me: 0x17f200001803},
			dr{ne: 0x108030001080b, re: 0x135b, si: 0x00000000, sm: -0x0001, me: 0x180300001808},
			dr{ne: 0x1082400010828, re: 0x1361, si: 0x00000000, sm: -0x0001, me: 0x18080000180b},
			dr{ne: 0x1083100010835, re: 0x1364, si: 0x00000000, sm: 0x180b, me: 0x00000000},
			dr{ne: 0x108350001083c, re: 0x1365, si: 0x00000000, sm: -0x0001, me: 0x180c00001814},
			dr{ne: 0x108580001085e, re: 0x136c, si: 0x00000000, sm: 0x1814, me: 0x00000000},
			dr{ne: 0x1086900010873, re: 0x136d, si: 0x00000000, sm: 0x1815, me: 0x00000000},
			dr{ne: 0x1087300010878, re: 0x136e, si: 0x00000000, sm: -0x0001, me: 0x181600001824},
			dr{ne: 0x1090400010914, re: 0x1377, si: 0x00000000, sm: 0x1824, me: 0x00000000},
			dr{ne: 0x109140001091a, re: 0x1378, si: 0x00000000, sm: -0x0001, me: 0x182500001829},
			dr{ne: 0x1094f00010953, re: 0x137b, si: 0x00000000, sm: -0x0001, me: 0x18290000182f},
			dr{ne: 0x1099b000109a0, re: 0x137c, si: 0x00000000, sm: 0x182f, me: 0x00000000},
			dr{ne: 0x109a0000109aa, re: 0x137d, si: 0x00000000, sm: -0x0001, me: 0x183000001837},
			dr{ne: 0x109d8000109e4, re: -0x0001, si: 0x109e4000109e8, sm: -0x0001, me: 0x183700001838},
			dr{ne: 0x109e8000109f5, re: 0x1385, si: 0x00000000, sm: -0x0001, me: 0x183800001844},
			dr{ne: 0x10b0100010b06, re: 0x138a, si: 0x00000000, sm: 0x1844, me: 0x00000000},
			dr{ne: 0x10b0600010b0f, re: 0x138b, si: 0x00000000, sm: 0x1845, me: 0x00000000},
			dr{ne: 0x10b0f00010b17, re: 0x138c, si: 0x00000000, sm: -0x0001, me: 0x184600001867},
			dr{ne: 0x10ca000010ca8, re: 0x1395, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x10ca800010caf, re: 0x1396, si: 0x00000000, sm: -0x0001, me: 0x186700001869},
			dr{ne: 0x10caf00010cb7, re: 0x1399, si: 0x00000000, sm: -0x0001, me: 0x18690000188f},
			dr{ne: 0x10e6800010e6c, re: 0x13b3, si: 0x00000000, sm: -0x0001, me: 0x188f00001891},
			dr{ne: 0x10e6c00010e72, re: -0x0001, si: 0x10e7200010e7b, sm: 0x1891, me: 0x00000000},
			dr{ne: 0x10e7b00010e82, re: -0x0001, si: 0x10e8200010ea1, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x10ea100010ea9, re: 0x13b6, si: 0x00000000, sm: -0x0001, me: 0x189200001898},
			dr{ne: 0x10ee700010ef3, re: 0x13b9, si: 0x00000000, sm: -0x0001, me: 0x1898000018a8},
			dr{ne: 0x10f8600010f8c, re: 0x13ca, si: 0x00000000, sm: -0x0001, me: 0x18a8000018af},
			dr{ne: 0x10fe600010fef, re: 0x13cc, si: 0x00000000, sm: -0x0001, me: 0x18af000018ee},
			dr{ne: 0x1146b00011473, re: 0x13d9, si: 0x00000000, sm: -0x0001, me: 0x18ee000018f0},
			dr{ne: 0x1148300011489, re: 0x13dc, si: 0x00000000, sm: -0x0001, me: 0x18f0000018fa},
			dr{ne: 0x114c5000114cc, re: 0x13e7, si: 0x00000000, sm: -0x0001, me: 0x18fa000018fc},
			dr{ne: 0x114cc000114d3, re: 0x13ea, si: 0x00000000, sm: -0x0001, me: 0x18fc000018fe},
			dr{ne: 0x114de000114e7, re: 0x13ed, si: 0x00000000, sm: 0x18fe, me: 0x00000000},
			dr{ne: 0x114e7000114ee, re: 0x13ee, si: 0x00000000, sm: -0x0001, me: 0x18ff00001901},
			dr{ne: 0x114f7000114fe, re: 0x13f1, si: 0x00000000, sm: 0x1901, me: 0x00000000},
			dr{ne: 0x114fe00011506, re: 0x13f2, si: 0x00000000, sm: 0x1902, me: 0x00000000},
			dr{ne: 0x115060001150c, re: -0x0001, si: 0x1150c00011514, sm: -0x0001, me: 0x190300001904},
			dr{ne: 0x1151400011519, re: 0x13f3, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1151900011520, re: 0x13f4, si: 0x00000000, sm: -0x0001, me: 0x190400001905},
			dr{ne: 0x1152000011526, re: 0x13f6, si: 0x00000000, sm: -0x0001, me: 0x190500001907},
			dr{ne: 0x1152e00011535, re: 0x13f8, si: 0x00000000, sm: -0x0001, me: 0x190700001921},
			dr{ne: 0x1163c00011641, re: 0x1406, si: 0x00000000, sm: 0x1921, me: 0x00000000},
			dr{ne: 0x1164100011647, re: 0x1407, si: 0x00000000, sm: -0x0001, me: 0x192200001939},
			dr{ne: 0x117740001177f, re: 0x140e, si: 0x00000000, sm: -0x0001, me: 0x19390000193f},
			dr{ne: 0x117ba000117be, re: 0x1414, si: 0x00000000, sm: 0x193f, me: 0x00000000},
			dr{ne: 0x117be000117c5, re: 0x1415, si: 0x00000000, sm: -0x0001, me: 0x194000001948},
			dr{ne: 0x117fb000117ff, re: 0x141e, si: 0x00000000, sm: 0x1948, me: 0x00000000},
			dr{ne: 0x117ff00011806, re: -0x0001, si: 0x1180600011815, sm: 0x1949, me: 0x00000000},
			dr{ne: 0x1181500011819, re: 0x141f, si: 0x00000000, sm: -0x0001, me: 0x194a0000194f},
			dr{ne: 0x118360001183a, re: 0x1425, si: 0x00000000, sm: 0x194f, me: 0x00000000},
			dr{ne: 0x118400001184b, re: 0x1426, si: 0x00000000, sm: -0x0001, me: 0x19500000195d},
			dr{ne: 0x1194000011943, re: 0x142d, si: 0x00000000, sm: 0x195d, me: 0x00000000},
			dr{ne: 0x1194f00011952, re: 0x142e, si: 0x00000000, sm: -0x0001, me: 0x195e00001975},
			dr{ne: 0x11a4100011a48, re: 0x143d, si: 0x00000000, sm: -0x0001, me: 0x197500001976},
			dr{ne: 0x11a5600011a60, re: 0x143e, si: 0x00000000, sm: -0x0001, me: 0x197600001977},
			dr{ne: 0x11a6800011a6f, re: 0x1440, si: 0x00000000, sm: -0x0001, me: 0x19770000197b},
			dr{ne: 0x11a9600011a9b, re: 0x1441, si: 0x00000000, sm: -0x0001, me: 0x197b00001980},
			dr{ne: 0x11abd00011ac6, re: 0x1445, si: 0x00000000, sm: 0x1980, me: 0x00000000},
			dr{ne: 0x11ac600011acb, re: 0x1446, si: 0x00000000, sm: 0x1981, me: 0x00000000},
			dr{ne: 0x11acb00011ad0, re: -0x0001, si: 0x11ad000011ad7, sm: 0x1982, me: 0x00000000},
			dr{ne: 0x11ad700011adc, re: 0x1447, si: 0x00000000, sm: 0x1983, me: 0x00000000},
			dr{ne: 0x11adc00011ae3, re: 0x1448, si: 0x00000000, sm: -0x0001, me: 0x198400001987},
			dr{ne: 0x11af100011af7, re: 0x144c, si: 0x00000000, sm: -0x0001, me: 0x1987000019df},
			dr{ne: 0x11d6700011d6d, re: 0x148a, si: 0x00000000, sm: -0x0001, me: 0x19df000019e0},
			dr{ne: 0x11d7d00011d83, re: 0x148c, si: 0x00000000, sm: -0x0001, me: 0x19e0000019ea},
			dr{ne: 0x11e4200011e48, re: 0x148f, si: 0x00000000, sm: -0x0001, me: 0x19ea000019eb},
			dr{ne: 0x11e4d00011e51, re: 0x1491, si: 0x00000000, sm: -0x0001, me: 0x19eb000019ed},
			dr{ne: 0x11e6500011e6e, re: 0x1493, si: 0x00000000, sm: 0x19ed, me: 0x00000000},
			dr{ne: 0x11e7200011e77, re: 0x1494, si: 0x00000000, sm: 0x19ee, me: 0x00000000},
			dr{ne: 0x11e7700011e7d, re: 0x1495, si: 0x00000000, sm: -0x0001, me: 0x19ef000019f1},
			dr{ne: 0x11e8900011e91, re: 0x1498, si: 0x00000000, sm: 0x19f1, me: 0x00000000},
			dr{ne: 0x11e9600011e9d, re: 0x1499, si: 0x00000000, sm: -0x0001, me: 0x19f2000019f3},
			dr{ne: 0x11e9d00011ea1, re: 0x149b, si: 0x00000000, sm: -0x0001, me: 0x19f3000019f6},
			dr{ne: 0x11ec400011ecd, re: -0x0001, si: 0x11ecd00011ee0, sm: 0x19f6, me: 0x00000000},
			dr{ne: 0x11ee900011eee, re: 0x149f, si: 0x00000000, sm: -0x0001, me: 0x19f7000019fa},
			dr{ne: 0x11f0100011f05, re: 0x14a0, si: 0x00000000, sm: -0x0001, me: 0x19fa000019fc},
			dr{ne: 0x11f2500011f2c, re: 0x14a1, si: 0x00000000, sm: -0x0001, me: 0x19fc000019ff},
			dr{ne: 0x11f4700011f50, re: 0x14a5, si: 0x00000000, sm: 0x19ff, me: 0x00000000},
			dr{ne: 0x11f5700011f5c, re: 0x14a6, si: 0x00000000, sm: 0x1a00, me: 0x00000000},
			dr{ne: 0x11f5c00011f64, re: 0x14a7, si: 0x00000000, sm: -0x0001, me: 0x1a0100001a05},
			dr{ne: 0x11f7b00011f83, re: 0x14ac, si: 0x00000000, sm: -0x0001, me: 0x1a0500001a07},
			dr{ne: 0x11f8300011f89, re: -0x0001, si: 0x11f8300011f89, sm: -0x0001, me: 0x1a0700001a09},
			dr{ne: 0x11f9900011fa0, re: 0x14af, si: 0x00000000, sm: -0x0001, me: 0x1a0900001a0a},
			dr{ne: 0x11fa000011fa4, re: 0x14b1, si: 0x00000000, sm: -0x0001, me: 0x1a0a00001a0d},
			dr{ne: 0x11fb100011fb6, re: 0x14b4, si: 0x00000000, sm: -0x0001, me: 0x1a0d00001a10},
			dr{ne: 0x11fc200011fc6, re: 0x14b6, si: 0x00000000, sm: -0x0001, me: 0x1a1000001a12},
			dr{ne: 0x11fc600011fcc, re: 0x14b9, si: 0x00000000, sm: -0x0001, me: 0x1a1200001a14},
			dr{ne: 0x11fcc00011fd1, re: 0x14bc, si: 0x00000000, sm: -0x0001, me: 0x1a1400001a15},
			dr{ne: 0x11fd100011fd9, re: 0x14be, si: 0x00000000, sm: -0x0001, me: 0x1a1500001a19},
			dr{ne: 0x11ff100011ff4, re: 0x14c3, si: 0x00000000, sm: -0x0001, me: 0x1a1900001a2f},
			dr{ne: 0x120db000120e7, re: -0x0001, si: 0x120e7000120f0, sm: -0x0001, me: 0x1a2f00001a30},
			dr{ne: 0x120f0000120f3, re: 0x14da, si: 0x00000000, sm: 0x1a30, me: 0x00000000},
			dr{ne: 0x120f3000120fa, re: 0x14db, si: 0x00000000, sm: 0x1a31, me: 0x00000000},
			dr{ne: 0x120fa000120fe, re: 0x14dc, si: 0x00000000, sm: 0x1a32, me: 0x00000000},
			dr{ne: 0x1210500012109, re: 0x14dd, si: 0x00000000, sm: 0x1a33, me: 0x00000000},
			dr{ne: 0x121090001210c, re: 0x14de, si: 0x00000000, sm: -0x0001, me: 0x1a3400001a44},
			dr{ne: 0x122360001223b, re: 0x14e0, si: 0x00000000, sm: 0x1a44, me: 0x00000000},
			dr{ne: 0x1223e00012248, re: 0x14e1, si: 0x00000000, sm: -0x0001, me: 0x1a4500001a4e},
			dr{ne: 0x122cf000122da, re: 0x14e2, si: 0x00000000, sm: 0x1a4e, me: 0x00000000},
			dr{ne: 0x122da000122dd, re: 0x14e3, si: 0x00000000, sm: -0x0001, me: 0x1a4f00001a53},
			dr{ne: 0x122fd00012303, re: -0x0001, si: 0x123030001230a, sm: -0x0001, me: 0x1a5300001a54},
			dr{ne: 0x1230a00012311, re: 0x14e6, si: 0x00000000, sm: -0x0001, me: 0x1a5400001a56},
			dr{ne: 0x1232600012333, re: 0x14e9, si: 0x00000000, sm: -0x0001, me: 0x1a5600001a5a},
			dr{ne: 0x123520001235b, re: 0x14ed, si: 0x00000000, sm: -0x0001, me: 0x1a5a00001a5d},
			dr{ne: 0x123970001239c, re: 0x14ee, si: 0x00000000, sm: -0x0001, me: 0x1a5d00001a64},
			dr{ne: 0x123bd000123c2, re: 0x14f4, si: 0x00000000, sm: -0x0001, me: 0x1a6400001a65},
			dr{ne: 0x1200000019, re: 0x14f6, si: 0x00000000, sm: -0x0001, me: 0x1a6500001c98},
			dr{ne: 0x146cf000146d4, re: 0x170a, si: 0x00000000, sm: -0x0001, me: 0x1c9800001c9c},
			dr{ne: 0x146e3000146e9, re: 0x170c, si: 0x00000000, sm: -0x0001, me: 0x1c9c00001c9d},
			dr{ne: 0x146e9000146ef, re: 0x170e, si: 0x00000000, sm: -0x0001, me: 0x1c9d00001cad},
			dr{ne: 0x147580001475d, re: 0x171f, si: 0x00000000, sm: -0x0001, me: 0x1cad00001cb2},
			dr{ne: 0x1477e00014783, re: 0x1725, si: 0x00000000, sm: 0x1cb2, me: 0x00000000},
			dr{ne: 0x1478300014788, re: -0x0001, si: 0x147880001478e, sm: -0x0001, me: 0x1cb300001cb4},
			dr{ne: 0x147a6000147ac, re: -0x0001, si: 0x147a6000147ac, sm: -0x0001, me: 0x1cb400001cb5},
			dr{ne: 0x147ac000147b2, re: 0x1727, si: 0x00000000, sm: -0x0001, me: 0x1cb500001cb7},
			dr{ne: 0x147b2000147bb, re: 0x172a, si: 0x00000000, sm: -0x0001, me: 0x1cb700001cb9},
			dr{ne: 0x147c1000147c8, re: 0x172d, si: 0x00000000, sm: 0x1cb9, me: 0x00000000},
			dr{ne: 0x147c8000147ce, re: -0x0001, si: 0x147ce000147d4, sm: -0x0001, me: 0x1cba00001cbd},
			dr{ne: 0x148150001481b, re: 0x172e, si: 0x00000000, sm: -0x0001, me: 0x1cbd00001ccc},
			dr{ne: 0x148b7000148bc, re: 0x173e, si: 0x00000000, sm: 0x1ccc, me: 0x00000000},
			dr{ne: 0x148bc000148c4, re: 0x173f, si: 0x00000000, sm: -0x0001, me: 0x1ccd00001ccf},
			dr{ne: 0x148dd000148e4, re: 0x1741, si: 0x00000000, sm: 0x1ccf, me: 0x00000000},
			dr{ne: 0x148e4000148e9, re: 0x1742, si: 0x00000000, sm: -0x0001, me: 0x1cd000001cde},
			dr{ne: 0x1491b00014920, re: 0x1751, si: 0x00000000, sm: 0x1cde, me: 0x00000000},
			dr{ne: 0x1492000014925, re: 0x1752, si: 0x00000000, sm: -0x0001, me: 0x1cdf00001d3b},
			dr{ne: 0x14d1c00014d28, re: 0x17aa, si: 0x00000000, sm: 0x1d3b, me: 0x00000000},
			dr{ne: 0x14d2800014d2f, re: 0x17ab, si: 0x00000000, sm: 0x1d3c, me: 0x00000000},
			dr{ne: 0x14d3500014d3e, re: 0x17ac, si: 0x00000000, sm: 0x1d3d, me: 0x00000000},
			dr{ne: 0x14d4900014d50, re: 0x17ad, si: 0x00000000, sm: 0x1d3e, me: 0x00000000},
			dr{ne: 0x14d5000014d54, re: 0x17ae, si: 0x00000000, sm: -0x0001, me: 0x1d3f00001d47},
			dr{ne: 0x14db100014db8, re: 0x17b2, si: 0x00000000, sm: -0x0001, me: 0x1d4700001d4c},
			dr{ne: 0xa5840000a589, re: 0x17b8, si: 0x00000000, sm: -0x0001, me: 0x1d4c00001d50},
			dr{ne: 0x14dee00014df5, re: 0x17bd, si: 0x00000000, sm: 0x1d50, me: 0x00000000},
			dr{ne: 0x14df500014e02, re: -0x0001, si: 0x14e0200014e0e, sm: 0x1d51, me: 0x00000000},
			dr{ne: 0x14e0e00014e15, re: 0x17be, si: 0x00000000, sm: -0x0001, me: 0x1d5200001d5a},
			dr{ne: 0x14e5d00014e63, re: 0x17c0, si: 0x00000000, sm: 0x1d5a, me: 0x00000000},
			dr{ne: 0x14e6300014e6b, re: 0x17c1, si: 0x00000000, sm: -0x0001, me: 0x1d5b00001d5f},
			dr{ne: 0x14e8400014e8b, re: 0x17c6, si: 0x00000000, sm: -0x0001, me: 0x1d5f00001d60},
			dr{ne: 0x14e8b00014e95, re: 0x17c8, si: 0x00000000, sm: 0x1d60, me: 0x00000000},
			dr{ne: 0xebdf0000ebe2, re: 0x17c9, si: 0x00000000, sm: -0x0001, me: 0x1d6100001d76},
			dr{ne: 0x14fbe00014fc6, re: 0x17d8, si: 0x00000000, sm: -0x0001, me: 0x1d7600001d77},
			dr{ne: 0x14fc600014fcb, re: 0x17da, si: 0x00000000, sm: -0x0001, me: 0x1d7700001d79},
			dr{ne: 0x14fd900014fdf, re: 0x17dd, si: 0x00000000, sm: 0x1d79, me: 0x00000000},
			dr{ne: 0x9b4700009b4c, re: 0x17de, si: 0x00000000, sm: 0x1d7a, me: 0x00000000},
			dr{ne: 0x14fdf00014fe8, re: -0x0001, si: 0x14fe800014ff3, sm: -0x0001, me: 0x1d7b00001d7d},
			dr{ne: 0x14ff700014ffe, re: 0x17e1, si: 0x00000000, sm: 0x1d7d, me: 0x00000000},
			dr{ne: 0x14ffe00015007, re: 0x17e2, si: 0x00000000, sm: -0x0001, me: 0x1d7e00001d8c},
			dr{ne: 0x150d2000150db, re: 0x17e7, si: 0x00000000, sm: -0x0001, me: 0x1d8c00001d9a},
			dr{ne: 0x1513300015139, re: 0x17f2, si: 0x00000000, sm: -0x0001, me: 0x1d9a00001d9c},
			dr{ne: 0x1514800015155, re: 0x17f4, si: 0x00000000, sm: -0x0001, me: 0x1d9c00001d9f},
			dr{ne: 0x1517900015183, re: 0x17f8, si: 0x00000000, sm: 0x1d9f, me: 0x00000000},
			dr{ne: 0x151830001518b, re: 0x17f9, si: 0x00000000, sm: -0x0001, me: 0x1da000001da3},
			dr{ne: 0x1518b00015195, re: 0x17fd, si: 0x00000000, sm: 0x1da3, me: 0x00000000},
			dr{ne: 0x151950001519b, re: 0x17fe, si: 0x00000000, sm: -0x0001, me: 0x1da400001dab},
			dr{ne: 0x151fe00015203, re: 0x1802, si: 0x00000000, sm: -0x0001, me: 0x1dab00001daf},
			dr{ne: 0x17200000176, re: 0x1806, si: 0x00000000, sm: -0x0001, me: 0x1daf00001e7b},
			dr{ne: 0x15aff00015b07, re: 0x18c3, si: 0x00000000, sm: 0x1e7b, me: 0x00000000},
			dr{ne: 0x15b0700015b0c, re: 0x18c4, si: 0x00000000, sm: -0x0001, me: 0x1e7c00001e7e},
			dr{ne: 0x40eb000040f0, re: 0x18c6, si: 0x00000000, sm: -0x0001, me: 0x1e7e00001e7f},
			dr{ne: 0x15b1700015b22, re: 0x18c7, si: 0x00000000, sm: 0x1e7f, me: 0x00000000},
			dr{ne: 0x15b2200015b2a, re: 0x18c8, si: 0x00000000, sm: -0x0001, me: 0x1e8000001e84},
			dr{ne: 0xde500000de55, re: 0x18cd, si: 0x00000000, sm: -0x0001, me: 0x1e8400001e8c},
			dr{ne: 0x108a6000108ac, re: 0x18d2, si: 0x00000000, sm: 0x1e8c, me: 0x00000000},
			dr{ne: 0x15beb00015bef, re: 0x18d3, si: 0x00000000, sm: -0x0001, me: 0x1e8d00001e8f},
			dr{ne: 0x15bf400015bfd, re: 0x18d5, si: 0x00000000, sm: -0x0001, me: 0x1e8f00001e95},
			dr{ne: 0x15c7300015c7d, re: 0x18d6, si: 0x00000000, sm: -0x0001, me: 0x1e9500001e99},
			dr{ne: 0x15c9500015c9c, re: 0x18db, si: 0x00000000, sm: 0x1e99, me: 0x00000000},
			dr{ne: 0x15ca900015cb1, re: -0x0001, si: 0x15cb100015cbf, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x15cbf00015cc5, re: 0x18dc, si: 0x00000000, sm: -0x0001, me: 0x1e9a00001e9c},
			dr{ne: 0x15cc500015ccb, re: 0x18df, si: 0x00000000, sm: -0x0001, me: 0x1e9c00001e9e},
			dr{ne: 0x15cea00015cf4, re: 0x18e1, si: 0x00000000, sm: -0x0001, me: 0x1e9e00001e9f},
			dr{ne: 0x15cf400015cf9, re: 0x18e3, si: 0x00000000, sm: -0x0001, me: 0x1e9f00001eb7},
			dr{ne: 0x15e0100015e06, re: 0x18ee, si: 0x00000000, sm: -0x0001, me: 0x1eb700001eb9},
			dr{ne: 0x15e0600015e0b, re: 0x18f1, si: 0x00000000, sm: -0x0001, me: 0x1eb900001ebc},
			dr{ne: 0x15e1900015e22, re: 0x18f5, si: 0x00000000, sm: 0x1ebc, me: 0x00000000},
			dr{ne: 0x15e2200015e28, re: 0x18f6, si: 0x00000000, sm: -0x0001, me: 0x1ebd00001ebf},
			dr{ne: 0x15e2800015e2d, re: 0x18f9, si: 0x00000000, sm: -0x0001, me: 0x1ebf00001ec1},
			dr{ne: 0x15e3500015e3a, re: 0x18fc, si: 0x00000000, sm: -0x0001, me: 0x1ec100001ec3},
			dr{ne: 0x15e3a00015e42, re: 0x18ff, si: 0x00000000, sm: 0x1ec3, me: 0x00000000},
			dr{ne: 0x15e4200015e49, re: 0x1900, si: 0x00000000, sm: -0x0001, me: 0x1ec400001ec6},
			dr{ne: 0x15e5a00015e64, re: 0x1902, si: 0x00000000, sm: 0x1ec6, me: 0x00000000},
			dr{ne: 0x15e6400015e6c, re: 0x1903, si: 0x00000000, sm: 0x1ec7, me: 0x00000000},
			dr{ne: 0x15e6c00015e71, re: 0x1904, si: 0x00000000, sm: -0x0001, me: 0x1ec800001eca},
			dr{ne: 0x15e7100015e77, re: 0x1907, si: 0x00000000, sm: -0x0001, me: 0x1eca00001ecc},
			dr{ne: 0x15e9000015e95, re: 0x1909, si: 0x00000000, sm: -0x0001, me: 0x1ecc00001ece},
			dr{ne: 0x15e9c00015ea5, re: 0x190c, si: 0x00000000, sm: 0x1ece, me: 0x00000000},
			dr{ne: 0x15ea500015ead, re: 0x190d, si: 0x00000000, sm: -0x0001, me: 0x1ecf00001ed4},
			dr{ne: 0x15ed000015ed5, re: 0x1911, si: 0x00000000, sm: 0x1ed4, me: 0x00000000},
			dr{ne: 0x15ed500015edd, re: 0x1912, si: 0x00000000, sm: -0x0001, me: 0x1ed500001ee0},
			dr{ne: 0x15f4300015f4b, re: 0x191b, si: 0x00000000, sm: -0x0001, me: 0x1ee000001ee1},
			dr{ne: 0x15f4b00015f53, re: 0x191d, si: 0x00000000, sm: -0x0001, me: 0x1ee100001ee2},
			dr{ne: 0x15f5b00015f5e, re: 0x191f, si: 0x00000000, sm: -0x0001, me: 0x1ee200001f0e},
			dr{ne: 0x1601e00016028, re: 0x1949, si: 0x00000000, sm: 0x1f0e, me: 0x00000000},
			dr{ne: 0x160280001602f, re: 0x194a, si: 0x00000000, sm: -0x0001, me: 0x1f0f00001f10},
			dr{ne: 0x1603d00016042, re: -0x0001, si: 0x1603d00016042, sm: -0x0001, me: 0x1f1000001f11},
			dr{ne: 0x1604200016049, re: 0x194c, si: 0x00000000, sm: 0x1f11, me: 0x00000000},
			dr{ne: 0x160490001604f, re: -0x0001, si: 0x160490001604f, sm: -0x0001, me: 0x1f1200001f14},
			dr{ne: 0x1604f00016056, re: 0x194f, si: 0x00000000, sm: 0x1f14, me: 0x00000000},
			dr{ne: 0x160560001605a, re: 0x1950, si: 0x00000000, sm: 0x1f15, me: 0x00000000},
			dr{ne: 0x1605a0001605d, re: 0x1951, si: 0x00000000, sm: 0x1f16, me: 0x00000000},
			dr{ne: 0x1606b0001606e, re: 0x1952, si: 0x00000000, sm: -0x0001, me: 0x1f1700001f1a},
			dr{ne: 0x1608300016086, re: 0x1956, si: 0x00000000, sm: -0x0001, me: 0x1f1a00001f1c},
			dr{ne: 0x160900001609c, re: 0x1959, si: 0x00000000, sm: 0x1f1c, me: 0x00000000},
			dr{ne: 0x160a8000160ae, re: 0x195a, si: 0x00000000, sm: 0x1f1d, me: 0x00000000},
			dr{ne: 0x160ae000160b3, re: 0x195b, si: 0x00000000, sm: 0x1f1e, me: 0x00000000},
			dr{ne: 0x160b3000160b8, re: 0x195c, si: 0x00000000, sm: -0x0001, me: 0x1f1f00001f22},
			dr{ne: 0x160d3000160da, re: 0x195e, si: 0x00000000, sm: -0x0001, me: 0x1f2200001f30},
			dr{ne: 0x161740001617c, re: 0x1965, si: 0x00000000, sm: -0x0001, me: 0x1f3000001f31},
			dr{ne: 0x161870001618f, re: -0x0001, si: 0x161870001618f, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1618f00016196, re: 0x1967, si: 0x00000000, sm: -0x0001, me: 0x1f3100001f47},
			dr{ne: 0x1622800016234, re: 0x1979, si: 0x00000000, sm: -0x0001, me: 0x1f4700001fc3},
			dr{ne: 0x166b6000166bd, re: 0x19f2, si: 0x00000000, sm: -0x0001, me: 0x1fc300001fc5},
			dr{ne: 0x166db000166e0, re: 0x19f4, si: 0x00000000, sm: -0x0001, me: 0x1fc500001fc9},
			dr{ne: 0x166ee000166f8, re: 0x19f9, si: 0x00000000, sm: -0x0001, me: 0x1fc900001fd2},
			dr{ne: 0x167470001674d, re: -0x0001, si: 0x1674d00016753, sm: -0x0001, me: 0x1fd200001fd5},
			dr{ne: 0x167760001677d, re: 0x1a00, si: 0x00000000, sm: -0x0001, me: 0x1fd500001fd7},
			dr{ne: 0x1677d00016782, re: -0x0001, si: 0x167820001678b, sm: 0x1fd7, me: 0x00000000},
			dr{ne: 0x1678e00016793, re: -0x0001, si: 0x1678e00016793, sm: -0x0001, me: 0x1fd800001fda},
			dr{ne: 0x1679300016798, re: -0x0001, si: 0x167980001679e, sm: -0x0001, me: 0x1fda00001fdb},
			dr{ne: 0x1679e000167a3, re: 0x1a05, si: 0x00000000, sm: -0x0001, me: 0x1fdb00001fdd},
			dr{ne: 0x167b3000167bb, re: 0x1a08, si: 0x00000000, sm: 0x1fdd, me: 0x00000000},
			dr{ne: 0x167c5000167c8, re: 0x1a09, si: 0x00000000, sm: -0x0001, me: 0x1fde00001fe3},
			dr{ne: 0x167d0000167d7, re: 0x1a0e, si: 0x00000000, sm: -0x0001, me: 0x1fe300001ff0},
			dr{ne: 0x168430001684a, re: 0x1a17, si: 0x00000000, sm: 0x1ff0, me: 0x00000000},
			dr{ne: 0x1684a00016851, re: 0x1a18, si: 0x00000000, sm: 0x1ff1, me: 0x00000000},
			dr{ne: 0x1685100016855, re: 0x1a19, si: 0x00000000, sm: -0x0001, me: 0x1ff200001ff4},
			dr{ne: 0x1687000016876, re: 0x1a1a, si: 0x00000000, sm: -0x0001, me: 0x1ff400001ff6},
			dr{ne: 0x168890001688e, re: 0x1a1d, si: 0x00000000, sm: 0x1ff6, me: 0x00000000},
			dr{ne: 0x168960001689c, re: 0x1a1e, si: 0x00000000, sm: -0x0001, me: 0x1ff700002002},
			dr{ne: 0x169360001693b, re: 0x1a22, si: 0x00000000, sm: 0x2002, me: 0x00000000},
			dr{ne: 0x1693b00016940, re: 0x1a23, si: 0x00000000, sm: 0x2003, me: 0x00000000},
			dr{ne: 0x1694000016946, re: 0x1a24, si: 0x00000000, sm: 0x2004, me: 0x00000000},
			dr{ne: 0x1695300016957, re: 0x1a25, si: 0x00000000, sm: 0x2005, me: 0x00000000},
			dr{ne: 0x169570001695c, re: -0x0001, si: 0x1695c00016961, sm: -0x0001, me: 0x200600002008},
			dr{ne: 0x1696800016971, re: 0x1a28, si: 0x00000000, sm: -0x0001, me: 0x20080000200c},
			dr{ne: 0x169a2000169ab, re: -0x0001, si: 0x169ab000169b1, sm: 0x200c, me: 0x00000000},
			dr{ne: 0x169c3000169c9, re: 0x1a29, si: 0x00000000, sm: 0x200d, me: 0x00000000},
			dr{ne: 0x169c9000169ce, re: 0x1a2a, si: 0x00000000, sm: -0x0001, me: 0x200e00002010},
			dr{ne: 0x169ce000169d5, re: 0x1a2d, si: 0x00000000, sm: -0x0001, me: 0x201000002023},
			dr{ne: 0x16aba00016ac3, re: 0x1a34, si: 0x00000000, sm: -0x0001, me: 0x202300002027},
			dr{ne: 0x16ae400016aed, re: 0x1a38, si: 0x00000000, sm: -0x0001, me: 0x202700002029},
			dr{ne: 0x16afb00016b03, re: 0x1a3b, si: 0x00000000, sm: -0x0001, me: 0x202900002033},
			dr{ne: 0x16b9700016b9c, re: 0x1a42, si: 0x00000000, sm: -0x0001, me: 0x203300002040},
			dr{ne: 0x16c3900016c40, re: 0x1a4f, si: 0x00000000, sm: 0x2040, me: 0x00000000},
			dr{ne: 0x16c4000016c47, re: 0x1a50, si: 0x00000000, sm: -0x0001, me: 0x204100002044},
			dr{ne: 0x16c8900016c8d, re: 0x1a51, si: 0x00000000, sm: 0x2044, me: 0x00000000},
			dr{ne: 0x16c9200016c9b, re: 0x1a52, si: 0x00000000, sm: 0x2045, me: 0x00000000},
			dr{ne: 0x16c9b00016c9f, re: 0x1a53, si: 0x00000000, sm: -0x0001, me: 0x20460000204f},
			dr{ne: 0x16d4800016d51, re: 0x1a5c, si: 0x00000000, sm: 0x204f, me: 0x00000000},
			dr{ne: 0x16d5100016d56, re: 0x1a5d, si: 0x00000000, sm: 0x2050, me: 0x00000000},
			dr{ne: 0x16d5600016d65, re: 0x1a5e, si: 0x00000000, sm: 0x2051, me: 0x00000000},
			dr{ne: 0x6a5c00006a61, re: 0x1a5f, si: 0x00000000, sm: -0x0001, me: 0x205200002059},
			dr{ne: 0x16d9a00016da1, re: 0x1a67, si: 0x00000000, sm: -0x0001, me: 0x205900002063},
			dr{ne: 0x16dcd00016dd6, re: 0x1a71, si: 0x00000000, sm: 0x2063, me: 0x00000000},
			dr{ne: 0x16dd600016dde, re: 0x1a72, si: 0x00000000, sm: 0x2064, me: 0x00000000},
			dr{ne: 0x16dde00016de6, re: 0x1a73, si: 0x00000000, sm: -0x0001, me: 0x20650000206a},
			dr{ne: 0x16e1800016e1c, re: 0x1a79, si: 0x00000000, sm: -0x0001, me: 0x206a0000206c},
			dr{ne: 0x16e1c00016e21, re: 0x1a7c, si: 0x00000000, sm: 0x206c, me: 0x00000000},
			dr{ne: 0x16e2100016e2e, re: -0x0001, si: 0x16e2e00016e3a, sm: -0x0001, me: 0x206d0000206e},
			dr{ne: 0x16e3f00016e46, re: 0x1a7e, si: 0x00000000, sm: -0x0001, me: 0x206e00002071},
			dr{ne: 0x16e5200016e5f, re: -0x0001, si: 0x16e5f00016e64, sm: -0x0001, me: 0x207100002073},
			dr{ne: 0x16e7f00016e86, re: 0x1a83, si: 0x00000000, sm: -0x0001, me: 0x207300002088},
			dr{ne: 0x16f3b00016f40, re: 0x1a8e, si: 0x00000000, sm: 0x2088, me: 0x00000000},
			dr{ne: 0x16f4000016f44, re: 0x1a8f, si: 0x00000000, sm: -0x0001, me: 0x20890000208a},
			dr{ne: 0x16f4400016f48, re: 0x1a91, si: 0x00000000, sm: 0x208a, me: 0x00000000},
			dr{ne: 0x16f4800016f51, re: 0x1a92, si: 0x00000000, sm: 0x208b, me: 0x00000000},
			dr{ne: 0x16f5100016f56, re: 0x1a93, si: 0x00000000, sm: 0x208c, me: 0x00000000},
			dr{ne: 0x16f5600016f5f, re: 0x1a94, si: 0x00000000, sm: 0x208d, me: 0x00000000},
			dr{ne: 0x16f6900016f6e, re: 0x1a95, si: 0x00000000, sm: 0x208e, me: 0x00000000},
			dr{ne: 0x16f6e00016f73, re: 0x1a96, si: 0x00000000, sm: 0x208f, me: 0x00000000},
			dr{ne: 0x16f7300016f79, re: 0x1a97, si: 0x00000000, sm: -0x0001, me: 0x209000002096},
			dr{ne: 0x16f8b00016f92, re: 0x1a9b, si: 0x00000000, sm: -0x0001, me: 0x2096000020b6},
			dr{ne: 0x1707d00017081, re: 0x1aba, si: 0x00000000, sm: -0x0001, me: 0x20b6000020be},
			dr{ne: 0x170f3000170fb, re: 0x1ac3, si: 0x00000000, sm: -0x0001, me: 0x20be000020c2},
			dr{ne: 0x1711a00017120, re: 0x1ac7, si: 0x00000000, sm: 0x20c2, me: 0x00000000},
			dr{ne: 0x1712000017128, re: -0x0001, si: 0x1712000017128, sm: -0x0001, me: 0x20c3000020c5},
			dr{ne: 0x171280001712f, re: 0x1aca, si: 0x00000000, sm: -0x0001, me: 0x20c5000020ce},
			dr{ne: 0x171650001716c, re: 0x1ad4, si: 0x00000000, sm: -0x0001, me: 0x20ce000020d9},
			dr{ne: 0x171dd000171e2, re: 0x1ad5, si: 0x00000000, sm: -0x0001, me: 0x20d9000020dc},
			dr{ne: 0x171e2000171e8, re: -0x0001, si: 0x171e8000171ed, sm: 0x20dc, me: 0x00000000},
			dr{ne: 0x171f1000171f6, re: 0x1ad9, si: 0x00000000, sm: -0x0001, me: 0x20dd000020de},
			dr{ne: 0x171f6000171fa, re: 0x1adb, si: 0x00000000, sm: -0x0001, me: 0x20de000020e0},
			dr{ne: 0x172070001720b, re: 0x1add, si: 0x00000000, sm: 0x20e0, me: 0x00000000},
			dr{ne: 0x1720b0001720d, re: 0x1ade, si: 0x00000000, sm: -0x0001, me: 0x20e1000020e4},
			dr{ne: 0x172260001722a, re: 0x1ae1, si: 0x00000000, sm: 0x20e4, me: 0x00000000},
			dr{ne: 0x1722a0001722e, re: 0x1ae2, si: 0x00000000, sm: 0x20e5, me: 0x00000000},
			dr{ne: 0x1722e00017235, re: 0x1ae3, si: 0x00000000, sm: -0x0001, me: 0x20e6000020e8},
			dr{ne: 0x172480001724c, re: 0x1ae6, si: 0x00000000, sm: -0x0001, me: 0x20e8000020eb},
			dr{ne: 0x172810001728a, re: 0x1ae8, si: 0x00000000, sm: 0x20eb, me: 0x00000000},
			dr{ne: 0x1728e00017295, re: 0x1ae9, si: 0x00000000, sm: -0x0001, me: 0x20ec000020f0},
			dr{ne: 0x1729a0001729e, re: 0x1aee, si: 0x00000000, sm: -0x0001, me: 0x20f0000020f1},
			dr{ne: 0x172a9000172b0, re: 0x1aef, si: 0x00000000, sm: 0x20f1, me: 0x00000000},
			dr{ne: 0x172b2000172b8, re: 0x1af0, si: 0x00000000, sm: -0x0001, me: 0x20f2000020f4},
			dr{ne: 0x172cc000172d1, re: 0x1af3, si: 0x00000000, sm: -0x0001, me: 0x20f4000020f5},
			dr{ne: 0x172d1000172d9, re: 0x1af5, si: 0x00000000, sm: -0x0001, me: 0x20f5000020f7},
			dr{ne: 0xc1fb0000c1ff, re: 0x1af8, si: 0x00000000, sm: 0x20f7, me: 0x00000000},
			dr{ne: 0x172e6000172eb, re: 0x1af9, si: 0x00000000, sm: -0x0001, me: 0x20f8000020fa},
			dr{ne: 0x172f5000172fd, re: 0x1afc, si: 0x00000000, sm: -0x0001, me: 0x20fa000020fc},
			dr{ne: 0x173160001731c, re: 0x1aff, si: 0x00000000, sm: 0x20fc, me: 0x00000000},
			dr{ne: 0x173260001732d, re: 0x1b00, si: 0x00000000, sm: -0x0001, me: 0x20fd00002103},
			dr{ne: 0x1739b000173a1, re: 0x1b03, si: 0x00000000, sm: -0x0001, me: 0x21030000210e},
			dr{ne: 0x173e1000173e8, re: 0x1b09, si: 0x00000000, sm: 0x210e, me: 0x00000000},
			dr{ne: 0x173f3000173f9, re: 0x1b0a, si: 0x00000000, sm: -0x0001, me: 0x210f00002119},
			dr{ne: 0x1744b00017450, re: 0x1b15, si: 0x00000000, sm: -0x0001, me: 0x21190000211c},
			dr{ne: 0x174660001746e, re: -0x0001, si: 0x1746e00017476, sm: -0x0001, me: 0x211c00002147},
			dr{ne: 0x175ad000175b2, re: 0x1b43, si: 0x00000000, sm: -0x0001, me: 0x214700002149},
			dr{ne: 0x175e1000175e7, re: 0x1b44, si: 0x00000000, sm: -0x0001, me: 0x21490000215f},
			dr{ne: 0x1773400017739, re: 0x1b4d, si: 0x00000000, sm: 0x215f, me: 0x00000000},
			dr{ne: 0x1773900017741, re: 0x1b4e, si: 0x00000000, sm: -0x0001, me: 0x21600000216f},
			dr{ne: 0x177da000177e3, re: 0x1b5d, si: 0x00000000, sm: -0x0001, me: 0x216f00002175},
			dr{ne: 0x1781e00017825, re: -0x0001, si: 0x1781e00017825, sm: -0x0001, me: 0x217500002176},
			dr{ne: 0x178250001782a, re: 0x1b65, si: 0x00000000, sm: -0x0001, me: 0x21760000217d},
			dr{ne: 0x1787f00017885, re: 0x1b67, si: 0x00000000, sm: 0x217d, me: 0x00000000},
			dr{ne: 0x1788500017889, re: -0x0001, si: 0x1788900017890, sm: -0x0001, me: 0x217e0000217f},
			dr{ne: 0x1789000017895, re: 0x1b69, si: 0x00000000, sm: -0x0001, me: 0x217f00002181},
			dr{ne: 0x1789b000178a0, re: 0x1b6c, si: 0x00000000, sm: -0x0001, me: 0x218100002182},
			dr{ne: 0x178a5000178b1, re: 0x1b6e, si: 0x00000000, sm: -0x0001, me: 0x218200002184},
			dr{ne: 0x178cb000178d3, re: 0x1b6f, si: 0x00000000, sm: -0x0001, me: 0x218400002187},
			dr{ne: 0x178d3000178d9, re: 0x1b73, si: 0x00000000, sm: -0x0001, me: 0x218700002189},
			dr{ne: 0x178d9000178de, re: 0x1b76, si: 0x00000000, sm: -0x0001, me: 0x218900002194},
			dr{ne: 0x179280001792c, re: 0x1b82, si: 0x00000000, sm: -0x0001, me: 0x219400002274},
			dr{ne: 0x17df600017dfb, re: 0x1c52, si: 0x00000000, sm: -0x0001, me: 0x227400002278},
			dr{ne: 0x17e0f00017e16, re: 0x1c54, si: 0x00000000, sm: -0x0001, me: 0x22780000227a},
			dr{ne: 0x17e2500017e2d, re: 0x1c56, si: 0x00000000, sm: -0x0001, me: 0x227a000022a9},
			dr{ne: 0x180c8000180ce, re: 0x1c6d, si: 0x00000000, sm: -0x0001, me: 0x22a9000022c3},
			dr{ne: 0x181b2000181b8, re: 0x1c82, si: 0x00000000, sm: -0x0001, me: 0x22c3000022c8},
			dr{ne: 0x181d6000181dc, re: -0x0001, si: 0x181dc000181e2, sm: -0x0001, me: 0x22c8000022c9},
			dr{ne: 0x181ea000181f0, re: 0x1c88, si: 0x00000000, sm: -0x0001, me: 0x22c9000022ca},
			dr{ne: 0x181fb00018200, re: 0x1c89, si: 0x00000000, sm: 0x22ca, me: 0x00000000},
			dr{ne: 0x1820000018204, re: 0x1c8a, si: 0x00000000, sm: -0x0001, me: 0x22cb000022ce},
			dr{ne: 0x182040001820a, re: 0x1c8e, si: 0x00000000, sm: 0x22ce, me: 0x00000000},
			dr{ne: 0x1820a0001820e, re: 0x1c8f, si: 0x00000000, sm: -0x0001, me: 0x22cf000022d2},
			dr{ne: 0x182140001821a, re: 0x1c93, si: 0x00000000, sm: -0x0001, me: 0x22d2000022d9},
			dr{ne: 0x1825300018257, re: 0x1c9b, si: 0x00000000, sm: -0x0001, me: 0x22d9000022e0},
			dr{ne: 0x93ab000093b1, re: 0x1ca3, si: 0x00000000, sm: -0x0001, me: 0x22e0000022e4},
			dr{ne: 0x182ad000182af, re: 0x1ca7, si: 0x00000000, sm: 0x22e4, me: 0x00000000},
			dr{ne: 0x182af000182b3, re: 0x1ca8, si: 0x00000000, sm: 0x22e5, me: 0x00000000},
			dr{ne: 0x182c2000182c8, re: 0x1ca9, si: 0x00000000, sm: -0x0001, me: 0x22e6000022ee},
			dr{ne: 0x183280001832e, re: -0x0001, si: 0x1832e00018336, sm: -0x0001, me: 0x22ee000022ef},
			dr{ne: 0x1833e00018345, re: 0x1cb1, si: 0x00000000, sm: 0x22ef, me: 0x00000000},
			dr{ne: 0x1834500018354, re: 0x1cb2, si: 0x00000000, sm: -0x0001, me: 0x22f0000022f1},
			dr{ne: 0x1836f00018378, re: 0x1cb3, si: 0x00000000, sm: -0x0001, me: 0x22f1000022f2},
			dr{ne: 0x183780001837e, re: 0x1cb5, si: 0x00000000, sm: -0x0001, me: 0x22f2000022fb},
			dr{ne: 0x183ad000183b3, re: 0x1cbf, si: 0x00000000, sm: 0x22fb, me: 0x00000000},
			dr{ne: 0x183b3000183b8, re: 0x1cc0, si: 0x00000000, sm: 0x22fc, me: 0x00000000},
			dr{ne: 0x183b8000183bc, re: 0x1cc1, si: 0x00000000, sm: -0x0001, me: 0x22fd00002367},
			dr{ne: 0x187270001872f, re: 0x1d15, si: 0x00000000, sm: -0x0001, me: 0x23670000236f},
			dr{ne: 0x187670001876c, re: 0x1d1c, si: 0x00000000, sm: 0x236f, me: 0x00000000},
			dr{ne: 0x187780001877c, re: 0x1d1d, si: 0x00000000, sm: -0x0001, me: 0x237000002372},
			dr{ne: 0x1877c00018782, re: 0x1d20, si: 0x00000000, sm: -0x0001, me: 0x237200002375},
			dr{ne: 0x1878200018789, re: 0x1d24, si: 0x00000000, sm: -0x0001, me: 0x237500002378},
			dr{ne: 0x1879000018798, re: -0x0001, si: 0x187980001879c, sm: 0x2378, me: 0x00000000},
			dr{ne: 0x1879c000187a3, re: 0x1d28, si: 0x00000000, sm: 0x2379, me: 0x00000000},
			dr{ne: 0x187ab000187b1, re: 0x1d29, si: 0x00000000, sm: -0x0001, me: 0x237a0000237e},
			dr{ne: 0x187e1000187e9, re: 0x1d2d, si: 0x00000000, sm: 0x237e, me: 0x00000000},
			dr{ne: 0x187f0000187f5, re: 0x1d2e, si: 0x00000000, sm: -0x0001, me: 0x237f00002381},
			dr{ne: 0x1880c00018810, re: 0x1d2f, si: 0x00000000, sm: 0x2381, me: 0x00000000},
			dr{ne: 0x1881000018813, re: -0x0001, si: 0x1881300018822, sm: -0x0001, me: 0x238200002383},
			dr{ne: 0x1882900018831, re: 0x1d30, si: 0x00000000, sm: 0x2383, me: 0x00000000},
			dr{ne: 0x1883d00018843, re: 0x1d31, si: 0x00000000, sm: -0x0001, me: 0x238400002389},
			dr{ne: 0x188590001885d, re: 0x1d37, si: 0x00000000, sm: 0x2389, me: 0x00000000},
			dr{ne: 0x1885d00018863, re: 0x1d38, si: 0x00000000, sm: -0x0001, me: 0x238a00002394},
			dr{ne: 0x188ed000188f3, re: 0x1d3e, si: 0x00000000, sm: -0x0001, me: 0x239400002399},
			dr{ne: 0x1895a0001895f, re: 0x1d40, si: 0x00000000, sm: 0x2399, me: 0x00000000},
			dr{ne: 0x1895f00018964, re: 0x1d41, si: 0x00000000, sm: -0x0001, me: 0x239a0000239d},
			dr{ne: 0x1896700018971, re: 0x1d45, si: 0x00000000, sm: -0x0001, me: 0x239d000023a4},
			dr{ne: 0x189b7000189bd, re: 0x1d4d, si: 0x00000000, sm: -0x0001, me: 0x23a400002453},
			dr{ne: 0x191b2000191b6, re: 0x1dec, si: 0x00000000, sm: -0x0001, me: 0x245300002454},
			dr{ne: 0x191ba000191be, re: 0x1dee, si: 0x00000000, sm: -0x0001, me: 0x24540000245b},
			dr{ne: 0x191e6000191ea, re: 0x1df5, si: 0x00000000, sm: -0x0001, me: 0x245b00002460},
			dr{ne: 0x1921100019218, re: 0x1dfb, si: 0x00000000, sm: 0x2460, me: 0x00000000},
			dr{ne: 0x192180001921e, re: 0x1dfc, si: 0x00000000, sm: -0x0001, me: 0x246100002464},
			dr{ne: 0x192270001922f, re: 0x1e00, si: 0x00000000, sm: 0x2464, me: 0x00000000},
			dr{ne: 0x1922f00019234, re: 0x1e01, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x192340001923a, re: 0x1e02, si: 0x00000000, sm: 0x2465, me: 0x00000000},
			dr{ne: 0x1923a00019240, re: 0x1e03, si: 0x00000000, sm: 0x2466, me: 0x00000000},
			dr{ne: 0x1924000019244, re: 0x1e04, si: 0x00000000, sm: -0x0001, me: 0x24670000246d},
			dr{ne: 0x1929200019298, re: 0x1e07, si: 0x00000000, sm: 0x246d, me: 0x00000000},
			dr{ne: 0x192a2000192a8, re: 0x1e08, si: 0x00000000, sm: -0x0001, me: 0x246e0000247e},
			dr{ne: 0x193b3000193b6, re: 0x1e0c, si: 0x00000000, sm: -0x0001, me: 0x247e00002482},
			dr{ne: 0x193e5000193e9, re: 0x1e0e, si: 0x00000000, sm: -0x0001, me: 0x24820000248c},
			dr{ne: 0x194560001945d, re: 0x1e13, si: 0x00000000, sm: 0x248c, me: 0x00000000},
			dr{ne: 0x1946400019468, re: 0x1e14, si: 0x00000000, sm: -0x0001, me: 0x248d0000248f},
			dr{ne: 0x1947400019479, re: 0x1e17, si: 0x00000000, sm: -0x0001, me: 0x248f00002491},
			dr{ne: 0x194790001947b, re: 0x1e1a, si: 0x00000000, sm: -0x0001, me: 0x249100002499},
			dr{ne: 0x194b3000194ba, re: 0x1e23, si: 0x00000000, sm: 0x2499, me: 0x00000000},
			dr{ne: 0x194be000194c3, re: 0x1e24, si: 0x00000000, sm: -0x0001, me: 0x249a0000249d},
			dr{ne: 0x194c8000194cd, re: 0x1e27, si: 0x00000000, sm: 0x249d, me: 0x00000000},
			dr{ne: 0x194cd000194d1, re: 0x1e28, si: 0x00000000, sm: -0x0001, me: 0x249e000024a0},
			dr{ne: 0x194ff00019504, re: 0x1e29, si: 0x00000000, sm: -0x0001, me: 0x24a0000024a1},
			dr{ne: 0x1950400019507, re: 0x1e2b, si: 0x00000000, sm: -0x0001, me: 0x24a100002587},
			dr{ne: 0x19ed100019ed4, re: 0x1ec7, si: 0x00000000, sm: -0x0001, me: 0x2587000025a8},
			dr{ne: 0x19fff0001a004, re: 0x1ed9, si: 0x00000000, sm: 0x25a8, me: 0x00000000},
			dr{ne: 0x1a0040001a009, re: 0x1eda, si: 0x00000000, sm: -0x0001, me: 0x25a9000025ae},
			dr{ne: 0x1a0520001a057, re: 0x1edd, si: 0x00000000, sm: -0x0001, me: 0x25ae000025b0},
			dr{ne: 0x1a0570001a05c, re: 0x1ee0, si: 0x00000000, sm: -0x0001, me: 0x25b0000025b2},
			dr{ne: 0x1a05c0001a05f, re: 0x1ee3, si: 0x00000000, sm: -0x0001, me: 0x25b2000025b5},
			dr{ne: 0x1a0740001a079, re: 0x1ee6, si: 0x00000000, sm: -0x0001, me: 0x25b5000025ba},
			dr{ne: 0x1a0ae0001a0b7, re: 0x1ee7, si: 0x00000000, sm: 0x25ba, me: 0x00000000},
			dr{ne: 0x1a0c20001a0c8, re: 0x1ee8, si: 0x00000000, sm: 0x25bb, me: 0x00000000},
			dr{ne: 0x1a0cc0001a0d1, re: 0x1ee9, si: 0x00000000, sm: 0x25bc, me: 0x00000000},
			dr{ne: 0x1a0d10001a0d5, re: 0x1eea, si: 0x00000000, sm: -0x0001, me: 0x25bd000025c2},
			dr{ne: 0x1a0fd0001a102, re: 0x1ef0, si: 0x00000000, sm: -0x0001, me: 0x25c2000025c4},
			dr{ne: 0x1a10c0001a110, re: 0x1ef2, si: 0x00000000, sm: -0x0001, me: 0x25c4000025dc},
			dr{ne: 0x1a1b30001a1b7, re: 0x1f0b, si: 0x00000000, sm: -0x0001, me: 0x25dc000025f7},
			dr{ne: 0x1a30b0001a30f, re: 0x1f15, si: 0x00000000, sm: -0x0001, me: 0x25f7000025fc},
			dr{ne: 0x1a3170001a31c, re: -0x0001, si: 0x1a31c0001a321, sm: 0x25fc, me: 0x00000000},
			dr{ne: 0x1a3210001a327, re: 0x1f1b, si: 0x00000000, sm: -0x0001, me: 0x25fd00002600},
			dr{ne: 0x1a3380001a33b, re: 0x1f1d, si: 0x00000000, sm: 0x2600, me: 0x00000000},
			dr{ne: 0x1a3440001a348, re: 0x1f1e, si: 0x00000000, sm: -0x0001, me: 0x260100002606},
			dr{ne: 0x1a3a50001a3a7, re: 0x1f20, si: 0x00000000, sm: -0x0001, me: 0x2606000026ca},
			dr{ne: 0x1a9040001a909, re: 0x1fd1, si: 0x00000000, sm: -0x0001, me: 0x26ca000026d2},
			dr{ne: 0x1a9cd0001a9d3, re: 0x1fd6, si: 0x00000000, sm: 0x26d2, me: 0x00000000},
			dr{ne: 0x1a9d30001a9d7, re: 0x1fd7, si: 0x00000000, sm: 0x26d3, me: 0x00000000},
			dr{ne: 0x1a9d70001a9df, re: 0x1fd8, si: 0x00000000, sm: -0x0001, me: 0x26d4000026d6},
			dr{ne: 0x1a9f70001a9fc, re: 0x1fda, si: 0x00000000, sm: -0x0001, me: 0x26d6000026df},
			dr{ne: 0x1aa3d0001aa43, re: 0x1fe4, si: 0x00000000, sm: 0x26df, me: 0x00000000},
			dr{ne: 0x1aa430001aa4b, re: 0x1fe5, si: 0x00000000, sm: -0x0001, me: 0x26e0000026e6},
			dr{ne: 0x1aa5a0001aa5f, re: 0x1fec, si: 0x00000000, sm: -0x0001, me: 0x26e6000026ee},
			dr{ne: 0x1aaa50001aaab, re: 0x1ff3, si: 0x00000000, sm: -0x0001, me: 0x26ee000026f0},
			dr{ne: 0x1aaab0001aab0, re: 0x1ff6, si: 0x00000000, sm: -0x0001, me: 0x26f0000026f5},
			dr{ne: 0x1aaca0001aacf, re: 0x1ffc, si: 0x00000000, sm: 0x26f5, me: 0x00000000},
			dr{ne: 0x1aacf0001aad5, re: 0x1ffd, si: 0x00000000, sm: 0x26f6, me: 0x00000000},
			dr{ne: 0x1aade0001aae2, re: 0x1ffe, si: 0x00000000, sm: 0x26f7, me: 0x00000000},
			dr{ne: 0x1aae20001aae7, re: 0x1fff, si: 0x00000000, sm: -0x0001, me: 0x26f800002712},
			dr{ne: 0x1ad7e0001ad83, re: 0x2003, si: 0x00000000, sm: 0x2712, me: 0x00000000},
			dr{ne: 0x1ad830001ad87, re: 0x2004, si: 0x00000000, sm: 0x2713, me: 0x00000000},
			dr{ne: 0x1ad870001ad8a, re: 0x2005, si: 0x00000000, sm: 0x2714, me: 0x00000000},
			dr{ne: 0x1ad8a0001ad8f, re: 0x2006, si: 0x00000000, sm: 0x2715, me: 0x00000000},
			dr{ne: 0x1ad8f0001ad93, re: 0x2007, si: 0x00000000, sm: 0x2716, me: 0x00000000},
			dr{ne: 0x1ad930001ad98, re: 0x2008, si: 0x00000000, sm: -0x0001, me: 0x27170000271a},
			dr{ne: 0x1add00001add4, re: 0x2009, si: 0x00000000, sm: -0x0001, me: 0x271a00002720},
			dr{ne: 0x1adef0001adf5, re: 0x2010, si: 0x00000000, sm: -0x0001, me: 0x272000002727},
			dr{ne: 0x1ae270001ae2f, re: 0x2015, si: 0x00000000, sm: 0x2727, me: 0x00000000},
			dr{ne: 0x1ae2f0001ae36, re: -0x0001, si: 0x1ae360001ae3d, sm: -0x0001, me: 0x272800002729},
			dr{ne: 0x1ae3d0001ae41, re: 0x2017, si: 0x00000000, sm: -0x0001, me: 0x272900002736},
			dr{ne: 0x1aee50001aee9, re: 0x201c, si: 0x00000000, sm: 0x2736, me: 0x00000000},
			dr{ne: 0x1aee90001aeee, re: 0x201d, si: 0x00000000, sm: -0x0001, me: 0x27370000273a},
			dr{ne: 0x1aef70001aefc, re: 0x2021, si: 0x00000000, sm: -0x0001, me: 0x273a0000273c},
			dr{ne: 0x1aefc0001af01, re: 0x2024, si: 0x00000000, sm: -0x0001, me: 0x273c00002742},
			dr{ne: 0x1af160001af22, re: 0x202b, si: 0x00000000, sm: 0x2742, me: 0x00000000},
			dr{ne: 0x1af270001af2b, re: 0x202c, si: 0x00000000, sm: -0x0001, me: 0x27430000276c},
			dr{ne: 0x1b0a30001b0a9, re: 0x2037, si: 0x00000000, sm: 0x276c, me: 0x00000000},
			dr{ne: 0x1b0b00001b0b3, re: 0x2038, si: 0x00000000, sm: -0x0001, me: 0x276d0000276f},
			dr{ne: 0x1b0bb0001b0c0, re: 0x203b, si: 0x00000000, sm: -0x0001, me: 0x276f00002771},
			dr{ne: 0x1b0d60001b0dc, re: 0x203d, si: 0x00000000, sm: -0x0001, me: 0x277100002774},
			dr{ne: 0x1b0fb0001b103, re: 0x203f, si: 0x00000000, sm: -0x0001, me: 0x277400002775},
			dr{ne: 0x1b1030001b10a, re: 0x2041, si: 0x00000000, sm: -0x0001, me: 0x277500002777},
			dr{ne: 0x1b1230001b127, re: 0x2044, si: 0x00000000, sm: 0x2777, me: 0x00000000},
			dr{ne: 0x1b1270001b12d, re: 0x2045, si: 0x00000000, sm: 0x2778, me: 0x00000000},
			dr{ne: 0x1b12d0001b133, re: 0x2046, si: 0x00000000, sm: -0x0001, me: 0x27790000277c},
			dr{ne: 0x1b13a0001b142, re: 0x204a, si: 0x00000000, sm: 0x277c, me: 0x00000000},
			dr{ne: 0x1b1420001b147, re: 0x204b, si: 0x00000000, sm: -0x0001, me: 0x277d000027af},
			dr{ne: 0x1b4910001b499, re: 0x205f, si: 0x00000000, sm: -0x0001, me: 0x27af000027b1},
			dr{ne: 0x1b49f0001b4a3, re: 0x2062, si: 0x00000000, sm: -0x0001, me: 0x27b1000027b9},
		},
		// notebooks.yml
		{
			dr{ne: 0x55100000555, re: 0x2068, si: 0x00000000, sm: -0x0001, me: 0x27b9000027bc},
			dr{ne: 0x2eeb00002eef, re: 0x206c, si: 0x00000000, sm: -0x0001, me: 0x27bc000027c5},
			dr{ne: 0x55c3000055c7, re: 0x2076, si: 0x00000000, sm: -0x0001, me: 0x27c5000027c9},
			dr{ne: 0x771400007716, re: 0x2077, si: 0x00000000, sm: -0x0001, me: 0x27c9000027d4},
			dr{ne: 0xbb680000bb6e, re: 0x207a, si: 0x00000000, sm: -0x0001, me: 0x27d4000027d8},
			dr{ne: 0x1b7520001b75b, re: 0x207f, si: 0x00000000, sm: 0x27d8, me: 0x00000000},
			dr{ne: 0x167d0000167d7, re: 0x2080, si: 0x00000000, sm: 0x27d9, me: 0x00000000},
			dr{ne: 0x169ce000169d5, re: -0x0001, si: 0x1b78c0001b79b, sm: -0x0001, me: 0x27da000027dc},
		},
		// portable_media_player.yml
		{
			dr{ne: 0x1f5800001f5d, re: 0x2083, si: 0x00000000, sm: -0x0001, me: 0x27dc000027e4},
			dr{ne: 0x1b8070001b80c, re: 0x208c, si: 0x00000000, sm: 0x27e4, me: 0x00000000},
			dr{ne: 0x1b80c0001b810, re: -0x0001, si: 0x1b80c0001b810, sm: -0x0001, me: 0x27e5000027e7},
			dr{ne: 0xe6000000ef, re: -0x0001, si: 0x1b81c0001b82c, sm: 0x27e7, me: 0x00000000},
			dr{ne: 0x105e3000105ec, re: 0x208e, si: 0x00000000, sm: 0x27e8, me: 0x00000000},
			dr{ne: 0x1b8330001b838, re: 0x208f, si: 0x00000000, sm: -0x0001, me: 0x27e9000027ec},
			dr{ne: 0x1200000019, re: 0x2093, si: 0x00000000, sm: -0x0001, me: 0x27ec000027f3},
			dr{ne: 0x1b8de0001b8e6, re: -0x0001, si: 0x1b8e60001b8f1, sm: -0x0001, me: 0x27f3000027f4},
			dr{ne: 0x1b8f10001b8f5, re: 0x2096, si: 0x00000000, sm: 0x27f4, me: 0x00000000},
		},
		// shell_tv.yml
		{
			dr{ne: 0x1b8f50001b8fa, re: -0x0001, si: 0x1b8fa0001b905, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1b9050001b909, re: -0x0001, si: 0x1b9090001b913, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x36b6000036b9, re: -0x0001, si: 0x1b9130001b91c, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x564d00005652, re: -0x0001, si: 0x1b91c0001b927, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1b9270001b92b, re: -0x0001, si: 0x1b92b0001b935, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x60830000608a, re: 0x2097, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x7bb600007bb8, re: -0x0001, si: 0x1b9350001b93d, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x9f1d00009f20, re: -0x0001, si: 0x1b93d0001b946, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1b9460001b94b, re: -0x0001, si: 0x1b94b0001b956, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1b9560001b95b, re: -0x0001, si: 0x1b95b0001b966, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xbb320000bb36, re: -0x0001, si: 0x1b9660001b970, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1b9700001b976, re: -0x0001, si: 0x1b9760001b982, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xc63a0000c63f, re: -0x0001, si: 0x1b9820001b98d, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xe9810000e988, re: -0x0001, si: 0x1b98d0001b99a, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xf45a0000f45f, re: -0x0001, si: 0x1b99a0001b9a5, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x15ca900015cb1, re: -0x0001, si: 0x1b9a50001b9b3, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x166ee000166f8, re: -0x0001, si: 0x1b9b30001b9c3, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1b9c30001b9c7, re: -0x0001, si: 0x1b9c70001b9d1, sm: -0x0001, me: 0x00000000},
		},
		// televisions.yml
		{
			dr{ne: 0x33000000339, re: 0x2098, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x33900000342, re: 0x2099, si: 0x00000000, sm: -0x0001, me: 0x27f5000027f6},
			dr{ne: 0x3db000003de, re: -0x0001, si: 0x3db000003de, sm: -0x0001, me: 0x27f6000027f7},
			dr{ne: 0x3f2000003f7, re: 0x209c, si: 0x00000000, sm: -0x0001, me: 0x27f7000027f8},
			dr{ne: 0x1b9db0001b9e2, re: -0x0001, si: 0x1b9db0001b9e2, sm: -0x0001, me: 0x27f8000027f9},
			dr{ne: 0x1b9e20001b9ec, re: -0x0001, si: 0x1b9e20001b9ec, sm: -0x0001, me: 0x27f9000027fa},
			dr{ne: 0x34bd000034c2, re: -0x0001, si: 0x1b9ec0001b9f1, sm: -0x0001, me: 0x27fa000027fb},
			dr{ne: 0x1b9f80001ba03, re: -0x0001, si: 0x1ba030001ba0e, sm: 0x27fb, me: 0x00000000},
			dr{ne: 0x3a2200003a2b, re: 0x209f, si: 0x00000000, sm: -0x0001, me: 0x27fc000027fd},
			dr{ne: 0x41f0000041f4, re: 0x20a0, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x45cd000045d3, re: 0x20a1, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x4699000046a2, re: -0x0001, si: 0x4699000046a2, sm: -0x0001, me: 0x27fd000027fe},
			dr{ne: 0x1ba240001ba2b, re: -0x0001, si: 0x1ba240001ba2b, sm: 0x27fe, me: 0x00000000},
			dr{ne: 0x1ba310001ba34, re: -0x0001, si: 0x1ba310001ba34, sm: 0x27ff, me: 0x00000000},
			dr{ne: 0x56320000563a, re: 0x20a3, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1ba3c0001ba46, re: 0x20a4, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x6097000060a1, re: 0x20a5, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1ba460001ba49, re: 0x20a6, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x667b00006681, re: 0x20a7, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x37c00000381, re: 0x20a8, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1ba490001ba4e, re: 0x20a9, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x767e00007685, re: 0x20aa, si: 0x00000000, sm: -0x0001, me: 0x280000002801},
			dr{ne: 0x7a8200007a87, re: 0x20ab, si: 0x00000000, sm: -0x0001, me: 0x280100002802},
			dr{ne: 0x7be700007bef, re: 0x20ac, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x7d6600007d6d, re: 0x20ad, si: 0x00000000, sm: -0x0001, me: 0x28020000280a},
			dr{ne: 0x7f3300007f3a, re: 0x20b0, si: 0x00000000, sm: -0x0001, me: 0x280a0000280b},
			dr{ne: 0x6b0200006b09, re: 0x20b1, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1ba9e0001baa3, re: 0x20b2, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1baa30001baa8, re: 0x20b3, si: 0x00000000, sm: -0x0001, me: 0x280b00002812},
			dr{ne: 0x941e00009425, re: 0x20b6, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1bafd0001bb01, re: -0x0001, si: 0x1bafd0001bb01, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1bb010001bb06, re: -0x0001, si: 0x1bb010001bb06, sm: -0x0001, me: 0x281200002813},
			dr{ne: 0x1bb060001bb0d, re: -0x0001, si: 0x1bb060001bb0d, sm: -0x0001, me: 0x281300002815},
			dr{ne: 0x9f1d00009f20, re: 0x20ba, si: 0x00000000, sm: -0x0001, me: 0x281500002816},
			dr{ne: 0x1bb1e0001bb22, re: 0x20bb, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xa1830000a189, re: 0x20bc, si: 0x00000000, sm: -0x0001, me: 0x281600002817},
			dr{ne: 0xab7c0000ab7e, re: -0x0001, si: 0x1bb290001bb2c, sm: -0x0001, me: 0x281700002827},
			dr{ne: 0x1bb780001bb7e, re: 0x20c6, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xc4750000c47d, re: 0x20c7, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1bb7e0001bb84, re: 0x20c8, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1bb840001bb89, re: -0x0001, si: 0x1bb840001bb89, sm: -0x0001, me: 0x282700002828},
			dr{ne: 0xc6540000c659, re: 0x20ca, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1bb890001bb8e, re: 0x20cb, si: 0x00000000, sm: -0x0001, me: 0x282800002829},
			dr{ne: 0xca720000ca75, re: 0x20cd, si: 0x00000000, sm: -0x0001, me: 0x28290000282a},
			dr{ne: 0x1bba30001bbac, re: -0x0001, si: 0x1bba30001bbac, sm: -0x0001, me: 0x282a0000282b},
			dr{ne: 0x1bbae0001bbb6, re: 0x20cf, si: 0x00000000, sm: -0x0001, me: 0x282b0000282c},
			dr{ne: 0xd3480000d34e, re: -0x0001, si: 0xd3480000d34e, sm: -0x0001, me: 0x282c0000282d},
			dr{ne: 0x1bbb60001bbba, re: -0x0001, si: 0x1bbb60001bbba, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xd8d60000d8db, re: -0x0001, si: 0x1bbba0001bbbf, sm: -0x0001, me: 0x282d0000282e},
			dr{ne: 0x1bbca0001bbd3, re: 0x20d2, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0xfff60000fff8, re: 0x20d3, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1bbd30001bbd7, re: -0x0001, si: 0x1bbd30001bbd7, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1bbd70001bbde, re: 0x20d4, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x105e3000105ec, re: -0x0001, si: 0x105e3000105ec, sm: -0x0001, me: 0x282e00002832},
			dr{ne: 0x107ae000107b5, re: 0x20d9, si: 0x00000000, sm: -0x0001, me: 0x283200002834},
			dr{ne: 0x10b0f00010b17, re: 0x20dc, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1164100011647, re: 0x20dd, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1bbfc0001bc01, re: 0x20de, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1bc010001bc05, re: 0x20df, si: 0x00000000, sm: -0x0001, me: 0x283400002836},
			dr{ne: 0x1bc130001bc16, re: 0x20e0, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1bc160001bc1a, re: 0x20e1, si: 0x00000000, sm: -0x0001, me: 0x283600002837},
			dr{ne: 0x1bc230001bc27, re: 0x20e2, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1bc270001bc2d, re: 0x20e3, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1200000019, re: 0x20e4, si: 0x00000000, sm: -0x0001, me: 0x28370000283a},
			dr{ne: 0x1bc480001bc52, re: -0x0001, si: 0x1bc480001bc52, sm: -0x0001, me: 0x283a0000283c},
			dr{ne: 0x1492000014925, re: 0x20e9, si: 0x00000000, sm: -0x0001, me: 0x283c00002841},
			dr{ne: 0x14fbe00014fc6, re: -0x0001, si: 0x1bc5d0001bc66, sm: -0x0001, me: 0x284100002842},
			dr{ne: 0x1bc660001bc76, re: 0x20ef, si: 0x00000000, sm: -0x0001, me: 0x284200002844},
			dr{ne: 0x17200000176, re: -0x0001, si: 0x17200000176, sm: -0x0001, me: 0x28440000284a},
			dr{ne: 0x15f5b00015f5e, re: -0x0001, si: 0x15f5b00015f5e, sm: -0x0001, me: 0x284a0000284b},
			dr{ne: 0x1601e00016028, re: 0x20f8, si: 0x00000000, sm: -0x0001, me: 0x284b0000284c},
			dr{ne: 0x1bc8e0001bc93, re: 0x20fa, si: 0x00000000, sm: -0x0001, me: 0x284c0000284d},
			dr{ne: 0x1bc9e0001bca7, re: -0x0001, si: 0x1bc9e0001bca7, sm: -0x0001, me: 0x284d0000284e},
			dr{ne: 0x1bca70001bcb2, re: -0x0001, si: 0x1bca70001bcb2, sm: -0x0001, me: 0x284e0000284f},
			dr{ne: 0x1bcc60001bcce, re: 0x20fc, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1bcce0001bcd9, re: -0x0001, si: 0x1bcce0001bcd9, sm: -0x0001, me: 0x284f00002850},
			dr{ne: 0x161870001618f, re: 0x20fe, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x166ee000166f8, re: -0x0001, si: 0x166ee000166f8, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x167d0000167d7, re: 0x20ff, si: 0x00000000, sm: -0x0001, me: 0x285000002857},
			dr{ne: 0x169ce000169d5, re: -0x0001, si: 0x169ce000169d5, sm: -0x0001, me: 0x285700002859},
			dr{ne: 0x171280001712f, re: 0x2107, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1bd180001bd1b, re: 0x2108, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x175e1000175e7, re: 0x2109, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1bd1b0001bd23, re: 0x210a, si: 0x00000000, sm: -0x0001, me: 0x28590000285b},
			dr{ne: 0x1bd2e0001bd38, re: 0x210d, si: 0x00000000, sm: -0x0001, me: 0x00000000},
			dr{ne: 0x1bd380001bd40, re: 0x210e, si: 0x00000000, sm: -0x0001, me: 0x00000000},
		},
	}
	__dr_dm = []dm{
		dm{re: -0x0001, si: 0x00000000, ne: 0x500000012},
		dm{re: -0x0001, si: 0x1900000021, ne: 0x210000002a},
		dm{re: -0x0001, si: 0x2a00000032, ne: 0x320000003f},
		dm{re: -0x0001, si: 0x3f00000047, ne: 0x470000005e},
		dm{re: -0x0001, si: 0x5e00000066, ne: 0x6600000075},
		dm{re: 0x0001, si: 0x00000000, ne: 0x7500000085},
		dm{re: -0x0001, si: 0x9c000000a0, ne: 0xa0000000a5},
		dm{re: -0x0001, si: 0xaa000000b6, ne: 0xb6000000bd},
		dm{re: 0x0003, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: -0x0001, si: 0xc3000000d3, ne: 0xd3000000d6},
		dm{re: -0x0001, si: 0x00000000, ne: 0xdc000000e6},
		dm{re: -0x0001, si: 0xf300000100, ne: 0xf300000100},
		dm{re: -0x0001, si: 0x1000000010a, ne: 0x1000000010a},
		dm{re: -0x0001, si: 0x10a00000112, ne: 0x10a00000112},
		dm{re: -0x0001, si: 0x1120000011d, ne: 0x11d00000127},
		dm{re: -0x0001, si: 0xef000000f3, ne: 0x1270000012f},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1390000013d},
		dm{re: -0x0001, si: 0x00000000, ne: 0x15f00000165},
		dm{re: -0x0001, si: 0x00000000, ne: 0x16900000172},
		dm{re: -0x0001, si: 0x00000000, ne: 0x17600000184},
		dm{re: 0x0008, si: 0x00000000, ne: 0x18600000192},
		dm{re: 0x0009, si: 0x00000000, ne: 0x1920000019d},
		dm{re: 0x000b, si: 0x00000000, ne: 0x1a0000001a2},
		dm{re: 0x000c, si: 0x00000000, ne: 0x1a2000001a9},
		dm{re: 0x000d, si: 0x00000000, ne: 0x1a9000001af},
		dm{re: 0x000e, si: 0x00000000, ne: 0x1af000001b6},
		dm{re: 0x000f, si: 0x00000000, ne: 0x1b6000001b8},
		dm{re: 0x0010, si: 0x00000000, ne: 0x1b8000001be},
		dm{re: 0x0011, si: 0x00000000, ne: 0x1be000001c5},
		dm{re: 0x0012, si: 0x00000000, ne: 0x1c5000001c7},
		dm{re: 0x0013, si: 0x00000000, ne: 0x1c7000001c9},
		dm{re: 0x0014, si: 0x00000000, ne: 0x1c9000001cc},
		dm{re: 0x0015, si: 0x00000000, ne: 0x1cc000001cf},
		dm{re: 0x0016, si: 0x00000000, ne: 0x1cf000001d2},
		dm{re: 0x0018, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0019, si: 0x00000000, ne: 0x1d7000001db},
		dm{re: 0x001b, si: 0x00000000, ne: 0x1de000001e6},
		dm{re: 0x001d, si: 0x00000000, ne: 0x1e8000001f2},
		dm{re: 0x001e, si: 0x00000000, ne: 0x1f2000001fc},
		dm{re: 0x001f, si: 0x00000000, ne: 0x1fc00000205},
		dm{re: -0x0001, si: 0x2050000020c, ne: 0x20c00000218},
		dm{re: 0x0020, si: 0x00000000, ne: 0x21800000221},
		dm{re: 0x0021, si: 0x00000000, ne: 0x2210000022a},
		dm{re: 0x0022, si: 0x00000000, ne: 0x22a00000235},
		dm{re: 0x0023, si: 0x00000000, ne: 0x2350000023f},
		dm{re: 0x0025, si: 0x00000000, ne: 0x24400000249},
		dm{re: 0x0026, si: 0x00000000, ne: 0x24900000252},
		dm{re: 0x0027, si: 0x00000000, ne: 0x25200000258},
		dm{re: 0x0028, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0029, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x2640000026a, ne: 0x2640000026a},
		dm{re: -0x0001, si: 0x26a0000026f, ne: 0x26f00000274},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x002e, si: 0x00000000, ne: 0x27a00000287},
		dm{re: -0x0001, si: 0x2870000028f, ne: 0x2870000028f},
		dm{re: -0x0001, si: 0x28f00000297, ne: 0x28f00000297},
		dm{re: -0x0001, si: 0x2970000029f, ne: 0x29f000002a4},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0031, si: 0x00000000, ne: 0x2b0000002bf},
		dm{re: 0x0032, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0033, si: 0x00000000, ne: 0x2bf000002c1},
		dm{re: 0x0034, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0036, si: 0x00000000, ne: 0x2c7000002cf},
		dm{re: -0x0001, si: 0x2cf000002d7, ne: 0x2d7000002e0},
		dm{re: -0x0001, si: 0x2e0000002e7, ne: 0x2e0000002e7},
		dm{re: -0x0001, si: 0x00000000, ne: 0x2ec000002fa},
		dm{re: -0x0001, si: 0x2fd00000304, ne: 0x30400000310},
		dm{re: -0x0001, si: 0x3100000031d, ne: 0x31d00000330},
		dm{re: -0x0001, si: 0x3470000034c, ne: 0x34c00000354},
		dm{re: 0x003c, si: 0x00000000, ne: 0x35400000358},
		dm{re: -0x0001, si: 0x3580000035d, ne: 0x35d00000363},
		dm{re: -0x0001, si: 0x36300000368, ne: 0x3680000036d},
		dm{re: -0x0001, si: 0x36d00000372, ne: 0x37200000377},
		dm{re: -0x0001, si: 0x3770000037c, ne: 0x37c00000381},
		dm{re: -0x0001, si: 0x38100000386, ne: 0x38600000389},
		dm{re: -0x0001, si: 0x3890000038e, ne: 0x38e00000390},
		dm{re: -0x0001, si: 0x39000000395, ne: 0x39500000397},
		dm{re: -0x0001, si: 0x3970000039c, ne: 0x39c0000039f},
		dm{re: -0x0001, si: 0x39f000003a4, ne: 0x3a4000003a8},
		dm{re: -0x0001, si: 0x3a8000003ad, ne: 0x3ad000003b0},
		dm{re: -0x0001, si: 0x3b0000003b5, ne: 0x2780000027a},
		dm{re: -0x0001, si: 0x3b5000003ba, ne: 0x3ba000003bc},
		dm{re: 0x003d, si: 0x00000000, ne: 0x3bc000003c0},
		dm{re: -0x0001, si: 0x3c3000003cd, ne: 0x3cd000003d1},
		dm{re: -0x0001, si: 0x3d1000003d8, ne: 0x3d8000003db},
		dm{re: 0x0040, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0041, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0042, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x3ea000003f2},
		dm{re: 0x0044, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0046, si: 0x00000000, ne: 0x3fb00000407},
		dm{re: 0x0047, si: 0x00000000, ne: 0x40700000412},
		dm{re: 0x0048, si: 0x00000000, ne: 0x41200000420},
		dm{re: 0x0049, si: 0x00000000, ne: 0x42000000424},
		dm{re: 0x004a, si: 0x00000000, ne: 0x4240000042b},
		dm{re: 0x004b, si: 0x00000000, ne: 0x42b00000434},
		dm{re: 0x004c, si: 0x00000000, ne: 0x43400000440},
		dm{re: 0x004d, si: 0x00000000, ne: 0x44000000447},
		dm{re: 0x004e, si: 0x00000000, ne: 0x44700000452},
		dm{re: 0x004f, si: 0x00000000, ne: 0x4520000045c},
		dm{re: 0x0050, si: 0x00000000, ne: 0x45c00000464},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0053, si: 0x00000000, ne: 0x46c00000477},
		dm{re: 0x0054, si: 0x00000000, ne: 0x4770000047f},
		dm{re: 0x0055, si: 0x00000000, ne: 0x47f0000048b},
		dm{re: 0x0056, si: 0x00000000, ne: 0x48b00000492},
		dm{re: 0x0058, si: 0x00000000, ne: 0x4980000049c},
		dm{re: 0x0059, si: 0x00000000, ne: 0x49c000004ac},
		dm{re: 0x005a, si: 0x00000000, ne: 0x4ac000004b4},
		dm{re: 0x005b, si: 0x00000000, ne: 0x4b4000004c1},
		dm{re: 0x005c, si: 0x00000000, ne: 0x4c1000004cc},
		dm{re: 0x005d, si: 0x00000000, ne: 0x4cc000004d9},
		dm{re: 0x005e, si: 0x00000000, ne: 0x4d9000004e2},
		dm{re: 0x005f, si: 0x00000000, ne: 0x4e2000004ea},
		dm{re: 0x0060, si: 0x00000000, ne: 0x4ea000004f2},
		dm{re: 0x0061, si: 0x00000000, ne: 0x4f2000004fb},
		dm{re: 0x0063, si: 0x00000000, ne: 0x4fe0000050a},
		dm{re: 0x0064, si: 0x00000000, ne: 0x50a00000516},
		dm{re: 0x0065, si: 0x00000000, ne: 0x5160000051d},
		dm{re: -0x0001, si: 0x51d00000525, ne: 0x5250000052d},
		dm{re: -0x0001, si: 0x52d00000538, ne: 0x53800000543},
		dm{re: -0x0001, si: 0x5430000054a, ne: 0x54a00000551},
		dm{re: 0x0067, si: 0x00000000, ne: 0x5550000055d},
		dm{re: 0x0068, si: 0x00000000, ne: 0x55d00000564},
		dm{re: 0x0069, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x006a, si: 0x00000000, ne: 0x5640000056c},
		dm{re: 0x006b, si: 0x00000000, ne: 0x56c00000573},
		dm{re: -0x0001, si: 0x5730000057d, ne: 0x57d00000586},
		dm{re: -0x0001, si: 0x5860000058c, ne: 0x5860000058c},
		dm{re: 0x006c, si: 0x00000000, ne: 0x58c00000598},
		dm{re: 0x006d, si: 0x00000000, ne: 0x598000005a4},
		dm{re: -0x0001, si: 0x5a4000005aa, ne: 0x5aa000005b3},
		dm{re: 0x006e, si: 0x00000000, ne: 0x5b3000005c0},
		dm{re: -0x0001, si: 0x5c0000005c9, ne: 0x5c9000005d6},
		dm{re: 0x006f, si: 0x00000000, ne: 0x5d6000005df},
		dm{re: 0x0070, si: 0x00000000, ne: 0x5df000005ec},
		dm{re: 0x0071, si: 0x00000000, ne: 0x5ec000005f8},
		dm{re: 0x0072, si: 0x00000000, ne: 0x5f800000601},
		dm{re: 0x0073, si: 0x00000000, ne: 0x6010000060e},
		dm{re: 0x0074, si: 0x00000000, ne: 0x60e0000061a},
		dm{re: 0x0075, si: 0x00000000, ne: 0x61a00000627},
		dm{re: -0x0001, si: 0x6270000062b, ne: 0x62b00000632},
		dm{re: -0x0001, si: 0x63200000636, ne: 0x6360000063f},
		dm{re: 0x0076, si: 0x00000000, ne: 0x63f00000646},
		dm{re: -0x0001, si: 0x64600000650, ne: 0x65000000655},
		dm{re: -0x0001, si: 0x6550000065b, ne: 0x65b00000665},
		dm{re: 0x0077, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x66500000672, ne: 0x6720000067a},
		dm{re: 0x0078, si: 0x00000000, ne: 0x67a00000685},
		dm{re: 0x0079, si: 0x00000000, ne: 0x68500000690},
		dm{re: 0x007a, si: 0x00000000, ne: 0x6900000069e},
		dm{re: 0x007b, si: 0x00000000, ne: 0x69e000006ab},
		dm{re: 0x007c, si: 0x00000000, ne: 0x6ab000006b8},
		dm{re: 0x007d, si: 0x00000000, ne: 0x6b8000006c1},
		dm{re: 0x007e, si: 0x00000000, ne: 0x6c1000006ca},
		dm{re: 0x007f, si: 0x00000000, ne: 0x6ca000006d7},
		dm{re: 0x0080, si: 0x00000000, ne: 0x6d7000006e4},
		dm{re: 0x0081, si: 0x00000000, ne: 0x6e4000006f1},
		dm{re: 0x0082, si: 0x00000000, ne: 0x6f1000006fd},
		dm{re: 0x0083, si: 0x00000000, ne: 0x6fd00000707},
		dm{re: 0x0084, si: 0x00000000, ne: 0x70700000712},
		dm{re: 0x0085, si: 0x00000000, ne: 0x7120000071f},
		dm{re: 0x0086, si: 0x00000000, ne: 0x71f0000072c},
		dm{re: 0x0087, si: 0x00000000, ne: 0x6fd00000707},
		dm{re: 0x0088, si: 0x00000000, ne: 0x72c00000739},
		dm{re: 0x0089, si: 0x00000000, ne: 0x73900000744},
		dm{re: 0x008a, si: 0x00000000, ne: 0x7440000074f},
		dm{re: 0x008b, si: 0x00000000, ne: 0x74f0000075b},
		dm{re: 0x008c, si: 0x00000000, ne: 0x75b00000766},
		dm{re: 0x008d, si: 0x00000000, ne: 0x76600000774},
		dm{re: 0x008e, si: 0x00000000, ne: 0x77400000784},
		dm{re: 0x008f, si: 0x00000000, ne: 0x7840000078f},
		dm{re: 0x0090, si: 0x00000000, ne: 0x78f0000079a},
		dm{re: -0x0001, si: 0x79a000007a3, ne: 0x7a3000007a8},
		dm{re: 0x0091, si: 0x00000000, ne: 0x7a8000007b3},
		dm{re: 0x0092, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0093, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0094, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0095, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0096, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0097, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0098, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0099, si: 0x00000000, ne: 0x7b3000007c1},
		dm{re: -0x0001, si: 0x00000000, ne: 0x7cc000007d1},
		dm{re: 0x009b, si: 0x00000000, ne: 0x7d8000007e5},
		dm{re: 0x009c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x7ea000007f2, ne: 0x7f2000007f4},
		dm{re: -0x0001, si: 0x7f4000007fd, ne: 0x7fd00000800},
		dm{re: -0x0001, si: 0x80000000803, ne: 0x8030000080d},
		dm{re: 0x009e, si: 0x00000000, ne: 0x80d00000814},
		dm{re: 0x009f, si: 0x00000000, ne: 0x81400000817},
		dm{re: -0x0001, si: 0x8170000081a, ne: 0x81a0000081d},
		dm{re: 0x00a0, si: 0x00000000, ne: 0x81d00000823},
		dm{re: 0x00a1, si: 0x00000000, ne: 0x82300000829},
		dm{re: 0x00a2, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x8290000082f, ne: 0x82f00000835},
		dm{re: 0x00a4, si: 0x00000000, ne: 0x83c00000841},
		dm{re: 0x00a5, si: 0x00000000, ne: 0x8410000084e},
		dm{re: 0x00a6, si: 0x00000000, ne: 0x84e00000858},
		dm{re: 0x00a7, si: 0x00000000, ne: 0x85800000866},
		dm{re: 0x00a8, si: 0x00000000, ne: 0x86600000872},
		dm{re: 0x00aa, si: 0x00000000, ne: 0x87900000881},
		dm{re: 0x00ab, si: 0x00000000, ne: 0x88100000887},
		dm{re: 0x00ac, si: 0x00000000, ne: 0x88700000891},
		dm{re: 0x00ad, si: 0x00000000, ne: 0x8910000089d},
		dm{re: -0x0001, si: 0x8a2000008ad, ne: 0x8ad000008bf},
		dm{re: 0x00af, si: 0x00000000, ne: 0x8bf000008cc},
		dm{re: -0x0001, si: 0x8cc000008d8, ne: 0x8d8000008e5},
		dm{re: -0x0001, si: 0x8e5000008ec, ne: 0x8ec000008f9},
		dm{re: -0x0001, si: 0x8f900000904, ne: 0x90400000912},
		dm{re: -0x0001, si: 0x9120000091d, ne: 0x91d0000092a},
		dm{re: -0x0001, si: 0x92a00000935, ne: 0x93500000944},
		dm{re: 0x00b0, si: 0x00000000, ne: 0x9440000094f},
		dm{re: 0x00b1, si: 0x00000000, ne: 0x94f0000095b},
		dm{re: 0x00b2, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x95b00000964, ne: 0x96400000974},
		dm{re: -0x0001, si: 0x9740000097d, ne: 0x97d00000988},
		dm{re: 0x00b3, si: 0x00000000, ne: 0x98800000994},
		dm{re: 0x00b4, si: 0x00000000, ne: 0x9940000099a},
		dm{re: 0x00b5, si: 0x00000000, ne: 0x99a000009a1},
		dm{re: 0x00b6, si: 0x00000000, ne: 0x9a1000009ab},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x9b8000009c2, ne: 0x9c2000009cb},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x00bb, si: 0x00000000, ne: 0x9d4000009d9},
		dm{re: 0x00bc, si: 0x00000000, ne: 0x9d9000009de},
		dm{re: 0x00bd, si: 0x00000000, ne: 0x9de000009e3},
		dm{re: 0x00be, si: 0x00000000, ne: 0x9e3000009e7},
		dm{re: 0x00c0, si: 0x00000000, ne: 0x9eb000009f1},
		dm{re: -0x0001, si: 0x9f1000009fb, ne: 0x9f1000009fb},
		dm{re: -0x0001, si: 0x9fb00000a03, ne: 0xa0300000a08},
		dm{re: 0x00c1, si: 0x00000000, ne: 0xa0800000a10},
		dm{re: 0x00c2, si: 0x00000000, ne: 0xa1000000a16},
		dm{re: 0x00c3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x00c4, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xa1600000a20, ne: 0xbd000000bd},
		dm{re: -0x0001, si: 0xa2400000a2b, ne: 0xa2b00000a2e},
		dm{re: 0x00c6, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xa2e00000a37, ne: 0xa3700000a40},
		dm{re: 0x00c7, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xa4700000a4c, ne: 0xa4c00000a55},
		dm{re: 0x00c9, si: 0x00000000, ne: 0xa5500000a67},
		dm{re: -0x0001, si: 0xa6700000a6c, ne: 0xa6c00000a7c},
		dm{re: 0x00ca, si: 0x00000000, ne: 0xa7c00000a8c},
		dm{re: 0x00cb, si: 0x00000000, ne: 0xa8c00000aa5},
		dm{re: 0x00cc, si: 0x00000000, ne: 0xaa500000ab5},
		dm{re: 0x00cd, si: 0x00000000, ne: 0xab500000ace},
		dm{re: -0x0001, si: 0xace00000ad3, ne: 0xad300000aec},
		dm{re: 0x00ce, si: 0x00000000, ne: 0xaec00000afc},
		dm{re: 0x00cf, si: 0x00000000, ne: 0xafc00000b15},
		dm{re: 0x00d0, si: 0x00000000, ne: 0xb1500000b25},
		dm{re: 0x00d1, si: 0x00000000, ne: 0xb2500000b35},
		dm{re: 0x00d2, si: 0x00000000, ne: 0xb3500000b45},
		dm{re: 0x00d3, si: 0x00000000, ne: 0xb4500000b57},
		dm{re: 0x00d4, si: 0x00000000, ne: 0xb5700000b72},
		dm{re: 0x00d5, si: 0x00000000, ne: 0xb7200000b86},
		dm{re: 0x00d6, si: 0x00000000, ne: 0xb8600000ba3},
		dm{re: 0x00d7, si: 0x00000000, ne: 0xba300000bb5},
		dm{re: 0x00d8, si: 0x00000000, ne: 0xbb500000bd0},
		dm{re: 0x00d9, si: 0x00000000, ne: 0xbd000000bdf},
		dm{re: 0x00da, si: 0x00000000, ne: 0xbdf00000bf1},
		dm{re: 0x00db, si: 0x00000000, ne: 0xbf100000c05},
		dm{re: -0x0001, si: 0xc0500000c0a, ne: 0xc0a00000c22},
		dm{re: 0x00dc, si: 0x00000000, ne: 0xc2200000c31},
		dm{re: -0x0001, si: 0xc3100000c36, ne: 0xc3600000c4e},
		dm{re: 0x00dd, si: 0x00000000, ne: 0xc4e00000c5e},
		dm{re: 0x00de, si: 0x00000000, ne: 0xc5e00000c6e},
		dm{re: -0x0001, si: 0xc6e00000c73, ne: 0xc7300000c85},
		dm{re: -0x0001, si: 0xc8500000c8a, ne: 0xc8a00000c9e},
		dm{re: 0x00df, si: 0x00000000, ne: 0xc9e00000cae},
		dm{re: -0x0001, si: 0xcae00000cb3, ne: 0xcb300000cc3},
		dm{re: 0x00e0, si: 0x00000000, ne: 0xcc300000cd3},
		dm{re: -0x0001, si: 0xcd300000cd8, ne: 0xcd800000ce7},
		dm{re: -0x0001, si: 0xce700000cec, ne: 0xcec00000cfa},
		dm{re: 0x00e1, si: 0x00000000, ne: 0xcfa00000cff},
		dm{re: 0x00e2, si: 0x00000000, ne: 0xcff00000d08},
		dm{re: 0x00e3, si: 0x00000000, ne: 0xd0800000d0c},
		dm{re: 0x00e4, si: 0x00000000, ne: 0xd0c00000d11},
		dm{re: -0x0001, si: 0xd1100000d16, ne: 0xd1600000d18},
		dm{re: -0x0001, si: 0xd1800000d1d, ne: 0xd1d00000d26},
		dm{re: -0x0001, si: 0xd2600000d2b, ne: 0xd2b00000d32},
		dm{re: 0x00e5, si: 0x00000000, ne: 0xd3200000d34},
		dm{re: -0x0001, si: 0xd3400000d3a, ne: 0xd3a00000d45},
		dm{re: 0x00e6, si: 0x00000000, ne: 0xd4500000d57},
		dm{re: 0x00e7, si: 0x00000000, ne: 0xd5700000d69},
		dm{re: -0x0001, si: 0xd6900000d6e, ne: 0xd6e00000d81},
		dm{re: -0x0001, si: 0xd8100000d86, ne: 0xd8600000d95},
		dm{re: 0x00e8, si: 0x00000000, ne: 0xd9500000daa},
		dm{re: 0x00e9, si: 0x00000000, ne: 0xdaa00000dc8},
		dm{re: 0x00ea, si: 0x00000000, ne: 0xdc800000ddf},
		dm{re: 0x00eb, si: 0x00000000, ne: 0xddf00000df0},
		dm{re: 0x00ec, si: 0x00000000, ne: 0xdf000000e00},
		dm{re: 0x00ed, si: 0x00000000, ne: 0xe0000000e15},
		dm{re: 0x00ee, si: 0x00000000, ne: 0xe1500000e25},
		dm{re: -0x0001, si: 0xe2500000e2a, ne: 0xe2a00000e3b},
		dm{re: 0x00ef, si: 0x00000000, ne: 0xe3b00000e4b},
		dm{re: 0x00f0, si: 0x00000000, ne: 0xe4b00000e5c},
		dm{re: 0x00f1, si: 0x00000000, ne: 0xe3b00000e4b},
		dm{re: 0x00f2, si: 0x00000000, ne: 0xe5c00000e6d},
		dm{re: -0x0001, si: 0xe6d00000e72, ne: 0xe7200000e82},
		dm{re: -0x0001, si: 0xe8200000e87, ne: 0xe8700000e98},
		dm{re: -0x0001, si: 0xe9800000e9d, ne: 0xe9d00000ea9},
		dm{re: -0x0001, si: 0xea900000eae, ne: 0xeae00000eb1},
		dm{re: -0x0001, si: 0xeb100000eb7, ne: 0xeb700000ebc},
		dm{re: -0x0001, si: 0xebc00000ec2, ne: 0xec200000ec5},
		dm{re: -0x0001, si: 0xec500000ecb, ne: 0xecb00000ed5},
		dm{re: -0x0001, si: 0xed500000eda, ne: 0xeda00000ef1},
		dm{re: -0x0001, si: 0xef100000ef7, ne: 0xef700000f0f},
		dm{re: -0x0001, si: 0xf0f00000f15, ne: 0xf1500000f30},
		dm{re: 0x00f3, si: 0x00000000, ne: 0xf3000000f44},
		dm{re: -0x0001, si: 0xf4400000f4a, ne: 0xf4a00000f5e},
		dm{re: -0x0001, si: 0xf5e00000f64, ne: 0xf6400000f78},
		dm{re: -0x0001, si: 0xf7800000f7d, ne: 0xf7d00000f8d},
		dm{re: 0x00f4, si: 0x00000000, ne: 0xf8d00000fa2},
		dm{re: 0x00f5, si: 0x00000000, ne: 0xfa200000fc0},
		dm{re: 0x00f6, si: 0x00000000, ne: 0xfc000000fd3},
		dm{re: 0x00f7, si: 0x00000000, ne: 0xfd300000fe8},
		dm{re: 0x00f8, si: 0x00000000, ne: 0xfe800001000},
		dm{re: -0x0001, si: 0x100000001005, ne: 0x100500001018},
		dm{re: -0x0001, si: 0x10180000101d, ne: 0x100500001018},
		dm{re: 0x00f9, si: 0x00000000, ne: 0x101d00001033},
		dm{re: 0x00fa, si: 0x00000000, ne: 0x103300001035},
		dm{re: 0x00fb, si: 0x00000000, ne: 0x10350000103a},
		dm{re: 0x00fc, si: 0x00000000, ne: 0x103a00001043},
		dm{re: 0x00fd, si: 0x00000000, ne: 0x104300001054},
		dm{re: -0x0001, si: 0x105400001059, ne: 0x10590000105d},
		dm{re: 0x00fe, si: 0x00000000, ne: 0x105d00001064},
		dm{re: -0x0001, si: 0x106400001069, ne: 0x10690000107c},
		dm{re: -0x0001, si: 0x107c00001081, ne: 0x108100001095},
		dm{re: 0x00ff, si: 0x00000000, ne: 0x1095000010aa},
		dm{re: 0x0100, si: 0x00000000, ne: 0x10aa000010bd},
		dm{re: 0x0101, si: 0x00000000, ne: 0x10bd000010d2},
		dm{re: 0x0102, si: 0x00000000, ne: 0x10d2000010ed},
		dm{re: 0x0103, si: 0x00000000, ne: 0x10ed00001103},
		dm{re: -0x0001, si: 0x110300001108, ne: 0x11080000111d},
		dm{re: 0x0104, si: 0x00000000, ne: 0x111d00001135},
		dm{re: 0x0105, si: 0x00000000, ne: 0x11350000114b},
		dm{re: -0x0001, si: 0x114b00001150, ne: 0x115000001166},
		dm{re: -0x0001, si: 0x11660000116c, ne: 0x2780000027a},
		dm{re: -0x0001, si: 0x116c00001172, ne: 0x117200001175},
		dm{re: 0x0106, si: 0x00000000, ne: 0x117500001179},
		dm{re: 0x0107, si: 0x00000000, ne: 0x11790000117b},
		dm{re: 0x0108, si: 0x00000000, ne: 0x117b00001182},
		dm{re: 0x0109, si: 0x00000000, ne: 0x118200001187},
		dm{re: -0x0001, si: 0x11870000118c, ne: 0x118c00001194},
		dm{re: 0x010a, si: 0x00000000, ne: 0x11940000119b},
		dm{re: -0x0001, si: 0x119b000011a0, ne: 0x11a0000011a6},
		dm{re: 0x010b, si: 0x00000000, ne: 0x11a6000011a8},
		dm{re: 0x010c, si: 0x00000000, ne: 0x11a8000011ae},
		dm{re: -0x0001, si: 0x11ae000011b3, ne: 0x11b3000011bd},
		dm{re: 0x010d, si: 0x00000000, ne: 0x11bd000011bf},
		dm{re: 0x010e, si: 0x00000000, ne: 0x11bf000011c2},
		dm{re: -0x0001, si: 0x11c2000011c7, ne: 0x11c7000011cf},
		dm{re: -0x0001, si: 0x11cf000011d4, ne: 0x11d4000011de},
		dm{re: 0x010f, si: 0x00000000, ne: 0x11de000011e1},
		dm{re: 0x0110, si: 0x00000000, ne: 0x11e1000011ea},
		dm{re: -0x0001, si: 0x11ea000011ef, ne: 0x11ef000011f4},
		dm{re: 0x0111, si: 0x00000000, ne: 0x11f40000120a},
		dm{re: 0x0112, si: 0x00000000, ne: 0x120a00001229},
		dm{re: 0x0113, si: 0x00000000, ne: 0x12290000123f},
		dm{re: 0x0114, si: 0x00000000, ne: 0x123f00001255},
		dm{re: -0x0001, si: 0x125500001259, ne: 0x125900001271},
		dm{re: -0x0001, si: 0x127100001276, ne: 0x127600001286},
		dm{re: 0x0115, si: 0x00000000, ne: 0x128600001296},
		dm{re: -0x0001, si: 0x12960000129a, ne: 0x128600001296},
		dm{re: -0x0001, si: 0x129a0000129f, ne: 0x129f000012af},
		dm{re: -0x0001, si: 0x12af000012b4, ne: 0x12b4000012c3},
		dm{re: -0x0001, si: 0x12c3000012c8, ne: 0x12c8000012d7},
		dm{re: -0x0001, si: 0x12d7000012dc, ne: 0x12dc000012ec},
		dm{re: -0x0001, si: 0x12ec000012f1, ne: 0x12f100001302},
		dm{re: 0x0116, si: 0x00000000, ne: 0x130200001313},
		dm{re: 0x0117, si: 0x00000000, ne: 0x131300001317},
		dm{re: -0x0001, si: 0x13170000132d, ne: 0x132d00001333},
		dm{re: 0x0118, si: 0x00000000, ne: 0x133300001342},
		dm{re: -0x0001, si: 0x134200001357, ne: 0x135700001364},
		dm{re: -0x0001, si: 0x136400001379, ne: 0x137900001386},
		dm{re: -0x0001, si: 0x13860000139c, ne: 0x139c000013aa},
		dm{re: -0x0001, si: 0x13aa000013bf, ne: 0x13bf000013cc},
		dm{re: -0x0001, si: 0x13cc000013d2, ne: 0x13d2000013e0},
		dm{re: -0x0001, si: 0x13e0000013e5, ne: 0x13e5000013f5},
		dm{re: 0x0119, si: 0x00000000, ne: 0x13f500001401},
		dm{re: 0x011a, si: 0x00000000, ne: 0x14010000140c},
		dm{re: 0x011b, si: 0x00000000, ne: 0x14010000140c},
		dm{re: 0x011c, si: 0x00000000, ne: 0x140c00001416},
		dm{re: -0x0001, si: 0x14160000141b, ne: 0x141b00001421},
		dm{re: -0x0001, si: 0x142100001426, ne: 0x14260000142e},
		dm{re: 0x011d, si: 0x00000000, ne: 0x142e00001430},
		dm{re: 0x011e, si: 0x00000000, ne: 0x143000001432},
		dm{re: 0x011f, si: 0x00000000, ne: 0x143200001437},
		dm{re: 0x0120, si: 0x00000000, ne: 0x14370000143c},
		dm{re: -0x0001, si: 0x143c00001441, ne: 0x144100001448},
		dm{re: -0x0001, si: 0x14480000144d, ne: 0x144d00001454},
		dm{re: 0x0121, si: 0x00000000, ne: 0x14540000145e},
		dm{re: -0x0001, si: 0x145e00001463, ne: 0x146300001472},
		dm{re: 0x0122, si: 0x00000000, ne: 0x147200001479},
		dm{re: 0x0123, si: 0x00000000, ne: 0x14790000147c},
		dm{re: -0x0001, si: 0x147c00001482, ne: 0x14820000148a},
		dm{re: 0x0124, si: 0x00000000, ne: 0x148a0000148b},
		dm{re: 0x0125, si: 0x00000000, ne: 0x148b0000148d},
		dm{re: 0x0126, si: 0x00000000, ne: 0x148d00001496},
		dm{re: 0x0127, si: 0x00000000, ne: 0x14960000149f},
		dm{re: 0x0128, si: 0x00000000, ne: 0x149f000014a8},
		dm{re: 0x0129, si: 0x00000000, ne: 0x14a8000014b1},
		dm{re: 0x012a, si: 0x00000000, ne: 0x14b1000014b3},
		dm{re: 0x012b, si: 0x00000000, ne: 0x14b3000014bc},
		dm{re: -0x0001, si: 0x14bc000014c1, ne: 0x14c1000014cb},
		dm{re: 0x012c, si: 0x00000000, ne: 0x14cb000014d5},
		dm{re: 0x012d, si: 0x00000000, ne: 0x14d5000014d7},
		dm{re: 0x012e, si: 0x00000000, ne: 0x14d7000014d9},
		dm{re: -0x0001, si: 0x14d9000014de, ne: 0x14de000014e6},
		dm{re: 0x012f, si: 0x00000000, ne: 0x14e6000014e8},
		dm{re: 0x0130, si: 0x00000000, ne: 0x14e8000014e9},
		dm{re: -0x0001, si: 0x14e9000014ee, ne: 0x14ee000014f6},
		dm{re: 0x0131, si: 0x00000000, ne: 0x14f6000014ff},
		dm{re: 0x0132, si: 0x00000000, ne: 0x14ff00001501},
		dm{re: 0x0133, si: 0x00000000, ne: 0x150100001503},
		dm{re: 0x0134, si: 0x00000000, ne: 0xd3200000d34},
		dm{re: 0x0135, si: 0x00000000, ne: 0x150300001505},
		dm{re: 0x0136, si: 0x00000000, ne: 0x15050000150e},
		dm{re: 0x0137, si: 0x00000000, ne: 0x150e0000150f},
		dm{re: -0x0001, si: 0x150f00001514, ne: 0x151400001515},
		dm{re: 0x0138, si: 0x00000000, ne: 0x15150000151b},
		dm{re: -0x0001, si: 0x151b00001520, ne: 0x152000001528},
		dm{re: -0x0001, si: 0x15280000152d, ne: 0x152d00001534},
		dm{re: 0x0139, si: 0x00000000, ne: 0x15340000153d},
		dm{re: -0x0001, si: 0x153d00001547, ne: 0xbd000000bd},
		dm{re: 0x013a, si: 0x00000000, ne: 0x154700001554},
		dm{re: -0x0001, si: 0x155400001559, ne: 0x15590000155e},
		dm{re: 0x013b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x013c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x013d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x013e, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0141, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0142, si: 0x00000000, ne: 0x156b00001572},
		dm{re: 0x0143, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0145, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0147, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x15810000158d, ne: 0x158d00001591},
		dm{re: -0x0001, si: 0x15910000159b, ne: 0x159b0000159d},
		dm{re: -0x0001, si: 0x159d000015aa, ne: 0x15aa000015af},
		dm{re: -0x0001, si: 0x15af000015be, ne: 0x15be000015c5},
		dm{re: -0x0001, si: 0x15c5000015d0, ne: 0x15d0000015d3},
		dm{re: 0x0148, si: 0x00000000, ne: 0x15d3000015da},
		dm{re: 0x0149, si: 0x00000000, ne: 0x15da000015df},
		dm{re: 0x014a, si: 0x00000000, ne: 0x15df000015e5},
		dm{re: 0x014c, si: 0x00000000, ne: 0x15ee000015f2},
		dm{re: 0x014d, si: 0x00000000, ne: 0x15f2000015f6},
		dm{re: 0x014e, si: 0x00000000, ne: 0x15f6000015f9},
		dm{re: 0x014f, si: 0x00000000, ne: 0x15f9000015fb},
		dm{re: 0x0150, si: 0x00000000, ne: 0x15fb000015fe},
		dm{re: 0x0151, si: 0x00000000, ne: 0x15fe00001606},
		dm{re: 0x0152, si: 0x00000000, ne: 0x16060000160e},
		dm{re: 0x0153, si: 0x00000000, ne: 0x160e00001620},
		dm{re: 0x0154, si: 0x00000000, ne: 0x162000001628},
		dm{re: 0x0155, si: 0x00000000, ne: 0x16280000162e},
		dm{re: -0x0001, si: 0x16350000163a, ne: 0x163a00001640},
		dm{re: -0x0001, si: 0x16400000164a, ne: 0x164a00001654},
		dm{re: -0x0001, si: 0x16540000165c, ne: 0x165c00001666},
		dm{re: -0x0001, si: 0x16660000166c, ne: 0x166c00001672},
		dm{re: 0x0157, si: 0x00000000, ne: 0x16720000167c},
		dm{re: -0x0001, si: 0x167c00001683, ne: 0x16830000168a},
		dm{re: -0x0001, si: 0x168a00001691, ne: 0x169100001698},
		dm{re: -0x0001, si: 0x16980000169f, ne: 0x169f000016a6},
		dm{re: -0x0001, si: 0x16a6000016b0, ne: 0x16b0000016ba},
		dm{re: -0x0001, si: 0x16ba000016c2, ne: 0x16c2000016ca},
		dm{re: 0x0158, si: 0x00000000, ne: 0x16ca000016d4},
		dm{re: 0x0159, si: 0x00000000, ne: 0x16d4000016dc},
		dm{re: -0x0001, si: 0x16dc000016e3, ne: 0x16e3000016ea},
		dm{re: -0x0001, si: 0x16ea000016f1, ne: 0x16f1000016f8},
		dm{re: 0x015a, si: 0x00000000, ne: 0x16f8000016ff},
		dm{re: -0x0001, si: 0x16ff00001706, ne: 0x17060000170d},
		dm{re: -0x0001, si: 0x170d00001720, ne: 0x172000001735},
		dm{re: -0x0001, si: 0x173500001740, ne: 0x17400000174b},
		dm{re: 0x015b, si: 0x00000000, ne: 0x174b0000175a},
		dm{re: -0x0001, si: 0x175a00001767, ne: 0x176700001774},
		dm{re: 0x015c, si: 0x00000000, ne: 0x177400001783},
		dm{re: 0x015d, si: 0x00000000, ne: 0x17830000178d},
		dm{re: -0x0001, si: 0x178d00001794, ne: 0x17940000179b},
		dm{re: -0x0001, si: 0x179b000017a4, ne: 0x17a4000017ad},
		dm{re: 0x015e, si: 0x00000000, ne: 0x17ad000017b5},
		dm{re: -0x0001, si: 0x17b5000017bd, ne: 0x17bd000017c5},
		dm{re: -0x0001, si: 0x17c5000017cc, ne: 0x17cc000017d3},
		dm{re: -0x0001, si: 0x17d3000017dc, ne: 0x17dc000017e5},
		dm{re: 0x015f, si: 0x00000000, ne: 0x17e5000017f3},
		dm{re: -0x0001, si: 0x17f3000017fd, ne: 0x17fd00001807},
		dm{re: 0x0160, si: 0x00000000, ne: 0x180700001810},
		dm{re: -0x0001, si: 0x18100000181f, ne: 0x181f0000182e},
		dm{re: 0x0161, si: 0x00000000, ne: 0x182e00001839},
		dm{re: -0x0001, si: 0x183900001847, ne: 0x184700001855},
		dm{re: 0x0162, si: 0x00000000, ne: 0x185500001864},
		dm{re: 0x0163, si: 0x00000000, ne: 0x186400001877},
		dm{re: 0x0164, si: 0x00000000, ne: 0x187700001884},
		dm{re: 0x0165, si: 0x00000000, ne: 0x188400001892},
		dm{re: 0x0166, si: 0x00000000, ne: 0x18920000189f},
		dm{re: -0x0001, si: 0x189f000018ab, ne: 0x18ab000018b7},
		dm{re: 0x0167, si: 0x00000000, ne: 0x18b7000018c3},
		dm{re: -0x0001, si: 0x18c3000018d5, ne: 0x18d5000018e7},
		dm{re: 0x0168, si: 0x00000000, ne: 0x18e7000018f5},
		dm{re: 0x0169, si: 0x00000000, ne: 0x18f5000018fd},
		dm{re: -0x0001, si: 0x18fd00001904, ne: 0x19040000190b},
		dm{re: 0x016a, si: 0x00000000, ne: 0x190b00001912},
		dm{re: 0x016b, si: 0x00000000, ne: 0x19120000191a},
		dm{re: 0x016c, si: 0x00000000, ne: 0x191a00001922},
		dm{re: -0x0001, si: 0x19220000192a, ne: 0x192a00001933},
		dm{re: -0x0001, si: 0x193300001942, ne: 0x19420000194e},
		dm{re: -0x0001, si: 0x194e00001955, ne: 0x19550000195c},
		dm{re: -0x0001, si: 0x195c00001962, ne: 0x196200001968},
		dm{re: -0x0001, si: 0x196800001975, ne: 0x197500001984},
		dm{re: -0x0001, si: 0x198400001990, ne: 0x199000001998},
		dm{re: -0x0001, si: 0x1998000019a0, ne: 0x19a0000019a8},
		dm{re: -0x0001, si: 0x19a8000019af, ne: 0x19af000019b6},
		dm{re: -0x0001, si: 0x19b6000019be, ne: 0x19b6000019be},
		dm{re: -0x0001, si: 0x19be000019c9, ne: 0x19c9000019d2},
		dm{re: -0x0001, si: 0x19d2000019dc, ne: 0x19dc000019e2},
		dm{re: -0x0001, si: 0x19e2000019f1, ne: 0x19f1000019fa},
		dm{re: -0x0001, si: 0x19fa00001a05, ne: 0x1a0500001a09},
		dm{re: -0x0001, si: 0x1a0900001a19, ne: 0x164a00001654},
		dm{re: -0x0001, si: 0x1a1900001a29, ne: 0x1a2900001a3b},
		dm{re: -0x0001, si: 0x1a3b00001a4c, ne: 0x1a4c00001a5f},
		dm{re: -0x0001, si: 0x1a5f00001a6c, ne: 0x1a6c00001a7e},
		dm{re: -0x0001, si: 0x1a7e00001a8d, ne: 0x1a8d00001a9c},
		dm{re: 0x016d, si: 0x00000000, ne: 0x1a9c00001aa3},
		dm{re: 0x016e, si: 0x00000000, ne: 0x1aa300001aaa},
		dm{re: 0x016f, si: 0x00000000, ne: 0x1aaa00001aaf},
		dm{re: -0x0001, si: 0x1aaf00001abb, ne: 0x1aaa00001aaf},
		dm{re: -0x0001, si: 0x1abb00001ac2, ne: 0x1ac200001aca},
		dm{re: -0x0001, si: 0x1aca00001adc, ne: 0x1adc00001ae6},
		dm{re: 0x0170, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0171, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1aef00001aff, ne: 0x1aff00001b0f},
		dm{re: -0x0001, si: 0x1b0f00001b1f, ne: 0x1b1f00001b2f},
		dm{re: -0x0001, si: 0x1b2f00001b35, ne: 0x1b2f00001b35},
		dm{re: -0x0001, si: 0x1b3500001b41, ne: 0x1b4100001b4e},
		dm{re: -0x0001, si: 0x1b4e00001b61, ne: 0x1b6100001b74},
		dm{re: 0x0173, si: 0x00000000, ne: 0x1b7400001b84},
		dm{re: -0x0001, si: 0x1b8400001b93, ne: 0x1b9300001ba2},
		dm{re: -0x0001, si: 0x1ba200001bae, ne: 0x1ba200001bae},
		dm{re: -0x0001, si: 0x1bae00001bbd, ne: 0x1bae00001bbd},
		dm{re: -0x0001, si: 0x1bbd00001bc9, ne: 0x1bc900001bd6},
		dm{re: 0x0175, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0176, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1be600001bea, ne: 0x1bea00001bfe},
		dm{re: -0x0001, si: 0x1bfe00001c02, ne: 0x1c0200001c16},
		dm{re: -0x0001, si: 0x1c1600001c1a, ne: 0x1c1a00001c29},
		dm{re: -0x0001, si: 0x1c2900001c2d, ne: 0x1c2d00001c3c},
		dm{re: -0x0001, si: 0x1c3c00001c42, ne: 0x1c4200001c57},
		dm{re: -0x0001, si: 0x1c5700001c5c, ne: 0x1c5c00001c76},
		dm{re: 0x0179, si: 0x00000000, ne: 0x1c7600001c83},
		dm{re: 0x017a, si: 0x00000000, ne: 0x1c8300001c93},
		dm{re: -0x0001, si: 0x1c9300001c98, ne: 0x1c9800001cac},
		dm{re: 0x017b, si: 0x00000000, ne: 0x1cac00001cb3},
		dm{re: 0x017c, si: 0x00000000, ne: 0x1cb300001cc1},
		dm{re: 0x017d, si: 0x00000000, ne: 0x1cc100001ccf},
		dm{re: 0x017e, si: 0x00000000, ne: 0x1ccf00001ce7},
		dm{re: 0x017f, si: 0x00000000, ne: 0x1ce700001cfd},
		dm{re: 0x0180, si: 0x00000000, ne: 0x1cfd00001d13},
		dm{re: 0x0181, si: 0x00000000, ne: 0x1d1300001d2a},
		dm{re: 0x0182, si: 0x00000000, ne: 0x1d2a00001d3f},
		dm{re: 0x0183, si: 0x00000000, ne: 0x1d3f00001d58},
		dm{re: 0x0184, si: 0x00000000, ne: 0x1d5800001d6f},
		dm{re: 0x0185, si: 0x00000000, ne: 0x1d6f00001d78},
		dm{re: 0x0186, si: 0x00000000, ne: 0x1d7800001d81},
		dm{re: 0x0187, si: 0x00000000, ne: 0x1d8100001d91},
		dm{re: 0x0188, si: 0x00000000, ne: 0x1d9100001da1},
		dm{re: 0x0189, si: 0x00000000, ne: 0x1da100001db1},
		dm{re: 0x018a, si: 0x00000000, ne: 0x1db100001dc1},
		dm{re: 0x018b, si: 0x00000000, ne: 0x1dc100001dd1},
		dm{re: 0x018c, si: 0x00000000, ne: 0x1dd100001de1},
		dm{re: 0x018d, si: 0x00000000, ne: 0x1de100001ded},
		dm{re: 0x018e, si: 0x00000000, ne: 0x1ded00001dfc},
		dm{re: 0x018f, si: 0x00000000, ne: 0x1dfc00001e06},
		dm{re: 0x0190, si: 0x00000000, ne: 0x1e0600001e17},
		dm{re: 0x0191, si: 0x00000000, ne: 0x1e1700001e28},
		dm{re: 0x0192, si: 0x00000000, ne: 0x1e2800001e39},
		dm{re: 0x0193, si: 0x00000000, ne: 0x1e3900001e4f},
		dm{re: -0x0001, si: 0x1e4f00001e57, ne: 0x1e5700001e61},
		dm{re: 0x0194, si: 0x00000000, ne: 0x1e6100001e6c},
		dm{re: -0x0001, si: 0x1e6c00001e72, ne: 0x1e6c00001e72},
		dm{re: 0x0195, si: 0x00000000, ne: 0x1e7200001e76},
		dm{re: 0x0196, si: 0x00000000, ne: 0x1e7600001e81},
		dm{re: -0x0001, si: 0x1e8100001e91, ne: 0x1e9100001e96},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1ea100001ea8, ne: 0x1ea800001eb0},
		dm{re: -0x0001, si: 0x1eb000001eb6, ne: 0x1eb600001ebd},
		dm{re: -0x0001, si: 0x1ec100001ece, ne: 0x1ec100001ece},
		dm{re: -0x0001, si: 0x1ece00001ed3, ne: 0x1ece00001ed3},
		dm{re: -0x0001, si: 0x1ed300001ee1, ne: 0x1ee100001eef},
		dm{re: 0x019a, si: 0x00000000, ne: 0x1eef00001ef8},
		dm{re: 0x019b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x019c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x019d, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x01a0, si: 0x00000000, ne: 0x1f0700001f0e},
		dm{re: 0x01a1, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1f1300001f22},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x01a6, si: 0x00000000, ne: 0x1f3000001f3b},
		dm{re: 0x01a7, si: 0x00000000, ne: 0x1f3b00001f46},
		dm{re: 0x01a8, si: 0x00000000, ne: 0x1f4600001f4d},
		dm{re: 0x01a9, si: 0x00000000, ne: 0x1f4d00001f58},
		dm{re: 0x01aa, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1f5d00001f64, ne: 0x1f5d00001f64},
		dm{re: -0x0001, si: 0x1f6400001f6b, ne: 0xbd000000bd},
		dm{re: -0x0001, si: 0x1f6b00001f73, ne: 0x1f7300001f7d},
		dm{re: -0x0001, si: 0x1f7d00001f85, ne: 0x1f8500001f8f},
		dm{re: -0x0001, si: 0x1f8f00001f97, ne: 0x1f9700001faa},
		dm{re: -0x0001, si: 0x1faa00001fb2, ne: 0x1fb200001fc5},
		dm{re: -0x0001, si: 0x1fc500001fcd, ne: 0x1fcd00001fe0},
		dm{re: -0x0001, si: 0x1fe000001fe8, ne: 0x1fe800001ffb},
		dm{re: 0x01ac, si: 0x00000000, ne: 0x1ffb0000200e},
		dm{re: 0x01ad, si: 0x00000000, ne: 0x200e00002021},
		dm{re: 0x01ae, si: 0x00000000, ne: 0x20210000202e},
		dm{re: 0x01af, si: 0x00000000, ne: 0x202e0000203b},
		dm{re: 0x01b0, si: 0x00000000, ne: 0x203b0000204f},
		dm{re: 0x01b1, si: 0x00000000, ne: 0x204f00002063},
		dm{re: 0x01b2, si: 0x00000000, ne: 0x206300002076},
		dm{re: 0x01b3, si: 0x00000000, ne: 0x207600002089},
		dm{re: -0x0001, si: 0x20890000208e, ne: 0x20890000208e},
		dm{re: 0x01b4, si: 0x00000000, ne: 0x208e0000209c},
		dm{re: 0x01b5, si: 0x00000000, ne: 0x209c000020aa},
		dm{re: 0x01b6, si: 0x00000000, ne: 0x20aa000020b8},
		dm{re: 0x01b7, si: 0x00000000, ne: 0x20b8000020c6},
		dm{re: 0x01b8, si: 0x00000000, ne: 0x20c6000020d9},
		dm{re: 0x01b9, si: 0x00000000, ne: 0x20d9000020e4},
		dm{re: 0x01ba, si: 0x00000000, ne: 0x20e4000020f3},
		dm{re: 0x01bb, si: 0x00000000, ne: 0x20f300002102},
		dm{re: 0x01bc, si: 0x00000000, ne: 0x21020000210d},
		dm{re: 0x01bd, si: 0x00000000, ne: 0x210d00002118},
		dm{re: 0x01be, si: 0x00000000, ne: 0x211800002123},
		dm{re: 0x01bf, si: 0x00000000, ne: 0x211800002123},
		dm{re: 0x01c0, si: 0x00000000, ne: 0x212300002132},
		dm{re: 0x01c1, si: 0x00000000, ne: 0x213200002143},
		dm{re: 0x01c2, si: 0x00000000, ne: 0x214300002152},
		dm{re: 0x01c3, si: 0x00000000, ne: 0x215200002163},
		dm{re: 0x01c4, si: 0x00000000, ne: 0x216300002172},
		dm{re: 0x01c5, si: 0x00000000, ne: 0x217200002188},
		dm{re: 0x01c6, si: 0x00000000, ne: 0x218800002197},
		dm{re: 0x01c7, si: 0x00000000, ne: 0x2197000021a8},
		dm{re: 0x01c8, si: 0x00000000, ne: 0x21a8000021b7},
		dm{re: 0x01c9, si: 0x00000000, ne: 0x21b7000021c8},
		dm{re: 0x01ca, si: 0x00000000, ne: 0x21c8000021d7},
		dm{re: 0x01cb, si: 0x00000000, ne: 0x21d7000021e8},
		dm{re: 0x01cc, si: 0x00000000, ne: 0x21e8000021f7},
		dm{re: 0x01cd, si: 0x00000000, ne: 0x21f700002206},
		dm{re: 0x01ce, si: 0x00000000, ne: 0x220600002217},
		dm{re: 0x01cf, si: 0x00000000, ne: 0x221700002226},
		dm{re: 0x01d0, si: 0x00000000, ne: 0x222600002235},
		dm{re: 0x01d1, si: 0x00000000, ne: 0x223500002248},
		dm{re: 0x01d2, si: 0x00000000, ne: 0x22480000225a},
		dm{re: 0x01d3, si: 0x00000000, ne: 0x225a00002271},
		dm{re: 0x01d4, si: 0x00000000, ne: 0x227100002283},
		dm{re: 0x01d5, si: 0x00000000, ne: 0x228300002295},
		dm{re: 0x01d6, si: 0x00000000, ne: 0x2295000022a7},
		dm{re: 0x01d7, si: 0x00000000, ne: 0x2295000022a7},
		dm{re: 0x01d8, si: 0x00000000, ne: 0x22a7000022b9},
		dm{re: 0x01d9, si: 0x00000000, ne: 0x22b9000022cb},
		dm{re: 0x01da, si: 0x00000000, ne: 0x22cb000022dd},
		dm{re: 0x01db, si: 0x00000000, ne: 0x22dd000022f3},
		dm{re: 0x01dc, si: 0x00000000, ne: 0x22f300002305},
		dm{re: 0x01dd, si: 0x00000000, ne: 0x23050000231b},
		dm{re: 0x01de, si: 0x00000000, ne: 0x231b00002331},
		dm{re: 0x01df, si: 0x00000000, ne: 0x233100002347},
		dm{re: 0x01e0, si: 0x00000000, ne: 0x23470000235d},
		dm{re: 0x01e1, si: 0x00000000, ne: 0x235d00002373},
		dm{re: 0x01e2, si: 0x00000000, ne: 0x237300002389},
		dm{re: 0x01e3, si: 0x00000000, ne: 0x2389000023a4},
		dm{re: 0x01e4, si: 0x00000000, ne: 0x23a4000023bf},
		dm{re: 0x01e5, si: 0x00000000, ne: 0x23bf000023d5},
		dm{re: 0x01e6, si: 0x00000000, ne: 0x23d5000023f0},
		dm{re: 0x01e7, si: 0x00000000, ne: 0x23f000002406},
		dm{re: 0x01e8, si: 0x00000000, ne: 0x24060000241c},
		dm{re: 0x01e9, si: 0x00000000, ne: 0x241c00002432},
		dm{re: 0x01ea, si: 0x00000000, ne: 0x241c00002432},
		dm{re: 0x01eb, si: 0x00000000, ne: 0x243200002448},
		dm{re: 0x01ec, si: 0x00000000, ne: 0x24480000245e},
		dm{re: 0x01ed, si: 0x00000000, ne: 0x245e00002474},
		dm{re: 0x01ee, si: 0x00000000, ne: 0x24740000248a},
		dm{re: 0x01ef, si: 0x00000000, ne: 0x248a0000249c},
		dm{re: 0x01f0, si: 0x00000000, ne: 0x249c000024b2},
		dm{re: 0x01f1, si: 0x00000000, ne: 0x24b2000024c8},
		dm{re: 0x01f2, si: 0x00000000, ne: 0x24c8000024de},
		dm{re: 0x01f3, si: 0x00000000, ne: 0x24de000024f4},
		dm{re: 0x01f4, si: 0x00000000, ne: 0x24f40000250a},
		dm{re: 0x01f5, si: 0x00000000, ne: 0x250a00002520},
		dm{re: 0x01f6, si: 0x00000000, ne: 0x252000002536},
		dm{re: 0x01f7, si: 0x00000000, ne: 0x25360000254c},
		dm{re: 0x01f8, si: 0x00000000, ne: 0x254c00002562},
		dm{re: 0x01f9, si: 0x00000000, ne: 0x256200002578},
		dm{re: 0x01fa, si: 0x00000000, ne: 0x25780000258e},
		dm{re: 0x01fb, si: 0x00000000, ne: 0x258e000025a4},
		dm{re: 0x01fc, si: 0x00000000, ne: 0x25a4000025bf},
		dm{re: 0x01fd, si: 0x00000000, ne: 0x25bf000025da},
		dm{re: 0x01fe, si: 0x00000000, ne: 0x25da000025f5},
		dm{re: 0x01ff, si: 0x00000000, ne: 0x25f500002610},
		dm{re: 0x0200, si: 0x00000000, ne: 0x261000002626},
		dm{re: 0x0201, si: 0x00000000, ne: 0x26260000263c},
		dm{re: 0x0202, si: 0x00000000, ne: 0x263c00002652},
		dm{re: 0x0203, si: 0x00000000, ne: 0x265200002668},
		dm{re: 0x0204, si: 0x00000000, ne: 0x26680000267e},
		dm{re: 0x0205, si: 0x00000000, ne: 0x267e00002694},
		dm{re: 0x0206, si: 0x00000000, ne: 0x2694000026af},
		dm{re: 0x0207, si: 0x00000000, ne: 0x26af000026ca},
		dm{re: 0x0208, si: 0x00000000, ne: 0x26ca000026e0},
		dm{re: 0x0209, si: 0x00000000, ne: 0x26e0000026f6},
		dm{re: 0x020a, si: 0x00000000, ne: 0x26f60000270c},
		dm{re: 0x020b, si: 0x00000000, ne: 0x270c00002722},
		dm{re: 0x020c, si: 0x00000000, ne: 0x270c00002722},
		dm{re: 0x020d, si: 0x00000000, ne: 0x272200002738},
		dm{re: 0x020e, si: 0x00000000, ne: 0x27380000274e},
		dm{re: 0x020f, si: 0x00000000, ne: 0x274e0000275d},
		dm{re: 0x0210, si: 0x00000000, ne: 0x275d0000276c},
		dm{re: 0x0211, si: 0x00000000, ne: 0x276c0000277b},
		dm{re: 0x0212, si: 0x00000000, ne: 0x277b0000278a},
		dm{re: 0x0213, si: 0x00000000, ne: 0x278a00002799},
		dm{re: 0x0214, si: 0x00000000, ne: 0x2799000027a8},
		dm{re: 0x0215, si: 0x00000000, ne: 0x27a8000027b7},
		dm{re: 0x0216, si: 0x00000000, ne: 0x27b7000027c6},
		dm{re: 0x0217, si: 0x00000000, ne: 0x27c6000027d5},
		dm{re: 0x0218, si: 0x00000000, ne: 0x27d5000027ee},
		dm{re: 0x0219, si: 0x00000000, ne: 0x27ee0000280c},
		dm{re: 0x021a, si: 0x00000000, ne: 0x280c0000281a},
		dm{re: 0x021b, si: 0x00000000, ne: 0x281a0000282c},
		dm{re: 0x021c, si: 0x00000000, ne: 0x280c0000281a},
		dm{re: 0x021d, si: 0x00000000, ne: 0x282c0000283f},
		dm{re: 0x021e, si: 0x00000000, ne: 0x283f0000284e},
		dm{re: 0x021f, si: 0x00000000, ne: 0x284e00002854},
		dm{re: 0x0220, si: 0x00000000, ne: 0x28540000285d},
		dm{re: 0x0221, si: 0x00000000, ne: 0x285d00002867},
		dm{re: 0x0222, si: 0x00000000, ne: 0x28670000286f},
		dm{re: 0x0223, si: 0x00000000, ne: 0x286f00002878},
		dm{re: 0x0224, si: 0x00000000, ne: 0x287800002880},
		dm{re: 0x0225, si: 0x00000000, ne: 0x288000002889},
		dm{re: 0x0226, si: 0x00000000, ne: 0x288900002892},
		dm{re: 0x0227, si: 0x00000000, ne: 0x28920000289f},
		dm{re: 0x0228, si: 0x00000000, ne: 0x289f000028a7},
		dm{re: 0x0229, si: 0x00000000, ne: 0x28a7000028b5},
		dm{re: 0x022a, si: 0x00000000, ne: 0x28b5000028be},
		dm{re: 0x022b, si: 0x00000000, ne: 0x28be000028c7},
		dm{re: 0x022c, si: 0x00000000, ne: 0x28c7000028cf},
		dm{re: 0x022d, si: 0x00000000, ne: 0x28cf000028dc},
		dm{re: 0x022e, si: 0x00000000, ne: 0x28dc000028e4},
		dm{re: 0x022f, si: 0x00000000, ne: 0x28e4000028f1},
		dm{re: 0x0230, si: 0x00000000, ne: 0x28f1000028f9},
		dm{re: 0x0231, si: 0x00000000, ne: 0x28f900002902},
		dm{re: 0x0232, si: 0x00000000, ne: 0x29020000290f},
		dm{re: 0x0233, si: 0x00000000, ne: 0x290f00002918},
		dm{re: 0x0234, si: 0x00000000, ne: 0x291800002921},
		dm{re: 0x0235, si: 0x00000000, ne: 0x29210000292e},
		dm{re: 0x0236, si: 0x00000000, ne: 0x292e0000293f},
		dm{re: 0x0237, si: 0x00000000, ne: 0x293f0000294f},
		dm{re: 0x0238, si: 0x00000000, ne: 0x294f0000295d},
		dm{re: 0x0239, si: 0x00000000, ne: 0x295d00002966},
		dm{re: 0x023a, si: 0x00000000, ne: 0x296600002973},
		dm{re: 0x023b, si: 0x00000000, ne: 0x297300002984},
		dm{re: 0x023c, si: 0x00000000, ne: 0x298400002991},
		dm{re: 0x023d, si: 0x00000000, ne: 0x2991000029a2},
		dm{re: 0x023e, si: 0x00000000, ne: 0x29a2000029b0},
		dm{re: 0x023f, si: 0x00000000, ne: 0x29b0000029b9},
		dm{re: 0x0240, si: 0x00000000, ne: 0x29b9000029c9},
		dm{re: 0x0241, si: 0x00000000, ne: 0x29c9000029cd},
		dm{re: 0x0242, si: 0x00000000, ne: 0x29cd000029d3},
		dm{re: 0x0243, si: 0x00000000, ne: 0x29d3000029dc},
		dm{re: 0x0244, si: 0x00000000, ne: 0x29dc000029e2},
		dm{re: 0x0245, si: 0x00000000, ne: 0x29e2000029e8},
		dm{re: 0x0246, si: 0x00000000, ne: 0x29e8000029f0},
		dm{re: 0x0247, si: 0x00000000, ne: 0x29f0000029fb},
		dm{re: 0x0248, si: 0x00000000, ne: 0x29fb00002a06},
		dm{re: 0x0249, si: 0x00000000, ne: 0x2a0600002a11},
		dm{re: 0x024a, si: 0x00000000, ne: 0x2a1100002a1b},
		dm{re: 0x024b, si: 0x00000000, ne: 0x2a1b00002a27},
		dm{re: 0x024c, si: 0x00000000, ne: 0x2a2700002a34},
		dm{re: 0x024d, si: 0x00000000, ne: 0x2a3400002a3e},
		dm{re: 0x024e, si: 0x00000000, ne: 0x2a3e00002a4d},
		dm{re: 0x024f, si: 0x00000000, ne: 0x2a4d00002a5a},
		dm{re: 0x0250, si: 0x00000000, ne: 0x2a5a00002a64},
		dm{re: 0x0251, si: 0x00000000, ne: 0x2a6400002a6f},
		dm{re: 0x0252, si: 0x00000000, ne: 0x2a6f00002a7d},
		dm{re: 0x0253, si: 0x00000000, ne: 0x2a7d00002a90},
		dm{re: 0x0254, si: 0x00000000, ne: 0x2a9000002a9e},
		dm{re: 0x0255, si: 0x00000000, ne: 0x2a9e00002aae},
		dm{re: 0x0256, si: 0x00000000, ne: 0x2aae00002abd},
		dm{re: 0x0257, si: 0x00000000, ne: 0x2abd00002acc},
		dm{re: 0x0258, si: 0x00000000, ne: 0x2acc00002ad7},
		dm{re: 0x0259, si: 0x00000000, ne: 0x2ad700002ae1},
		dm{re: 0x025a, si: 0x00000000, ne: 0x2ae100002aed},
		dm{re: 0x025b, si: 0x00000000, ne: 0x2aed00002afe},
		dm{re: 0x025c, si: 0x00000000, ne: 0x2afe00002b0a},
		dm{re: 0x025d, si: 0x00000000, ne: 0x2b0a00002b1f},
		dm{re: 0x025e, si: 0x00000000, ne: 0x2b1f00002b2f},
		dm{re: 0x025f, si: 0x00000000, ne: 0x2b2f00002b3e},
		dm{re: 0x0260, si: 0x00000000, ne: 0x2b3e00002b48},
		dm{re: 0x0261, si: 0x00000000, ne: 0x2b4800002b57},
		dm{re: 0x0262, si: 0x00000000, ne: 0x2b5700002b61},
		dm{re: 0x0263, si: 0x00000000, ne: 0x2b6100002b71},
		dm{re: 0x0264, si: 0x00000000, ne: 0x2b7100002b7c},
		dm{re: 0x0265, si: 0x00000000, ne: 0x2b7c00002b86},
		dm{re: 0x0266, si: 0x00000000, ne: 0x2b8600002b90},
		dm{re: 0x0267, si: 0x00000000, ne: 0x2b9000002b9a},
		dm{re: 0x0268, si: 0x00000000, ne: 0x2b9a00002ba5},
		dm{re: 0x0269, si: 0x00000000, ne: 0x2ba500002bb7},
		dm{re: 0x026a, si: 0x00000000, ne: 0x2bb700002bbf},
		dm{re: 0x026b, si: 0x00000000, ne: 0x2bbf00002bc6},
		dm{re: 0x026c, si: 0x00000000, ne: 0x29c9000029cd},
		dm{re: 0x026d, si: 0x00000000, ne: 0x2bc600002bcf},
		dm{re: 0x026e, si: 0x00000000, ne: 0x2bc600002bcf},
		dm{re: 0x0270, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0271, si: 0x00000000, ne: 0x2bcf00002bdd},
		dm{re: 0x0272, si: 0x00000000, ne: 0x2bdd00002be4},
		dm{re: 0x0273, si: 0x00000000, ne: 0x150e0000150f},
		dm{re: 0x0274, si: 0x00000000, ne: 0x2be400002bf2},
		dm{re: 0x0275, si: 0x00000000, ne: 0x2bf200002bff},
		dm{re: 0x0276, si: 0x00000000, ne: 0x2bff00002c08},
		dm{re: 0x0277, si: 0x00000000, ne: 0x2c0800002c15},
		dm{re: 0x0278, si: 0x00000000, ne: 0x2c1500002c20},
		dm{re: 0x0279, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x027a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x027b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x2c2b00002c37, ne: 0x2c3700002c3a},
		dm{re: -0x0001, si: 0x2c3a00002c45, ne: 0x2c4500002c47},
		dm{re: -0x0001, si: 0x2c4700002c52, ne: 0x2c5200002c54},
		dm{re: -0x0001, si: 0x2c5400002c5f, ne: 0x2c5f00002c61},
		dm{re: 0x027d, si: 0x00000000, ne: 0x2c6400002c6e},
		dm{re: 0x027e, si: 0x00000000, ne: 0x2c6e00002c7d},
		dm{re: 0x027f, si: 0x00000000, ne: 0x2c7d00002c87},
		dm{re: 0x0280, si: 0x00000000, ne: 0x2c8700002c8e},
		dm{re: 0x0281, si: 0x00000000, ne: 0x2c8e00002c95},
		dm{re: 0x0282, si: 0x00000000, ne: 0x2c9500002c9e},
		dm{re: 0x0283, si: 0x00000000, ne: 0x2c9e00002ca4},
		dm{re: 0x0284, si: 0x00000000, ne: 0x2ca400002cac},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x2cba00002cc2, ne: 0x2cc200002cc6},
		dm{re: -0x0001, si: 0x2cc600002ccc, ne: 0x2ccc00002cd1},
		dm{re: 0x0287, si: 0x00000000, ne: 0x2cd100002cd5},
		dm{re: -0x0001, si: 0x2cd500002cda, ne: 0x2cda00002cde},
		dm{re: -0x0001, si: 0x2cde00002ce4, ne: 0x2ce400002ce9},
		dm{re: -0x0001, si: 0x2ce900002cef, ne: 0x2cef00002cf4},
		dm{re: -0x0001, si: 0x2cf400002cfd, ne: 0x2cfd00002d05},
		dm{re: -0x0001, si: 0x2d0500002d0b, ne: 0x2d0b00002d10},
		dm{re: -0x0001, si: 0x2d1000002d16, ne: 0x2d1600002d1b},
		dm{re: -0x0001, si: 0x2d1b00002d21, ne: 0x2d2100002d26},
		dm{re: -0x0001, si: 0x2d2600002d2c, ne: 0x2d2c00002d2d},
		dm{re: -0x0001, si: 0x2d2d00002d32, ne: 0x2d3200002d36},
		dm{re: -0x0001, si: 0x2d3600002d3b, ne: 0x2d3b00002d3f},
		dm{re: -0x0001, si: 0x2d3f00002d45, ne: 0x2d4500002d4a},
		dm{re: -0x0001, si: 0x2d4a00002d50, ne: 0x2d5000002d55},
		dm{re: -0x0001, si: 0x2d5500002d5b, ne: 0x2d5b00002d60},
		dm{re: -0x0001, si: 0x2d6000002d65, ne: 0x2d6500002d69},
		dm{re: -0x0001, si: 0x2d6900002d6e, ne: 0x2d6e00002d72},
		dm{re: 0x0288, si: 0x00000000, ne: 0x2d7200002d77},
		dm{re: -0x0001, si: 0x2d7700002d7c, ne: 0x2d7c00002d7e},
		dm{re: 0x0289, si: 0x00000000, ne: 0x2d7e00002d84},
		dm{re: 0x028a, si: 0x00000000, ne: 0x2d8400002d8a},
		dm{re: -0x0001, si: 0x2d8a00002d91, ne: 0x2d9100002d97},
		dm{re: -0x0001, si: 0x2d9700002d9e, ne: 0x2d9e00002da4},
		dm{re: -0x0001, si: 0x2da400002daf, ne: 0x2daf00002db4},
		dm{re: -0x0001, si: 0x2db400002dc0, ne: 0x2dc000002dc5},
		dm{re: -0x0001, si: 0x2dc500002dd0, ne: 0x2dd000002dd5},
		dm{re: -0x0001, si: 0x2dd500002de2, ne: 0x2de200002de8},
		dm{re: 0x028b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x028e, si: 0x00000000, ne: 0x2df400002dfc},
		dm{re: 0x028f, si: 0x00000000, ne: 0x2dfc00002e03},
		dm{re: 0x0290, si: 0x00000000, ne: 0x2e0300002e05},
		dm{re: 0x0291, si: 0x00000000, ne: 0x2e0500002e09},
		dm{re: 0x0292, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0293, si: 0x00000000, ne: 0x2e0900002e0f},
		dm{re: 0x0294, si: 0x00000000, ne: 0x2e0f00002e16},
		dm{re: 0x0295, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0296, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0298, si: 0x00000000, ne: 0x2e1e00002e29},
		dm{re: 0x0299, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x029a, si: 0x00000000, ne: 0x2e2900002e2b},
		dm{re: 0x029c, si: 0x00000000, ne: 0x2e3000002e3a},
		dm{re: 0x029e, si: 0x00000000, ne: 0x2e4000002e47},
		dm{re: 0x029f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x02a1, si: 0x00000000, ne: 0x2e4a00002e52},
		dm{re: 0x02a2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x02a4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x02a5, si: 0x00000000, ne: 0x2e5800002e5c},
		dm{re: 0x02a7, si: 0x00000000, ne: 0x2e6500002e6a},
		dm{re: 0x02a8, si: 0x00000000, ne: 0x2e6a00002e6e},
		dm{re: 0x02a9, si: 0x00000000, ne: 0x2e6e00002e72},
		dm{re: 0x02aa, si: 0x00000000, ne: 0x2e7200002e79},
		dm{re: 0x02ab, si: 0x00000000, ne: 0x2e7900002e7f},
		dm{re: 0x02ac, si: 0x00000000, ne: 0x2e7f00002e89},
		dm{re: 0x02ad, si: 0x00000000, ne: 0x2e8900002e8d},
		dm{re: 0x02ae, si: 0x00000000, ne: 0x2e8d00002e92},
		dm{re: 0x02af, si: 0x00000000, ne: 0x2e9200002e97},
		dm{re: 0x02b0, si: 0x00000000, ne: 0x2e9700002e9b},
		dm{re: 0x02b1, si: 0x00000000, ne: 0x2e9b00002ea1},
		dm{re: 0x02b2, si: 0x00000000, ne: 0x2ea100002ea6},
		dm{re: 0x02b3, si: 0x00000000, ne: 0x2ea600002eaa},
		dm{re: 0x02b4, si: 0x00000000, ne: 0x2eaa00002eaf},
		dm{re: 0x02b5, si: 0x00000000, ne: 0x2eaf00002eb7},
		dm{re: 0x02b6, si: 0x00000000, ne: 0x2eb700002ec2},
		dm{re: 0x02b7, si: 0x00000000, ne: 0x2ec200002ecf},
		dm{re: 0x02b8, si: 0x00000000, ne: 0x2ecf00002ed5},
		dm{re: 0x02b9, si: 0x00000000, ne: 0x2ed500002eda},
		dm{re: 0x02ba, si: 0x00000000, ne: 0x2eda00002ee6},
		dm{re: 0x02bb, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x02bc, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x02bf, si: 0x00000000, ne: 0x2eef00002eff},
		dm{re: 0x02c0, si: 0x00000000, ne: 0x2eff00002f09},
		dm{re: -0x0001, si: 0x2f0900002f0f, ne: 0x2f0f00002f17},
		dm{re: 0x02c1, si: 0x00000000, ne: 0x2f1700002f26},
		dm{re: 0x02c2, si: 0x00000000, ne: 0x2f2600002f39},
		dm{re: 0x02c3, si: 0x00000000, ne: 0x2f3900002f4a},
		dm{re: 0x02c4, si: 0x00000000, ne: 0x2f4a00002f54},
		dm{re: 0x02c5, si: 0x00000000, ne: 0x2f5400002f58},
		dm{re: 0x02c6, si: 0x00000000, ne: 0x2f5800002f64},
		dm{re: 0x02c7, si: 0x00000000, ne: 0x2f6400002f6e},
		dm{re: 0x02c8, si: 0x00000000, ne: 0x2f6e00002f80},
		dm{re: 0x02c9, si: 0x00000000, ne: 0x2f8000002f8d},
		dm{re: 0x02ca, si: 0x00000000, ne: 0x2f8d00002f97},
		dm{re: 0x02cb, si: 0x00000000, ne: 0x2f9700002fa3},
		dm{re: 0x02cc, si: 0x00000000, ne: 0x2fa300002fb9},
		dm{re: 0x02cd, si: 0x00000000, ne: 0x2fb900002fc4},
		dm{re: 0x02ce, si: 0x00000000, ne: 0x2fc400002fda},
		dm{re: 0x02cf, si: 0x00000000, ne: 0x2fda00002ff0},
		dm{re: 0x02d0, si: 0x00000000, ne: 0x2ff000003007},
		dm{re: 0x02d1, si: 0x00000000, ne: 0x30070000301d},
		dm{re: 0x02d2, si: 0x00000000, ne: 0x301d00003033},
		dm{re: -0x0001, si: 0x30330000303f, ne: 0x303f00003053},
		dm{re: 0x02d3, si: 0x00000000, ne: 0x30530000305f},
		dm{re: -0x0001, si: 0x305f00003069, ne: 0x306900003072},
		dm{re: -0x0001, si: 0x307200003076, ne: 0x307600003080},
		dm{re: 0x02d4, si: 0x00000000, ne: 0x30800000308a},
		dm{re: 0x02d5, si: 0x00000000, ne: 0x308a00003094},
		dm{re: 0x02d6, si: 0x00000000, ne: 0x30940000309e},
		dm{re: 0x02d7, si: 0x00000000, ne: 0x309e000030aa},
		dm{re: 0x02d8, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x30aa000030ae, ne: 0x30ae000030ba},
		dm{re: 0x02d9, si: 0x00000000, ne: 0x30ba000030ca},
		dm{re: 0x02da, si: 0x00000000, ne: 0x30ca000030d3},
		dm{re: -0x0001, si: 0x30d3000030e6, ne: 0x30e600003101},
		dm{re: -0x0001, si: 0x31010000310c, ne: 0x310c00003112},
		dm{re: 0x02db, si: 0x00000000, ne: 0x311200003119},
		dm{re: 0x02dc, si: 0x00000000, ne: 0x311900003127},
		dm{re: 0x02dd, si: 0x00000000, ne: 0x312700003130},
		dm{re: 0x02de, si: 0x00000000, ne: 0x313000003142},
		dm{re: 0x02df, si: 0x00000000, ne: 0x31420000314b},
		dm{re: 0x02e0, si: 0x00000000, ne: 0x314b00003154},
		dm{re: 0x02e1, si: 0x00000000, ne: 0x315400003160},
		dm{re: 0x02e2, si: 0x00000000, ne: 0x31600000316e},
		dm{re: -0x0001, si: 0x316e0000317a, ne: 0x317a00003183},
		dm{re: -0x0001, si: 0x31830000318f, ne: 0x318f0000319f},
		dm{re: 0x02e3, si: 0x00000000, ne: 0x319f000031a9},
		dm{re: 0x02e4, si: 0x00000000, ne: 0x31a9000031b2},
		dm{re: 0x02e5, si: 0x00000000, ne: 0x31b2000031c0},
		dm{re: 0x02e6, si: 0x00000000, ne: 0x31c0000031c9},
		dm{re: 0x02e7, si: 0x00000000, ne: 0x31c9000031d7},
		dm{re: 0x02e8, si: 0x00000000, ne: 0x31d7000031e0},
		dm{re: 0x02e9, si: 0x00000000, ne: 0x31e0000031ee},
		dm{re: 0x02ea, si: 0x00000000, ne: 0x31ee00003200},
		dm{re: 0x02eb, si: 0x00000000, ne: 0x32000000320e},
		dm{re: 0x02ec, si: 0x00000000, ne: 0x320e00003217},
		dm{re: 0x02ed, si: 0x00000000, ne: 0x321700003221},
		dm{re: 0x02ee, si: 0x00000000, ne: 0x32210000322d},
		dm{re: 0x02ef, si: 0x00000000, ne: 0x322d0000323c},
		dm{re: -0x0001, si: 0x323c00003242, ne: 0x324200003251},
		dm{re: 0x02f0, si: 0x00000000, ne: 0x325100003260},
		dm{re: 0x02f1, si: 0x00000000, ne: 0x326000003269},
		dm{re: 0x02f2, si: 0x00000000, ne: 0x326900003272},
		dm{re: 0x02f3, si: 0x00000000, ne: 0x32720000327f},
		dm{re: 0x02f4, si: 0x00000000, ne: 0x327f0000328d},
		dm{re: 0x02f5, si: 0x00000000, ne: 0x328d00003297},
		dm{re: 0x02f6, si: 0x00000000, ne: 0x3297000032a0},
		dm{re: 0x02f7, si: 0x00000000, ne: 0x32a0000032ad},
		dm{re: 0x02f8, si: 0x00000000, ne: 0x32ad000032b6},
		dm{re: 0x02f9, si: 0x00000000, ne: 0x32b6000032c1},
		dm{re: 0x02fa, si: 0x00000000, ne: 0x32c1000032d4},
		dm{re: 0x02fb, si: 0x00000000, ne: 0x31ee00003200},
		dm{re: 0x02fc, si: 0x00000000, ne: 0x32d4000032e6},
		dm{re: 0x02fd, si: 0x00000000, ne: 0x32e6000032f5},
		dm{re: 0x02fe, si: 0x00000000, ne: 0x32f5000032ff},
		dm{re: 0x02ff, si: 0x00000000, ne: 0x32ff0000330e},
		dm{re: 0x0300, si: 0x00000000, ne: 0x330e0000331b},
		dm{re: 0x0301, si: 0x00000000, ne: 0x32f5000032ff},
		dm{re: 0x0302, si: 0x00000000, ne: 0x331b0000332a},
		dm{re: 0x0303, si: 0x00000000, ne: 0x332a0000333e},
		dm{re: 0x0304, si: 0x00000000, ne: 0x333e00003354},
		dm{re: 0x0305, si: 0x00000000, ne: 0x33540000336a},
		dm{re: 0x0306, si: 0x00000000, ne: 0x336a00003377},
		dm{re: 0x0307, si: 0x00000000, ne: 0x337700003388},
		dm{re: 0x0308, si: 0x00000000, ne: 0x338800003396},
		dm{re: 0x0309, si: 0x00000000, ne: 0x3396000033a6},
		dm{re: 0x030a, si: 0x00000000, ne: 0x33a6000033b4},
		dm{re: 0x030b, si: 0x00000000, ne: 0x3396000033a6},
		dm{re: 0x030c, si: 0x00000000, ne: 0x33b4000033bd},
		dm{re: 0x030d, si: 0x00000000, ne: 0x33bd000033cc},
		dm{re: 0x030e, si: 0x00000000, ne: 0x33cc000033db},
		dm{re: 0x030f, si: 0x00000000, ne: 0x33db000033ef},
		dm{re: 0x0310, si: 0x00000000, ne: 0x33ef000033ff},
		dm{re: 0x0311, si: 0x00000000, ne: 0x326000003269},
		dm{re: 0x0312, si: 0x00000000, ne: 0x33ff0000340c},
		dm{re: 0x0313, si: 0x00000000, ne: 0x340c0000341e},
		dm{re: 0x0314, si: 0x00000000, ne: 0x341e0000342b},
		dm{re: 0x0315, si: 0x00000000, ne: 0x342b00003437},
		dm{re: 0x0316, si: 0x00000000, ne: 0x343700003440},
		dm{re: 0x0317, si: 0x00000000, ne: 0x34400000344b},
		dm{re: 0x0318, si: 0x00000000, ne: 0x344b00003456},
		dm{re: 0x0319, si: 0x00000000, ne: 0x345600003461},
		dm{re: -0x0001, si: 0x346100003468, ne: 0x346800003477},
		dm{re: 0x031a, si: 0x00000000, ne: 0x347700003481},
		dm{re: 0x031b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x031c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x031d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x031e, si: 0x00000000, ne: 0x34810000348f},
		dm{re: 0x031f, si: 0x00000000, ne: 0x348f000034a1},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0323, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0324, si: 0x00000000, ne: 0x34ca000034d0},
		dm{re: 0x0325, si: 0x00000000, ne: 0x34ca000034d0},
		dm{re: 0x0326, si: 0x00000000, ne: 0x34ca000034d0},
		dm{re: 0x0328, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x032a, si: 0x00000000, ne: 0x34db000034e3},
		dm{re: 0x032b, si: 0x00000000, ne: 0x34e3000034ef},
		dm{re: -0x0001, si: 0x34f4000034fd, ne: 0x34fd00003506},
		dm{re: -0x0001, si: 0x35060000350f, ne: 0x350f00003518},
		dm{re: -0x0001, si: 0x351800003525, ne: 0x352500003534},
		dm{re: 0x032d, si: 0x00000000, ne: 0x353400003537},
		dm{re: 0x032e, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0331, si: 0x00000000, ne: 0x35400000354c},
		dm{re: -0x0001, si: 0x354c00003558, ne: 0x355800003566},
		dm{re: 0x0332, si: 0x00000000, ne: 0x356600003573},
		dm{re: 0x0334, si: 0x00000000, ne: 0x357900003580},
		dm{re: 0x0336, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0337, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x358c00003593, ne: 0x35930000359d},
		dm{re: -0x0001, si: 0x359d000035ab, ne: 0x35ab000035b9},
		dm{re: 0x0339, si: 0x00000000, ne: 0x35c2000035e0},
		dm{re: 0x033a, si: 0x00000000, ne: 0x35e0000035f7},
		dm{re: 0x033b, si: 0x00000000, ne: 0x35f700003614},
		dm{re: 0x033c, si: 0x00000000, ne: 0x36140000362f},
		dm{re: 0x033d, si: 0x00000000, ne: 0x362f00003647},
		dm{re: 0x033e, si: 0x00000000, ne: 0x36470000365e},
		dm{re: 0x033f, si: 0x00000000, ne: 0x365e00003676},
		dm{re: 0x0340, si: 0x00000000, ne: 0x367600003693},
		dm{re: 0x0341, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0342, si: 0x00000000, ne: 0x3693000036a0},
		dm{re: 0x0343, si: 0x00000000, ne: 0x36a0000036b6},
		dm{re: -0x0001, si: 0x00000000, ne: 0x36b9000036c4},
		dm{re: 0x0346, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0347, si: 0x00000000, ne: 0x36c7000036d2},
		dm{re: -0x0001, si: 0x36d5000036de, ne: 0x36de000036e7},
		dm{re: -0x0001, si: 0x36e7000036ee, ne: 0x36e7000036ee},
		dm{re: -0x0001, si: 0x00000000, ne: 0x36f700003700},
		dm{re: 0x034a, si: 0x00000000, ne: 0x370300003706},
		dm{re: 0x034b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x37060000370f, ne: 0x370f00003718},
		dm{re: -0x0001, si: 0x37180000371e, ne: 0x371e00003724},
		dm{re: 0x034c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x034e, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x372d0000373a},
		dm{re: 0x0351, si: 0x00000000, ne: 0x37430000374a},
		dm{re: 0x0353, si: 0x00000000, ne: 0x37580000375f},
		dm{re: 0x0354, si: 0x00000000, ne: 0x37580000375f},
		dm{re: 0x0355, si: 0x00000000, ne: 0x37580000375f},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0358, si: 0x00000000, ne: 0x376c00003772},
		dm{re: 0x0359, si: 0x00000000, ne: 0x377200003778},
		dm{re: 0x035a, si: 0x00000000, ne: 0x377200003778},
		dm{re: -0x0001, si: 0x37780000377b, ne: 0x37780000377b},
		dm{re: 0x035b, si: 0x00000000, ne: 0x377b0000377e},
		dm{re: 0x035c, si: 0x00000000, ne: 0x377e00003786},
		dm{re: -0x0001, si: 0x378600003790, ne: 0x378600003790},
		dm{re: 0x035d, si: 0x00000000, ne: 0x379000003796},
		dm{re: 0x035e, si: 0x00000000, ne: 0x37960000379a},
		dm{re: 0x035f, si: 0x00000000, ne: 0x379a000037a7},
		dm{re: 0x0361, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0362, si: 0x00000000, ne: 0x37ae000037b6},
		dm{re: 0x0363, si: 0x00000000, ne: 0x37b6000037c0},
		dm{re: 0x0364, si: 0x00000000, ne: 0x37c0000037cb},
		dm{re: 0x0365, si: 0x00000000, ne: 0x37cb000037d2},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x37e7000037f4},
		dm{re: 0x036a, si: 0x00000000, ne: 0x37f8000037fb},
		dm{re: 0x036b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x380c00003812, ne: 0x381200003815},
		dm{re: -0x0001, si: 0x38150000381b, ne: 0x381b0000381e},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0371, si: 0x00000000, ne: 0x38300000383c},
		dm{re: 0x0372, si: 0x00000000, ne: 0x383c00003844},
		dm{re: -0x0001, si: 0x384400003849, ne: 0x38490000384f},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x385b00003866},
		dm{re: -0x0001, si: 0x00000000, ne: 0x386f0000387d},
		dm{re: -0x0001, si: 0x00000000, ne: 0x388400003890},
		dm{re: 0x0378, si: 0x00000000, ne: 0x3899000038a6},
		dm{re: -0x0001, si: 0x38a6000038b4, ne: 0x38a6000038b4},
		dm{re: 0x037a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x037b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x037d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x037e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0380, si: 0x00000000, ne: 0x38c4000038cd},
		dm{re: 0x0381, si: 0x00000000, ne: 0x38cd000038d8},
		dm{re: 0x0382, si: 0x00000000, ne: 0x38d8000038e3},
		dm{re: 0x0383, si: 0x00000000, ne: 0x38ea000038f8},
		dm{re: -0x0001, si: 0x00000000, ne: 0x38fc00003905},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x39180000391f, ne: 0x391f00003926},
		dm{re: 0x0387, si: 0x00000000, ne: 0x39260000392c},
		dm{re: 0x0388, si: 0x00000000, ne: 0x392c00003933},
		dm{re: -0x0001, si: 0x39330000393a, ne: 0x393a0000393d},
		dm{re: -0x0001, si: 0x393d00003944, ne: 0x394400003946},
		dm{re: -0x0001, si: 0x39460000394d, ne: 0x394d0000394f},
		dm{re: -0x0001, si: 0x394f00003956, ne: 0x395600003958},
		dm{re: -0x0001, si: 0x39580000395f, ne: 0x395f00003962},
		dm{re: 0x0389, si: 0x00000000, ne: 0x396200003964},
		dm{re: -0x0001, si: 0x39640000396b, ne: 0x396b00003972},
		dm{re: -0x0001, si: 0x397200003979, ne: 0x397900003984},
		dm{re: -0x0001, si: 0x39840000398b, ne: 0x398b00003999},
		dm{re: -0x0001, si: 0x3999000039a0, ne: 0x39a0000039a3},
		dm{re: -0x0001, si: 0x39a3000039aa, ne: 0x39aa000039ac},
		dm{re: -0x0001, si: 0x39ac000039b3, ne: 0x39b3000039ba},
		dm{re: -0x0001, si: 0x39ba000039c3, ne: 0x39c3000039cb},
		dm{re: 0x038a, si: 0x00000000, ne: 0x39cb000039d1},
		dm{re: 0x038c, si: 0x00000000, ne: 0x39da000039e1},
		dm{re: 0x038d, si: 0x00000000, ne: 0x39e1000039e4},
		dm{re: 0x038e, si: 0x00000000, ne: 0x39e4000039ea},
		dm{re: 0x038f, si: 0x00000000, ne: 0x39ea000039ee},
		dm{re: 0x0390, si: 0x00000000, ne: 0x39ee000039f5},
		dm{re: 0x0391, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0392, si: 0x00000000, ne: 0x39f5000039fc},
		dm{re: -0x0001, si: 0x39fc00003a07, ne: 0x3a0700003a13},
		dm{re: 0x0393, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x0394, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0395, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0396, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0397, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0398, si: 0x00000000, ne: 0x3a1900003a22},
		dm{re: 0x0399, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x039b, si: 0x00000000, ne: 0x3a2b00003a39},
		dm{re: 0x039c, si: 0x00000000, ne: 0x3a3900003a4a},
		dm{re: 0x039d, si: 0x00000000, ne: 0x3a4a00003a59},
		dm{re: 0x039e, si: 0x00000000, ne: 0x3a5900003a68},
		dm{re: 0x039f, si: 0x00000000, ne: 0x3a6800003a76},
		dm{re: -0x0001, si: 0x3a7600003a83, ne: 0x3a7600003a83},
		dm{re: 0x03a0, si: 0x00000000, ne: 0x3a8300003a8f},
		dm{re: 0x03a1, si: 0x00000000, ne: 0x3a8f00003a99},
		dm{re: 0x03a2, si: 0x00000000, ne: 0x3a9900003aa4},
		dm{re: -0x0001, si: 0x3aa400003aac, ne: 0x3aac00003ab6},
		dm{re: 0x03a3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03a4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03a5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03a6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03a8, si: 0x00000000, ne: 0x3ab600003abb},
		dm{re: -0x0001, si: 0x3abb00003ac4, ne: 0x3ac400003ad2},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x3adb00003ae5, ne: 0x3ae500003af1},
		dm{re: 0x03ab, si: 0x00000000, ne: 0x3af100003b06},
		dm{re: 0x03ad, si: 0x00000000, ne: 0x3b0900003b13},
		dm{re: 0x03ae, si: 0x00000000, ne: 0x3b1300003b1c},
		dm{re: 0x03af, si: 0x00000000, ne: 0x3b1c00003b25},
		dm{re: 0x03b0, si: 0x00000000, ne: 0x3b2500003b31},
		dm{re: -0x0001, si: 0x3b3100003b42, ne: 0x3b4200003b53},
		dm{re: -0x0001, si: 0x3b5300003b5d, ne: 0x3b5d00003b67},
		dm{re: 0x03b1, si: 0x00000000, ne: 0x3b1c00003b25},
		dm{re: 0x03b2, si: 0x00000000, ne: 0x3b6700003b77},
		dm{re: -0x0001, si: 0x3b7700003b84, ne: 0x3b8400003b91},
		dm{re: 0x03b3, si: 0x00000000, ne: 0x3b9100003ba0},
		dm{re: -0x0001, si: 0x3ba000003bae, ne: 0x3bae00003bbc},
		dm{re: -0x0001, si: 0x3bbc00003bc5, ne: 0x3bc500003bce},
		dm{re: -0x0001, si: 0x3bce00003bd8, ne: 0x3bce00003bd8},
		dm{re: -0x0001, si: 0x3bd800003be7, ne: 0x3be700003bf6},
		dm{re: -0x0001, si: 0x3bf600003c03, ne: 0x3c0300003c10},
		dm{re: -0x0001, si: 0x3c1000003c17, ne: 0x3c1700003c1e},
		dm{re: 0x03b4, si: 0x00000000, ne: 0x3c1e00003c2d},
		dm{re: -0x0001, si: 0x3c2d00003c38, ne: 0x3c3800003c43},
		dm{re: 0x03b5, si: 0x00000000, ne: 0x3c4300003c4b},
		dm{re: -0x0001, si: 0x3c4b00003c52, ne: 0x3c4b00003c52},
		dm{re: 0x03b6, si: 0x00000000, ne: 0x3c5200003c59},
		dm{re: -0x0001, si: 0x3c5900003c62, ne: 0x3c6200003c6b},
		dm{re: 0x03b7, si: 0x00000000, ne: 0x3c6b00003c72},
		dm{re: -0x0001, si: 0x3c7200003c82, ne: 0x3c7200003c82},
		dm{re: 0x03b8, si: 0x00000000, ne: 0x3c8200003c8d},
		dm{re: -0x0001, si: 0x3c8d00003c95, ne: 0x3c9500003c9d},
		dm{re: -0x0001, si: 0x3c9d00003ca7, ne: 0x3ca700003cb1},
		dm{re: -0x0001, si: 0x3cb100003cba, ne: 0x3cba00003cc3},
		dm{re: -0x0001, si: 0x3cc300003ccd, ne: 0x3ccd00003cd7},
		dm{re: 0x03b9, si: 0x00000000, ne: 0x3cd700003cdd},
		dm{re: -0x0001, si: 0x3cdd00003ce5, ne: 0x3cdd00003ce5},
		dm{re: -0x0001, si: 0x3ce500003ced, ne: 0x3ce500003ced},
		dm{re: -0x0001, si: 0x3ced00003cf5, ne: 0x3ced00003cf5},
		dm{re: 0x03ba, si: 0x00000000, ne: 0x3cf500003cfc},
		dm{re: -0x0001, si: 0x3cfc00003d03, ne: 0x3d0300003d0a},
		dm{re: 0x03bb, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03bc, si: 0x00000000, ne: 0x3d0a00003d16},
		dm{re: -0x0001, si: 0x3d1600003d21, ne: 0x3d1600003d21},
		dm{re: -0x0001, si: 0x3d2100003d2d, ne: 0x3d2100003d2d},
		dm{re: -0x0001, si: 0x3d2d00003d36, ne: 0x3d2d00003d36},
		dm{re: -0x0001, si: 0x3d3600003d40, ne: 0x3d3600003d40},
		dm{re: -0x0001, si: 0x3d4000003d48, ne: 0x3d4000003d48},
		dm{re: -0x0001, si: 0x3d4800003d4e, ne: 0x3d4e00003d57},
		dm{re: -0x0001, si: 0x3d5700003d5d, ne: 0x3d5d00003d63},
		dm{re: -0x0001, si: 0x3d6300003d69, ne: 0x3d6900003d6f},
		dm{re: -0x0001, si: 0x3d6f00003d75, ne: 0x3d7500003d7b},
		dm{re: -0x0001, si: 0x3d7b00003d80, ne: 0x3d7b00003d80},
		dm{re: -0x0001, si: 0x3d8000003d86, ne: 0x3d8000003d86},
		dm{re: 0x03bd, si: 0x00000000, ne: 0x3d8600003d8e},
		dm{re: 0x03be, si: 0x00000000, ne: 0x3d8e00003d98},
		dm{re: 0x03bf, si: 0x00000000, ne: 0x3d9800003da9},
		dm{re: -0x0001, si: 0x3da900003db8, ne: 0x3da900003db8},
		dm{re: -0x0001, si: 0x3db800003dc3, ne: 0x3db800003dc3},
		dm{re: -0x0001, si: 0x3dc300003dcf, ne: 0x3dcf00003ddb},
		dm{re: -0x0001, si: 0x3ddb00003de7, ne: 0x3ddb00003de7},
		dm{re: 0x03c0, si: 0x00000000, ne: 0x3de700003df2},
		dm{re: -0x0001, si: 0x3df200003dfa, ne: 0x3df200003dfa},
		dm{re: 0x03c1, si: 0x00000000, ne: 0x3dfa00003dfe},
		dm{re: 0x03c2, si: 0x00000000, ne: 0x3dfe00003e09},
		dm{re: 0x03c3, si: 0x00000000, ne: 0x3e0900003e14},
		dm{re: -0x0001, si: 0x3e1400003e26, ne: 0x3e2600003e3a},
		dm{re: 0x03c4, si: 0x00000000, ne: 0x3e3a00003e46},
		dm{re: 0x03c5, si: 0x00000000, ne: 0x3e4600003e4d},
		dm{re: 0x03c6, si: 0x00000000, ne: 0x3e4d00003e54},
		dm{re: -0x0001, si: 0x3e5400003e64, ne: 0x3e5400003e64},
		dm{re: 0x03c7, si: 0x00000000, ne: 0x3e6400003e72},
		dm{re: 0x03c8, si: 0x00000000, ne: 0x3e7200003e79},
		dm{re: 0x03c9, si: 0x00000000, ne: 0x3e7200003e79},
		dm{re: 0x03ca, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x3e7f00003e89, ne: 0x3e8900003e8d},
		dm{re: -0x0001, si: 0x3e8d00003e93, ne: 0x3e9300003e9a},
		dm{re: 0x03cc, si: 0x00000000, ne: 0x3e9a00003ea4},
		dm{re: -0x0001, si: 0x3ea400003ea9, ne: 0x3ea400003ea9},
		dm{re: 0x03cd, si: 0x00000000, ne: 0x3ea900003eb0},
		dm{re: 0x03ce, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03cf, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03d2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03d3, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x3ecf00003ed1, ne: 0x3ecf00003ed1},
		dm{re: -0x0001, si: 0x3ed900003ee0, ne: 0x3ee000003eea},
		dm{re: -0x0001, si: 0x3eea00003ef0, ne: 0x3ef000003f06},
		dm{re: 0x03d5, si: 0x00000000, ne: 0x3f0600003f17},
		dm{re: 0x03d7, si: 0x00000000, ne: 0x3f1e00003f22},
		dm{re: -0x0001, si: 0x3f2200003f27, ne: 0x3f2700003f2c},
		dm{re: -0x0001, si: 0x3f2c00003f36, ne: 0x3f3600003f42},
		dm{re: -0x0001, si: 0x3f4200003f4d, ne: 0x3f4d00003f54},
		dm{re: -0x0001, si: 0x3f5400003f5a, ne: 0x3f5a00003f61},
		dm{re: 0x03d8, si: 0x00000000, ne: 0x3f6100003f69},
		dm{re: 0x03d9, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03da, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x3f7000003f76},
		dm{re: 0x03dd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03de, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03df, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x3f8700003f92, ne: 0x3f9200003f9d},
		dm{re: 0x03e2, si: 0x00000000, ne: 0x3f9d00003fa6},
		dm{re: 0x03e3, si: 0x00000000, ne: 0x3fa600003fad},
		dm{re: 0x03e4, si: 0x00000000, ne: 0x3fad00003fb6},
		dm{re: 0x03e5, si: 0x00000000, ne: 0x3fb600003fb9},
		dm{re: 0x03e6, si: 0x00000000, ne: 0x3fb900003fbe},
		dm{re: 0x03e7, si: 0x00000000, ne: 0x3fbe00003fc3},
		dm{re: -0x0001, si: 0x3fc300003fc7, ne: 0x3fc700003fcb},
		dm{re: -0x0001, si: 0x3fcb00003fd1, ne: 0x3fd100003fd6},
		dm{re: 0x03e8, si: 0x00000000, ne: 0x3fd600003fe0},
		dm{re: 0x03e9, si: 0x00000000, ne: 0x3fe000003fec},
		dm{re: -0x0001, si: 0x3fec00003ff9, ne: 0x3ff900004006},
		dm{re: -0x0001, si: 0x400600004012, ne: 0x40120000401e},
		dm{re: -0x0001, si: 0x401e00004028, ne: 0x402800004032},
		dm{re: -0x0001, si: 0x40320000403a, ne: 0x40320000403a},
		dm{re: -0x0001, si: 0x403a00004044, ne: 0x403a00004044},
		dm{re: -0x0001, si: 0x404400004054, ne: 0x404400004054},
		dm{re: -0x0001, si: 0x405400004060, ne: 0x405400004060},
		dm{re: -0x0001, si: 0x40600000406d, ne: 0x406d0000407a},
		dm{re: -0x0001, si: 0x407a00004084, ne: 0x40840000408e},
		dm{re: -0x0001, si: 0x408e00004098, ne: 0x4098000040a0},
		dm{re: -0x0001, si: 0x40a0000040ae, ne: 0x40ae000040bc},
		dm{re: -0x0001, si: 0x40bc000040c8, ne: 0x40c8000040cd},
		dm{re: -0x0001, si: 0x40cd000040d7, ne: 0x40d7000040da},
		dm{re: -0x0001, si: 0x40da000040e6, ne: 0x40e6000040eb},
		dm{re: 0x03ea, si: 0x00000000, ne: 0x40eb000040f0},
		dm{re: 0x03eb, si: 0x00000000, ne: 0x40f0000040f7},
		dm{re: -0x0001, si: 0x40f700004100, ne: 0x410000004108},
		dm{re: -0x0001, si: 0x410800004115, ne: 0x41150000411a},
		dm{re: -0x0001, si: 0x411a00004127, ne: 0x41270000412c},
		dm{re: 0x03ec, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03ed, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03ee, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03f0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03f1, si: 0x00000000, ne: 0x413c00004148},
		dm{re: 0x03f2, si: 0x00000000, ne: 0x414800004154},
		dm{re: 0x03f3, si: 0x00000000, ne: 0x41540000415c},
		dm{re: 0x03f4, si: 0x00000000, ne: 0x415c00004165},
		dm{re: 0x03f5, si: 0x00000000, ne: 0x416500004171},
		dm{re: 0x03f6, si: 0x00000000, ne: 0x41710000417d},
		dm{re: 0x03f7, si: 0x00000000, ne: 0x417d00004187},
		dm{re: 0x03f8, si: 0x00000000, ne: 0x41870000419a},
		dm{re: 0x03f9, si: 0x00000000, ne: 0x419a000041a8},
		dm{re: 0x03fa, si: 0x00000000, ne: 0x419a000041a8},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x03fd, si: 0x00000000, ne: 0x41b6000041c9},
		dm{re: 0x03fe, si: 0x00000000, ne: 0x41c9000041d6},
		dm{re: -0x0001, si: 0x41d6000041e2, ne: 0x41e2000041f0},
		dm{re: -0x0001, si: 0x41f4000041fd, ne: 0x41fd00004202},
		dm{re: 0x0400, si: 0x00000000, ne: 0x42020000420a},
		dm{re: 0x0401, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0402, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: -0x0001, si: 0x42130000421d, ne: 0x40c8000040cd},
		dm{re: 0x0403, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0405, si: 0x00000000, ne: 0x42260000422e},
		dm{re: 0x0406, si: 0x00000000, ne: 0x422e00004235},
		dm{re: 0x0407, si: 0x00000000, ne: 0x423500004242},
		dm{re: 0x0408, si: 0x00000000, ne: 0x424200004250},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x425b00004262, ne: 0x42620000426a},
		dm{re: 0x040c, si: 0x00000000, ne: 0x426e00004272},
		dm{re: 0x040d, si: 0x00000000, ne: 0x427200004275},
		dm{re: -0x0001, si: 0x427b0000428f, ne: 0x427b0000428f},
		dm{re: 0x0410, si: 0x00000000, ne: 0x42940000429d},
		dm{re: -0x0001, si: 0x429d000042a6, ne: 0x42a6000042af},
		dm{re: -0x0001, si: 0x42af000042b6, ne: 0x42b6000042bd},
		dm{re: -0x0001, si: 0x42bd000042c5, ne: 0x42c5000042cd},
		dm{re: -0x0001, si: 0x42cd000042db, ne: 0x42db000042eb},
		dm{re: -0x0001, si: 0x42eb000042f8, ne: 0x42f800004306},
		dm{re: -0x0001, si: 0x430600004314, ne: 0x431400004323},
		dm{re: 0x0411, si: 0x00000000, ne: 0x43230000432f},
		dm{re: -0x0001, si: 0x432f0000433b, ne: 0x433b00004347},
		dm{re: -0x0001, si: 0x434700004350, ne: 0x435000004359},
		dm{re: -0x0001, si: 0x435900004363, ne: 0x43630000436d},
		dm{re: -0x0001, si: 0x436d00004372, ne: 0x437200004377},
		dm{re: -0x0001, si: 0x437700004380, ne: 0x438000004389},
		dm{re: 0x0412, si: 0x00000000, ne: 0x1e7200001e76},
		dm{re: 0x0413, si: 0x00000000, ne: 0x43890000438f},
		dm{re: 0x0414, si: 0x00000000, ne: 0x438f00004394},
		dm{re: -0x0001, si: 0x439400004399, ne: 0x43990000439e},
		dm{re: 0x0415, si: 0x00000000, ne: 0x439e000043a1},
		dm{re: -0x0001, si: 0x43a1000043aa, ne: 0x43aa000043b3},
		dm{re: -0x0001, si: 0x43b3000043b9, ne: 0x43b9000043bf},
		dm{re: -0x0001, si: 0x43bf000043ca, ne: 0x43ca000043d5},
		dm{re: -0x0001, si: 0x43d5000043dc, ne: 0x43dc000043e3},
		dm{re: 0x0416, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x0417, si: 0x00000000, ne: 0x43e3000043e9},
		dm{re: -0x0001, si: 0x43e9000043f3, ne: 0x43f3000043f7},
		dm{re: -0x0001, si: 0x43f700004402, ne: 0x40e6000040eb},
		dm{re: -0x0001, si: 0x440200004410, ne: 0x441000004418},
		dm{re: 0x0418, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0419, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x041a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x041b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x041e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x041f, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x443000004438},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x44460000444c},
		dm{re: -0x0001, si: 0x44550000445a, ne: 0x445a0000446b},
		dm{re: 0x0424, si: 0x00000000, ne: 0x446b0000446f},
		dm{re: 0x0425, si: 0x00000000, ne: 0x446b0000446f},
		dm{re: 0x0427, si: 0x00000000, ne: 0x447400004481},
		dm{re: 0x0428, si: 0x00000000, ne: 0x448100004490},
		dm{re: 0x0429, si: 0x00000000, ne: 0x4490000044a6},
		dm{re: 0x042b, si: 0x00000000, ne: 0x44ac000044b7},
		dm{re: 0x042c, si: 0x00000000, ne: 0x44b7000044bd},
		dm{re: -0x0001, si: 0x44bd000044cb, ne: 0x44cb000044d2},
		dm{re: 0x042d, si: 0x00000000, ne: 0x44d2000044da},
		dm{re: 0x042e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x042f, si: 0x00000000, ne: 0x44da000044e3},
		dm{re: 0x0430, si: 0x00000000, ne: 0x44b7000044bd},
		dm{re: 0x0431, si: 0x00000000, ne: 0x44b7000044bd},
		dm{re: -0x0001, si: 0x44e6000044ea, ne: 0x44e6000044ea},
		dm{re: -0x0001, si: 0x44ea000044f1, ne: 0x44f1000044f4},
		dm{re: -0x0001, si: 0x44f4000044fb, ne: 0x44f4000044fb},
		dm{re: 0x0433, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0434, si: 0x00000000, ne: 0x43f3000043f7},
		dm{re: 0x0435, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0437, si: 0x00000000, ne: 0x45010000450b},
		dm{re: 0x0438, si: 0x00000000, ne: 0x450b00004514},
		dm{re: -0x0001, si: 0x451400004522, ne: 0x452200004532},
		dm{re: 0x0439, si: 0x00000000, ne: 0x453200004540},
		dm{re: 0x043a, si: 0x00000000, ne: 0x45400000454e},
		dm{re: -0x0001, si: 0x454e0000455c, ne: 0x455c00004563},
		dm{re: -0x0001, si: 0x456300004575, ne: 0x457500004583},
		dm{re: -0x0001, si: 0x458300004595, ne: 0x4595000045a3},
		dm{re: -0x0001, si: 0x45a3000045ba, ne: 0x45ba000045cd},
		dm{re: 0x043d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x043e, si: 0x00000000, ne: 0x45d9000045e1},
		dm{re: -0x0001, si: 0x45e1000045ef, ne: 0x45e1000045ef},
		dm{re: -0x0001, si: 0x45ef000045f6, ne: 0x45f6000045fe},
		dm{re: -0x0001, si: 0x45fe00004607, ne: 0x460700004611},
		dm{re: 0x043f, si: 0x00000000, ne: 0x461100004617},
		dm{re: 0x0440, si: 0x00000000, ne: 0x46170000461b},
		dm{re: 0x0441, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0442, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0443, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0444, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0446, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x46210000462d, ne: 0x462d00004633},
		dm{re: 0x0448, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x463d00004649, ne: 0x464900004657},
		dm{re: -0x0001, si: 0x46570000465e, ne: 0x465e00004665},
		dm{re: -0x0001, si: 0x466e00004674, ne: 0x466e00004674},
		dm{re: -0x0001, si: 0x46740000467f, ne: 0x467f00004687},
		dm{re: 0x044b, si: 0x00000000, ne: 0x2780000027a},
		dm{re: 0x044c, si: 0x00000000, ne: 0x468e00004695},
		dm{re: 0x044d, si: 0x00000000, ne: 0x3ba000003bc},
		dm{re: 0x044e, si: 0x00000000, ne: 0x469500004697},
		dm{re: 0x044f, si: 0x00000000, ne: 0x469700004699},
		dm{re: 0x0450, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x46a2000046b6, ne: 0xbd000000bd},
		dm{re: 0x0451, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0452, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0454, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0455, si: 0x00000000, ne: 0x46c3000046ce},
		dm{re: -0x0001, si: 0x46ce000046da, ne: 0x46da000046e6},
		dm{re: -0x0001, si: 0x46e6000046f0, ne: 0x46f0000046fa},
		dm{re: -0x0001, si: 0x46fa00004706, ne: 0x46fa00004706},
		dm{re: 0x0456, si: 0x00000000, ne: 0x470600004710},
		dm{re: 0x0457, si: 0x00000000, ne: 0x47100000471e},
		dm{re: 0x0458, si: 0x00000000, ne: 0x471e0000472d},
		dm{re: 0x0459, si: 0x00000000, ne: 0x472d0000473b},
		dm{re: 0x045a, si: 0x00000000, ne: 0x473b00004747},
		dm{re: 0x045b, si: 0x00000000, ne: 0x474700004754},
		dm{re: 0x045c, si: 0x00000000, ne: 0x475400004761},
		dm{re: -0x0001, si: 0x47610000476e, ne: 0x47610000476e},
		dm{re: 0x045d, si: 0x00000000, ne: 0x476e0000477b},
		dm{re: 0x045e, si: 0x00000000, ne: 0x477b00004783},
		dm{re: 0x045f, si: 0x00000000, ne: 0x47830000478d},
		dm{re: 0x0460, si: 0x00000000, ne: 0x478d0000479a},
		dm{re: -0x0001, si: 0x479a000047a7, ne: 0x47a7000047b6},
		dm{re: -0x0001, si: 0x47b6000047c6, ne: 0x47b6000047c6},
		dm{re: 0x0461, si: 0x00000000, ne: 0x47c6000047d2},
		dm{re: -0x0001, si: 0x47d2000047e0, ne: 0x47e0000047f1},
		dm{re: 0x0462, si: 0x00000000, ne: 0x47f1000047fd},
		dm{re: 0x0463, si: 0x00000000, ne: 0x47fd0000480a},
		dm{re: 0x0464, si: 0x00000000, ne: 0x480a00004812},
		dm{re: 0x0465, si: 0x00000000, ne: 0x48120000481d},
		dm{re: -0x0001, si: 0x481d00004829, ne: 0x482900004835},
		dm{re: -0x0001, si: 0x483500004846, ne: 0x483500004846},
		dm{re: -0x0001, si: 0x484600004852, ne: 0x484600004852},
		dm{re: 0x0466, si: 0x00000000, ne: 0x48520000485f},
		dm{re: -0x0001, si: 0x485f00004869, ne: 0x485f00004869},
		dm{re: -0x0001, si: 0x486900004873, ne: 0x48730000487d},
		dm{re: -0x0001, si: 0x487d0000488d, ne: 0x488d0000489d},
		dm{re: -0x0001, si: 0x489d000048b1, ne: 0x489d000048b1},
		dm{re: 0x0467, si: 0x00000000, ne: 0x48b1000048c2},
		dm{re: 0x0468, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0469, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x48ce000048d8, ne: 0x48d8000048e2},
		dm{re: -0x0001, si: 0x48e2000048ee, ne: 0x48ee000048fa},
		dm{re: -0x0001, si: 0x48fa00004907, ne: 0x490700004914},
		dm{re: -0x0001, si: 0x49140000491e, ne: 0x491e00004928},
		dm{re: -0x0001, si: 0x492800004932, ne: 0x49320000493c},
		dm{re: 0x046b, si: 0x00000000, ne: 0x493c00004943},
		dm{re: 0x046c, si: 0x00000000, ne: 0x49430000494a},
		dm{re: -0x0001, si: 0x494a00004953, ne: 0x49530000495c},
		dm{re: -0x0001, si: 0x495c00004967, ne: 0x496700004972},
		dm{re: -0x0001, si: 0x49720000497a, ne: 0x497a00004982},
		dm{re: -0x0001, si: 0x49820000498b, ne: 0x498b00004994},
		dm{re: -0x0001, si: 0x49a0000049a6, ne: 0x11790000117b},
		dm{re: -0x0001, si: 0x49a6000049af, ne: 0x49af000049b5},
		dm{re: 0x046e, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x49c2000049c9, ne: 0x49c9000049d9},
		dm{re: -0x0001, si: 0x49d9000049e0, ne: 0x49e0000049ed},
		dm{re: -0x0001, si: 0x49ed000049f4, ne: 0x49f400004a05},
		dm{re: -0x0001, si: 0x4a0500004a0c, ne: 0x4a0c00004a16},
		dm{re: 0x0471, si: 0x00000000, ne: 0x4a1b00004a1e},
		dm{re: 0x0472, si: 0x00000000, ne: 0x39ee000039f5},
		dm{re: 0x0473, si: 0x00000000, ne: 0x4a1e00004a25},
		dm{re: 0x0474, si: 0x00000000, ne: 0x4a2500004a2c},
		dm{re: 0x0475, si: 0x00000000, ne: 0x4a2c00004a31},
		dm{re: 0x0476, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x0477, si: 0x00000000, ne: 0x4a3100004a3b},
		dm{re: 0x0478, si: 0x00000000, ne: 0x4a3b00004a41},
		dm{re: 0x0479, si: 0x00000000, ne: 0x4a4100004a48},
		dm{re: 0x047a, si: 0x00000000, ne: 0x4a4800004a51},
		dm{re: 0x047b, si: 0x00000000, ne: 0x4a5100004a5a},
		dm{re: 0x047c, si: 0x00000000, ne: 0x4a5a00004a64},
		dm{re: 0x047d, si: 0x00000000, ne: 0x4a6400004a6c},
		dm{re: 0x047e, si: 0x00000000, ne: 0x4a6c00004a72},
		dm{re: 0x047f, si: 0x00000000, ne: 0x4a7200004a7a},
		dm{re: 0x0480, si: 0x00000000, ne: 0x4a7a00004a83},
		dm{re: 0x0481, si: 0x00000000, ne: 0x4a8300004a8b},
		dm{re: 0x0482, si: 0x00000000, ne: 0x4a8b00004a8f},
		dm{re: 0x0483, si: 0x00000000, ne: 0x4a8f00004a95},
		dm{re: 0x0484, si: 0x00000000, ne: 0x4a9500004a9f},
		dm{re: 0x0485, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0487, si: 0x00000000, ne: 0x4aa700004ab2},
		dm{re: 0x0488, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x0489, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x048a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x048b, si: 0x00000000, ne: 0x4ac300004ac6},
		dm{re: 0x048d, si: 0x00000000, ne: 0x4ad000004adc},
		dm{re: -0x0001, si: 0x4adc00004ae4, ne: 0x4ae400004af2},
		dm{re: -0x0001, si: 0x4af200004af7, ne: 0x4af700004b00},
		dm{re: -0x0001, si: 0x4b0000004b0b, ne: 0x4b0b00004b15},
		dm{re: 0x048e, si: 0x00000000, ne: 0x4b1500004b1f},
		dm{re: 0x048f, si: 0x00000000, ne: 0x4b1f00004b2b},
		dm{re: 0x0491, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x4b3000004b38, ne: 0x4b3800004b40},
		dm{re: -0x0001, si: 0x4b4000004b50, ne: 0x4b5000004b60},
		dm{re: 0x0492, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0494, si: 0x00000000, ne: 0x4b6900004b7c},
		dm{re: 0x0495, si: 0x00000000, ne: 0x4b7c00004b8b},
		dm{re: 0x0496, si: 0x00000000, ne: 0x4b8b00004b97},
		dm{re: 0x0497, si: 0x00000000, ne: 0x4b9700004ba2},
		dm{re: 0x0498, si: 0x00000000, ne: 0x4ba200004bb2},
		dm{re: 0x0499, si: 0x00000000, ne: 0x4bb200004bbf},
		dm{re: -0x0001, si: 0x4bbf00004bd1, ne: 0x4bbf00004bd1},
		dm{re: -0x0001, si: 0x4bd100004bdf, ne: 0x4bd100004bdf},
		dm{re: -0x0001, si: 0x4bdf00004beb, ne: 0x4bdf00004beb},
		dm{re: -0x0001, si: 0x4beb00004bf2, ne: 0x4bf200004bfa},
		dm{re: 0x049a, si: 0x00000000, ne: 0x4bfa00004c05},
		dm{re: 0x049b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x049c, si: 0x00000000, ne: 0x4c0500004c09},
		dm{re: 0x049e, si: 0x00000000, ne: 0x4c1100004c16},
		dm{re: 0x049f, si: 0x00000000, ne: 0x4c1600004c1c},
		dm{re: 0x04a1, si: 0x00000000, ne: 0x4c2100004c29},
		dm{re: 0x04a2, si: 0x00000000, ne: 0x4c2900004c33},
		dm{re: 0x04a3, si: 0x00000000, ne: 0x4c3300004c3c},
		dm{re: 0x04a4, si: 0x00000000, ne: 0x4c3c00004c45},
		dm{re: 0x04a5, si: 0x00000000, ne: 0x4c4500004c50},
		dm{re: 0x04a6, si: 0x00000000, ne: 0x4c5000004c5b},
		dm{re: 0x04a7, si: 0x00000000, ne: 0x4c5b00004c66},
		dm{re: 0x04a8, si: 0x00000000, ne: 0x4c6900004c74},
		dm{re: 0x04aa, si: 0x00000000, ne: 0x4c7a00004c7e},
		dm{re: 0x04ab, si: 0x00000000, ne: 0x4c7e00004c84},
		dm{re: 0x04ac, si: 0x00000000, ne: 0x4c8400004c8c},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x04af, si: 0x00000000, ne: 0x4c9c00004ca4},
		dm{re: 0x04b0, si: 0x00000000, ne: 0x4ca400004cac},
		dm{re: 0x04b1, si: 0x00000000, ne: 0x4cac00004cb4},
		dm{re: 0x04b2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x04b4, si: 0x00000000, ne: 0x4cc200004cc9},
		dm{re: 0x04b5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x04b6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x04b7, si: 0x00000000, ne: 0x4cc900004cdb},
		dm{re: 0x04b8, si: 0x00000000, ne: 0x4cdb00004ced},
		dm{re: 0x04b9, si: 0x00000000, ne: 0x4ced00004cfb},
		dm{re: 0x04ba, si: 0x00000000, ne: 0x4cfb00004d0e},
		dm{re: 0x04bb, si: 0x00000000, ne: 0x4d0e00004d1e},
		dm{re: 0x04bc, si: 0x00000000, ne: 0x4d1e00004d2b},
		dm{re: 0x04bd, si: 0x00000000, ne: 0x4d1e00004d2b},
		dm{re: 0x04be, si: 0x00000000, ne: 0x4d1e00004d2b},
		dm{re: -0x0001, si: 0x4d2b00004d3b, ne: 0x4d3b00004d40},
		dm{re: -0x0001, si: 0x4d4000004d44, ne: 0x4d4400004d46},
		dm{re: -0x0001, si: 0x4d4600004d50, ne: 0x4d5000004d52},
		dm{re: -0x0001, si: 0x4d5200004d64, ne: 0x4d6400004d69},
		dm{re: 0x04bf, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x4d6900004d70, ne: 0x4d7000004d77},
		dm{re: 0x04c0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x04c1, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x4d7700004d81, ne: 0x4d8100004d83},
		dm{re: 0x04c2, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x4d8300004d92, ne: 0x4d9200004d94},
		dm{re: -0x0001, si: 0x4d9400004da3, ne: 0x4da300004da5},
		dm{re: 0x04c3, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: -0x0001, si: 0x4daa00004daf, ne: 0x4daa00004daf},
		dm{re: -0x0001, si: 0x4daf00004db5, ne: 0x4daf00004db5},
		dm{re: -0x0001, si: 0x4db500004dc0, ne: 0x4dc000004dcb},
		dm{re: 0x04c5, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x04c8, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x04c9, si: 0x00000000, ne: 0x377200003778},
		dm{re: 0x04ca, si: 0x00000000, ne: 0x4dd900004de3},
		dm{re: 0x04cb, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x4dea00004ded, ne: 0x4dea00004ded},
		dm{re: -0x0001, si: 0x4ded00004df5, ne: 0x4ded00004df5},
		dm{re: -0x0001, si: 0x4df500004dfa, ne: 0x4dfa00004e02},
		dm{re: 0x04cd, si: 0x00000000, ne: 0x4e0200004e0c},
		dm{re: 0x04cf, si: 0x00000000, ne: 0x4e1200004e19},
		dm{re: 0x04d0, si: 0x00000000, ne: 0x4a2c00004a31},
		dm{re: 0x04d1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x04d2, si: 0x00000000, ne: 0x4a2c00004a31},
		dm{re: 0x04d3, si: 0x00000000, ne: 0x4e1900004e1b},
		dm{re: 0x04d4, si: 0x00000000, ne: 0x4e1b00004e23},
		dm{re: 0x04d5, si: 0x00000000, ne: 0x4e2300004e2a},
		dm{re: 0x04d6, si: 0x00000000, ne: 0x4e2a00004e32},
		dm{re: 0x04d7, si: 0x00000000, ne: 0x4e3200004e34},
		dm{re: 0x04d8, si: 0x00000000, ne: 0x4e3400004e36},
		dm{re: 0x04d9, si: 0x00000000, ne: 0x4e3600004e39},
		dm{re: 0x04da, si: 0x00000000, ne: 0x4e3900004e3b},
		dm{re: 0x04db, si: 0x00000000, ne: 0x39ee000039f5},
		dm{re: 0x04dc, si: 0x00000000, ne: 0x39f5000039fc},
		dm{re: 0x04dd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x04de, si: 0x00000000, ne: 0x4e3b00004e44},
		dm{re: 0x04df, si: 0x00000000, ne: 0x4e4400004e47},
		dm{re: 0x04e0, si: 0x00000000, ne: 0x4e4700004e4d},
		dm{re: 0x04e1, si: 0x00000000, ne: 0x4e4d00004e5b},
		dm{re: 0x04e2, si: 0x00000000, ne: 0x4e5b00004e64},
		dm{re: -0x0001, si: 0x4e6400004e6a, ne: 0x4e6a00004e74},
		dm{re: -0x0001, si: 0x4e7400004e7a, ne: 0x4e7a00004e83},
		dm{re: -0x0001, si: 0x4e8300004e89, ne: 0x4e8900004e92},
		dm{re: -0x0001, si: 0x4e9200004e98, ne: 0x4e9800004ea5},
		dm{re: 0x04e3, si: 0x00000000, ne: 0x4ea500004ead},
		dm{re: 0x04e4, si: 0x00000000, ne: 0x4ead00004eb9},
		dm{re: 0x04e5, si: 0x00000000, ne: 0x4eb900004ec1},
		dm{re: 0x04e6, si: 0x00000000, ne: 0x4ec100004ec9},
		dm{re: 0x04e7, si: 0x00000000, ne: 0x4ec900004ed7},
		dm{re: 0x04e8, si: 0x00000000, ne: 0x4ed700004ee4},
		dm{re: 0x04e9, si: 0x00000000, ne: 0x4ee400004ef3},
		dm{re: 0x04ea, si: 0x00000000, ne: 0x4ef300004efd},
		dm{re: 0x04eb, si: 0x00000000, ne: 0x16e3000016ea},
		dm{re: 0x04ec, si: 0x00000000, ne: 0x4efd00004f04},
		dm{re: 0x04ed, si: 0x00000000, ne: 0x4f0400004f11},
		dm{re: 0x04ee, si: 0x00000000, ne: 0x4f1100004f21},
		dm{re: 0x04ef, si: 0x00000000, ne: 0x4f2100004f29},
		dm{re: 0x04f0, si: 0x00000000, ne: 0x4f2900004f33},
		dm{re: 0x04f1, si: 0x00000000, ne: 0x4f3300004f3e},
		dm{re: 0x04f2, si: 0x00000000, ne: 0x4f3e00004f4d},
		dm{re: 0x04f3, si: 0x00000000, ne: 0x4f4d00004f5d},
		dm{re: 0x04f4, si: 0x00000000, ne: 0x4f5d00004f6a},
		dm{re: 0x04f5, si: 0x00000000, ne: 0x4f6a00004f73},
		dm{re: 0x04f6, si: 0x00000000, ne: 0x4f7300004f81},
		dm{re: 0x04f7, si: 0x00000000, ne: 0x4f8100004f90},
		dm{re: -0x0001, si: 0x4f9000004f98, ne: 0x4f9000004f98},
		dm{re: 0x04f8, si: 0x00000000, ne: 0x4f9800004fa5},
		dm{re: 0x04f9, si: 0x00000000, ne: 0x4fa500004fb3},
		dm{re: -0x0001, si: 0x4fb300004fc1, ne: 0x4fb300004fc1},
		dm{re: 0x04fa, si: 0x00000000, ne: 0x4fc100004fca},
		dm{re: -0x0001, si: 0x4fca00004fd6, ne: 0x4fca00004fd6},
		dm{re: 0x04fb, si: 0x00000000, ne: 0x4fd600004fdc},
		dm{re: -0x0001, si: 0x00000000, ne: 0x4fe500004ff3},
		dm{re: 0x04fe, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x4ff900005005, ne: 0x500500005018},
		dm{re: 0x0500, si: 0x00000000, ne: 0x502000005023},
		dm{re: -0x0001, si: 0x50230000502e, ne: 0x502e00005030},
		dm{re: 0x0502, si: 0x00000000, ne: 0x503700005041},
		dm{re: 0x0503, si: 0x00000000, ne: 0x504100005051},
		dm{re: 0x0504, si: 0x00000000, ne: 0x505100005060},
		dm{re: 0x0505, si: 0x00000000, ne: 0x50600000506d},
		dm{re: 0x0506, si: 0x00000000, ne: 0x506d0000507a},
		dm{re: 0x0507, si: 0x00000000, ne: 0x507a00005088},
		dm{re: 0x0508, si: 0x00000000, ne: 0x508800005096},
		dm{re: 0x0509, si: 0x00000000, ne: 0x5096000050a3},
		dm{re: 0x050a, si: 0x00000000, ne: 0x50a3000050b1},
		dm{re: 0x050b, si: 0x00000000, ne: 0x50b1000050b9},
		dm{re: 0x050d, si: 0x00000000, ne: 0x50c0000050cb},
		dm{re: 0x050e, si: 0x00000000, ne: 0x50cb000050d7},
		dm{re: 0x050f, si: 0x00000000, ne: 0x50d7000050e2},
		dm{re: -0x0001, si: 0x50e2000050f2, ne: 0x50f2000050fc},
		dm{re: -0x0001, si: 0x50fc00005104, ne: 0x51040000510a},
		dm{re: 0x0510, si: 0x00000000, ne: 0x510a0000510f},
		dm{re: 0x0511, si: 0x00000000, ne: 0x1c7000001c9},
		dm{re: 0x0512, si: 0x00000000, ne: 0x510f00005112},
		dm{re: 0x0513, si: 0x00000000, ne: 0x511200005119},
		dm{re: 0x0514, si: 0x00000000, ne: 0x51190000511f},
		dm{re: 0x0515, si: 0x00000000, ne: 0x511f00005127},
		dm{re: 0x0516, si: 0x00000000, ne: 0x512700005132},
		dm{re: 0x0517, si: 0x00000000, ne: 0x51320000513e},
		dm{re: 0x0518, si: 0x00000000, ne: 0x513e00005142},
		dm{re: 0x0519, si: 0x00000000, ne: 0x514200005145},
		dm{re: 0x051a, si: 0x00000000, ne: 0x51450000514b},
		dm{re: 0x051b, si: 0x00000000, ne: 0x148b0000148d},
		dm{re: 0x051c, si: 0x00000000, ne: 0x514b00005152},
		dm{re: 0x051d, si: 0x00000000, ne: 0x515200005158},
		dm{re: 0x051e, si: 0x00000000, ne: 0x51580000515e},
		dm{re: 0x051f, si: 0x00000000, ne: 0x515e00005165},
		dm{re: 0x0520, si: 0x00000000, ne: 0x51650000516c},
		dm{re: 0x0521, si: 0x00000000, ne: 0x516c00005171},
		dm{re: 0x0522, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x517100005175, ne: 0x51750000517b},
		dm{re: -0x0001, si: 0x517b0000517f, ne: 0x517f00005187},
		dm{re: 0x0523, si: 0x00000000, ne: 0x51870000518d},
		dm{re: 0x0524, si: 0x00000000, ne: 0x518d00005198},
		dm{re: 0x0525, si: 0x00000000, ne: 0x5198000051a3},
		dm{re: 0x0526, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0527, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0528, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0529, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x51aa000051bd, ne: 0x51bd000051c8},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x51d5000051db, ne: 0x51db000051e1},
		dm{re: -0x0001, si: 0x51e1000051e6, ne: 0x51e6000051ec},
		dm{re: 0x052c, si: 0x00000000, ne: 0x51ec000051f4},
		dm{re: -0x0001, si: 0x51fb00005203, ne: 0x52030000520b},
		dm{re: -0x0001, si: 0x520b00005211, ne: 0x521100005215},
		dm{re: -0x0001, si: 0x52150000521b, ne: 0x521b00005221},
		dm{re: -0x0001, si: 0x522100005229, ne: 0x52290000522f},
		dm{re: -0x0001, si: 0x522f00005234, ne: 0x52340000523d},
		dm{re: -0x0001, si: 0x523d00005245, ne: 0x524500005250},
		dm{re: -0x0001, si: 0x525000005256, ne: 0x52560000525d},
		dm{re: -0x0001, si: 0x525d00005263, ne: 0x52630000526c},
		dm{re: -0x0001, si: 0x526c00005274, ne: 0x52740000527c},
		dm{re: 0x052e, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x528a0000528e},
		dm{re: 0x0532, si: 0x00000000, ne: 0x5297000052a4},
		dm{re: 0x0533, si: 0x00000000, ne: 0x52a4000052ae},
		dm{re: 0x0534, si: 0x00000000, ne: 0x52ae000052b5},
		dm{re: 0x0535, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x52b5000052c1, ne: 0x52c1000052c9},
		dm{re: -0x0001, si: 0x52c9000052d3, ne: 0x52d3000052dd},
		dm{re: 0x0536, si: 0x00000000, ne: 0x52dd000052ec},
		dm{re: 0x0537, si: 0x00000000, ne: 0x52ec000052f6},
		dm{re: -0x0001, si: 0x52f6000052fd, ne: 0x52f6000052fd},
		dm{re: -0x0001, si: 0x53060000530b, ne: 0x530b00005311},
		dm{re: 0x053a, si: 0x00000000, ne: 0x53110000531c},
		dm{re: -0x0001, si: 0x531c00005321, ne: 0x532100005328},
		dm{re: -0x0001, si: 0x532800005330, ne: 0x533000005338},
		dm{re: -0x0001, si: 0x53380000533d, ne: 0x533d00005344},
		dm{re: 0x053b, si: 0x00000000, ne: 0x53440000534f},
		dm{re: 0x053c, si: 0x00000000, ne: 0x534f0000535f},
		dm{re: 0x053d, si: 0x00000000, ne: 0x535f00005370},
		dm{re: 0x053e, si: 0x00000000, ne: 0x53700000537c},
		dm{re: 0x053f, si: 0x00000000, ne: 0x537c0000538d},
		dm{re: 0x0540, si: 0x00000000, ne: 0x538d00005394},
		dm{re: 0x0541, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0542, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0543, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0545, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0546, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0548, si: 0x00000000, ne: 0x539d000053a5},
		dm{re: 0x0549, si: 0x00000000, ne: 0x539d000053a5},
		dm{re: 0x054a, si: 0x00000000, ne: 0x53a5000053b5},
		dm{re: 0x054b, si: 0x00000000, ne: 0x53b5000053c2},
		dm{re: 0x054c, si: 0x00000000, ne: 0x53c2000053d2},
		dm{re: 0x054d, si: 0x00000000, ne: 0x53d2000053e3},
		dm{re: 0x054e, si: 0x00000000, ne: 0x53e3000053ed},
		dm{re: 0x054f, si: 0x00000000, ne: 0x53ed000053f7},
		dm{re: 0x0550, si: 0x00000000, ne: 0x53f700005402},
		dm{re: 0x0551, si: 0x00000000, ne: 0x54020000540d},
		dm{re: 0x0552, si: 0x00000000, ne: 0x540d00005418},
		dm{re: 0x0553, si: 0x00000000, ne: 0x541800005420},
		dm{re: 0x0554, si: 0x00000000, ne: 0x541800005420},
		dm{re: 0x0555, si: 0x00000000, ne: 0x542000005427},
		dm{re: 0x0556, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0557, si: 0x00000000, ne: 0x54270000542d},
		dm{re: -0x0001, si: 0x542d00005436, ne: 0x542d00005436},
		dm{re: 0x0558, si: 0x00000000, ne: 0x54360000543b},
		dm{re: 0x0559, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x055a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x055b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x055c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x543d00005446, ne: 0x54460000544f},
		dm{re: 0x055e, si: 0x00000000, ne: 0x544f00005458},
		dm{re: -0x0001, si: 0x545800005460, ne: 0x546000005468},
		dm{re: -0x0001, si: 0x54680000546f, ne: 0x546f00005476},
		dm{re: -0x0001, si: 0x00000000, ne: 0x377e00003786},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x548b00005495, ne: 0x54950000549e},
		dm{re: 0x0563, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x54a3000054ab, ne: 0x54ab000054b0},
		dm{re: -0x0001, si: 0x54b0000054b6, ne: 0x54b6000054bc},
		dm{re: 0x0564, si: 0x00000000, ne: 0x54bc000054c2},
		dm{re: 0x0566, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0567, si: 0x00000000, ne: 0x54c5000054ca},
		dm{re: 0x0568, si: 0x00000000, ne: 0x54ca000054d3},
		dm{re: 0x0569, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x056c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x056e, si: 0x00000000, ne: 0x54ec000054f6},
		dm{re: 0x056f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0571, si: 0x00000000, ne: 0x54fb00005505},
		dm{re: 0x0572, si: 0x00000000, ne: 0x55050000550e},
		dm{re: -0x0001, si: 0x550e00005519, ne: 0x551900005524},
		dm{re: 0x0573, si: 0x00000000, ne: 0x55240000552d},
		dm{re: -0x0001, si: 0x00000000, ne: 0x55360000553e},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0576, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0577, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0579, si: 0x00000000, ne: 0x555a0000556b},
		dm{re: -0x0001, si: 0x556b00005573, ne: 0x55730000557e},
		dm{re: -0x0001, si: 0x558a00005596, ne: 0x55960000559b},
		dm{re: -0x0001, si: 0x559b000055a7, ne: 0x55a7000055ac},
		dm{re: -0x0001, si: 0x55b6000055b8, ne: 0x55b6000055b8},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x55c7000055cc, ne: 0x55c7000055cc},
		dm{re: 0x057d, si: 0x00000000, ne: 0x55cc000055d4},
		dm{re: 0x057e, si: 0x00000000, ne: 0x55d4000055d9},
		dm{re: 0x057f, si: 0x00000000, ne: 0x55d9000055e2},
		dm{re: 0x0580, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0581, si: 0x00000000, ne: 0x4a2c00004a31},
		dm{re: 0x0582, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0583, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0584, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0585, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0587, si: 0x00000000, ne: 0x55e8000055ee},
		dm{re: 0x0588, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0589, si: 0x00000000, ne: 0x55ee000055f4},
		dm{re: 0x058a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x058b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x560f00005619, ne: 0x561900005625},
		dm{re: 0x0590, si: 0x00000000, ne: 0x562500005628},
		dm{re: -0x0001, si: 0x56280000562d, ne: 0x56280000562d},
		dm{re: -0x0001, si: 0x562d00005632, ne: 0x562d00005632},
		dm{re: 0x0591, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x564200005649, ne: 0x564200005649},
		dm{re: 0x0594, si: 0x00000000, ne: 0x56490000564d},
		dm{re: 0x0595, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0597, si: 0x00000000, ne: 0x565200005658},
		dm{re: -0x0001, si: 0x56580000565c, ne: 0x56580000565c},
		dm{re: -0x0001, si: 0x565c00005664, ne: 0x56640000566f},
		dm{re: -0x0001, si: 0x566f00005677, ne: 0x567700005682},
		dm{re: 0x0598, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x568200005688, ne: 0x568800005690},
		dm{re: -0x0001, si: 0x569000005698, ne: 0x5698000056a4},
		dm{re: -0x0001, si: 0x56a4000056ac, ne: 0x56ac000056b7},
		dm{re: -0x0001, si: 0x56b7000056bf, ne: 0x56bf000056cb},
		dm{re: -0x0001, si: 0x56cb000056d3, ne: 0x56d3000056df},
		dm{re: -0x0001, si: 0x56df000056e7, ne: 0x56e7000056f1},
		dm{re: -0x0001, si: 0x56f1000056f9, ne: 0x56f900005707},
		dm{re: -0x0001, si: 0x57070000570f, ne: 0x570f0000571b},
		dm{re: -0x0001, si: 0x571b00005723, ne: 0x57230000572f},
		dm{re: -0x0001, si: 0x572f00005737, ne: 0x573700005743},
		dm{re: -0x0001, si: 0x57430000574b, ne: 0x574b00005756},
		dm{re: 0x0599, si: 0x00000000, ne: 0x575600005760},
		dm{re: 0x059a, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x576000005766, ne: 0x57660000576e},
		dm{re: -0x0001, si: 0x576e00005782, ne: 0x57820000578d},
		dm{re: 0x059b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x059c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x578d00005794, ne: 0x5794000057a1},
		dm{re: -0x0001, si: 0x57a1000057a9, ne: 0x57a9000057b7},
		dm{re: -0x0001, si: 0x57b7000057c1, ne: 0x57c1000057cf},
		dm{re: 0x059d, si: 0x00000000, ne: 0x57cf000057d3},
		dm{re: -0x0001, si: 0x57d3000057dc, ne: 0x57dc000057e0},
		dm{re: 0x059e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x059f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05a0, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x57e0000057ef, ne: 0x57ef000057f5},
		dm{re: 0x05a1, si: 0x00000000, ne: 0x57f5000057fc},
		dm{re: 0x05a2, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x57fc00005804, ne: 0x58040000580e},
		dm{re: 0x05a3, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x580e00005816, ne: 0x581600005824},
		dm{re: -0x0001, si: 0x58240000582c, ne: 0x582c0000583a},
		dm{re: -0x0001, si: 0x583a00005842, ne: 0x584200005851},
		dm{re: -0x0001, si: 0x585100005859, ne: 0x58590000586a},
		dm{re: -0x0001, si: 0x586a00005872, ne: 0x587200005880},
		dm{re: -0x0001, si: 0x588000005888, ne: 0x588800005896},
		dm{re: -0x0001, si: 0x58960000589e, ne: 0x589e000058ac},
		dm{re: -0x0001, si: 0x58ac000058b4, ne: 0x58b4000058c2},
		dm{re: 0x05a4, si: 0x00000000, ne: 0x58c2000058cf},
		dm{re: 0x05a5, si: 0x00000000, ne: 0x58cf000058db},
		dm{re: 0x05a6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05a7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05a8, si: 0x00000000, ne: 0x58db000058e1},
		dm{re: 0x05a9, si: 0x00000000, ne: 0x58e1000058e9},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05ad, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05ae, si: 0x00000000, ne: 0x58fb00005902},
		dm{re: 0x05b0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05b1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05b2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05b3, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05b7, si: 0x00000000, ne: 0x591c0000592f},
		dm{re: -0x0001, si: 0x592f00005940, ne: 0x594000005952},
		dm{re: 0x05b8, si: 0x00000000, ne: 0x595200005960},
		dm{re: 0x05b9, si: 0x00000000, ne: 0x596000005966},
		dm{re: 0x05ba, si: 0x00000000, ne: 0x596600005972},
		dm{re: 0x05bb, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05bc, si: 0x00000000, ne: 0x597200005979},
		dm{re: 0x05bd, si: 0x00000000, ne: 0x597900005980},
		dm{re: -0x0001, si: 0x59800000598b, ne: 0x598b00005996},
		dm{re: 0x05be, si: 0x00000000, ne: 0x5996000059a1},
		dm{re: -0x0001, si: 0x59a1000059a8, ne: 0x59a1000059a8},
		dm{re: 0x05bf, si: 0x00000000, ne: 0x59a8000059af},
		dm{re: 0x05c0, si: 0x00000000, ne: 0x59af000059b7},
		dm{re: 0x05c1, si: 0x00000000, ne: 0x59b7000059bf},
		dm{re: -0x0001, si: 0x59bf000059cb, ne: 0x59cb000059d7},
		dm{re: -0x0001, si: 0x59d7000059e3, ne: 0x59e3000059ef},
		dm{re: -0x0001, si: 0x59ef000059f6, ne: 0x59ef000059f6},
		dm{re: -0x0001, si: 0x59f6000059ff, ne: 0x59ff00005a01},
		dm{re: -0x0001, si: 0x5a0100005a08, ne: 0x5a0800005a0f},
		dm{re: -0x0001, si: 0x5a0f00005a1a, ne: 0x5a1a00005a24},
		dm{re: 0x05c2, si: 0x00000000, ne: 0x5a2400005a2c},
		dm{re: -0x0001, si: 0x5a2c00005a34, ne: 0x5a3400005a3c},
		dm{re: -0x0001, si: 0x5a3c00005a4a, ne: 0x5a4a00005a58},
		dm{re: -0x0001, si: 0x5a5800005a60, ne: 0x5a6000005a68},
		dm{re: -0x0001, si: 0x5a6800005a71, ne: 0x5a6800005a71},
		dm{re: -0x0001, si: 0x5a7100005a77, ne: 0x5a7100005a77},
		dm{re: 0x05c3, si: 0x00000000, ne: 0x597200005979},
		dm{re: 0x05c4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05c5, si: 0x00000000, ne: 0x4a2c00004a31},
		dm{re: 0x05c6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05c7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05c8, si: 0x00000000, ne: 0x5a7700005a7f},
		dm{re: 0x05c9, si: 0x00000000, ne: 0x5a7f00005a84},
		dm{re: -0x0001, si: 0x00000000, ne: 0x5a8a00005a8c},
		dm{re: 0x05cc, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05cd, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05cf, si: 0x00000000, ne: 0x5aa200005aa7},
		dm{re: 0x05d0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05d2, si: 0x00000000, ne: 0x5aab00005aaf},
		dm{re: 0x05d3, si: 0x00000000, ne: 0x5aaf00005ab3},
		dm{re: 0x05d4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05d5, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05d8, si: 0x00000000, ne: 0x5ac800005ace},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05db, si: 0x00000000, ne: 0x5adb00005ae2},
		dm{re: 0x05dc, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05dd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05df, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x5ae800005af4, ne: 0x5ae800005af4},
		dm{re: 0x05e0, si: 0x00000000, ne: 0x5af400005afe},
		dm{re: 0x05e1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05e3, si: 0x00000000, ne: 0x5b0500005b0f},
		dm{re: 0x05e4, si: 0x00000000, ne: 0x5b0f00005b1c},
		dm{re: 0x05e5, si: 0x00000000, ne: 0x5b2b00005b2f},
		dm{re: 0x05e6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05e7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05e9, si: 0x00000000, ne: 0x5b3700005b3e},
		dm{re: 0x05ea, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05eb, si: 0x00000000, ne: 0x5b3e00005b44},
		dm{re: 0x05ec, si: 0x00000000, ne: 0x5b4400005b49},
		dm{re: 0x05ee, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05ef, si: 0x00000000, ne: 0x5b4b00005b4f},
		dm{re: 0x05f0, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x5b5200005b5a, ne: 0x5b5a00005b5f},
		dm{re: -0x0001, si: 0x5b6200005b73, ne: 0x5b7300005b80},
		dm{re: 0x05f1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05f2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05f4, si: 0x00000000, ne: 0x5b8300005b88},
		dm{re: 0x05f5, si: 0x00000000, ne: 0x5b8300005b88},
		dm{re: -0x0001, si: 0x00000000, ne: 0x5b8d00005b98},
		dm{re: 0x05f8, si: 0x00000000, ne: 0x5b9d00005ba7},
		dm{re: -0x0001, si: 0x00000000, ne: 0x5bab00005bb5},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05fe, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x05ff, si: 0x00000000, ne: 0x5bca00005bd4},
		dm{re: -0x0001, si: 0x5be000005bf1, ne: 0x5bf100005bfd},
		dm{re: 0x0601, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x5bfd00005c07, ne: 0x5bfd00005c07},
		dm{re: -0x0001, si: 0x5c0700005c14, ne: 0x5c1400005c1c},
		dm{re: 0x0602, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x5c3000005c34, ne: 0x5c3000005c34},
		dm{re: -0x0001, si: 0x5c3400005c3b, ne: 0x5c3b00005c43},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0607, si: 0x00000000, ne: 0x5c5400005c68},
		dm{re: 0x0608, si: 0x00000000, ne: 0x5c6800005c83},
		dm{re: 0x0609, si: 0x00000000, ne: 0x5c8300005c97},
		dm{re: 0x060a, si: 0x00000000, ne: 0x5c9700005caa},
		dm{re: -0x0001, si: 0x00000000, ne: 0x5cb600005cc7},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x060d, si: 0x00000000, ne: 0x5cd700005cdc},
		dm{re: 0x060e, si: 0x00000000, ne: 0x5cdc00005ce7},
		dm{re: 0x060f, si: 0x00000000, ne: 0x5ce700005ced},
		dm{re: 0x0610, si: 0x00000000, ne: 0x5ced00005cf7},
		dm{re: 0x0611, si: 0x00000000, ne: 0x5cf700005cff},
		dm{re: 0x0612, si: 0x00000000, ne: 0x5cff00005d07},
		dm{re: 0x0613, si: 0x00000000, ne: 0x5d0700005d10},
		dm{re: 0x0614, si: 0x00000000, ne: 0x5d1000005d17},
		dm{re: 0x0615, si: 0x00000000, ne: 0x5d1700005d1e},
		dm{re: 0x0616, si: 0x00000000, ne: 0x5d1e00005d24},
		dm{re: 0x0617, si: 0x00000000, ne: 0x5d2400005d27},
		dm{re: 0x0618, si: 0x00000000, ne: 0x5d2700005d29},
		dm{re: 0x0619, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x061a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x061b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x061d, si: 0x00000000, ne: 0x5d2e00005d37},
		dm{re: 0x061e, si: 0x00000000, ne: 0x5d3700005d3d},
		dm{re: 0x061f, si: 0x00000000, ne: 0x5d3d00005d46},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0622, si: 0x00000000, ne: 0x5d5500005d61},
		dm{re: 0x0623, si: 0x00000000, ne: 0x5d6100005d6e},
		dm{re: 0x0624, si: 0x00000000, ne: 0x5d6e00005d79},
		dm{re: -0x0001, si: 0x5d7900005d82, ne: 0x5d8200005d8c},
		dm{re: 0x0625, si: 0x00000000, ne: 0x5d8c00005d96},
		dm{re: 0x0626, si: 0x00000000, ne: 0x5d9600005d9f},
		dm{re: 0x0627, si: 0x00000000, ne: 0x5d9f00005dab},
		dm{re: -0x0001, si: 0x5db800005dca, ne: 0x5db800005dca},
		dm{re: 0x0629, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x39ee000039f5},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x5ddb00005de4, ne: 0x5de400005dec},
		dm{re: -0x0001, si: 0x5dec00005df0, ne: 0x5df000005df3},
		dm{re: -0x0001, si: 0x5df300005df7, ne: 0x5df700005e01},
		dm{re: -0x0001, si: 0x5e0100005e05, ne: 0x40c8000040cd},
		dm{re: -0x0001, si: 0x5e0500005e0a, ne: 0x5e0a00005e13},
		dm{re: -0x0001, si: 0x5e1300005e18, ne: 0x5e1800005e1f},
		dm{re: -0x0001, si: 0x5e1f00005e25, ne: 0x5e2500005e2b},
		dm{re: -0x0001, si: 0x5e2b00005e2f, ne: 0x5e2f00005e36},
		dm{re: -0x0001, si: 0x5e3600005e3a, ne: 0x5e3a00005e42},
		dm{re: -0x0001, si: 0x5e4200005e47, ne: 0x5e4700005e4f},
		dm{re: -0x0001, si: 0x5e4f00005e53, ne: 0x5e5300005e57},
		dm{re: -0x0001, si: 0x5e5700005e5b, ne: 0x5e5b00005e63},
		dm{re: -0x0001, si: 0x5e6300005e67, ne: 0x5e6700005e6b},
		dm{re: -0x0001, si: 0x5e6b00005e6f, ne: 0x5e6f00005e79},
		dm{re: -0x0001, si: 0x5e7900005e7d, ne: 0x5e7d00005e83},
		dm{re: -0x0001, si: 0x5e8300005e87, ne: 0x5e8700005e8c},
		dm{re: -0x0001, si: 0x5e8c00005e90, ne: 0x5e9000005e99},
		dm{re: -0x0001, si: 0x5e9900005e9d, ne: 0x5e9d00005ea4},
		dm{re: -0x0001, si: 0x5ea400005ea8, ne: 0x5ea800005eaf},
		dm{re: -0x0001, si: 0x5eaf00005eb3, ne: 0x5eb300005ebe},
		dm{re: -0x0001, si: 0x5ebe00005ec2, ne: 0x5ec200005ecd},
		dm{re: -0x0001, si: 0x5ecd00005ed1, ne: 0x5ed100005eda},
		dm{re: -0x0001, si: 0x5eda00005ede, ne: 0x5ede00005ee5},
		dm{re: -0x0001, si: 0x00000000, ne: 0x5eea00005efd},
		dm{re: -0x0001, si: 0x5f0100005f0b, ne: 0x5f0b00005f15},
		dm{re: -0x0001, si: 0x5f1500005f1f, ne: 0x5f1500005f1f},
		dm{re: -0x0001, si: 0x5f1f00005f2a, ne: 0x5f2a00005f35},
		dm{re: 0x062f, si: 0x00000000, ne: 0x5f3500005f3f},
		dm{re: 0x0630, si: 0x00000000, ne: 0x5f3f00005f4a},
		dm{re: 0x0631, si: 0x00000000, ne: 0x5f4a00005f53},
		dm{re: -0x0001, si: 0x5f5300005f5f, ne: 0x5f5f00005f6b},
		dm{re: 0x0632, si: 0x00000000, ne: 0x5f6b00005f74},
		dm{re: -0x0001, si: 0x5f7400005f7e, ne: 0x5f7e00005f88},
		dm{re: -0x0001, si: 0x5f8800005f94, ne: 0x5f9400005fa0},
		dm{re: -0x0001, si: 0x5fa000005fa9, ne: 0x5fa900005fb6},
		dm{re: 0x0633, si: 0x00000000, ne: 0x5fb600005fbf},
		dm{re: 0x0634, si: 0x00000000, ne: 0x5fbf00005fc8},
		dm{re: -0x0001, si: 0x5fc800005fd2, ne: 0x5fc800005fd2},
		dm{re: 0x0635, si: 0x00000000, ne: 0x5fd200005fdc},
		dm{re: 0x0636, si: 0x00000000, ne: 0x5f2a00005f35},
		dm{re: -0x0001, si: 0x5fdc00005fe7, ne: 0x5fdc00005fe7},
		dm{re: -0x0001, si: 0x5fe700005ff1, ne: 0x5fe700005ff1},
		dm{re: -0x0001, si: 0x5ff100005ffe, ne: 0x5ff100005ffe},
		dm{re: 0x0637, si: 0x00000000, ne: 0x5ffe00006002},
		dm{re: 0x0638, si: 0x00000000, ne: 0x600200006006},
		dm{re: 0x0639, si: 0x00000000, ne: 0x60060000600a},
		dm{re: -0x0001, si: 0x600a00006014, ne: 0x600a00006014},
		dm{re: -0x0001, si: 0x60140000601e, ne: 0x60140000601e},
		dm{re: -0x0001, si: 0x601e00006028, ne: 0x601e00006028},
		dm{re: -0x0001, si: 0x602800006032, ne: 0x60320000603c},
		dm{re: 0x063a, si: 0x00000000, ne: 0x603c0000604c},
		dm{re: 0x063b, si: 0x00000000, ne: 0x604c00006057},
		dm{re: 0x063c, si: 0x00000000, ne: 0x377200003778},
		dm{re: -0x0001, si: 0x605700006067, ne: 0x606700006072},
		dm{re: 0x063d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x063f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0640, si: 0x00000000, ne: 0x607a0000607e},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0644, si: 0x00000000, ne: 0x609300006097},
		dm{re: 0x0646, si: 0x00000000, ne: 0x60a1000060a9},
		dm{re: 0x0647, si: 0x00000000, ne: 0x60a9000060b1},
		dm{re: 0x0648, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0649, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x064b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x064c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x60c4000060dd, ne: 0x60dd000060f1},
		dm{re: 0x064f, si: 0x00000000, ne: 0x60f900006100},
		dm{re: 0x0650, si: 0x00000000, ne: 0x610000006107},
		dm{re: 0x0652, si: 0x00000000, ne: 0x610f00006118},
		dm{re: 0x0653, si: 0x00000000, ne: 0x61180000611f},
		dm{re: 0x0654, si: 0x00000000, ne: 0x611f00006128},
		dm{re: 0x0655, si: 0x00000000, ne: 0x612800006130},
		dm{re: 0x0656, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0658, si: 0x00000000, ne: 0x613700006141},
		dm{re: -0x0001, si: 0x614100006148, ne: 0x61480000614f},
		dm{re: -0x0001, si: 0x614f0000615f, ne: 0x614f0000615f},
		dm{re: 0x0659, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x61650000616c, ne: 0x616c00006174},
		dm{re: -0x0001, si: 0x617400006180, ne: 0x618000006186},
		dm{re: 0x065b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x618d000061a6, ne: 0x61a6000061b7},
		dm{re: 0x065d, si: 0x00000000, ne: 0x61b7000061c2},
		dm{re: 0x065e, si: 0x00000000, ne: 0x61c2000061d1},
		dm{re: 0x065f, si: 0x00000000, ne: 0x61d1000061e2},
		dm{re: 0x0660, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0662, si: 0x00000000, ne: 0x61e6000061ec},
		dm{re: -0x0001, si: 0x61f500006203, ne: 0x620300006212},
		dm{re: -0x0001, si: 0x621200006222, ne: 0x621200006222},
		dm{re: -0x0001, si: 0x62220000622e, ne: 0x622e0000623a},
		dm{re: -0x0001, si: 0x623a00006249, ne: 0x624900006258},
		dm{re: -0x0001, si: 0x625800006268, ne: 0x62680000627a},
		dm{re: -0x0001, si: 0x627a00006284, ne: 0x628400006297},
		dm{re: -0x0001, si: 0x00000000, ne: 0x629f000062a5},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0667, si: 0x00000000, ne: 0x62b1000062bf},
		dm{re: 0x0668, si: 0x00000000, ne: 0x62bf000062cd},
		dm{re: 0x0669, si: 0x00000000, ne: 0x62cd000062db},
		dm{re: 0x066a, si: 0x00000000, ne: 0x62db000062e6},
		dm{re: -0x0001, si: 0x62e6000062f0, ne: 0x62f0000062fb},
		dm{re: 0x066b, si: 0x00000000, ne: 0x62fb00006306},
		dm{re: 0x066c, si: 0x00000000, ne: 0x63060000630f},
		dm{re: 0x066d, si: 0x00000000, ne: 0x630f00006317},
		dm{re: 0x066e, si: 0x00000000, ne: 0x631700006321},
		dm{re: 0x066f, si: 0x00000000, ne: 0x63210000632a},
		dm{re: 0x0670, si: 0x00000000, ne: 0x632a00006330},
		dm{re: 0x0671, si: 0x00000000, ne: 0x633000006336},
		dm{re: 0x0672, si: 0x00000000, ne: 0x63360000633c},
		dm{re: 0x0673, si: 0x00000000, ne: 0x633c00006346},
		dm{re: 0x0674, si: 0x00000000, ne: 0xd0800000d0c},
		dm{re: 0x0675, si: 0x00000000, ne: 0x63460000634b},
		dm{re: 0x0676, si: 0x00000000, ne: 0x634b0000634e},
		dm{re: 0x0677, si: 0x00000000, ne: 0x634e00006354},
		dm{re: 0x0678, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0679, si: 0x00000000, ne: 0x63540000635c},
		dm{re: -0x0001, si: 0x635c00006362, ne: 0x635c00006362},
		dm{re: 0x067b, si: 0x00000000, ne: 0x636800006370},
		dm{re: -0x0001, si: 0x637000006378, ne: 0x637800006380},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x067e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x067f, si: 0x00000000, ne: 0x63880000638c},
		dm{re: 0x0681, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0682, si: 0x00000000, ne: 0x639000006395},
		dm{re: -0x0001, si: 0x639e000063a4, ne: 0x63a4000063ab},
		dm{re: -0x0001, si: 0x63ab000063b3, ne: 0x63b3000063bc},
		dm{re: -0x0001, si: 0x63bc000063c5, ne: 0x63c5000063ce},
		dm{re: -0x0001, si: 0x63ce000063da, ne: 0x63da000063e6},
		dm{re: 0x0684, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x63e6000063ee, ne: 0x63ee000063f7},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0686, si: 0x00000000, ne: 0x64060000640f},
		dm{re: 0x0687, si: 0x00000000, ne: 0x64150000641f},
		dm{re: 0x0688, si: 0x00000000, ne: 0x641f00006428},
		dm{re: -0x0001, si: 0x642b00006437, ne: 0x643700006446},
		dm{re: -0x0001, si: 0x644600006453, ne: 0x645300006458},
		dm{re: -0x0001, si: 0x645800006464, ne: 0x64640000646a},
		dm{re: -0x0001, si: 0x646a00006476, ne: 0x647600006479},
		dm{re: -0x0001, si: 0x647900006485, ne: 0x5bbe00005bc3},
		dm{re: -0x0001, si: 0x648500006491, ne: 0x649100006497},
		dm{re: -0x0001, si: 0x6497000064a3, ne: 0x64a3000064a8},
		dm{re: -0x0001, si: 0x64ab000064b2, ne: 0x64ab000064b2},
		dm{re: -0x0001, si: 0x64b2000064bc, ne: 0x64b2000064bc},
		dm{re: -0x0001, si: 0x64bc000064c6, ne: 0x64bc000064c6},
		dm{re: -0x0001, si: 0x64c6000064d0, ne: 0x64c6000064d0},
		dm{re: -0x0001, si: 0x64d0000064da, ne: 0x64d0000064da},
		dm{re: 0x068c, si: 0x00000000, ne: 0x64dd000064ea},
		dm{re: 0x068d, si: 0x00000000, ne: 0x64ea000064f2},
		dm{re: -0x0001, si: 0x64f2000064fc, ne: 0x64fc00006508},
		dm{re: -0x0001, si: 0x650800006511, ne: 0x65110000651a},
		dm{re: 0x068f, si: 0x00000000, ne: 0x651f00006526},
		dm{re: 0x0690, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x653f00006548},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x655d00006562},
		dm{re: -0x0001, si: 0x00000000, ne: 0x377e00003786},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x657900006580, ne: 0x658000006582},
		dm{re: -0x0001, si: 0x658200006590, ne: 0x658200006590},
		dm{re: 0x0698, si: 0x00000000, ne: 0x659000006599},
		dm{re: -0x0001, si: 0x6599000065a2, ne: 0x65a2000065a6},
		dm{re: 0x0699, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x65aa000065b9, ne: 0x65b9000065c2},
		dm{re: 0x069b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x65c2000065cc, ne: 0x65cc000065d6},
		dm{re: -0x0001, si: 0x65d6000065df, ne: 0x65df000065e8},
		dm{re: 0x069c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x65e8000065f2, ne: 0x65f2000065f7},
		dm{re: -0x0001, si: 0x65f700006600, ne: 0x66000000660d},
		dm{re: -0x0001, si: 0x660d00006612, ne: 0x66120000661b},
		dm{re: -0x0001, si: 0x661b00006622, ne: 0x66220000662c},
		dm{re: -0x0001, si: 0x662c00006638, ne: 0x663800006644},
		dm{re: -0x0001, si: 0x66440000664b, ne: 0x664b00006653},
		dm{re: -0x0001, si: 0x66530000665b, ne: 0x665b00006663},
		dm{re: 0x069e, si: 0x00000000, ne: 0x666700006672},
		dm{re: 0x06a0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x06a1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x06a4, si: 0x00000000, ne: 0x668f0000669a},
		dm{re: 0x06a5, si: 0x00000000, ne: 0x669a000066a7},
		dm{re: 0x06a6, si: 0x00000000, ne: 0x66a7000066b7},
		dm{re: 0x06a7, si: 0x00000000, ne: 0x66b7000066c6},
		dm{re: 0x06a8, si: 0x00000000, ne: 0x66c6000066d1},
		dm{re: 0x06a9, si: 0x00000000, ne: 0x66d1000066df},
		dm{re: 0x06aa, si: 0x00000000, ne: 0x66df000066eb},
		dm{re: 0x06ab, si: 0x00000000, ne: 0x66eb000066f6},
		dm{re: 0x06ac, si: 0x00000000, ne: 0x66f600006705},
		dm{re: 0x06ad, si: 0x00000000, ne: 0x67050000670d},
		dm{re: 0x06ae, si: 0x00000000, ne: 0x670d0000671a},
		dm{re: 0x06af, si: 0x00000000, ne: 0x671a00006724},
		dm{re: 0x06b0, si: 0x00000000, ne: 0x672400006733},
		dm{re: 0x06b1, si: 0x00000000, ne: 0x67330000673e},
		dm{re: 0x06b2, si: 0x00000000, ne: 0x673e00006748},
		dm{re: 0x06b4, si: 0x00000000, ne: 0x674b00006753},
		dm{re: 0x06b5, si: 0x00000000, ne: 0x67530000675a},
		dm{re: 0x06b6, si: 0x00000000, ne: 0x675a00006762},
		dm{re: 0x06b7, si: 0x00000000, ne: 0x676200006771},
		dm{re: 0x06b8, si: 0x00000000, ne: 0x67710000677a},
		dm{re: 0x06b9, si: 0x00000000, ne: 0x677a00006782},
		dm{re: 0x06ba, si: 0x00000000, ne: 0x67820000678a},
		dm{re: 0x06bb, si: 0x00000000, ne: 0x678a00006792},
		dm{re: 0x06bc, si: 0x00000000, ne: 0x67920000679a},
		dm{re: 0x06bd, si: 0x00000000, ne: 0x679a000067a2},
		dm{re: 0x06be, si: 0x00000000, ne: 0x67a2000067ab},
		dm{re: 0x06bf, si: 0x00000000, ne: 0x67ab000067b4},
		dm{re: 0x06c0, si: 0x00000000, ne: 0x67b4000067c3},
		dm{re: -0x0001, si: 0x67c3000067c8, ne: 0x67c8000067d0},
		dm{re: -0x0001, si: 0x67d0000067d5, ne: 0x67d5000067de},
		dm{re: -0x0001, si: 0x67de000067e3, ne: 0x67e3000067eb},
		dm{re: -0x0001, si: 0x67eb000067f0, ne: 0x67f0000067f8},
		dm{re: -0x0001, si: 0x67f8000067fd, ne: 0x67fd00006805},
		dm{re: -0x0001, si: 0x68050000680a, ne: 0x680a00006813},
		dm{re: -0x0001, si: 0x681300006818, ne: 0x681800006821},
		dm{re: -0x0001, si: 0x682100006826, ne: 0x68260000682e},
		dm{re: -0x0001, si: 0x682e00006833, ne: 0x68330000683c},
		dm{re: -0x0001, si: 0x683c00006841, ne: 0x68410000684a},
		dm{re: -0x0001, si: 0x684a0000684f, ne: 0x684f00006858},
		dm{re: -0x0001, si: 0x68580000685d, ne: 0x685d00006865},
		dm{re: -0x0001, si: 0x68650000686a, ne: 0x686a00006872},
		dm{re: -0x0001, si: 0x687200006877, ne: 0x68770000687f},
		dm{re: -0x0001, si: 0x687f00006884, ne: 0x68840000688c},
		dm{re: -0x0001, si: 0x688c00006891, ne: 0x689100006899},
		dm{re: -0x0001, si: 0x68990000689e, ne: 0x689e000068a6},
		dm{re: -0x0001, si: 0x68a6000068ab, ne: 0x68ab000068b3},
		dm{re: -0x0001, si: 0x68b3000068b8, ne: 0x68b8000068c6},
		dm{re: -0x0001, si: 0x68c6000068cb, ne: 0x68cb000068d4},
		dm{re: -0x0001, si: 0x68d4000068d9, ne: 0x68d9000068e2},
		dm{re: -0x0001, si: 0x68e2000068e7, ne: 0x68e7000068f0},
		dm{re: -0x0001, si: 0x68f0000068f5, ne: 0x68f5000068fd},
		dm{re: -0x0001, si: 0x68fd00006902, ne: 0x69020000690e},
		dm{re: -0x0001, si: 0x690e00006913, ne: 0x69130000691c},
		dm{re: -0x0001, si: 0x691c00006921, ne: 0x69210000692a},
		dm{re: -0x0001, si: 0x692a0000692f, ne: 0x692f00006937},
		dm{re: -0x0001, si: 0x69370000693c, ne: 0x693c00006948},
		dm{re: -0x0001, si: 0x69480000694d, ne: 0x694d00006956},
		dm{re: -0x0001, si: 0x69560000695b, ne: 0x695b00006966},
		dm{re: -0x0001, si: 0x69660000696b, ne: 0x696b00006971},
		dm{re: -0x0001, si: 0x697100006976, ne: 0x697600006984},
		dm{re: -0x0001, si: 0x698400006989, ne: 0x698900006991},
		dm{re: -0x0001, si: 0x699100006996, ne: 0x69960000699e},
		dm{re: -0x0001, si: 0x699e000069a3, ne: 0x69a3000069ac},
		dm{re: -0x0001, si: 0x69ac000069b1, ne: 0x69b1000069ba},
		dm{re: -0x0001, si: 0x69ba000069bf, ne: 0x69bf000069c7},
		dm{re: -0x0001, si: 0x69c7000069cc, ne: 0x69cc000069d5},
		dm{re: -0x0001, si: 0x69d5000069da, ne: 0x69da000069e3},
		dm{re: -0x0001, si: 0x69e3000069e8, ne: 0x69e8000069f1},
		dm{re: -0x0001, si: 0x69f1000069f6, ne: 0x69f6000069ff},
		dm{re: -0x0001, si: 0x69ff00006a04, ne: 0x6a0400006a0d},
		dm{re: -0x0001, si: 0x6a0d00006a12, ne: 0x6a1200006a1b},
		dm{re: -0x0001, si: 0x6a1b00006a20, ne: 0x6a2000006a29},
		dm{re: -0x0001, si: 0x6a2900006a2e, ne: 0x6a2e00006a37},
		dm{re: 0x06c1, si: 0x00000000, ne: 0x6a3700006a3e},
		dm{re: 0x06c2, si: 0x00000000, ne: 0x6a3e00006a42},
		dm{re: 0x06c3, si: 0x00000000, ne: 0x6a4200006a47},
		dm{re: 0x06c4, si: 0x00000000, ne: 0x6a4700006a4c},
		dm{re: 0x06c5, si: 0x00000000, ne: 0x6a4c00006a54},
		dm{re: 0x06c6, si: 0x00000000, ne: 0x6a5400006a5c},
		dm{re: 0x06c7, si: 0x00000000, ne: 0x6a5c00006a61},
		dm{re: 0x06c8, si: 0x00000000, ne: 0x6a6100006a66},
		dm{re: 0x06c9, si: 0x00000000, ne: 0x6a6600006a6b},
		dm{re: 0x06ca, si: 0x00000000, ne: 0x6a6b00006a75},
		dm{re: 0x06cb, si: 0x00000000, ne: 0x6a7500006a7f},
		dm{re: 0x06cc, si: 0x00000000, ne: 0x6a7f00006a89},
		dm{re: 0x06cd, si: 0x00000000, ne: 0x6a8900006a93},
		dm{re: 0x06ce, si: 0x00000000, ne: 0x6a9300006a9d},
		dm{re: 0x06cf, si: 0x00000000, ne: 0x6a9d00006aa7},
		dm{re: 0x06d0, si: 0x00000000, ne: 0x6aa700006aad},
		dm{re: 0x06d1, si: 0x00000000, ne: 0x6aad00006ab9},
		dm{re: 0x06d2, si: 0x00000000, ne: 0x6ab900006ac1},
		dm{re: 0x06d3, si: 0x00000000, ne: 0x6ac100006aca},
		dm{re: 0x06d4, si: 0x00000000, ne: 0x6aca00006ad1},
		dm{re: 0x06d5, si: 0x00000000, ne: 0x3fbe00003fc3},
		dm{re: 0x06d6, si: 0x00000000, ne: 0x6ad100006ada},
		dm{re: 0x06d7, si: 0x00000000, ne: 0x6ada00006ae0},
		dm{re: 0x06d8, si: 0x00000000, ne: 0x438f00004394},
		dm{re: 0x06d9, si: 0x00000000, ne: 0x6ae000006aea},
		dm{re: 0x06da, si: 0x00000000, ne: 0x6aea00006af4},
		dm{re: 0x06db, si: 0x00000000, ne: 0x6af400006afe},
		dm{re: 0x06dc, si: 0x00000000, ne: 0x6afe00006b02},
		dm{re: 0x06dd, si: 0x00000000, ne: 0x35d00000363},
		dm{re: 0x06de, si: 0x00000000, ne: 0x6b0200006b09},
		dm{re: 0x06df, si: 0x00000000, ne: 0x6b0900006b12},
		dm{re: 0x06e0, si: 0x00000000, ne: 0x6b1200006b17},
		dm{re: 0x06e1, si: 0x00000000, ne: 0x6b1700006b23},
		dm{re: 0x06e2, si: 0x00000000, ne: 0x6b2300006b2d},
		dm{re: 0x06e3, si: 0x00000000, ne: 0x6b2d00006b35},
		dm{re: 0x06e4, si: 0x00000000, ne: 0x40eb000040f0},
		dm{re: 0x06e5, si: 0x00000000, ne: 0x6b3500006b3c},
		dm{re: 0x06e6, si: 0x00000000, ne: 0x6b3c00006b44},
		dm{re: 0x06e7, si: 0x00000000, ne: 0x6b4400006b49},
		dm{re: 0x06e8, si: 0x00000000, ne: 0x6b4900006b53},
		dm{re: 0x06e9, si: 0x00000000, ne: 0x6b5300006b5d},
		dm{re: 0x06ea, si: 0x00000000, ne: 0x6b5d00006b68},
		dm{re: 0x06eb, si: 0x00000000, ne: 0x6b6800006b74},
		dm{re: 0x06ec, si: 0x00000000, ne: 0x6b7400006b78},
		dm{re: 0x06ed, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x06ee, si: 0x00000000, ne: 0x6b7800006b82},
		dm{re: 0x06ef, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x06f0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x06f2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x06f3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x06f4, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x06f7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x06f8, si: 0x00000000, ne: 0x6b9400006b9f},
		dm{re: 0x06fa, si: 0x00000000, ne: 0x6ba600006bb0},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x06fd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x06fe, si: 0x00000000, ne: 0x6bc100006bcb},
		dm{re: 0x06ff, si: 0x00000000, ne: 0x6bcb00006bd4},
		dm{re: 0x0701, si: 0x00000000, ne: 0x6bda00006be8},
		dm{re: 0x0703, si: 0x00000000, ne: 0x6bef00006bfa},
		dm{re: -0x0001, si: 0x6c0100006c08, ne: 0x6c0800006c16},
		dm{re: 0x0705, si: 0x00000000, ne: 0x6c1600006c20},
		dm{re: 0x0706, si: 0x00000000, ne: 0x6c2000006c28},
		dm{re: 0x0707, si: 0x00000000, ne: 0x6c2800006c34},
		dm{re: -0x0001, si: 0x6c3400006c3b, ne: 0x6c3b00006c42},
		dm{re: -0x0001, si: 0x6c4200006c49, ne: 0x6c4900006c4e},
		dm{re: -0x0001, si: 0x6c4e00006c55, ne: 0x6c5500006c5f},
		dm{re: -0x0001, si: 0x6c5f00006c66, ne: 0x6c6600006c6c},
		dm{re: -0x0001, si: 0x6c6c00006c72, ne: 0x6c7200006c76},
		dm{re: 0x0708, si: 0x00000000, ne: 0x6c7600006c78},
		dm{re: 0x0709, si: 0x00000000, ne: 0x6c7800006c80},
		dm{re: -0x0001, si: 0x6c8000006c87, ne: 0x6c8700006c8f},
		dm{re: -0x0001, si: 0x6c8f00006c96, ne: 0x6c9600006c9e},
		dm{re: -0x0001, si: 0x6c9e00006ca5, ne: 0x6ca500006cb2},
		dm{re: -0x0001, si: 0x6cb200006cb9, ne: 0x6cb900006cc7},
		dm{re: -0x0001, si: 0x6cc700006cce, ne: 0x6cce00006cde},
		dm{re: -0x0001, si: 0x6cde00006ce5, ne: 0x6ce500006cf0},
		dm{re: -0x0001, si: 0x6cf000006cf7, ne: 0x6cf700006cff},
		dm{re: 0x070b, si: 0x00000000, ne: 0x6d0600006d15},
		dm{re: 0x070c, si: 0x00000000, ne: 0x6d1500006d24},
		dm{re: 0x070d, si: 0x00000000, ne: 0x6d2400006d31},
		dm{re: 0x070e, si: 0x00000000, ne: 0x6d3100006d43},
		dm{re: 0x070f, si: 0x00000000, ne: 0x6d4300006d52},
		dm{re: 0x0710, si: 0x00000000, ne: 0x6d5200006d61},
		dm{re: 0x0711, si: 0x00000000, ne: 0x6d6100006d71},
		dm{re: 0x0712, si: 0x00000000, ne: 0x6d7100006d7f},
		dm{re: 0x0713, si: 0x00000000, ne: 0x6d7f00006d8e},
		dm{re: 0x0714, si: 0x00000000, ne: 0x6d8e00006d9d},
		dm{re: 0x0715, si: 0x00000000, ne: 0x6d9d00006dab},
		dm{re: 0x0716, si: 0x00000000, ne: 0x6dab00006dba},
		dm{re: 0x0717, si: 0x00000000, ne: 0x6dba00006dca},
		dm{re: 0x0718, si: 0x00000000, ne: 0x6dca00006ddb},
		dm{re: 0x0719, si: 0x00000000, ne: 0x6ddb00006dec},
		dm{re: 0x071a, si: 0x00000000, ne: 0x6dec00006dff},
		dm{re: 0x071b, si: 0x00000000, ne: 0x6dff00006e0e},
		dm{re: 0x071c, si: 0x00000000, ne: 0x6e0e00006e1c},
		dm{re: 0x071d, si: 0x00000000, ne: 0x6e1c00006e2a},
		dm{re: 0x071e, si: 0x00000000, ne: 0x6e2a00006e39},
		dm{re: 0x071f, si: 0x00000000, ne: 0x6e3900006e4b},
		dm{re: 0x0720, si: 0x00000000, ne: 0x6e4b00006e5a},
		dm{re: 0x0721, si: 0x00000000, ne: 0x6e5a00006e69},
		dm{re: 0x0722, si: 0x00000000, ne: 0x6e6900006e75},
		dm{re: 0x0723, si: 0x00000000, ne: 0x6e7500006e84},
		dm{re: 0x0724, si: 0x00000000, ne: 0x6e8400006e95},
		dm{re: 0x0725, si: 0x00000000, ne: 0x6e9500006ea6},
		dm{re: 0x0726, si: 0x00000000, ne: 0x6ea600006ebc},
		dm{re: 0x0727, si: 0x00000000, ne: 0x6ebc00006ecb},
		dm{re: 0x0728, si: 0x00000000, ne: 0x6ecb00006eda},
		dm{re: 0x0729, si: 0x00000000, ne: 0x6eda00006ee3},
		dm{re: 0x072a, si: 0x00000000, ne: 0x6ee300006ef1},
		dm{re: 0x072b, si: 0x00000000, ne: 0x6ef100006f04},
		dm{re: 0x072c, si: 0x00000000, ne: 0x6f0400006f17},
		dm{re: 0x072d, si: 0x00000000, ne: 0x6f1700006f26},
		dm{re: 0x072e, si: 0x00000000, ne: 0x6f2600006f48},
		dm{re: 0x072f, si: 0x00000000, ne: 0x6f4800006f56},
		dm{re: 0x0730, si: 0x00000000, ne: 0x6f5600006f65},
		dm{re: 0x0731, si: 0x00000000, ne: 0x6f6500006f6a},
		dm{re: 0x0732, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0733, si: 0x00000000, ne: 0x6f6a00006f74},
		dm{re: 0x0734, si: 0x00000000, ne: 0x6f7400006f7f},
		dm{re: 0x0735, si: 0x00000000, ne: 0x6f7f00006f88},
		dm{re: 0x0736, si: 0x00000000, ne: 0x6f8800006f9a},
		dm{re: 0x0737, si: 0x00000000, ne: 0x6f9a00006fa4},
		dm{re: 0x0738, si: 0x00000000, ne: 0x6fa400006fb1},
		dm{re: -0x0001, si: 0x6fb100006fbb, ne: 0x6fbb00006fce},
		dm{re: 0x0739, si: 0x00000000, ne: 0x6fce00006fd7},
		dm{re: 0x073c, si: 0x00000000, ne: 0x6fe300006feb},
		dm{re: 0x073d, si: 0x00000000, ne: 0x6feb00006fef},
		dm{re: -0x0001, si: 0x6ff500006ffd, ne: 0x6ffd00007006},
		dm{re: 0x073e, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x70060000700f, ne: 0x3ecf00003ed1},
		dm{re: 0x073f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0741, si: 0x00000000, ne: 0x70160000701f},
		dm{re: 0x0742, si: 0x00000000, ne: 0x701f00007025},
		dm{re: -0x0001, si: 0x00000000, ne: 0x702b00007031},
		dm{re: 0x0745, si: 0x00000000, ne: 0x703600007047},
		dm{re: -0x0001, si: 0x704700007059, ne: 0x70590000706b},
		dm{re: -0x0001, si: 0x00000000, ne: 0x70710000707a},
		dm{re: -0x0001, si: 0x707d00007084, ne: 0x708400007087},
		dm{re: 0x0748, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0749, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x074b, si: 0x00000000, ne: 0x708f00007099},
		dm{re: 0x074c, si: 0x00000000, ne: 0x7099000070a4},
		dm{re: 0x074d, si: 0x00000000, ne: 0x4a2c00004a31},
		dm{re: -0x0001, si: 0x70a4000070aa, ne: 0x70aa000070b6},
		dm{re: -0x0001, si: 0x70b6000070c7, ne: 0x70c7000070d8},
		dm{re: 0x074e, si: 0x00000000, ne: 0x70d8000070eb},
		dm{re: 0x074f, si: 0x00000000, ne: 0x70eb000070ff},
		dm{re: 0x0750, si: 0x00000000, ne: 0x70ff00007114},
		dm{re: 0x0751, si: 0x00000000, ne: 0x711400007126},
		dm{re: -0x0001, si: 0x712600007136, ne: 0x713600007145},
		dm{re: 0x0752, si: 0x00000000, ne: 0x714500007154},
		dm{re: 0x0753, si: 0x00000000, ne: 0x715400007161},
		dm{re: 0x0754, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x71610000716d, ne: 0x716d00007179},
		dm{re: 0x0755, si: 0x00000000, ne: 0x9eb000009f1},
		dm{re: 0x0756, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0757, si: 0x00000000, ne: 0x9eb000009f1},
		dm{re: 0x0758, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0759, si: 0x00000000, ne: 0x9eb000009f1},
		dm{re: 0x075a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x075b, si: 0x00000000, ne: 0x717900007181},
		dm{re: -0x0001, si: 0x00000000, ne: 0x719300007198},
		dm{re: 0x075e, si: 0x00000000, ne: 0x71a3000071b0},
		dm{re: 0x075f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0760, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x71b7000071be, ne: 0x71be000071c7},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x71db000071e4, ne: 0x71db000071e4},
		dm{re: -0x0001, si: 0x71e4000071e8, ne: 0x71e8000071ed},
		dm{re: -0x0001, si: 0x71ed000071f1, ne: 0x71f1000071fb},
		dm{re: -0x0001, si: 0x71fb000071ff, ne: 0x71ff00007208},
		dm{re: -0x0001, si: 0x72080000720c, ne: 0x720c00007211},
		dm{re: -0x0001, si: 0x721100007215, ne: 0x72150000721e},
		dm{re: 0x0763, si: 0x00000000, ne: 0x721e00007224},
		dm{re: -0x0001, si: 0x722400007228, ne: 0x722400007228},
		dm{re: -0x0001, si: 0x72280000722e, ne: 0x722e00007235},
		dm{re: -0x0001, si: 0x72350000723d, ne: 0x72350000723d},
		dm{re: -0x0001, si: 0x723d00007246, ne: 0x723d00007246},
		dm{re: -0x0001, si: 0x724600007255, ne: 0x724600007255},
		dm{re: -0x0001, si: 0x72550000726b, ne: 0x726b00007272},
		dm{re: -0x0001, si: 0x727200007283, ne: 0x728300007285},
		dm{re: 0x0764, si: 0x00000000, ne: 0x72850000728d},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x469700004699, ne: 0x469700004699},
		dm{re: 0x0767, si: 0x00000000, ne: 0x729a0000729e},
		dm{re: 0x0768, si: 0x00000000, ne: 0x729e000072a3},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x076b, si: 0x00000000, ne: 0x72ad000072b7},
		dm{re: -0x0001, si: 0x72b7000072bc, ne: 0x72b7000072bc},
		dm{re: -0x0001, si: 0x72bc000072c8, ne: 0x72c8000072cf},
		dm{re: 0x076c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x72cf000072d9, ne: 0x72d9000072df},
		dm{re: 0x076d, si: 0x00000000, ne: 0x72df000072eb},
		dm{re: -0x0001, si: 0x72eb000072f1, ne: 0x72f1000072f8},
		dm{re: -0x0001, si: 0x72f800007302, ne: 0x73020000730c},
		dm{re: 0x076e, si: 0x00000000, ne: 0x730c00007315},
		dm{re: -0x0001, si: 0x73150000731b, ne: 0x731b00007322},
		dm{re: 0x076f, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0772, si: 0x00000000, ne: 0x732c0000732f},
		dm{re: 0x0774, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0775, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0776, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x733700007340, ne: 0x734000007350},
		dm{re: 0x0778, si: 0x00000000, ne: 0x735700007363},
		dm{re: 0x0779, si: 0x00000000, ne: 0x73630000736b},
		dm{re: 0x077a, si: 0x00000000, ne: 0x736b0000736f},
		dm{re: 0x077b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x736f00007375, ne: 0x73750000737b},
		dm{re: -0x0001, si: 0x737b00007381, ne: 0x738100007383},
		dm{re: -0x0001, si: 0x73830000738f, ne: 0x738f00007392},
		dm{re: -0x0001, si: 0x739200007398, ne: 0x73980000739f},
		dm{re: 0x077c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x077d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x077f, si: 0x00000000, ne: 0x73a3000073a6},
		dm{re: 0x0780, si: 0x00000000, ne: 0x73a6000073a9},
		dm{re: 0x0781, si: 0x00000000, ne: 0x73a9000073af},
		dm{re: 0x0782, si: 0x00000000, ne: 0x377200003778},
		dm{re: 0x0784, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0785, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0786, si: 0x00000000, ne: 0x73b5000073c0},
		dm{re: 0x0787, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0789, si: 0x00000000, ne: 0x73c6000073cb},
		dm{re: -0x0001, si: 0x73cb000073d2, ne: 0x73d2000073d5},
		dm{re: -0x0001, si: 0x73d5000073db, ne: 0x73db000073dd},
		dm{re: 0x078a, si: 0x00000000, ne: 0x73dd000073e1},
		dm{re: 0x078b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x078c, si: 0x00000000, ne: 0x73e1000073e9},
		dm{re: 0x078d, si: 0x00000000, ne: 0x73e9000073ec},
		dm{re: -0x0001, si: 0x73ec000073f9, ne: 0x73f900007400},
		dm{re: -0x0001, si: 0x74000000740c, ne: 0x740c00007412},
		dm{re: 0x078e, si: 0x00000000, ne: 0x39f5000039fc},
		dm{re: 0x078f, si: 0x00000000, ne: 0x74120000741b},
		dm{re: 0x0790, si: 0x00000000, ne: 0x741b00007422},
		dm{re: 0x0791, si: 0x00000000, ne: 0x742200007428},
		dm{re: 0x0792, si: 0x00000000, ne: 0x742800007430},
		dm{re: 0x0793, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0794, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0795, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0797, si: 0x00000000, ne: 0x743600007438},
		dm{re: 0x0798, si: 0x00000000, ne: 0x74380000743f},
		dm{re: 0x0799, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x74470000744e},
		dm{re: -0x0001, si: 0x74560000745d, ne: 0x745d00007464},
		dm{re: 0x079c, si: 0x00000000, ne: 0x746400007468},
		dm{re: -0x0001, si: 0x00000000, ne: 0x747b0000747d},
		dm{re: -0x0001, si: 0x748700007490, ne: 0x749000007499},
		dm{re: 0x079e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x079f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x07a1, si: 0x00000000, ne: 0x74a1000074a4},
		dm{re: 0x07a2, si: 0x00000000, ne: 0x4e3900004e3b},
		dm{re: 0x07a3, si: 0x00000000, ne: 0x74a4000074a7},
		dm{re: 0x07a4, si: 0x00000000, ne: 0x74a7000074aa},
		dm{re: 0x07a5, si: 0x00000000, ne: 0x74aa000074ac},
		dm{re: 0x07a6, si: 0x00000000, ne: 0x74ac000074ae},
		dm{re: 0x07a7, si: 0x00000000, ne: 0x74ae000074b0},
		dm{re: 0x07a8, si: 0x00000000, ne: 0x74b0000074b7},
		dm{re: 0x07a9, si: 0x00000000, ne: 0x74b7000074b9},
		dm{re: 0x07aa, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x07ab, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x74bf000074c4, ne: 0x74bf000074c4},
		dm{re: -0x0001, si: 0x74c4000074d0, ne: 0x74c4000074d0},
		dm{re: -0x0001, si: 0x74d0000074e2, ne: 0x74e2000074e9},
		dm{re: 0x07ad, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x07ae, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x07af, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x74e9000074f6, ne: 0x74f6000074fe},
		dm{re: -0x0001, si: 0x74fe00007509, ne: 0x74fe00007509},
		dm{re: 0x07b0, si: 0x00000000, ne: 0x750900007511},
		dm{re: 0x07b1, si: 0x00000000, ne: 0x75110000751b},
		dm{re: -0x0001, si: 0x75110000751b, ne: 0x751b0000752c},
		dm{re: -0x0001, si: 0x752c00007534, ne: 0x752c00007534},
		dm{re: 0x07b2, si: 0x00000000, ne: 0x753400007539},
		dm{re: -0x0001, si: 0x753900007541, ne: 0x753900007541},
		dm{re: -0x0001, si: 0x754100007549, ne: 0x754900007550},
		dm{re: -0x0001, si: 0x75500000755a, ne: 0x75500000755a},
		dm{re: 0x07b3, si: 0x00000000, ne: 0x755a00007564},
		dm{re: -0x0001, si: 0x75640000756f, ne: 0x75640000756f},
		dm{re: -0x0001, si: 0x756f00007577, ne: 0x756f00007577},
		dm{re: -0x0001, si: 0x757700007581, ne: 0x757700007581},
		dm{re: 0x07b4, si: 0x00000000, ne: 0x75810000758e},
		dm{re: 0x07b5, si: 0x00000000, ne: 0x758e00007597},
		dm{re: -0x0001, si: 0x75970000759c, ne: 0x759c000075a3},
		dm{re: -0x0001, si: 0x75a3000075ad, ne: 0x755a00007564},
		dm{re: -0x0001, si: 0x75ad000075b8, ne: 0x75ad000075b8},
		dm{re: 0x07b6, si: 0x00000000, ne: 0x75b8000075c0},
		dm{re: -0x0001, si: 0x75c0000075c7, ne: 0x75c0000075c7},
		dm{re: -0x0001, si: 0x75c7000075d3, ne: 0x75c7000075d3},
		dm{re: 0x07b8, si: 0x00000000, ne: 0x75db000075e2},
		dm{re: 0x07b9, si: 0x00000000, ne: 0x75e2000075e4},
		dm{re: 0x07ba, si: 0x00000000, ne: 0x75e4000075e7},
		dm{re: 0x07bb, si: 0x00000000, ne: 0x75e7000075ef},
		dm{re: 0x07bc, si: 0x00000000, ne: 0x75ef000075f1},
		dm{re: 0x07bd, si: 0x00000000, ne: 0x75f1000075f8},
		dm{re: 0x07be, si: 0x00000000, ne: 0x75f8000075ff},
		dm{re: 0x07bf, si: 0x00000000, ne: 0x81400000817},
		dm{re: 0x07c1, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x618000006186, ne: 0x618000006186},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x07c3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x07c4, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x762200007629},
		dm{re: -0x0001, si: 0x762d00007633, ne: 0x76330000763b},
		dm{re: -0x0001, si: 0x763b00007641, ne: 0x764100007649},
		dm{re: 0x07c7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x07c9, si: 0x00000000, ne: 0x76510000765d},
		dm{re: -0x0001, si: 0x76630000766b, ne: 0x766b00007673},
		dm{re: 0x07cb, si: 0x00000000, ne: 0x767300007678},
		dm{re: 0x07cd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x07ce, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x07d0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x07d1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x07d2, si: 0x00000000, ne: 0x768500007688},
		dm{re: -0x0001, si: 0x768800007690, ne: 0x7690000076a2},
		dm{re: -0x0001, si: 0x76a2000076ac, ne: 0x76ac000076ba},
		dm{re: -0x0001, si: 0x76ba000076c2, ne: 0x76c2000076d4},
		dm{re: 0x07d4, si: 0x00000000, ne: 0x76d8000076e3},
		dm{re: 0x07d5, si: 0x00000000, ne: 0x76e3000076ed},
		dm{re: 0x07d7, si: 0x00000000, ne: 0x76f0000076fa},
		dm{re: 0x07d8, si: 0x00000000, ne: 0x76fa00007700},
		dm{re: 0x07d9, si: 0x00000000, ne: 0x439e000043a1},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x07dc, si: 0x00000000, ne: 0x77090000770f},
		dm{re: -0x0001, si: 0x77160000772a, ne: 0x772a0000773a},
		dm{re: -0x0001, si: 0x773a00007744, ne: 0x77440000774b},
		dm{re: 0x07df, si: 0x00000000, ne: 0x774b00007753},
		dm{re: 0x07e0, si: 0x00000000, ne: 0x77530000775c},
		dm{re: -0x0001, si: 0x775c0000776a, ne: 0x776a00007775},
		dm{re: 0x07e1, si: 0x00000000, ne: 0x774b00007753},
		dm{re: 0x07e2, si: 0x00000000, ne: 0x774b00007753},
		dm{re: 0x07e3, si: 0x00000000, ne: 0x77750000777d},
		dm{re: 0x07e4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x07e5, si: 0x00000000, ne: 0x777d00007784},
		dm{re: 0x07e6, si: 0x00000000, ne: 0x778400007788},
		dm{re: 0x07e7, si: 0x00000000, ne: 0x778800007792},
		dm{re: 0x07e8, si: 0x00000000, ne: 0x77920000779f},
		dm{re: -0x0001, si: 0x779f000077b2, ne: 0x77b2000077c2},
		dm{re: -0x0001, si: 0x77c2000077d8, ne: 0x77c2000077d8},
		dm{re: 0x07ea, si: 0x00000000, ne: 0x77db000077e2},
		dm{re: 0x07eb, si: 0x00000000, ne: 0x77e2000077e8},
		dm{re: 0x07ec, si: 0x00000000, ne: 0x77db000077e2},
		dm{re: 0x07ed, si: 0x00000000, ne: 0x77e8000077f0},
		dm{re: 0x07ee, si: 0x00000000, ne: 0x77f0000077f8},
		dm{re: 0x07ef, si: 0x00000000, ne: 0x77f800007800},
		dm{re: 0x07f0, si: 0x00000000, ne: 0x780000007808},
		dm{re: 0x07f1, si: 0x00000000, ne: 0x78080000780e},
		dm{re: 0x07f2, si: 0x00000000, ne: 0x780e00007814},
		dm{re: 0x07f3, si: 0x00000000, ne: 0x78140000781a},
		dm{re: 0x07f4, si: 0x00000000, ne: 0x781a0000781d},
		dm{re: 0x07f5, si: 0x00000000, ne: 0x781d00007820},
		dm{re: 0x07f6, si: 0x00000000, ne: 0x782000007825},
		dm{re: 0x07f7, si: 0x00000000, ne: 0x78250000782f},
		dm{re: 0x07f8, si: 0x00000000, ne: 0x782f00007835},
		dm{re: 0x07f9, si: 0x00000000, ne: 0x78350000783c},
		dm{re: 0x07fa, si: 0x00000000, ne: 0x783c0000783d},
		dm{re: 0x07fb, si: 0x00000000, ne: 0x783d00007842},
		dm{re: 0x07fc, si: 0x00000000, ne: 0x78420000784d},
		dm{re: 0x07fd, si: 0x00000000, ne: 0x784d00007858},
		dm{re: -0x0001, si: 0x785800007873, ne: 0x78730000788e},
		dm{re: 0x07fe, si: 0x00000000, ne: 0x788e00007899},
		dm{re: 0x07ff, si: 0x00000000, ne: 0x78990000789f},
		dm{re: 0x0800, si: 0x00000000, ne: 0x789f000078ae},
		dm{re: 0x0801, si: 0x00000000, ne: 0x78ae000078c0},
		dm{re: 0x0802, si: 0x00000000, ne: 0x78c0000078c6},
		dm{re: 0x0803, si: 0x00000000, ne: 0x78c6000078cc},
		dm{re: 0x0804, si: 0x00000000, ne: 0x78cc000078d2},
		dm{re: 0x0805, si: 0x00000000, ne: 0x78d2000078d8},
		dm{re: 0x0806, si: 0x00000000, ne: 0x78d8000078e3},
		dm{re: 0x0807, si: 0x00000000, ne: 0x78e3000078e9},
		dm{re: 0x0808, si: 0x00000000, ne: 0x78e9000078f2},
		dm{re: 0x0809, si: 0x00000000, ne: 0x78f2000078f8},
		dm{re: 0x080a, si: 0x00000000, ne: 0x78f8000078fe},
		dm{re: -0x0001, si: 0x78fe00007905, ne: 0x790500007915},
		dm{re: -0x0001, si: 0x79150000791f, ne: 0x791f00007928},
		dm{re: -0x0001, si: 0x792800007930, ne: 0x79300000793b},
		dm{re: -0x0001, si: 0x793b00007945, ne: 0x794500007957},
		dm{re: -0x0001, si: 0x79570000795f, ne: 0x5e9000005e99},
		dm{re: -0x0001, si: 0x795f00007967, ne: 0x79670000796a},
		dm{re: -0x0001, si: 0x796a0000796f, ne: 0x5e5300005e57},
		dm{re: 0x080b, si: 0x00000000, ne: 0x2d7c00002d7e},
		dm{re: 0x080c, si: 0x00000000, ne: 0x796f00007978},
		dm{re: 0x080d, si: 0x00000000, ne: 0x797800007983},
		dm{re: 0x080e, si: 0x00000000, ne: 0x79830000798d},
		dm{re: 0x080f, si: 0x00000000, ne: 0x798d00007997},
		dm{re: 0x0810, si: 0x00000000, ne: 0x7997000079a1},
		dm{re: 0x0811, si: 0x00000000, ne: 0x79a1000079ac},
		dm{re: 0x0812, si: 0x00000000, ne: 0x79ac000079b6},
		dm{re: 0x0813, si: 0x00000000, ne: 0x79b6000079c0},
		dm{re: 0x0814, si: 0x00000000, ne: 0x79c0000079ca},
		dm{re: 0x0815, si: 0x00000000, ne: 0x79ca000079d4},
		dm{re: 0x0816, si: 0x00000000, ne: 0x79d4000079de},
		dm{re: 0x0817, si: 0x00000000, ne: 0x79de000079e8},
		dm{re: 0x0818, si: 0x00000000, ne: 0x79e8000079f0},
		dm{re: 0x0819, si: 0x00000000, ne: 0x79f0000079f4},
		dm{re: 0x081a, si: 0x00000000, ne: 0x79f400007a05},
		dm{re: 0x081b, si: 0x00000000, ne: 0x7a0500007a12},
		dm{re: 0x081c, si: 0x00000000, ne: 0x7a1200007a18},
		dm{re: 0x081d, si: 0x00000000, ne: 0x7a1800007a28},
		dm{re: 0x081e, si: 0x00000000, ne: 0x7a2800007a35},
		dm{re: 0x081f, si: 0x00000000, ne: 0x7a3500007a49},
		dm{re: -0x0001, si: 0x7a4900007a51, ne: 0x7a5100007a54},
		dm{re: 0x0820, si: 0x00000000, ne: 0x7a5400007a59},
		dm{re: 0x0821, si: 0x00000000, ne: 0x7a5900007a5e},
		dm{re: 0x0822, si: 0x00000000, ne: 0x7a5e00007a66},
		dm{re: 0x0823, si: 0x00000000, ne: 0x7a6600007a6d},
		dm{re: 0x0824, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0825, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0826, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0827, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0828, si: 0x00000000, ne: 0x7a6d00007a78},
		dm{re: 0x0829, si: 0x00000000, ne: 0x7a6d00007a78},
		dm{re: 0x082a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x082b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x082c, si: 0x00000000, ne: 0x4a2c00004a31},
		dm{re: 0x082d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x082e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x082f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0830, si: 0x00000000, ne: 0x2d7c00002d7e},
		dm{re: 0x0832, si: 0x00000000, ne: 0x7a7e00007a82},
		dm{re: 0x0833, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x7a8700007a92, ne: 0x7a9200007aa3},
		dm{re: -0x0001, si: 0x7aa300007aaa, ne: 0x7aaa00007ab7},
		dm{re: -0x0001, si: 0x7ab700007ac1, ne: 0x7ac100007ac3},
		dm{re: -0x0001, si: 0x7ac300007aca, ne: 0x7ac300007aca},
		dm{re: -0x0001, si: 0x7aca00007ad4, ne: 0x4d5000004d52},
		dm{re: -0x0001, si: 0x7ad400007ade, ne: 0x4d8100004d83},
		dm{re: -0x0001, si: 0x7ade00007ae8, ne: 0x7ae800007aeb},
		dm{re: -0x0001, si: 0x7aeb00007af5, ne: 0x7af500007af9},
		dm{re: -0x0001, si: 0x7af900007b03, ne: 0x7b0300007b06},
		dm{re: -0x0001, si: 0x7b0600007b10, ne: 0x7b1000007b13},
		dm{re: 0x0835, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0836, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0837, si: 0x00000000, ne: 0x73a3000073a6},
		dm{re: 0x0838, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0839, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x7b1300007b22, ne: 0x5b7300005b80},
		dm{re: -0x0001, si: 0x7b2200007b2a, ne: 0x7b2a00007b34},
		dm{re: 0x083a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x083b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x083c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x083d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x083e, si: 0x00000000, ne: 0x7b3a00007b42},
		dm{re: 0x0840, si: 0x00000000, ne: 0x7b4800007b54},
		dm{re: 0x0842, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0843, si: 0x00000000, ne: 0x7b5d00007b68},
		dm{re: -0x0001, si: 0x7b6800007b6f, ne: 0x7b6800007b6f},
		dm{re: -0x0001, si: 0x7b6f00007b75, ne: 0x7b6f00007b75},
		dm{re: -0x0001, si: 0x7b7500007b7d, ne: 0x7b7500007b7d},
		dm{re: -0x0001, si: 0x7b7d00007b85, ne: 0x7b7d00007b85},
		dm{re: -0x0001, si: 0x7b8500007b8a, ne: 0x7b8a00007b93},
		dm{re: -0x0001, si: 0x00000000, ne: 0x7b9d00007ba6},
		dm{re: 0x0845, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0846, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x084a, si: 0x00000000, ne: 0x7bb800007bc0},
		dm{re: 0x084b, si: 0x00000000, ne: 0x7bc000007bc8},
		dm{re: -0x0001, si: 0x7bcf00007bd8, ne: 0x7bd800007bdd},
		dm{re: -0x0001, si: 0x7bdd00007be6, ne: 0x7be600007be7},
		dm{re: -0x0001, si: 0x00000000, ne: 0x7bef00007bf6},
		dm{re: 0x084f, si: 0x00000000, ne: 0x7bfb00007c04},
		dm{re: 0x0850, si: 0x00000000, ne: 0x7c0400007c0b},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0853, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0854, si: 0x00000000, ne: 0x7c1b00007c29},
		dm{re: 0x0855, si: 0x00000000, ne: 0x7c2900007c3c},
		dm{re: 0x0856, si: 0x00000000, ne: 0x7c3c00007c4c},
		dm{re: 0x0857, si: 0x00000000, ne: 0x7c4c00007c5a},
		dm{re: 0x0858, si: 0x00000000, ne: 0x7c5a00007c68},
		dm{re: 0x0859, si: 0x00000000, ne: 0x7c6800007c72},
		dm{re: 0x085a, si: 0x00000000, ne: 0x7c7200007c77},
		dm{re: 0x085b, si: 0x00000000, ne: 0x7c7700007c7e},
		dm{re: 0x085c, si: 0x00000000, ne: 0x7c7e00007c89},
		dm{re: 0x085d, si: 0x00000000, ne: 0x7c8900007c90},
		dm{re: 0x085e, si: 0x00000000, ne: 0x7c9000007c98},
		dm{re: 0x085f, si: 0x00000000, ne: 0x7c9800007c9c},
		dm{re: 0x0860, si: 0x00000000, ne: 0x7c9c00007ca6},
		dm{re: 0x0861, si: 0x00000000, ne: 0x7ca600007cb0},
		dm{re: 0x0862, si: 0x00000000, ne: 0x7cb000007cb6},
		dm{re: 0x0863, si: 0x00000000, ne: 0x7cb600007cbf},
		dm{re: 0x0864, si: 0x00000000, ne: 0x7cbf00007cca},
		dm{re: 0x0865, si: 0x00000000, ne: 0x7cca00007cd1},
		dm{re: 0x0866, si: 0x00000000, ne: 0x7cd100007cdf},
		dm{re: 0x0867, si: 0x00000000, ne: 0x7cdf00007ce9},
		dm{re: 0x0868, si: 0x00000000, ne: 0x7ce900007cf0},
		dm{re: 0x0869, si: 0x00000000, ne: 0x7cf000007cfa},
		dm{re: 0x086a, si: 0x00000000, ne: 0x7cfa00007d04},
		dm{re: 0x086b, si: 0x00000000, ne: 0x7d0400007d12},
		dm{re: 0x086c, si: 0x00000000, ne: 0x7d1200007d19},
		dm{re: 0x086d, si: 0x00000000, ne: 0x7d1900007d25},
		dm{re: 0x086e, si: 0x00000000, ne: 0x7d2500007d2a},
		dm{re: 0x086f, si: 0x00000000, ne: 0x7d2a00007d31},
		dm{re: 0x0870, si: 0x00000000, ne: 0x7d3100007d37},
		dm{re: 0x0871, si: 0x00000000, ne: 0x7d3700007d3e},
		dm{re: 0x0872, si: 0x00000000, ne: 0x7d3e00007d46},
		dm{re: 0x0873, si: 0x00000000, ne: 0x7d4600007d50},
		dm{re: 0x0874, si: 0x00000000, ne: 0x6c4900006c4e},
		dm{re: 0x0875, si: 0x00000000, ne: 0x7d5000007d58},
		dm{re: 0x0877, si: 0x00000000, ne: 0x7d6100007d66},
		dm{re: 0x0878, si: 0x00000000, ne: 0x6b3500006b3c},
		dm{re: 0x0879, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x7d6d00007d74, ne: 0x7d7400007d7a},
		dm{re: 0x087b, si: 0x00000000, ne: 0x7d7a00007d7d},
		dm{re: 0x087c, si: 0x00000000, ne: 0x7d7d00007d87},
		dm{re: -0x0001, si: 0x7d8700007d8c, ne: 0x7d8c00007d92},
		dm{re: -0x0001, si: 0x7d9200007d9a, ne: 0x11a6000011a8},
		dm{re: -0x0001, si: 0x7d9a00007da2, ne: 0x7da200007dab},
		dm{re: -0x0001, si: 0x7dab00007db3, ne: 0x7db300007db5},
		dm{re: -0x0001, si: 0x7db500007dbd, ne: 0x7dbd00007dc0},
		dm{re: -0x0001, si: 0x7dc000007dc7, ne: 0x11bd000011bf},
		dm{re: -0x0001, si: 0x7dc700007dd4, ne: 0x7dd400007de3},
		dm{re: -0x0001, si: 0x7de300007df1, ne: 0x7df100007dff},
		dm{re: 0x087d, si: 0x00000000, ne: 0x7dff00007e04},
		dm{re: -0x0001, si: 0x7e0400007e0c, ne: 0x7e0c00007e12},
		dm{re: -0x0001, si: 0x7e1200007e17, ne: 0x7e1700007e19},
		dm{re: -0x0001, si: 0x7e1900007e21, ne: 0x7e2100007e24},
		dm{re: -0x0001, si: 0x7e2400007e2a, ne: 0x7e2a00007e3e},
		dm{re: -0x0001, si: 0x7e3e00007e43, ne: 0x7e4300007e57},
		dm{re: -0x0001, si: 0x7e5700007e5b, ne: 0x7e5b00007e70},
		dm{re: 0x087e, si: 0x00000000, ne: 0x7e7000007e73},
		dm{re: 0x087f, si: 0x00000000, ne: 0x7e7300007e76},
		dm{re: 0x0880, si: 0x00000000, ne: 0x7e7600007e79},
		dm{re: 0x0881, si: 0x00000000, ne: 0x7e7900007e84},
		dm{re: 0x0882, si: 0x00000000, ne: 0x7e8400007e93},
		dm{re: 0x0883, si: 0x00000000, ne: 0x7e9300007e9e},
		dm{re: 0x0884, si: 0x00000000, ne: 0x431400004323},
		dm{re: 0x0885, si: 0x00000000, ne: 0x7e9e00007ea9},
		dm{re: 0x0886, si: 0x00000000, ne: 0x7ea900007eb0},
		dm{re: 0x0887, si: 0x00000000, ne: 0x7eb000007eb4},
		dm{re: 0x0888, si: 0x00000000, ne: 0x7eb400007eb7},
		dm{re: 0x0889, si: 0x00000000, ne: 0x7eb700007eba},
		dm{re: 0x088a, si: 0x00000000, ne: 0x7eba00007ec2},
		dm{re: 0x088b, si: 0x00000000, ne: 0x7ec200007ec5},
		dm{re: 0x088c, si: 0x00000000, ne: 0x7ec500007ec8},
		dm{re: -0x0001, si: 0x7ec800007ed0, ne: 0x7ed000007ed3},
		dm{re: 0x088d, si: 0x00000000, ne: 0x7ed300007ed6},
		dm{re: 0x088e, si: 0x00000000, ne: 0x7ed600007ee7},
		dm{re: 0x088f, si: 0x00000000, ne: 0x7ee700007eea},
		dm{re: 0x0890, si: 0x00000000, ne: 0x7eea00007ef2},
		dm{re: 0x0891, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0892, si: 0x00000000, ne: 0x7ef200007ef4},
		dm{re: 0x0893, si: 0x00000000, ne: 0x7ef400007ef8},
		dm{re: 0x0894, si: 0x00000000, ne: 0x7ef800007f01},
		dm{re: 0x0895, si: 0x00000000, ne: 0x7f0100007f12},
		dm{re: 0x0896, si: 0x00000000, ne: 0x7f1200007f21},
		dm{re: 0x0897, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0898, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0899, si: 0x00000000, ne: 0x7f2100007f2a},
		dm{re: 0x089a, si: 0x00000000, ne: 0x7f2a00007f33},
		dm{re: 0x089b, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x089c, si: 0x00000000, ne: 0x39ee000039f5},
		dm{re: 0x089d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x089e, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x08a2, si: 0x00000000, ne: 0x3cd700003cdd},
		dm{re: 0x08a3, si: 0x00000000, ne: 0x7f4800007f4c},
		dm{re: 0x08a4, si: 0x00000000, ne: 0x7f4800007f4c},
		dm{re: 0x08a6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x08a7, si: 0x00000000, ne: 0x7f5400007f5b},
		dm{re: 0x08a8, si: 0x00000000, ne: 0x7f5b00007f6c},
		dm{re: 0x08a9, si: 0x00000000, ne: 0x7f6c00007f71},
		dm{re: 0x08ab, si: 0x00000000, ne: 0x7f7700007f7f},
		dm{re: 0x08ac, si: 0x00000000, ne: 0x7f7f00007f83},
		dm{re: 0x08ad, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x08af, si: 0x00000000, ne: 0x7f8c00007f96},
		dm{re: 0x08b0, si: 0x00000000, ne: 0x7f9600007fa0},
		dm{re: 0x08b2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x08b3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x08b4, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x08b7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x08b8, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x7fbc00007fc3, ne: 0x73270000732c},
		dm{re: -0x0001, si: 0x7fc300007fc7, ne: 0x7fc700007fce},
		dm{re: -0x0001, si: 0x7fce00007fd6, ne: 0x7fd600007fdd},
		dm{re: 0x08bb, si: 0x00000000, ne: 0x7fe300007ff1},
		dm{re: 0x08bc, si: 0x00000000, ne: 0x7ff100007ff6},
		dm{re: 0x08bd, si: 0x00000000, ne: 0x7ff600008003},
		dm{re: 0x08be, si: 0x00000000, ne: 0x80030000800c},
		dm{re: 0x08bf, si: 0x00000000, ne: 0x51ec000051f4},
		dm{re: -0x0001, si: 0x800c00008017, ne: 0x800c00008017},
		dm{re: -0x0001, si: 0x801700008020, ne: 0x801700008020},
		dm{re: -0x0001, si: 0x80200000802a, ne: 0x80200000802a},
		dm{re: 0x08c0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x08c2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x08c3, si: 0x00000000, ne: 0x802d0000803d},
		dm{re: 0x08c4, si: 0x00000000, ne: 0x803d00008042},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x08c7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x08c9, si: 0x00000000, ne: 0x805300008062},
		dm{re: 0x08cb, si: 0x00000000, ne: 0x80680000806a},
		dm{re: 0x08cc, si: 0x00000000, ne: 0x806a00008073},
		dm{re: 0x08cd, si: 0x00000000, ne: 0x80730000807c},
		dm{re: 0x08ce, si: 0x00000000, ne: 0x807c00008087},
		dm{re: 0x08cf, si: 0x00000000, ne: 0x808700008092},
		dm{re: 0x08d0, si: 0x00000000, ne: 0x80920000809c},
		dm{re: 0x08d1, si: 0x00000000, ne: 0x809c000080a7},
		dm{re: 0x08d2, si: 0x00000000, ne: 0x80a7000080b2},
		dm{re: 0x08d3, si: 0x00000000, ne: 0x80b2000080be},
		dm{re: 0x08d4, si: 0x00000000, ne: 0x80be000080c9},
		dm{re: 0x08d5, si: 0x00000000, ne: 0x80c9000080d2},
		dm{re: 0x08d6, si: 0x00000000, ne: 0x80d2000080db},
		dm{re: 0x08d7, si: 0x00000000, ne: 0x80db000080e6},
		dm{re: 0x08d8, si: 0x00000000, ne: 0x80e6000080ef},
		dm{re: 0x08d9, si: 0x00000000, ne: 0x80ef000080f9},
		dm{re: 0x08da, si: 0x00000000, ne: 0x80f900008104},
		dm{re: 0x08db, si: 0x00000000, ne: 0x81040000810f},
		dm{re: 0x08dc, si: 0x00000000, ne: 0x810f0000811a},
		dm{re: 0x08dd, si: 0x00000000, ne: 0x811a00008125},
		dm{re: 0x08de, si: 0x00000000, ne: 0x81250000812d},
		dm{re: 0x08df, si: 0x00000000, ne: 0x812d0000813a},
		dm{re: 0x08e0, si: 0x00000000, ne: 0x813a00008143},
		dm{re: 0x08e1, si: 0x00000000, ne: 0x81430000814c},
		dm{re: 0x08e2, si: 0x00000000, ne: 0x814c00008154},
		dm{re: 0x08e3, si: 0x00000000, ne: 0x81540000815b},
		dm{re: 0x08e4, si: 0x00000000, ne: 0x815b00008163},
		dm{re: 0x08e5, si: 0x00000000, ne: 0x81630000816a},
		dm{re: 0x08e6, si: 0x00000000, ne: 0x816a00008172},
		dm{re: 0x08e7, si: 0x00000000, ne: 0x81720000817e},
		dm{re: 0x08e8, si: 0x00000000, ne: 0x817e00008185},
		dm{re: 0x08e9, si: 0x00000000, ne: 0x818500008191},
		dm{re: 0x08ea, si: 0x00000000, ne: 0x819100008199},
		dm{re: 0x08eb, si: 0x00000000, ne: 0x8199000081a1},
		dm{re: 0x08ec, si: 0x00000000, ne: 0x81a1000081ad},
		dm{re: 0x08ed, si: 0x00000000, ne: 0x81ad000081b7},
		dm{re: 0x08ee, si: 0x00000000, ne: 0x81b7000081c2},
		dm{re: 0x08ef, si: 0x00000000, ne: 0x81c2000081d2},
		dm{re: 0x08f0, si: 0x00000000, ne: 0x81d2000081db},
		dm{re: 0x08f1, si: 0x00000000, ne: 0x81db000081e3},
		dm{re: 0x08f2, si: 0x00000000, ne: 0x81e3000081e6},
		dm{re: 0x08f3, si: 0x00000000, ne: 0x81e6000081ec},
		dm{re: 0x08f4, si: 0x00000000, ne: 0x81ec000081f7},
		dm{re: 0x08f5, si: 0x00000000, ne: 0x81f7000081fb},
		dm{re: 0x08f6, si: 0x00000000, ne: 0x81fb00008205},
		dm{re: 0x08f7, si: 0x00000000, ne: 0x820500008208},
		dm{re: 0x08f8, si: 0x00000000, ne: 0x820800008212},
		dm{re: 0x08f9, si: 0x00000000, ne: 0x821200008215},
		dm{re: 0x08fa, si: 0x00000000, ne: 0x821500008217},
		dm{re: 0x08fb, si: 0x00000000, ne: 0x82170000821e},
		dm{re: -0x0001, si: 0x821e00008226, ne: 0x822600008229},
		dm{re: -0x0001, si: 0x822900008231, ne: 0x82310000823b},
		dm{re: 0x08fc, si: 0x00000000, ne: 0x823b00008240},
		dm{re: 0x08fd, si: 0x00000000, ne: 0x824000008248},
		dm{re: 0x08fe, si: 0x00000000, ne: 0x824800008255},
		dm{re: 0x08ff, si: 0x00000000, ne: 0x82550000825e},
		dm{re: 0x0900, si: 0x00000000, ne: 0x825e00008265},
		dm{re: 0x0901, si: 0x00000000, ne: 0x82650000826d},
		dm{re: 0x0902, si: 0x00000000, ne: 0x826d0000827a},
		dm{re: 0x0903, si: 0x00000000, ne: 0x827a00008283},
		dm{re: 0x0904, si: 0x00000000, ne: 0x82830000828f},
		dm{re: 0x0905, si: 0x00000000, ne: 0x828f00008298},
		dm{re: 0x0906, si: 0x00000000, ne: 0x8298000082a0},
		dm{re: 0x0907, si: 0x00000000, ne: 0x82a0000082ac},
		dm{re: 0x0908, si: 0x00000000, ne: 0x82ac000082bd},
		dm{re: 0x0909, si: 0x00000000, ne: 0x82bd000082c6},
		dm{re: 0x090a, si: 0x00000000, ne: 0x82c6000082cf},
		dm{re: 0x090b, si: 0x00000000, ne: 0x82cf000082dc},
		dm{re: 0x090c, si: 0x00000000, ne: 0x82dc000082e4},
		dm{re: 0x090d, si: 0x00000000, ne: 0x82e4000082f1},
		dm{re: 0x090e, si: 0x00000000, ne: 0x82f1000082f9},
		dm{re: 0x090f, si: 0x00000000, ne: 0x82f900008301},
		dm{re: 0x0910, si: 0x00000000, ne: 0x830100008309},
		dm{re: 0x0911, si: 0x00000000, ne: 0x830900008315},
		dm{re: 0x0912, si: 0x00000000, ne: 0x831500008321},
		dm{re: 0x0913, si: 0x00000000, ne: 0x832100008329},
		dm{re: 0x0914, si: 0x00000000, ne: 0x832900008335},
		dm{re: 0x0915, si: 0x00000000, ne: 0x83350000833d},
		dm{re: 0x0916, si: 0x00000000, ne: 0x833d00008345},
		dm{re: 0x0917, si: 0x00000000, ne: 0x834500008356},
		dm{re: 0x0918, si: 0x00000000, ne: 0x83560000835e},
		dm{re: 0x0919, si: 0x00000000, ne: 0x835e00008369},
		dm{re: 0x091a, si: 0x00000000, ne: 0x836900008374},
		dm{re: 0x091b, si: 0x00000000, ne: 0x837400008381},
		dm{re: 0x091c, si: 0x00000000, ne: 0x838100008390},
		dm{re: -0x0001, si: 0x839000008398, ne: 0x8398000083a0},
		dm{re: -0x0001, si: 0x83a0000083a8, ne: 0x83a8000083b6},
		dm{re: 0x091d, si: 0x00000000, ne: 0x83b6000083bd},
		dm{re: 0x091e, si: 0x00000000, ne: 0x83bd000083c9},
		dm{re: 0x091f, si: 0x00000000, ne: 0x83c9000083d5},
		dm{re: 0x0920, si: 0x00000000, ne: 0x83d5000083dd},
		dm{re: 0x0921, si: 0x00000000, ne: 0x83dd000083e5},
		dm{re: 0x0922, si: 0x00000000, ne: 0x83e5000083f1},
		dm{re: 0x0923, si: 0x00000000, ne: 0x83f1000083f9},
		dm{re: 0x0924, si: 0x00000000, ne: 0x83f900008400},
		dm{re: 0x0925, si: 0x00000000, ne: 0x84000000840c},
		dm{re: 0x0926, si: 0x00000000, ne: 0x840c00008414},
		dm{re: 0x0927, si: 0x00000000, ne: 0x841400008420},
		dm{re: 0x0928, si: 0x00000000, ne: 0x842000008428},
		dm{re: 0x0929, si: 0x00000000, ne: 0x842800008430},
		dm{re: 0x092a, si: 0x00000000, ne: 0x843000008438},
		dm{re: 0x092b, si: 0x00000000, ne: 0x843800008440},
		dm{re: 0x092c, si: 0x00000000, ne: 0x844000008447},
		dm{re: 0x092d, si: 0x00000000, ne: 0x844700008453},
		dm{re: 0x092e, si: 0x00000000, ne: 0x84530000845e},
		dm{re: 0x092f, si: 0x00000000, ne: 0x845e0000846b},
		dm{re: 0x0930, si: 0x00000000, ne: 0x846b00008473},
		dm{re: 0x0931, si: 0x00000000, ne: 0x84730000847f},
		dm{re: 0x0932, si: 0x00000000, ne: 0x847f00008487},
		dm{re: 0x0933, si: 0x00000000, ne: 0x84870000848f},
		dm{re: 0x0934, si: 0x00000000, ne: 0x848f00008497},
		dm{re: 0x0935, si: 0x00000000, ne: 0x8497000084a3},
		dm{re: 0x0936, si: 0x00000000, ne: 0x84a3000084aa},
		dm{re: 0x0937, si: 0x00000000, ne: 0x84aa000084b2},
		dm{re: 0x0938, si: 0x00000000, ne: 0x84b2000084ba},
		dm{re: 0x0939, si: 0x00000000, ne: 0x84ba000084c6},
		dm{re: 0x093a, si: 0x00000000, ne: 0x84c6000084ce},
		dm{re: 0x093b, si: 0x00000000, ne: 0x84ce000084d6},
		dm{re: 0x093c, si: 0x00000000, ne: 0x84d6000084de},
		dm{re: 0x093d, si: 0x00000000, ne: 0x84de000084ea},
		dm{re: 0x093e, si: 0x00000000, ne: 0x84ea000084f7},
		dm{re: 0x093f, si: 0x00000000, ne: 0x84f700008502},
		dm{re: 0x0940, si: 0x00000000, ne: 0x85020000850f},
		dm{re: -0x0001, si: 0x850f00008517, ne: 0x851700008524},
		dm{re: -0x0001, si: 0x85240000852c, ne: 0x852c0000853d},
		dm{re: -0x0001, si: 0x853d00008545, ne: 0x854500008557},
		dm{re: -0x0001, si: 0x855700008560, ne: 0x85600000856d},
		dm{re: 0x0941, si: 0x00000000, ne: 0x856d0000857a},
		dm{re: 0x0942, si: 0x00000000, ne: 0x857a00008586},
		dm{re: 0x0943, si: 0x00000000, ne: 0x858600008594},
		dm{re: 0x0944, si: 0x00000000, ne: 0x8594000085a1},
		dm{re: 0x0945, si: 0x00000000, ne: 0x85a1000085ad},
		dm{re: 0x0946, si: 0x00000000, ne: 0x85ad000085b9},
		dm{re: 0x0947, si: 0x00000000, ne: 0x85b9000085c7},
		dm{re: 0x0948, si: 0x00000000, ne: 0x85c7000085d1},
		dm{re: 0x0949, si: 0x00000000, ne: 0x85d1000085dd},
		dm{re: 0x094a, si: 0x00000000, ne: 0x85dd000085ef},
		dm{re: 0x094b, si: 0x00000000, ne: 0x85ef000085fc},
		dm{re: 0x094c, si: 0x00000000, ne: 0x85fc00008608},
		dm{re: 0x094d, si: 0x00000000, ne: 0x860800008615},
		dm{re: 0x094e, si: 0x00000000, ne: 0x861500008622},
		dm{re: 0x094f, si: 0x00000000, ne: 0x862200008632},
		dm{re: 0x0950, si: 0x00000000, ne: 0x86320000863f},
		dm{re: -0x0001, si: 0x863f00008647, ne: 0x86470000865c},
		dm{re: 0x0951, si: 0x00000000, ne: 0x865c0000866d},
		dm{re: 0x0952, si: 0x00000000, ne: 0x866d00008679},
		dm{re: 0x0953, si: 0x00000000, ne: 0x867900008685},
		dm{re: 0x0954, si: 0x00000000, ne: 0x868500008691},
		dm{re: 0x0955, si: 0x00000000, ne: 0x86910000869e},
		dm{re: 0x0956, si: 0x00000000, ne: 0x869e000086af},
		dm{re: 0x0957, si: 0x00000000, ne: 0x86af000086bc},
		dm{re: 0x0958, si: 0x00000000, ne: 0x86bc000086c9},
		dm{re: 0x0959, si: 0x00000000, ne: 0x86c9000086d2},
		dm{re: 0x095a, si: 0x00000000, ne: 0x86d2000086db},
		dm{re: 0x095b, si: 0x00000000, ne: 0x86db000086e4},
		dm{re: 0x095c, si: 0x00000000, ne: 0x86e4000086ec},
		dm{re: 0x095d, si: 0x00000000, ne: 0x86ec000086f4},
		dm{re: 0x095e, si: 0x00000000, ne: 0x86f400008701},
		dm{re: 0x095f, si: 0x00000000, ne: 0x87010000870e},
		dm{re: 0x0960, si: 0x00000000, ne: 0x870e0000871b},
		dm{re: 0x0961, si: 0x00000000, ne: 0x871b00008728},
		dm{re: 0x0962, si: 0x00000000, ne: 0x872800008739},
		dm{re: 0x0963, si: 0x00000000, ne: 0x873900008741},
		dm{re: 0x0964, si: 0x00000000, ne: 0x874100008754},
		dm{re: 0x0965, si: 0x00000000, ne: 0x87540000875d},
		dm{re: 0x0966, si: 0x00000000, ne: 0x875d00008766},
		dm{re: 0x0967, si: 0x00000000, ne: 0x876600008773},
		dm{re: -0x0001, si: 0x87730000877b, ne: 0x877b00008788},
		dm{re: -0x0001, si: 0x878800008790, ne: 0x879000008799},
		dm{re: 0x0968, si: 0x00000000, ne: 0x8799000087a7},
		dm{re: 0x0969, si: 0x00000000, ne: 0x87a7000087b5},
		dm{re: 0x096a, si: 0x00000000, ne: 0x87b5000087bd},
		dm{re: 0x096b, si: 0x00000000, ne: 0x87bd000087c5},
		dm{re: 0x096c, si: 0x00000000, ne: 0x87c5000087cd},
		dm{re: 0x096d, si: 0x00000000, ne: 0x87cd000087d6},
		dm{re: 0x096e, si: 0x00000000, ne: 0x87d6000087df},
		dm{re: 0x096f, si: 0x00000000, ne: 0x87df000087e8},
		dm{re: -0x0001, si: 0x87e8000087ef, ne: 0x87ef000087fb},
		dm{re: 0x0970, si: 0x00000000, ne: 0x87fb00008802},
		dm{re: -0x0001, si: 0x88020000880a, ne: 0x880a00008810},
		dm{re: 0x0971, si: 0x00000000, ne: 0x881000008817},
		dm{re: -0x0001, si: 0x88170000881f, ne: 0x881f00008829},
		dm{re: 0x0972, si: 0x00000000, ne: 0x882900008830},
		dm{re: 0x0973, si: 0x00000000, ne: 0x88300000883c},
		dm{re: 0x0974, si: 0x00000000, ne: 0x883c00008847},
		dm{re: 0x0975, si: 0x00000000, ne: 0x88470000884e},
		dm{re: 0x0976, si: 0x00000000, ne: 0x884e0000885a},
		dm{re: 0x0977, si: 0x00000000, ne: 0x885a00008865},
		dm{re: 0x0978, si: 0x00000000, ne: 0x88650000886f},
		dm{re: 0x0979, si: 0x00000000, ne: 0x886f00008878},
		dm{re: 0x097a, si: 0x00000000, ne: 0x88780000887f},
		dm{re: 0x097b, si: 0x00000000, ne: 0x887f00008889},
		dm{re: 0x097c, si: 0x00000000, ne: 0x8889000088a2},
		dm{re: 0x097d, si: 0x00000000, ne: 0x88a2000088ae},
		dm{re: 0x097e, si: 0x00000000, ne: 0x88ae000088b9},
		dm{re: 0x097f, si: 0x00000000, ne: 0x88b9000088c7},
		dm{re: 0x0980, si: 0x00000000, ne: 0x88c7000088d6},
		dm{re: 0x0981, si: 0x00000000, ne: 0x88d6000088e1},
		dm{re: 0x0982, si: 0x00000000, ne: 0x88e1000088ed},
		dm{re: 0x0983, si: 0x00000000, ne: 0x88ed000088f4},
		dm{re: 0x0984, si: 0x00000000, ne: 0x88f4000088fc},
		dm{re: 0x0985, si: 0x00000000, ne: 0x88fc00008902},
		dm{re: 0x0986, si: 0x00000000, ne: 0x890200008908},
		dm{re: 0x0987, si: 0x00000000, ne: 0x890800008913},
		dm{re: 0x0988, si: 0x00000000, ne: 0x89130000891d},
		dm{re: 0x0989, si: 0x00000000, ne: 0x891d00008924},
		dm{re: 0x098a, si: 0x00000000, ne: 0x89240000893a},
		dm{re: 0x098b, si: 0x00000000, ne: 0x893a00008940},
		dm{re: 0x098c, si: 0x00000000, ne: 0x894000008947},
		dm{re: 0x098d, si: 0x00000000, ne: 0x43f3000043f7},
		dm{re: 0x098e, si: 0x00000000, ne: 0x894700008950},
		dm{re: 0x098f, si: 0x00000000, ne: 0x895000008959},
		dm{re: 0x0990, si: 0x00000000, ne: 0x89590000895f},
		dm{re: 0x0991, si: 0x00000000, ne: 0x895f0000896a},
		dm{re: 0x0992, si: 0x00000000, ne: 0x896a00008975},
		dm{re: 0x0993, si: 0x00000000, ne: 0x897500008989},
		dm{re: 0x0994, si: 0x00000000, ne: 0x898900008990},
		dm{re: 0x0995, si: 0x00000000, ne: 0x899000008997},
		dm{re: 0x0996, si: 0x00000000, ne: 0x89970000899d},
		dm{re: 0x0997, si: 0x00000000, ne: 0x899d000089a4},
		dm{re: 0x0998, si: 0x00000000, ne: 0x89a4000089ab},
		dm{re: 0x0999, si: 0x00000000, ne: 0x89ab000089b1},
		dm{re: 0x099a, si: 0x00000000, ne: 0x89b1000089b8},
		dm{re: 0x099b, si: 0x00000000, ne: 0x89b8000089be},
		dm{re: 0x099c, si: 0x00000000, ne: 0x89be000089c8},
		dm{re: 0x099d, si: 0x00000000, ne: 0x89c8000089cf},
		dm{re: 0x099e, si: 0x00000000, ne: 0x89cf000089da},
		dm{re: 0x099f, si: 0x00000000, ne: 0x89da000089e0},
		dm{re: 0x09a0, si: 0x00000000, ne: 0x89e0000089e9},
		dm{re: 0x09a1, si: 0x00000000, ne: 0x89e9000089f2},
		dm{re: 0x09a2, si: 0x00000000, ne: 0x89f2000089fb},
		dm{re: 0x09a3, si: 0x00000000, ne: 0x89fb00008a08},
		dm{re: 0x09a4, si: 0x00000000, ne: 0x8a0800008a14},
		dm{re: 0x09a5, si: 0x00000000, ne: 0x8a1400008a1b},
		dm{re: 0x09a6, si: 0x00000000, ne: 0x8a1b00008a21},
		dm{re: 0x09a7, si: 0x00000000, ne: 0x8a2100008a28},
		dm{re: 0x09a8, si: 0x00000000, ne: 0x8a2800008a31},
		dm{re: -0x0001, si: 0x8a3100008a39, ne: 0x8a3900008a45},
		dm{re: -0x0001, si: 0x8a4500008a4d, ne: 0x8a4d00008a59},
		dm{re: -0x0001, si: 0x8a5900008a61, ne: 0x8a6100008a73},
		dm{re: 0x09a9, si: 0x00000000, ne: 0x8a7300008a80},
		dm{re: 0x09aa, si: 0x00000000, ne: 0x8a8000008a8d},
		dm{re: 0x09ab, si: 0x00000000, ne: 0x8a8d00008a93},
		dm{re: 0x09ac, si: 0x00000000, ne: 0x8a9300008a9d},
		dm{re: 0x09ad, si: 0x00000000, ne: 0x8a9d00008aa7},
		dm{re: 0x09ae, si: 0x00000000, ne: 0x8aa700008ab1},
		dm{re: 0x09af, si: 0x00000000, ne: 0x8ab100008abc},
		dm{re: 0x09b0, si: 0x00000000, ne: 0x8abc00008ac4},
		dm{re: 0x09b1, si: 0x00000000, ne: 0x8ac400008acb},
		dm{re: 0x09b2, si: 0x00000000, ne: 0x8acb00008ad9},
		dm{re: 0x09b3, si: 0x00000000, ne: 0x8ad900008ae7},
		dm{re: 0x09b4, si: 0x00000000, ne: 0x8ae700008af5},
		dm{re: 0x09b5, si: 0x00000000, ne: 0x8af500008afe},
		dm{re: 0x09b6, si: 0x00000000, ne: 0x8afe00008b01},
		dm{re: 0x09b7, si: 0x00000000, ne: 0x8b0100008b09},
		dm{re: 0x09b8, si: 0x00000000, ne: 0x8b0900008b11},
		dm{re: 0x09b9, si: 0x00000000, ne: 0x8b1100008b1b},
		dm{re: 0x09ba, si: 0x00000000, ne: 0x8b1b00008b1e},
		dm{re: 0x09bb, si: 0x00000000, ne: 0x8b1e00008b26},
		dm{re: 0x09bc, si: 0x00000000, ne: 0x8b2600008b2d},
		dm{re: 0x09bd, si: 0x00000000, ne: 0x8b2d00008b30},
		dm{re: 0x09be, si: 0x00000000, ne: 0x8b3000008b38},
		dm{re: 0x09bf, si: 0x00000000, ne: 0x8b3800008b3f},
		dm{re: 0x09c0, si: 0x00000000, ne: 0x8b3f00008b42},
		dm{re: 0x09c1, si: 0x00000000, ne: 0x8b4200008b4a},
		dm{re: 0x09c2, si: 0x00000000, ne: 0x8b4a00008b54},
		dm{re: 0x09c3, si: 0x00000000, ne: 0x8b5400008b62},
		dm{re: 0x09c4, si: 0x00000000, ne: 0x8b6200008b69},
		dm{re: 0x09c5, si: 0x00000000, ne: 0x8b6900008b75},
		dm{re: 0x09c6, si: 0x00000000, ne: 0x8b7500008b77},
		dm{re: 0x09c7, si: 0x00000000, ne: 0x8b7700008b81},
		dm{re: 0x09c8, si: 0x00000000, ne: 0x8b8100008b8f},
		dm{re: 0x09c9, si: 0x00000000, ne: 0x8b8f00008b9d},
		dm{re: 0x09ca, si: 0x00000000, ne: 0x8b9d00008b9f},
		dm{re: 0x09cb, si: 0x00000000, ne: 0x8b9f00008ba6},
		dm{re: 0x09cc, si: 0x00000000, ne: 0x8ba600008bb5},
		dm{re: 0x09cd, si: 0x00000000, ne: 0x8bb500008bc1},
		dm{re: 0x09ce, si: 0x00000000, ne: 0x8bc100008bce},
		dm{re: 0x09cf, si: 0x00000000, ne: 0x8bce00008bd5},
		dm{re: 0x09d0, si: 0x00000000, ne: 0x8bd500008bdc},
		dm{re: 0x09d1, si: 0x00000000, ne: 0x8bdc00008be3},
		dm{re: 0x09d2, si: 0x00000000, ne: 0x8be300008be8},
		dm{re: 0x09d3, si: 0x00000000, ne: 0x8be800008beb},
		dm{re: 0x09d4, si: 0x00000000, ne: 0x8beb00008bf0},
		dm{re: 0x09d5, si: 0x00000000, ne: 0x8bf000008bf9},
		dm{re: 0x09d6, si: 0x00000000, ne: 0x8bf900008c02},
		dm{re: 0x09d7, si: 0x00000000, ne: 0x8c0200008c06},
		dm{re: 0x09d8, si: 0x00000000, ne: 0x8c0600008c0f},
		dm{re: 0x09d9, si: 0x00000000, ne: 0x8c0f00008c18},
		dm{re: 0x09da, si: 0x00000000, ne: 0x8c1800008c21},
		dm{re: 0x09db, si: 0x00000000, ne: 0x8c2100008c28},
		dm{re: 0x09dc, si: 0x00000000, ne: 0x8c2800008c2b},
		dm{re: 0x09dd, si: 0x00000000, ne: 0x8c2b00008c39},
		dm{re: 0x09de, si: 0x00000000, ne: 0x8c3900008c47},
		dm{re: 0x09df, si: 0x00000000, ne: 0x8c4700008c56},
		dm{re: 0x09e0, si: 0x00000000, ne: 0x8c5600008c63},
		dm{re: 0x09e1, si: 0x00000000, ne: 0x8c6300008c67},
		dm{re: 0x09e2, si: 0x00000000, ne: 0x8c6700008c69},
		dm{re: 0x09e3, si: 0x00000000, ne: 0x8c6900008c72},
		dm{re: 0x09e4, si: 0x00000000, ne: 0x8c7200008c7b},
		dm{re: 0x09e5, si: 0x00000000, ne: 0x8c7b00008c84},
		dm{re: 0x09e6, si: 0x00000000, ne: 0x8c8400008c8d},
		dm{re: 0x09e7, si: 0x00000000, ne: 0x8c8d00008c9c},
		dm{re: 0x09e8, si: 0x00000000, ne: 0x8c9c00008ca2},
		dm{re: 0x09e9, si: 0x00000000, ne: 0x8ca200008caf},
		dm{re: 0x09ea, si: 0x00000000, ne: 0x8caf00008cb3},
		dm{re: 0x09eb, si: 0x00000000, ne: 0x8cb300008cb7},
		dm{re: 0x09ec, si: 0x00000000, ne: 0x8cb700008cc4},
		dm{re: 0x09ed, si: 0x00000000, ne: 0x8cc400008cc8},
		dm{re: 0x09ee, si: 0x00000000, ne: 0x8cc800008cd1},
		dm{re: 0x09ef, si: 0x00000000, ne: 0x8cd100008cda},
		dm{re: 0x09f0, si: 0x00000000, ne: 0x8cda00008ce3},
		dm{re: 0x09f1, si: 0x00000000, ne: 0x8ce300008ceb},
		dm{re: 0x09f2, si: 0x00000000, ne: 0x8ceb00008cfa},
		dm{re: 0x09f3, si: 0x00000000, ne: 0x8cfa00008d07},
		dm{re: 0x09f4, si: 0x00000000, ne: 0x8d0700008d0e},
		dm{re: 0x09f5, si: 0x00000000, ne: 0x8cfa00008d07},
		dm{re: 0x09f6, si: 0x00000000, ne: 0x8d0e00008d11},
		dm{re: 0x09f7, si: 0x00000000, ne: 0x8d1100008d14},
		dm{re: 0x09f8, si: 0x00000000, ne: 0x8d1400008d17},
		dm{re: 0x09f9, si: 0x00000000, ne: 0x8d1700008d20},
		dm{re: 0x09fa, si: 0x00000000, ne: 0x8d2000008d29},
		dm{re: 0x09fb, si: 0x00000000, ne: 0x8d2900008d38},
		dm{re: 0x09fc, si: 0x00000000, ne: 0x8d3800008d3b},
		dm{re: 0x09fd, si: 0x00000000, ne: 0x8d3b00008d43},
		dm{re: 0x09fe, si: 0x00000000, ne: 0x8d4300008d46},
		dm{re: 0x09ff, si: 0x00000000, ne: 0x8d4600008d4e},
		dm{re: 0x0a00, si: 0x00000000, ne: 0x8d4e00008d5e},
		dm{re: 0x0a01, si: 0x00000000, ne: 0x8d5e00008d73},
		dm{re: -0x0001, si: 0x8d7300008d7b, ne: 0x8d7b00008d8f},
		dm{re: 0x0a02, si: 0x00000000, ne: 0x8d8f00008d9c},
		dm{re: 0x0a03, si: 0x00000000, ne: 0x8d9c00008dae},
		dm{re: 0x0a04, si: 0x00000000, ne: 0x8dae00008dbe},
		dm{re: 0x0a05, si: 0x00000000, ne: 0x8dbe00008dcd},
		dm{re: 0x0a06, si: 0x00000000, ne: 0x8dcd00008ddf},
		dm{re: 0x0a07, si: 0x00000000, ne: 0x8ddf00008dec},
		dm{re: 0x0a08, si: 0x00000000, ne: 0x8dec00008df8},
		dm{re: 0x0a09, si: 0x00000000, ne: 0x8df800008e09},
		dm{re: 0x0a0a, si: 0x00000000, ne: 0x8e0900008e1d},
		dm{re: 0x0a0b, si: 0x00000000, ne: 0x8e1d00008e28},
		dm{re: -0x0001, si: 0x8e2800008e30, ne: 0x8e3000008e47},
		dm{re: -0x0001, si: 0x8e4700008e50, ne: 0x8e5000008e65},
		dm{re: -0x0001, si: 0x8e6500008e6c, ne: 0x8e6c00008e85},
		dm{re: -0x0001, si: 0x8e8500008e8d, ne: 0x8e8d00008ea4},
		dm{re: -0x0001, si: 0x8ea400008eac, ne: 0x8eac00008ec1},
		dm{re: 0x0a0c, si: 0x00000000, ne: 0x8ec100008ed8},
		dm{re: -0x0001, si: 0x8ed800008ee2, ne: 0x8ee200008ef6},
		dm{re: -0x0001, si: 0x8ef600008eff, ne: 0x8eff00008f0b},
		dm{re: -0x0001, si: 0x8f0b00008f15, ne: 0x8f1500008f26},
		dm{re: 0x0a0d, si: 0x00000000, ne: 0x8f2600008f37},
		dm{re: 0x0a0e, si: 0x00000000, ne: 0x8f3700008f4d},
		dm{re: 0x0a0f, si: 0x00000000, ne: 0x8f4d00008f59},
		dm{re: 0x0a10, si: 0x00000000, ne: 0x8f5900008f65},
		dm{re: 0x0a11, si: 0x00000000, ne: 0x8f6500008f6c},
		dm{re: 0x0a12, si: 0x00000000, ne: 0x8f6c00008f7a},
		dm{re: 0x0a13, si: 0x00000000, ne: 0x8f7a00008f8d},
		dm{re: 0x0a14, si: 0x00000000, ne: 0x8f8d00008f9d},
		dm{re: 0x0a15, si: 0x00000000, ne: 0x8f9d00008fae},
		dm{re: 0x0a16, si: 0x00000000, ne: 0x8fae00008fc4},
		dm{re: 0x0a17, si: 0x00000000, ne: 0x8fc400008fe1},
		dm{re: 0x0a18, si: 0x00000000, ne: 0x8fe100008ff5},
		dm{re: 0x0a19, si: 0x00000000, ne: 0x8ff50000900b},
		dm{re: 0x0a1a, si: 0x00000000, ne: 0x900b0000901c},
		dm{re: 0x0a1b, si: 0x00000000, ne: 0x901c0000902c},
		dm{re: 0x0a1c, si: 0x00000000, ne: 0x902c00009040},
		dm{re: 0x0a1d, si: 0x00000000, ne: 0x904000009051},
		dm{re: 0x0a1e, si: 0x00000000, ne: 0x90510000905c},
		dm{re: 0x0a1f, si: 0x00000000, ne: 0x905c0000906c},
		dm{re: 0x0a20, si: 0x00000000, ne: 0x906c0000907b},
		dm{re: 0x0a21, si: 0x00000000, ne: 0x907b0000908a},
		dm{re: 0x0a22, si: 0x00000000, ne: 0x908a000090a0},
		dm{re: 0x0a23, si: 0x00000000, ne: 0x90a0000090ad},
		dm{re: 0x0a24, si: 0x00000000, ne: 0x90ad000090bd},
		dm{re: 0x0a25, si: 0x00000000, ne: 0x90bd000090d0},
		dm{re: -0x0001, si: 0x90d0000090d8, ne: 0x90d8000090e3},
		dm{re: 0x0a26, si: 0x00000000, ne: 0x90e3000090ee},
		dm{re: -0x0001, si: 0x90ee000090f8, ne: 0x90f80000910e},
		dm{re: -0x0001, si: 0x910e00009119, ne: 0x91190000912a},
		dm{re: 0x0a27, si: 0x00000000, ne: 0x912a00009138},
		dm{re: 0x0a28, si: 0x00000000, ne: 0x913800009147},
		dm{re: 0x0a29, si: 0x00000000, ne: 0x914700009154},
		dm{re: 0x0a2a, si: 0x00000000, ne: 0x915400009162},
		dm{re: 0x0a2b, si: 0x00000000, ne: 0x91620000916f},
		dm{re: 0x0a2c, si: 0x00000000, ne: 0x916f0000917c},
		dm{re: 0x0a2d, si: 0x00000000, ne: 0x917c0000918b},
		dm{re: 0x0a2e, si: 0x00000000, ne: 0x918b0000919e},
		dm{re: 0x0a2f, si: 0x00000000, ne: 0x919e000091b1},
		dm{re: 0x0a30, si: 0x00000000, ne: 0x91b1000091c6},
		dm{re: 0x0a31, si: 0x00000000, ne: 0x91c6000091d4},
		dm{re: 0x0a32, si: 0x00000000, ne: 0x91d4000091e1},
		dm{re: 0x0a33, si: 0x00000000, ne: 0x91e1000091ee},
		dm{re: -0x0001, si: 0x91ee000091f7, ne: 0x91f70000920f},
		dm{re: -0x0001, si: 0x920f00009218, ne: 0x92180000922f},
		dm{re: -0x0001, si: 0x922f00009237, ne: 0x92370000924d},
		dm{re: -0x0001, si: 0x924d00009255, ne: 0x92550000926a},
		dm{re: 0x0a34, si: 0x00000000, ne: 0x926a0000927b},
		dm{re: 0x0a35, si: 0x00000000, ne: 0x927b00009294},
		dm{re: 0x0a36, si: 0x00000000, ne: 0x9294000092a4},
		dm{re: -0x0001, si: 0x92a4000092ad, ne: 0x92ad000092bb},
		dm{re: -0x0001, si: 0x92bb000092c3, ne: 0x92c3000092cc},
		dm{re: -0x0001, si: 0x92cc000092d4, ne: 0x92d4000092e1},
		dm{re: -0x0001, si: 0x92e1000092ea, ne: 0x92ea000092f2},
		dm{re: -0x0001, si: 0x92f2000092f9, ne: 0x92f90000930e},
		dm{re: -0x0001, si: 0x930e00009316, ne: 0x931600009326},
		dm{re: 0x0a37, si: 0x00000000, ne: 0x932600009333},
		dm{re: 0x0a38, si: 0x00000000, ne: 0x93330000933d},
		dm{re: 0x0a39, si: 0x00000000, ne: 0x933d0000934a},
		dm{re: 0x0a3a, si: 0x00000000, ne: 0x934a0000935d},
		dm{re: 0x0a3b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a3c, si: 0x00000000, ne: 0x935d00009364},
		dm{re: 0x0a3d, si: 0x00000000, ne: 0x936400009372},
		dm{re: 0x0a3e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a3f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a40, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a42, si: 0x00000000, ne: 0x937b00009381},
		dm{re: 0x0a43, si: 0x00000000, ne: 0x5e5300005e57},
		dm{re: 0x0a44, si: 0x00000000, ne: 0x938100009387},
		dm{re: 0x0a45, si: 0x00000000, ne: 0x93870000938b},
		dm{re: -0x0001, si: 0x938b00009390, ne: 0x938b00009390},
		dm{re: -0x0001, si: 0x939000009395, ne: 0x939000009395},
		dm{re: -0x0001, si: 0x93950000939a, ne: 0x939a0000939f},
		dm{re: -0x0001, si: 0x939f000093a3, ne: 0x93a3000093a7},
		dm{re: -0x0001, si: 0x93a7000093ab, ne: 0x93a7000093ab},
		dm{re: -0x0001, si: 0x93ab000093b1, ne: 0x93ab000093b1},
		dm{re: -0x0001, si: 0x93b1000093bb, ne: 0x93bb000093c5},
		dm{re: -0x0001, si: 0x93c5000093cf, ne: 0x93c5000093cf},
		dm{re: -0x0001, si: 0x93cf000093d8, ne: 0x93cf000093d8},
		dm{re: -0x0001, si: 0x93d8000093e6, ne: 0x93e6000093f6},
		dm{re: -0x0001, si: 0x93f600009400, ne: 0x94000000940b},
		dm{re: -0x0001, si: 0x940b00009411, ne: 0x940b00009411},
		dm{re: -0x0001, si: 0x00000000, ne: 0x94170000941e},
		dm{re: 0x0a48, si: 0x00000000, ne: 0x942500009436},
		dm{re: 0x0a49, si: 0x00000000, ne: 0x94360000943e},
		dm{re: -0x0001, si: 0x943e00009446, ne: 0x943e00009446},
		dm{re: -0x0001, si: 0x94460000944d, ne: 0x944d00009459},
		dm{re: 0x0a4a, si: 0x00000000, ne: 0x945900009465},
		dm{re: -0x0001, si: 0x94650000946c, ne: 0x946c00009478},
		dm{re: -0x0001, si: 0x94780000947f, ne: 0x947f0000948b},
		dm{re: -0x0001, si: 0x948b00009492, ne: 0x94920000949e},
		dm{re: -0x0001, si: 0x949e000094a4, ne: 0x949e000094a4},
		dm{re: -0x0001, si: 0x94a4000094ae, ne: 0x94a4000094ae},
		dm{re: -0x0001, si: 0x94ae000094ba, ne: 0x94ba000094c6},
		dm{re: 0x0a4b, si: 0x00000000, ne: 0x377b0000377e},
		dm{re: 0x0a4c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x94c6000094cf, ne: 0x94cf000094d8},
		dm{re: -0x0001, si: 0x94d8000094e2, ne: 0x94e2000094ec},
		dm{re: -0x0001, si: 0x94ec000094f5, ne: 0x94f5000094fe},
		dm{re: -0x0001, si: 0x94fe00009507, ne: 0x94e2000094ec},
		dm{re: -0x0001, si: 0x950700009510, ne: 0x951000009519},
		dm{re: 0x0a4d, si: 0x00000000, ne: 0x951900009523},
		dm{re: 0x0a4e, si: 0x00000000, ne: 0x952300009532},
		dm{re: 0x0a4f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a50, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x95360000953e, ne: 0x95360000953e},
		dm{re: -0x0001, si: 0x953e00009542, ne: 0x95420000954c},
		dm{re: -0x0001, si: 0x95560000955c, ne: 0x955c00009563},
		dm{re: -0x0001, si: 0x95630000956d, ne: 0x956d0000957a},
		dm{re: -0x0001, si: 0x957a00009583, ne: 0x95830000958d},
		dm{re: 0x0a53, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a55, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a56, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a57, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a58, si: 0x00000000, ne: 0x95970000959c},
		dm{re: 0x0a5a, si: 0x00000000, ne: 0x95a6000095ae},
		dm{re: 0x0a5b, si: 0x00000000, ne: 0x95ae000095b5},
		dm{re: 0x0a5c, si: 0x00000000, ne: 0x95b5000095b7},
		dm{re: 0x0a5d, si: 0x00000000, ne: 0x95b7000095b9},
		dm{re: 0x0a5e, si: 0x00000000, ne: 0x95b9000095c0},
		dm{re: 0x0a5f, si: 0x00000000, ne: 0x95c0000095c9},
		dm{re: 0x0a60, si: 0x00000000, ne: 0x95c9000095d1},
		dm{re: 0x0a61, si: 0x00000000, ne: 0x95d1000095dc},
		dm{re: 0x0a62, si: 0x00000000, ne: 0x95dc000095e9},
		dm{re: 0x0a63, si: 0x00000000, ne: 0x95e9000095f2},
		dm{re: 0x0a64, si: 0x00000000, ne: 0x95f2000095fe},
		dm{re: 0x0a65, si: 0x00000000, ne: 0x95fe00009608},
		dm{re: 0x0a66, si: 0x00000000, ne: 0x960800009611},
		dm{re: 0x0a67, si: 0x00000000, ne: 0x96110000961a},
		dm{re: 0x0a68, si: 0x00000000, ne: 0x961a00009624},
		dm{re: 0x0a69, si: 0x00000000, ne: 0x962400009630},
		dm{re: 0x0a6a, si: 0x00000000, ne: 0x963000009631},
		dm{re: 0x0a6b, si: 0x00000000, ne: 0x377200003778},
		dm{re: 0x0a6c, si: 0x00000000, ne: 0x963100009637},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a6f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a70, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x96440000964c, ne: 0x96440000964c},
		dm{re: 0x0a73, si: 0x00000000, ne: 0x63f00000646},
		dm{re: 0x0a74, si: 0x00000000, ne: 0x964f00009656},
		dm{re: 0x0a75, si: 0x00000000, ne: 0x96560000965c},
		dm{re: -0x0001, si: 0x00000000, ne: 0x965f00009669},
		dm{re: -0x0001, si: 0x966b00009677, ne: 0x967700009680},
		dm{re: 0x0a78, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a7a, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x968b00009693, ne: 0x9693000096aa},
		dm{re: -0x0001, si: 0x96aa000096b2, ne: 0x96b2000096bf},
		dm{re: -0x0001, si: 0x96bf000096c7, ne: 0x96c7000096d5},
		dm{re: -0x0001, si: 0x96d5000096dd, ne: 0x96dd000096f0},
		dm{re: 0x0a7c, si: 0x00000000, ne: 0x96f0000096fe},
		dm{re: -0x0001, si: 0x96fe00009706, ne: 0x970600009719},
		dm{re: -0x0001, si: 0x971900009727, ne: 0x972700009737},
		dm{re: -0x0001, si: 0x97370000973f, ne: 0x973f00009754},
		dm{re: -0x0001, si: 0x97540000975c, ne: 0x975c0000976c},
		dm{re: -0x0001, si: 0x976c00009774, ne: 0x977400009787},
		dm{re: -0x0001, si: 0x97870000978f, ne: 0x978f000097a0},
		dm{re: -0x0001, si: 0x97a0000097a8, ne: 0x97a8000097b9},
		dm{re: -0x0001, si: 0x97b9000097c1, ne: 0x97c1000097cf},
		dm{re: -0x0001, si: 0x97cf000097d7, ne: 0x97d7000097e5},
		dm{re: -0x0001, si: 0x97e5000097ed, ne: 0x97ed00009801},
		dm{re: -0x0001, si: 0x980100009810, ne: 0x98100000981f},
		dm{re: -0x0001, si: 0x981f00009827, ne: 0x98270000983b},
		dm{re: -0x0001, si: 0x983b00009843, ne: 0x984300009854},
		dm{re: -0x0001, si: 0x985400009860, ne: 0x986000009873},
		dm{re: -0x0001, si: 0x98730000987b, ne: 0x987b00009887},
		dm{re: -0x0001, si: 0x988700009895, ne: 0x9895000098a3},
		dm{re: -0x0001, si: 0x98a3000098b2, ne: 0x98b2000098c1},
		dm{re: 0x0a7d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a7f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a80, si: 0x00000000, ne: 0x98cb000098d5},
		dm{re: 0x0a81, si: 0x00000000, ne: 0x98d5000098dd},
		dm{re: 0x0a82, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a83, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x98e4000098ea, ne: 0x98ea000098f1},
		dm{re: -0x0001, si: 0x98f1000098f7, ne: 0x11790000117b},
		dm{re: -0x0001, si: 0x98f7000098fd, ne: 0x98fd00009909},
		dm{re: -0x0001, si: 0x99090000990f, ne: 0x990f00009911},
		dm{re: -0x0001, si: 0x991100009917, ne: 0x99170000991a},
		dm{re: -0x0001, si: 0x991a00009920, ne: 0x992000009923},
		dm{re: -0x0001, si: 0x992300009929, ne: 0x992900009931},
		dm{re: -0x0001, si: 0x993100009937, ne: 0x993700009943},
		dm{re: 0x0a86, si: 0x00000000, ne: 0x99470000994a},
		dm{re: 0x0a87, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0a89, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x994e00009956, ne: 0x99560000995e},
		dm{re: -0x0001, si: 0x995e00009964, ne: 0x99640000996a},
		dm{re: 0x0a8a, si: 0x00000000, ne: 0x996a00009972},
		dm{re: 0x0a8b, si: 0x00000000, ne: 0x99790000997d},
		dm{re: 0x0a8c, si: 0x00000000, ne: 0x997d00009989},
		dm{re: 0x0a8d, si: 0x00000000, ne: 0x29f000002a4},
		dm{re: 0x0a8e, si: 0x00000000, ne: 0x998900009993},
		dm{re: 0x0a8f, si: 0x00000000, ne: 0x9993000099a0},
		dm{re: 0x0a90, si: 0x00000000, ne: 0x99a0000099ac},
		dm{re: 0x0a91, si: 0x00000000, ne: 0x99ac000099b6},
		dm{re: 0x0a92, si: 0x00000000, ne: 0x99b6000099c0},
		dm{re: 0x0a93, si: 0x00000000, ne: 0x99c0000099c9},
		dm{re: 0x0a94, si: 0x00000000, ne: 0x99c9000099cd},
		dm{re: 0x0a95, si: 0x00000000, ne: 0x99cd000099d6},
		dm{re: 0x0a96, si: 0x00000000, ne: 0x99d6000099df},
		dm{re: 0x0a97, si: 0x00000000, ne: 0x99df000099ea},
		dm{re: 0x0a98, si: 0x00000000, ne: 0x99ea000099f5},
		dm{re: 0x0a99, si: 0x00000000, ne: 0x99f5000099ff},
		dm{re: 0x0a9a, si: 0x00000000, ne: 0x99ff00009a07},
		dm{re: 0x0a9b, si: 0x00000000, ne: 0x9a0700009a0b},
		dm{re: 0x0a9c, si: 0x00000000, ne: 0x9a0b00009a11},
		dm{re: 0x0a9d, si: 0x00000000, ne: 0x9a1100009a17},
		dm{re: 0x0a9e, si: 0x00000000, ne: 0x9a1700009a1d},
		dm{re: 0x0a9f, si: 0x00000000, ne: 0x9a1d00009a28},
		dm{re: 0x0aa0, si: 0x00000000, ne: 0x9a2800009a2e},
		dm{re: 0x0aa1, si: 0x00000000, ne: 0x9a2e00009a38},
		dm{re: 0x0aa2, si: 0x00000000, ne: 0x9a3800009a3e},
		dm{re: 0x0aa3, si: 0x00000000, ne: 0x9a3e00009a45},
		dm{re: 0x0aa4, si: 0x00000000, ne: 0x9a4500009a4b},
		dm{re: 0x0aa5, si: 0x00000000, ne: 0x9a4b00009a55},
		dm{re: 0x0aa6, si: 0x00000000, ne: 0x9a5500009a5f},
		dm{re: 0x0aa7, si: 0x00000000, ne: 0x9a5f00009a62},
		dm{re: 0x0aa8, si: 0x00000000, ne: 0x9a6200009a67},
		dm{re: 0x0aa9, si: 0x00000000, ne: 0x9a6700009a6c},
		dm{re: 0x0aaa, si: 0x00000000, ne: 0x9a6c00009a71},
		dm{re: 0x0aab, si: 0x00000000, ne: 0x9a7100009a77},
		dm{re: 0x0aac, si: 0x00000000, ne: 0x9a7700009a7c},
		dm{re: 0x0aad, si: 0x00000000, ne: 0x9a7c00009a85},
		dm{re: 0x0aae, si: 0x00000000, ne: 0x9a8500009a8a},
		dm{re: 0x0aaf, si: 0x00000000, ne: 0x9a8a00009a94},
		dm{re: 0x0ab0, si: 0x00000000, ne: 0x7ff100007ff6},
		dm{re: 0x0ab1, si: 0x00000000, ne: 0x9a9400009a9d},
		dm{re: 0x0ab2, si: 0x00000000, ne: 0x9a9d00009aa2},
		dm{re: 0x0ab3, si: 0x00000000, ne: 0x9aa200009aab},
		dm{re: 0x0ab4, si: 0x00000000, ne: 0x9aab00009ab0},
		dm{re: 0x0ab5, si: 0x00000000, ne: 0x9ab000009ab9},
		dm{re: 0x0ab6, si: 0x00000000, ne: 0x9ab900009abe},
		dm{re: 0x0ab7, si: 0x00000000, ne: 0x9abe00009ac8},
		dm{re: 0x0ab8, si: 0x00000000, ne: 0x9ac800009ad4},
		dm{re: 0x0ab9, si: 0x00000000, ne: 0x9ad400009adb},
		dm{re: 0x0aba, si: 0x00000000, ne: 0x9adb00009ae6},
		dm{re: 0x0abb, si: 0x00000000, ne: 0x9ae600009aec},
		dm{re: 0x0abc, si: 0x00000000, ne: 0x9aec00009af3},
		dm{re: 0x0abd, si: 0x00000000, ne: 0x9af300009af9},
		dm{re: -0x0001, si: 0x9af900009b06, ne: 0x9b0600009b11},
		dm{re: -0x0001, si: 0x9b1100009b1d, ne: 0x9b1d00009b24},
		dm{re: 0x0abe, si: 0x00000000, ne: 0x9b2400009b2b},
		dm{re: 0x0abf, si: 0x00000000, ne: 0x9b2b00009b31},
		dm{re: 0x0ac0, si: 0x00000000, ne: 0x9b3100009b38},
		dm{re: 0x0ac1, si: 0x00000000, ne: 0x9af300009af9},
		dm{re: 0x0ac2, si: 0x00000000, ne: 0x9b3800009b47},
		dm{re: 0x0ac3, si: 0x00000000, ne: 0x9b4700009b4c},
		dm{re: 0x0ac4, si: 0x00000000, ne: 0x9b4c00009b53},
		dm{re: 0x0ac5, si: 0x00000000, ne: 0x9b5300009b5d},
		dm{re: 0x0ac6, si: 0x00000000, ne: 0x9b5d00009b69},
		dm{re: 0x0ac7, si: 0x00000000, ne: 0x9b6900009b74},
		dm{re: 0x0ac8, si: 0x00000000, ne: 0x9ad400009adb},
		dm{re: 0x0ac9, si: 0x00000000, ne: 0x9b7400009b7b},
		dm{re: 0x0aca, si: 0x00000000, ne: 0x9b7b00009b82},
		dm{re: 0x0acb, si: 0x00000000, ne: 0x9b8200009b89},
		dm{re: 0x0acc, si: 0x00000000, ne: 0x9b8900009b8b},
		dm{re: 0x0acd, si: 0x00000000, ne: 0x9b8b00009b8d},
		dm{re: 0x0ace, si: 0x00000000, ne: 0x73a9000073af},
		dm{re: 0x0acf, si: 0x00000000, ne: 0x9b8d00009b95},
		dm{re: 0x0ad0, si: 0x00000000, ne: 0x9b9500009b9b},
		dm{re: 0x0ad1, si: 0x00000000, ne: 0x51870000518d},
		dm{re: 0x0ad2, si: 0x00000000, ne: 0x9b9b00009ba1},
		dm{re: 0x0ad3, si: 0x00000000, ne: 0x9ba100009bab},
		dm{re: 0x0ad4, si: 0x00000000, ne: 0x9bab00009bb1},
		dm{re: 0x0ad5, si: 0x00000000, ne: 0x9bb100009bbe},
		dm{re: 0x0ad6, si: 0x00000000, ne: 0x9bbe00009bc4},
		dm{re: 0x0ad7, si: 0x00000000, ne: 0x43b9000043bf},
		dm{re: 0x0ad8, si: 0x00000000, ne: 0x9bc400009bcf},
		dm{re: 0x0ad9, si: 0x00000000, ne: 0x9bcf00009bd5},
		dm{re: 0x0ada, si: 0x00000000, ne: 0x9bd500009bdc},
		dm{re: 0x0adb, si: 0x00000000, ne: 0x9bdc00009be7},
		dm{re: 0x0adc, si: 0x00000000, ne: 0x9be700009bee},
		dm{re: 0x0add, si: 0x00000000, ne: 0x9bee00009bf5},
		dm{re: 0x0ade, si: 0x00000000, ne: 0x9bf500009c00},
		dm{re: 0x0adf, si: 0x00000000, ne: 0x9c0000009c08},
		dm{re: 0x0ae0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ae1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ae2, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ae6, si: 0x00000000, ne: 0x9c1a00009c1c},
		dm{re: 0x0ae7, si: 0x00000000, ne: 0x9c1c00009c26},
		dm{re: 0x0ae8, si: 0x00000000, ne: 0x9c2600009c27},
		dm{re: 0x0ae9, si: 0x00000000, ne: 0x9c2700009c30},
		dm{re: 0x0aea, si: 0x00000000, ne: 0x9c3000009c3f},
		dm{re: 0x0aeb, si: 0x00000000, ne: 0x9c3f00009c45},
		dm{re: 0x0aec, si: 0x00000000, ne: 0x9c4500009c4e},
		dm{re: 0x0aed, si: 0x00000000, ne: 0x9c4e00009c53},
		dm{re: 0x0aee, si: 0x00000000, ne: 0x9c5300009c59},
		dm{re: 0x0aef, si: 0x00000000, ne: 0x9c5900009c5e},
		dm{re: 0x0af0, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x9c5e00009c6c, ne: 0x9c6c00009c7b},
		dm{re: -0x0001, si: 0x9c7b00009c86, ne: 0x9c8600009c91},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x9ca000009ca6},
		dm{re: 0x0af3, si: 0x00000000, ne: 0x9cae00009cbb},
		dm{re: 0x0af4, si: 0x00000000, ne: 0x9cbb00009cc3},
		dm{re: 0x0af5, si: 0x00000000, ne: 0x9cc300009cd5},
		dm{re: -0x0001, si: 0x9cd500009ce3, ne: 0x9ce300009ced},
		dm{re: 0x0af6, si: 0x00000000, ne: 0x9ced00009cf9},
		dm{re: 0x0af7, si: 0x00000000, ne: 0x39f5000039fc},
		dm{re: 0x0af8, si: 0x00000000, ne: 0x542000005427},
		dm{re: 0x0af9, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x9d0100009d0c, ne: 0x9d0c00009d11},
		dm{re: 0x0afb, si: 0x00000000, ne: 0x9d1100009d1b},
		dm{re: -0x0001, si: 0x9d1b00009d25, ne: 0x9d2500009d2c},
		dm{re: -0x0001, si: 0x9d2c00009d37, ne: 0x9d3700009d39},
		dm{re: 0x0afc, si: 0x00000000, ne: 0x9d3900009d3e},
		dm{re: -0x0001, si: 0x9d3e00009d4b, ne: 0x9d4b00009d5b},
		dm{re: -0x0001, si: 0x9d5b00009d65, ne: 0x9d6500009d6e},
		dm{re: -0x0001, si: 0x9d6e00009d77, ne: 0x9d7700009d80},
		dm{re: -0x0001, si: 0x9d8500009d8d, ne: 0x9d8d00009d99},
		dm{re: 0x0afe, si: 0x00000000, ne: 0x9d9900009dab},
		dm{re: 0x0aff, si: 0x00000000, ne: 0x9dab00009db8},
		dm{re: 0x0b00, si: 0x00000000, ne: 0x9db800009dc4},
		dm{re: 0x0b01, si: 0x00000000, ne: 0x9dc400009dcb},
		dm{re: 0x0b02, si: 0x00000000, ne: 0x9dcb00009ddc},
		dm{re: 0x0b03, si: 0x00000000, ne: 0x9ddc00009de9},
		dm{re: 0x0b04, si: 0x00000000, ne: 0x9de900009df5},
		dm{re: 0x0b05, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b06, si: 0x00000000, ne: 0x9df500009e00},
		dm{re: 0x0b07, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b08, si: 0x00000000, ne: 0x4a2c00004a31},
		dm{re: 0x0b09, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b0c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x9e0b00009e11, ne: 0x9e1100009e18},
		dm{re: 0x0b0e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b0f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b11, si: 0x00000000, ne: 0x9e2100009e28},
		dm{re: 0x0b12, si: 0x00000000, ne: 0x9e2800009e32},
		dm{re: 0x0b13, si: 0x00000000, ne: 0x9e3200009e3a},
		dm{re: -0x0001, si: 0x9e3a00009e48, ne: 0x9e4800009e56},
		dm{re: -0x0001, si: 0x9e5600009e64, ne: 0x9e6400009e72},
		dm{re: -0x0001, si: 0x9e7200009e7b, ne: 0x9e7b00009e84},
		dm{re: -0x0001, si: 0x9e8400009e8e, ne: 0x9e8e00009e98},
		dm{re: -0x0001, si: 0x9e9800009ea4, ne: 0x9ea400009eb0},
		dm{re: -0x0001, si: 0x9eb000009ebb, ne: 0x9ebb00009ec6},
		dm{re: -0x0001, si: 0x9ec600009ed0, ne: 0x9ed000009eda},
		dm{re: 0x0b14, si: 0x00000000, ne: 0x9eda00009ee2},
		dm{re: -0x0001, si: 0x9ee200009eeb, ne: 0x9eeb00009eef},
		dm{re: -0x0001, si: 0x9eef00009ef3, ne: 0x9eef00009ef3},
		dm{re: -0x0001, si: 0x9ef300009efa, ne: 0x9efa00009f01},
		dm{re: 0x0b16, si: 0x00000000, ne: 0x9f0900009f15},
		dm{re: 0x0b17, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b1b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b1c, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: 0x0b1d, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x9f2400009f2d, ne: 0x9f2400009f2d},
		dm{re: -0x0001, si: 0x9f2d00009f37, ne: 0x9f2d00009f37},
		dm{re: 0x0b20, si: 0x00000000, ne: 0x9f3b00009f43},
		dm{re: 0x0b21, si: 0x00000000, ne: 0x9f4300009f48},
		dm{re: -0x0001, si: 0x9f4c00009f53, ne: 0x9f5300009f5a},
		dm{re: 0x0b23, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x9f5f00009f64},
		dm{re: 0x0b26, si: 0x00000000, ne: 0x9f6900009f6e},
		dm{re: 0x0b27, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b28, si: 0x00000000, ne: 0x9f6e00009f73},
		dm{re: 0x0b2a, si: 0x00000000, ne: 0x9f7800009f80},
		dm{re: 0x0b2b, si: 0x00000000, ne: 0x9f8000009f88},
		dm{re: 0x0b2c, si: 0x00000000, ne: 0x9f8800009f8f},
		dm{re: 0x0b2d, si: 0x00000000, ne: 0x9f8f00009f95},
		dm{re: 0x0b2e, si: 0x00000000, ne: 0x9f9500009f9e},
		dm{re: 0x0b2f, si: 0x00000000, ne: 0x9f9e00009fa5},
		dm{re: 0x0b30, si: 0x00000000, ne: 0x9fa500009fae},
		dm{re: 0x0b31, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x0b32, si: 0x00000000, ne: 0x9fae00009fb6},
		dm{re: 0x0b33, si: 0x00000000, ne: 0x9fb600009fbe},
		dm{re: 0x0b34, si: 0x00000000, ne: 0x9fbe00009fc7},
		dm{re: 0x0b35, si: 0x00000000, ne: 0x9fc700009fcc},
		dm{re: 0x0b36, si: 0x00000000, ne: 0x9fcc00009fd8},
		dm{re: 0x0b37, si: 0x00000000, ne: 0x9fd800009fdc},
		dm{re: 0x0b38, si: 0x00000000, ne: 0x9fdc00009fe1},
		dm{re: 0x0b39, si: 0x00000000, ne: 0x9fe100009fea},
		dm{re: 0x0b3a, si: 0x00000000, ne: 0x9fea00009ff7},
		dm{re: 0x0b3b, si: 0x00000000, ne: 0x9ff700009fff},
		dm{re: 0x0b3c, si: 0x00000000, ne: 0x9fff0000a00d},
		dm{re: 0x0b3d, si: 0x00000000, ne: 0xa00d0000a013},
		dm{re: 0x0b3e, si: 0x00000000, ne: 0xa0130000a019},
		dm{re: 0x0b3f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b41, si: 0x00000000, ne: 0xa01c0000a029},
		dm{re: 0x0b43, si: 0x00000000, ne: 0xa02d0000a03a},
		dm{re: 0x0b44, si: 0x00000000, ne: 0xa03a0000a049},
		dm{re: 0x0b45, si: 0x00000000, ne: 0xa0490000a05f},
		dm{re: 0x0b46, si: 0x00000000, ne: 0xa05f0000a068},
		dm{re: 0x0b48, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0xa0760000a07e},
		dm{re: -0x0001, si: 0xa0960000a09f, ne: 0xa09f0000a0a2},
		dm{re: 0x0b4b, si: 0x00000000, ne: 0xa0a70000a0af},
		dm{re: 0x0b4c, si: 0x00000000, ne: 0xa0af0000a0b9},
		dm{re: -0x0001, si: 0xa0b90000a0c0, ne: 0xa0b90000a0c0},
		dm{re: 0x0b4d, si: 0x00000000, ne: 0xa0c00000a0c9},
		dm{re: 0x0b4e, si: 0x00000000, ne: 0xa0c90000a0d1},
		dm{re: -0x0001, si: 0xa0d10000a0dc, ne: 0xa0dc0000a0e2},
		dm{re: -0x0001, si: 0xa0e20000a0eb, ne: 0xa0eb0000a0f4},
		dm{re: -0x0001, si: 0xa0f40000a0fb, ne: 0xa0fb0000a102},
		dm{re: -0x0001, si: 0xa1090000a114, ne: 0xa1090000a114},
		dm{re: 0x0b50, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b51, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x0b54, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b55, si: 0x00000000, ne: 0xa11d0000a12c},
		dm{re: 0x0b57, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b58, si: 0x00000000, ne: 0xa1340000a13c},
		dm{re: 0x0b5a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b5b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b5d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b5e, si: 0x00000000, ne: 0x24400000249},
		dm{re: 0x0b60, si: 0x00000000, ne: 0xa1480000a14b},
		dm{re: 0x0b61, si: 0x00000000, ne: 0xa14b0000a14d},
		dm{re: -0x0001, si: 0xa1520000a159, ne: 0xa1590000a161},
		dm{re: 0x0b63, si: 0x00000000, ne: 0xa1610000a167},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0xa1780000a183},
		dm{re: -0x0001, si: 0xa1890000a190, ne: 0xa1890000a190},
		dm{re: -0x0001, si: 0xa1900000a19e, ne: 0xa1900000a19e},
		dm{re: -0x0001, si: 0xa19e0000a1a9, ne: 0xa1a90000a1b4},
		dm{re: -0x0001, si: 0xa1b40000a1be, ne: 0xa1be0000a1c8},
		dm{re: 0x0b68, si: 0x00000000, ne: 0xa1c80000a1d5},
		dm{re: -0x0001, si: 0xa1d50000a1de, ne: 0xa1de0000a1e7},
		dm{re: -0x0001, si: 0xa1e70000a1f4, ne: 0xa1f40000a201},
		dm{re: 0x0b69, si: 0x00000000, ne: 0xa2010000a209},
		dm{re: 0x0b6a, si: 0x00000000, ne: 0xa2090000a216},
		dm{re: 0x0b6b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xa21b0000a222, ne: 0xa2220000a228},
		dm{re: -0x0001, si: 0xa2280000a230, ne: 0xa2300000a235},
		dm{re: -0x0001, si: 0xa2350000a23c, ne: 0xa23c0000a244},
		dm{re: -0x0001, si: 0xa2440000a24b, ne: 0xa24b0000a252},
		dm{re: -0x0001, si: 0xa2520000a25b, ne: 0xa25b0000a25f},
		dm{re: -0x0001, si: 0xa25f0000a269, ne: 0xa2690000a271},
		dm{re: -0x0001, si: 0xa2780000a284, ne: 0xa2780000a284},
		dm{re: -0x0001, si: 0xa2840000a28f, ne: 0xa2840000a28f},
		dm{re: -0x0001, si: 0xa28f0000a29b, ne: 0xa29b0000a2a3},
		dm{re: -0x0001, si: 0xa2a30000a2ae, ne: 0xa2a30000a2ae},
		dm{re: -0x0001, si: 0xa2ae0000a2bc, ne: 0xa2ae0000a2bc},
		dm{re: -0x0001, si: 0xa2bc0000a2c9, ne: 0xa2bc0000a2c9},
		dm{re: 0x0b6e, si: 0x00000000, ne: 0xa2c90000a2d6},
		dm{re: -0x0001, si: 0xa29b0000a2a3, ne: 0xa29b0000a2a3},
		dm{re: -0x0001, si: 0xa2d60000a2df, ne: 0xa2d60000a2df},
		dm{re: 0x0b6f, si: 0x00000000, ne: 0xa2df0000a2ed},
		dm{re: -0x0001, si: 0xa2ed0000a2fc, ne: 0xa2ed0000a2fc},
		dm{re: -0x0001, si: 0xa2fc0000a30e, ne: 0xa2fc0000a30e},
		dm{re: -0x0001, si: 0xa30e0000a31c, ne: 0xa30e0000a31c},
		dm{re: -0x0001, si: 0xa31c0000a327, ne: 0xa31c0000a327},
		dm{re: -0x0001, si: 0xa3270000a335, ne: 0xa3270000a335},
		dm{re: 0x0b70, si: 0x00000000, ne: 0xa3350000a341},
		dm{re: -0x0001, si: 0xa3410000a349, ne: 0xa3490000a352},
		dm{re: -0x0001, si: 0xa3520000a35d, ne: 0xa35d0000a373},
		dm{re: -0x0001, si: 0xa3730000a37a, ne: 0xa37a0000a38b},
		dm{re: 0x0b71, si: 0x00000000, ne: 0xa38b0000a39b},
		dm{re: -0x0001, si: 0xa39b0000a3aa, ne: 0xa3aa0000a3ba},
		dm{re: 0x0b72, si: 0x00000000, ne: 0xa3ba0000a3c6},
		dm{re: -0x0001, si: 0xa3c60000a3d7, ne: 0xa3c60000a3d7},
		dm{re: -0x0001, si: 0xa3d70000a3e7, ne: 0xa3d70000a3e7},
		dm{re: -0x0001, si: 0xa3e70000a3f5, ne: 0xa3e70000a3f5},
		dm{re: 0x0b73, si: 0x00000000, ne: 0xa3f50000a404},
		dm{re: -0x0001, si: 0xa4040000a416, ne: 0xa4040000a416},
		dm{re: -0x0001, si: 0xa4160000a42a, ne: 0xa4160000a42a},
		dm{re: 0x0b74, si: 0x00000000, ne: 0xa42a0000a43a},
		dm{re: -0x0001, si: 0xa43a0000a441, ne: 0xa4410000a452},
		dm{re: -0x0001, si: 0xa4520000a45b, ne: 0xa45b0000a464},
		dm{re: -0x0001, si: 0xa4640000a46d, ne: 0xa4640000a46d},
		dm{re: 0x0b75, si: 0x00000000, ne: 0xa46d0000a47b},
		dm{re: 0x0b76, si: 0x00000000, ne: 0xa47b0000a48a},
		dm{re: 0x0b77, si: 0x00000000, ne: 0xa48a0000a498},
		dm{re: 0x0b78, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b79, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b7a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b7b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b7c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b7e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b7f, si: 0x00000000, ne: 0xa49c0000a49e},
		dm{re: 0x0b80, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b81, si: 0x00000000, ne: 0xa49e0000a4a6},
		dm{re: 0x0b82, si: 0x00000000, ne: 0xa4a60000a4ab},
		dm{re: -0x0001, si: 0xa4b00000a4bb, ne: 0xa4b00000a4bb},
		dm{re: -0x0001, si: 0xa4bb0000a4c7, ne: 0xa4bb0000a4c7},
		dm{re: 0x0b84, si: 0x00000000, ne: 0xa4c70000a4d3},
		dm{re: 0x0b85, si: 0x00000000, ne: 0xa4d30000a4e1},
		dm{re: 0x0b86, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xa4e70000a4ee, ne: 0xa4ee0000a4fa},
		dm{re: 0x0b88, si: 0x00000000, ne: 0xa50b0000a514},
		dm{re: 0x0b89, si: 0x00000000, ne: 0xa5140000a522},
		dm{re: -0x0001, si: 0xa5220000a52a, ne: 0xa52a0000a533},
		dm{re: -0x0001, si: 0xa5330000a53d, ne: 0x3ba000003bc},
		dm{re: -0x0001, si: 0xa53d0000a547, ne: 0xa5470000a549},
		dm{re: -0x0001, si: 0xa5490000a552, ne: 0x9c2600009c27},
		dm{re: -0x0001, si: 0xa5520000a560, ne: 0xa5600000a566},
		dm{re: -0x0001, si: 0xa5660000a56f, ne: 0x7be600007be7},
		dm{re: 0x0b8b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b8c, si: 0x00000000, ne: 0xa5760000a57d},
		dm{re: 0x0b8d, si: 0x00000000, ne: 0x645300006458},
		dm{re: 0x0b8e, si: 0x00000000, ne: 0xa57d0000a580},
		dm{re: 0x0b8f, si: 0x00000000, ne: 0xa5800000a584},
		dm{re: 0x0b90, si: 0x00000000, ne: 0xa5840000a589},
		dm{re: 0x0b91, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0xa5910000a5a4},
		dm{re: 0x0b94, si: 0x00000000, ne: 0xa5a90000a5b4},
		dm{re: 0x0b95, si: 0x00000000, ne: 0xa5b40000a5c5},
		dm{re: 0x0b96, si: 0x00000000, ne: 0xa5c50000a5d8},
		dm{re: 0x0b97, si: 0x00000000, ne: 0xa5d80000a5e7},
		dm{re: -0x0001, si: 0xa5e70000a5f1, ne: 0xa5f10000a601},
		dm{re: 0x0b98, si: 0x00000000, ne: 0xa6010000a606},
		dm{re: 0x0b99, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b9b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b9c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0b9e, si: 0x00000000, ne: 0xa6190000a623},
		dm{re: 0x0ba0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ba1, si: 0x00000000, ne: 0xa6270000a62d},
		dm{re: 0x0ba2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ba4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ba5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ba7, si: 0x00000000, ne: 0xa6390000a63e},
		dm{re: 0x0ba8, si: 0x00000000, ne: 0xa63e0000a642},
		dm{re: 0x0ba9, si: 0x00000000, ne: 0xa6420000a645},
		dm{re: 0x0baa, si: 0x00000000, ne: 0xa6420000a645},
		dm{re: 0x0bab, si: 0x00000000, ne: 0xa6450000a64a},
		dm{re: 0x0bac, si: 0x00000000, ne: 0xa6420000a645},
		dm{re: 0x0bad, si: 0x00000000, ne: 0xa6420000a645},
		dm{re: 0x0bae, si: 0x00000000, ne: 0xa64a0000a64e},
		dm{re: 0x0baf, si: 0x00000000, ne: 0xa64e0000a654},
		dm{re: 0x0bb0, si: 0x00000000, ne: 0xa6420000a645},
		dm{re: 0x0bb1, si: 0x00000000, ne: 0xa6540000a659},
		dm{re: 0x0bb2, si: 0x00000000, ne: 0xa6590000a65e},
		dm{re: 0x0bb3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0bb4, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xa6630000a666, ne: 0xa6630000a666},
		dm{re: 0x0bb6, si: 0x00000000, ne: 0xa6660000a66e},
		dm{re: 0x0bb7, si: 0x00000000, ne: 0xa66e0000a673},
		dm{re: 0x0bb8, si: 0x00000000, ne: 0xa6730000a682},
		dm{re: 0x0bb9, si: 0x00000000, ne: 0xa6820000a68d},
		dm{re: 0x0bba, si: 0x00000000, ne: 0xa68d0000a696},
		dm{re: 0x0bbb, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0bbc, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0bbd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0bbf, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0bc0, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xa6a40000a6aa, ne: 0xa6aa0000a6b4},
		dm{re: -0x0001, si: 0xa6b40000a6b8, ne: 0xa6b80000a6c1},
		dm{re: 0x0bc2, si: 0x00000000, ne: 0xa6c10000a6ca},
		dm{re: -0x0001, si: 0xa6ca0000a6ce, ne: 0xa6ce0000a6d8},
		dm{re: 0x0bc3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0bc4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0bc6, si: 0x00000000, ne: 0xa6de0000a6e5},
		dm{re: 0x0bc7, si: 0x00000000, ne: 0xa6e50000a6eb},
		dm{re: 0x0bc8, si: 0x00000000, ne: 0xa6eb0000a6f2},
		dm{re: 0x0bc9, si: 0x00000000, ne: 0xa6f20000a6fb},
		dm{re: 0x0bca, si: 0x00000000, ne: 0xa6fb0000a701},
		dm{re: 0x0bcb, si: 0x00000000, ne: 0xa7010000a707},
		dm{re: 0x0bcc, si: 0x00000000, ne: 0x7cca00007cd1},
		dm{re: 0x0bcd, si: 0x00000000, ne: 0xa7070000a70e},
		dm{re: 0x0bce, si: 0x00000000, ne: 0xa70e0000a714},
		dm{re: 0x0bcf, si: 0x00000000, ne: 0xa7140000a71b},
		dm{re: 0x0bd0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0bd1, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0xa72e0000a739},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xa7510000a75a, ne: 0xa75a0000a765},
		dm{re: -0x0001, si: 0xa7650000a770, ne: 0xa7700000a77b},
		dm{re: 0x0bd7, si: 0x00000000, ne: 0xa77b0000a782},
		dm{re: -0x0001, si: 0xa7820000a792, ne: 0xa7820000a792},
		dm{re: 0x0bd8, si: 0x00000000, ne: 0xa7920000a79a},
		dm{re: 0x0bd9, si: 0x00000000, ne: 0xa79a0000a7a6},
		dm{re: 0x0bda, si: 0x00000000, ne: 0xa7a60000a7b1},
		dm{re: 0x0bdb, si: 0x00000000, ne: 0xa7b10000a7b8},
		dm{re: 0x0bdc, si: 0x00000000, ne: 0xa7b80000a7c1},
		dm{re: 0x0bdd, si: 0x00000000, ne: 0xa7c10000a7c7},
		dm{re: 0x0bde, si: 0x00000000, ne: 0xa7c70000a7d0},
		dm{re: 0x0bdf, si: 0x00000000, ne: 0xa7d00000a7db},
		dm{re: 0x0be0, si: 0x00000000, ne: 0xa7db0000a7e6},
		dm{re: 0x0be1, si: 0x00000000, ne: 0xa7e60000a7ee},
		dm{re: 0x0be2, si: 0x00000000, ne: 0xa7ee0000a7f5},
		dm{re: 0x0be3, si: 0x00000000, ne: 0xa7f50000a7fb},
		dm{re: 0x0be4, si: 0x00000000, ne: 0xa7fb0000a809},
		dm{re: 0x0be5, si: 0x00000000, ne: 0xa8090000a817},
		dm{re: 0x0be6, si: 0x00000000, ne: 0xa7fb0000a809},
		dm{re: 0x0be7, si: 0x00000000, ne: 0xa8170000a824},
		dm{re: 0x0be8, si: 0x00000000, ne: 0xa8240000a831},
		dm{re: 0x0be9, si: 0x00000000, ne: 0xa8310000a83e},
		dm{re: 0x0bea, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0bee, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0bef, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0bf0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0bf1, si: 0x00000000, ne: 0xa8520000a85e},
		dm{re: 0x0bf3, si: 0x00000000, ne: 0xa8650000a86b},
		dm{re: 0x0bf4, si: 0x00000000, ne: 0xa86b0000a871},
		dm{re: 0x0bf5, si: 0x00000000, ne: 0xa8710000a877},
		dm{re: 0x0bf6, si: 0x00000000, ne: 0xa8770000a87d},
		dm{re: 0x0bf7, si: 0x00000000, ne: 0xa87d0000a881},
		dm{re: 0x0bf8, si: 0x00000000, ne: 0xa8810000a888},
		dm{re: 0x0bf9, si: 0x00000000, ne: 0xa8880000a88f},
		dm{re: 0x0bfa, si: 0x00000000, ne: 0xa88f0000a896},
		dm{re: 0x0bfb, si: 0x00000000, ne: 0xa8960000a89d},
		dm{re: 0x0bfc, si: 0x00000000, ne: 0xa89d0000a8a4},
		dm{re: 0x0bfd, si: 0x00000000, ne: 0xa8a40000a8a9},
		dm{re: 0x0bfe, si: 0x00000000, ne: 0xa8a90000a8b5},
		dm{re: 0x0bff, si: 0x00000000, ne: 0xa8b50000a8c0},
		dm{re: 0x0c00, si: 0x00000000, ne: 0xa8c00000a8c8},
		dm{re: 0x0c01, si: 0x00000000, ne: 0xa8c80000a8d0},
		dm{re: 0x0c02, si: 0x00000000, ne: 0xa8d00000a8da},
		dm{re: 0x0c03, si: 0x00000000, ne: 0xa8da0000a8df},
		dm{re: 0x0c04, si: 0x00000000, ne: 0xa8df0000a8e9},
		dm{re: 0x0c05, si: 0x00000000, ne: 0xa8e90000a8f3},
		dm{re: -0x0001, si: 0xa8f30000a8f8, ne: 0xa8f80000a902},
		dm{re: -0x0001, si: 0xa9020000a907, ne: 0xa9070000a912},
		dm{re: -0x0001, si: 0xa9120000a918, ne: 0xa9180000a922},
		dm{re: 0x0c06, si: 0x00000000, ne: 0xa9220000a92c},
		dm{re: -0x0001, si: 0xa92c0000a931, ne: 0xa9310000a93c},
		dm{re: 0x0c07, si: 0x00000000, ne: 0xa93c0000a945},
		dm{re: 0x0c08, si: 0x00000000, ne: 0xa9450000a952},
		dm{re: 0x0c09, si: 0x00000000, ne: 0xa9520000a961},
		dm{re: -0x0001, si: 0xa9610000a966, ne: 0xa9660000a978},
		dm{re: -0x0001, si: 0xa9780000a97f, ne: 0xa97f0000a985},
		dm{re: -0x0001, si: 0xa9850000a98a, ne: 0xa98a0000a993},
		dm{re: 0x0c0a, si: 0x00000000, ne: 0xa9930000a99a},
		dm{re: 0x0c0b, si: 0x00000000, ne: 0xa99a0000a9a0},
		dm{re: 0x0c0c, si: 0x00000000, ne: 0xa9a00000a9aa},
		dm{re: 0x0c0d, si: 0x00000000, ne: 0xa9aa0000a9bb},
		dm{re: 0x0c0e, si: 0x00000000, ne: 0xa9bb0000a9c2},
		dm{re: 0x0c0f, si: 0x00000000, ne: 0xa9c20000a9cc},
		dm{re: 0x0c10, si: 0x00000000, ne: 0xa9cc0000a9d6},
		dm{re: 0x0c11, si: 0x00000000, ne: 0xa9d60000a9e3},
		dm{re: 0x0c12, si: 0x00000000, ne: 0xa9e30000a9ed},
		dm{re: 0x0c13, si: 0x00000000, ne: 0xa9ed0000a9f7},
		dm{re: 0x0c14, si: 0x00000000, ne: 0xa9f70000aa01},
		dm{re: 0x0c15, si: 0x00000000, ne: 0xaa010000aa0b},
		dm{re: 0x0c16, si: 0x00000000, ne: 0xaa0b0000aa10},
		dm{re: 0x0c17, si: 0x00000000, ne: 0xaa100000aa17},
		dm{re: 0x0c18, si: 0x00000000, ne: 0xaa170000aa1e},
		dm{re: 0x0c19, si: 0x00000000, ne: 0xaa1e0000aa2b},
		dm{re: 0x0c1a, si: 0x00000000, ne: 0xaa2b0000aa34},
		dm{re: 0x0c1b, si: 0x00000000, ne: 0xaa340000aa40},
		dm{re: 0x0c1c, si: 0x00000000, ne: 0xaa400000aa4c},
		dm{re: 0x0c1d, si: 0x00000000, ne: 0xaa4c0000aa58},
		dm{re: 0x0c1e, si: 0x00000000, ne: 0xaa580000aa63},
		dm{re: 0x0c1f, si: 0x00000000, ne: 0xaa630000aa6d},
		dm{re: 0x0c20, si: 0x00000000, ne: 0xaa6d0000aa72},
		dm{re: 0x0c21, si: 0x00000000, ne: 0xaa720000aa7d},
		dm{re: 0x0c22, si: 0x00000000, ne: 0xaa7d0000aa87},
		dm{re: 0x0c23, si: 0x00000000, ne: 0xaa870000aa91},
		dm{re: 0x0c24, si: 0x00000000, ne: 0xaa910000aa9b},
		dm{re: 0x0c25, si: 0x00000000, ne: 0xaa9b0000aaa5},
		dm{re: 0x0c26, si: 0x00000000, ne: 0xaaa50000aaaf},
		dm{re: 0x0c27, si: 0x00000000, ne: 0xaaaf0000aab9},
		dm{re: 0x0c28, si: 0x00000000, ne: 0xaab90000aac5},
		dm{re: 0x0c29, si: 0x00000000, ne: 0xaac50000aacb},
		dm{re: 0x0c2a, si: 0x00000000, ne: 0xaacb0000aad4},
		dm{re: 0x0c2b, si: 0x00000000, ne: 0xaad40000aadd},
		dm{re: 0x0c2c, si: 0x00000000, ne: 0xaadd0000aae1},
		dm{re: 0x0c2d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0c2e, si: 0x00000000, ne: 0xaae10000aaef},
		dm{re: 0x0c2f, si: 0x00000000, ne: 0xaaef0000aaff},
		dm{re: -0x0001, si: 0xaaff0000ab04, ne: 0xab040000ab09},
		dm{re: 0x0c30, si: 0x00000000, ne: 0xab090000ab0e},
		dm{re: 0x0c31, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0c32, si: 0x00000000, ne: 0xab0e0000ab13},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xab1d0000ab25, ne: 0xab250000ab2d},
		dm{re: -0x0001, si: 0xab2d0000ab36, ne: 0xab2d0000ab36},
		dm{re: -0x0001, si: 0xab360000ab3c, ne: 0xab3c0000ab42},
		dm{re: -0x0001, si: 0xab420000ab4b, ne: 0xab4b0000ab54},
		dm{re: 0x0c36, si: 0x00000000, ne: 0xab590000ab65},
		dm{re: 0x0c37, si: 0x00000000, ne: 0xab650000ab70},
		dm{re: 0x0c38, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0c3b, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x0c3c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0c3e, si: 0x00000000, ne: 0xab7e0000ab91},
		dm{re: 0x0c3f, si: 0x00000000, ne: 0xab910000ab94},
		dm{re: 0x0c40, si: 0x00000000, ne: 0xab940000ab97},
		dm{re: 0x0c41, si: 0x00000000, ne: 0xab970000ab9a},
		dm{re: -0x0001, si: 0xab9a0000aba1, ne: 0xaba10000aba4},
		dm{re: -0x0001, si: 0xaba40000abad, ne: 0xabad0000abb4},
		dm{re: -0x0001, si: 0xabb40000abbb, ne: 0xabbb0000abbe},
		dm{re: -0x0001, si: 0xabbe0000abc5, ne: 0xabc50000abc8},
		dm{re: -0x0001, si: 0xabc80000abcf, ne: 0xabcf0000abd3},
		dm{re: -0x0001, si: 0xabd30000abda, ne: 0xabda0000abdd},
		dm{re: -0x0001, si: 0xabdd0000abe7, ne: 0xabe70000abf0},
		dm{re: -0x0001, si: 0xabf00000abf8, ne: 0x6b3500006b3c},
		dm{re: -0x0001, si: 0xabf80000ac02, ne: 0xac020000ac08},
		dm{re: -0x0001, si: 0xac080000ac11, ne: 0xac110000ac1f},
		dm{re: -0x0001, si: 0xac1f0000ac27, ne: 0xac270000ac36},
		dm{re: -0x0001, si: 0xac360000ac3d, ne: 0xac3d0000ac46},
		dm{re: -0x0001, si: 0xac460000ac4d, ne: 0xac4d0000ac56},
		dm{re: 0x0c42, si: 0x00000000, ne: 0xac560000ac58},
		dm{re: 0x0c43, si: 0x00000000, ne: 0xac580000ac5f},
		dm{re: 0x0c44, si: 0x00000000, ne: 0xac5f0000ac61},
		dm{re: -0x0001, si: 0xac610000ac68, ne: 0xac680000ac6b},
		dm{re: 0x0c45, si: 0x00000000, ne: 0xac6b0000ac74},
		dm{re: 0x0c46, si: 0x00000000, ne: 0xac740000ac7b},
		dm{re: -0x0001, si: 0xac7b0000ac82, ne: 0xac820000ac8b},
		dm{re: -0x0001, si: 0xac8b0000ac92, ne: 0xac920000ac95},
		dm{re: 0x0c47, si: 0x00000000, ne: 0xac950000ac97},
		dm{re: 0x0c48, si: 0x00000000, ne: 0xac970000ac9a},
		dm{re: 0x0c49, si: 0x00000000, ne: 0xac9a0000aca3},
		dm{re: -0x0001, si: 0xaca30000acaa, ne: 0xacaa0000acad},
		dm{re: -0x0001, si: 0xacad0000acb4, ne: 0xacb40000acbb},
		dm{re: 0x0c4a, si: 0x00000000, ne: 0xacbb0000acbd},
		dm{re: 0x0c4b, si: 0x00000000, ne: 0xacbd0000acc2},
		dm{re: 0x0c4c, si: 0x00000000, ne: 0xacc20000acc4},
		dm{re: -0x0001, si: 0xacc40000accb, ne: 0xaccb0000acd1},
		dm{re: -0x0001, si: 0xacd10000acd8, ne: 0xacd80000acde},
		dm{re: 0x0c4d, si: 0x00000000, ne: 0xacde0000ace4},
		dm{re: -0x0001, si: 0xace40000aceb, ne: 0xaceb0000acf3},
		dm{re: 0x0c4e, si: 0x00000000, ne: 0xacf30000acfd},
		dm{re: 0x0c4f, si: 0x00000000, ne: 0x821500008217},
		dm{re: -0x0001, si: 0xacfd0000ad04, ne: 0xad040000ad0d},
		dm{re: -0x0001, si: 0xad0d0000ad14, ne: 0xad140000ad1d},
		dm{re: 0x0c50, si: 0x00000000, ne: 0xad040000ad0d},
		dm{re: 0x0c51, si: 0x00000000, ne: 0xad1d0000ad2c},
		dm{re: 0x0c52, si: 0x00000000, ne: 0xad2c0000ad2f},
		dm{re: -0x0001, si: 0xad2f0000ad36, ne: 0xad360000ad39},
		dm{re: 0x0c53, si: 0x00000000, ne: 0xad390000ad3c},
		dm{re: -0x0001, si: 0xad3c0000ad43, ne: 0xad430000ad46},
		dm{re: -0x0001, si: 0xad460000ad4c, ne: 0xad4c0000ad56},
		dm{re: -0x0001, si: 0xad560000ad5d, ne: 0xad5d0000ad64},
		dm{re: 0x0c54, si: 0x00000000, ne: 0xad640000ad69},
		dm{re: -0x0001, si: 0xad690000ad70, ne: 0xad700000ad76},
		dm{re: 0x0c55, si: 0x00000000, ne: 0xad760000ad7d},
		dm{re: 0x0c56, si: 0x00000000, ne: 0xad7d0000ad84},
		dm{re: 0x0c57, si: 0x00000000, ne: 0xad840000ad8a},
		dm{re: 0x0c58, si: 0x00000000, ne: 0xad8a0000ad8f},
		dm{re: 0x0c59, si: 0x00000000, ne: 0x9a0700009a0b},
		dm{re: 0x0c5a, si: 0x00000000, ne: 0xad8f0000ad96},
		dm{re: 0x0c5b, si: 0x00000000, ne: 0xad960000ad9a},
		dm{re: 0x0c5c, si: 0x00000000, ne: 0xad9a0000ad9f},
		dm{re: -0x0001, si: 0xad9f0000ada8, ne: 0xada80000adac},
		dm{re: 0x0c5d, si: 0x00000000, ne: 0xadac0000adb0},
		dm{re: -0x0001, si: 0xadb00000adb8, ne: 0xadb80000adbd},
		dm{re: 0x0c5e, si: 0x00000000, ne: 0xadbd0000adc8},
		dm{re: -0x0001, si: 0xadc80000adcf, ne: 0xadcf0000add8},
		dm{re: 0x0c5f, si: 0x00000000, ne: 0xadd80000ade5},
		dm{re: -0x0001, si: 0xade50000aded, ne: 0xaded0000adfa},
		dm{re: 0x0c60, si: 0x00000000, ne: 0xadfa0000ae07},
		dm{re: -0x0001, si: 0xae070000ae0f, ne: 0xae0f0000ae21},
		dm{re: -0x0001, si: 0xae210000ae28, ne: 0xae280000ae35},
		dm{re: 0x0c61, si: 0x00000000, ne: 0xae350000ae42},
		dm{re: -0x0001, si: 0xae420000ae49, ne: 0xae490000ae53},
		dm{re: -0x0001, si: 0xae530000ae5a, ne: 0xae5a0000ae64},
		dm{re: 0x0c62, si: 0x00000000, ne: 0xae640000ae71},
		dm{re: 0x0c63, si: 0x00000000, ne: 0xae710000ae7e},
		dm{re: 0x0c64, si: 0x00000000, ne: 0xae7e0000ae8b},
		dm{re: 0x0c65, si: 0x00000000, ne: 0xae8b0000ae9c},
		dm{re: 0x0c66, si: 0x00000000, ne: 0xae9c0000aead},
		dm{re: -0x0001, si: 0xaead0000aeb2, ne: 0xaeb20000aec6},
		dm{re: 0x0c67, si: 0x00000000, ne: 0xaec60000aec9},
		dm{re: 0x0c68, si: 0x00000000, ne: 0xaec90000aed6},
		dm{re: -0x0001, si: 0xaed60000aedb, ne: 0xaedb0000aee3},
		dm{re: -0x0001, si: 0xaee30000aeea, ne: 0xaeea0000aef2},
		dm{re: 0x0c69, si: 0x00000000, ne: 0xaef20000aefa},
		dm{re: 0x0c6a, si: 0x00000000, ne: 0xaefa0000af07},
		dm{re: 0x0c6b, si: 0x00000000, ne: 0xaf070000af09},
		dm{re: 0x0c6c, si: 0x00000000, ne: 0xaf090000af0c},
		dm{re: 0x0c6d, si: 0x00000000, ne: 0xaf0c0000af0f},
		dm{re: 0x0c6e, si: 0x00000000, ne: 0xaf0f0000af11},
		dm{re: 0x0c6f, si: 0x00000000, ne: 0xaf110000af13},
		dm{re: 0x0c70, si: 0x00000000, ne: 0xaf130000af16},
		dm{re: 0x0c71, si: 0x00000000, ne: 0xaf160000af19},
		dm{re: 0x0c72, si: 0x00000000, ne: 0xaf190000af25},
		dm{re: 0x0c73, si: 0x00000000, ne: 0xaf250000af2a},
		dm{re: 0x0c74, si: 0x00000000, ne: 0xaf2a0000af31},
		dm{re: -0x0001, si: 0xaf310000af38, ne: 0xaf380000af3f},
		dm{re: 0x0c75, si: 0x00000000, ne: 0xaf3f0000af48},
		dm{re: 0x0c76, si: 0x00000000, ne: 0xaf480000af54},
		dm{re: 0x0c77, si: 0x00000000, ne: 0xaf540000af5b},
		dm{re: 0x0c78, si: 0x00000000, ne: 0xaf5b0000af62},
		dm{re: 0x0c79, si: 0x00000000, ne: 0xaf620000af69},
		dm{re: 0x0c7a, si: 0x00000000, ne: 0xaf690000af75},
		dm{re: 0x0c7b, si: 0x00000000, ne: 0xaf750000af7c},
		dm{re: 0x0c7c, si: 0x00000000, ne: 0xaf7c0000af83},
		dm{re: 0x0c7d, si: 0x00000000, ne: 0xaf830000af8a},
		dm{re: 0x0c7e, si: 0x00000000, ne: 0xaf8a0000af92},
		dm{re: -0x0001, si: 0xaf920000af99, ne: 0xaf990000afa0},
		dm{re: -0x0001, si: 0xafa00000afa9, ne: 0xafa90000afb2},
		dm{re: 0x0c7f, si: 0x00000000, ne: 0xafb20000afbd},
		dm{re: 0x0c80, si: 0x00000000, ne: 0xafbd0000afcd},
		dm{re: 0x0c81, si: 0x00000000, ne: 0xafcd0000afdc},
		dm{re: -0x0001, si: 0xafdc0000afe3, ne: 0xafe30000afe6},
		dm{re: -0x0001, si: 0xafe60000afef, ne: 0xafef0000aff2},
		dm{re: 0x0c82, si: 0x00000000, ne: 0xaff20000aff5},
		dm{re: -0x0001, si: 0xaff50000affd, ne: 0xaffd0000b005},
		dm{re: -0x0001, si: 0xb0050000b00d, ne: 0xb00d0000b00e},
		dm{re: -0x0001, si: 0xb00e0000b016, ne: 0xb0160000b018},
		dm{re: 0x0c83, si: 0x00000000, ne: 0xb0180000b01d},
		dm{re: 0x0c84, si: 0x00000000, ne: 0xb01d0000b025},
		dm{re: 0x0c85, si: 0x00000000, ne: 0xb0250000b02c},
		dm{re: -0x0001, si: 0xb02c0000b034, ne: 0xb0340000b03a},
		dm{re: 0x0c86, si: 0x00000000, ne: 0xb03a0000b042},
		dm{re: 0x0c87, si: 0x00000000, ne: 0xb0420000b04b},
		dm{re: -0x0001, si: 0xb04b0000b054, ne: 0xb0540000b05d},
		dm{re: 0x0c88, si: 0x00000000, ne: 0xb05d0000b05f},
		dm{re: 0x0c89, si: 0x00000000, ne: 0xb05f0000b062},
		dm{re: 0x0c8a, si: 0x00000000, ne: 0xb0620000b065},
		dm{re: 0x0c8b, si: 0x00000000, ne: 0xb0650000b068},
		dm{re: -0x0001, si: 0xb0680000b070, ne: 0xb0700000b073},
		dm{re: -0x0001, si: 0xb0730000b07c, ne: 0xb07c0000b07f},
		dm{re: -0x0001, si: 0xb07f0000b088, ne: 0xb0880000b08f},
		dm{re: -0x0001, si: 0xb08f0000b099, ne: 0xb0990000b09c},
		dm{re: -0x0001, si: 0xb09c0000b0a5, ne: 0xb0a50000b0a8},
		dm{re: -0x0001, si: 0xb0a80000b0af, ne: 0xb0af0000b0bc},
		dm{re: -0x0001, si: 0xb0bc0000b0c3, ne: 0xb0c30000b0ca},
		dm{re: -0x0001, si: 0xb0ca0000b0d1, ne: 0xb0d10000b0d4},
		dm{re: -0x0001, si: 0xb0d40000b0db, ne: 0xb0db0000b0df},
		dm{re: -0x0001, si: 0xb0df0000b0e6, ne: 0xb0df0000b0e6},
		dm{re: -0x0001, si: 0xb0e60000b0ee, ne: 0xada80000adac},
		dm{re: -0x0001, si: 0xb0ee0000b0f7, ne: 0xb0f70000b0fb},
		dm{re: -0x0001, si: 0xb0fb0000b103, ne: 0xb1030000b10c},
		dm{re: 0x0c8c, si: 0x00000000, ne: 0xa14b0000a14d},
		dm{re: 0x0c8d, si: 0x00000000, ne: 0xb10c0000b112},
		dm{re: 0x0c8e, si: 0x00000000, ne: 0xb1120000b11b},
		dm{re: -0x0001, si: 0xb11b0000b122, ne: 0xb1220000b125},
		dm{re: 0x0c8f, si: 0x00000000, ne: 0xb1250000b129},
		dm{re: -0x0001, si: 0xb1290000b130, ne: 0xb1300000b134},
		dm{re: -0x0001, si: 0xb1340000b13b, ne: 0xb13b0000b13d},
		dm{re: -0x0001, si: 0xb13d0000b144, ne: 0xb1440000b148},
		dm{re: 0x0c90, si: 0x00000000, ne: 0xb1480000b14b},
		dm{re: -0x0001, si: 0xb14b0000b150, ne: 0xb1500000b155},
		dm{re: -0x0001, si: 0xb1550000b15a, ne: 0xb15a0000b15e},
		dm{re: 0x0c91, si: 0x00000000, ne: 0x59ff00005a01},
		dm{re: -0x0001, si: 0xb15e0000b167, ne: 0xb1670000b169},
		dm{re: -0x0001, si: 0xb1690000b171, ne: 0xb1710000b17a},
		dm{re: 0x0c92, si: 0x00000000, ne: 0xb17a0000b180},
		dm{re: 0x0c93, si: 0x00000000, ne: 0xb1800000b188},
		dm{re: 0x0c94, si: 0x00000000, ne: 0xb1880000b190},
		dm{re: 0x0c95, si: 0x00000000, ne: 0xb1900000b199},
		dm{re: 0x0c96, si: 0x00000000, ne: 0xb1990000b1a2},
		dm{re: 0x0c97, si: 0x00000000, ne: 0xb1a20000b1ab},
		dm{re: -0x0001, si: 0xb1ab0000b1b3, ne: 0xb1b30000b1bd},
		dm{re: -0x0001, si: 0xb1bd0000b1c5, ne: 0xb1c50000b1c8},
		dm{re: -0x0001, si: 0xb1c80000b1d0, ne: 0xb1d00000b1d6},
		dm{re: 0x0c98, si: 0x00000000, ne: 0xb1d60000b1d9},
		dm{re: 0x0c99, si: 0x00000000, ne: 0xb1d90000b1e2},
		dm{re: -0x0001, si: 0xb1e20000b1ec, ne: 0xb1ec0000b1ef},
		dm{re: 0x0c9a, si: 0x00000000, ne: 0xb1ef0000b1f4},
		dm{re: 0x0c9b, si: 0x00000000, ne: 0xb1f40000b1f8},
		dm{re: 0x0c9c, si: 0x00000000, ne: 0xb1f80000b201},
		dm{re: 0x0c9d, si: 0x00000000, ne: 0xaec60000aec9},
		dm{re: 0x0c9e, si: 0x00000000, ne: 0xb2010000b204},
		dm{re: 0x0c9f, si: 0x00000000, ne: 0xb2040000b20b},
		dm{re: 0x0ca0, si: 0x00000000, ne: 0xb20b0000b213},
		dm{re: 0x0ca1, si: 0x00000000, ne: 0x381200003815},
		dm{re: 0x0ca2, si: 0x00000000, ne: 0xb2130000b21c},
		dm{re: 0x0ca3, si: 0x00000000, ne: 0xb21c0000b228},
		dm{re: -0x0001, si: 0xb2280000b22f, ne: 0xb22f0000b238},
		dm{re: 0x0ca4, si: 0x00000000, ne: 0xb2380000b244},
		dm{re: 0x0ca5, si: 0x00000000, ne: 0xb2440000b250},
		dm{re: 0x0ca6, si: 0x00000000, ne: 0xb2500000b253},
		dm{re: 0x0ca7, si: 0x00000000, ne: 0xb2530000b261},
		dm{re: 0x0ca8, si: 0x00000000, ne: 0xb2610000b26f},
		dm{re: 0x0ca9, si: 0x00000000, ne: 0xb26f0000b271},
		dm{re: -0x0001, si: 0xb2710000b279, ne: 0xb2790000b282},
		dm{re: 0x0caa, si: 0x00000000, ne: 0xb2820000b284},
		dm{re: 0x0cab, si: 0x00000000, ne: 0xb2840000b286},
		dm{re: -0x0001, si: 0xb2860000b28d, ne: 0xb1f40000b1f8},
		dm{re: 0x0cac, si: 0x00000000, ne: 0xb28d0000b290},
		dm{re: 0x0cad, si: 0x00000000, ne: 0xb2900000b29a},
		dm{re: 0x0cae, si: 0x00000000, ne: 0xad2c0000ad2f},
		dm{re: 0x0caf, si: 0x00000000, ne: 0xb29a0000b2a2},
		dm{re: 0x0cb0, si: 0x00000000, ne: 0xb2a20000b2a5},
		dm{re: 0x0cb1, si: 0x00000000, ne: 0xaff20000aff5},
		dm{re: 0x0cb2, si: 0x00000000, ne: 0xb2a50000b2a8},
		dm{re: 0x0cb3, si: 0x00000000, ne: 0xb2a80000b2ab},
		dm{re: 0x0cb4, si: 0x00000000, ne: 0xb2ab0000b2af},
		dm{re: 0x0cb5, si: 0x00000000, ne: 0xb2af0000b2b2},
		dm{re: 0x0cb6, si: 0x00000000, ne: 0xb2b20000b2b5},
		dm{re: 0x0cb7, si: 0x00000000, ne: 0xb2b50000b2bd},
		dm{re: 0x0cb8, si: 0x00000000, ne: 0xb2bd0000b2c0},
		dm{re: 0x0cb9, si: 0x00000000, ne: 0xb2c00000b2c3},
		dm{re: 0x0cba, si: 0x00000000, ne: 0xb2c30000b2c6},
		dm{re: 0x0cbb, si: 0x00000000, ne: 0xb2c60000b2c8},
		dm{re: -0x0001, si: 0xb2c80000b2cf, ne: 0xb0990000b09c},
		dm{re: 0x0cbc, si: 0x00000000, ne: 0xb2cf0000b2d1},
		dm{re: 0x0cbd, si: 0x00000000, ne: 0xb2d10000b2d8},
		dm{re: 0x0cbe, si: 0x00000000, ne: 0xb2d80000b2e1},
		dm{re: 0x0cbf, si: 0x00000000, ne: 0xb2e10000b2e8},
		dm{re: 0x0cc0, si: 0x00000000, ne: 0xb2e80000b2f1},
		dm{re: 0x0cc1, si: 0x00000000, ne: 0xb2f10000b2fa},
		dm{re: 0x0cc2, si: 0x00000000, ne: 0xb2fa0000b303},
		dm{re: 0x0cc3, si: 0x00000000, ne: 0xb3030000b30d},
		dm{re: 0x0cc4, si: 0x00000000, ne: 0xb30d0000b316},
		dm{re: 0x0cc5, si: 0x00000000, ne: 0xb3160000b323},
		dm{re: 0x0cc6, si: 0x00000000, ne: 0xb3230000b327},
		dm{re: 0x0cc7, si: 0x00000000, ne: 0xb3270000b332},
		dm{re: 0x0cc8, si: 0x00000000, ne: 0xb3320000b338},
		dm{re: 0x0cc9, si: 0x00000000, ne: 0xb3380000b343},
		dm{re: -0x0001, si: 0xb3430000b34b, ne: 0xb34b0000b352},
		dm{re: 0x0cca, si: 0x00000000, ne: 0xb3520000b359},
		dm{re: -0x0001, si: 0xb3590000b35e, ne: 0xb35e0000b365},
		dm{re: 0x0ccb, si: 0x00000000, ne: 0xb3650000b36c},
		dm{re: -0x0001, si: 0xb36c0000b371, ne: 0xb3710000b377},
		dm{re: -0x0001, si: 0xb3770000b37f, ne: 0xb37f0000b386},
		dm{re: -0x0001, si: 0xb3860000b38d, ne: 0xb38d0000b396},
		dm{re: -0x0001, si: 0xb3960000b39d, ne: 0xb39d0000b3a4},
		dm{re: 0x0ccc, si: 0x00000000, ne: 0xb3a40000b3a8},
		dm{re: 0x0ccd, si: 0x00000000, ne: 0xb3a80000b3b9},
		dm{re: 0x0cce, si: 0x00000000, ne: 0xb3b90000b3c7},
		dm{re: -0x0001, si: 0xb3c70000b3ce, ne: 0xb3ce0000b3db},
		dm{re: 0x0ccf, si: 0x00000000, ne: 0xb3db0000b3e7},
		dm{re: -0x0001, si: 0xb3e70000b3ee, ne: 0xb3db0000b3e7},
		dm{re: 0x0cd0, si: 0x00000000, ne: 0xb3ee0000b3fa},
		dm{re: 0x0cd1, si: 0x00000000, ne: 0xb3fa0000b403},
		dm{re: -0x0001, si: 0xb4030000b408, ne: 0xb4080000b416},
		dm{re: -0x0001, si: 0xb4160000b41d, ne: 0xb41d0000b426},
		dm{re: -0x0001, si: 0xb4260000b42d, ne: 0xb42d0000b437},
		dm{re: -0x0001, si: 0xb4370000b43e, ne: 0xb43e0000b44b},
		dm{re: -0x0001, si: 0xb44b0000b452, ne: 0xb4520000b45f},
		dm{re: -0x0001, si: 0xb45f0000b464, ne: 0xb4640000b471},
		dm{re: -0x0001, si: 0xb4710000b478, ne: 0xb4780000b483},
		dm{re: -0x0001, si: 0xb4830000b488, ne: 0xb4880000b495},
		dm{re: -0x0001, si: 0xb4950000b49a, ne: 0xb49a0000b4a5},
		dm{re: -0x0001, si: 0xb4a50000b4ac, ne: 0xb4ac0000b4b8},
		dm{re: -0x0001, si: 0xb4b80000b4bf, ne: 0xb4bf0000b4d1},
		dm{re: -0x0001, si: 0xb4d10000b4d6, ne: 0xb4d60000b4e0},
		dm{re: -0x0001, si: 0xb4e00000b4e5, ne: 0xb4e50000b4ef},
		dm{re: 0x0cd2, si: 0x00000000, ne: 0xb4ef0000b4f7},
		dm{re: 0x0cd3, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xb4f70000b502, ne: 0xb5020000b507},
		dm{re: -0x0001, si: 0xb5070000b512, ne: 0xb5070000b512},
		dm{re: 0x0cd4, si: 0x00000000, ne: 0xb4ef0000b4f7},
		dm{re: 0x0cd5, si: 0x00000000, ne: 0xb5120000b519},
		dm{re: -0x0001, si: 0xb5190000b528, ne: 0xb5280000b534},
		dm{re: 0x0cd6, si: 0x00000000, ne: 0xb5340000b53d},
		dm{re: 0x0cd7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0cd8, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0cd9, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0cda, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0cdb, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0cdc, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0cdd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0cde, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0cdf, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ce0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ce1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ce2, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ce5, si: 0x00000000, ne: 0xb54c0000b553},
		dm{re: -0x0001, si: 0xb5530000b55b, ne: 0x8b9d00008b9f},
		dm{re: 0x0ce6, si: 0x00000000, ne: 0xb55b0000b563},
		dm{re: -0x0001, si: 0xb5660000b56d, ne: 0xb56d0000b574},
		dm{re: -0x0001, si: 0xb5740000b57b, ne: 0xb57b0000b582},
		dm{re: -0x0001, si: 0xb5820000b589, ne: 0xb5890000b590},
		dm{re: -0x0001, si: 0xb5900000b597, ne: 0xb5970000b59f},
		dm{re: -0x0001, si: 0xb59f0000b5a6, ne: 0xb5a60000b5b3},
		dm{re: -0x0001, si: 0xb5b30000b5ba, ne: 0xb5ba0000b5c1},
		dm{re: -0x0001, si: 0xb5c10000b5c8, ne: 0xb5c80000b5cf},
		dm{re: -0x0001, si: 0xb5cf0000b5d6, ne: 0xb5d60000b5dd},
		dm{re: -0x0001, si: 0xb5dd0000b5e4, ne: 0xb5e40000b5eb},
		dm{re: 0x0ce8, si: 0x00000000, ne: 0xb5eb0000b5f2},
		dm{re: -0x0001, si: 0xb5f20000b5f9, ne: 0xb5f90000b601},
		dm{re: 0x0ce9, si: 0x00000000, ne: 0xb6010000b608},
		dm{re: -0x0001, si: 0xb6080000b60f, ne: 0xb60f0000b616},
		dm{re: -0x0001, si: 0xb6160000b61d, ne: 0xb61d0000b624},
		dm{re: -0x0001, si: 0xb6240000b62b, ne: 0xb62b0000b632},
		dm{re: -0x0001, si: 0xb6320000b639, ne: 0xb6390000b640},
		dm{re: -0x0001, si: 0xb6400000b647, ne: 0xb6470000b64d},
		dm{re: -0x0001, si: 0xb64d0000b654, ne: 0xb6540000b65a},
		dm{re: -0x0001, si: 0xb65a0000b661, ne: 0xb6610000b667},
		dm{re: -0x0001, si: 0xb6670000b66e, ne: 0xb66e0000b674},
		dm{re: -0x0001, si: 0xb6740000b67b, ne: 0xb67b0000b682},
		dm{re: -0x0001, si: 0xb6820000b689, ne: 0xb6890000b68f},
		dm{re: -0x0001, si: 0xb68f0000b696, ne: 0xb6960000b69d},
		dm{re: -0x0001, si: 0xb69d0000b6a4, ne: 0xb6a40000b6ac},
		dm{re: -0x0001, si: 0xb6ac0000b6b3, ne: 0xb6b30000b6bb},
		dm{re: -0x0001, si: 0xb6bb0000b6c2, ne: 0xb6c20000b6c9},
		dm{re: -0x0001, si: 0xb6c90000b6d0, ne: 0xb6d00000b6d8},
		dm{re: -0x0001, si: 0xb6d80000b6df, ne: 0xb6df0000b6e8},
		dm{re: -0x0001, si: 0xb6e80000b6ef, ne: 0xb6ef0000b6f5},
		dm{re: -0x0001, si: 0xb6f50000b6fc, ne: 0xb6fc0000b703},
		dm{re: -0x0001, si: 0xb7030000b70a, ne: 0xb70a0000b711},
		dm{re: -0x0001, si: 0xb7110000b718, ne: 0xb7180000b71e},
		dm{re: 0x0cea, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0cec, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ced, si: 0x00000000, ne: 0xb7280000b731},
		dm{re: -0x0001, si: 0xb7310000b737, ne: 0xb7370000b747},
		dm{re: -0x0001, si: 0xb74d0000b755, ne: 0xb7550000b757},
		dm{re: 0x0cef, si: 0x00000000, ne: 0xb7570000b75f},
		dm{re: 0x0cf1, si: 0x00000000, ne: 0xb7640000b770},
		dm{re: -0x0001, si: 0xb7700000b775, ne: 0xb7750000b780},
		dm{re: 0x0cf2, si: 0x00000000, ne: 0xb7800000b788},
		dm{re: 0x0cf3, si: 0x00000000, ne: 0xb7800000b788},
		dm{re: -0x0001, si: 0xb7880000b791, ne: 0xb7910000b7a0},
		dm{re: 0x0cf4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0cf6, si: 0x00000000, ne: 0xb7a40000b7b1},
		dm{re: 0x0cf7, si: 0x00000000, ne: 0xb7b10000b7c8},
		dm{re: -0x0001, si: 0xb7c80000b7d9, ne: 0xb7d90000b7e9},
		dm{re: 0x0cf8, si: 0x00000000, ne: 0xb7e90000b7f5},
		dm{re: 0x0cf9, si: 0x00000000, ne: 0xb7f50000b802},
		dm{re: 0x0cfa, si: 0x00000000, ne: 0xb8020000b80d},
		dm{re: -0x0001, si: 0xb80d0000b818, ne: 0xb80d0000b818},
		dm{re: -0x0001, si: 0xb8180000b826, ne: 0xb8260000b835},
		dm{re: 0x0cfb, si: 0x00000000, ne: 0xb8350000b841},
		dm{re: 0x0cfc, si: 0x00000000, ne: 0xb8410000b84c},
		dm{re: -0x0001, si: 0xb84c0000b855, ne: 0xb8550000b85e},
		dm{re: 0x0cfd, si: 0x00000000, ne: 0xb85e0000b869},
		dm{re: 0x0cfe, si: 0x00000000, ne: 0xb8690000b875},
		dm{re: 0x0cff, si: 0x00000000, ne: 0xb8750000b87e},
		dm{re: 0x0d00, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0d02, si: 0x00000000, ne: 0xb8820000b88a},
		dm{re: 0x0d03, si: 0x00000000, ne: 0xb88a0000b893},
		dm{re: 0x0d04, si: 0x00000000, ne: 0xb8930000b89a},
		dm{re: 0x0d05, si: 0x00000000, ne: 0xb89a0000b8a1},
		dm{re: 0x0d06, si: 0x00000000, ne: 0xb8a10000b8a8},
		dm{re: 0x0d07, si: 0x00000000, ne: 0xb8a80000b8b0},
		dm{re: 0x0d08, si: 0x00000000, ne: 0xb8b00000b8bc},
		dm{re: 0x0d09, si: 0x00000000, ne: 0xb8bc0000b8c4},
		dm{re: 0x0d0a, si: 0x00000000, ne: 0xb8c40000b8cb},
		dm{re: 0x0d0b, si: 0x00000000, ne: 0xb8cb0000b8d8},
		dm{re: 0x0d0c, si: 0x00000000, ne: 0xb8d80000b8e1},
		dm{re: 0x0d0d, si: 0x00000000, ne: 0xb8e10000b8ef},
		dm{re: 0x0d0e, si: 0x00000000, ne: 0xb8ef0000b8f7},
		dm{re: 0x0d0f, si: 0x00000000, ne: 0xb8f70000b8fa},
		dm{re: -0x0001, si: 0xb8fa0000b901, ne: 0xb9010000b903},
		dm{re: 0x0d10, si: 0x00000000, ne: 0xb9030000b906},
		dm{re: 0x0d11, si: 0x00000000, ne: 0xb9060000b908},
		dm{re: 0x0d12, si: 0x00000000, ne: 0xb9080000b90a},
		dm{re: 0x0d13, si: 0x00000000, ne: 0xb90a0000b90c},
		dm{re: 0x0d14, si: 0x00000000, ne: 0xb90c0000b910},
		dm{re: 0x0d15, si: 0x00000000, ne: 0xb9100000b912},
		dm{re: 0x0d16, si: 0x00000000, ne: 0xb9120000b915},
		dm{re: 0x0d17, si: 0x00000000, ne: 0xb9150000b918},
		dm{re: 0x0d18, si: 0x00000000, ne: 0xb9180000b91b},
		dm{re: 0x0d19, si: 0x00000000, ne: 0xb91b0000b91e},
		dm{re: 0x0d1a, si: 0x00000000, ne: 0xb91e0000b925},
		dm{re: 0x0d1b, si: 0x00000000, ne: 0xb9250000b92c},
		dm{re: 0x0d1c, si: 0x00000000, ne: 0xb92c0000b933},
		dm{re: 0x0d1d, si: 0x00000000, ne: 0xb9330000b93a},
		dm{re: 0x0d1e, si: 0x00000000, ne: 0xb93a0000b93d},
		dm{re: 0x0d1f, si: 0x00000000, ne: 0xb93d0000b93f},
		dm{re: 0x0d20, si: 0x00000000, ne: 0xb93f0000b942},
		dm{re: -0x0001, si: 0xb9420000b949, ne: 0xb9490000b951},
		dm{re: -0x0001, si: 0xb9510000b95c, ne: 0xb95c0000b968},
		dm{re: -0x0001, si: 0xb9680000b972, ne: 0xb9720000b97c},
		dm{re: 0x0d21, si: 0x00000000, ne: 0xb97c0000b98c},
		dm{re: 0x0d22, si: 0x00000000, ne: 0xb98c0000b994},
		dm{re: 0x0d23, si: 0x00000000, ne: 0xb9940000b99b},
		dm{re: 0x0d24, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0d25, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xb9a10000b9a7, ne: 0xb9a70000b9b2},
		dm{re: 0x0d27, si: 0x00000000, ne: 0xb9b20000b9ba},
		dm{re: 0x0d28, si: 0x00000000, ne: 0xb9ba0000b9c3},
		dm{re: 0x0d29, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0d2b, si: 0x00000000, ne: 0xb9c80000b9d0},
		dm{re: 0x0d2c, si: 0x00000000, ne: 0xb9d00000b9d9},
		dm{re: 0x0d2d, si: 0x00000000, ne: 0xb9d90000b9de},
		dm{re: 0x0d2e, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xb9de0000b9e8, ne: 0xb9e80000b9ef},
		dm{re: 0x0d2f, si: 0x00000000, ne: 0xb9ef0000b9f7},
		dm{re: 0x0d30, si: 0x00000000, ne: 0xb9f70000b9fb},
		dm{re: 0x0d31, si: 0x00000000, ne: 0xb9fb0000ba03},
		dm{re: 0x0d32, si: 0x00000000, ne: 0xba030000ba09},
		dm{re: 0x0d33, si: 0x00000000, ne: 0xba030000ba09},
		dm{re: 0x0d34, si: 0x00000000, ne: 0xba090000ba0e},
		dm{re: 0x0d35, si: 0x00000000, ne: 0xba0e0000ba16},
		dm{re: 0x0d36, si: 0x00000000, ne: 0xba0e0000ba16},
		dm{re: 0x0d37, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xba220000ba2c, ne: 0xba2c0000ba36},
		dm{re: -0x0001, si: 0xba360000ba3f, ne: 0xba3f0000ba48},
		dm{re: -0x0001, si: 0xba480000ba50, ne: 0xba500000ba55},
		dm{re: -0x0001, si: 0xba550000ba5e, ne: 0xba5e0000ba64},
		dm{re: -0x0001, si: 0xba640000ba6c, ne: 0xba6c0000ba71},
		dm{re: -0x0001, si: 0xba710000ba78, ne: 0xba780000ba7b},
		dm{re: 0x0d39, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0d3b, si: 0x00000000, ne: 0xba810000ba88},
		dm{re: 0x0d3c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xba880000ba8f, ne: 0xba8f0000ba96},
		dm{re: 0x0d3d, si: 0x00000000, ne: 0xba960000ba9d},
		dm{re: -0x0001, si: 0xba9d0000baa9, ne: 0xbaa90000bab5},
		dm{re: -0x0001, si: 0xbab50000babf, ne: 0xbabf0000bac9},
		dm{re: 0x0d3e, si: 0x00000000, ne: 0xbac90000bad1},
		dm{re: 0x0d3f, si: 0x00000000, ne: 0xbad10000badb},
		dm{re: 0x0d40, si: 0x00000000, ne: 0xbadb0000bae6},
		dm{re: 0x0d41, si: 0x00000000, ne: 0xbae60000baee},
		dm{re: 0x0d42, si: 0x00000000, ne: 0xbaee0000baf7},
		dm{re: 0x0d43, si: 0x00000000, ne: 0xbaf70000bafe},
		dm{re: 0x0d44, si: 0x00000000, ne: 0xbafe0000bb06},
		dm{re: 0x0d45, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0d46, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0d47, si: 0x00000000, ne: 0xbb060000bb0f},
		dm{re: 0x0d49, si: 0x00000000, ne: 0xbb160000bb20},
		dm{re: 0x0d4a, si: 0x00000000, ne: 0xbb200000bb32},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0xbb3a0000bb40},
		dm{re: 0x0d4d, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xbb4c0000bb5d, ne: 0xbb5d0000bb68},
		dm{re: 0x0d4f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0d51, si: 0x00000000, ne: 0xbb6e0000bb72},
		dm{re: 0x0d52, si: 0x00000000, ne: 0xbb720000bb7f},
		dm{re: 0x0d53, si: 0x00000000, ne: 0xbb7f0000bb8c},
		dm{re: 0x0d54, si: 0x00000000, ne: 0xbb8c0000bb99},
		dm{re: 0x0d55, si: 0x00000000, ne: 0xbb990000bba7},
		dm{re: -0x0001, si: 0xbba70000bbaf, ne: 0xbbaf0000bbb4},
		dm{re: -0x0001, si: 0xbbb40000bbba, ne: 0xbbba0000bbc8},
		dm{re: 0x0d56, si: 0x00000000, ne: 0xbbc80000bbd4},
		dm{re: 0x0d57, si: 0x00000000, ne: 0xbbd40000bbdb},
		dm{re: 0x0d58, si: 0x00000000, ne: 0xbbdb0000bbe5},
		dm{re: 0x0d59, si: 0x00000000, ne: 0xbbe50000bbf0},
		dm{re: -0x0001, si: 0xbbf00000bbf8, ne: 0xbbf80000bc04},
		dm{re: -0x0001, si: 0xbc040000bc0c, ne: 0xbc0c0000bc12},
		dm{re: 0x0d5a, si: 0x00000000, ne: 0xbc120000bc22},
		dm{re: -0x0001, si: 0xbc220000bc2a, ne: 0xbc2a0000bc35},
		dm{re: -0x0001, si: 0xbc350000bc3d, ne: 0xbc3d0000bc49},
		dm{re: -0x0001, si: 0xbc490000bc51, ne: 0xbc510000bc5c},
		dm{re: -0x0001, si: 0xbc5c0000bc69, ne: 0xbc690000bc75},
		dm{re: 0x0d5b, si: 0x00000000, ne: 0xbc750000bc7e},
		dm{re: 0x0d5c, si: 0x00000000, ne: 0xbc7e0000bc87},
		dm{re: 0x0d5d, si: 0x00000000, ne: 0xbc870000bc8d},
		dm{re: 0x0d5e, si: 0x00000000, ne: 0xbc8d0000bc98},
		dm{re: 0x0d5f, si: 0x00000000, ne: 0xbc980000bc9f},
		dm{re: -0x0001, si: 0xbc9f0000bca7, ne: 0xbca70000bcad},
		dm{re: -0x0001, si: 0xbcad0000bcb5, ne: 0xbcb50000bcc0},
		dm{re: 0x0d60, si: 0x00000000, ne: 0xbcc00000bccc},
		dm{re: 0x0d61, si: 0x00000000, ne: 0xbccc0000bcd6},
		dm{re: 0x0d62, si: 0x00000000, ne: 0xbcd60000bce1},
		dm{re: 0x0d63, si: 0x00000000, ne: 0xbce10000bce9},
		dm{re: 0x0d64, si: 0x00000000, ne: 0xbce90000bcf0},
		dm{re: 0x0d65, si: 0x00000000, ne: 0xbcf00000bcf7},
		dm{re: 0x0d66, si: 0x00000000, ne: 0xbcf70000bcfe},
		dm{re: 0x0d67, si: 0x00000000, ne: 0xbcfe0000bd05},
		dm{re: 0x0d68, si: 0x00000000, ne: 0xbd050000bd18},
		dm{re: 0x0d69, si: 0x00000000, ne: 0xbd180000bd24},
		dm{re: 0x0d6a, si: 0x00000000, ne: 0xbd240000bd2f},
		dm{re: 0x0d6b, si: 0x00000000, ne: 0xbd2f0000bd35},
		dm{re: 0x0d6c, si: 0x00000000, ne: 0xbd350000bd3b},
		dm{re: -0x0001, si: 0xbd3b0000bd42, ne: 0xbd420000bd51},
		dm{re: 0x0d6d, si: 0x00000000, ne: 0xbd510000bd56},
		dm{re: -0x0001, si: 0xbd560000bd5d, ne: 0xbd5d0000bd63},
		dm{re: -0x0001, si: 0xbd630000bd69, ne: 0xbd690000bd6e},
		dm{re: 0x0d6e, si: 0x00000000, ne: 0xbd6e0000bd7e},
		dm{re: 0x0d6f, si: 0x00000000, ne: 0xbd7e0000bd8d},
		dm{re: -0x0001, si: 0xbd8d0000bd94, ne: 0xbd940000bd9f},
		dm{re: -0x0001, si: 0xbd9f0000bdad, ne: 0xbdad0000bdb7},
		dm{re: -0x0001, si: 0xbdb70000bdc5, ne: 0xbce90000bcf0},
		dm{re: 0x0d70, si: 0x00000000, ne: 0xbdc50000bdcb},
		dm{re: 0x0d71, si: 0x00000000, ne: 0xbdcb0000bdd9},
		dm{re: 0x0d72, si: 0x00000000, ne: 0xbdd90000bde7},
		dm{re: 0x0d73, si: 0x00000000, ne: 0xbde70000bdfe},
		dm{re: 0x0d74, si: 0x00000000, ne: 0xbdfe0000be11},
		dm{re: 0x0d75, si: 0x00000000, ne: 0xbe110000be23},
		dm{re: 0x0d76, si: 0x00000000, ne: 0xbe230000be30},
		dm{re: 0x0d77, si: 0x00000000, ne: 0xbe300000be3a},
		dm{re: 0x0d78, si: 0x00000000, ne: 0xbe3a0000be46},
		dm{re: -0x0001, si: 0xbe460000be4e, ne: 0xbe4e0000be5b},
		dm{re: -0x0001, si: 0xbe5b0000be63, ne: 0xbe630000be72},
		dm{re: 0x0d79, si: 0x00000000, ne: 0xbe720000be80},
		dm{re: -0x0001, si: 0xbe800000be88, ne: 0xbe880000bea4},
		dm{re: 0x0d7a, si: 0x00000000, ne: 0xbea40000beb1},
		dm{re: 0x0d7b, si: 0x00000000, ne: 0xbeb10000bebb},
		dm{re: 0x0d7c, si: 0x00000000, ne: 0xbebb0000becd},
		dm{re: 0x0d7d, si: 0x00000000, ne: 0xbecd0000bede},
		dm{re: 0x0d7e, si: 0x00000000, ne: 0xbede0000bee9},
		dm{re: 0x0d7f, si: 0x00000000, ne: 0xbee90000bef1},
		dm{re: -0x0001, si: 0xbef10000bef9, ne: 0xbef90000bf00},
		dm{re: -0x0001, si: 0xbf000000bf08, ne: 0xbf080000bf15},
		dm{re: -0x0001, si: 0xbf150000bf1d, ne: 0xbf1d0000bf28},
		dm{re: -0x0001, si: 0xbf280000bf30, ne: 0xbc980000bc9f},
		dm{re: 0x0d80, si: 0x00000000, ne: 0x4dea00004ded},
		dm{re: 0x0d81, si: 0x00000000, ne: 0xbf300000bf33},
		dm{re: 0x0d82, si: 0x00000000, ne: 0xbf330000bf3c},
		dm{re: 0x0d83, si: 0x00000000, ne: 0xbeb10000bebb},
		dm{re: -0x0001, si: 0xbf3c0000bf44, ne: 0xbf440000bf4c},
		dm{re: -0x0001, si: 0xbf4c0000bf54, ne: 0xbe720000be80},
		dm{re: 0x0d84, si: 0x00000000, ne: 0xbf540000bf61},
		dm{re: 0x0d85, si: 0x00000000, ne: 0xbf610000bf6d},
		dm{re: 0x0d86, si: 0x00000000, ne: 0xbf6d0000bf73},
		dm{re: 0x0d87, si: 0x00000000, ne: 0xbf730000bf7d},
		dm{re: 0x0d88, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0d89, si: 0x00000000, ne: 0xb26f0000b271},
		dm{re: 0x0d8a, si: 0x00000000, ne: 0x11a6000011a8},
		dm{re: 0x0d8b, si: 0x00000000, ne: 0xbf7d0000bf80},
		dm{re: 0x0d8c, si: 0x00000000, ne: 0x11bd000011bf},
		dm{re: 0x0d8d, si: 0x00000000, ne: 0xbf800000bf82},
		dm{re: 0x0d8e, si: 0x00000000, ne: 0xb9060000b908},
		dm{re: -0x0001, si: 0xbf820000bf89, ne: 0xbf820000bf89},
		dm{re: -0x0001, si: 0xbf890000bf8e, ne: 0xbf8e0000bf96},
		dm{re: 0x0d8f, si: 0x00000000, ne: 0xbf960000bf9c},
		dm{re: -0x0001, si: 0xbf9c0000bfa1, ne: 0xbfa10000bfab},
		dm{re: 0x0d90, si: 0x00000000, ne: 0xbfab0000bfb1},
		dm{re: 0x0d91, si: 0x00000000, ne: 0x4e3200004e34},
		dm{re: 0x0d92, si: 0x00000000, ne: 0xbfb10000bfb8},
		dm{re: 0x0d93, si: 0x00000000, ne: 0xbfb80000bfc0},
		dm{re: 0x0d94, si: 0x00000000, ne: 0xbfc00000bfc7},
		dm{re: 0x0d95, si: 0x00000000, ne: 0xb13b0000b13d},
		dm{re: 0x0d96, si: 0x00000000, ne: 0xbfc70000bfce},
		dm{re: 0x0d97, si: 0x00000000, ne: 0xbfce0000bfd4},
		dm{re: 0x0d98, si: 0x00000000, ne: 0xbfd40000bfdc},
		dm{re: 0x0d99, si: 0x00000000, ne: 0xbfdc0000bfe3},
		dm{re: 0x0d9a, si: 0x00000000, ne: 0xbfe30000bfea},
		dm{re: 0x0d9b, si: 0x00000000, ne: 0xaff20000aff5},
		dm{re: 0x0d9c, si: 0x00000000, ne: 0xbfea0000bff3},
		dm{re: 0x0d9d, si: 0x00000000, ne: 0xbff30000bfff},
		dm{re: 0x0d9e, si: 0x00000000, ne: 0xbfff0000c006},
		dm{re: 0x0d9f, si: 0x00000000, ne: 0xc0060000c00d},
		dm{re: 0x0da0, si: 0x00000000, ne: 0xc00d0000c013},
		dm{re: 0x0da1, si: 0x00000000, ne: 0xc0130000c01a},
		dm{re: 0x0da2, si: 0x00000000, ne: 0xc01a0000c021},
		dm{re: 0x0da3, si: 0x00000000, ne: 0xc0210000c02d},
		dm{re: 0x0da4, si: 0x00000000, ne: 0xc02d0000c034},
		dm{re: 0x0da5, si: 0x00000000, ne: 0xc0340000c041},
		dm{re: 0x0da6, si: 0x00000000, ne: 0xc0410000c04a},
		dm{re: 0x0da7, si: 0x00000000, ne: 0xc04a0000c054},
		dm{re: 0x0da8, si: 0x00000000, ne: 0xc0540000c060},
		dm{re: 0x0da9, si: 0x00000000, ne: 0xc0600000c062},
		dm{re: 0x0daa, si: 0x00000000, ne: 0xc0620000c064},
		dm{re: 0x0dab, si: 0x00000000, ne: 0xb0620000b065},
		dm{re: 0x0dac, si: 0x00000000, ne: 0xc0640000c066},
		dm{re: 0x0dad, si: 0x00000000, ne: 0xc0660000c069},
		dm{re: 0x0dae, si: 0x00000000, ne: 0xc0690000c070},
		dm{re: 0x0daf, si: 0x00000000, ne: 0xc0700000c078},
		dm{re: 0x0db0, si: 0x00000000, ne: 0xc0780000c080},
		dm{re: 0x0db1, si: 0x00000000, ne: 0xc0800000c08d},
		dm{re: 0x0db2, si: 0x00000000, ne: 0xc08d0000c094},
		dm{re: 0x0db3, si: 0x00000000, ne: 0xc0940000c09a},
		dm{re: 0x0db4, si: 0x00000000, ne: 0xc09a0000c0a0},
		dm{re: 0x0db5, si: 0x00000000, ne: 0xc0a00000c0a9},
		dm{re: 0x0db6, si: 0x00000000, ne: 0xc0a90000c0b0},
		dm{re: 0x0db7, si: 0x00000000, ne: 0xc0b00000c0bc},
		dm{re: 0x0db8, si: 0x00000000, ne: 0xc0bc0000c0bf},
		dm{re: 0x0db9, si: 0x00000000, ne: 0xc0bf0000c0c1},
		dm{re: 0x0dba, si: 0x00000000, ne: 0xc0c10000c0c7},
		dm{re: 0x0dbb, si: 0x00000000, ne: 0xc0c70000c0cd},
		dm{re: 0x0dbc, si: 0x00000000, ne: 0xc0cd0000c0d6},
		dm{re: 0x0dbd, si: 0x00000000, ne: 0xc0d60000c0de},
		dm{re: 0x0dbe, si: 0x00000000, ne: 0x73a9000073af},
		dm{re: 0x0dbf, si: 0x00000000, ne: 0xc0de0000c0e7},
		dm{re: 0x0dc0, si: 0x00000000, ne: 0x11790000117b},
		dm{re: 0x0dc1, si: 0x00000000, ne: 0xc0e70000c0ed},
		dm{re: 0x0dc2, si: 0x00000000, ne: 0xc0ed0000c0f1},
		dm{re: 0x0dc3, si: 0x00000000, ne: 0xc0f10000c0fa},
		dm{re: 0x0dc4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0dc5, si: 0x00000000, ne: 0xc0fa0000c104},
		dm{re: 0x0dc6, si: 0x00000000, ne: 0xc1040000c114},
		dm{re: -0x0001, si: 0xc1140000c122, ne: 0xc1220000c129},
		dm{re: 0x0dc7, si: 0x00000000, ne: 0xb0160000b018},
		dm{re: -0x0001, si: 0xc1290000c131, ne: 0xc1310000c13c},
		dm{re: 0x0dc8, si: 0x00000000, ne: 0xc13c0000c14e},
		dm{re: 0x0dc9, si: 0x00000000, ne: 0xc14e0000c160},
		dm{re: 0x0dca, si: 0x00000000, ne: 0xc1600000c16f},
		dm{re: 0x0dcb, si: 0x00000000, ne: 0x9eb000009f1},
		dm{re: 0x0dcc, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0dcd, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xc1750000c17e, ne: 0xc17e0000c188},
		dm{re: -0x0001, si: 0xc1880000c192, ne: 0xc1920000c19d},
		dm{re: -0x0001, si: 0xc19d0000c1a6, ne: 0xc1a60000c1b2},
		dm{re: 0x0dcf, si: 0x00000000, ne: 0xc1b20000c1be},
		dm{re: 0x0dd0, si: 0x00000000, ne: 0xc1be0000c1c7},
		dm{re: 0x0dd2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0dd3, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xc1ce0000c1dd, ne: 0xc1dd0000c1e4},
		dm{re: -0x0001, si: 0x00000000, ne: 0xc1e90000c1f1},
		dm{re: 0x0dd6, si: 0x00000000, ne: 0xb8f70000b8fa},
		dm{re: -0x0001, si: 0xc1f70000c1fb, ne: 0xc1fb0000c1ff},
		dm{re: -0x0001, si: 0xc1ff0000c203, ne: 0xc2030000c208},
		dm{re: -0x0001, si: 0xc2080000c20c, ne: 0xc20c0000c213},
		dm{re: -0x0001, si: 0xc2130000c217, ne: 0xc2170000c21d},
		dm{re: -0x0001, si: 0xc21d0000c226, ne: 0xc2260000c22f},
		dm{re: -0x0001, si: 0xc22f0000c233, ne: 0xc2330000c23b},
		dm{re: -0x0001, si: 0xc23b0000c23f, ne: 0xc23f0000c245},
		dm{re: -0x0001, si: 0xc2450000c249, ne: 0xc2490000c250},
		dm{re: -0x0001, si: 0xc2500000c254, ne: 0xc2540000c259},
		dm{re: -0x0001, si: 0xc2590000c25d, ne: 0xc25d0000c264},
		dm{re: -0x0001, si: 0xc2640000c26e, ne: 0xc2640000c26e},
		dm{re: -0x0001, si: 0xc26e0000c279, ne: 0xc2790000c284},
		dm{re: 0x0dd7, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xc28c0000c294, ne: 0xc2940000c2a5},
		dm{re: -0x0001, si: 0xc2a50000c2ad, ne: 0xc2ad0000c2b3},
		dm{re: -0x0001, si: 0xc2b30000c2bb, ne: 0xc2bb0000c2ca},
		dm{re: -0x0001, si: 0xc2ca0000c2d2, ne: 0xc2d20000c2dd},
		dm{re: -0x0001, si: 0xc2dd0000c2e5, ne: 0xc2e50000c2f2},
		dm{re: -0x0001, si: 0xc2f20000c2fa, ne: 0xc2fa0000c313},
		dm{re: -0x0001, si: 0xc3130000c31b, ne: 0xc31b0000c32a},
		dm{re: -0x0001, si: 0xc32a0000c332, ne: 0xc3320000c33c},
		dm{re: -0x0001, si: 0xc33c0000c344, ne: 0xc3440000c351},
		dm{re: -0x0001, si: 0xc3510000c359, ne: 0xc3590000c368},
		dm{re: 0x0dd9, si: 0x00000000, ne: 0xc3680000c374},
		dm{re: -0x0001, si: 0xc3740000c37c, ne: 0xc37c0000c38a},
		dm{re: -0x0001, si: 0xc38a0000c392, ne: 0xc3920000c39e},
		dm{re: -0x0001, si: 0xc39e0000c3a6, ne: 0xc3a60000c3b5},
		dm{re: -0x0001, si: 0xc3b50000c3bd, ne: 0xc3bd0000c3ce},
		dm{re: -0x0001, si: 0xc3ce0000c3d6, ne: 0xc3d60000c3df},
		dm{re: -0x0001, si: 0xc3df0000c3e9, ne: 0xc3e90000c3f6},
		dm{re: -0x0001, si: 0xc3f60000c400, ne: 0xc4000000c415},
		dm{re: -0x0001, si: 0xc4150000c41f, ne: 0xc41f0000c42b},
		dm{re: -0x0001, si: 0xc42b0000c435, ne: 0xc4350000c44f},
		dm{re: -0x0001, si: 0xc44f0000c457, ne: 0xc4570000c45d},
		dm{re: -0x0001, si: 0xc45d0000c465, ne: 0xc4650000c46d},
		dm{re: 0x0dda, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0dde, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ddf, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0xc48a0000c48f},
		dm{re: 0x0de2, si: 0x00000000, ne: 0xc4940000c49c},
		dm{re: 0x0de3, si: 0x00000000, ne: 0x39f5000039fc},
		dm{re: 0x0de4, si: 0x00000000, ne: 0xc49c0000c4a5},
		dm{re: 0x0de5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0de6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0de7, si: 0x00000000, ne: 0xc4b50000c4c1},
		dm{re: 0x0de9, si: 0x00000000, ne: 0xc4c80000c4d1},
		dm{re: -0x0001, si: 0xc4d10000c4e7, ne: 0xc4e70000c4f5},
		dm{re: 0x0dea, si: 0x00000000, ne: 0xc4f50000c506},
		dm{re: -0x0001, si: 0xc5060000c50f, ne: 0xc50f0000c51e},
		dm{re: 0x0deb, si: 0x00000000, ne: 0xc51e0000c52b},
		dm{re: 0x0dec, si: 0x00000000, ne: 0xc52b0000c533},
		dm{re: 0x0ded, si: 0x00000000, ne: 0xc5330000c53f},
		dm{re: 0x0dee, si: 0x00000000, ne: 0xc53f0000c549},
		dm{re: 0x0def, si: 0x00000000, ne: 0xc5490000c557},
		dm{re: 0x0df0, si: 0x00000000, ne: 0xc5490000c557},
		dm{re: 0x0df1, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xc5570000c560, ne: 0xc5570000c560},
		dm{re: 0x0df2, si: 0x00000000, ne: 0xc5600000c569},
		dm{re: -0x0001, si: 0xc5690000c570, ne: 0xc5690000c570},
		dm{re: 0x0df3, si: 0x00000000, ne: 0xc5700000c57a},
		dm{re: 0x0df4, si: 0x00000000, ne: 0xc57a0000c584},
		dm{re: 0x0df5, si: 0x00000000, ne: 0xc5840000c58b},
		dm{re: 0x0df6, si: 0x00000000, ne: 0xc58b0000c594},
		dm{re: 0x0df7, si: 0x00000000, ne: 0xc5940000c59b},
		dm{re: 0x0df8, si: 0x00000000, ne: 0xc59b0000c5a4},
		dm{re: 0x0df9, si: 0x00000000, ne: 0xc5a40000c5aa},
		dm{re: -0x0001, si: 0xc5aa0000c5b1, ne: 0xc5aa0000c5b1},
		dm{re: 0x0dfa, si: 0x00000000, ne: 0xc5b10000c5b7},
		dm{re: 0x0dfb, si: 0x00000000, ne: 0xc5b70000c5bf},
		dm{re: 0x0dfc, si: 0x00000000, ne: 0xc5bf0000c5cb},
		dm{re: 0x0dfd, si: 0x00000000, ne: 0xc5cb0000c5d4},
		dm{re: 0x0dfe, si: 0x00000000, ne: 0xc5d40000c5dd},
		dm{re: 0x0dff, si: 0x00000000, ne: 0xc5dd0000c5e4},
		dm{re: 0x0e00, si: 0x00000000, ne: 0xc5e40000c5f0},
		dm{re: 0x0e01, si: 0x00000000, ne: 0xc5f00000c5f8},
		dm{re: 0x0e02, si: 0x00000000, ne: 0xc5f80000c600},
		dm{re: -0x0001, si: 0xc6000000c60c, ne: 0xc60c0000c619},
		dm{re: -0x0001, si: 0xc6190000c623, ne: 0xc6230000c62e},
		dm{re: 0x0e03, si: 0x00000000, ne: 0xc62e0000c633},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e06, si: 0x00000000, ne: 0x3cd700003cdd},
		dm{re: 0x0e07, si: 0x00000000, ne: 0xc63f0000c646},
		dm{re: 0x0e08, si: 0x00000000, ne: 0xc6460000c649},
		dm{re: 0x0e09, si: 0x00000000, ne: 0xc6490000c650},
		dm{re: 0x0e0b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e0c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e0f, si: 0x00000000, ne: 0x3c5200003c59},
		dm{re: -0x0001, si: 0xc6600000c666, ne: 0xc6660000c66d},
		dm{re: -0x0001, si: 0xc6730000c67a, ne: 0xc67a0000c681},
		dm{re: -0x0001, si: 0xc6810000c685, ne: 0xc6850000c68a},
		dm{re: -0x0001, si: 0xc68a0000c690, ne: 0xc68a0000c690},
		dm{re: -0x0001, si: 0xc6900000c696, ne: 0xc6900000c696},
		dm{re: 0x0e11, si: 0x00000000, ne: 0xc6960000c69f},
		dm{re: 0x0e13, si: 0x00000000, ne: 0xc6a50000c6ad},
		dm{re: 0x0e14, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xc6b20000c6b8, ne: 0xa06d0000a070},
		dm{re: -0x0001, si: 0xc6b80000c6be, ne: 0xc6be0000c6c2},
		dm{re: -0x0001, si: 0xc6c20000c6c8, ne: 0xc6c80000c6cd},
		dm{re: -0x0001, si: 0xc6cd0000c6d3, ne: 0xc6d30000c6da},
		dm{re: -0x0001, si: 0xc6da0000c6e0, ne: 0xc6e00000c6e9},
		dm{re: -0x0001, si: 0xc6e90000c6ef, ne: 0xc6ef0000c6f3},
		dm{re: -0x0001, si: 0xc6f30000c6f9, ne: 0xc6f90000c701},
		dm{re: -0x0001, si: 0xc7010000c707, ne: 0xaf250000af2a},
		dm{re: -0x0001, si: 0xc7070000c70d, ne: 0xc70d0000c716},
		dm{re: -0x0001, si: 0xc7160000c71c, ne: 0xc71c0000c720},
		dm{re: -0x0001, si: 0xc7200000c726, ne: 0xc7260000c732},
		dm{re: -0x0001, si: 0xc7320000c738, ne: 0xc7380000c73d},
		dm{re: -0x0001, si: 0xc73d0000c743, ne: 0xc7430000c74a},
		dm{re: -0x0001, si: 0xc74a0000c750, ne: 0xc7500000c755},
		dm{re: -0x0001, si: 0xc7550000c75d, ne: 0xc75d0000c764},
		dm{re: -0x0001, si: 0xc7640000c76b, ne: 0xc76b0000c772},
		dm{re: -0x0001, si: 0xc7720000c778, ne: 0xc7780000c783},
		dm{re: -0x0001, si: 0xc7830000c789, ne: 0x940b00009411},
		dm{re: -0x0001, si: 0xc7890000c78f, ne: 0xc78f0000c798},
		dm{re: -0x0001, si: 0xc7980000c7a0, ne: 0xc7a00000c7a4},
		dm{re: -0x0001, si: 0xc7a40000c7aa, ne: 0xc7aa0000c7b2},
		dm{re: -0x0001, si: 0xc7b20000c7ba, ne: 0xc7ba0000c7c3},
		dm{re: -0x0001, si: 0xc7c30000c7c9, ne: 0xc7c90000c7d1},
		dm{re: 0x0e16, si: 0x00000000, ne: 0xc7d10000c7d4},
		dm{re: 0x0e17, si: 0x00000000, ne: 0xc7d40000c7d7},
		dm{re: 0x0e19, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xc7dc0000c7e1, ne: 0xc7e10000c7eb},
		dm{re: 0x0e1a, si: 0x00000000, ne: 0xc7eb0000c7f6},
		dm{re: 0x0e1b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e1f, si: 0x00000000, ne: 0xc8070000c80e},
		dm{re: 0x0e20, si: 0x00000000, ne: 0xc80e0000c813},
		dm{re: 0x0e21, si: 0x00000000, ne: 0x15f9000015fb},
		dm{re: 0x0e24, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e25, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e28, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e29, si: 0x00000000, ne: 0xc8220000c830},
		dm{re: 0x0e2b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e2c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e2e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e2f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e31, si: 0x00000000, ne: 0xc83c0000c848},
		dm{re: 0x0e32, si: 0x00000000, ne: 0xc8480000c852},
		dm{re: 0x0e33, si: 0x00000000, ne: 0xc8520000c85a},
		dm{re: 0x0e34, si: 0x00000000, ne: 0xc85a0000c868},
		dm{re: 0x0e35, si: 0x00000000, ne: 0xc8680000c877},
		dm{re: 0x0e36, si: 0x00000000, ne: 0xc8770000c881},
		dm{re: 0x0e37, si: 0x00000000, ne: 0xc8810000c892},
		dm{re: 0x0e38, si: 0x00000000, ne: 0xc8920000c8a2},
		dm{re: 0x0e39, si: 0x00000000, ne: 0xc8a20000c8b1},
		dm{re: 0x0e3a, si: 0x00000000, ne: 0xc8b10000c8b9},
		dm{re: 0x0e3b, si: 0x00000000, ne: 0xc8b90000c8c8},
		dm{re: 0x0e3c, si: 0x00000000, ne: 0xc8c80000c8d5},
		dm{re: 0x0e3d, si: 0x00000000, ne: 0xc8d50000c8dd},
		dm{re: 0x0e3e, si: 0x00000000, ne: 0xc8dd0000c8e5},
		dm{re: 0x0e3f, si: 0x00000000, ne: 0xc8e50000c8f0},
		dm{re: 0x0e40, si: 0x00000000, ne: 0xc8f00000c8fc},
		dm{re: 0x0e41, si: 0x00000000, ne: 0xc8fc0000c908},
		dm{re: 0x0e42, si: 0x00000000, ne: 0xc9080000c917},
		dm{re: 0x0e43, si: 0x00000000, ne: 0xc9170000c921},
		dm{re: 0x0e44, si: 0x00000000, ne: 0xc9210000c929},
		dm{re: 0x0e45, si: 0x00000000, ne: 0xc9290000c93c},
		dm{re: 0x0e46, si: 0x00000000, ne: 0xc93c0000c946},
		dm{re: 0x0e47, si: 0x00000000, ne: 0xc9460000c952},
		dm{re: 0x0e48, si: 0x00000000, ne: 0xc9520000c960},
		dm{re: 0x0e49, si: 0x00000000, ne: 0xc9600000c966},
		dm{re: 0x0e4a, si: 0x00000000, ne: 0xc9660000c974},
		dm{re: 0x0e4b, si: 0x00000000, ne: 0xc9740000c97f},
		dm{re: 0x0e4c, si: 0x00000000, ne: 0xc97f0000c987},
		dm{re: 0x0e4d, si: 0x00000000, ne: 0xc9870000c98f},
		dm{re: 0x0e4e, si: 0x00000000, ne: 0xc98f0000c99e},
		dm{re: 0x0e4f, si: 0x00000000, ne: 0xc99e0000c9a6},
		dm{re: 0x0e50, si: 0x00000000, ne: 0xc9a60000c9a8},
		dm{re: 0x0e51, si: 0x00000000, ne: 0xc9a80000c9b1},
		dm{re: 0x0e52, si: 0x00000000, ne: 0xc9b10000c9b6},
		dm{re: 0x0e53, si: 0x00000000, ne: 0xc9b60000c9bf},
		dm{re: 0x0e54, si: 0x00000000, ne: 0xc9bf0000c9c5},
		dm{re: 0x0e55, si: 0x00000000, ne: 0xc9c50000c9ce},
		dm{re: 0x0e56, si: 0x00000000, ne: 0xc9ce0000c9d5},
		dm{re: 0x0e57, si: 0x00000000, ne: 0xc9d50000c9dc},
		dm{re: 0x0e58, si: 0x00000000, ne: 0xc9dc0000c9e9},
		dm{re: 0x0e59, si: 0x00000000, ne: 0xc9e90000c9f1},
		dm{re: 0x0e5a, si: 0x00000000, ne: 0xc9f10000c9fb},
		dm{re: 0x0e5b, si: 0x00000000, ne: 0xc9fb0000ca02},
		dm{re: 0x0e5c, si: 0x00000000, ne: 0xca020000ca07},
		dm{re: 0x0e5d, si: 0x00000000, ne: 0xca070000ca0f},
		dm{re: 0x0e5e, si: 0x00000000, ne: 0xca0f0000ca19},
		dm{re: 0x0e5f, si: 0x00000000, ne: 0xca190000ca1e},
		dm{re: 0x0e60, si: 0x00000000, ne: 0x767300007678},
		dm{re: 0x0e61, si: 0x00000000, ne: 0xca1e0000ca27},
		dm{re: 0x0e62, si: 0x00000000, ne: 0xca270000ca2c},
		dm{re: 0x0e63, si: 0x00000000, ne: 0xca2c0000ca33},
		dm{re: 0x0e64, si: 0x00000000, ne: 0xca330000ca3b},
		dm{re: 0x0e65, si: 0x00000000, ne: 0xca3b0000ca41},
		dm{re: 0x0e66, si: 0x00000000, ne: 0xca410000ca50},
		dm{re: 0x0e67, si: 0x00000000, ne: 0xca500000ca64},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e6a, si: 0x00000000, ne: 0xca6a0000ca72},
		dm{re: -0x0001, si: 0x81720000817e, ne: 0x81720000817e},
		dm{re: 0x0e6c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e6d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e6e, si: 0x00000000, ne: 0xca750000ca82},
		dm{re: 0x0e6f, si: 0x00000000, ne: 0xca820000ca91},
		dm{re: 0x0e70, si: 0x00000000, ne: 0xca910000caa0},
		dm{re: 0x0e71, si: 0x00000000, ne: 0xcaa00000caae},
		dm{re: -0x0001, si: 0xcaae0000cab8, ne: 0xcab80000cac2},
		dm{re: -0x0001, si: 0xcac20000cacd, ne: 0xcacd0000cad8},
		dm{re: -0x0001, si: 0xcad80000cae1, ne: 0xcad80000cae1},
		dm{re: 0x0e72, si: 0x00000000, ne: 0xcae10000caed},
		dm{re: 0x0e73, si: 0x00000000, ne: 0xcaed0000cafc},
		dm{re: 0x0e74, si: 0x00000000, ne: 0xcafc0000cb09},
		dm{re: 0x0e75, si: 0x00000000, ne: 0xcb090000cb17},
		dm{re: 0x0e76, si: 0x00000000, ne: 0xcb170000cb24},
		dm{re: -0x0001, si: 0xcb240000cb32, ne: 0xcb320000cb38},
		dm{re: -0x0001, si: 0xcb380000cb40, ne: 0xcb400000cb52},
		dm{re: 0x0e77, si: 0x00000000, ne: 0xcb590000cb66},
		dm{re: -0x0001, si: 0xcb660000cb6f, ne: 0xcb6f0000cb75},
		dm{re: 0x0e78, si: 0x00000000, ne: 0xcb750000cb7b},
		dm{re: -0x0001, si: 0x00000000, ne: 0xcb870000cb90},
		dm{re: -0x0001, si: 0x00000000, ne: 0xcb960000cba0},
		dm{re: -0x0001, si: 0xcba40000cbad, ne: 0xcbad0000cbb7},
		dm{re: -0x0001, si: 0x00000000, ne: 0xcbbf0000cbc6},
		dm{re: 0x0e7d, si: 0x00000000, ne: 0xcbcc0000cbd4},
		dm{re: 0x0e7e, si: 0x00000000, ne: 0xcbd40000cbdf},
		dm{re: 0x0e80, si: 0x00000000, ne: 0xcbe70000cbf3},
		dm{re: 0x0e81, si: 0x00000000, ne: 0xcbf30000cbfb},
		dm{re: 0x0e82, si: 0x00000000, ne: 0xcbfb0000cc04},
		dm{re: -0x0001, si: 0xcc040000cc0e, ne: 0xcc0e0000cc18},
		dm{re: -0x0001, si: 0xcc180000cc1f, ne: 0xcc1f0000cc2b},
		dm{re: 0x0e83, si: 0x00000000, ne: 0xcc2b0000cc30},
		dm{re: 0x0e84, si: 0x00000000, ne: 0xcc2b0000cc30},
		dm{re: 0x0e85, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e86, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e87, si: 0x00000000, ne: 0xcc300000cc38},
		dm{re: 0x0e88, si: 0x00000000, ne: 0xcc300000cc38},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e8c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xcc520000cc5a, ne: 0xcc5a0000cc62},
		dm{re: -0x0001, si: 0xcc620000cc6a, ne: 0xcc6a0000cc72},
		dm{re: -0x0001, si: 0xcc720000cc7a, ne: 0xcc7a0000cc80},
		dm{re: -0x0001, si: 0xcc800000cc88, ne: 0xcc880000cc8f},
		dm{re: -0x0001, si: 0xcc8f0000cc97, ne: 0xcc970000cca2},
		dm{re: -0x0001, si: 0xcca20000ccaa, ne: 0xccaa0000ccb1},
		dm{re: -0x0001, si: 0xccb10000ccb9, ne: 0xccb90000ccc0},
		dm{re: -0x0001, si: 0xccc00000ccc8, ne: 0xccc80000ccd3},
		dm{re: 0x0e8d, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e91, si: 0x00000000, ne: 0xcce30000cce8},
		dm{re: 0x0e92, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e94, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e95, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e96, si: 0x00000000, ne: 0xccef0000ccf8},
		dm{re: 0x0e97, si: 0x00000000, ne: 0xccf80000cd01},
		dm{re: 0x0e98, si: 0x00000000, ne: 0x377200003778},
		dm{re: -0x0001, si: 0xcd010000cd0b, ne: 0xcd0b0000cd17},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xcd270000cd35, ne: 0xcd350000cd3c},
		dm{re: 0x0e9b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0e9c, si: 0x00000000, ne: 0xcd3c0000cd43},
		dm{re: 0x0e9e, si: 0x00000000, ne: 0x39ee000039f5},
		dm{re: 0x0e9f, si: 0x00000000, ne: 0xcd490000cd4d},
		dm{re: 0x0ea1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ea2, si: 0x00000000, ne: 0xcd540000cd5b},
		dm{re: 0x0ea3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ea5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ea6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ea8, si: 0x00000000, ne: 0xcd690000cd76},
		dm{re: 0x0ea9, si: 0x00000000, ne: 0xcd760000cd83},
		dm{re: -0x0001, si: 0xcd830000cd91, ne: 0xcd910000cd9f},
		dm{re: -0x0001, si: 0xcd9f0000cdaa, ne: 0xcdaa0000cdb5},
		dm{re: 0x0eaa, si: 0x00000000, ne: 0xcdb50000cdbd},
		dm{re: 0x0eab, si: 0x00000000, ne: 0xcdbd0000cdc6},
		dm{re: -0x0001, si: 0xcdc60000cdcf, ne: 0xcdc60000cdcf},
		dm{re: 0x0eac, si: 0x00000000, ne: 0xcdb50000cdbd},
		dm{re: 0x0ead, si: 0x00000000, ne: 0xcdcf0000cdd7},
		dm{re: 0x0eae, si: 0x00000000, ne: 0xcdd70000cde2},
		dm{re: -0x0001, si: 0xcde20000cdee, ne: 0xcde20000cdee},
		dm{re: 0x0eaf, si: 0x00000000, ne: 0xcdee0000cdf6},
		dm{re: 0x0eb0, si: 0x00000000, ne: 0xcdf60000cdfe},
		dm{re: 0x0eb1, si: 0x00000000, ne: 0xcdfe0000ce0b},
		dm{re: -0x0001, si: 0xce0b0000ce11, ne: 0xce110000ce18},
		dm{re: -0x0001, si: 0xce180000ce28, ne: 0xce280000ce38},
		dm{re: -0x0001, si: 0xce380000ce47, ne: 0xce470000ce56},
		dm{re: 0x0eb3, si: 0x00000000, ne: 0xce5a0000ce61},
		dm{re: 0x0eb4, si: 0x00000000, ne: 0x29f000002a4},
		dm{re: 0x0eb5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0eb7, si: 0x00000000, ne: 0xce6b0000ce71},
		dm{re: 0x0eb9, si: 0x00000000, ne: 0xce760000ce8b},
		dm{re: 0x0eba, si: 0x00000000, ne: 0xce8b0000ce90},
		dm{re: 0x0ebb, si: 0x00000000, ne: 0xce900000ce9a},
		dm{re: 0x0ebc, si: 0x00000000, ne: 0xce9a0000ceb2},
		dm{re: 0x0ebd, si: 0x00000000, ne: 0xceb20000ceca},
		dm{re: 0x0ebe, si: 0x00000000, ne: 0xceca0000cee2},
		dm{re: 0x0ebf, si: 0x00000000, ne: 0xcee20000cefa},
		dm{re: 0x0ec1, si: 0x00000000, ne: 0xcf000000cf07},
		dm{re: 0x0ec2, si: 0x00000000, ne: 0xcf070000cf11},
		dm{re: 0x0ec3, si: 0x00000000, ne: 0xcf110000cf18},
		dm{re: 0x0ec4, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x0ec5, si: 0x00000000, ne: 0xcf180000cf1f},
		dm{re: 0x0ec6, si: 0x00000000, ne: 0xcf1f0000cf28},
		dm{re: 0x0ec7, si: 0x00000000, ne: 0xcf280000cf34},
		dm{re: 0x0ec8, si: 0x00000000, ne: 0xcf340000cf3f},
		dm{re: 0x0ec9, si: 0x00000000, ne: 0xcf3f0000cf49},
		dm{re: 0x0eca, si: 0x00000000, ne: 0xcf490000cf55},
		dm{re: 0x0ecb, si: 0x00000000, ne: 0xcf550000cf5c},
		dm{re: 0x0ecc, si: 0x00000000, ne: 0xcf5c0000cf63},
		dm{re: 0x0ecd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0ecf, si: 0x00000000, ne: 0xcf6b0000cf7a},
		dm{re: 0x0ed0, si: 0x00000000, ne: 0xcf7a0000cf8c},
		dm{re: 0x0ed1, si: 0x00000000, ne: 0xcf8c0000cf9b},
		dm{re: 0x0ed2, si: 0x00000000, ne: 0xcf9b0000cfaf},
		dm{re: 0x0ed3, si: 0x00000000, ne: 0xcfaf0000cfc3},
		dm{re: 0x0ed4, si: 0x00000000, ne: 0xcfc30000cfd4},
		dm{re: 0x0ed5, si: 0x00000000, ne: 0xcfd40000cfe4},
		dm{re: 0x0ed6, si: 0x00000000, ne: 0xcfe40000cff4},
		dm{re: 0x0ed7, si: 0x00000000, ne: 0xcff40000d007},
		dm{re: 0x0ed8, si: 0x00000000, ne: 0xd0070000d017},
		dm{re: 0x0ed9, si: 0x00000000, ne: 0xd0170000d027},
		dm{re: 0x0eda, si: 0x00000000, ne: 0xd0270000d03a},
		dm{re: 0x0edb, si: 0x00000000, ne: 0xd03a0000d048},
		dm{re: 0x0edc, si: 0x00000000, ne: 0xd0480000d05a},
		dm{re: -0x0001, si: 0xd05a0000d064, ne: 0xd0640000d075},
		dm{re: -0x0001, si: 0xd0750000d07f, ne: 0xd07f0000d095},
		dm{re: -0x0001, si: 0xd0950000d099, ne: 0xd0990000d0ac},
		dm{re: 0x0edd, si: 0x00000000, ne: 0xd0ac0000d0bd},
		dm{re: 0x0ede, si: 0x00000000, ne: 0xd0bd0000d0d1},
		dm{re: 0x0edf, si: 0x00000000, ne: 0xd0d10000d0e1},
		dm{re: 0x0ee0, si: 0x00000000, ne: 0xd0e10000d0f4},
		dm{re: 0x0ee1, si: 0x00000000, ne: 0xd0f40000d107},
		dm{re: 0x0ee2, si: 0x00000000, ne: 0xd1070000d118},
		dm{re: 0x0ee3, si: 0x00000000, ne: 0xd1180000d12b},
		dm{re: 0x0ee4, si: 0x00000000, ne: 0xd12b0000d142},
		dm{re: 0x0ee5, si: 0x00000000, ne: 0xd1420000d156},
		dm{re: 0x0ee6, si: 0x00000000, ne: 0xd1560000d16a},
		dm{re: 0x0ee7, si: 0x00000000, ne: 0xd16a0000d17b},
		dm{re: 0x0ee8, si: 0x00000000, ne: 0xd17b0000d191},
		dm{re: 0x0ee9, si: 0x00000000, ne: 0xd1910000d1a8},
		dm{re: 0x0eea, si: 0x00000000, ne: 0xd1a80000d1bd},
		dm{re: 0x0eeb, si: 0x00000000, ne: 0xd1bd0000d1d5},
		dm{re: 0x0eec, si: 0x00000000, ne: 0xd1d50000d1ef},
		dm{re: 0x0eed, si: 0x00000000, ne: 0xd1ef0000d206},
		dm{re: 0x0eee, si: 0x00000000, ne: 0xd2060000d21a},
		dm{re: 0x0eef, si: 0x00000000, ne: 0xd21a0000d22d},
		dm{re: 0x0ef0, si: 0x00000000, ne: 0xd22d0000d241},
		dm{re: 0x0ef1, si: 0x00000000, ne: 0xd2410000d252},
		dm{re: 0x0ef2, si: 0x00000000, ne: 0xd2520000d263},
		dm{re: 0x0ef3, si: 0x00000000, ne: 0xd2630000d274},
		dm{re: 0x0ef4, si: 0x00000000, ne: 0xd2740000d285},
		dm{re: 0x0ef5, si: 0x00000000, ne: 0xd2850000d296},
		dm{re: 0x0ef6, si: 0x00000000, ne: 0xd2960000d2a7},
		dm{re: 0x0ef7, si: 0x00000000, ne: 0xd2a70000d2b8},
		dm{re: 0x0ef8, si: 0x00000000, ne: 0xd2b80000d2c9},
		dm{re: 0x0ef9, si: 0x00000000, ne: 0xd2c90000d2db},
		dm{re: 0x0efa, si: 0x00000000, ne: 0xd2db0000d2ea},
		dm{re: 0x0efb, si: 0x00000000, ne: 0xd2ea0000d2fb},
		dm{re: 0x0efc, si: 0x00000000, ne: 0xd2fb0000d30c},
		dm{re: 0x0efd, si: 0x00000000, ne: 0xd30c0000d31d},
		dm{re: 0x0efe, si: 0x00000000, ne: 0xd31d0000d32d},
		dm{re: 0x0eff, si: 0x00000000, ne: 0xd32d0000d33d},
		dm{re: 0x0f00, si: 0x00000000, ne: 0xd31d0000d32d},
		dm{re: 0x0f01, si: 0x00000000, ne: 0xd33d0000d348},
		dm{re: 0x0f03, si: 0x00000000, ne: 0xd34e0000d358},
		dm{re: 0x0f04, si: 0x00000000, ne: 0xd3580000d35f},
		dm{re: 0x0f05, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0f06, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0f07, si: 0x00000000, ne: 0xd34e0000d358},
		dm{re: 0x0f08, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0f09, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: 0x0f0b, si: 0x00000000, ne: 0xd3660000d36c},
		dm{re: -0x0001, si: 0xd36c0000d374, ne: 0xd3740000d37f},
		dm{re: 0x0f0c, si: 0x00000000, ne: 0xd37f0000d386},
		dm{re: 0x0f0d, si: 0x00000000, ne: 0xd3860000d38c},
		dm{re: -0x0001, si: 0xd38c0000d393, ne: 0xd3930000d397},
		dm{re: 0x0f0e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0f0f, si: 0x00000000, ne: 0xd3970000d39e},
		dm{re: 0x0f11, si: 0x00000000, ne: 0x73db000073dd},
		dm{re: 0x0f12, si: 0x00000000, ne: 0x992000009923},
		dm{re: 0x0f13, si: 0x00000000, ne: 0xd3a30000d3a5},
		dm{re: 0x0f14, si: 0x00000000, ne: 0x3ecf00003ed1},
		dm{re: 0x0f15, si: 0x00000000, ne: 0xb9100000b912},
		dm{re: 0x0f16, si: 0x00000000, ne: 0xd3a50000d3a8},
		dm{re: 0x0f17, si: 0x00000000, ne: 0xd3a80000d3aa},
		dm{re: 0x0f18, si: 0x00000000, ne: 0x4da300004da5},
		dm{re: 0x0f19, si: 0x00000000, ne: 0xd3aa0000d3ad},
		dm{re: 0x0f1a, si: 0x00000000, ne: 0xd3ad0000d3ae},
		dm{re: 0x0f1b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0f1d, si: 0x00000000, ne: 0xd3b30000d3ba},
		dm{re: 0x0f1e, si: 0x00000000, ne: 0xd3ba0000d3c2},
		dm{re: 0x0f1f, si: 0x00000000, ne: 0xd3c20000d3c5},
		dm{re: 0x0f20, si: 0x00000000, ne: 0xd3c50000d3c8},
		dm{re: 0x0f21, si: 0x00000000, ne: 0xd3c80000d3ca},
		dm{re: 0x0f22, si: 0x00000000, ne: 0xd3ca0000d3d1},
		dm{re: 0x0f23, si: 0x00000000, ne: 0xd3d10000d3d8},
		dm{re: 0x0f24, si: 0x00000000, ne: 0x73db000073dd},
		dm{re: 0x0f25, si: 0x00000000, ne: 0xd3d80000d3df},
		dm{re: 0x0f26, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0f27, si: 0x00000000, ne: 0xd3df0000d3e2},
		dm{re: 0x0f28, si: 0x00000000, ne: 0xd3e20000d3e8},
		dm{re: 0x0f29, si: 0x00000000, ne: 0x15f6000015f9},
		dm{re: 0x0f2a, si: 0x00000000, ne: 0xd3e80000d3eb},
		dm{re: 0x0f2b, si: 0x00000000, ne: 0xd3eb0000d3ee},
		dm{re: 0x0f2c, si: 0x00000000, ne: 0xd3ee0000d3f5},
		dm{re: 0x0f2d, si: 0x00000000, ne: 0xd3f50000d3f8},
		dm{re: 0x0f2e, si: 0x00000000, ne: 0xd3f80000d3fb},
		dm{re: -0x0001, si: 0xd3fb0000d403, ne: 0xd4030000d40b},
		dm{re: 0x0f2f, si: 0x00000000, ne: 0x4da300004da5},
		dm{re: 0x0f30, si: 0x00000000, ne: 0xd40b0000d412},
		dm{re: 0x0f31, si: 0x00000000, ne: 0xd4120000d419},
		dm{re: 0x0f32, si: 0x00000000, ne: 0xd4190000d41e},
		dm{re: 0x0f33, si: 0x00000000, ne: 0xd41e0000d429},
		dm{re: 0x0f34, si: 0x00000000, ne: 0xd4290000d42f},
		dm{re: 0x0f35, si: 0x00000000, ne: 0xd42f0000d43b},
		dm{re: 0x0f36, si: 0x00000000, ne: 0x743600007438},
		dm{re: 0x0f37, si: 0x00000000, ne: 0x9bcf00009bd5},
		dm{re: 0x0f38, si: 0x00000000, ne: 0xd43b0000d43e},
		dm{re: 0x0f39, si: 0x00000000, ne: 0xd43e0000d447},
		dm{re: 0x0f3a, si: 0x00000000, ne: 0xd4470000d44e},
		dm{re: 0x0f3b, si: 0x00000000, ne: 0xd44e0000d455},
		dm{re: 0x0f3c, si: 0x00000000, ne: 0xd4550000d459},
		dm{re: 0x0f3d, si: 0x00000000, ne: 0xd4590000d45c},
		dm{re: 0x0f3e, si: 0x00000000, ne: 0xd45c0000d463},
		dm{re: 0x0f3f, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x0f40, si: 0x00000000, ne: 0xd4630000d465},
		dm{re: 0x0f41, si: 0x00000000, ne: 0xb54c0000b553},
		dm{re: 0x0f42, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0f43, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0f44, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0f46, si: 0x00000000, ne: 0xd46c0000d473},
		dm{re: 0x0f47, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0f48, si: 0x00000000, ne: 0xd4730000d487},
		dm{re: 0x0f4a, si: 0x00000000, ne: 0xd48c0000d497},
		dm{re: 0x0f4b, si: 0x00000000, ne: 0xd4970000d4a4},
		dm{re: 0x0f4c, si: 0x00000000, ne: 0xd4a40000d4b4},
		dm{re: 0x0f4d, si: 0x00000000, ne: 0xd4b40000d4c2},
		dm{re: 0x0f4f, si: 0x00000000, ne: 0xd4c70000d4cf},
		dm{re: 0x0f50, si: 0x00000000, ne: 0xd4cf0000d4d8},
		dm{re: 0x0f51, si: 0x00000000, ne: 0xd4d80000d4df},
		dm{re: 0x0f52, si: 0x00000000, ne: 0xd4df0000d4e8},
		dm{re: -0x0001, si: 0xd4f00000d503, ne: 0xd5030000d50f},
		dm{re: -0x0001, si: 0xd50f0000d515, ne: 0xd5150000d523},
		dm{re: 0x0f54, si: 0x00000000, ne: 0xd5230000d531},
		dm{re: 0x0f55, si: 0x00000000, ne: 0xd5310000d53d},
		dm{re: 0x0f56, si: 0x00000000, ne: 0xd53d0000d544},
		dm{re: 0x0f57, si: 0x00000000, ne: 0xd5440000d549},
		dm{re: 0x0f58, si: 0x00000000, ne: 0xd5490000d551},
		dm{re: 0x0f59, si: 0x00000000, ne: 0xd5510000d55e},
		dm{re: 0x0f5a, si: 0x00000000, ne: 0xd55e0000d568},
		dm{re: 0x0f5b, si: 0x00000000, ne: 0xd5680000d570},
		dm{re: -0x0001, si: 0xd5700000d574, ne: 0xd5740000d57f},
		dm{re: 0x0f5c, si: 0x00000000, ne: 0xd57f0000d588},
		dm{re: 0x0f5d, si: 0x00000000, ne: 0xd5880000d598},
		dm{re: 0x0f5e, si: 0x00000000, ne: 0xd5980000d5aa},
		dm{re: -0x0001, si: 0xd5aa0000d5ae, ne: 0xd5ae0000d5b9},
		dm{re: 0x0f5f, si: 0x00000000, ne: 0xd5b90000d5c6},
		dm{re: -0x0001, si: 0xd5c60000d5ca, ne: 0xd5ca0000d5d7},
		dm{re: -0x0001, si: 0xd5d70000d5dc, ne: 0xd5dc0000d5e8},
		dm{re: -0x0001, si: 0xd5e80000d5ed, ne: 0xd5ed0000d5f9},
		dm{re: 0x0f60, si: 0x00000000, ne: 0xd5f90000d602},
		dm{re: 0x0f61, si: 0x00000000, ne: 0xd6020000d60b},
		dm{re: 0x0f62, si: 0x00000000, ne: 0xd60b0000d619},
		dm{re: 0x0f63, si: 0x00000000, ne: 0xd6190000d626},
		dm{re: 0x0f64, si: 0x00000000, ne: 0xd6260000d636},
		dm{re: 0x0f65, si: 0x00000000, ne: 0xd6360000d645},
		dm{re: 0x0f66, si: 0x00000000, ne: 0xd6450000d652},
		dm{re: 0x0f67, si: 0x00000000, ne: 0xd6520000d658},
		dm{re: 0x0f68, si: 0x00000000, ne: 0xd6580000d667},
		dm{re: 0x0f69, si: 0x00000000, ne: 0xd6670000d674},
		dm{re: 0x0f6a, si: 0x00000000, ne: 0xd6740000d67d},
		dm{re: 0x0f6b, si: 0x00000000, ne: 0xd67d0000d686},
		dm{re: 0x0f6c, si: 0x00000000, ne: 0xd6860000d68f},
		dm{re: 0x0f6d, si: 0x00000000, ne: 0xd68f0000d694},
		dm{re: 0x0f6e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0f6f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0f70, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0f72, si: 0x00000000, ne: 0xd6940000d69a},
		dm{re: 0x0f73, si: 0x00000000, ne: 0xd69a0000d6a3},
		dm{re: 0x0f74, si: 0x00000000, ne: 0xd6a30000d6ac},
		dm{re: 0x0f75, si: 0x00000000, ne: 0xd6ac0000d6b5},
		dm{re: -0x0001, si: 0xd6b50000d6c7, ne: 0xd6b50000d6c7},
		dm{re: 0x0f76, si: 0x00000000, ne: 0xd6c70000d6d0},
		dm{re: 0x0f77, si: 0x00000000, ne: 0xd6d00000d6d9},
		dm{re: 0x0f78, si: 0x00000000, ne: 0xd6d90000d6e2},
		dm{re: -0x0001, si: 0xd6e20000d6e9, ne: 0xd6e90000d6f2},
		dm{re: -0x0001, si: 0xd6f20000d702, ne: 0xd6f20000d702},
		dm{re: 0x0f79, si: 0x00000000, ne: 0xd7020000d70e},
		dm{re: -0x0001, si: 0xd70e0000d724, ne: 0xd70e0000d724},
		dm{re: -0x0001, si: 0xd7240000d731, ne: 0xd7240000d731},
		dm{re: -0x0001, si: 0xd7310000d743, ne: 0xd7310000d743},
		dm{re: 0x0f7a, si: 0x00000000, ne: 0xd7430000d74c},
		dm{re: 0x0f7b, si: 0x00000000, ne: 0xd74c0000d755},
		dm{re: -0x0001, si: 0xd7550000d75c, ne: 0xd75c0000d768},
		dm{re: -0x0001, si: 0xd7680000d771, ne: 0xd7680000d771},
		dm{re: -0x0001, si: 0xd7710000d786, ne: 0xd7710000d786},
		dm{re: -0x0001, si: 0xd7860000d792, ne: 0xd7860000d792},
		dm{re: -0x0001, si: 0xd7920000d7a4, ne: 0xd7920000d7a4},
		dm{re: 0x0f7c, si: 0x00000000, ne: 0xd7a40000d7ad},
		dm{re: 0x0f7d, si: 0x00000000, ne: 0xd7ad0000d7b7},
		dm{re: -0x0001, si: 0xd7b70000d7c1, ne: 0xd7b70000d7c1},
		dm{re: -0x0001, si: 0xd7c10000d7cf, ne: 0xd7c10000d7cf},
		dm{re: 0x0f7e, si: 0x00000000, ne: 0xd7cf0000d7dc},
		dm{re: -0x0001, si: 0xd7dc0000d7e9, ne: 0xd7dc0000d7e9},
		dm{re: -0x0001, si: 0xd7e90000d7f4, ne: 0xd7e90000d7f4},
		dm{re: 0x0f7f, si: 0x00000000, ne: 0xd7f40000d7fc},
		dm{re: -0x0001, si: 0x00000000, ne: 0xd8050000d80e},
		dm{re: 0x0f82, si: 0x00000000, ne: 0xd8130000d81a},
		dm{re: 0x0f83, si: 0x00000000, ne: 0xd81a0000d821},
		dm{re: 0x0f84, si: 0x00000000, ne: 0xd8210000d82d},
		dm{re: 0x0f85, si: 0x00000000, ne: 0xd82d0000d839},
		dm{re: 0x0f86, si: 0x00000000, ne: 0xd8390000d841},
		dm{re: 0x0f87, si: 0x00000000, ne: 0xd8410000d847},
		dm{re: 0x0f88, si: 0x00000000, ne: 0xd8470000d84d},
		dm{re: 0x0f89, si: 0x00000000, ne: 0xd84d0000d854},
		dm{re: 0x0f8a, si: 0x00000000, ne: 0xd8540000d85a},
		dm{re: 0x0f8b, si: 0x00000000, ne: 0xd85a0000d861},
		dm{re: 0x0f8c, si: 0x00000000, ne: 0xd8610000d868},
		dm{re: 0x0f8e, si: 0x00000000, ne: 0xd86d0000d879},
		dm{re: 0x0f8f, si: 0x00000000, ne: 0xd8790000d886},
		dm{re: 0x0f90, si: 0x00000000, ne: 0xd8860000d893},
		dm{re: 0x0f92, si: 0x00000000, ne: 0xd8960000d89e},
		dm{re: 0x0f93, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xd89e0000d8b6, ne: 0xd8b60000d8ca},
		dm{re: 0x0f95, si: 0x00000000, ne: 0xd8cf0000d8d6},
		dm{re: 0x0f96, si: 0x00000000, ne: 0x39c0000039f},
		dm{re: 0x0f98, si: 0x00000000, ne: 0xd8db0000d8e2},
		dm{re: 0x0f99, si: 0x00000000, ne: 0xd8e20000d8e8},
		dm{re: 0x0f9b, si: 0x00000000, ne: 0xd8ec0000d8f0},
		dm{re: 0x0f9c, si: 0x00000000, ne: 0xd8f00000d8fb},
		dm{re: 0x0f9d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0f9e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0fa0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0fa1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0fa2, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0fa5, si: 0x00000000, ne: 0xd9120000d922},
		dm{re: -0x0001, si: 0xd92a0000d930, ne: 0xd9300000d936},
		dm{re: -0x0001, si: 0xd9360000d93d, ne: 0xd93d0000d944},
		dm{re: -0x0001, si: 0xd9440000d94c, ne: 0xd94c0000d955},
		dm{re: 0x0fa7, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xcd210000cd27, ne: 0xcd210000cd27},
		dm{re: -0x0001, si: 0xd95c0000d966, ne: 0xd9660000d970},
		dm{re: -0x0001, si: 0xd9700000d975, ne: 0xd9750000d97a},
		dm{re: -0x0001, si: 0xd97a0000d980, ne: 0xd9800000d987},
		dm{re: -0x0001, si: 0xd9870000d98e, ne: 0xd98e0000d995},
		dm{re: -0x0001, si: 0xd9950000d99d, ne: 0xd99d0000d9a5},
		dm{re: 0x0fa9, si: 0x00000000, ne: 0xd9a50000d9af},
		dm{re: -0x0001, si: 0xd9af0000d9b4, ne: 0xd9b40000d9b9},
		dm{re: -0x0001, si: 0xd9b90000d9c4, ne: 0xd9c40000d9cf},
		dm{re: -0x0001, si: 0xd9cf0000d9da, ne: 0xd9da0000d9e5},
		dm{re: -0x0001, si: 0xd9e50000d9eb, ne: 0xd9e50000d9eb},
		dm{re: -0x0001, si: 0xd9eb0000d9f1, ne: 0xd9f10000d9f7},
		dm{re: -0x0001, si: 0xd9f70000d9fb, ne: 0xd9fb0000d9ff},
		dm{re: -0x0001, si: 0xd9ff0000da08, ne: 0xda080000da11},
		dm{re: -0x0001, si: 0xda110000da16, ne: 0xda160000da1b},
		dm{re: -0x0001, si: 0xda1b0000da20, ne: 0x2ee600002eeb},
		dm{re: -0x0001, si: 0xda200000da27, ne: 0xda270000da2f},
		dm{re: -0x0001, si: 0xda2f0000da39, ne: 0xda390000da43},
		dm{re: -0x0001, si: 0xda430000da4b, ne: 0xda4b0000da53},
		dm{re: -0x0001, si: 0xda530000da58, ne: 0xda580000da5d},
		dm{re: -0x0001, si: 0xda5d0000da61, ne: 0xda610000da63},
		dm{re: -0x0001, si: 0xda630000da6a, ne: 0xda6a0000da71},
		dm{re: -0x0001, si: 0xda710000da77, ne: 0xda770000da7d},
		dm{re: -0x0001, si: 0xda7d0000da84, ne: 0xda840000da8b},
		dm{re: -0x0001, si: 0xda8b0000da92, ne: 0xda920000da99},
		dm{re: -0x0001, si: 0xda990000da9d, ne: 0xda9d0000daa1},
		dm{re: -0x0001, si: 0xdaa10000daa5, ne: 0x93a7000093ab},
		dm{re: 0x0faa, si: 0x00000000, ne: 0xdaa50000daac},
		dm{re: -0x0001, si: 0xdaac0000dab1, ne: 0xdab10000dab4},
		dm{re: 0x0fab, si: 0x00000000, ne: 0xdab40000daba},
		dm{re: 0x0fac, si: 0x00000000, ne: 0xdaba0000dac3},
		dm{re: -0x0001, si: 0xdac30000daca, ne: 0xdaca0000dad0},
		dm{re: -0x0001, si: 0xdad00000dad8, ne: 0xdad80000dadf},
		dm{re: -0x0001, si: 0xdadf0000dae8, ne: 0xdae80000daf1},
		dm{re: -0x0001, si: 0xdaf10000daf5, ne: 0xdaf50000daf9},
		dm{re: -0x0001, si: 0xdaf90000db00, ne: 0xdb000000db07},
		dm{re: -0x0001, si: 0xdb070000db10, ne: 0xdb100000db19},
		dm{re: -0x0001, si: 0xdb190000db23, ne: 0xdb230000db2d},
		dm{re: 0x0fad, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xdb2d0000db33, ne: 0xdb330000db39},
		dm{re: 0x0fae, si: 0x00000000, ne: 0xdb390000db46},
		dm{re: 0x0fb0, si: 0x00000000, ne: 0xdb4f0000db54},
		dm{re: 0x0fb1, si: 0x00000000, ne: 0xdb540000db5d},
		dm{re: 0x0fb2, si: 0x00000000, ne: 0xdb5d0000db64},
		dm{re: 0x0fb3, si: 0x00000000, ne: 0xdb640000db69},
		dm{re: 0x0fb4, si: 0x00000000, ne: 0xdb690000db80},
		dm{re: 0x0fb5, si: 0x00000000, ne: 0xdb800000db92},
		dm{re: 0x0fb6, si: 0x00000000, ne: 0xdb920000db9a},
		dm{re: 0x0fb7, si: 0x00000000, ne: 0xdb9a0000dbac},
		dm{re: 0x0fb8, si: 0x00000000, ne: 0xdbac0000dbb7},
		dm{re: -0x0001, si: 0xdbb70000dbc9, ne: 0xdbc90000dbd5},
		dm{re: 0x0fb9, si: 0x00000000, ne: 0xdb920000db9a},
		dm{re: -0x0001, si: 0xdbd50000dbea, ne: 0xdbea0000dbf5},
		dm{re: 0x0fba, si: 0x00000000, ne: 0xdbf50000dc00},
		dm{re: -0x0001, si: 0xdc000000dc12, ne: 0xdc120000dc1a},
		dm{re: 0x0fbb, si: 0x00000000, ne: 0xdc1a0000dc25},
		dm{re: 0x0fbc, si: 0x00000000, ne: 0xdc250000dc2d},
		dm{re: 0x0fbd, si: 0x00000000, ne: 0xdc2d0000dc34},
		dm{re: -0x0001, si: 0xdc340000dc45, ne: 0xdc450000dc4c},
		dm{re: -0x0001, si: 0xdc4c0000dc63, ne: 0xdc630000dc70},
		dm{re: 0x0fbe, si: 0x00000000, ne: 0xdc700000dc79},
		dm{re: -0x0001, si: 0xdc790000dc88, ne: 0xdc880000dc8d},
		dm{re: -0x0001, si: 0xdc8d0000dca3, ne: 0xdca30000dcaa},
		dm{re: 0x0fbf, si: 0x00000000, ne: 0x7d5000007d58},
		dm{re: -0x0001, si: 0xdcaa0000dcba, ne: 0xdcba0000dcc5},
		dm{re: 0x0fc0, si: 0x00000000, ne: 0xdcc50000dccb},
		dm{re: -0x0001, si: 0xdccb0000dce2, ne: 0xdce20000dce9},
		dm{re: -0x0001, si: 0xdce90000dd02, ne: 0xdd020000dd0b},
		dm{re: 0x0fc1, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xdd120000dd18, ne: 0xdd180000dd20},
		dm{re: 0x0fc3, si: 0x00000000, ne: 0xdd200000dd2c},
		dm{re: -0x0001, si: 0xdd2c0000dd32, ne: 0xdd320000dd3e},
		dm{re: -0x0001, si: 0xdd3e0000dd44, ne: 0xdd440000dd4d},
		dm{re: -0x0001, si: 0xdd4d0000dd53, ne: 0xdd530000dd57},
		dm{re: -0x0001, si: 0xdd570000dd5d, ne: 0xdd5d0000dd61},
		dm{re: -0x0001, si: 0xdd610000dd70, ne: 0xdd700000dd7f},
		dm{re: -0x0001, si: 0xdd7f0000dd88, ne: 0xdd7f0000dd88},
		dm{re: -0x0001, si: 0xdd880000dd91, ne: 0xdd910000dd97},
		dm{re: -0x0001, si: 0xdd970000dda0, ne: 0xdda00000dda6},
		dm{re: -0x0001, si: 0xdda60000ddaf, ne: 0xddaf0000ddbe},
		dm{re: -0x0001, si: 0xddbe0000ddc7, ne: 0xddc70000ddd4},
		dm{re: -0x0001, si: 0xddd40000dddd, ne: 0xdddd0000ddeb},
		dm{re: -0x0001, si: 0xddeb0000ddf5, ne: 0xddeb0000ddf5},
		dm{re: -0x0001, si: 0xddf50000ddfa, ne: 0xddfa0000de00},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0fc6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0fc8, si: 0x00000000, ne: 0xde130000de1f},
		dm{re: 0x0fc9, si: 0x00000000, ne: 0xde1f0000de29},
		dm{re: 0x0fca, si: 0x00000000, ne: 0xde1f0000de29},
		dm{re: 0x0fcb, si: 0x00000000, ne: 0xde290000de37},
		dm{re: 0x0fcc, si: 0x00000000, ne: 0xde290000de37},
		dm{re: 0x0fcd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x0fce, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xde440000de4c, ne: 0xde4c0000de50},
		dm{re: 0x0fd0, si: 0x00000000, ne: 0xde500000de55},
		dm{re: 0x0fd1, si: 0x00000000, ne: 0xde550000de61},
		dm{re: 0x0fd2, si: 0x00000000, ne: 0xde610000de65},
		dm{re: 0x0fd3, si: 0x00000000, ne: 0xde650000de6b},
		dm{re: 0x0fd4, si: 0x00000000, ne: 0xde6b0000de73},
		dm{re: 0x0fd5, si: 0x00000000, ne: 0xde730000de7a},
		dm{re: 0x0fd6, si: 0x00000000, ne: 0xde7a0000de84},
		dm{re: 0x0fd7, si: 0x00000000, ne: 0xde840000de8d},
		dm{re: 0x0fd8, si: 0x00000000, ne: 0xde8d0000de96},
		dm{re: 0x0fd9, si: 0x00000000, ne: 0xde960000de9c},
		dm{re: 0x0fda, si: 0x00000000, ne: 0xde9c0000dea3},
		dm{re: 0x0fdb, si: 0x00000000, ne: 0xdea30000dea7},
		dm{re: 0x0fdc, si: 0x00000000, ne: 0xdea70000deae},
		dm{re: 0x0fdd, si: 0x00000000, ne: 0xdeae0000deb5},
		dm{re: 0x0fde, si: 0x00000000, ne: 0xdeb50000debe},
		dm{re: 0x0fdf, si: 0x00000000, ne: 0xdebe0000dec6},
		dm{re: 0x0fe0, si: 0x00000000, ne: 0xdec60000decc},
		dm{re: 0x0fe1, si: 0x00000000, ne: 0xdecc0000ded4},
		dm{re: 0x0fe2, si: 0x00000000, ne: 0xded40000ded9},
		dm{re: 0x0fe3, si: 0x00000000, ne: 0xded90000deea},
		dm{re: 0x0fe4, si: 0x00000000, ne: 0xdeea0000def2},
		dm{re: 0x0fe5, si: 0x00000000, ne: 0xdef20000defb},
		dm{re: 0x0fe6, si: 0x00000000, ne: 0xdefb0000deff},
		dm{re: 0x0fe7, si: 0x00000000, ne: 0xdeff0000df0a},
		dm{re: 0x0fe8, si: 0x00000000, ne: 0xdf0a0000df15},
		dm{re: 0x0fe9, si: 0x00000000, ne: 0xdf150000df1f},
		dm{re: 0x0fea, si: 0x00000000, ne: 0xdf1f0000df2b},
		dm{re: 0x0feb, si: 0x00000000, ne: 0xdf2b0000df37},
		dm{re: 0x0fec, si: 0x00000000, ne: 0xdf370000df3e},
		dm{re: 0x0fed, si: 0x00000000, ne: 0xdf3e0000df46},
		dm{re: 0x0fee, si: 0x00000000, ne: 0xdf460000df51},
		dm{re: 0x0fef, si: 0x00000000, ne: 0xdf510000df5d},
		dm{re: 0x0ff0, si: 0x00000000, ne: 0xdf5d0000df67},
		dm{re: 0x0ff1, si: 0x00000000, ne: 0xdf670000df74},
		dm{re: 0x0ff2, si: 0x00000000, ne: 0xdf740000df81},
		dm{re: 0x0ff3, si: 0x00000000, ne: 0xdf810000df8e},
		dm{re: 0x0ff4, si: 0x00000000, ne: 0xdf8e0000df94},
		dm{re: 0x0ff5, si: 0x00000000, ne: 0xdf940000dfa5},
		dm{re: 0x0ff6, si: 0x00000000, ne: 0xdfa50000dfb2},
		dm{re: 0x0ff7, si: 0x00000000, ne: 0xdfb20000dfc2},
		dm{re: 0x0ff8, si: 0x00000000, ne: 0xdfc20000dfce},
		dm{re: 0x0ff9, si: 0x00000000, ne: 0xdfce0000dfdb},
		dm{re: 0x0ffa, si: 0x00000000, ne: 0xdfdb0000dfe8},
		dm{re: 0x0ffb, si: 0x00000000, ne: 0xdfe80000dffa},
		dm{re: 0x0ffc, si: 0x00000000, ne: 0xdffa0000e008},
		dm{re: 0x0ffd, si: 0x00000000, ne: 0xe0080000e015},
		dm{re: 0x0ffe, si: 0x00000000, ne: 0xe0150000e01f},
		dm{re: 0x0fff, si: 0x00000000, ne: 0xe01f0000e02d},
		dm{re: 0x1000, si: 0x00000000, ne: 0xe02d0000e035},
		dm{re: 0x1001, si: 0x00000000, ne: 0xe0350000e03e},
		dm{re: 0x1002, si: 0x00000000, ne: 0xdf8e0000df94},
		dm{re: 0x1003, si: 0x00000000, ne: 0xe03e0000e048},
		dm{re: 0x1004, si: 0x00000000, ne: 0xe0480000e054},
		dm{re: 0x1005, si: 0x00000000, ne: 0xe0540000e05b},
		dm{re: 0x1006, si: 0x00000000, ne: 0xe05b0000e066},
		dm{re: 0x1007, si: 0x00000000, ne: 0xe0660000e06c},
		dm{re: 0x1008, si: 0x00000000, ne: 0xe06c0000e077},
		dm{re: 0x1009, si: 0x00000000, ne: 0xe0770000e083},
		dm{re: 0x100a, si: 0x00000000, ne: 0xe0830000e090},
		dm{re: 0x100b, si: 0x00000000, ne: 0xe0900000e098},
		dm{re: 0x100c, si: 0x00000000, ne: 0xe0980000e0a4},
		dm{re: 0x100d, si: 0x00000000, ne: 0xe0a40000e0ab},
		dm{re: 0x100e, si: 0x00000000, ne: 0xe0ab0000e0b2},
		dm{re: 0x100f, si: 0x00000000, ne: 0xe0b20000e0be},
		dm{re: -0x0001, si: 0xe0be0000e0c6, ne: 0xe0c60000e0ce},
		dm{re: -0x0001, si: 0xe0ce0000e0d6, ne: 0xe0d60000e0de},
		dm{re: 0x1010, si: 0x00000000, ne: 0xe0de0000e0e4},
		dm{re: 0x1011, si: 0x00000000, ne: 0xe0e40000e0ef},
		dm{re: 0x1012, si: 0x00000000, ne: 0xe0ef0000e0fb},
		dm{re: 0x1013, si: 0x00000000, ne: 0xe0fb0000e10e},
		dm{re: 0x1014, si: 0x00000000, ne: 0xe10e0000e11a},
		dm{re: 0x1015, si: 0x00000000, ne: 0xe11a0000e125},
		dm{re: 0x1016, si: 0x00000000, ne: 0xe1250000e132},
		dm{re: 0x1017, si: 0x00000000, ne: 0xe1320000e138},
		dm{re: 0x1018, si: 0x00000000, ne: 0xe1380000e13f},
		dm{re: 0x1019, si: 0x00000000, ne: 0xe13f0000e14b},
		dm{re: 0x101a, si: 0x00000000, ne: 0xe14b0000e156},
		dm{re: 0x101b, si: 0x00000000, ne: 0xe1560000e162},
		dm{re: 0x101c, si: 0x00000000, ne: 0xe1620000e16f},
		dm{re: 0x101d, si: 0x00000000, ne: 0xe16f0000e176},
		dm{re: 0x101e, si: 0x00000000, ne: 0xe1760000e17c},
		dm{re: 0x101f, si: 0x00000000, ne: 0x8b2d00008b30},
		dm{re: 0x1020, si: 0x00000000, ne: 0xe17c0000e184},
		dm{re: 0x1021, si: 0x00000000, ne: 0xe1840000e18c},
		dm{re: 0x1022, si: 0x00000000, ne: 0xe18c0000e195},
		dm{re: -0x0001, si: 0xe1950000e19d, ne: 0xe19d0000e1a5},
		dm{re: 0x1023, si: 0x00000000, ne: 0xe1a50000e1b3},
		dm{re: 0x1024, si: 0x00000000, ne: 0xe1b30000e1bf},
		dm{re: 0x1025, si: 0x00000000, ne: 0xe1bf0000e1ca},
		dm{re: 0x1026, si: 0x00000000, ne: 0xe1ca0000e1db},
		dm{re: 0x1027, si: 0x00000000, ne: 0x2c8700002c8e},
		dm{re: 0x1028, si: 0x00000000, ne: 0xe1db0000e1e6},
		dm{re: 0x1029, si: 0x00000000, ne: 0xe1e60000e1ea},
		dm{re: 0x102a, si: 0x00000000, ne: 0xe1ea0000e1f9},
		dm{re: 0x102b, si: 0x00000000, ne: 0xe1f90000e203},
		dm{re: 0x102c, si: 0x00000000, ne: 0xe2030000e20c},
		dm{re: 0x102d, si: 0x00000000, ne: 0xe20c0000e215},
		dm{re: 0x102e, si: 0x00000000, ne: 0xe2150000e21d},
		dm{re: 0x102f, si: 0x00000000, ne: 0xe21d0000e22c},
		dm{re: 0x1030, si: 0x00000000, ne: 0xe22c0000e236},
		dm{re: -0x0001, si: 0xe2360000e249, ne: 0xe2490000e253},
		dm{re: -0x0001, si: 0xe2530000e265, ne: 0xe2650000e26e},
		dm{re: -0x0001, si: 0xe26e0000e284, ne: 0xe2840000e291},
		dm{re: -0x0001, si: 0xe2910000e2a3, ne: 0xe2a30000e2ac},
		dm{re: -0x0001, si: 0xe2ac0000e2bf, ne: 0xe2bf0000e2c9},
		dm{re: -0x0001, si: 0xe2c90000e2dc, ne: 0xe1f90000e203},
		dm{re: 0x1031, si: 0x00000000, ne: 0xe2dc0000e2f4},
		dm{re: 0x1032, si: 0x00000000, ne: 0xe2f40000e308},
		dm{re: -0x0001, si: 0xe3080000e318, ne: 0xe3180000e328},
		dm{re: -0x0001, si: 0xe3280000e335, ne: 0xe3350000e342},
		dm{re: 0x1033, si: 0x00000000, ne: 0xe3420000e358},
		dm{re: 0x1034, si: 0x00000000, ne: 0xe3580000e36a},
		dm{re: 0x1035, si: 0x00000000, ne: 0xe36a0000e376},
		dm{re: 0x1036, si: 0x00000000, ne: 0xe3760000e389},
		dm{re: 0x1037, si: 0x00000000, ne: 0xe3890000e39c},
		dm{re: -0x0001, si: 0xe39c0000e3a8, ne: 0xe36a0000e376},
		dm{re: -0x0001, si: 0xe3a80000e3b2, ne: 0xe3b20000e3bc},
		dm{re: -0x0001, si: 0xe3bc0000e3c7, ne: 0xe3c70000e3d2},
		dm{re: -0x0001, si: 0xe3d20000e3dd, ne: 0xe3dd0000e3e8},
		dm{re: -0x0001, si: 0xe3e80000e3f6, ne: 0xe3f60000e404},
		dm{re: -0x0001, si: 0xe4040000e40d, ne: 0xe40d0000e416},
		dm{re: 0x1038, si: 0x00000000, ne: 0xe4160000e425},
		dm{re: 0x1039, si: 0x00000000, ne: 0xe4250000e42d},
		dm{re: 0x103a, si: 0x00000000, ne: 0xe42d0000e436},
		dm{re: 0x103b, si: 0x00000000, ne: 0xe4360000e449},
		dm{re: 0x103c, si: 0x00000000, ne: 0xe4490000e457},
		dm{re: 0x103d, si: 0x00000000, ne: 0xe4570000e471},
		dm{re: 0x103e, si: 0x00000000, ne: 0xe4710000e490},
		dm{re: 0x103f, si: 0x00000000, ne: 0xe4900000e4a3},
		dm{re: 0x1040, si: 0x00000000, ne: 0xe4a30000e4b1},
		dm{re: 0x1041, si: 0x00000000, ne: 0xe4b10000e4bf},
		dm{re: 0x1042, si: 0x00000000, ne: 0xe4bf0000e4cc},
		dm{re: 0x1043, si: 0x00000000, ne: 0xe4cc0000e4d9},
		dm{re: 0x1044, si: 0x00000000, ne: 0xe4250000e42d},
		dm{re: 0x1045, si: 0x00000000, ne: 0xe02d0000e035},
		dm{re: 0x1046, si: 0x00000000, ne: 0xe4d90000e4e1},
		dm{re: 0x1047, si: 0x00000000, ne: 0xe4e10000e4e7},
		dm{re: -0x0001, si: 0xe4e70000e4f0, ne: 0xe4f00000e4f9},
		dm{re: 0x1048, si: 0x00000000, ne: 0xe4f90000e504},
		dm{re: 0x1049, si: 0x00000000, ne: 0xe4f90000e504},
		dm{re: 0x104a, si: 0x00000000, ne: 0xe5040000e50d},
		dm{re: -0x0001, si: 0xe50d0000e515, ne: 0xe50d0000e515},
		dm{re: -0x0001, si: 0xe5150000e51d, ne: 0xe5150000e51d},
		dm{re: 0x104b, si: 0x00000000, ne: 0xe51d0000e526},
		dm{re: -0x0001, si: 0xe5260000e52e, ne: 0xe52e0000e535},
		dm{re: 0x104c, si: 0x00000000, ne: 0xe5350000e540},
		dm{re: 0x104d, si: 0x00000000, ne: 0xe5400000e547},
		dm{re: 0x104e, si: 0x00000000, ne: 0xe5470000e54e},
		dm{re: 0x104f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1050, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1051, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1052, si: 0x00000000, ne: 0xe54e0000e556},
		dm{re: 0x1053, si: 0x00000000, ne: 0xe54e0000e556},
		dm{re: 0x1054, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1055, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1056, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1057, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1059, si: 0x00000000, ne: 0x73a3000073a6},
		dm{re: -0x0001, si: 0xe55b0000e560, ne: 0xe55b0000e560},
		dm{re: 0x105b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x105c, si: 0x00000000, ne: 0xe5650000e570},
		dm{re: 0x105d, si: 0x00000000, ne: 0xe5700000e57a},
		dm{re: 0x105e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x105f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1061, si: 0x00000000, ne: 0xe5840000e589},
		dm{re: 0x1062, si: 0x00000000, ne: 0xe5890000e58e},
		dm{re: 0x1063, si: 0x00000000, ne: 0xe58e0000e593},
		dm{re: 0x1064, si: 0x00000000, ne: 0xe5930000e594},
		dm{re: 0x1065, si: 0x00000000, ne: 0xe5940000e59a},
		dm{re: 0x1066, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1067, si: 0x00000000, ne: 0xe59a0000e5a4},
		dm{re: 0x1068, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1069, si: 0x00000000, ne: 0xe5a40000e5ae},
		dm{re: 0x106a, si: 0x00000000, ne: 0xe5ae0000e5b8},
		dm{re: 0x106b, si: 0x00000000, ne: 0xe5b80000e5c2},
		dm{re: 0x106c, si: 0x00000000, ne: 0xe5c20000e5d3},
		dm{re: 0x106d, si: 0x00000000, ne: 0xe5d30000e5e2},
		dm{re: 0x106e, si: 0x00000000, ne: 0xe5e20000e5f4},
		dm{re: 0x106f, si: 0x00000000, ne: 0xe5f40000e5fc},
		dm{re: 0x1070, si: 0x00000000, ne: 0xe5fc0000e606},
		dm{re: 0x1071, si: 0x00000000, ne: 0xe6060000e60b},
		dm{re: 0x1072, si: 0x00000000, ne: 0xe60b0000e614},
		dm{re: 0x1074, si: 0x00000000, ne: 0xe61a0000e624},
		dm{re: -0x0001, si: 0xe6240000e63a, ne: 0xe63a0000e650},
		dm{re: 0x1075, si: 0x00000000, ne: 0xe6500000e655},
		dm{re: 0x1077, si: 0x00000000, ne: 0xe65c0000e664},
		dm{re: 0x1078, si: 0x00000000, ne: 0xe6640000e66c},
		dm{re: -0x0001, si: 0xe66c0000e677, ne: 0xe6770000e683},
		dm{re: -0x0001, si: 0xe6830000e68c, ne: 0xe68c0000e697},
		dm{re: -0x0001, si: 0xe6970000e69f, ne: 0xe6970000e69f},
		dm{re: -0x0001, si: 0xe69f0000e6ad, ne: 0xe6ad0000e6bc},
		dm{re: -0x0001, si: 0xe6bc0000e6cb, ne: 0xe6cb0000e6db},
		dm{re: -0x0001, si: 0xe6db0000e6eb, ne: 0xe6eb0000e6fc},
		dm{re: -0x0001, si: 0xe6fc0000e704, ne: 0xe7040000e70c},
		dm{re: -0x0001, si: 0xe70c0000e718, ne: 0xe7180000e724},
		dm{re: 0x1079, si: 0x00000000, ne: 0xe7240000e734},
		dm{re: 0x107a, si: 0x00000000, ne: 0xe7340000e741},
		dm{re: 0x107b, si: 0x00000000, ne: 0xe7410000e751},
		dm{re: -0x0001, si: 0xe7510000e75f, ne: 0xe7510000e75f},
		dm{re: 0x107c, si: 0x00000000, ne: 0xe75f0000e76b},
		dm{re: 0x107d, si: 0x00000000, ne: 0xe76b0000e779},
		dm{re: 0x107e, si: 0x00000000, ne: 0xe7790000e788},
		dm{re: 0x107f, si: 0x00000000, ne: 0xe7880000e795},
		dm{re: 0x1080, si: 0x00000000, ne: 0xe7950000e7a4},
		dm{re: 0x1081, si: 0x00000000, ne: 0xe7a40000e7b7},
		dm{re: -0x0001, si: 0xe7b70000e7c5, ne: 0xe7c50000e7d3},
		dm{re: -0x0001, si: 0xe7d30000e7e4, ne: 0xe7e40000e7f6},
		dm{re: -0x0001, si: 0xe7f60000e804, ne: 0xe8040000e812},
		dm{re: -0x0001, si: 0xe8120000e81b, ne: 0xe7410000e751},
		dm{re: -0x0001, si: 0xe81b0000e826, ne: 0xe8260000e831},
		dm{re: 0x1082, si: 0x00000000, ne: 0xe8310000e839},
		dm{re: 0x1083, si: 0x00000000, ne: 0xe8390000e83e},
		dm{re: 0x1084, si: 0x00000000, ne: 0xe83e0000e849},
		dm{re: 0x1085, si: 0x00000000, ne: 0xe8490000e853},
		dm{re: 0x1086, si: 0x00000000, ne: 0xe8530000e859},
		dm{re: -0x0001, si: 0xe8590000e864, ne: 0xe8640000e868},
		dm{re: 0x1087, si: 0x00000000, ne: 0xe8680000e86d},
		dm{re: 0x1088, si: 0x00000000, ne: 0xe86d0000e877},
		dm{re: 0x1089, si: 0x00000000, ne: 0xe8770000e880},
		dm{re: 0x108a, si: 0x00000000, ne: 0xe8800000e885},
		dm{re: 0x108b, si: 0x00000000, ne: 0xe8850000e88f},
		dm{re: 0x108c, si: 0x00000000, ne: 0xe88f0000e89b},
		dm{re: 0x108d, si: 0x00000000, ne: 0xe89b0000e8a7},
		dm{re: 0x108e, si: 0x00000000, ne: 0xe8a70000e8ae},
		dm{re: 0x108f, si: 0x00000000, ne: 0xe8ae0000e8b8},
		dm{re: -0x0001, si: 0xe8b80000e8c8, ne: 0xe8c80000e8d8},
		dm{re: -0x0001, si: 0xe8d80000e8df, ne: 0xe8df0000e8e6},
		dm{re: 0x1090, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1092, si: 0x00000000, ne: 0xe8eb0000e8fb},
		dm{re: 0x1093, si: 0x00000000, ne: 0x531c00005321},
		dm{re: -0x0001, si: 0xe9080000e90d, ne: 0xe90d0000e913},
		dm{re: -0x0001, si: 0xe9130000e91e, ne: 0xe91e0000e927},
		dm{re: 0x1094, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1097, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xe9320000e93c, ne: 0xe93c0000e940},
		dm{re: 0x1098, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xe9400000e94e, ne: 0xe94e0000e956},
		dm{re: -0x0001, si: 0xe9560000e963, ne: 0xe9630000e96a},
		dm{re: -0x0001, si: 0xe96a0000e976, ne: 0xe9760000e97c},
		dm{re: 0x1099, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x109c, si: 0x00000000, ne: 0xe9880000e98e},
		dm{re: 0x109d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x109f, si: 0x00000000, ne: 0xe9910000e99f},
		dm{re: 0x10a0, si: 0x00000000, ne: 0xe99f0000e9a7},
		dm{re: 0x10a1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x10a2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x10a3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x10a4, si: 0x00000000, ne: 0xe9a70000e9b5},
		dm{re: 0x10a5, si: 0x00000000, ne: 0xe9b50000e9c5},
		dm{re: 0x10a6, si: 0x00000000, ne: 0xe9c50000e9d5},
		dm{re: -0x0001, si: 0xe9db0000e9e9, ne: 0xe9e90000e9f0},
		dm{re: -0x0001, si: 0xe9f00000e9fa, ne: 0xe9fa0000e9fd},
		dm{re: 0x10a8, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xea0e0000ea1c, ne: 0xea1c0000ea28},
		dm{re: 0x10ac, si: 0x00000000, ne: 0x4a2c00004a31},
		dm{re: 0x10ad, si: 0x00000000, ne: 0x4a2c00004a31},
		dm{re: 0x10ae, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x10af, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x10b1, si: 0x00000000, ne: 0xea2b0000ea35},
		dm{re: -0x0001, si: 0xea350000ea3d, ne: 0xea3d0000ea46},
		dm{re: -0x0001, si: 0xea460000ea53, ne: 0xea530000ea62},
		dm{re: 0x10b2, si: 0x00000000, ne: 0xea620000ea6d},
		dm{re: 0x10b3, si: 0x00000000, ne: 0xea6d0000ea74},
		dm{re: -0x0001, si: 0xea740000ea7a, ne: 0xea7a0000ea81},
		dm{re: 0x10b4, si: 0x00000000, ne: 0x4c0500004c09},
		dm{re: 0x10b5, si: 0x00000000, ne: 0xea810000ea8c},
		dm{re: 0x10b6, si: 0x00000000, ne: 0xea8c0000ea95},
		dm{re: 0x10b7, si: 0x00000000, ne: 0xea950000ea99},
		dm{re: 0x10b8, si: 0x00000000, ne: 0xea990000ea9d},
		dm{re: 0x10b9, si: 0x00000000, ne: 0xea9d0000eaa1},
		dm{re: 0x10ba, si: 0x00000000, ne: 0xeaa10000eaa6},
		dm{re: 0x10bb, si: 0x00000000, ne: 0xeaa60000eaab},
		dm{re: -0x0001, si: 0xeaab0000eab3, ne: 0xeab30000eabc},
		dm{re: 0x10bc, si: 0x00000000, ne: 0xeabc0000eac3},
		dm{re: 0x10bd, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0xeac80000ead6},
		dm{re: 0x10c0, si: 0x00000000, ne: 0xeada0000eae4},
		dm{re: 0x10c2, si: 0x00000000, ne: 0xb8f70000b8fa},
		dm{re: 0x10c3, si: 0x00000000, ne: 0xa6420000a645},
		dm{re: 0x10c4, si: 0x00000000, ne: 0x59ff00005a01},
		dm{re: -0x0001, si: 0xeaee0000eaf4, ne: 0xac560000ac58},
		dm{re: -0x0001, si: 0xeaf40000eafa, ne: 0xeafa0000eafd},
		dm{re: -0x0001, si: 0xeafd0000eb03, ne: 0xac5f0000ac61},
		dm{re: -0x0001, si: 0xeb030000eb09, ne: 0xeb090000eb0c},
		dm{re: -0x0001, si: 0xeb0c0000eb12, ne: 0xeb120000eb15},
		dm{re: -0x0001, si: 0xeb150000eb1b, ne: 0xeb1b0000eb1f},
		dm{re: 0x10c5, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xeb290000eb2f, ne: 0x2780000027a},
		dm{re: -0x0001, si: 0xeb2f0000eb38, ne: 0xd9750000d97a},
		dm{re: -0x0001, si: 0xeb380000eb3f, ne: 0xeb3f0000eb42},
		dm{re: -0x0001, si: 0xeb420000eb4b, ne: 0xeb4b0000eb50},
		dm{re: -0x0001, si: 0xeb500000eb5a, ne: 0xeb5a0000eb60},
		dm{re: -0x0001, si: 0xeb600000eb6c, ne: 0xeb6c0000eb74},
		dm{re: -0x0001, si: 0xeb740000eb7b, ne: 0x67480000674b},
		dm{re: -0x0001, si: 0xeb7b0000eb82, ne: 0xeb820000eb85},
		dm{re: -0x0001, si: 0xeb850000eb8c, ne: 0xeb8c0000eb8f},
		dm{re: -0x0001, si: 0xeb8f0000eb97, ne: 0xeb970000eb9b},
		dm{re: -0x0001, si: 0xeb9b0000eba6, ne: 0xeba60000ebad},
		dm{re: -0x0001, si: 0xebad0000ebb5, ne: 0xebb50000ebb9},
		dm{re: -0x0001, si: 0xebb90000ebc2, ne: 0xebc20000ebc7},
		dm{re: 0x10c7, si: 0x00000000, ne: 0xebc70000ebca},
		dm{re: -0x0001, si: 0xebca0000ebd3, ne: 0xebd30000ebd8},
		dm{re: -0x0001, si: 0xebd80000ebdf, ne: 0xebdf0000ebe2},
		dm{re: -0x0001, si: 0xebe20000ebeb, ne: 0x40eb000040f0},
		dm{re: -0x0001, si: 0xebeb0000ebf2, ne: 0x79670000796a},
		dm{re: -0x0001, si: 0xebf20000ebfd, ne: 0xebfd0000ec04},
		dm{re: -0x0001, si: 0xec040000ec08, ne: 0xdefb0000deff},
		dm{re: -0x0001, si: 0xec080000ec0d, ne: 0xc2540000c259},
		dm{re: 0x10c9, si: 0x00000000, ne: 0xec110000ec22},
		dm{re: 0x10ca, si: 0x00000000, ne: 0xec220000ec32},
		dm{re: -0x0001, si: 0xec320000ec3c, ne: 0xec3c0000ec4b},
		dm{re: -0x0001, si: 0xec4b0000ec55, ne: 0xec550000ec73},
		dm{re: -0x0001, si: 0xec730000ec7d, ne: 0xec7d0000ec83},
		dm{re: -0x0001, si: 0xec830000ec8d, ne: 0xec8d0000ec92},
		dm{re: 0x10cc, si: 0x00000000, ne: 0xec9d0000eca2},
		dm{re: 0x10cd, si: 0x00000000, ne: 0xeca20000eca8},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xecb70000ecc2, ne: 0xecb70000ecc2},
		dm{re: -0x0001, si: 0xecc20000eccc, ne: 0xeccc0000ecd6},
		dm{re: -0x0001, si: 0xecd60000ece4, ne: 0xece40000ecf2},
		dm{re: -0x0001, si: 0xecf20000ecfa, ne: 0xecfa0000ed02},
		dm{re: -0x0001, si: 0xed020000ed09, ne: 0xed090000ed10},
		dm{re: -0x0001, si: 0xed170000ed1f, ne: 0xed1f0000ed28},
		dm{re: -0x0001, si: 0x00000000, ne: 0x4a2c00004a31},
		dm{re: 0x10d3, si: 0x00000000, ne: 0x24400000249},
		dm{re: 0x10d4, si: 0x00000000, ne: 0xed370000ed3d},
		dm{re: 0x10d5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x10d6, si: 0x00000000, ne: 0xed3d0000ed44},
		dm{re: 0x10d7, si: 0x00000000, ne: 0xed440000ed51},
		dm{re: 0x10d9, si: 0x00000000, ne: 0xed560000ed63},
		dm{re: 0x10da, si: 0x00000000, ne: 0xed630000ed6a},
		dm{re: 0x10db, si: 0x00000000, ne: 0xed6a0000ed75},
		dm{re: 0x10dc, si: 0x00000000, ne: 0xed750000ed86},
		dm{re: 0x10dd, si: 0x00000000, ne: 0xed860000ed98},
		dm{re: 0x10de, si: 0x00000000, ne: 0xed980000eda9},
		dm{re: 0x10df, si: 0x00000000, ne: 0xeda90000edb5},
		dm{re: 0x10e0, si: 0x00000000, ne: 0xedb50000edc2},
		dm{re: 0x10e1, si: 0x00000000, ne: 0xedc20000edd3},
		dm{re: 0x10e2, si: 0x00000000, ne: 0xedd30000eddf},
		dm{re: 0x10e3, si: 0x00000000, ne: 0xeddf0000edea},
		dm{re: 0x10e4, si: 0x00000000, ne: 0xedea0000edf4},
		dm{re: 0x10e5, si: 0x00000000, ne: 0xedf40000edfc},
		dm{re: 0x10e6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x10e7, si: 0x00000000, ne: 0xedfc0000ee0f},
		dm{re: 0x10e8, si: 0x00000000, ne: 0xee0f0000ee19},
		dm{re: 0x10e9, si: 0x00000000, ne: 0xee190000ee24},
		dm{re: 0x10ea, si: 0x00000000, ne: 0xee240000ee31},
		dm{re: 0x10eb, si: 0x00000000, ne: 0xee310000ee3e},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x10ee, si: 0x00000000, ne: 0xee4a0000ee4d},
		dm{re: 0x10ef, si: 0x00000000, ne: 0xee4d0000ee50},
		dm{re: -0x0001, si: 0xee500000ee5e, ne: 0xee5e0000ee65},
		dm{re: 0x10f0, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x3cd700003cdd},
		dm{re: 0x10f4, si: 0x00000000, ne: 0xee710000ee7e},
		dm{re: 0x10f5, si: 0x00000000, ne: 0xee7e0000ee88},
		dm{re: -0x0001, si: 0xee880000ee8e, ne: 0xee8e0000ee99},
		dm{re: -0x0001, si: 0xeea00000eea6, ne: 0xeea60000eeb1},
		dm{re: 0x10f6, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0xeed50000eede},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x10fe, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x10ff, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1101, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1102, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xef030000ef0c, ne: 0xef0c0000ef18},
		dm{re: -0x0001, si: 0xef180000ef21, ne: 0xef210000ef27},
		dm{re: -0x0001, si: 0xef270000ef31, ne: 0xef310000ef38},
		dm{re: -0x0001, si: 0xef380000ef43, ne: 0xef430000ef4b},
		dm{re: -0x0001, si: 0xef4b0000ef55, ne: 0xef550000ef5d},
		dm{re: -0x0001, si: 0xef5d0000ef68, ne: 0xef680000ef6f},
		dm{re: -0x0001, si: 0xef6f0000ef77, ne: 0xef770000ef80},
		dm{re: -0x0001, si: 0xef800000ef89, ne: 0xef890000ef96},
		dm{re: -0x0001, si: 0xef960000ef9f, ne: 0x2d2c00002d2d},
		dm{re: -0x0001, si: 0xef9f0000efa7, ne: 0xefa70000efab},
		dm{re: -0x0001, si: 0xefab0000efb1, ne: 0xefb10000efba},
		dm{re: 0x1104, si: 0x00000000, ne: 0xefba0000efc1},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1107, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1108, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1109, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x110c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x110d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x110f, si: 0x00000000, ne: 0xd3ad0000d3ae},
		dm{re: 0x1110, si: 0x00000000, ne: 0x14e8000014e9},
		dm{re: 0x1111, si: 0x00000000, ne: 0x150e0000150f},
		dm{re: 0x1112, si: 0x00000000, ne: 0xefe90000efea},
		dm{re: -0x0001, si: 0xefea0000eff1, ne: 0x151400001515},
		dm{re: 0x1113, si: 0x00000000, ne: 0x2d2c00002d2d},
		dm{re: -0x0001, si: 0xeff10000f000, ne: 0xf0000000f009},
		dm{re: -0x0001, si: 0xf0090000f015, ne: 0xf0150000f01b},
		dm{re: 0x1114, si: 0x00000000, ne: 0xf01b0000f023},
		dm{re: 0x1115, si: 0x00000000, ne: 0xf0230000f02b},
		dm{re: 0x1116, si: 0x00000000, ne: 0xf02b0000f033},
		dm{re: -0x0001, si: 0xf0330000f03f, ne: 0xf03f0000f045},
		dm{re: 0x1117, si: 0x00000000, ne: 0xf0450000f04e},
		dm{re: 0x1118, si: 0x00000000, ne: 0xf04e0000f055},
		dm{re: -0x0001, si: 0xf0550000f05f, ne: 0xf05f0000f063},
		dm{re: 0x1119, si: 0x00000000, ne: 0xf0630000f06b},
		dm{re: 0x111a, si: 0x00000000, ne: 0xf06b0000f07b},
		dm{re: -0x0001, si: 0xf07b0000f084, ne: 0xf0840000f089},
		dm{re: -0x0001, si: 0xf0890000f092, ne: 0xf0920000f096},
		dm{re: -0x0001, si: 0xf0960000f0a2, ne: 0xf0a20000f0b2},
		dm{re: -0x0001, si: 0xf0b20000f0c4, ne: 0xf0c40000f0cd},
		dm{re: 0x111b, si: 0x00000000, ne: 0xf0cd0000f0da},
		dm{re: -0x0001, si: 0xf0da0000f0e5, ne: 0xf0e50000f0e9},
		dm{re: -0x0001, si: 0xf0e90000f0f4, ne: 0xf0f40000f0f8},
		dm{re: -0x0001, si: 0xf0f80000f103, ne: 0xf1030000f107},
		dm{re: -0x0001, si: 0xf1070000f112, ne: 0xf1120000f116},
		dm{re: -0x0001, si: 0xf1160000f121, ne: 0xf1210000f125},
		dm{re: -0x0001, si: 0xf1250000f136, ne: 0xf1360000f142},
		dm{re: 0x111c, si: 0x00000000, ne: 0xf1420000f14c},
		dm{re: 0x111d, si: 0x00000000, ne: 0xf14c0000f154},
		dm{re: 0x111e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x111f, si: 0x00000000, ne: 0xf1540000f15b},
		dm{re: 0x1120, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1121, si: 0x00000000, ne: 0xf15b0000f165},
		dm{re: 0x1122, si: 0x00000000, ne: 0xf1650000f16e},
		dm{re: 0x1123, si: 0x00000000, ne: 0xf16e0000f177},
		dm{re: -0x0001, si: 0xf1770000f17d, ne: 0xf17d0000f186},
		dm{re: 0x1124, si: 0x00000000, ne: 0xf1860000f18f},
		dm{re: 0x1125, si: 0x00000000, ne: 0xf18f0000f198},
		dm{re: -0x0001, si: 0xf1980000f19f, ne: 0xf19f0000f1a8},
		dm{re: 0x1126, si: 0x00000000, ne: 0xf1a80000f1b1},
		dm{re: 0x1127, si: 0x00000000, ne: 0xf1b10000f1bb},
		dm{re: -0x0001, si: 0xf1bb0000f1c1, ne: 0xf1c10000f1ca},
		dm{re: -0x0001, si: 0xf1ca0000f1d3, ne: 0xf1ca0000f1d3},
		dm{re: 0x1128, si: 0x00000000, ne: 0xf1d30000f1dc},
		dm{re: 0x1129, si: 0x00000000, ne: 0xf1dc0000f1e6},
		dm{re: 0x112a, si: 0x00000000, ne: 0xf1e60000f1ef},
		dm{re: -0x0001, si: 0xf1ef0000f1f8, ne: 0xf1f80000f201},
		dm{re: -0x0001, si: 0xf2010000f207, ne: 0xf2070000f210},
		dm{re: 0x112b, si: 0x00000000, ne: 0xf2100000f219},
		dm{re: 0x112c, si: 0x00000000, ne: 0xf2190000f222},
		dm{re: 0x112d, si: 0x00000000, ne: 0xf2220000f22b},
		dm{re: -0x0001, si: 0xf22b0000f234, ne: 0xf2340000f23e},
		dm{re: -0x0001, si: 0xf23e0000f245, ne: 0xf2450000f24e},
		dm{re: 0x112e, si: 0x00000000, ne: 0xf24e0000f258},
		dm{re: 0x112f, si: 0x00000000, ne: 0xf2580000f264},
		dm{re: -0x0001, si: 0xf2640000f26d, ne: 0xf26d0000f270},
		dm{re: 0x1130, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1131, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1132, si: 0x00000000, ne: 0x73a6000073a9},
		dm{re: 0x1133, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1134, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1135, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1136, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1137, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1138, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xf2700000f27b, ne: 0xf27b0000f27f},
		dm{re: 0x1139, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: 0x113a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x113b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x113c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x113e, si: 0x00000000, ne: 0xf2830000f289},
		dm{re: 0x113f, si: 0x00000000, ne: 0xf2890000f28e},
		dm{re: 0x1140, si: 0x00000000, ne: 0xf28e0000f294},
		dm{re: 0x1141, si: 0x00000000, ne: 0xf2940000f29a},
		dm{re: 0x1142, si: 0x00000000, ne: 0xf29a0000f2a4},
		dm{re: 0x1143, si: 0x00000000, ne: 0xf2a40000f2b2},
		dm{re: 0x1144, si: 0x00000000, ne: 0xf2b20000f2b8},
		dm{re: 0x1145, si: 0x00000000, ne: 0xf2b80000f2be},
		dm{re: 0x1146, si: 0x00000000, ne: 0xf2be0000f2c5},
		dm{re: 0x1147, si: 0x00000000, ne: 0xf2c50000f2cb},
		dm{re: 0x1148, si: 0x00000000, ne: 0xf2cb0000f2d1},
		dm{re: 0x1149, si: 0x00000000, ne: 0xf2d10000f2d7},
		dm{re: 0x114a, si: 0x00000000, ne: 0xf2d70000f2dc},
		dm{re: 0x114b, si: 0x00000000, ne: 0xf2dc0000f2e2},
		dm{re: 0x114c, si: 0x00000000, ne: 0xf2e20000f2e7},
		dm{re: 0x114d, si: 0x00000000, ne: 0xf2e70000f2ed},
		dm{re: 0x114e, si: 0x00000000, ne: 0xf2ed0000f2f4},
		dm{re: 0x114f, si: 0x00000000, ne: 0xf2f40000f2fc},
		dm{re: 0x1150, si: 0x00000000, ne: 0xf2fc0000f303},
		dm{re: 0x1151, si: 0x00000000, ne: 0xf3030000f30a},
		dm{re: 0x1152, si: 0x00000000, ne: 0xf30a0000f312},
		dm{re: 0x1153, si: 0x00000000, ne: 0xf3120000f31d},
		dm{re: 0x1154, si: 0x00000000, ne: 0x6aa700006aad},
		dm{re: 0x1155, si: 0x00000000, ne: 0xf31d0000f320},
		dm{re: -0x0001, si: 0xf3200000f32e, ne: 0xf32e0000f335},
		dm{re: 0x1156, si: 0x00000000, ne: 0xf3350000f340},
		dm{re: 0x1157, si: 0x00000000, ne: 0xf3400000f34b},
		dm{re: 0x1158, si: 0x00000000, ne: 0xf34b0000f355},
		dm{re: 0x1159, si: 0x00000000, ne: 0xf3550000f35f},
		dm{re: 0x115a, si: 0x00000000, ne: 0xf35f0000f36a},
		dm{re: 0x115b, si: 0x00000000, ne: 0xf36a0000f379},
		dm{re: 0x115c, si: 0x00000000, ne: 0xf3790000f37e},
		dm{re: 0x115d, si: 0x00000000, ne: 0xf37e0000f387},
		dm{re: 0x115e, si: 0x00000000, ne: 0xf3870000f38e},
		dm{re: 0x115f, si: 0x00000000, ne: 0xf38e0000f399},
		dm{re: 0x1160, si: 0x00000000, ne: 0xf3990000f3a3},
		dm{re: 0x1161, si: 0x00000000, ne: 0xf3a30000f3b3},
		dm{re: 0x1162, si: 0x00000000, ne: 0xf3b30000f3be},
		dm{re: 0x1163, si: 0x00000000, ne: 0xf3be0000f3cd},
		dm{re: 0x1164, si: 0x00000000, ne: 0xf3cd0000f3d7},
		dm{re: 0x1165, si: 0x00000000, ne: 0xf3d70000f3e2},
		dm{re: 0x1166, si: 0x00000000, ne: 0xf3e20000f3ec},
		dm{re: 0x1167, si: 0x00000000, ne: 0xa5840000a589},
		dm{re: 0x1168, si: 0x00000000, ne: 0xf3ec0000f3f7},
		dm{re: 0x1169, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x116a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x116b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x116d, si: 0x00000000, ne: 0xf3fb0000f3fe},
		dm{re: 0x116e, si: 0x00000000, ne: 0xf3fe0000f401},
		dm{re: 0x116f, si: 0x00000000, ne: 0xf4010000f409},
		dm{re: 0x1170, si: 0x00000000, ne: 0x59a8000059af},
		dm{re: 0x1171, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0xf4210000f42f},
		dm{re: 0x1174, si: 0x00000000, ne: 0xe93c0000e940},
		dm{re: 0x1175, si: 0x00000000, ne: 0xf4320000f43a},
		dm{re: 0x1176, si: 0x00000000, ne: 0xf43a0000f441},
		dm{re: 0x1177, si: 0x00000000, ne: 0xf4410000f445},
		dm{re: 0x1178, si: 0x00000000, ne: 0xf4450000f44c},
		dm{re: 0x1179, si: 0x00000000, ne: 0xf44c0000f450},
		dm{re: 0x117b, si: 0x00000000, ne: 0xf4540000f45a},
		dm{re: 0x117c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0xf4640000f470},
		dm{re: -0x0001, si: 0xf4750000f47b, ne: 0xf47b0000f482},
		dm{re: -0x0001, si: 0xf4820000f488, ne: 0xf4880000f493},
		dm{re: -0x0001, si: 0xf4930000f499, ne: 0xf4990000f4a5},
		dm{re: -0x0001, si: 0xf4a50000f4ab, ne: 0xf4ab0000f4b9},
		dm{re: -0x0001, si: 0xf4b90000f4bf, ne: 0xf4bf0000f4ca},
		dm{re: 0x1180, si: 0x00000000, ne: 0xf4ca0000f4d1},
		dm{re: 0x1181, si: 0x00000000, ne: 0xf4d10000f4d9},
		dm{re: -0x0001, si: 0xf4d90000f4df, ne: 0xf4df0000f4e2},
		dm{re: -0x0001, si: 0xf4e20000f4e8, ne: 0xf4e80000f4ea},
		dm{re: -0x0001, si: 0xf4ea0000f4f0, ne: 0xf4f00000f4f7},
		dm{re: -0x0001, si: 0xf4f70000f4fd, ne: 0xf4fd0000f503},
		dm{re: -0x0001, si: 0xf5030000f509, ne: 0xf5090000f50b},
		dm{re: 0x1182, si: 0x00000000, ne: 0xf50b0000f512},
		dm{re: 0x1183, si: 0x00000000, ne: 0xf5120000f518},
		dm{re: -0x0001, si: 0xf5180000f51e, ne: 0xf51e0000f529},
		dm{re: -0x0001, si: 0xf5290000f52f, ne: 0xf52f0000f532},
		dm{re: -0x0001, si: 0xf5320000f53b, ne: 0xf53b0000f542},
		dm{re: 0x1184, si: 0x00000000, ne: 0xf5420000f54c},
		dm{re: 0x1185, si: 0x00000000, ne: 0xf54c0000f554},
		dm{re: -0x0001, si: 0xf5540000f55a, ne: 0xf55a0000f55d},
		dm{re: -0x0001, si: 0xf55d0000f563, ne: 0xf5630000f567},
		dm{re: -0x0001, si: 0xf5670000f56d, ne: 0xf56d0000f575},
		dm{re: -0x0001, si: 0xf5750000f57b, ne: 0xd3c80000d3ca},
		dm{re: -0x0001, si: 0xf57b0000f581, ne: 0xf5810000f584},
		dm{re: 0x1186, si: 0x00000000, ne: 0xf5840000f58c},
		dm{re: -0x0001, si: 0xf58c0000f592, ne: 0xf5920000f59c},
		dm{re: -0x0001, si: 0xf59c0000f5a2, ne: 0xf5a20000f5aa},
		dm{re: -0x0001, si: 0xf5aa0000f5b0, ne: 0xf5b00000f5b4},
		dm{re: -0x0001, si: 0xf5b40000f5ba, ne: 0xf5ba0000f5bd},
		dm{re: -0x0001, si: 0xf5bd0000f5c3, ne: 0xf5c30000f5c6},
		dm{re: -0x0001, si: 0xf5c60000f5cc, ne: 0xf5cc0000f5d5},
		dm{re: -0x0001, si: 0xf5d50000f5db, ne: 0xb1670000b169},
		dm{re: -0x0001, si: 0xf5db0000f5e1, ne: 0xf5e10000f5ea},
		dm{re: -0x0001, si: 0xf5ea0000f5f0, ne: 0xf5f00000f5fc},
		dm{re: -0x0001, si: 0xf5fc0000f602, ne: 0xc6ef0000c6f3},
		dm{re: -0x0001, si: 0xf6020000f608, ne: 0xf6080000f60f},
		dm{re: -0x0001, si: 0xf60f0000f615, ne: 0xf6150000f61c},
		dm{re: -0x0001, si: 0xf61c0000f622, ne: 0xf6220000f624},
		dm{re: -0x0001, si: 0xf6240000f62a, ne: 0xf62a0000f631},
		dm{re: -0x0001, si: 0xf6310000f637, ne: 0xf6370000f639},
		dm{re: 0x1187, si: 0x00000000, ne: 0xf6390000f63b},
		dm{re: -0x0001, si: 0xf63b0000f645, ne: 0xf6450000f648},
		dm{re: 0x1188, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x118a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x118b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x118c, si: 0x00000000, ne: 0xf64c0000f650},
		dm{re: -0x0001, si: 0xf6560000f665, ne: 0xf6650000f675},
		dm{re: 0x118e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x118f, si: 0x00000000, ne: 0xf6750000f686},
		dm{re: -0x0001, si: 0xf6860000f69c, ne: 0xf69c0000f6a9},
		dm{re: -0x0001, si: 0xf6a90000f6b6, ne: 0xf6b60000f6bf},
		dm{re: -0x0001, si: 0xf6bf0000f6c5, ne: 0xf6c50000f6d4},
		dm{re: 0x1191, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1192, si: 0x00000000, ne: 0xf6d60000f6d9},
		dm{re: 0x1193, si: 0x00000000, ne: 0xf6d90000f6eb},
		dm{re: 0x1195, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1196, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1197, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1198, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0xa5840000a589},
		dm{re: 0x119e, si: 0x00000000, ne: 0x427200004275},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xf70f0000f719, ne: 0xf7190000f725},
		dm{re: 0x11a1, si: 0x00000000, ne: 0xf7250000f730},
		dm{re: 0x11a3, si: 0x00000000, ne: 0xf7340000f737},
		dm{re: 0x11a4, si: 0x00000000, ne: 0xf7370000f73b},
		dm{re: 0x11a5, si: 0x00000000, ne: 0xf73b0000f73e},
		dm{re: 0x11a6, si: 0x00000000, ne: 0xf73e0000f742},
		dm{re: 0x11a7, si: 0x00000000, ne: 0xf7420000f746},
		dm{re: 0x11a8, si: 0x00000000, ne: 0xf7460000f749},
		dm{re: 0x11a9, si: 0x00000000, ne: 0xf7370000f73b},
		dm{re: 0x11aa, si: 0x00000000, ne: 0xf7490000f74c},
		dm{re: 0x11ab, si: 0x00000000, ne: 0xf74c0000f750},
		dm{re: 0x11ac, si: 0x00000000, ne: 0xf7500000f753},
		dm{re: 0x11ad, si: 0x00000000, ne: 0xf7530000f756},
		dm{re: 0x11ae, si: 0x00000000, ne: 0x11790000117b},
		dm{re: 0x11af, si: 0x00000000, ne: 0xf7560000f75c},
		dm{re: 0x11b0, si: 0x00000000, ne: 0xf75c0000f760},
		dm{re: 0x11b1, si: 0x00000000, ne: 0xf7600000f763},
		dm{re: 0x11b2, si: 0x00000000, ne: 0xf7630000f766},
		dm{re: 0x11b3, si: 0x00000000, ne: 0xf7660000f769},
		dm{re: 0x11b4, si: 0x00000000, ne: 0xf7690000f76c},
		dm{re: 0x11b5, si: 0x00000000, ne: 0x11a6000011a8},
		dm{re: 0x11b6, si: 0x00000000, ne: 0xf76c0000f775},
		dm{re: 0x11b7, si: 0x00000000, ne: 0xf7750000f77b},
		dm{re: 0x11b8, si: 0x00000000, ne: 0xf77b0000f77e},
		dm{re: 0x11b9, si: 0x00000000, ne: 0xf77e0000f781},
		dm{re: 0x11ba, si: 0x00000000, ne: 0xf7810000f784},
		dm{re: 0x11bb, si: 0x00000000, ne: 0xf7840000f787},
		dm{re: 0x11bc, si: 0x00000000, ne: 0xf7870000f78b},
		dm{re: 0x11bd, si: 0x00000000, ne: 0xf78b0000f792},
		dm{re: 0x11be, si: 0x00000000, ne: 0xf7920000f798},
		dm{re: 0x11bf, si: 0x00000000, ne: 0xf7980000f79b},
		dm{re: 0x11c0, si: 0x00000000, ne: 0xf79b0000f79f},
		dm{re: 0x11c1, si: 0x00000000, ne: 0xf79f0000f7a5},
		dm{re: 0x11c2, si: 0x00000000, ne: 0xf7a50000f7a8},
		dm{re: 0x11c3, si: 0x00000000, ne: 0xf7a80000f7af},
		dm{re: -0x0001, si: 0xf7af0000f7b5, ne: 0xf7b50000f7bb},
		dm{re: 0x11c4, si: 0x00000000, ne: 0xf7bb0000f7be},
		dm{re: 0x11c5, si: 0x00000000, ne: 0xf7be0000f7c1},
		dm{re: 0x11c6, si: 0x00000000, ne: 0x11bd000011bf},
		dm{re: 0x11c7, si: 0x00000000, ne: 0xf7c10000f7c4},
		dm{re: 0x11c8, si: 0x00000000, ne: 0xf7c40000f7ce},
		dm{re: 0x11c9, si: 0x00000000, ne: 0xf7ce0000f7d1},
		dm{re: 0x11ca, si: 0x00000000, ne: 0xf7d10000f7d7},
		dm{re: 0x11cb, si: 0x00000000, ne: 0xf7d70000f7da},
		dm{re: 0x11cc, si: 0x00000000, ne: 0xf7da0000f7e0},
		dm{re: 0x11cd, si: 0x00000000, ne: 0xf7e00000f7e7},
		dm{re: 0x11ce, si: 0x00000000, ne: 0xf7e70000f7ea},
		dm{re: 0x11cf, si: 0x00000000, ne: 0xf7ea0000f7ed},
		dm{re: 0x11d0, si: 0x00000000, ne: 0xf7ed0000f7f0},
		dm{re: 0x11d1, si: 0x00000000, ne: 0xf7f00000f7f3},
		dm{re: 0x11d2, si: 0x00000000, ne: 0xbf800000bf82},
		dm{re: 0x11d3, si: 0x00000000, ne: 0xf7f30000f7f6},
		dm{re: 0x11d4, si: 0x00000000, ne: 0xf7f60000f800},
		dm{re: 0x11d5, si: 0x00000000, ne: 0x2bf000002c1},
		dm{re: 0x11d6, si: 0x00000000, ne: 0xf8000000f809},
		dm{re: 0x11d7, si: 0x00000000, ne: 0xf8090000f80c},
		dm{re: 0x11d8, si: 0x00000000, ne: 0xf80c0000f80f},
		dm{re: 0x11d9, si: 0x00000000, ne: 0xf80f0000f813},
		dm{re: 0x11da, si: 0x00000000, ne: 0xf8130000f816},
		dm{re: 0x11db, si: 0x00000000, ne: 0xf8160000f81a},
		dm{re: -0x0001, si: 0xf81a0000f820, ne: 0xf8200000f826},
		dm{re: 0x11dc, si: 0x00000000, ne: 0xf8260000f829},
		dm{re: 0x11dd, si: 0x00000000, ne: 0xf7da0000f7e0},
		dm{re: 0x11de, si: 0x00000000, ne: 0xf8290000f82c},
		dm{re: 0x11df, si: 0x00000000, ne: 0xf82c0000f82f},
		dm{re: 0x11e0, si: 0x00000000, ne: 0xf82f0000f832},
		dm{re: 0x11e1, si: 0x00000000, ne: 0xf8320000f836},
		dm{re: 0x11e2, si: 0x00000000, ne: 0xf8360000f839},
		dm{re: 0x11e3, si: 0x00000000, ne: 0xf8390000f840},
		dm{re: 0x11e4, si: 0x00000000, ne: 0xf8400000f843},
		dm{re: 0x11e5, si: 0x00000000, ne: 0xf8430000f84a},
		dm{re: 0x11e6, si: 0x00000000, ne: 0xf84a0000f84d},
		dm{re: 0x11e7, si: 0x00000000, ne: 0xf84d0000f854},
		dm{re: 0x11e8, si: 0x00000000, ne: 0xf8540000f857},
		dm{re: 0x11e9, si: 0x00000000, ne: 0xf8570000f859},
		dm{re: 0x11ea, si: 0x00000000, ne: 0xf8590000f860},
		dm{re: 0x11eb, si: 0x00000000, ne: 0xc9a60000c9a8},
		dm{re: 0x11ec, si: 0x00000000, ne: 0xf8600000f868},
		dm{re: 0x11ed, si: 0x00000000, ne: 0xf8680000f86a},
		dm{re: 0x11ee, si: 0x00000000, ne: 0xf86a0000f86c},
		dm{re: 0x11ef, si: 0x00000000, ne: 0xf86c0000f872},
		dm{re: 0x11f0, si: 0x00000000, ne: 0xf8720000f876},
		dm{re: 0x11f1, si: 0x00000000, ne: 0xf8760000f87d},
		dm{re: 0x11f2, si: 0x00000000, ne: 0xf87d0000f889},
		dm{re: 0x11f3, si: 0x00000000, ne: 0xf8890000f88f},
		dm{re: 0x11f4, si: 0x00000000, ne: 0xf88f0000f89a},
		dm{re: 0x11f5, si: 0x00000000, ne: 0xf89a0000f8a0},
		dm{re: 0x11f6, si: 0x00000000, ne: 0xf8a00000f8a7},
		dm{re: 0x11f7, si: 0x00000000, ne: 0xf8a70000f8b0},
		dm{re: 0x11f8, si: 0x00000000, ne: 0xf8b00000f8bb},
		dm{re: 0x11f9, si: 0x00000000, ne: 0xf8bb0000f8c6},
		dm{re: 0x11fa, si: 0x00000000, ne: 0xf8c60000f8d1},
		dm{re: 0x11fb, si: 0x00000000, ne: 0xf8d10000f8da},
		dm{re: 0x11fc, si: 0x00000000, ne: 0xf8da0000f8e4},
		dm{re: 0x11fd, si: 0x00000000, ne: 0xf8e40000f8eb},
		dm{re: 0x11fe, si: 0x00000000, ne: 0xf8eb0000f8f1},
		dm{re: 0x11ff, si: 0x00000000, ne: 0xf8f10000f903},
		dm{re: 0x1200, si: 0x00000000, ne: 0xf9030000f90a},
		dm{re: 0x1201, si: 0x00000000, ne: 0xf90a0000f916},
		dm{re: 0x1202, si: 0x00000000, ne: 0xf9160000f921},
		dm{re: 0x1203, si: 0x00000000, ne: 0xf9210000f928},
		dm{re: 0x1204, si: 0x00000000, ne: 0xf9280000f933},
		dm{re: 0x1205, si: 0x00000000, ne: 0xf9330000f93b},
		dm{re: 0x1206, si: 0x00000000, ne: 0x74aa000074ac},
		dm{re: 0x1207, si: 0x00000000, ne: 0xb26f0000b271},
		dm{re: 0x1208, si: 0x00000000, ne: 0xb13b0000b13d},
		dm{re: 0x1209, si: 0x00000000, ne: 0xb2820000b284},
		dm{re: 0x120a, si: 0x00000000, ne: 0xf93b0000f93e},
		dm{re: 0x120b, si: 0x00000000, ne: 0xf93e0000f941},
		dm{re: 0x120c, si: 0x00000000, ne: 0xf9410000f944},
		dm{re: 0x120d, si: 0x00000000, ne: 0xf9440000f94b},
		dm{re: 0x120e, si: 0x00000000, ne: 0xf6390000f63b},
		dm{re: 0x120f, si: 0x00000000, ne: 0xdab10000dab4},
		dm{re: 0x1210, si: 0x00000000, ne: 0xf94b0000f950},
		dm{re: 0x1211, si: 0x00000000, ne: 0xf9500000f955},
		dm{re: 0x1212, si: 0x00000000, ne: 0xf9550000f95a},
		dm{re: 0x1213, si: 0x00000000, ne: 0xf95a0000f960},
		dm{re: 0x1214, si: 0x00000000, ne: 0xf9600000f965},
		dm{re: 0x1215, si: 0x00000000, ne: 0xf9650000f968},
		dm{re: 0x1216, si: 0x00000000, ne: 0xf9680000f970},
		dm{re: 0x1217, si: 0x00000000, ne: 0xf9700000f973},
		dm{re: 0x1218, si: 0x00000000, ne: 0xf9730000f97c},
		dm{re: 0x1219, si: 0x00000000, ne: 0xf97c0000f980},
		dm{re: 0x121a, si: 0x00000000, ne: 0xf9800000f983},
		dm{re: 0x121b, si: 0x00000000, ne: 0xf9830000f98a},
		dm{re: 0x121c, si: 0x00000000, ne: 0xf98a0000f98e},
		dm{re: 0x121d, si: 0x00000000, ne: 0xf98e0000f991},
		dm{re: 0x121e, si: 0x00000000, ne: 0xf9910000f998},
		dm{re: 0x121f, si: 0x00000000, ne: 0xf9980000f99f},
		dm{re: 0x1220, si: 0x00000000, ne: 0xf99f0000f9a2},
		dm{re: 0x1221, si: 0x00000000, ne: 0xf9a20000f9a5},
		dm{re: 0x1222, si: 0x00000000, ne: 0xf9a50000f9a7},
		dm{re: 0x1223, si: 0x00000000, ne: 0xf9a70000f9ae},
		dm{re: 0x1224, si: 0x00000000, ne: 0xf9ae0000f9b5},
		dm{re: 0x1225, si: 0x00000000, ne: 0xf9b50000f9be},
		dm{re: 0x1226, si: 0x00000000, ne: 0xf9be0000f9c5},
		dm{re: 0x1227, si: 0x00000000, ne: 0xf9c50000f9c8},
		dm{re: 0x1228, si: 0x00000000, ne: 0xf9c80000f9d0},
		dm{re: 0x1229, si: 0x00000000, ne: 0xf9d00000f9d4},
		dm{re: 0x122a, si: 0x00000000, ne: 0xf9d40000f9da},
		dm{re: 0x122b, si: 0x00000000, ne: 0xf9da0000f9e7},
		dm{re: 0x122c, si: 0x00000000, ne: 0xf9e70000f9ed},
		dm{re: 0x122d, si: 0x00000000, ne: 0xf9ed0000f9f4},
		dm{re: 0x122e, si: 0x00000000, ne: 0xf9f40000f9fb},
		dm{re: 0x122f, si: 0x00000000, ne: 0xf9fb0000fa01},
		dm{re: 0x1230, si: 0x00000000, ne: 0xfa010000fa08},
		dm{re: 0x1231, si: 0x00000000, ne: 0xfa080000fa11},
		dm{re: 0x1232, si: 0x00000000, ne: 0xfa110000fa1b},
		dm{re: 0x1233, si: 0x00000000, ne: 0xfa1b0000fa26},
		dm{re: 0x1234, si: 0x00000000, ne: 0xfa260000fa2f},
		dm{re: 0x1235, si: 0x00000000, ne: 0xfa2f0000fa3a},
		dm{re: 0x1236, si: 0x00000000, ne: 0xfa3a0000fa47},
		dm{re: 0x1237, si: 0x00000000, ne: 0xfa470000fa50},
		dm{re: 0x1238, si: 0x00000000, ne: 0xfa500000fa5d},
		dm{re: 0x1239, si: 0x00000000, ne: 0xfa5d0000fa6a},
		dm{re: 0x123a, si: 0x00000000, ne: 0xfa6a0000fa74},
		dm{re: 0x123b, si: 0x00000000, ne: 0xfa740000fa7b},
		dm{re: 0x123c, si: 0x00000000, ne: 0xfa7b0000fa81},
		dm{re: 0x123d, si: 0x00000000, ne: 0xfa810000fa88},
		dm{re: 0x123e, si: 0x00000000, ne: 0xfa880000fa93},
		dm{re: 0x123f, si: 0x00000000, ne: 0xfa930000fa9c},
		dm{re: 0x1240, si: 0x00000000, ne: 0xfa9c0000faa3},
		dm{re: 0x1241, si: 0x00000000, ne: 0xfaa30000faaa},
		dm{re: 0x1242, si: 0x00000000, ne: 0xfaaa0000fab1},
		dm{re: 0x1243, si: 0x00000000, ne: 0xfab10000fabe},
		dm{re: 0x1244, si: 0x00000000, ne: 0xfabe0000fad0},
		dm{re: 0x1245, si: 0x00000000, ne: 0xfad00000fad7},
		dm{re: 0x1246, si: 0x00000000, ne: 0xfad70000fadd},
		dm{re: 0x1247, si: 0x00000000, ne: 0xfadd0000fae8},
		dm{re: 0x1248, si: 0x00000000, ne: 0xfae80000faf2},
		dm{re: 0x1249, si: 0x00000000, ne: 0xfaf20000faff},
		dm{re: 0x124a, si: 0x00000000, ne: 0xfaff0000fb0e},
		dm{re: -0x0001, si: 0xfb0e0000fb14, ne: 0xfb140000fb1a},
		dm{re: -0x0001, si: 0xfb1a0000fb20, ne: 0xfb200000fb29},
		dm{re: 0x124b, si: 0x00000000, ne: 0xfb290000fb33},
		dm{re: 0x124c, si: 0x00000000, ne: 0xfb330000fb3c},
		dm{re: 0x124d, si: 0x00000000, ne: 0xfb3c0000fb41},
		dm{re: 0x124e, si: 0x00000000, ne: 0xfb410000fb49},
		dm{re: 0x124f, si: 0x00000000, ne: 0xfb490000fb53},
		dm{re: 0x1250, si: 0x00000000, ne: 0xfb530000fb5a},
		dm{re: 0x1251, si: 0x00000000, ne: 0xfb5a0000fb60},
		dm{re: 0x1252, si: 0x00000000, ne: 0xfb600000fb64},
		dm{re: 0x1253, si: 0x00000000, ne: 0xfb640000fb67},
		dm{re: 0x1254, si: 0x00000000, ne: 0xc7d40000c7d7},
		dm{re: 0x1255, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1256, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1259, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x125a, si: 0x00000000, ne: 0xfb700000fb77},
		dm{re: -0x0001, si: 0xfb7d0000fb87, ne: 0xfb870000fb8e},
		dm{re: 0x125c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x125e, si: 0x00000000, ne: 0xfb910000fb96},
		dm{re: 0x125f, si: 0x00000000, ne: 0xfb960000fb9b},
		dm{re: 0x1260, si: 0x00000000, ne: 0xfb9b0000fba2},
		dm{re: 0x1261, si: 0x00000000, ne: 0xfba20000fba8},
		dm{re: 0x1262, si: 0x00000000, ne: 0xfba80000fbae},
		dm{re: 0x1263, si: 0x00000000, ne: 0xfbae0000fbb1},
		dm{re: 0x1264, si: 0x00000000, ne: 0xfbb10000fbba},
		dm{re: 0x1265, si: 0x00000000, ne: 0xfbba0000fbc1},
		dm{re: 0x1266, si: 0x00000000, ne: 0xfbc10000fbc9},
		dm{re: 0x1267, si: 0x00000000, ne: 0xfbc90000fbcc},
		dm{re: 0x1268, si: 0x00000000, ne: 0xfbcc0000fbd3},
		dm{re: 0x1269, si: 0x00000000, ne: 0xfbd30000fbda},
		dm{re: 0x126a, si: 0x00000000, ne: 0xfbda0000fbdf},
		dm{re: 0x126b, si: 0x00000000, ne: 0xfbdf0000fbe7},
		dm{re: 0x126c, si: 0x00000000, ne: 0xfbe70000fbf0},
		dm{re: 0x126d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x126e, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0xfbf60000fbfd, ne: 0xfbfd0000fbff},
		dm{re: 0x1270, si: 0x00000000, ne: 0xfbff0000fc06},
		dm{re: -0x0001, si: 0x437200004377, ne: 0x437200004377},
		dm{re: 0x1272, si: 0x00000000, ne: 0xfc0a0000fc13},
		dm{re: -0x0001, si: 0xfc130000fc21, ne: 0xfc210000fc31},
		dm{re: -0x0001, si: 0xfc310000fc3a, ne: 0xfc3a0000fc43},
		dm{re: -0x0001, si: 0xfc430000fc58, ne: 0xfc580000fc6d},
		dm{re: -0x0001, si: 0xfc6d0000fc80, ne: 0xfc800000fc93},
		dm{re: -0x0001, si: 0xfc930000fca1, ne: 0xfca10000fcb0},
		dm{re: -0x0001, si: 0xfcb00000fcbf, ne: 0xfcbf0000fccf},
		dm{re: -0x0001, si: 0xfccf0000fce1, ne: 0xfce10000fcf4},
		dm{re: -0x0001, si: 0xfcf40000fcff, ne: 0xfcff0000fd0a},
		dm{re: -0x0001, si: 0xfd0a0000fd1a, ne: 0xfd1a0000fd2a},
		dm{re: -0x0001, si: 0xfd2a0000fd3b, ne: 0xfd3b0000fd4d},
		dm{re: -0x0001, si: 0xfd4d0000fd59, ne: 0xfd590000fd67},
		dm{re: -0x0001, si: 0xfd670000fd72, ne: 0xfd720000fd7f},
		dm{re: -0x0001, si: 0xfd7f0000fd8f, ne: 0xfd8f0000fd9f},
		dm{re: -0x0001, si: 0xfd9f0000fdab, ne: 0xfdab0000fdb7},
		dm{re: 0x1273, si: 0x00000000, ne: 0xfdb70000fdcb},
		dm{re: 0x1274, si: 0x00000000, ne: 0xfdcb0000fdd8},
		dm{re: 0x1275, si: 0x00000000, ne: 0xfdd80000fde4},
		dm{re: 0x1276, si: 0x00000000, ne: 0xfde40000fdef},
		dm{re: 0x1277, si: 0x00000000, ne: 0xfdef0000fdfa},
		dm{re: 0x1278, si: 0x00000000, ne: 0xfdfa0000fe06},
		dm{re: -0x0001, si: 0xfe060000fe0d, ne: 0xfe0d0000fe14},
		dm{re: -0x0001, si: 0xfe140000fe23, ne: 0xfe230000fe33},
		dm{re: -0x0001, si: 0xfe330000fe41, ne: 0xfe410000fe50},
		dm{re: 0x1279, si: 0x00000000, ne: 0xfe500000fe57},
		dm{re: -0x0001, si: 0xfe570000fe62, ne: 0xfe620000fe6f},
		dm{re: -0x0001, si: 0xfe6f0000fe7b, ne: 0xfe7b0000fe87},
		dm{re: -0x0001, si: 0xfe870000fe8f, ne: 0xfe8f0000fe94},
		dm{re: -0x0001, si: 0xfe940000fe99, ne: 0xfe990000fe9f},
		dm{re: -0x0001, si: 0xfe9f0000fead, ne: 0xfead0000febb},
		dm{re: 0x127a, si: 0x00000000, ne: 0xfebb0000fec2},
		dm{re: -0x0001, si: 0xfec20000fec6, ne: 0xfec60000feca},
		dm{re: -0x0001, si: 0xfeca0000fedb, ne: 0xfedb0000feec},
		dm{re: -0x0001, si: 0xfeec0000fef2, ne: 0xfef20000fefa},
		dm{re: -0x0001, si: 0xfefa0000ff00, ne: 0xff000000ff06},
		dm{re: -0x0001, si: 0xff060000ff0f, ne: 0xff0f0000ff14},
		dm{re: -0x0001, si: 0xff140000ff20, ne: 0xff200000ff2c},
		dm{re: -0x0001, si: 0xff2c0000ff3a, ne: 0xff3a0000ff48},
		dm{re: -0x0001, si: 0xff480000ff57, ne: 0xff570000ff66},
		dm{re: -0x0001, si: 0xff660000ff72, ne: 0xff720000ff79},
		dm{re: 0x127b, si: 0x00000000, ne: 0xff790000ff88},
		dm{re: -0x0001, si: 0xff880000ff93, ne: 0xff930000ffa0},
		dm{re: -0x0001, si: 0xffa00000ffa9, ne: 0xffa90000ffb2},
		dm{re: -0x0001, si: 0xffb20000ffbd, ne: 0xffbd0000ffc8},
		dm{re: 0x127c, si: 0x00000000, ne: 0xffc80000ffd1},
		dm{re: -0x0001, si: 0xffd10000ffda, ne: 0xffda0000ffe3},
		dm{re: 0x127d, si: 0x00000000, ne: 0xffe30000ffea},
		dm{re: 0x127e, si: 0x00000000, ne: 0xffea0000ffee},
		dm{re: 0x127f, si: 0x00000000, ne: 0xffee0000fff6},
		dm{re: 0x1280, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0xfff800010001},
		dm{re: 0x1283, si: 0x00000000, ne: 0x1000700010013},
		dm{re: 0x1285, si: 0x00000000, ne: 0x100170001001b},
		dm{re: 0x1286, si: 0x00000000, ne: 0x1001b0001001e},
		dm{re: 0x1287, si: 0x00000000, ne: 0x1001e0001002b},
		dm{re: 0x1288, si: 0x00000000, ne: 0x1002b00010038},
		dm{re: 0x1289, si: 0x00000000, ne: 0x1003800010044},
		dm{re: 0x128a, si: 0x00000000, ne: 0x1004400010057},
		dm{re: 0x128b, si: 0x00000000, ne: 0x1005700010067},
		dm{re: -0x0001, si: 0x1006700010079, ne: 0x100790001008c},
		dm{re: -0x0001, si: 0x1008c0001009d, ne: 0x1009d000100af},
		dm{re: -0x0001, si: 0x100af000100b9, ne: 0x100b9000100c4},
		dm{re: -0x0001, si: 0x100c4000100d2, ne: 0x100d2000100e1},
		dm{re: -0x0001, si: 0x100e1000100ea, ne: 0x100ea000100f5},
		dm{re: 0x128c, si: 0x00000000, ne: 0x100f50001010a},
		dm{re: 0x128d, si: 0x00000000, ne: 0x1010a00010116},
		dm{re: 0x128e, si: 0x00000000, ne: 0x1011600010121},
		dm{re: 0x128f, si: 0x00000000, ne: 0x101210001012c},
		dm{re: 0x1290, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1291, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1293, si: 0x00000000, ne: 0x101330001013a},
		dm{re: 0x1294, si: 0x00000000, ne: 0x1013a00010144},
		dm{re: 0x1295, si: 0x00000000, ne: 0x101440001014a},
		dm{re: 0x1296, si: 0x00000000, ne: 0x1014a00010153},
		dm{re: 0x1297, si: 0x00000000, ne: 0x101530001015f},
		dm{re: 0x1298, si: 0x00000000, ne: 0x1015f00010167},
		dm{re: 0x1299, si: 0x00000000, ne: 0x1016700010172},
		dm{re: 0x129a, si: 0x00000000, ne: 0x101720001017f},
		dm{re: 0x129b, si: 0x00000000, ne: 0x1017f00010188},
		dm{re: 0x129c, si: 0x00000000, ne: 0x1018800010191},
		dm{re: 0x129d, si: 0x00000000, ne: 0x1019100010196},
		dm{re: 0x129e, si: 0x00000000, ne: 0x1019600010198},
		dm{re: 0x129f, si: 0x00000000, ne: 0x2d2c00002d2d},
		dm{re: 0x12a0, si: 0x00000000, ne: 0x101980001019f},
		dm{re: 0x12a1, si: 0x00000000, ne: 0x7be600007be7},
		dm{re: 0x12a2, si: 0x00000000, ne: 0x1019f000101a5},
		dm{re: 0x12a3, si: 0x00000000, ne: 0x101a5000101a7},
		dm{re: 0x12a4, si: 0x00000000, ne: 0x7bd800007bdd},
		dm{re: 0x12a5, si: 0x00000000, ne: 0x101a7000101bd},
		dm{re: 0x12a6, si: 0x00000000, ne: 0x101bd000101c2},
		dm{re: 0x12a7, si: 0x00000000, ne: 0x151400001515},
		dm{re: 0x12a8, si: 0x00000000, ne: 0x101c2000101c4},
		dm{re: 0x12a9, si: 0x00000000, ne: 0x101c4000101ca},
		dm{re: 0x12aa, si: 0x00000000, ne: 0x101ca000101d3},
		dm{re: 0x12ab, si: 0x00000000, ne: 0x1019600010198},
		dm{re: 0x12ac, si: 0x00000000, ne: 0x781d00007820},
		dm{re: 0x12ad, si: 0x00000000, ne: 0xd3ad0000d3ae},
		dm{re: 0x12ae, si: 0x00000000, ne: 0x9c2600009c27},
		dm{re: 0x12af, si: 0x00000000, ne: 0x101d3000101d5},
		dm{re: 0x12b0, si: 0x00000000, ne: 0x14e8000014e9},
		dm{re: 0x12b1, si: 0x00000000, ne: 0x101d5000101d7},
		dm{re: 0x12b2, si: 0x00000000, ne: 0x150e0000150f},
		dm{re: 0x12b3, si: 0x00000000, ne: 0xefe90000efea},
		dm{re: 0x12b4, si: 0x00000000, ne: 0x101d7000101d9},
		dm{re: 0x12b5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12b7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12b8, si: 0x00000000, ne: 0x101dd000101e9},
		dm{re: 0x12b9, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x781d00007820},
		dm{re: -0x0001, si: 0x1020500010211, ne: 0x102110001021d},
		dm{re: -0x0001, si: 0x1021d0001022f, ne: 0x1022f00010236},
		dm{re: -0x0001, si: 0x1023600010248, ne: 0x1024800010252},
		dm{re: -0x0001, si: 0x1025200010265, ne: 0x102650001026c},
		dm{re: 0x12bd, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x102730001027f, ne: 0x1027f0001028b},
		dm{re: -0x0001, si: 0x1028b00010293, ne: 0x102930001029b},
		dm{re: 0x12bf, si: 0x00000000, ne: 0x102a1000102a9},
		dm{re: 0x12c0, si: 0x00000000, ne: 0x102a1000102a9},
		dm{re: 0x12c1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12c2, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x102af000102b7, ne: 0x102b7000102c3},
		dm{re: -0x0001, si: 0x102c3000102cc, ne: 0x102cc000102d5},
		dm{re: -0x0001, si: 0x102d5000102db, ne: 0x102d5000102db},
		dm{re: -0x0001, si: 0x102db000102df, ne: 0x102db000102df},
		dm{re: 0x12c4, si: 0x00000000, ne: 0x102df000102e8},
		dm{re: 0x12c5, si: 0x00000000, ne: 0x4a2c00004a31},
		dm{re: 0x12c6, si: 0x00000000, ne: 0x102e8000102f4},
		dm{re: 0x12c7, si: 0x00000000, ne: 0x102f4000102fb},
		dm{re: 0x12c8, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12c9, si: 0x00000000, ne: 0x102fb00010301},
		dm{re: 0x12cb, si: 0x00000000, ne: 0x103060001030a},
		dm{re: 0x12cc, si: 0x00000000, ne: 0x1030a0001030e},
		dm{re: 0x12cd, si: 0x00000000, ne: 0x1030e00010314},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12d1, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: 0x12d2, si: 0x00000000, ne: 0x1032800010331},
		dm{re: 0x12d4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12d5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12d6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12d7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12d9, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x12da, si: 0x00000000, ne: 0xa1480000a14b},
		dm{re: 0x12db, si: 0x00000000, ne: 0x1033c00010342},
		dm{re: 0x12dc, si: 0x00000000, ne: 0x39ee000039f5},
		dm{re: 0x12dd, si: 0x00000000, ne: 0x39f5000039fc},
		dm{re: 0x12de, si: 0x00000000, ne: 0x1034200010348},
		dm{re: 0x12df, si: 0x00000000, ne: 0x1034800010350},
		dm{re: 0x12e0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12e1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12e2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12e3, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x103570001035d, ne: 0x1035d00010368},
		dm{re: -0x0001, si: 0x1036800010377, ne: 0x1036800010377},
		dm{re: -0x0001, si: 0x1037700010386, ne: 0x1037700010386},
		dm{re: 0x12e5, si: 0x00000000, ne: 0x103860001038f},
		dm{re: -0x0001, si: 0x1038f0001039b, ne: 0x1039b000103a8},
		dm{re: -0x0001, si: 0x103a8000103b5, ne: 0x103a8000103b5},
		dm{re: -0x0001, si: 0x103b5000103c5, ne: 0x103b5000103c5},
		dm{re: 0x12e6, si: 0x00000000, ne: 0x103c5000103d6},
		dm{re: 0x12e7, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x103da000103e2},
		dm{re: 0x12e9, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12ea, si: 0x00000000, ne: 0x103e6000103f1},
		dm{re: 0x12ec, si: 0x00000000, ne: 0x103f800010404},
		dm{re: -0x0001, si: 0x104040001040c, ne: 0x1040c00010415},
		dm{re: -0x0001, si: 0x104150001041f, ne: 0x1041f0001042a},
		dm{re: -0x0001, si: 0x1042a00010434, ne: 0x104340001043f},
		dm{re: -0x0001, si: 0x1043f00010446, ne: 0x104460001044e},
		dm{re: 0x12ed, si: 0x00000000, ne: 0x1044e00010458},
		dm{re: 0x12ee, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12ef, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12f0, si: 0x00000000, ne: 0x4a2c00004a31},
		dm{re: -0x0001, si: 0x1045800010461, ne: 0x104610001046a},
		dm{re: 0x12f1, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1046e00010474},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12f5, si: 0x00000000, ne: 0x1047f00010488},
		dm{re: 0x12f6, si: 0x00000000, ne: 0x1048800010491},
		dm{re: 0x12f7, si: 0x00000000, ne: 0x104910001049e},
		dm{re: -0x0001, si: 0x104a3000104af, ne: 0x104af000104b2},
		dm{re: -0x0001, si: 0x104b2000104be, ne: 0x104be000104c1},
		dm{re: -0x0001, si: 0x104c1000104ce, ne: 0x104ce000104d2},
		dm{re: -0x0001, si: 0x104d2000104da, ne: 0x104da000104e3},
		dm{re: -0x0001, si: 0x104e3000104eb, ne: 0x104eb000104ef},
		dm{re: -0x0001, si: 0x104f2000104f8, ne: 0x104f2000104f8},
		dm{re: 0x12fa, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x12fc, si: 0x00000000, ne: 0xb0160000b018},
		dm{re: 0x12fd, si: 0x00000000, ne: 0xf8570000f859},
		dm{re: 0x12fe, si: 0x00000000, ne: 0xd3c80000d3ca},
		dm{re: 0x12ff, si: 0x00000000, ne: 0x1050900010512},
		dm{re: 0x1300, si: 0x00000000, ne: 0xba810000ba88},
		dm{re: -0x0001, si: 0x105120001051c, ne: 0x1051c00010525},
		dm{re: -0x0001, si: 0x105250001052e, ne: 0x1052e00010534},
		dm{re: 0x1301, si: 0x00000000, ne: 0xd4630000d465},
		dm{re: 0x1302, si: 0x00000000, ne: 0x105340001053a},
		dm{re: 0x1303, si: 0x00000000, ne: 0x1053a00010540},
		dm{re: 0x1304, si: 0x00000000, ne: 0x9c1a00009c1c},
		dm{re: 0x1305, si: 0x00000000, ne: 0x1054000010545},
		dm{re: 0x1306, si: 0x00000000, ne: 0x105450001054a},
		dm{re: 0x1307, si: 0x00000000, ne: 0x1054a0001054c},
		dm{re: 0x1308, si: 0x00000000, ne: 0x1054c0001054f},
		dm{re: 0x1309, si: 0x00000000, ne: 0x1054f00010555},
		dm{re: 0x130b, si: 0x00000000, ne: 0x1055b00010564},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x130e, si: 0x00000000, ne: 0x37f8000037fb},
		dm{re: 0x130f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1310, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1057900010584, ne: 0x105840001058f},
		dm{re: -0x0001, si: 0x1058f00010597, ne: 0x105970001059f},
		dm{re: 0x1312, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x105b0000105b6},
		dm{re: 0x1314, si: 0x00000000, ne: 0x4a2c00004a31},
		dm{re: 0x1315, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1316, si: 0x00000000, ne: 0x105ba000105c1},
		dm{re: -0x0001, si: 0x105c1000105c9, ne: 0x105c1000105c9},
		dm{re: -0x0001, si: 0x105c9000105cf, ne: 0x105cf000105d5},
		dm{re: 0x1317, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: -0x0001, si: 0x105dc000105e3, ne: 0x105dc000105e3},
		dm{re: 0x1319, si: 0x00000000, ne: 0x105ec000105fa},
		dm{re: 0x131a, si: 0x00000000, ne: 0x105fa00010601},
		dm{re: 0x131b, si: 0x00000000, ne: 0x1060100010608},
		dm{re: 0x131c, si: 0x00000000, ne: 0x1060800010610},
		dm{re: 0x131d, si: 0x00000000, ne: 0x1061000010618},
		dm{re: 0x131e, si: 0x00000000, ne: 0x1061000010618},
		dm{re: 0x131f, si: 0x00000000, ne: 0x1061800010620},
		dm{re: 0x1320, si: 0x00000000, ne: 0x1062000010631},
		dm{re: 0x1321, si: 0x00000000, ne: 0x106310001063c},
		dm{re: 0x1322, si: 0x00000000, ne: 0x1063c0001064b},
		dm{re: -0x0001, si: 0x1064b00010656, ne: 0x1064b00010656},
		dm{re: -0x0001, si: 0x106560001065d, ne: 0x106560001065d},
		dm{re: 0x1323, si: 0x00000000, ne: 0x1065d00010662},
		dm{re: -0x0001, si: 0x1066200010674, ne: 0x106740001067e},
		dm{re: 0x1324, si: 0x00000000, ne: 0x1067e00010686},
		dm{re: 0x1325, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1326, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: 0x1327, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1328, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1329, si: 0x00000000, ne: 0x1068600010696},
		dm{re: -0x0001, si: 0x1069d000106a4, ne: 0x106a4000106aa},
		dm{re: -0x0001, si: 0x106aa000106b2, ne: 0x106b2000106bb},
		dm{re: 0x132b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x132c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x132d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x132e, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x132f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1330, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x106ce000106db, ne: 0x106db000106e1},
		dm{re: -0x0001, si: 0x106e1000106ef, ne: 0x106ef000106f6},
		dm{re: 0x1334, si: 0x00000000, ne: 0x39ee000039f5},
		dm{re: 0x1335, si: 0x00000000, ne: 0x106fc00010703},
		dm{re: 0x1336, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x107030001070e, ne: 0x1070e00010712},
		dm{re: 0x1337, si: 0x00000000, ne: 0x1071200010719},
		dm{re: 0x1339, si: 0x00000000, ne: 0x107220001072a},
		dm{re: 0x133a, si: 0x00000000, ne: 0x1072a0001073c},
		dm{re: 0x133b, si: 0x00000000, ne: 0x1073c00010746},
		dm{re: 0x133c, si: 0x00000000, ne: 0x107460001074f},
		dm{re: 0x133d, si: 0x00000000, ne: 0x377200003778},
		dm{re: 0x133e, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1075500010764, ne: 0x107640001076a},
		dm{re: -0x0001, si: 0x1076a00010779, ne: 0x107790001077d},
		dm{re: 0x1340, si: 0x00000000, ne: 0x107840001078a},
		dm{re: 0x1341, si: 0x00000000, ne: 0x1078a00010792},
		dm{re: 0x1342, si: 0x00000000, ne: 0x107920001079b},
		dm{re: 0x1343, si: 0x00000000, ne: 0x1079b000107a2},
		dm{re: 0x1345, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1346, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1347, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: 0x1348, si: 0x00000000, ne: 0x107a8000107ae},
		dm{re: 0x134a, si: 0x00000000, ne: 0x107b5000107be},
		dm{re: 0x134b, si: 0x00000000, ne: 0x107b5000107be},
		dm{re: 0x134c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x134d, si: 0x00000000, ne: 0x7b2a00007b34},
		dm{re: 0x134e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x134f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1350, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: 0x1351, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1352, si: 0x00000000, ne: 0x107be000107ca},
		dm{re: 0x1353, si: 0x00000000, ne: 0x107ca000107d3},
		dm{re: 0x1354, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1355, si: 0x00000000, ne: 0x107d3000107d9},
		dm{re: 0x1356, si: 0x00000000, ne: 0x107d9000107ef},
		dm{re: 0x1357, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1358, si: 0x00000000, ne: 0x107ef000107fb},
		dm{re: 0x1359, si: 0x00000000, ne: 0x107fb00010803},
		dm{re: 0x135a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x135c, si: 0x00000000, ne: 0x1080b00010813},
		dm{re: 0x135d, si: 0x00000000, ne: 0x1081300010819},
		dm{re: 0x135e, si: 0x00000000, ne: 0x108190001081d},
		dm{re: 0x135f, si: 0x00000000, ne: 0x1081d00010824},
		dm{re: 0x1360, si: 0x00000000, ne: 0xcc880000cc8f},
		dm{re: 0x1362, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1082800010831, ne: 0x107d3000107d9},
		dm{re: 0x1363, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1366, si: 0x00000000, ne: 0xb9010000b903},
		dm{re: -0x0001, si: 0x1083c00010844, ne: 0x1084400010851},
		dm{re: 0x1367, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1368, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1085100010858, ne: 0x1085100010858},
		dm{re: 0x1369, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: 0x136a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x136b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1085e00010869},
		dm{re: -0x0001, si: 0x00000000, ne: 0x159b0000159d},
		dm{re: 0x136f, si: 0x00000000, ne: 0x1087800010880},
		dm{re: 0x1370, si: 0x00000000, ne: 0x108800001088e},
		dm{re: -0x0001, si: 0x1088e00010896, ne: 0x1088e00010896},
		dm{re: -0x0001, si: 0x108960001089f, ne: 0x108960001089f},
		dm{re: -0x0001, si: 0x1089f000108a6, ne: 0x1089f000108a6},
		dm{re: 0x1371, si: 0x00000000, ne: 0x108a6000108ac},
		dm{re: 0x1372, si: 0x00000000, ne: 0x108ac000108b6},
		dm{re: 0x1373, si: 0x00000000, ne: 0x108b6000108c0},
		dm{re: 0x1374, si: 0x00000000, ne: 0x108c0000108cb},
		dm{re: 0x1375, si: 0x00000000, ne: 0x108cb000108d6},
		dm{re: 0x1376, si: 0x00000000, ne: 0x108d6000108e4},
		dm{re: -0x0001, si: 0x108e4000108e8, ne: 0x108e4000108e8},
		dm{re: -0x0001, si: 0x108e8000108f1, ne: 0x108f1000108f4},
		dm{re: -0x0001, si: 0x108f4000108ff, ne: 0x108ff00010904},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1091a00010923, ne: 0x109230001092e},
		dm{re: -0x0001, si: 0x1092e0001093b, ne: 0x1093b00010948},
		dm{re: 0x1379, si: 0x00000000, ne: 0x109480001094f},
		dm{re: 0x137a, si: 0x00000000, ne: 0x109480001094f},
		dm{re: -0x0001, si: 0x1095300010957, ne: 0x109570001095e},
		dm{re: -0x0001, si: 0x1095e00010962, ne: 0x1096200010967},
		dm{re: -0x0001, si: 0x109670001096b, ne: 0x1096b00010972},
		dm{re: -0x0001, si: 0x1097200010976, ne: 0x1097600010980},
		dm{re: -0x0001, si: 0x1098000010984, ne: 0x109840001098d},
		dm{re: -0x0001, si: 0x1098d00010991, ne: 0x109910001099b},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x137e, si: 0x00000000, ne: 0x11bd000011bf},
		dm{re: 0x137f, si: 0x00000000, ne: 0x109aa000109b0},
		dm{re: 0x1380, si: 0x00000000, ne: 0x109b0000109b3},
		dm{re: 0x1381, si: 0x00000000, ne: 0x109b3000109bc},
		dm{re: 0x1382, si: 0x00000000, ne: 0x109bc000109cc},
		dm{re: 0x1383, si: 0x00000000, ne: 0x109cc000109d8},
		dm{re: 0x1384, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x109e4000109e8, ne: 0x109e4000109e8},
		dm{re: -0x0001, si: 0x109f500010a06, ne: 0x10a0600010a1a},
		dm{re: -0x0001, si: 0x10a1a00010a2b, ne: 0x10a2b00010a3e},
		dm{re: -0x0001, si: 0x10a3e00010a46, ne: 0x10a4600010a56},
		dm{re: -0x0001, si: 0x10a5600010a62, ne: 0x10a6200010a6f},
		dm{re: 0x1386, si: 0x00000000, ne: 0x10a6f00010a7c},
		dm{re: -0x0001, si: 0x10a7c00010a89, ne: 0x10a8900010a92},
		dm{re: -0x0001, si: 0x10a9200010a9e, ne: 0x10a9e00010aab},
		dm{re: -0x0001, si: 0x10aab00010abb, ne: 0x10abb00010acc},
		dm{re: 0x1387, si: 0x00000000, ne: 0x10acc00010ad8},
		dm{re: -0x0001, si: 0x10ad800010ae6, ne: 0x10ae600010af0},
		dm{re: 0x1388, si: 0x00000000, ne: 0x10af000010af9},
		dm{re: 0x1389, si: 0x00000000, ne: 0x10af900010b01},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x10b1700010b1d, ne: 0x10b1d00010b25},
		dm{re: -0x0001, si: 0x10b2500010b2b, ne: 0x10b2b00010b33},
		dm{re: -0x0001, si: 0x10b3300010b39, ne: 0x10b3900010b41},
		dm{re: -0x0001, si: 0x10b4100010b4a, ne: 0x10b4a00010b57},
		dm{re: -0x0001, si: 0x10b5700010b5d, ne: 0x10b5d00010b64},
		dm{re: 0x138d, si: 0x00000000, ne: 0xa0a70000a0af},
		dm{re: -0x0001, si: 0x10b6400010b6d, ne: 0x10b6d00010b75},
		dm{re: -0x0001, si: 0x10b7500010b7b, ne: 0x10b7b00010b82},
		dm{re: -0x0001, si: 0x10b8200010b88, ne: 0x10b8800010b94},
		dm{re: -0x0001, si: 0x10b9400010b9d, ne: 0x10b9d00010ba5},
		dm{re: -0x0001, si: 0x10ba500010bae, ne: 0x10bae00010bbb},
		dm{re: -0x0001, si: 0x10bbb00010bc1, ne: 0x10bc100010bc8},
		dm{re: -0x0001, si: 0x10bc800010bd1, ne: 0x10bd100010bd9},
		dm{re: -0x0001, si: 0x10bd900010be2, ne: 0x10be200010bea},
		dm{re: -0x0001, si: 0x10bea00010bf0, ne: 0x10bf000010bf9},
		dm{re: -0x0001, si: 0x10bf900010bff, ne: 0x10bff00010c08},
		dm{re: -0x0001, si: 0x10c0800010c0e, ne: 0x10c0e00010c15},
		dm{re: -0x0001, si: 0x10c1500010c1e, ne: 0x10c1e00010c26},
		dm{re: -0x0001, si: 0x10c2600010c2c, ne: 0x10c2c00010c2f},
		dm{re: 0x138e, si: 0x00000000, ne: 0x10c2f00010c36},
		dm{re: -0x0001, si: 0x10c3600010c3d, ne: 0x10c3d00010c46},
		dm{re: -0x0001, si: 0x10c4600010c4d, ne: 0x10c4d00010c52},
		dm{re: -0x0001, si: 0x10c5200010c59, ne: 0x10c5900010c60},
		dm{re: 0x138f, si: 0x00000000, ne: 0x10c6000010c67},
		dm{re: 0x1390, si: 0x00000000, ne: 0x10c6700010c6c},
		dm{re: -0x0001, si: 0x10c6c00010c73, ne: 0x10c7300010c81},
		dm{re: -0x0001, si: 0x10c8100010c89, ne: 0x10c8900010c8d},
		dm{re: 0x1391, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: -0x0001, si: 0x10c8d00010c96, ne: 0x10c9600010ca0},
		dm{re: 0x1392, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1393, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1394, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x10b0f00010b17, ne: 0xbd000000bd},
		dm{re: 0x1397, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1398, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x10cb700010cbc, ne: 0x5e7d00005e83},
		dm{re: 0x139a, si: 0x00000000, ne: 0x10cbc00010cc9},
		dm{re: -0x0001, si: 0x10cc900010cce, ne: 0x10cce00010cd7},
		dm{re: 0x139b, si: 0x00000000, ne: 0x10cd700010ce3},
		dm{re: 0x139c, si: 0x00000000, ne: 0x10ce300010cec},
		dm{re: 0x139d, si: 0x00000000, ne: 0x10cec00010cf5},
		dm{re: 0x139e, si: 0x00000000, ne: 0x10cf500010cfe},
		dm{re: 0x139f, si: 0x00000000, ne: 0x10cfe00010d07},
		dm{re: 0x13a0, si: 0x00000000, ne: 0x10d0700010d10},
		dm{re: 0x13a1, si: 0x00000000, ne: 0x10d1000010d19},
		dm{re: 0x13a2, si: 0x00000000, ne: 0x10d1900010d22},
		dm{re: 0x13a3, si: 0x00000000, ne: 0x10d2200010d2e},
		dm{re: 0x13a4, si: 0x00000000, ne: 0x10d2e00010d37},
		dm{re: 0x13a5, si: 0x00000000, ne: 0x10d3700010d40},
		dm{re: 0x13a6, si: 0x00000000, ne: 0x10d4000010d49},
		dm{re: 0x13a7, si: 0x00000000, ne: 0x10d4900010d54},
		dm{re: 0x13a8, si: 0x00000000, ne: 0x10d5400010d63},
		dm{re: -0x0001, si: 0x10d6300010d68, ne: 0x10d6800010d6d},
		dm{re: -0x0001, si: 0x10d6d00010d72, ne: 0x10d7200010d7f},
		dm{re: -0x0001, si: 0x10d7f00010d84, ne: 0x10d8400010d8d},
		dm{re: -0x0001, si: 0x10d8d00010d92, ne: 0x10d9200010d9b},
		dm{re: -0x0001, si: 0x10d9b00010da0, ne: 0x10da000010da9},
		dm{re: 0x13a9, si: 0x00000000, ne: 0x10da900010db4},
		dm{re: 0x13aa, si: 0x00000000, ne: 0x10db400010dbc},
		dm{re: 0x13ab, si: 0x00000000, ne: 0x10dbc00010dc7},
		dm{re: -0x0001, si: 0x10dc700010dcc, ne: 0x10dcc00010dd6},
		dm{re: -0x0001, si: 0x10dd600010ddb, ne: 0x10ddb00010dea},
		dm{re: -0x0001, si: 0x10dea00010def, ne: 0x10def00010df7},
		dm{re: -0x0001, si: 0x10df700010dfc, ne: 0x10dfc00010e0d},
		dm{re: 0x13ac, si: 0x00000000, ne: 0x10e0d00010e17},
		dm{re: 0x13ad, si: 0x00000000, ne: 0x10e1700010e22},
		dm{re: 0x13ae, si: 0x00000000, ne: 0x10e2200010e2c},
		dm{re: 0x13af, si: 0x00000000, ne: 0x10e2c00010e36},
		dm{re: 0x13b0, si: 0x00000000, ne: 0x10e3600010e45},
		dm{re: -0x0001, si: 0x10e4500010e4c, ne: 0x10e4500010e4c},
		dm{re: -0x0001, si: 0x10e4c00010e51, ne: 0x10e4c00010e51},
		dm{re: 0x13b1, si: 0x00000000, ne: 0x10e5100010e5e},
		dm{re: 0x13b2, si: 0x00000000, ne: 0x10e5e00010e68},
		dm{re: 0x13b4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x13b5, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x5a8a00005a8c},
		dm{re: -0x0001, si: 0x10ea900010eb1, ne: 0x10eb100010eb9},
		dm{re: 0x13b7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x13b8, si: 0x00000000, ne: 0x10eb900010ec3},
		dm{re: -0x0001, si: 0x10ec300010eca, ne: 0x10ec300010eca},
		dm{re: -0x0001, si: 0x10eca00010ecf, ne: 0x10eca00010ecf},
		dm{re: -0x0001, si: 0x10ecf00010edb, ne: 0x10edb00010ee7},
		dm{re: 0x13ba, si: 0x00000000, ne: 0x10ef300010ef9},
		dm{re: 0x13bb, si: 0x00000000, ne: 0x10ef900010f05},
		dm{re: 0x13bc, si: 0x00000000, ne: 0x10f0500010f15},
		dm{re: 0x13bd, si: 0x00000000, ne: 0x10f1500010f20},
		dm{re: 0x13be, si: 0x00000000, ne: 0x10f2000010f29},
		dm{re: 0x13bf, si: 0x00000000, ne: 0x10f2900010f33},
		dm{re: 0x13c0, si: 0x00000000, ne: 0x10f3300010f3e},
		dm{re: 0x13c1, si: 0x00000000, ne: 0x10f3e00010f48},
		dm{re: 0x13c2, si: 0x00000000, ne: 0x10f4800010f53},
		dm{re: 0x13c3, si: 0x00000000, ne: 0x10f5300010f5b},
		dm{re: 0x13c4, si: 0x00000000, ne: 0x10f5b00010f63},
		dm{re: 0x13c5, si: 0x00000000, ne: 0x10f6300010f6b},
		dm{re: 0x13c6, si: 0x00000000, ne: 0x10f6b00010f71},
		dm{re: 0x13c7, si: 0x00000000, ne: 0x10f7100010f77},
		dm{re: 0x13c8, si: 0x00000000, ne: 0x10f7700010f7d},
		dm{re: 0x13c9, si: 0x00000000, ne: 0x10f7d00010f86},
		dm{re: -0x0001, si: 0x10f8c00010f98, ne: 0x10f9800010f9a},
		dm{re: -0x0001, si: 0x10f9a00010fa0, ne: 0x10fa000010fa6},
		dm{re: -0x0001, si: 0x10fa600010fb2, ne: 0x10fb200010fb6},
		dm{re: -0x0001, si: 0x10fb600010fc2, ne: 0x10fc200010fc6},
		dm{re: -0x0001, si: 0x10fc600010fd2, ne: 0x10fd200010fd6},
		dm{re: -0x0001, si: 0x10fd600010fe2, ne: 0x10fe200010fe6},
		dm{re: 0x13cb, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x10fef00011001, ne: 0x1100100011014},
		dm{re: 0x13cd, si: 0x00000000, ne: 0x1101400011025},
		dm{re: -0x0001, si: 0x110250001102f, ne: 0x1102f00011037},
		dm{re: -0x0001, si: 0x1103700011041, ne: 0x110410001104d},
		dm{re: -0x0001, si: 0x1104d00011057, ne: 0x1105700011063},
		dm{re: -0x0001, si: 0x110630001106d, ne: 0x1106d00011075},
		dm{re: -0x0001, si: 0x110750001107f, ne: 0x1107f00011087},
		dm{re: -0x0001, si: 0x1108700011091, ne: 0x1109100011099},
		dm{re: -0x0001, si: 0x11099000110a3, ne: 0x110a3000110ab},
		dm{re: -0x0001, si: 0x110ab000110b5, ne: 0x110b5000110c1},
		dm{re: -0x0001, si: 0x110c1000110cb, ne: 0x110cb000110d3},
		dm{re: -0x0001, si: 0x110d3000110dd, ne: 0x110dd000110e9},
		dm{re: -0x0001, si: 0x110e9000110f3, ne: 0x110f3000110fb},
		dm{re: -0x0001, si: 0x110fb00011105, ne: 0x1110500011111},
		dm{re: -0x0001, si: 0x111110001111b, ne: 0x1111b00011123},
		dm{re: -0x0001, si: 0x111230001112d, ne: 0x1112d00011134},
		dm{re: -0x0001, si: 0x111340001113e, ne: 0x1113e00011149},
		dm{re: -0x0001, si: 0x1114900011153, ne: 0x111530001115e},
		dm{re: -0x0001, si: 0x1115e00011168, ne: 0x1116800011173},
		dm{re: -0x0001, si: 0x111730001117d, ne: 0x1117d00011188},
		dm{re: -0x0001, si: 0x1118800011192, ne: 0x1119200011199},
		dm{re: -0x0001, si: 0x11199000111a3, ne: 0x111a3000111ae},
		dm{re: -0x0001, si: 0x111ae000111b8, ne: 0x111b8000111c3},
		dm{re: -0x0001, si: 0x111c3000111cd, ne: 0x111cd000111d4},
		dm{re: -0x0001, si: 0x111d4000111de, ne: 0x111de000111e9},
		dm{re: -0x0001, si: 0x111e9000111f3, ne: 0x111f3000111fe},
		dm{re: -0x0001, si: 0x111fe00011208, ne: 0x1120800011213},
		dm{re: -0x0001, si: 0x112130001121d, ne: 0x1121d00011228},
		dm{re: -0x0001, si: 0x1122800011232, ne: 0x112320001123d},
		dm{re: -0x0001, si: 0x1123d00011247, ne: 0x1124700011252},
		dm{re: 0x13ce, si: 0x00000000, ne: 0x1125200011259},
		dm{re: -0x0001, si: 0x1125900011263, ne: 0x112630001126a},
		dm{re: -0x0001, si: 0x1126a00011274, ne: 0x112740001127b},
		dm{re: -0x0001, si: 0x1127b00011285, ne: 0x112850001128c},
		dm{re: -0x0001, si: 0x1128c00011296, ne: 0x112960001129d},
		dm{re: -0x0001, si: 0x1129d000112a7, ne: 0x112a7000112ae},
		dm{re: -0x0001, si: 0x112ae000112b8, ne: 0x112b8000112bf},
		dm{re: -0x0001, si: 0x112bf000112c9, ne: 0x112c9000112d0},
		dm{re: -0x0001, si: 0x112d0000112da, ne: 0x112da000112e2},
		dm{re: -0x0001, si: 0x112e2000112ec, ne: 0x112ec000112f3},
		dm{re: -0x0001, si: 0x112f3000112fd, ne: 0x112fd00011304},
		dm{re: -0x0001, si: 0x113040001130e, ne: 0x1130e00011319},
		dm{re: -0x0001, si: 0x1131900011323, ne: 0x113230001132a},
		dm{re: -0x0001, si: 0x1132a00011334, ne: 0x113340001133c},
		dm{re: -0x0001, si: 0x1133c00011346, ne: 0x113460001134e},
		dm{re: -0x0001, si: 0x1134e00011358, ne: 0x1135800011360},
		dm{re: -0x0001, si: 0x113600001136a, ne: 0x1136a00011372},
		dm{re: -0x0001, si: 0x113720001137c, ne: 0x1137c00011393},
		dm{re: -0x0001, si: 0x113930001139a, ne: 0x1139a000113a4},
		dm{re: -0x0001, si: 0x113a4000113ab, ne: 0x113ab000113b6},
		dm{re: -0x0001, si: 0x113b6000113c0, ne: 0x113c0000113da},
		dm{re: 0x13cf, si: 0x00000000, ne: 0x113da000113eb},
		dm{re: 0x13d0, si: 0x00000000, ne: 0x113eb000113fc},
		dm{re: 0x13d1, si: 0x00000000, ne: 0x113fc00011408},
		dm{re: -0x0001, si: 0x1140800011412, ne: 0x1141200011428},
		dm{re: -0x0001, si: 0x1142800011432, ne: 0x1143200011437},
		dm{re: 0x13d2, si: 0x00000000, ne: 0x114370001144b},
		dm{re: 0x13d3, si: 0x00000000, ne: 0x1144b00011456},
		dm{re: 0x13d4, si: 0x00000000, ne: 0x1145600011461},
		dm{re: 0x13d5, si: 0x00000000, ne: 0x1146100011466},
		dm{re: 0x13d6, si: 0x00000000, ne: 0x114660001146b},
		dm{re: 0x13d7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x13d8, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x13da, si: 0x00000000, ne: 0x114730001147c},
		dm{re: 0x13db, si: 0x00000000, ne: 0x1147c00011483},
		dm{re: 0x13dd, si: 0x00000000, ne: 0x1148900011492},
		dm{re: 0x13de, si: 0x00000000, ne: 0x1149200011499},
		dm{re: 0x13df, si: 0x00000000, ne: 0x11499000114a1},
		dm{re: 0x13e0, si: 0x00000000, ne: 0x114a1000114a6},
		dm{re: 0x13e1, si: 0x00000000, ne: 0x114a6000114ac},
		dm{re: 0x13e2, si: 0x00000000, ne: 0x42260000422e},
		dm{re: 0x13e3, si: 0x00000000, ne: 0x114ac000114ae},
		dm{re: 0x13e4, si: 0x00000000, ne: 0x114ae000114b5},
		dm{re: 0x13e5, si: 0x00000000, ne: 0x114b5000114bd},
		dm{re: 0x13e6, si: 0x00000000, ne: 0x114bd000114c5},
		dm{re: 0x13e8, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x13e9, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x13eb, si: 0x00000000, ne: 0x114d3000114d8},
		dm{re: 0x13ec, si: 0x00000000, ne: 0x114d8000114de},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x13ef, si: 0x00000000, ne: 0x114ee000114f7},
		dm{re: 0x13f0, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1150c00011514, ne: 0x1150c00011514},
		dm{re: 0x13f5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x13f7, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x115260001152e, ne: 0x115260001152e},
		dm{re: -0x0001, si: 0x1153500011542, ne: 0x1154200011550},
		dm{re: 0x13f9, si: 0x00000000, ne: 0x115500001155b},
		dm{re: -0x0001, si: 0x1155b00011563, ne: 0x1155b00011563},
		dm{re: 0x13fa, si: 0x00000000, ne: 0x115630001156c},
		dm{re: -0x0001, si: 0x1156c00011573, ne: 0x115730001157f},
		dm{re: -0x0001, si: 0x1157f00011586, ne: 0x1157f00011586},
		dm{re: -0x0001, si: 0x115860001158f, ne: 0x115860001158f},
		dm{re: -0x0001, si: 0x9a8500009a8a, ne: 0x9a8500009a8a},
		dm{re: 0x13fb, si: 0x00000000, ne: 0x1158f0001159c},
		dm{re: -0x0001, si: 0x1159c000115a4, ne: 0x115a4000115ac},
		dm{re: -0x0001, si: 0x115ac000115b2, ne: 0x115b2000115b8},
		dm{re: -0x0001, si: 0x115b8000115be, ne: 0x115be000115c4},
		dm{re: 0x13fc, si: 0x00000000, ne: 0x115c4000115cf},
		dm{re: 0x13fd, si: 0x00000000, ne: 0x115cf000115d9},
		dm{re: -0x0001, si: 0x115d9000115e0, ne: 0x115e0000115e7},
		dm{re: -0x0001, si: 0x115e7000115f5, ne: 0x115f500011603},
		dm{re: -0x0001, si: 0x1160300011614, ne: 0x1160300011614},
		dm{re: 0x13fe, si: 0x00000000, ne: 0x1161400011621},
		dm{re: 0x13ff, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1400, si: 0x00000000, ne: 0x1162100011629},
		dm{re: 0x1401, si: 0x00000000, ne: 0x116290001162c},
		dm{re: 0x1402, si: 0x00000000, ne: 0x5d9600005d9f},
		dm{re: 0x1403, si: 0x00000000, ne: 0x1162c00011632},
		dm{re: 0x1404, si: 0x00000000, ne: 0x1162c00011632},
		dm{re: 0x1405, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x116320001163c, ne: 0x116320001163c},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x116470001164f, ne: 0x1164f00011659},
		dm{re: -0x0001, si: 0x1165900011662, ne: 0x116620001166c},
		dm{re: -0x0001, si: 0x1166c00011676, ne: 0x1167600011680},
		dm{re: -0x0001, si: 0x1168000011688, ne: 0x1168800011692},
		dm{re: -0x0001, si: 0x116920001169b, ne: 0x1169b000116a5},
		dm{re: -0x0001, si: 0x116a5000116ad, ne: 0x116ad000116b7},
		dm{re: -0x0001, si: 0x116b7000116c0, ne: 0x116c0000116ca},
		dm{re: -0x0001, si: 0x116ca000116d4, ne: 0x116d4000116df},
		dm{re: -0x0001, si: 0x116df000116e9, ne: 0x116e9000116f4},
		dm{re: 0x1408, si: 0x00000000, ne: 0x116f4000116ff},
		dm{re: -0x0001, si: 0x116ff00011708, ne: 0x1170800011713},
		dm{re: -0x0001, si: 0x1171300011719, ne: 0xb2c60000b2c8},
		dm{re: -0x0001, si: 0x1171900011721, ne: 0x1172100011729},
		dm{re: -0x0001, si: 0x1172900011730, ne: 0x1173000011738},
		dm{re: -0x0001, si: 0x1173800011740, ne: 0x117400001174a},
		dm{re: -0x0001, si: 0x1174a00011750, ne: 0x1175000011757},
		dm{re: -0x0001, si: 0x1175700011760, ne: 0x117600001176b},
		dm{re: 0x1409, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x140a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x140b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x140c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1176b00011770, ne: 0x1177000011774},
		dm{re: 0x140d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x140f, si: 0x00000000, ne: 0x1177f00011789},
		dm{re: 0x1410, si: 0x00000000, ne: 0x1178900011795},
		dm{re: -0x0001, si: 0x117950001179d, ne: 0x117950001179d},
		dm{re: 0x1411, si: 0x00000000, ne: 0x1179d000117aa},
		dm{re: 0x1412, si: 0x00000000, ne: 0x117aa000117b2},
		dm{re: 0x1413, si: 0x00000000, ne: 0x117b2000117ba},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1416, si: 0x00000000, ne: 0x117c5000117cd},
		dm{re: 0x1417, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1418, si: 0x00000000, ne: 0x117cd000117d4},
		dm{re: 0x1419, si: 0x00000000, ne: 0x117d4000117da},
		dm{re: 0x141a, si: 0x00000000, ne: 0x117da000117dc},
		dm{re: 0x141b, si: 0x00000000, ne: 0x117dc000117e7},
		dm{re: 0x141c, si: 0x00000000, ne: 0x117e7000117f2},
		dm{re: 0x141d, si: 0x00000000, ne: 0x117f2000117fb},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1180600011815},
		dm{re: 0x1420, si: 0x00000000, ne: 0x1181900011820},
		dm{re: 0x1421, si: 0x00000000, ne: 0x1182000011825},
		dm{re: 0x1422, si: 0x00000000, ne: 0x118250001182e},
		dm{re: 0x1423, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1424, si: 0x00000000, ne: 0x1182e00011836},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1183a00011840},
		dm{re: -0x0001, si: 0x1184b00011857, ne: 0x118570001185f},
		dm{re: -0x0001, si: 0x1185f00011869, ne: 0x118690001187a},
		dm{re: 0x1427, si: 0x00000000, ne: 0x1187a00011886},
		dm{re: 0x1428, si: 0x00000000, ne: 0x1188600011896},
		dm{re: -0x0001, si: 0x11896000118a1, ne: 0x118a1000118b0},
		dm{re: 0x1429, si: 0x00000000, ne: 0x118b0000118bb},
		dm{re: -0x0001, si: 0x118bb000118c6, ne: 0x118c6000118d7},
		dm{re: -0x0001, si: 0x118d7000118e1, ne: 0x118e1000118f2},
		dm{re: 0x142a, si: 0x00000000, ne: 0x118f200011902},
		dm{re: -0x0001, si: 0x119020001190e, ne: 0x1190e0001191d},
		dm{re: -0x0001, si: 0x1191d00011928, ne: 0x1192800011937},
		dm{re: 0x142b, si: 0x00000000, ne: 0x119370001193c},
		dm{re: 0x142c, si: 0x00000000, ne: 0x1193c00011940},
		dm{re: -0x0001, si: 0x00000000, ne: 0x119430001194f},
		dm{re: 0x142f, si: 0x00000000, ne: 0x1195200011963},
		dm{re: 0x1430, si: 0x00000000, ne: 0x1196300011969},
		dm{re: -0x0001, si: 0x1196900011971, ne: 0x1197100011977},
		dm{re: 0x1431, si: 0x00000000, ne: 0x119770001197d},
		dm{re: 0x1432, si: 0x00000000, ne: 0x1197d00011984},
		dm{re: 0x1433, si: 0x00000000, ne: 0x1198400011988},
		dm{re: -0x0001, si: 0x1198800011990, ne: 0x119900001199b},
		dm{re: -0x0001, si: 0x1199b000119a3, ne: 0x119a3000119ad},
		dm{re: -0x0001, si: 0x119ad000119b5, ne: 0x462d00004633},
		dm{re: -0x0001, si: 0x119b5000119bd, ne: 0x119bd000119c5},
		dm{re: 0x1434, si: 0x00000000, ne: 0x3c6b00003c72},
		dm{re: 0x1435, si: 0x00000000, ne: 0x119c5000119d4},
		dm{re: 0x1436, si: 0x00000000, ne: 0x119d4000119e5},
		dm{re: 0x1437, si: 0x00000000, ne: 0x119e5000119f2},
		dm{re: 0x1438, si: 0x00000000, ne: 0x119f200011a05},
		dm{re: 0x1439, si: 0x00000000, ne: 0x119e5000119f2},
		dm{re: 0x143a, si: 0x00000000, ne: 0x119e5000119f2},
		dm{re: -0x0001, si: 0x11a0500011a09, ne: 0x11a0900011a16},
		dm{re: 0x143b, si: 0x00000000, ne: 0x11a1600011a1e},
		dm{re: -0x0001, si: 0x11a1e00011a22, ne: 0x11a2200011a2b},
		dm{re: -0x0001, si: 0x11a2b00011a2f, ne: 0x11a2b00011a2f},
		dm{re: 0x143c, si: 0x00000000, ne: 0x11a2f00011a37},
		dm{re: -0x0001, si: 0x11a3700011a41, ne: 0x11a3700011a41},
		dm{re: -0x0001, si: 0x11a4800011a56, ne: 0x11a4800011a56},
		dm{re: 0x143f, si: 0x00000000, ne: 0x11a6000011a68},
		dm{re: -0x0001, si: 0x11a6f00011a73, ne: 0x11a7300011a76},
		dm{re: -0x0001, si: 0x11a7600011a7c, ne: 0x11a7c00011a81},
		dm{re: -0x0001, si: 0x11a8100011a85, ne: 0x11a8500011a89},
		dm{re: -0x0001, si: 0x11a8900011a8d, ne: 0x11a8d00011a96},
		dm{re: 0x1442, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1443, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x11a9b00011aa2, ne: 0x11aa200011aaa},
		dm{re: -0x0001, si: 0x11aaa00011ab3, ne: 0x11ab300011abd},
		dm{re: 0x1444, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x11ad000011ad7},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1449, si: 0x00000000, ne: 0x11ae300011aea},
		dm{re: 0x144a, si: 0x00000000, ne: 0x11aea00011af1},
		dm{re: 0x144b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x144d, si: 0x00000000, ne: 0x11af700011b02},
		dm{re: 0x144e, si: 0x00000000, ne: 0x148a0000148b},
		dm{re: 0x144f, si: 0x00000000, ne: 0xd3ad0000d3ae},
		dm{re: 0x1450, si: 0x00000000, ne: 0x11b0200011b07},
		dm{re: 0x1451, si: 0x00000000, ne: 0x14e8000014e9},
		dm{re: -0x0001, si: 0x11b0700011b0e, ne: 0x11b0e00011b10},
		dm{re: 0x1452, si: 0x00000000, ne: 0x11b1000011b15},
		dm{re: 0x1453, si: 0x00000000, ne: 0x9c2600009c27},
		dm{re: 0x1454, si: 0x00000000, ne: 0xb0160000b018},
		dm{re: -0x0001, si: 0x11b1500011b1c, ne: 0xf04e0000f055},
		dm{re: 0x1455, si: 0x00000000, ne: 0x11b1c00011b22},
		dm{re: -0x0001, si: 0x11b2200011b29, ne: 0x11b2900011b2e},
		dm{re: -0x0001, si: 0x11b2e00011b35, ne: 0x11b3500011b3b},
		dm{re: -0x0001, si: 0x11b3b00011b42, ne: 0x11b4200011b4b},
		dm{re: -0x0001, si: 0x11b4b00011b52, ne: 0x11b5200011b57},
		dm{re: 0x1456, si: 0x00000000, ne: 0x11b5700011b5c},
		dm{re: 0x1457, si: 0x00000000, ne: 0x11b5c00011b65},
		dm{re: 0x1458, si: 0x00000000, ne: 0x11b6500011b67},
		dm{re: 0x1459, si: 0x00000000, ne: 0x150e0000150f},
		dm{re: 0x145a, si: 0x00000000, ne: 0x11b6700011b6c},
		dm{re: 0x145b, si: 0x00000000, ne: 0x11b6c00011b6e},
		dm{re: -0x0001, si: 0x11b6e00011b75, ne: 0x11b7500011b77},
		dm{re: 0x145c, si: 0x00000000, ne: 0xefe90000efea},
		dm{re: 0x145d, si: 0x00000000, ne: 0x11b7700011b79},
		dm{re: -0x0001, si: 0x11b7900011b80, ne: 0x11b8000011b82},
		dm{re: 0x145e, si: 0x00000000, ne: 0x11b8200011b87},
		dm{re: 0x145f, si: 0x00000000, ne: 0x151400001515},
		dm{re: -0x0001, si: 0x11b8700011b8e, ne: 0x11b8e00011b90},
		dm{re: -0x0001, si: 0x11b9000011b97, ne: 0x101bd000101c2},
		dm{re: -0x0001, si: 0x11b9700011b9e, ne: 0x11b9e00011bb4},
		dm{re: -0x0001, si: 0x11bb400011bbb, ne: 0x1019100010196},
		dm{re: -0x0001, si: 0x11bbb00011bc2, ne: 0x2d2c00002d2d},
		dm{re: -0x0001, si: 0x11bc200011bc9, ne: 0x11bc900011bcb},
		dm{re: -0x0001, si: 0x11bcb00011bd2, ne: 0x11bd200011bd4},
		dm{re: -0x0001, si: 0x11bd400011bdb, ne: 0x11bdb00011bdf},
		dm{re: -0x0001, si: 0x11bdf00011be6, ne: 0x11be600011be8},
		dm{re: -0x0001, si: 0x11be800011bef, ne: 0x11bef00011bf8},
		dm{re: -0x0001, si: 0x11bf800011bff, ne: 0x11bff00011c07},
		dm{re: 0x1460, si: 0x00000000, ne: 0x11c0700011c09},
		dm{re: 0x1461, si: 0x00000000, ne: 0x39500000397},
		dm{re: 0x1462, si: 0x00000000, ne: 0x4e3200004e34},
		dm{re: 0x1463, si: 0x00000000, ne: 0x1054a0001054c},
		dm{re: 0x1464, si: 0x00000000, ne: 0x11c0900011c0c},
		dm{re: 0x1465, si: 0x00000000, ne: 0x11c0c00011c0f},
		dm{re: 0x1466, si: 0x00000000, ne: 0x11c0f00011c12},
		dm{re: 0x1467, si: 0x00000000, ne: 0x11c1200011c26},
		dm{re: 0x1468, si: 0x00000000, ne: 0x11c2600011c29},
		dm{re: 0x1469, si: 0x00000000, ne: 0x11c2900011c2c},
		dm{re: 0x146a, si: 0x00000000, ne: 0x11c2c00011c2f},
		dm{re: 0x146b, si: 0x00000000, ne: 0x11c2f00011c33},
		dm{re: 0x146c, si: 0x00000000, ne: 0x11c3300011c36},
		dm{re: 0x146d, si: 0x00000000, ne: 0x11c3600011c3a},
		dm{re: 0x146e, si: 0x00000000, ne: 0x11c3a00011c3e},
		dm{re: -0x0001, si: 0x11c3e00011c45, ne: 0x11c4500011c4f},
		dm{re: 0x146f, si: 0x00000000, ne: 0x11c4f00011c57},
		dm{re: 0x1470, si: 0x00000000, ne: 0x11c5700011c5d},
		dm{re: 0x1471, si: 0x00000000, ne: 0x11c5d00011c65},
		dm{re: 0x1472, si: 0x00000000, ne: 0x11c6500011c6e},
		dm{re: 0x1473, si: 0x00000000, ne: 0x11c6e00011c7f},
		dm{re: 0x1474, si: 0x00000000, ne: 0x11c7f00011c8b},
		dm{re: 0x1475, si: 0x00000000, ne: 0x11c8b00011c97},
		dm{re: 0x1476, si: 0x00000000, ne: 0x11c9700011c9f},
		dm{re: 0x1477, si: 0x00000000, ne: 0x11c9f00011ca8},
		dm{re: 0x1478, si: 0x00000000, ne: 0x11ca800011cb1},
		dm{re: 0x1479, si: 0x00000000, ne: 0x11cb100011cb9},
		dm{re: -0x0001, si: 0x11cb900011cc0, ne: 0x11cc000011ccb},
		dm{re: -0x0001, si: 0x11ccb00011cd2, ne: 0x11cd200011cdb},
		dm{re: -0x0001, si: 0x11cdb00011ce2, ne: 0x11ce200011ceb},
		dm{re: 0x147a, si: 0x00000000, ne: 0x74ac000074ae},
		dm{re: 0x147b, si: 0x00000000, ne: 0x11ceb00011cf1},
		dm{re: 0x147c, si: 0x00000000, ne: 0x11cf100011cf8},
		dm{re: 0x147d, si: 0x00000000, ne: 0x11cf800011cff},
		dm{re: 0x147e, si: 0x00000000, ne: 0x11cff00011d09},
		dm{re: 0x147f, si: 0x00000000, ne: 0x11d0900011d17},
		dm{re: 0x1480, si: 0x00000000, ne: 0x9c1a00009c1c},
		dm{re: 0x1481, si: 0x00000000, ne: 0x11d1700011d24},
		dm{re: -0x0001, si: 0x11d2400011d2b, ne: 0x9c1a00009c1c},
		dm{re: -0x0001, si: 0x11b2e00011b35, ne: 0x11b3500011b3b},
		dm{re: 0x1482, si: 0x00000000, ne: 0x11d2b00011d2e},
		dm{re: 0x1483, si: 0x00000000, ne: 0x11d2e00011d33},
		dm{re: 0x1484, si: 0x00000000, ne: 0x11d3300011d38},
		dm{re: 0x1485, si: 0x00000000, ne: 0x11d3800011d3e},
		dm{re: -0x0001, si: 0x11d3e00011d45, ne: 0x11d4500011d4c},
		dm{re: 0x1486, si: 0x00000000, ne: 0x11d4c00011d52},
		dm{re: 0x1487, si: 0x00000000, ne: 0x11d5200011d58},
		dm{re: -0x0001, si: 0x11d5800011d5f, ne: 0x11d5f00011d64},
		dm{re: 0x1488, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x1489, si: 0x00000000, ne: 0x11d6400011d67},
		dm{re: 0x148b, si: 0x00000000, ne: 0x11d6d00011d7d},
		dm{re: 0x148d, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x11d8300011d8b, ne: 0x11d8b00011d94},
		dm{re: -0x0001, si: 0x11d9400011d9a, ne: 0x11d9a00011da1},
		dm{re: -0x0001, si: 0x11da100011da9, ne: 0x11da900011db2},
		dm{re: -0x0001, si: 0x11db200011dbf, ne: 0x11dbf00011dcc},
		dm{re: -0x0001, si: 0x11dcc00011dd9, ne: 0x11dd900011de6},
		dm{re: -0x0001, si: 0x11de600011df3, ne: 0x11df300011e02},
		dm{re: -0x0001, si: 0x11e0200011e13, ne: 0x11e1300011e26},
		dm{re: 0x148e, si: 0x00000000, ne: 0x11e2600011e32},
		dm{re: -0x0001, si: 0x11e3200011e3a, ne: 0x11e3a00011e42},
		dm{re: 0x1490, si: 0x00000000, ne: 0x11e4800011e4d},
		dm{re: -0x0001, si: 0x11e5100011e5d, ne: 0x11e5d00011e65},
		dm{re: 0x1492, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x11e6e00011e72},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1496, si: 0x00000000, ne: 0x11e7d00011e83},
		dm{re: 0x1497, si: 0x00000000, ne: 0x11e8300011e89},
		dm{re: -0x0001, si: 0x00000000, ne: 0x11e9100011e96},
		dm{re: 0x149a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x149c, si: 0x00000000, ne: 0x11ea100011ead},
		dm{re: 0x149d, si: 0x00000000, ne: 0x11ead00011eb9},
		dm{re: 0x149e, si: 0x00000000, ne: 0x11eb900011ec4},
		dm{re: -0x0001, si: 0x00000000, ne: 0x11ee000011ee9},
		dm{re: -0x0001, si: 0x11eee00011ef4, ne: 0x11eee00011ef4},
		dm{re: -0x0001, si: 0x11ef400011efc, ne: 0x11ef400011efc},
		dm{re: -0x0001, si: 0x11efc00011f01, ne: 0x11efc00011f01},
		dm{re: -0x0001, si: 0x11f0500011f0a, ne: 0x11f0a00011f11},
		dm{re: -0x0001, si: 0xbd000000bd, ne: 0x11f1100011f25},
		dm{re: 0x14a2, si: 0x00000000, ne: 0x11f2c00011f3a},
		dm{re: 0x14a3, si: 0x00000000, ne: 0x11f3a00011f47},
		dm{re: 0x14a4, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x11f5000011f57},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14a8, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: 0x14a9, si: 0x00000000, ne: 0x11f6400011f6f},
		dm{re: 0x14aa, si: 0x00000000, ne: 0x11f6f00011f7b},
		dm{re: 0x14ab, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14ad, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14ae, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x11f8900011f92, ne: 0x11f8900011f92},
		dm{re: -0x0001, si: 0x11f9200011f99, ne: 0x11f9200011f99},
		dm{re: 0x14b0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14b2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14b3, si: 0x00000000, ne: 0x39ee000039f5},
		dm{re: -0x0001, si: 0x11fa400011faa, ne: 0x11faa00011fb1},
		dm{re: 0x14b5, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x11fb600011fbb, ne: 0x11fb600011fbb},
		dm{re: -0x0001, si: 0x11fbb00011fc2, ne: 0xc0640000c066},
		dm{re: 0x14b7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14b8, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14ba, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14bb, si: 0x00000000, ne: 0xa6420000a645},
		dm{re: 0x14bd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14bf, si: 0x00000000, ne: 0x11fd900011fe0},
		dm{re: 0x14c0, si: 0x00000000, ne: 0x11fe000011feb},
		dm{re: 0x14c1, si: 0x00000000, ne: 0x11feb00011ff1},
		dm{re: 0x14c2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14c4, si: 0x00000000, ne: 0x11ff400011fff},
		dm{re: 0x14c5, si: 0x00000000, ne: 0x11fff0001200b},
		dm{re: 0x14c6, si: 0x00000000, ne: 0x1200b00012014},
		dm{re: 0x14c7, si: 0x00000000, ne: 0x120140001201f},
		dm{re: 0x14c8, si: 0x00000000, ne: 0x1201f0001202a},
		dm{re: 0x14c9, si: 0x00000000, ne: 0x1202a0001203a},
		dm{re: 0x14ca, si: 0x00000000, ne: 0x1203a00012046},
		dm{re: 0x14cb, si: 0x00000000, ne: 0x120460001204f},
		dm{re: 0x14cc, si: 0x00000000, ne: 0x1204f0001205a},
		dm{re: 0x14cd, si: 0x00000000, ne: 0x1205a00012063},
		dm{re: 0x14ce, si: 0x00000000, ne: 0x120630001206f},
		dm{re: 0x14cf, si: 0x00000000, ne: 0x1206f0001207b},
		dm{re: 0x14d0, si: 0x00000000, ne: 0x1207b0001208c},
		dm{re: 0x14d1, si: 0x00000000, ne: 0x1208c00012098},
		dm{re: 0x14d2, si: 0x00000000, ne: 0x12098000120a2},
		dm{re: 0x14d3, si: 0x00000000, ne: 0x120a2000120ac},
		dm{re: 0x14d4, si: 0x00000000, ne: 0x120ac000120b4},
		dm{re: 0x14d5, si: 0x00000000, ne: 0x120b4000120bf},
		dm{re: 0x14d6, si: 0x00000000, ne: 0x120bf000120cb},
		dm{re: 0x14d7, si: 0x00000000, ne: 0x120cb000120d4},
		dm{re: -0x0001, si: 0x120d4000120db, ne: 0x120d4000120db},
		dm{re: 0x14d8, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14d9, si: 0x00000000, ne: 0x120e7000120f0},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x120fe00012105},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1210c0001211c, ne: 0x1211c0001212c},
		dm{re: -0x0001, si: 0x1212c0001213b, ne: 0x1213b0001214c},
		dm{re: -0x0001, si: 0x1214c00012157, ne: 0x1214c00012157},
		dm{re: -0x0001, si: 0x1215700012160, ne: 0x1216000012169},
		dm{re: 0x14df, si: 0x00000000, ne: 0x1216900012172},
		dm{re: -0x0001, si: 0x121720001217b, ne: 0x121720001217b},
		dm{re: -0x0001, si: 0x1217b00012189, ne: 0x1218900012193},
		dm{re: -0x0001, si: 0x12193000121a1, ne: 0x121a1000121ab},
		dm{re: -0x0001, si: 0x121ab000121b8, ne: 0x121b8000121c1},
		dm{re: -0x0001, si: 0x121c1000121ca, ne: 0x9b4700009b4c},
		dm{re: -0x0001, si: 0x121ca000121d5, ne: 0x121d5000121dc},
		dm{re: -0x0001, si: 0x121dc000121e8, ne: 0x121e8000121f0},
		dm{re: -0x0001, si: 0x121f0000121fc, ne: 0x121fc00012204},
		dm{re: -0x0001, si: 0x122040001220b, ne: 0x1220b0001220e},
		dm{re: -0x0001, si: 0x1220e0001221d, ne: 0x1221d00012228},
		dm{re: -0x0001, si: 0x1222800012231, ne: 0x1223100012236},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1223b0001223e},
		dm{re: -0x0001, si: 0x122480001224f, ne: 0x122480001224f},
		dm{re: -0x0001, si: 0x1224f0001225a, ne: 0x1224f0001225a},
		dm{re: -0x0001, si: 0x1225a00012265, ne: 0x1226500012270},
		dm{re: -0x0001, si: 0x122700001227a, ne: 0x1227a00012284},
		dm{re: -0x0001, si: 0x1228400012290, ne: 0x122900001229c},
		dm{re: -0x0001, si: 0x1229c000122a3, ne: 0x122a3000122aa},
		dm{re: -0x0001, si: 0x122aa000122b2, ne: 0x122b2000122ba},
		dm{re: -0x0001, si: 0x122ba000122c1, ne: 0x122c1000122c8},
		dm{re: -0x0001, si: 0x122c8000122cf, ne: 0x122c8000122cf},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x122dd000122e3, ne: 0x122dd000122e3},
		dm{re: -0x0001, si: 0x122e3000122f0, ne: 0x122f0000122fd},
		dm{re: 0x14e4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14e5, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x123030001230a, ne: 0x123030001230a},
		dm{re: 0x14e7, si: 0x00000000, ne: 0x123110001231d},
		dm{re: 0x14e8, si: 0x00000000, ne: 0x1231d00012326},
		dm{re: 0x14ea, si: 0x00000000, ne: 0x123330001233b},
		dm{re: 0x14eb, si: 0x00000000, ne: 0x1233b00012340},
		dm{re: -0x0001, si: 0x1234000012347, ne: 0x123470001234d},
		dm{re: 0x14ec, si: 0x00000000, ne: 0x1234d00012352},
		dm{re: -0x0001, si: 0x1235b00012367, ne: 0x1236700012373},
		dm{re: -0x0001, si: 0x123730001237b, ne: 0x1237b00012383},
		dm{re: -0x0001, si: 0x123830001238d, ne: 0x1238d00012397},
		dm{re: 0x14ef, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14f0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14f1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14f2, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1239c000123a9, ne: 0x123a9000123ae},
		dm{re: -0x0001, si: 0x123ae000123b7, ne: 0x123b7000123bd},
		dm{re: 0x14f3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14f5, si: 0x00000000, ne: 0x123c2000123d1},
		dm{re: -0x0001, si: 0x123d1000123d9, ne: 0x123d9000123e2},
		dm{re: 0x14f7, si: 0x00000000, ne: 0x123e2000123eb},
		dm{re: -0x0001, si: 0x123eb000123f1, ne: 0xbd000000bd},
		dm{re: 0x14f8, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x14f9, si: 0x00000000, ne: 0x123f100012401},
		dm{re: 0x14fa, si: 0x00000000, ne: 0x1240100012416},
		dm{re: 0x14fb, si: 0x00000000, ne: 0x124160001242c},
		dm{re: 0x14fc, si: 0x00000000, ne: 0x1242c00012441},
		dm{re: 0x14fd, si: 0x00000000, ne: 0x1244100012455},
		dm{re: 0x14fe, si: 0x00000000, ne: 0x1245500012466},
		dm{re: 0x14ff, si: 0x00000000, ne: 0x124660001247c},
		dm{re: 0x1500, si: 0x00000000, ne: 0x1247c00012491},
		dm{re: 0x1501, si: 0x00000000, ne: 0x124910001249b},
		dm{re: 0x1502, si: 0x00000000, ne: 0x1249b000124aa},
		dm{re: 0x1503, si: 0x00000000, ne: 0x124aa000124be},
		dm{re: 0x1504, si: 0x00000000, ne: 0x124be000124d0},
		dm{re: 0x1505, si: 0x00000000, ne: 0x124d0000124e7},
		dm{re: 0x1506, si: 0x00000000, ne: 0x124e7000124fb},
		dm{re: 0x1507, si: 0x00000000, ne: 0x124fb0001250d},
		dm{re: 0x1508, si: 0x00000000, ne: 0x1250d00012524},
		dm{re: 0x1509, si: 0x00000000, ne: 0x125240001253a},
		dm{re: 0x150a, si: 0x00000000, ne: 0x1253a0001254c},
		dm{re: 0x150b, si: 0x00000000, ne: 0x1254c00012560},
		dm{re: 0x150c, si: 0x00000000, ne: 0x125600001256f},
		dm{re: 0x150d, si: 0x00000000, ne: 0x1256f0001257f},
		dm{re: 0x150e, si: 0x00000000, ne: 0x1257f0001258f},
		dm{re: 0x150f, si: 0x00000000, ne: 0x1258f000125b2},
		dm{re: 0x1510, si: 0x00000000, ne: 0x125b2000125d0},
		dm{re: 0x1511, si: 0x00000000, ne: 0x125d0000125f2},
		dm{re: 0x1512, si: 0x00000000, ne: 0x125f20001260b},
		dm{re: 0x1513, si: 0x00000000, ne: 0x1260b0001261f},
		dm{re: 0x1514, si: 0x00000000, ne: 0x1261f00012637},
		dm{re: 0x1515, si: 0x00000000, ne: 0x126370001265f},
		dm{re: 0x1516, si: 0x00000000, ne: 0x1265f00012688},
		dm{re: 0x1517, si: 0x00000000, ne: 0x12688000126af},
		dm{re: 0x1518, si: 0x00000000, ne: 0x126af000126d7},
		dm{re: 0x1519, si: 0x00000000, ne: 0x126d7000126f3},
		dm{re: 0x151a, si: 0x00000000, ne: 0x126f30001270f},
		dm{re: 0x151b, si: 0x00000000, ne: 0x1270f0001272d},
		dm{re: 0x151c, si: 0x00000000, ne: 0x1272d0001274c},
		dm{re: 0x151d, si: 0x00000000, ne: 0x1274c0001276e},
		dm{re: 0x151e, si: 0x00000000, ne: 0x1276e00012791},
		dm{re: 0x151f, si: 0x00000000, ne: 0x12791000127ac},
		dm{re: 0x1520, si: 0x00000000, ne: 0x127ac000127c3},
		dm{re: 0x1521, si: 0x00000000, ne: 0x127c3000127db},
		dm{re: 0x1522, si: 0x00000000, ne: 0x127db000127f3},
		dm{re: 0x1523, si: 0x00000000, ne: 0x127f300012811},
		dm{re: 0x1524, si: 0x00000000, ne: 0x1281100012824},
		dm{re: 0x1525, si: 0x00000000, ne: 0x1282400012838},
		dm{re: 0x1526, si: 0x00000000, ne: 0x1283800012851},
		dm{re: 0x1527, si: 0x00000000, ne: 0x1285100012864},
		dm{re: 0x1528, si: 0x00000000, ne: 0x128640001287b},
		dm{re: 0x1529, si: 0x00000000, ne: 0x1287b00012893},
		dm{re: 0x152a, si: 0x00000000, ne: 0x12893000128b0},
		dm{re: 0x152b, si: 0x00000000, ne: 0x128b0000128c8},
		dm{re: 0x152c, si: 0x00000000, ne: 0x128c8000128de},
		dm{re: 0x152d, si: 0x00000000, ne: 0x128de000128f6},
		dm{re: 0x152e, si: 0x00000000, ne: 0x128f60001290c},
		dm{re: 0x152f, si: 0x00000000, ne: 0x1290c0001291a},
		dm{re: 0x1530, si: 0x00000000, ne: 0x1291a00012930},
		dm{re: 0x1531, si: 0x00000000, ne: 0x1293000012946},
		dm{re: 0x1532, si: 0x00000000, ne: 0x1294600012957},
		dm{re: 0x1533, si: 0x00000000, ne: 0x129570001296d},
		dm{re: 0x1534, si: 0x00000000, ne: 0x1296d00012981},
		dm{re: 0x1535, si: 0x00000000, ne: 0x1298100012996},
		dm{re: 0x1536, si: 0x00000000, ne: 0x12996000129b1},
		dm{re: 0x1537, si: 0x00000000, ne: 0x129b1000129c7},
		dm{re: 0x1538, si: 0x00000000, ne: 0x129c7000129db},
		dm{re: 0x1539, si: 0x00000000, ne: 0x129db000129ec},
		dm{re: 0x153a, si: 0x00000000, ne: 0x129ec00012a01},
		dm{re: 0x153b, si: 0x00000000, ne: 0x12a0100012a17},
		dm{re: 0x153c, si: 0x00000000, ne: 0x12a1700012a2c},
		dm{re: 0x153d, si: 0x00000000, ne: 0x12a2c00012a44},
		dm{re: 0x153e, si: 0x00000000, ne: 0x12a4400012a5a},
		dm{re: 0x153f, si: 0x00000000, ne: 0x12a5a00012a75},
		dm{re: 0x1540, si: 0x00000000, ne: 0x12a7500012a87},
		dm{re: 0x1541, si: 0x00000000, ne: 0x12a8700012a9e},
		dm{re: 0x1542, si: 0x00000000, ne: 0x12a9e00012ab4},
		dm{re: 0x1543, si: 0x00000000, ne: 0x12ab400012acb},
		dm{re: 0x1544, si: 0x00000000, ne: 0x12acb00012ae2},
		dm{re: 0x1545, si: 0x00000000, ne: 0x12ae200012af8},
		dm{re: 0x1546, si: 0x00000000, ne: 0x12af800012b0d},
		dm{re: 0x1547, si: 0x00000000, ne: 0x12b0d00012b24},
		dm{re: 0x1548, si: 0x00000000, ne: 0x12b2400012b3a},
		dm{re: 0x1549, si: 0x00000000, ne: 0x12b3a00012b51},
		dm{re: 0x154a, si: 0x00000000, ne: 0x12b5100012b67},
		dm{re: 0x154b, si: 0x00000000, ne: 0x12b6700012b7e},
		dm{re: 0x154c, si: 0x00000000, ne: 0x12b7e00012b94},
		dm{re: 0x154d, si: 0x00000000, ne: 0x12b9400012bab},
		dm{re: 0x154e, si: 0x00000000, ne: 0x12bab00012bc1},
		dm{re: 0x154f, si: 0x00000000, ne: 0x12bc100012bd9},
		dm{re: 0x1550, si: 0x00000000, ne: 0x12bd900012bf2},
		dm{re: 0x1551, si: 0x00000000, ne: 0x12bf200012c09},
		dm{re: 0x1552, si: 0x00000000, ne: 0x12c0900012c21},
		dm{re: 0x1553, si: 0x00000000, ne: 0x12c2100012c38},
		dm{re: 0x1554, si: 0x00000000, ne: 0x12c3800012c4e},
		dm{re: 0x1555, si: 0x00000000, ne: 0x12c4e00012c68},
		dm{re: 0x1556, si: 0x00000000, ne: 0x12c6800012c81},
		dm{re: 0x1557, si: 0x00000000, ne: 0x12c8100012c9c},
		dm{re: 0x1558, si: 0x00000000, ne: 0x12c9c00012cb8},
		dm{re: 0x1559, si: 0x00000000, ne: 0x12cb800012ccf},
		dm{re: 0x155a, si: 0x00000000, ne: 0x12ccf00012ce8},
		dm{re: 0x155b, si: 0x00000000, ne: 0x12ce800012cfe},
		dm{re: 0x155c, si: 0x00000000, ne: 0x12cfe00012d16},
		dm{re: 0x155d, si: 0x00000000, ne: 0x12d1600012d2c},
		dm{re: 0x155e, si: 0x00000000, ne: 0x12d2c00012d41},
		dm{re: 0x155f, si: 0x00000000, ne: 0x12d4100012d57},
		dm{re: 0x1560, si: 0x00000000, ne: 0x12d5700012d6c},
		dm{re: 0x1561, si: 0x00000000, ne: 0x12d6c00012d88},
		dm{re: 0x1562, si: 0x00000000, ne: 0x12d8800012da4},
		dm{re: 0x1563, si: 0x00000000, ne: 0x12da400012dc1},
		dm{re: 0x1564, si: 0x00000000, ne: 0x12dc100012dd7},
		dm{re: 0x1565, si: 0x00000000, ne: 0x12dd700012dec},
		dm{re: 0x1566, si: 0x00000000, ne: 0x12dec00012e0a},
		dm{re: 0x1567, si: 0x00000000, ne: 0x12e0a00012e27},
		dm{re: 0x1568, si: 0x00000000, ne: 0x12e2700012e44},
		dm{re: 0x1569, si: 0x00000000, ne: 0x12e4400012e5d},
		dm{re: 0x156a, si: 0x00000000, ne: 0x12e5d00012e6e},
		dm{re: 0x156b, si: 0x00000000, ne: 0x12e6e00012e84},
		dm{re: 0x156c, si: 0x00000000, ne: 0x12e8400012e98},
		dm{re: 0x156d, si: 0x00000000, ne: 0x12e9800012eac},
		dm{re: 0x156e, si: 0x00000000, ne: 0x12eac00012ec2},
		dm{re: 0x156f, si: 0x00000000, ne: 0x12ec200012edd},
		dm{re: 0x1570, si: 0x00000000, ne: 0x12edd00012ef5},
		dm{re: 0x1571, si: 0x00000000, ne: 0x12ef500012f12},
		dm{re: 0x1572, si: 0x00000000, ne: 0x12f1200012f2a},
		dm{re: 0x1573, si: 0x00000000, ne: 0x12f2a00012f47},
		dm{re: 0x1574, si: 0x00000000, ne: 0x12f4700012f62},
		dm{re: 0x1575, si: 0x00000000, ne: 0x12f6200012f82},
		dm{re: 0x1576, si: 0x00000000, ne: 0x12f8200012f97},
		dm{re: 0x1577, si: 0x00000000, ne: 0x12f9700012fa3},
		dm{re: -0x0001, si: 0x12fa300012faa, ne: 0x12faa00012fc4},
		dm{re: -0x0001, si: 0x12fc400012fcc, ne: 0x12fcc00012fd7},
		dm{re: -0x0001, si: 0x12fd700012fdf, ne: 0x12fdf00012fee},
		dm{re: -0x0001, si: 0x12fee00012ff6, ne: 0x12ff600013003},
		dm{re: -0x0001, si: 0x130030001300c, ne: 0x1300c0001301d},
		dm{re: -0x0001, si: 0x1301d00013024, ne: 0x1302400013042},
		dm{re: -0x0001, si: 0x1304200013049, ne: 0x1304900013063},
		dm{re: -0x0001, si: 0x130630001306a, ne: 0x1306a00013088},
		dm{re: -0x0001, si: 0x130880001308f, ne: 0x1308f000130a0},
		dm{re: -0x0001, si: 0x130a0000130a7, ne: 0x130a7000130bc},
		dm{re: -0x0001, si: 0x130bc000130c3, ne: 0x130c3000130d4},
		dm{re: -0x0001, si: 0x130d4000130db, ne: 0x130db000130f0},
		dm{re: -0x0001, si: 0x130f0000130f7, ne: 0x130f70001310a},
		dm{re: -0x0001, si: 0x1310a00013111, ne: 0x1311100013127},
		dm{re: -0x0001, si: 0x131270001312e, ne: 0x1312e0001314a},
		dm{re: -0x0001, si: 0x1314a00013151, ne: 0x131510001315c},
		dm{re: -0x0001, si: 0x1315c00013163, ne: 0x131630001316f},
		dm{re: -0x0001, si: 0x1316f00013176, ne: 0x1317600013192},
		dm{re: -0x0001, si: 0x1319200013199, ne: 0x13199000131b4},
		dm{re: -0x0001, si: 0x131b4000131bb, ne: 0x131bb000131d2},
		dm{re: -0x0001, si: 0x131d2000131d9, ne: 0x131d9000131ec},
		dm{re: -0x0001, si: 0x131ec000131f3, ne: 0x131f300013206},
		dm{re: -0x0001, si: 0x132060001320d, ne: 0x1320d00013223},
		dm{re: -0x0001, si: 0x132230001322c, ne: 0x132230001322c},
		dm{re: 0x1578, si: 0x00000000, ne: 0x1322c00013236},
		dm{re: 0x1579, si: 0x00000000, ne: 0x1323600013242},
		dm{re: 0x157a, si: 0x00000000, ne: 0x132420001324d},
		dm{re: 0x157b, si: 0x00000000, ne: 0x1324d00013258},
		dm{re: 0x157c, si: 0x00000000, ne: 0x1325800013265},
		dm{re: 0x157d, si: 0x00000000, ne: 0x1326500013271},
		dm{re: 0x157e, si: 0x00000000, ne: 0x1327100013282},
		dm{re: 0x157f, si: 0x00000000, ne: 0x132820001328c},
		dm{re: 0x1580, si: 0x00000000, ne: 0x1328c00013298},
		dm{re: 0x1581, si: 0x00000000, ne: 0x13298000132a5},
		dm{re: 0x1582, si: 0x00000000, ne: 0x132a5000132ad},
		dm{re: 0x1583, si: 0x00000000, ne: 0x132ad000132b5},
		dm{re: 0x1584, si: 0x00000000, ne: 0x132b5000132bd},
		dm{re: 0x1585, si: 0x00000000, ne: 0x132bd000132ce},
		dm{re: 0x1586, si: 0x00000000, ne: 0x132ce000132d8},
		dm{re: 0x1587, si: 0x00000000, ne: 0x132d8000132e8},
		dm{re: 0x1588, si: 0x00000000, ne: 0x132e8000132f4},
		dm{re: 0x1589, si: 0x00000000, ne: 0x132f400013300},
		dm{re: 0x158a, si: 0x00000000, ne: 0x1330000013311},
		dm{re: 0x158b, si: 0x00000000, ne: 0x1331100013322},
		dm{re: 0x158c, si: 0x00000000, ne: 0x1332200013332},
		dm{re: 0x158d, si: 0x00000000, ne: 0x133320001333d},
		dm{re: 0x158e, si: 0x00000000, ne: 0x1333d0001334f},
		dm{re: 0x158f, si: 0x00000000, ne: 0x1334f00013360},
		dm{re: 0x1590, si: 0x00000000, ne: 0x133600001337f},
		dm{re: 0x1591, si: 0x00000000, ne: 0x1337f0001338a},
		dm{re: 0x1592, si: 0x00000000, ne: 0x1338a00013399},
		dm{re: 0x1593, si: 0x00000000, ne: 0x13399000133ad},
		dm{re: 0x1594, si: 0x00000000, ne: 0x133ad000133af},
		dm{re: 0x1595, si: 0x00000000, ne: 0x133af000133ba},
		dm{re: 0x1596, si: 0x00000000, ne: 0x133ba000133c7},
		dm{re: 0x1597, si: 0x00000000, ne: 0x133c7000133d2},
		dm{re: 0x1598, si: 0x00000000, ne: 0x133d2000133dc},
		dm{re: 0x1599, si: 0x00000000, ne: 0x133dc000133ea},
		dm{re: 0x159a, si: 0x00000000, ne: 0x133ea000133fd},
		dm{re: 0x159b, si: 0x00000000, ne: 0x133fd0001340b},
		dm{re: 0x159c, si: 0x00000000, ne: 0x1340b00013414},
		dm{re: 0x159d, si: 0x00000000, ne: 0x134140001341d},
		dm{re: 0x159e, si: 0x00000000, ne: 0x1341d00013425},
		dm{re: 0x159f, si: 0x00000000, ne: 0x1342500013432},
		dm{re: 0x15a0, si: 0x00000000, ne: 0x134320001343b},
		dm{re: 0x15a1, si: 0x00000000, ne: 0x1343b00013452},
		dm{re: 0x15a2, si: 0x00000000, ne: 0x1345200013462},
		dm{re: 0x15a3, si: 0x00000000, ne: 0x133320001333d},
		dm{re: 0x15a4, si: 0x00000000, ne: 0x1346200013473},
		dm{re: 0x15a5, si: 0x00000000, ne: 0x134730001347b},
		dm{re: 0x15a6, si: 0x00000000, ne: 0x1347b0001348b},
		dm{re: 0x15a7, si: 0x00000000, ne: 0x1348b00013499},
		dm{re: 0x15a8, si: 0x00000000, ne: 0x13499000134a7},
		dm{re: 0x15a9, si: 0x00000000, ne: 0x134a7000134be},
		dm{re: 0x15aa, si: 0x00000000, ne: 0x134be000134ce},
		dm{re: 0x15ab, si: 0x00000000, ne: 0x134ce000134da},
		dm{re: 0x15ac, si: 0x00000000, ne: 0x134da000134ea},
		dm{re: 0x15ad, si: 0x00000000, ne: 0x134ea000134f3},
		dm{re: 0x15ae, si: 0x00000000, ne: 0x134f300013506},
		dm{re: 0x15af, si: 0x00000000, ne: 0x1350600013513},
		dm{re: 0x15b0, si: 0x00000000, ne: 0x135130001351e},
		dm{re: 0x15b1, si: 0x00000000, ne: 0x1351e00013530},
		dm{re: 0x15b2, si: 0x00000000, ne: 0x1353000013541},
		dm{re: 0x15b3, si: 0x00000000, ne: 0x1354100013550},
		dm{re: 0x15b4, si: 0x00000000, ne: 0x1355000013564},
		dm{re: 0x15b5, si: 0x00000000, ne: 0x1356400013570},
		dm{re: 0x15b6, si: 0x00000000, ne: 0x1357000013581},
		dm{re: 0x15b7, si: 0x00000000, ne: 0x135810001358f},
		dm{re: 0x15b8, si: 0x00000000, ne: 0x1358f000135a1},
		dm{re: 0x15b9, si: 0x00000000, ne: 0x135a1000135ba},
		dm{re: 0x15ba, si: 0x00000000, ne: 0x135ba000135c5},
		dm{re: 0x15bb, si: 0x00000000, ne: 0x135c5000135d5},
		dm{re: 0x15bc, si: 0x00000000, ne: 0x135d5000135e0},
		dm{re: 0x15bd, si: 0x00000000, ne: 0x135e0000135ed},
		dm{re: 0x15be, si: 0x00000000, ne: 0x135ed000135f9},
		dm{re: 0x15bf, si: 0x00000000, ne: 0x135f900013608},
		dm{re: 0x15c0, si: 0x00000000, ne: 0x1360800013614},
		dm{re: 0x15c1, si: 0x00000000, ne: 0x1361400013625},
		dm{re: 0x15c2, si: 0x00000000, ne: 0x1362500013636},
		dm{re: 0x15c3, si: 0x00000000, ne: 0x1363600013644},
		dm{re: 0x15c4, si: 0x00000000, ne: 0x1364400013651},
		dm{re: 0x15c5, si: 0x00000000, ne: 0x1365100013660},
		dm{re: 0x15c6, si: 0x00000000, ne: 0x136600001366f},
		dm{re: 0x15c7, si: 0x00000000, ne: 0x1366f0001367e},
		dm{re: 0x15c8, si: 0x00000000, ne: 0x1367e0001368d},
		dm{re: 0x15c9, si: 0x00000000, ne: 0x1368d0001369f},
		dm{re: 0x15ca, si: 0x00000000, ne: 0x1369f000136ae},
		dm{re: 0x15cb, si: 0x00000000, ne: 0x136ae000136be},
		dm{re: 0x15cc, si: 0x00000000, ne: 0x136be000136cf},
		dm{re: 0x15cd, si: 0x00000000, ne: 0x136cf000136e5},
		dm{re: 0x15ce, si: 0x00000000, ne: 0x136e5000136f4},
		dm{re: 0x15cf, si: 0x00000000, ne: 0x131300001317},
		dm{re: 0x15d0, si: 0x00000000, ne: 0x136f4000136fb},
		dm{re: 0x15d1, si: 0x00000000, ne: 0x136fb00013701},
		dm{re: 0x15d2, si: 0x00000000, ne: 0x1370100013707},
		dm{re: 0x15d3, si: 0x00000000, ne: 0x137070001370d},
		dm{re: 0x15d4, si: 0x00000000, ne: 0x1370d00013715},
		dm{re: 0x15d5, si: 0x00000000, ne: 0x137150001371d},
		dm{re: 0x15d6, si: 0x00000000, ne: 0x1371d00013725},
		dm{re: 0x15d7, si: 0x00000000, ne: 0x137250001372d},
		dm{re: 0x15d8, si: 0x00000000, ne: 0x1372d0001373b},
		dm{re: 0x15d9, si: 0x00000000, ne: 0x1373b00013748},
		dm{re: 0x15da, si: 0x00000000, ne: 0x1374800013755},
		dm{re: 0x15db, si: 0x00000000, ne: 0x1375500013762},
		dm{re: 0x15dc, si: 0x00000000, ne: 0x1376200013772},
		dm{re: 0x15dd, si: 0x00000000, ne: 0x1377200013783},
		dm{re: 0x15de, si: 0x00000000, ne: 0x13783000137a2},
		dm{re: 0x15df, si: 0x00000000, ne: 0x1338a00013399},
		dm{re: 0x15e0, si: 0x00000000, ne: 0x137a2000137b5},
		dm{re: 0x15e1, si: 0x00000000, ne: 0x137b5000137c4},
		dm{re: 0x15e2, si: 0x00000000, ne: 0x137c4000137d5},
		dm{re: 0x15e3, si: 0x00000000, ne: 0x137d5000137e3},
		dm{re: 0x15e4, si: 0x00000000, ne: 0x137e3000137f5},
		dm{re: 0x15e5, si: 0x00000000, ne: 0x137f500013803},
		dm{re: 0x15e6, si: 0x00000000, ne: 0x138030001380c},
		dm{re: 0x15e7, si: 0x00000000, ne: 0x1380c0001381a},
		dm{re: 0x15e8, si: 0x00000000, ne: 0x1381a0001382a},
		dm{re: 0x15e9, si: 0x00000000, ne: 0x1382a00013837},
		dm{re: 0x15ea, si: 0x00000000, ne: 0x1383700013848},
		dm{re: 0x15eb, si: 0x00000000, ne: 0x1384800013851},
		dm{re: 0x15ec, si: 0x00000000, ne: 0x1381a0001382a},
		dm{re: 0x15ed, si: 0x00000000, ne: 0x138510001385f},
		dm{re: 0x15ee, si: 0x00000000, ne: 0x1385f0001386e},
		dm{re: 0x15ef, si: 0x00000000, ne: 0x1386e00013877},
		dm{re: 0x15f0, si: 0x00000000, ne: 0x1387700013885},
		dm{re: 0x15f1, si: 0x00000000, ne: 0x1388500013895},
		dm{re: 0x15f2, si: 0x00000000, ne: 0x138950001389e},
		dm{re: 0x15f3, si: 0x00000000, ne: 0x1389e000138ac},
		dm{re: 0x15f4, si: 0x00000000, ne: 0x138ac000138bc},
		dm{re: 0x15f5, si: 0x00000000, ne: 0x138bc000138c6},
		dm{re: 0x15f6, si: 0x00000000, ne: 0x138c6000138cf},
		dm{re: 0x15f7, si: 0x00000000, ne: 0x138cf000138d9},
		dm{re: 0x15f8, si: 0x00000000, ne: 0x138d9000138e3},
		dm{re: 0x15f9, si: 0x00000000, ne: 0x138e3000138f2},
		dm{re: 0x15fa, si: 0x00000000, ne: 0x138f2000138fd},
		dm{re: -0x0001, si: 0x138fd00013903, ne: 0x1390300013924},
		dm{re: 0x15fb, si: 0x00000000, ne: 0x139240001392f},
		dm{re: 0x15fc, si: 0x00000000, ne: 0x1392f00013939},
		dm{re: 0x15fd, si: 0x00000000, ne: 0x1393900013946},
		dm{re: 0x15fe, si: 0x00000000, ne: 0x1394600013953},
		dm{re: 0x15ff, si: 0x00000000, ne: 0x1395300013963},
		dm{re: 0x1600, si: 0x00000000, ne: 0x1396300013976},
		dm{re: 0x1601, si: 0x00000000, ne: 0x1397600013981},
		dm{re: 0x1602, si: 0x00000000, ne: 0x139810001398f},
		dm{re: 0x1603, si: 0x00000000, ne: 0x1398f0001399c},
		dm{re: 0x1604, si: 0x00000000, ne: 0x1399c000139ac},
		dm{re: 0x1605, si: 0x00000000, ne: 0x139ac000139cf},
		dm{re: 0x1606, si: 0x00000000, ne: 0x139cf000139e2},
		dm{re: 0x1607, si: 0x00000000, ne: 0x139e2000139f0},
		dm{re: 0x1608, si: 0x00000000, ne: 0x139f0000139fa},
		dm{re: 0x1609, si: 0x00000000, ne: 0x139fa00013a0a},
		dm{re: 0x160a, si: 0x00000000, ne: 0x13a0a00013a15},
		dm{re: 0x160b, si: 0x00000000, ne: 0x13a1500013a22},
		dm{re: 0x160c, si: 0x00000000, ne: 0x13a2200013a32},
		dm{re: 0x160d, si: 0x00000000, ne: 0x13a3200013a40},
		dm{re: 0x160e, si: 0x00000000, ne: 0x13a4000013a51},
		dm{re: 0x160f, si: 0x00000000, ne: 0x13a5100013a60},
		dm{re: 0x1610, si: 0x00000000, ne: 0x13a6000013a6e},
		dm{re: 0x1611, si: 0x00000000, ne: 0x13a6e00013a78},
		dm{re: 0x1612, si: 0x00000000, ne: 0x13a7800013a84},
		dm{re: 0x1613, si: 0x00000000, ne: 0x13a8400013a94},
		dm{re: 0x1614, si: 0x00000000, ne: 0x13a9400013a9e},
		dm{re: 0x1615, si: 0x00000000, ne: 0x13a9e00013aad},
		dm{re: 0x1616, si: 0x00000000, ne: 0x13aad00013ab8},
		dm{re: 0x1617, si: 0x00000000, ne: 0x13ab800013ac3},
		dm{re: 0x1618, si: 0x00000000, ne: 0x13ac300013acd},
		dm{re: 0x1619, si: 0x00000000, ne: 0x13acd00013adc},
		dm{re: 0x161a, si: 0x00000000, ne: 0x13adc00013ae6},
		dm{re: 0x161b, si: 0x00000000, ne: 0x13ae600013af4},
		dm{re: 0x161c, si: 0x00000000, ne: 0x13af400013afe},
		dm{re: 0x161d, si: 0x00000000, ne: 0x13afe00013b08},
		dm{re: 0x161e, si: 0x00000000, ne: 0x13b0800013b15},
		dm{re: 0x161f, si: 0x00000000, ne: 0x13b1500013b25},
		dm{re: 0x1620, si: 0x00000000, ne: 0x13b2500013b35},
		dm{re: 0x1621, si: 0x00000000, ne: 0x13b3500013b45},
		dm{re: 0x1622, si: 0x00000000, ne: 0x13b4500013b4e},
		dm{re: 0x1623, si: 0x00000000, ne: 0x13b4e00013b57},
		dm{re: 0x1624, si: 0x00000000, ne: 0x13b5700013b65},
		dm{re: 0x1625, si: 0x00000000, ne: 0x13b6500013b75},
		dm{re: 0x1626, si: 0x00000000, ne: 0x13b7500013b85},
		dm{re: 0x1627, si: 0x00000000, ne: 0x13b8500013b95},
		dm{re: 0x1628, si: 0x00000000, ne: 0x13b9500013b9f},
		dm{re: 0x1629, si: 0x00000000, ne: 0x13b9f00013bac},
		dm{re: 0x162a, si: 0x00000000, ne: 0x13bac00013bba},
		dm{re: 0x162b, si: 0x00000000, ne: 0x13bba00013bc3},
		dm{re: 0x162c, si: 0x00000000, ne: 0x13bc300013bcd},
		dm{re: 0x162d, si: 0x00000000, ne: 0x13bcd00013bde},
		dm{re: 0x162e, si: 0x00000000, ne: 0x13bde00013be8},
		dm{re: 0x162f, si: 0x00000000, ne: 0x13be800013bf1},
		dm{re: 0x1630, si: 0x00000000, ne: 0x13bf100013c01},
		dm{re: 0x1631, si: 0x00000000, ne: 0x13c0100013c11},
		dm{re: 0x1632, si: 0x00000000, ne: 0x13c1100013c21},
		dm{re: 0x1633, si: 0x00000000, ne: 0x13c2100013c2b},
		dm{re: 0x1634, si: 0x00000000, ne: 0x13c2b00013c35},
		dm{re: 0x1635, si: 0x00000000, ne: 0x13c3500013c42},
		dm{re: 0x1636, si: 0x00000000, ne: 0x13c4200013c4b},
		dm{re: 0x1637, si: 0x00000000, ne: 0x13c4b00013c59},
		dm{re: 0x1638, si: 0x00000000, ne: 0x13c5900013c69},
		dm{re: 0x1639, si: 0x00000000, ne: 0x13c6900013c73},
		dm{re: 0x163a, si: 0x00000000, ne: 0x13c7300013c83},
		dm{re: 0x163b, si: 0x00000000, ne: 0x13c8300013c94},
		dm{re: 0x163c, si: 0x00000000, ne: 0x13c9400013c9d},
		dm{re: 0x163d, si: 0x00000000, ne: 0x13c9d00013ca8},
		dm{re: 0x163e, si: 0x00000000, ne: 0x13ca800013cb8},
		dm{re: 0x163f, si: 0x00000000, ne: 0x13cb800013cc6},
		dm{re: 0x1640, si: 0x00000000, ne: 0x13cc600013cd3},
		dm{re: 0x1641, si: 0x00000000, ne: 0x13cd300013cdd},
		dm{re: 0x1642, si: 0x00000000, ne: 0x13cdd00013ce8},
		dm{re: 0x1643, si: 0x00000000, ne: 0x13ce800013cf3},
		dm{re: 0x1644, si: 0x00000000, ne: 0x13af400013afe},
		dm{re: 0x1645, si: 0x00000000, ne: 0x13cf300013cfd},
		dm{re: 0x1646, si: 0x00000000, ne: 0x13cfd00013d0a},
		dm{re: 0x1647, si: 0x00000000, ne: 0x13d0a00013d14},
		dm{re: 0x1648, si: 0x00000000, ne: 0x13d1400013d1e},
		dm{re: 0x1649, si: 0x00000000, ne: 0x13d1e00013d29},
		dm{re: 0x164a, si: 0x00000000, ne: 0x13d2900013d34},
		dm{re: 0x164b, si: 0x00000000, ne: 0x13d3400013d3f},
		dm{re: 0x164c, si: 0x00000000, ne: 0x13d3f00013d49},
		dm{re: 0x164d, si: 0x00000000, ne: 0x13d4900013d54},
		dm{re: 0x164e, si: 0x00000000, ne: 0x13d5400013d5e},
		dm{re: 0x164f, si: 0x00000000, ne: 0x13d5e00013d68},
		dm{re: 0x1650, si: 0x00000000, ne: 0x13d6800013d75},
		dm{re: 0x1651, si: 0x00000000, ne: 0x13d7500013d7f},
		dm{re: 0x1652, si: 0x00000000, ne: 0x13d7f00013d8a},
		dm{re: 0x1653, si: 0x00000000, ne: 0x13d8a00013d94},
		dm{re: 0x1654, si: 0x00000000, ne: 0x13d9400013da1},
		dm{re: 0x1655, si: 0x00000000, ne: 0x13da100013dab},
		dm{re: 0x1656, si: 0x00000000, ne: 0x13dab00013db6},
		dm{re: 0x1657, si: 0x00000000, ne: 0x13dab00013db6},
		dm{re: 0x1658, si: 0x00000000, ne: 0x13db600013dc0},
		dm{re: 0x1659, si: 0x00000000, ne: 0x13dc000013dcd},
		dm{re: 0x165a, si: 0x00000000, ne: 0x13dcd00013dd7},
		dm{re: 0x165b, si: 0x00000000, ne: 0x13dd700013de2},
		dm{re: 0x165c, si: 0x00000000, ne: 0x13de200013dec},
		dm{re: 0x165d, si: 0x00000000, ne: 0x13dec00013df6},
		dm{re: 0x165e, si: 0x00000000, ne: 0x13df600013e03},
		dm{re: 0x165f, si: 0x00000000, ne: 0x13e0300013e0d},
		dm{re: 0x1660, si: 0x00000000, ne: 0x13e0d00013e17},
		dm{re: 0x1661, si: 0x00000000, ne: 0x13e1700013e21},
		dm{re: 0x1662, si: 0x00000000, ne: 0x13e2100013e2e},
		dm{re: 0x1663, si: 0x00000000, ne: 0x13e2e00013e38},
		dm{re: 0x1664, si: 0x00000000, ne: 0x13e3800013e48},
		dm{re: 0x1665, si: 0x00000000, ne: 0x13e4800013e53},
		dm{re: 0x1666, si: 0x00000000, ne: 0x13e5300013e5c},
		dm{re: 0x1667, si: 0x00000000, ne: 0x13e5c00013e6a},
		dm{re: 0x1668, si: 0x00000000, ne: 0x13e6a00013e7e},
		dm{re: 0x1669, si: 0x00000000, ne: 0x13e7e00013e8e},
		dm{re: 0x166a, si: 0x00000000, ne: 0x13e8e00013e9b},
		dm{re: 0x166b, si: 0x00000000, ne: 0x13e9b00013ea4},
		dm{re: 0x166c, si: 0x00000000, ne: 0x13ea400013eb2},
		dm{re: 0x166d, si: 0x00000000, ne: 0x13eb200013ec0},
		dm{re: 0x166e, si: 0x00000000, ne: 0x13ec000013ece},
		dm{re: 0x166f, si: 0x00000000, ne: 0x13ece00013edb},
		dm{re: 0x1670, si: 0x00000000, ne: 0x13edb00013eea},
		dm{re: 0x1671, si: 0x00000000, ne: 0x13eea00013ef7},
		dm{re: 0x1672, si: 0x00000000, ne: 0x13ef700013f04},
		dm{re: 0x1673, si: 0x00000000, ne: 0x13f0400013f16},
		dm{re: 0x1674, si: 0x00000000, ne: 0x13f1600013f25},
		dm{re: 0x1675, si: 0x00000000, ne: 0x13f2500013f35},
		dm{re: 0x1676, si: 0x00000000, ne: 0x13f3500013f43},
		dm{re: 0x1677, si: 0x00000000, ne: 0x13f4300013f51},
		dm{re: 0x1678, si: 0x00000000, ne: 0x13f5100013f62},
		dm{re: 0x1679, si: 0x00000000, ne: 0x13f0400013f16},
		dm{re: 0x167a, si: 0x00000000, ne: 0x13f6200013f72},
		dm{re: 0x167b, si: 0x00000000, ne: 0x13f7200013f82},
		dm{re: 0x167c, si: 0x00000000, ne: 0x13f8200013f92},
		dm{re: 0x167d, si: 0x00000000, ne: 0x13f9200013fa2},
		dm{re: 0x167e, si: 0x00000000, ne: 0x13fa200013fab},
		dm{re: 0x167f, si: 0x00000000, ne: 0x13fab00013fbb},
		dm{re: 0x1680, si: 0x00000000, ne: 0x13fbb00013fcb},
		dm{re: 0x1681, si: 0x00000000, ne: 0x13fcb00013fdb},
		dm{re: 0x1682, si: 0x00000000, ne: 0x13fdb00013fea},
		dm{re: 0x1683, si: 0x00000000, ne: 0x13fea00013ff3},
		dm{re: 0x1684, si: 0x00000000, ne: 0x13ff300013ffd},
		dm{re: 0x1685, si: 0x00000000, ne: 0x13ffd0001400b},
		dm{re: 0x1686, si: 0x00000000, ne: 0x1400b00014015},
		dm{re: 0x1687, si: 0x00000000, ne: 0x140150001401e},
		dm{re: 0x1688, si: 0x00000000, ne: 0x1401e0001402e},
		dm{re: 0x1689, si: 0x00000000, ne: 0x1402e0001403e},
		dm{re: 0x168a, si: 0x00000000, ne: 0x1403e0001404e},
		dm{re: 0x168b, si: 0x00000000, ne: 0x1404e0001405e},
		dm{re: 0x168c, si: 0x00000000, ne: 0x1405e0001406d},
		dm{re: 0x168d, si: 0x00000000, ne: 0x1406d0001407c},
		dm{re: 0x168e, si: 0x00000000, ne: 0x1407c0001408d},
		dm{re: 0x168f, si: 0x00000000, ne: 0x1408d0001409a},
		dm{re: 0x1690, si: 0x00000000, ne: 0x1409a000140ab},
		dm{re: 0x1691, si: 0x00000000, ne: 0x140ab000140b8},
		dm{re: 0x1692, si: 0x00000000, ne: 0x140b8000140c6},
		dm{re: 0x1693, si: 0x00000000, ne: 0x140c6000140d3},
		dm{re: 0x1694, si: 0x00000000, ne: 0x140d3000140e2},
		dm{re: 0x1695, si: 0x00000000, ne: 0x140e2000140ed},
		dm{re: 0x1696, si: 0x00000000, ne: 0x140ed000140f8},
		dm{re: 0x1697, si: 0x00000000, ne: 0x140f800014101},
		dm{re: -0x0001, si: 0x141010001410b, ne: 0x1410b00014119},
		dm{re: -0x0001, si: 0x1411900014122, ne: 0x141220001412f},
		dm{re: 0x1698, si: 0x00000000, ne: 0x1412f00014140},
		dm{re: 0x1699, si: 0x00000000, ne: 0x141400001414f},
		dm{re: 0x169a, si: 0x00000000, ne: 0x1414f00014159},
		dm{re: 0x169b, si: 0x00000000, ne: 0x1415900014168},
		dm{re: 0x169c, si: 0x00000000, ne: 0x1416800014173},
		dm{re: 0x169d, si: 0x00000000, ne: 0x141730001417e},
		dm{re: 0x169e, si: 0x00000000, ne: 0x1417e00014188},
		dm{re: 0x169f, si: 0x00000000, ne: 0x1418800014192},
		dm{re: 0x16a0, si: 0x00000000, ne: 0x141920001419d},
		dm{re: 0x16a1, si: 0x00000000, ne: 0x1419d000141a7},
		dm{re: 0x16a2, si: 0x00000000, ne: 0x141a7000141b1},
		dm{re: 0x16a3, si: 0x00000000, ne: 0x141b1000141bb},
		dm{re: 0x16a4, si: 0x00000000, ne: 0x141bb000141c5},
		dm{re: 0x16a5, si: 0x00000000, ne: 0x141c5000141d6},
		dm{re: 0x16a6, si: 0x00000000, ne: 0x141d6000141e0},
		dm{re: 0x16a7, si: 0x00000000, ne: 0x141e0000141eb},
		dm{re: 0x16a8, si: 0x00000000, ne: 0x141eb000141f5},
		dm{re: 0x16a9, si: 0x00000000, ne: 0x141f5000141ff},
		dm{re: 0x16aa, si: 0x00000000, ne: 0x141ff00014209},
		dm{re: 0x16ab, si: 0x00000000, ne: 0x1420900014216},
		dm{re: 0x16ac, si: 0x00000000, ne: 0x1421600014221},
		dm{re: 0x16ad, si: 0x00000000, ne: 0x142210001422b},
		dm{re: 0x16ae, si: 0x00000000, ne: 0x1422b00014238},
		dm{re: 0x16af, si: 0x00000000, ne: 0x1423800014242},
		dm{re: 0x16b0, si: 0x00000000, ne: 0x142420001424f},
		dm{re: 0x16b1, si: 0x00000000, ne: 0x1424f00014259},
		dm{re: 0x16b2, si: 0x00000000, ne: 0x1425900014266},
		dm{re: 0x16b3, si: 0x00000000, ne: 0x1426600014270},
		dm{re: 0x16b4, si: 0x00000000, ne: 0x142700001427f},
		dm{re: 0x16b5, si: 0x00000000, ne: 0x1427f0001428b},
		dm{re: 0x16b6, si: 0x00000000, ne: 0x1428b00014295},
		dm{re: 0x16b7, si: 0x00000000, ne: 0x14295000142a6},
		dm{re: 0x16b8, si: 0x00000000, ne: 0x142a6000142b0},
		dm{re: 0x16b9, si: 0x00000000, ne: 0x142b0000142c1},
		dm{re: 0x16ba, si: 0x00000000, ne: 0x142c1000142d1},
		dm{re: 0x16bb, si: 0x00000000, ne: 0x142d1000142da},
		dm{re: 0x16bc, si: 0x00000000, ne: 0x142da000142e7},
		dm{re: 0x16bd, si: 0x00000000, ne: 0x142e7000142f0},
		dm{re: 0x16be, si: 0x00000000, ne: 0x142f0000142fd},
		dm{re: 0x16bf, si: 0x00000000, ne: 0x142fd00014306},
		dm{re: 0x16c0, si: 0x00000000, ne: 0x1430600014313},
		dm{re: 0x16c1, si: 0x00000000, ne: 0x143130001431c},
		dm{re: 0x16c2, si: 0x00000000, ne: 0x1431c00014325},
		dm{re: 0x16c3, si: 0x00000000, ne: 0x143250001432e},
		dm{re: 0x16c4, si: 0x00000000, ne: 0x1432e00014337},
		dm{re: 0x16c5, si: 0x00000000, ne: 0x1433700014344},
		dm{re: 0x16c6, si: 0x00000000, ne: 0x1434400014353},
		dm{re: 0x16c7, si: 0x00000000, ne: 0x143530001435d},
		dm{re: 0x16c8, si: 0x00000000, ne: 0x1435d00014369},
		dm{re: 0x16c9, si: 0x00000000, ne: 0x1436900014375},
		dm{re: 0x16ca, si: 0x00000000, ne: 0x1437500014380},
		dm{re: 0x16cb, si: 0x00000000, ne: 0x1438000014392},
		dm{re: 0x16cc, si: 0x00000000, ne: 0x14392000143ab},
		dm{re: 0x16cd, si: 0x00000000, ne: 0x143ab000143b6},
		dm{re: 0x16ce, si: 0x00000000, ne: 0x143b6000143c5},
		dm{re: 0x16cf, si: 0x00000000, ne: 0x143c5000143d7},
		dm{re: 0x16d0, si: 0x00000000, ne: 0x143d7000143e9},
		dm{re: 0x16d1, si: 0x00000000, ne: 0x143e9000143f9},
		dm{re: 0x16d2, si: 0x00000000, ne: 0x143f90001440e},
		dm{re: 0x16d3, si: 0x00000000, ne: 0x1440e0001441a},
		dm{re: 0x16d4, si: 0x00000000, ne: 0x1441a0001442b},
		dm{re: 0x16d5, si: 0x00000000, ne: 0x1442b0001443c},
		dm{re: 0x16d6, si: 0x00000000, ne: 0x1443c00014447},
		dm{re: 0x16d7, si: 0x00000000, ne: 0x1444700014457},
		dm{re: 0x16d8, si: 0x00000000, ne: 0x144570001446e},
		dm{re: 0x16d9, si: 0x00000000, ne: 0x1446e0001447c},
		dm{re: 0x16da, si: 0x00000000, ne: 0x1447c0001448e},
		dm{re: 0x16db, si: 0x00000000, ne: 0x1448e0001449c},
		dm{re: 0x16dc, si: 0x00000000, ne: 0x1449c000144ac},
		dm{re: 0x16dd, si: 0x00000000, ne: 0x144ac000144be},
		dm{re: 0x16de, si: 0x00000000, ne: 0x144be000144d8},
		dm{re: 0x16df, si: 0x00000000, ne: 0x144d8000144ef},
		dm{re: 0x16e0, si: 0x00000000, ne: 0x144ef00014503},
		dm{re: 0x16e1, si: 0x00000000, ne: 0x1450300014512},
		dm{re: 0x16e2, si: 0x00000000, ne: 0x1451200014528},
		dm{re: 0x16e3, si: 0x00000000, ne: 0x1452800014539},
		dm{re: 0x16e4, si: 0x00000000, ne: 0x145390001454b},
		dm{re: 0x16e5, si: 0x00000000, ne: 0x1454b0001455c},
		dm{re: 0x16e6, si: 0x00000000, ne: 0x1455c00014569},
		dm{re: 0x16e7, si: 0x00000000, ne: 0x1456900014576},
		dm{re: 0x16e8, si: 0x00000000, ne: 0x1457600014587},
		dm{re: 0x16e9, si: 0x00000000, ne: 0x1458700014599},
		dm{re: 0x16ea, si: 0x00000000, ne: 0x14599000145a6},
		dm{re: 0x16eb, si: 0x00000000, ne: 0x145a6000145b8},
		dm{re: 0x16ec, si: 0x00000000, ne: 0x145b8000145c5},
		dm{re: 0x16ed, si: 0x00000000, ne: 0x145c5000145d4},
		dm{re: 0x16ee, si: 0x00000000, ne: 0x145d4000145e3},
		dm{re: 0x16ef, si: 0x00000000, ne: 0x145e3000145f0},
		dm{re: 0x16f0, si: 0x00000000, ne: 0x145f0000145fd},
		dm{re: 0x16f1, si: 0x00000000, ne: 0x145fd0001460a},
		dm{re: 0x16f2, si: 0x00000000, ne: 0x1460a00014618},
		dm{re: 0x16f3, si: 0x00000000, ne: 0x146180001462b},
		dm{re: 0x16f4, si: 0x00000000, ne: 0x1462b0001463a},
		dm{re: 0x16f5, si: 0x00000000, ne: 0x1463a00014648},
		dm{re: 0x16f6, si: 0x00000000, ne: 0x1464800014659},
		dm{re: 0x16f7, si: 0x00000000, ne: 0x146590001466d},
		dm{re: 0x16f8, si: 0x00000000, ne: 0x1466d00014684},
		dm{re: 0x16f9, si: 0x00000000, ne: 0x146840001468b},
		dm{re: 0x16fa, si: 0x00000000, ne: 0x1468b0001469c},
		dm{re: 0x16fb, si: 0x00000000, ne: 0x1469c000146a1},
		dm{re: -0x0001, si: 0x146a1000146ad, ne: 0x146a1000146ad},
		dm{re: 0x16fc, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x146ad000146b3, ne: 0x133320001333d},
		dm{re: 0x16fd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x16fe, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x146b3000146bb, ne: 0x1067e00010686},
		dm{re: 0x16ff, si: 0x00000000, ne: 0x146bb000146c4},
		dm{re: 0x1700, si: 0x00000000, ne: 0x146bb000146c4},
		dm{re: 0x1701, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1702, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1703, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1704, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1705, si: 0x00000000, ne: 0x146c4000146c9},
		dm{re: 0x1706, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1707, si: 0x00000000, ne: 0x146c9000146cf},
		dm{re: 0x1708, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1709, si: 0x00000000, ne: 0x146c9000146cf},
		dm{re: -0x0001, si: 0x146d4000146d7, ne: 0x146d4000146d7},
		dm{re: -0x0001, si: 0x146d7000146da, ne: 0x146d7000146da},
		dm{re: -0x0001, si: 0x146da000146df, ne: 0x146df000146e3},
		dm{re: 0x170b, si: 0x00000000, ne: 0x768500007688},
		dm{re: 0x170d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x170f, si: 0x00000000, ne: 0x146ef000146f9},
		dm{re: 0x1710, si: 0x00000000, ne: 0x146f900014702},
		dm{re: 0x1711, si: 0x00000000, ne: 0x1470200014708},
		dm{re: 0x1712, si: 0x00000000, ne: 0x1470800014714},
		dm{re: 0x1713, si: 0x00000000, ne: 0x1471400014722},
		dm{re: 0x1714, si: 0x00000000, ne: 0x147220001472e},
		dm{re: 0x1715, si: 0x00000000, ne: 0x1472e00014737},
		dm{re: 0x1716, si: 0x00000000, ne: 0x147370001473d},
		dm{re: 0x1717, si: 0x00000000, ne: 0x1473d00014747},
		dm{re: 0x1718, si: 0x00000000, ne: 0x147470001474d},
		dm{re: 0x1719, si: 0x00000000, ne: 0x40e6000040eb},
		dm{re: 0x171a, si: 0x00000000, ne: 0x1474d00014752},
		dm{re: 0x171b, si: 0x00000000, ne: 0x1475200014758},
		dm{re: 0x171c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x171d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x171e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1720, si: 0x00000000, ne: 0x1475d0001476d},
		dm{re: 0x1721, si: 0x00000000, ne: 0x1476d00014776},
		dm{re: 0x1722, si: 0x00000000, ne: 0x147760001477e},
		dm{re: 0x1723, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1724, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1478e0001479d, ne: 0x1479d000147a6},
		dm{re: 0x1726, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1728, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1729, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x172b, si: 0x00000000, ne: 0x147bb000147c1},
		dm{re: 0x172c, si: 0x00000000, ne: 0x2d7c00002d7e},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x147d4000147e1, ne: 0x147e1000147e8},
		dm{re: -0x0001, si: 0x147e8000147f3, ne: 0x147f3000147fe},
		dm{re: -0x0001, si: 0x147fe0001480d, ne: 0x1480d00014815},
		dm{re: 0x172f, si: 0x00000000, ne: 0x1481b00014829},
		dm{re: 0x1730, si: 0x00000000, ne: 0x1482900014835},
		dm{re: 0x1731, si: 0x00000000, ne: 0x1483500014847},
		dm{re: 0x1732, si: 0x00000000, ne: 0x1484700014853},
		dm{re: 0x1733, si: 0x00000000, ne: 0x148530001485f},
		dm{re: 0x1734, si: 0x00000000, ne: 0x1485f0001486b},
		dm{re: 0x1735, si: 0x00000000, ne: 0x1486b00014874},
		dm{re: 0x1736, si: 0x00000000, ne: 0x1487400014882},
		dm{re: 0x1737, si: 0x00000000, ne: 0x1488200014890},
		dm{re: 0x1738, si: 0x00000000, ne: 0x148900001489b},
		dm{re: 0x1739, si: 0x00000000, ne: 0x1489b000148a7},
		dm{re: 0x173a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x173b, si: 0x00000000, ne: 0x148a7000148ac},
		dm{re: 0x173c, si: 0x00000000, ne: 0x148ac000148b7},
		dm{re: 0x173d, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x148c4000148d0, ne: 0x148d0000148dd},
		dm{re: 0x1740, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1743, si: 0x00000000, ne: 0x6a3e00006a42},
		dm{re: 0x1744, si: 0x00000000, ne: 0x1a0500001a09},
		dm{re: 0x1745, si: 0x00000000, ne: 0x148e9000148ed},
		dm{re: 0x1746, si: 0x00000000, ne: 0x148e9000148ed},
		dm{re: 0x1747, si: 0x00000000, ne: 0x148ed000148f3},
		dm{re: 0x1748, si: 0x00000000, ne: 0x148f3000148fd},
		dm{re: 0x1749, si: 0x00000000, ne: 0x502000005023},
		dm{re: 0x174a, si: 0x00000000, ne: 0x148fd00014902},
		dm{re: 0x174b, si: 0x00000000, ne: 0xc78f0000c798},
		dm{re: 0x174c, si: 0x00000000, ne: 0x1490200014909},
		dm{re: 0x174d, si: 0x00000000, ne: 0x149090001490d},
		dm{re: 0x174e, si: 0x00000000, ne: 0x1490d00014914},
		dm{re: 0x174f, si: 0x00000000, ne: 0x149140001491b},
		dm{re: 0x1750, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1753, si: 0x00000000, ne: 0x149250001492e},
		dm{re: 0x1754, si: 0x00000000, ne: 0x1492e0001493c},
		dm{re: 0x1755, si: 0x00000000, ne: 0x1493c00014945},
		dm{re: 0x1756, si: 0x00000000, ne: 0x149450001494d},
		dm{re: 0x1757, si: 0x00000000, ne: 0x1494d00014955},
		dm{re: 0x1758, si: 0x00000000, ne: 0x1495500014960},
		dm{re: 0x1759, si: 0x00000000, ne: 0x149600001496e},
		dm{re: 0x175a, si: 0x00000000, ne: 0x1496e0001497c},
		dm{re: 0x175b, si: 0x00000000, ne: 0x1497c0001498a},
		dm{re: 0x175c, si: 0x00000000, ne: 0x1498a00014998},
		dm{re: 0x175d, si: 0x00000000, ne: 0x14998000149a2},
		dm{re: 0x175e, si: 0x00000000, ne: 0x149a2000149ae},
		dm{re: 0x175f, si: 0x00000000, ne: 0x149ae000149be},
		dm{re: 0x1760, si: 0x00000000, ne: 0x149be000149ce},
		dm{re: 0x1761, si: 0x00000000, ne: 0x149ce000149e1},
		dm{re: 0x1762, si: 0x00000000, ne: 0x149e1000149ee},
		dm{re: 0x1763, si: 0x00000000, ne: 0x149ee000149fb},
		dm{re: 0x1764, si: 0x00000000, ne: 0x149fb00014a09},
		dm{re: 0x1765, si: 0x00000000, ne: 0x14a0900014a12},
		dm{re: 0x1766, si: 0x00000000, ne: 0x14a1200014a23},
		dm{re: 0x1767, si: 0x00000000, ne: 0x14a2300014a2d},
		dm{re: 0x1768, si: 0x00000000, ne: 0x14a2d00014a37},
		dm{re: 0x1769, si: 0x00000000, ne: 0x14a3700014a43},
		dm{re: 0x176a, si: 0x00000000, ne: 0x14a4300014a4f},
		dm{re: 0x176b, si: 0x00000000, ne: 0x14a4f00014a62},
		dm{re: 0x176c, si: 0x00000000, ne: 0x14a6200014a70},
		dm{re: 0x176d, si: 0x00000000, ne: 0x14a7000014a80},
		dm{re: 0x176e, si: 0x00000000, ne: 0x14a8000014a8c},
		dm{re: 0x176f, si: 0x00000000, ne: 0x14a8c00014a9e},
		dm{re: 0x1770, si: 0x00000000, ne: 0x14a9e00014aac},
		dm{re: 0x1771, si: 0x00000000, ne: 0x14aac00014abd},
		dm{re: 0x1772, si: 0x00000000, ne: 0x14abd00014ac5},
		dm{re: 0x1773, si: 0x00000000, ne: 0x14ac500014acc},
		dm{re: 0x1774, si: 0x00000000, ne: 0x14acc00014adb},
		dm{re: 0x1775, si: 0x00000000, ne: 0x14adb00014ae3},
		dm{re: 0x1776, si: 0x00000000, ne: 0x14ae300014af3},
		dm{re: 0x1777, si: 0x00000000, ne: 0x14af300014afc},
		dm{re: 0x1778, si: 0x00000000, ne: 0x14afc00014b09},
		dm{re: 0x1779, si: 0x00000000, ne: 0x14b0900014b15},
		dm{re: 0x177a, si: 0x00000000, ne: 0x14b1500014b1c},
		dm{re: 0x177b, si: 0x00000000, ne: 0x14b1c00014b26},
		dm{re: 0x177c, si: 0x00000000, ne: 0x14b2600014b39},
		dm{re: 0x177d, si: 0x00000000, ne: 0x14b3900014b43},
		dm{re: 0x177e, si: 0x00000000, ne: 0x14b4300014b50},
		dm{re: 0x177f, si: 0x00000000, ne: 0x14b5000014b5d},
		dm{re: 0x1780, si: 0x00000000, ne: 0x14b5d00014b6c},
		dm{re: 0x1781, si: 0x00000000, ne: 0x14b6c00014b7b},
		dm{re: 0x1782, si: 0x00000000, ne: 0x14b7b00014b82},
		dm{re: 0x1783, si: 0x00000000, ne: 0x14b8200014b89},
		dm{re: 0x1784, si: 0x00000000, ne: 0x14b8900014b90},
		dm{re: 0x1785, si: 0x00000000, ne: 0x14b9000014b9d},
		dm{re: 0x1786, si: 0x00000000, ne: 0x14b9d00014ba9},
		dm{re: 0x1787, si: 0x00000000, ne: 0x14ba900014bb1},
		dm{re: 0x1788, si: 0x00000000, ne: 0x14bb100014bbe},
		dm{re: 0x1789, si: 0x00000000, ne: 0x14bbe00014bcb},
		dm{re: 0x178a, si: 0x00000000, ne: 0x14bcb00014bd3},
		dm{re: 0x178b, si: 0x00000000, ne: 0x14bd300014bdb},
		dm{re: 0x178c, si: 0x00000000, ne: 0x14bdb00014be8},
		dm{re: 0x178d, si: 0x00000000, ne: 0x14be800014bf6},
		dm{re: 0x178e, si: 0x00000000, ne: 0x14bf600014c03},
		dm{re: 0x178f, si: 0x00000000, ne: 0x14c0300014c10},
		dm{re: 0x1790, si: 0x00000000, ne: 0x14af300014afc},
		dm{re: 0x1791, si: 0x00000000, ne: 0x14c1000014c18},
		dm{re: 0x1792, si: 0x00000000, ne: 0x14c1800014c1f},
		dm{re: 0x1793, si: 0x00000000, ne: 0x14c1f00014c25},
		dm{re: 0x1794, si: 0x00000000, ne: 0x14c2500014c28},
		dm{re: 0x1795, si: 0x00000000, ne: 0xb9080000b90a},
		dm{re: 0x1796, si: 0x00000000, ne: 0xb90a0000b90c},
		dm{re: 0x1797, si: 0x00000000, ne: 0xb9010000b903},
		dm{re: 0x1798, si: 0x00000000, ne: 0xf9a20000f9a5},
		dm{re: 0x1799, si: 0x00000000, ne: 0x14c2800014c2f},
		dm{re: 0x179a, si: 0x00000000, ne: 0x14c2f00014c38},
		dm{re: -0x0001, si: 0x14c3800014c3f, ne: 0x14c3f00014c4c},
		dm{re: -0x0001, si: 0x14c4c00014c51, ne: 0x14c5100014c5c},
		dm{re: 0x179b, si: 0x00000000, ne: 0x14c5c00014c6c},
		dm{re: -0x0001, si: 0x14c6c00014c72, ne: 0x14c7200014c81},
		dm{re: 0x179c, si: 0x00000000, ne: 0x14c8100014c8f},
		dm{re: -0x0001, si: 0x14c8f00014c96, ne: 0x14c9600014ca5},
		dm{re: -0x0001, si: 0x14ca500014cac, ne: 0x14cac00014cb8},
		dm{re: 0x179d, si: 0x00000000, ne: 0x14cb800014ccb},
		dm{re: 0x179e, si: 0x00000000, ne: 0x14ccb00014cd7},
		dm{re: 0x179f, si: 0x00000000, ne: 0x14a9e00014aac},
		dm{re: 0x17a0, si: 0x00000000, ne: 0x14cd700014ce2},
		dm{re: 0x17a1, si: 0x00000000, ne: 0x14ce200014ceb},
		dm{re: 0x17a2, si: 0x00000000, ne: 0x14ceb00014cfa},
		dm{re: 0x17a3, si: 0x00000000, ne: 0x14cfa00014d04},
		dm{re: 0x17a4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17a5, si: 0x00000000, ne: 0x14d0400014d12},
		dm{re: 0x17a6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17a7, si: 0x00000000, ne: 0x14d1200014d1c},
		dm{re: 0x17a8, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17a9, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x14d2f00014d35},
		dm{re: -0x0001, si: 0x00000000, ne: 0x14d3e00014d49},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17af, si: 0x00000000, ne: 0x14d5400014d5a},
		dm{re: 0x17b0, si: 0x00000000, ne: 0x3a4000003a8},
		dm{re: -0x0001, si: 0x14d5a00014d5f, ne: 0x14d5f00014d65},
		dm{re: -0x0001, si: 0x14d6500014d71, ne: 0x14d7100014d76},
		dm{re: -0x0001, si: 0x14d7600014d82, ne: 0x149140001491b},
		dm{re: 0x17b1, si: 0x00000000, ne: 0x14d8200014d87},
		dm{re: -0x0001, si: 0x14d8700014d93, ne: 0x14d9300014da0},
		dm{re: -0x0001, si: 0x14da000014da8, ne: 0x14da800014db1},
		dm{re: 0x17b3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17b4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17b5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17b6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17b7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17b9, si: 0x00000000, ne: 0x14db800014dc8},
		dm{re: 0x17ba, si: 0x00000000, ne: 0x14dc800014dd4},
		dm{re: 0x17bb, si: 0x00000000, ne: 0x14dd400014de3},
		dm{re: 0x17bc, si: 0x00000000, ne: 0x14de300014dee},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x14e0200014e0e},
		dm{re: 0x17bf, si: 0x00000000, ne: 0x14e1500014e20},
		dm{re: -0x0001, si: 0x14e2000014e28, ne: 0x14e2000014e28},
		dm{re: -0x0001, si: 0x14e2800014e2f, ne: 0x14e2800014e2f},
		dm{re: -0x0001, si: 0x14e2f00014e36, ne: 0x14e2f00014e36},
		dm{re: -0x0001, si: 0x14e3600014e42, ne: 0x14e4200014e4e},
		dm{re: -0x0001, si: 0x14e4e00014e54, ne: 0x14e4e00014e54},
		dm{re: -0x0001, si: 0x14e5400014e59, ne: 0x14e5400014e59},
		dm{re: -0x0001, si: 0x14e5900014e5d, ne: 0x14e5900014e5d},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17c2, si: 0x00000000, ne: 0xab650000ab70},
		dm{re: 0x17c3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17c4, si: 0x00000000, ne: 0x14e6b00014e76},
		dm{re: 0x17c5, si: 0x00000000, ne: 0x14e7600014e84},
		dm{re: 0x17c7, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x14e9500014e9e},
		dm{re: 0x17ca, si: 0x00000000, ne: 0x14e9e00014eab},
		dm{re: 0x17cb, si: 0x00000000, ne: 0x14eab00014eb8},
		dm{re: 0x17cc, si: 0x00000000, ne: 0x14eb800014ecb},
		dm{re: -0x0001, si: 0x14ecb00014edb, ne: 0x14edb00014eec},
		dm{re: 0x17cd, si: 0x00000000, ne: 0x14eec00014ef8},
		dm{re: 0x17ce, si: 0x00000000, ne: 0x14ef800014f07},
		dm{re: 0x17cf, si: 0x00000000, ne: 0x14f0700014f12},
		dm{re: 0x17d0, si: 0x00000000, ne: 0x14f1200014f21},
		dm{re: -0x0001, si: 0x14f2100014f2a, ne: 0x14f2a00014f30},
		dm{re: 0x17d1, si: 0x00000000, ne: 0x14f3000014f3a},
		dm{re: -0x0001, si: 0x14f3a00014f48, ne: 0x14f4800014f56},
		dm{re: -0x0001, si: 0x14f5600014f62, ne: 0x14f6200014f6f},
		dm{re: 0x17d2, si: 0x00000000, ne: 0xbac90000bad1},
		dm{re: 0x17d3, si: 0x00000000, ne: 0x14f6f00014f7a},
		dm{re: 0x17d4, si: 0x00000000, ne: 0x14f7a00014f82},
		dm{re: -0x0001, si: 0x14f8200014f8b, ne: 0x14f8b00014f90},
		dm{re: -0x0001, si: 0x14f9000014f9b, ne: 0x14f9b00014fa2},
		dm{re: -0x0001, si: 0x14fa200014fa9, ne: 0x14fa900014fac},
		dm{re: 0x17d5, si: 0x00000000, ne: 0x14fac00014fb6},
		dm{re: 0x17d6, si: 0x00000000, ne: 0x14fb600014fbe},
		dm{re: 0x17d7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17d9, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17db, si: 0x00000000, ne: 0x14fcb00014fd1},
		dm{re: 0x17dc, si: 0x00000000, ne: 0x14fd100014fd9},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17df, si: 0x00000000, ne: 0x14ff300014ff7},
		dm{re: 0x17e0, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x150070001500f, ne: 0x1500f0001501f},
		dm{re: -0x0001, si: 0x1501f00015025, ne: 0x1502500015031},
		dm{re: -0x0001, si: 0x1503100015037, ne: 0x1503700015041},
		dm{re: -0x0001, si: 0x1504100015047, ne: 0x1504700015052},
		dm{re: -0x0001, si: 0x1505200015058, ne: 0x1505800015063},
		dm{re: -0x0001, si: 0x1506300015069, ne: 0x1506900015075},
		dm{re: -0x0001, si: 0x150750001507b, ne: 0x1507b0001508a},
		dm{re: -0x0001, si: 0x1508a00015090, ne: 0x150900001509b},
		dm{re: -0x0001, si: 0x1509b000150a1, ne: 0x150a1000150ab},
		dm{re: -0x0001, si: 0x150ab000150b9, ne: 0x150b9000150c7},
		dm{re: 0x17e3, si: 0x00000000, ne: 0x150c7000150d2},
		dm{re: 0x17e4, si: 0x00000000, ne: 0x150c7000150d2},
		dm{re: 0x17e5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17e6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17e8, si: 0x00000000, ne: 0x150db000150dd},
		dm{re: -0x0001, si: 0x150dd000150e2, ne: 0x150e2000150e4},
		dm{re: -0x0001, si: 0x150e4000150e9, ne: 0x150e9000150eb},
		dm{re: -0x0001, si: 0x150eb000150f0, ne: 0x150f0000150f3},
		dm{re: 0x17e9, si: 0x00000000, ne: 0x74ac000074ae},
		dm{re: 0x17ea, si: 0x00000000, ne: 0x39c0000039f},
		dm{re: 0x17eb, si: 0x00000000, ne: 0x9c4e00009c53},
		dm{re: 0x17ec, si: 0x00000000, ne: 0xb9010000b903},
		dm{re: 0x17ed, si: 0x00000000, ne: 0x150f3000150fd},
		dm{re: 0x17ee, si: 0x00000000, ne: 0x150fd00015102},
		dm{re: 0x17ef, si: 0x00000000, ne: 0x1510200015107},
		dm{re: 0x17f0, si: 0x00000000, ne: 0x1510700015110},
		dm{re: 0x17f1, si: 0x00000000, ne: 0x151100001511d},
		dm{re: -0x0001, si: 0x1511d0001512d, ne: 0x1512d00015133},
		dm{re: 0x17f3, si: 0x00000000, ne: 0x1513900015140},
		dm{re: -0x0001, si: 0x1514000015148, ne: 0x1514000015148},
		dm{re: 0x17f5, si: 0x00000000, ne: 0x151550001515e},
		dm{re: 0x17f6, si: 0x00000000, ne: 0x1515e00015169},
		dm{re: 0x17f7, si: 0x00000000, ne: 0x1516900015179},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17fa, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17fb, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x17fc, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1519b000151a0, ne: 0x151a0000151b0},
		dm{re: -0x0001, si: 0x151b0000151b5, ne: 0x151b5000151c6},
		dm{re: -0x0001, si: 0x151c6000151cb, ne: 0x151cb000151d9},
		dm{re: -0x0001, si: 0x151d9000151e3, ne: 0x151e3000151e9},
		dm{re: 0x17ff, si: 0x00000000, ne: 0x151e9000151f4},
		dm{re: 0x1800, si: 0x00000000, ne: 0x151f4000151fe},
		dm{re: 0x1801, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x152030001520f, ne: 0x1520f00015215},
		dm{re: 0x1803, si: 0x00000000, ne: 0x152150001521b},
		dm{re: 0x1804, si: 0x00000000, ne: 0x1521b00015221},
		dm{re: 0x1805, si: 0x00000000, ne: 0x1522100015224},
		dm{re: 0x1807, si: 0x00000000, ne: 0x1522400015233},
		dm{re: 0x1808, si: 0x00000000, ne: 0x1523300015246},
		dm{re: 0x1809, si: 0x00000000, ne: 0x152460001524f},
		dm{re: 0x180a, si: 0x00000000, ne: 0x1524f00015259},
		dm{re: 0x180b, si: 0x00000000, ne: 0x1525900015265},
		dm{re: 0x180c, si: 0x00000000, ne: 0x1526500015271},
		dm{re: 0x180d, si: 0x00000000, ne: 0x152710001527b},
		dm{re: 0x180e, si: 0x00000000, ne: 0x1527b00015286},
		dm{re: 0x180f, si: 0x00000000, ne: 0x1528600015290},
		dm{re: 0x1810, si: 0x00000000, ne: 0x152900001529b},
		dm{re: 0x1811, si: 0x00000000, ne: 0x1529b000152a8},
		dm{re: 0x1812, si: 0x00000000, ne: 0x152a8000152b2},
		dm{re: 0x1813, si: 0x00000000, ne: 0x152b2000152bc},
		dm{re: 0x1814, si: 0x00000000, ne: 0x152bc000152cb},
		dm{re: 0x1815, si: 0x00000000, ne: 0x152cb000152d5},
		dm{re: 0x1816, si: 0x00000000, ne: 0x152d5000152da},
		dm{re: 0x1817, si: 0x00000000, ne: 0x152da000152e5},
		dm{re: 0x1818, si: 0x00000000, ne: 0x152e5000152f6},
		dm{re: 0x1819, si: 0x00000000, ne: 0x152f6000152f9},
		dm{re: 0x181a, si: 0x00000000, ne: 0x152f900015300},
		dm{re: 0x181b, si: 0x00000000, ne: 0x1530000015305},
		dm{re: 0x181c, si: 0x00000000, ne: 0x153050001530a},
		dm{re: 0x181d, si: 0x00000000, ne: 0x1530a0001530f},
		dm{re: 0x181e, si: 0x00000000, ne: 0x1530f00015312},
		dm{re: 0x181f, si: 0x00000000, ne: 0x1531200015317},
		dm{re: 0x1820, si: 0x00000000, ne: 0x153170001531b},
		dm{re: 0x1821, si: 0x00000000, ne: 0x1531b0001531f},
		dm{re: 0x1822, si: 0x00000000, ne: 0x1531f00015324},
		dm{re: 0x1823, si: 0x00000000, ne: 0x1532400015329},
		dm{re: 0x1824, si: 0x00000000, ne: 0x1532900015332},
		dm{re: 0x1825, si: 0x00000000, ne: 0x1533200015336},
		dm{re: 0x1826, si: 0x00000000, ne: 0x153360001533b},
		dm{re: 0x1827, si: 0x00000000, ne: 0x1533b00015340},
		dm{re: 0x1828, si: 0x00000000, ne: 0x1534000015344},
		dm{re: 0x1829, si: 0x00000000, ne: 0x153440001534f},
		dm{re: 0x182a, si: 0x00000000, ne: 0x1534f00015358},
		dm{re: 0x182b, si: 0x00000000, ne: 0x1535800015364},
		dm{re: -0x0001, si: 0x153640001536a, ne: 0x1536a00015373},
		dm{re: -0x0001, si: 0x1537300015379, ne: 0x1537900015382},
		dm{re: -0x0001, si: 0x1538200015387, ne: 0x1538700015395},
		dm{re: -0x0001, si: 0x153950001539b, ne: 0x1539b000153a4},
		dm{re: 0x182c, si: 0x00000000, ne: 0x153a4000153ad},
		dm{re: 0x182d, si: 0x00000000, ne: 0x152a8000152b2},
		dm{re: 0x182e, si: 0x00000000, ne: 0x153ad000153ba},
		dm{re: 0x182f, si: 0x00000000, ne: 0x153ba000153c6},
		dm{re: 0x1830, si: 0x00000000, ne: 0x153c6000153d3},
		dm{re: 0x1831, si: 0x00000000, ne: 0x153d3000153e5},
		dm{re: 0x1832, si: 0x00000000, ne: 0x153e5000153f3},
		dm{re: 0x1833, si: 0x00000000, ne: 0x153f300015401},
		dm{re: 0x1834, si: 0x00000000, ne: 0x1540100015409},
		dm{re: 0x1835, si: 0x00000000, ne: 0x1540900015426},
		dm{re: 0x1836, si: 0x00000000, ne: 0x1542600015431},
		dm{re: 0x1837, si: 0x00000000, ne: 0x154310001543d},
		dm{re: 0x1838, si: 0x00000000, ne: 0x1543d00015445},
		dm{re: 0x1839, si: 0x00000000, ne: 0x154450001544d},
		dm{re: 0x183a, si: 0x00000000, ne: 0x1544d0001545a},
		dm{re: 0x183b, si: 0x00000000, ne: 0x1545a00015462},
		dm{re: 0x183c, si: 0x00000000, ne: 0x154620001546d},
		dm{re: 0x183d, si: 0x00000000, ne: 0x1546d00015479},
		dm{re: 0x183e, si: 0x00000000, ne: 0x1547900015481},
		dm{re: 0x183f, si: 0x00000000, ne: 0x154810001548e},
		dm{re: 0x1840, si: 0x00000000, ne: 0x1548e00015497},
		dm{re: 0x1841, si: 0x00000000, ne: 0x154970001549f},
		dm{re: 0x1842, si: 0x00000000, ne: 0x1549f000154aa},
		dm{re: 0x1843, si: 0x00000000, ne: 0x154aa000154b8},
		dm{re: 0x1844, si: 0x00000000, ne: 0x154b8000154c5},
		dm{re: 0x1845, si: 0x00000000, ne: 0x154c5000154cf},
		dm{re: 0x1846, si: 0x00000000, ne: 0x154cf000154d8},
		dm{re: 0x1847, si: 0x00000000, ne: 0x154d8000154e4},
		dm{re: 0x1848, si: 0x00000000, ne: 0x154e4000154ec},
		dm{re: 0x1849, si: 0x00000000, ne: 0x154ec000154fc},
		dm{re: 0x184a, si: 0x00000000, ne: 0x154fc00015507},
		dm{re: 0x184b, si: 0x00000000, ne: 0x1550700015512},
		dm{re: 0x184c, si: 0x00000000, ne: 0x155120001551a},
		dm{re: 0x184d, si: 0x00000000, ne: 0x1551a00015523},
		dm{re: 0x184e, si: 0x00000000, ne: 0x155230001552c},
		dm{re: 0x184f, si: 0x00000000, ne: 0x1552c00015534},
		dm{re: 0x1850, si: 0x00000000, ne: 0x155340001553d},
		dm{re: 0x1851, si: 0x00000000, ne: 0x1553d00015545},
		dm{re: 0x1852, si: 0x00000000, ne: 0x1554500015552},
		dm{re: 0x1853, si: 0x00000000, ne: 0x155520001555b},
		dm{re: 0x1854, si: 0x00000000, ne: 0x1555b00015565},
		dm{re: 0x1855, si: 0x00000000, ne: 0x155650001556d},
		dm{re: 0x1856, si: 0x00000000, ne: 0x1556d0001557a},
		dm{re: 0x1857, si: 0x00000000, ne: 0x1557a00015582},
		dm{re: 0x1858, si: 0x00000000, ne: 0x155820001558a},
		dm{re: 0x1859, si: 0x00000000, ne: 0x1558a00015593},
		dm{re: 0x185a, si: 0x00000000, ne: 0x155930001559c},
		dm{re: 0x185b, si: 0x00000000, ne: 0x1559c000155a5},
		dm{re: 0x185c, si: 0x00000000, ne: 0x155a5000155af},
		dm{re: 0x185d, si: 0x00000000, ne: 0x155af000155b7},
		dm{re: 0x185e, si: 0x00000000, ne: 0x155b7000155c5},
		dm{re: 0x185f, si: 0x00000000, ne: 0x155af000155b7},
		dm{re: 0x1860, si: 0x00000000, ne: 0x155c5000155ce},
		dm{re: 0x1861, si: 0x00000000, ne: 0x155ce000155dc},
		dm{re: 0x1862, si: 0x00000000, ne: 0x155dc000155e5},
		dm{re: 0x1863, si: 0x00000000, ne: 0x155e5000155f3},
		dm{re: 0x1864, si: 0x00000000, ne: 0x155f300015602},
		dm{re: 0x1865, si: 0x00000000, ne: 0x156020001560b},
		dm{re: 0x1866, si: 0x00000000, ne: 0x1560b00015619},
		dm{re: -0x0001, si: 0x156190001561e, ne: 0x1561e00015627},
		dm{re: 0x1867, si: 0x00000000, ne: 0x1562700015635},
		dm{re: 0x1868, si: 0x00000000, ne: 0x156350001563e},
		dm{re: 0x1869, si: 0x00000000, ne: 0x1563e0001564c},
		dm{re: 0x186a, si: 0x00000000, ne: 0x1564c00015655},
		dm{re: 0x186b, si: 0x00000000, ne: 0x1565500015663},
		dm{re: 0x186c, si: 0x00000000, ne: 0x1566300015671},
		dm{re: 0x186d, si: 0x00000000, ne: 0x1567100015684},
		dm{re: 0x186e, si: 0x00000000, ne: 0x156840001568d},
		dm{re: 0x186f, si: 0x00000000, ne: 0x1568d0001569b},
		dm{re: 0x1870, si: 0x00000000, ne: 0x1569b000156a9},
		dm{re: 0x1871, si: 0x00000000, ne: 0x156a9000156b2},
		dm{re: 0x1872, si: 0x00000000, ne: 0x156b2000156bb},
		dm{re: 0x1873, si: 0x00000000, ne: 0x156bb000156c9},
		dm{re: 0x1874, si: 0x00000000, ne: 0x156c9000156d8},
		dm{re: 0x1875, si: 0x00000000, ne: 0x156d8000156ec},
		dm{re: 0x1876, si: 0x00000000, ne: 0x156ec000156f5},
		dm{re: 0x1877, si: 0x00000000, ne: 0x156f500015704},
		dm{re: 0x1878, si: 0x00000000, ne: 0x1570400015718},
		dm{re: 0x1879, si: 0x00000000, ne: 0x1571800015729},
		dm{re: 0x187a, si: 0x00000000, ne: 0x1572900015732},
		dm{re: 0x187b, si: 0x00000000, ne: 0x1573200015743},
		dm{re: -0x0001, si: 0x1574300015758, ne: 0x157580001576d},
		dm{re: -0x0001, si: 0x1576d00015773, ne: 0x1577300015783},
		dm{re: 0x187c, si: 0x00000000, ne: 0x157830001578c},
		dm{re: -0x0001, si: 0x1578c00015791, ne: 0x157910001579b},
		dm{re: 0x187d, si: 0x00000000, ne: 0x1579b000157a4},
		dm{re: 0x187e, si: 0x00000000, ne: 0x157a4000157b2},
		dm{re: 0x187f, si: 0x00000000, ne: 0x157b2000157bc},
		dm{re: 0x1880, si: 0x00000000, ne: 0x157bc000157c6},
		dm{re: 0x1881, si: 0x00000000, ne: 0x157c6000157cf},
		dm{re: -0x0001, si: 0x157cf000157d4, ne: 0x157d4000157de},
		dm{re: 0x1882, si: 0x00000000, ne: 0x157c6000157cf},
		dm{re: 0x1883, si: 0x00000000, ne: 0x157de000157ef},
		dm{re: 0x1884, si: 0x00000000, ne: 0x157ef000157f8},
		dm{re: 0x1885, si: 0x00000000, ne: 0x157f800015806},
		dm{re: 0x1886, si: 0x00000000, ne: 0x1580600015817},
		dm{re: 0x1887, si: 0x00000000, ne: 0x158170001582d},
		dm{re: 0x1888, si: 0x00000000, ne: 0x1582d00015836},
		dm{re: 0x1889, si: 0x00000000, ne: 0x1583600015844},
		dm{re: 0x188a, si: 0x00000000, ne: 0x1584400015853},
		dm{re: 0x188b, si: 0x00000000, ne: 0x1585300015867},
		dm{re: 0x188c, si: 0x00000000, ne: 0x1586700015870},
		dm{re: 0x188d, si: 0x00000000, ne: 0x158700001587a},
		dm{re: 0x188e, si: 0x00000000, ne: 0x1587a0001588c},
		dm{re: 0x188f, si: 0x00000000, ne: 0x1588c00015895},
		dm{re: 0x1890, si: 0x00000000, ne: 0x158950001589f},
		dm{re: 0x1891, si: 0x00000000, ne: 0x1589f000158ae},
		dm{re: 0x1892, si: 0x00000000, ne: 0x158ae000158c2},
		dm{re: 0x1893, si: 0x00000000, ne: 0x158c2000158d2},
		dm{re: 0x1894, si: 0x00000000, ne: 0x158d2000158dc},
		dm{re: 0x1895, si: 0x00000000, ne: 0x158dc000158eb},
		dm{re: 0x1896, si: 0x00000000, ne: 0x158eb000158ff},
		dm{re: -0x0001, si: 0x158ff00015904, ne: 0x158ff00015904},
		dm{re: 0x1897, si: 0x00000000, ne: 0x1590400015914},
		dm{re: 0x1898, si: 0x00000000, ne: 0x159140001591e},
		dm{re: 0x1899, si: 0x00000000, ne: 0x1591e0001592f},
		dm{re: 0x189a, si: 0x00000000, ne: 0x1592f00015939},
		dm{re: -0x0001, si: 0x159390001593e, ne: 0x1593e0001594d},
		dm{re: -0x0001, si: 0x1594d00015953, ne: 0x1595300015965},
		dm{re: 0x189b, si: 0x00000000, ne: 0x159650001597c},
		dm{re: 0x189c, si: 0x00000000, ne: 0x1597c00015986},
		dm{re: 0x189d, si: 0x00000000, ne: 0x159860001598f},
		dm{re: 0x189e, si: 0x00000000, ne: 0x1598f0001599d},
		dm{re: 0x189f, si: 0x00000000, ne: 0x1599d000159a5},
		dm{re: 0x18a0, si: 0x00000000, ne: 0x159a5000159ae},
		dm{re: 0x18a1, si: 0x00000000, ne: 0x159ae000159b7},
		dm{re: 0x18a2, si: 0x00000000, ne: 0x159b7000159bf},
		dm{re: 0x18a3, si: 0x00000000, ne: 0x159bf000159cc},
		dm{re: 0x18a4, si: 0x00000000, ne: 0x159cc000159dc},
		dm{re: 0x18a5, si: 0x00000000, ne: 0x159dc000159f0},
		dm{re: 0x18a6, si: 0x00000000, ne: 0x159f000015a09},
		dm{re: 0x18a7, si: 0x00000000, ne: 0x15a0900015a18},
		dm{re: 0x18a8, si: 0x00000000, ne: 0x15a1800015a28},
		dm{re: 0x18a9, si: 0x00000000, ne: 0x15a2800015a38},
		dm{re: 0x18aa, si: 0x00000000, ne: 0x15a3800015a50},
		dm{re: 0x18ab, si: 0x00000000, ne: 0x15a5000015a5f},
		dm{re: -0x0001, si: 0x15a5f00015a6b, ne: 0x15a5f00015a6b},
		dm{re: 0x18ac, si: 0x00000000, ne: 0x15a6b00015a74},
		dm{re: 0x18ad, si: 0x00000000, ne: 0x15a7400015a84},
		dm{re: 0x18ae, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18af, si: 0x00000000, ne: 0x15a8400015a8e},
		dm{re: -0x0001, si: 0x15a8e00015a9b, ne: 0x15a9b00015aa7},
		dm{re: -0x0001, si: 0x15aa700015ab5, ne: 0x15ab500015ac2},
		dm{re: 0x18b0, si: 0x00000000, ne: 0x15ac200015ad0},
		dm{re: -0x0001, si: 0x15ad000015ad7, ne: 0x15ad700015aec},
		dm{re: 0x18b1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18b2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18b3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18b4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18b5, si: 0x00000000, ne: 0xa1480000a14b},
		dm{re: 0x18b6, si: 0x00000000, ne: 0x15aec00015af6},
		dm{re: 0x18b7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18b8, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18b9, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18ba, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18bb, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18bc, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18bd, si: 0x00000000, ne: 0x15af600015aff},
		dm{re: 0x18be, si: 0x00000000, ne: 0x15af600015aff},
		dm{re: 0x18bf, si: 0x00000000, ne: 0x15af600015aff},
		dm{re: 0x18c0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18c1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18c2, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18c5, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x15b0c00015b11, ne: 0x15b0c00015b11},
		dm{re: -0x0001, si: 0x15b1100015b17, ne: 0x15b1100015b17},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18c9, si: 0x00000000, ne: 0x15b2a00015b36},
		dm{re: 0x18ca, si: 0x00000000, ne: 0x15b3600015b42},
		dm{re: 0x18cb, si: 0x00000000, ne: 0x15b4200015b4d},
		dm{re: 0x18cc, si: 0x00000000, ne: 0x15b4d00015b5a},
		dm{re: 0x18ce, si: 0x00000000, ne: 0x15b5a00015b62},
		dm{re: 0x18cf, si: 0x00000000, ne: 0x15b6200015b6c},
		dm{re: -0x0001, si: 0x15b6c00015b78, ne: 0x15b7800015b84},
		dm{re: -0x0001, si: 0x15b8400015b91, ne: 0x15b9100015b9f},
		dm{re: -0x0001, si: 0x15b9f00015bb0, ne: 0x15bb000015bc2},
		dm{re: -0x0001, si: 0x15bc200015bd3, ne: 0x15bd300015be6},
		dm{re: 0x18d0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18d1, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x15be600015beb},
		dm{re: -0x0001, si: 0x15bef00015bf4, ne: 0x51870000518d},
		dm{re: 0x18d4, si: 0x00000000, ne: 0x73a6000073a9},
		dm{re: -0x0001, si: 0x15bfd00015c06, ne: 0x15c0600015c0f},
		dm{re: -0x0001, si: 0x15c0f00015c17, ne: 0x15c1700015c1f},
		dm{re: -0x0001, si: 0x15c1f00015c29, ne: 0x15c2900015c33},
		dm{re: -0x0001, si: 0x15c3300015c3d, ne: 0x15c3d00015c47},
		dm{re: -0x0001, si: 0x15c4700015c52, ne: 0x15c5200015c5d},
		dm{re: -0x0001, si: 0x15c5d00015c6d, ne: 0x15c6d00015c73},
		dm{re: 0x18d7, si: 0x00000000, ne: 0x15c7d00015c84},
		dm{re: 0x18d8, si: 0x00000000, ne: 0x15c8400015c89},
		dm{re: 0x18d9, si: 0x00000000, ne: 0x15c8900015c90},
		dm{re: 0x18da, si: 0x00000000, ne: 0x15c9000015c95},
		dm{re: -0x0001, si: 0x00000000, ne: 0x15c9c00015ca9},
		dm{re: 0x18dd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18de, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18e0, si: 0x00000000, ne: 0x15ccb00015cd5},
		dm{re: -0x0001, si: 0x15cd500015ce3, ne: 0x15ce300015cea},
		dm{re: 0x18e2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18e4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18e5, si: 0x00000000, ne: 0x15cf900015d01},
		dm{re: 0x18e6, si: 0x00000000, ne: 0x15d0100015d11},
		dm{re: 0x18e7, si: 0x00000000, ne: 0x15d1100015d20},
		dm{re: -0x0001, si: 0x15d2000015d29, ne: 0x15d2900015d32},
		dm{re: -0x0001, si: 0x15d3200015d3b, ne: 0x15d3b00015d44},
		dm{re: -0x0001, si: 0x15d4400015d4c, ne: 0x15d4c00015d54},
		dm{re: -0x0001, si: 0x15d5400015d59, ne: 0x15d5900015d60},
		dm{re: -0x0001, si: 0x15d6000015d68, ne: 0x15d6000015d68},
		dm{re: -0x0001, si: 0x15d6800015d71, ne: 0x15d7100015d7a},
		dm{re: -0x0001, si: 0x15d7a00015d82, ne: 0x15d8200015d8a},
		dm{re: -0x0001, si: 0x15d8a00015d91, ne: 0x15d8a00015d91},
		dm{re: -0x0001, si: 0x15d9100015d9a, ne: 0x15d9a00015da3},
		dm{re: -0x0001, si: 0x15da300015dab, ne: 0x15dab00015db3},
		dm{re: -0x0001, si: 0x15db300015db9, ne: 0x15db900015dbf},
		dm{re: 0x18e8, si: 0x00000000, ne: 0x15dbf00015dc8},
		dm{re: 0x18e9, si: 0x00000000, ne: 0x15dc800015dd0},
		dm{re: 0x18ea, si: 0x00000000, ne: 0x15dd000015dd7},
		dm{re: -0x0001, si: 0x15dd700015de0, ne: 0x15de000015de9},
		dm{re: -0x0001, si: 0xc6500000c654, ne: 0xc6500000c654},
		dm{re: -0x0001, si: 0x15de900015def, ne: 0x15def00015df5},
		dm{re: 0x18eb, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18ec, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18ed, si: 0x00000000, ne: 0x15df500015e01},
		dm{re: 0x18ef, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18f0, si: 0x00000000, ne: 0xbfd40000bfdc},
		dm{re: 0x18f2, si: 0x00000000, ne: 0x15e0b00015e12},
		dm{re: 0x18f3, si: 0x00000000, ne: 0x15e1200015e19},
		dm{re: 0x18f4, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18f7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18f8, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18fa, si: 0x00000000, ne: 0x15e2d00015e35},
		dm{re: 0x18fb, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18fd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x18fe, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x15e4900015e51, ne: 0x15e5100015e5a},
		dm{re: 0x1901, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1905, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1906, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1908, si: 0x00000000, ne: 0x15e7700015e81},
		dm{re: -0x0001, si: 0x15e8100015e88, ne: 0x15e8800015e90},
		dm{re: 0x190a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x190b, si: 0x00000000, ne: 0x15e9500015e9c},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x15ead00015eb2, ne: 0x15ead00015eb2},
		dm{re: -0x0001, si: 0x15eb200015ec2, ne: 0x15ec200015ec9},
		dm{re: 0x190e, si: 0x00000000, ne: 0x15ec900015ed0},
		dm{re: 0x190f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1910, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x15edd00015ee4, ne: 0x15ee400015eeb},
		dm{re: 0x1913, si: 0x00000000, ne: 0x15eeb00015ef7},
		dm{re: 0x1914, si: 0x00000000, ne: 0x15ef700015efe},
		dm{re: 0x1915, si: 0x00000000, ne: 0x15efe00015f06},
		dm{re: -0x0001, si: 0x15f0600015f12, ne: 0x15f1200015f1e},
		dm{re: 0x1916, si: 0x00000000, ne: 0x15f1e00015f29},
		dm{re: -0x0001, si: 0x15f2900015f30, ne: 0x50f2000050fc},
		dm{re: 0x1917, si: 0x00000000, ne: 0x15f3000015f37},
		dm{re: 0x1918, si: 0x00000000, ne: 0x15f3700015f43},
		dm{re: 0x1919, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x191a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x191c, si: 0x00000000, ne: 0x377200003778},
		dm{re: 0x191e, si: 0x00000000, ne: 0x15f5300015f5b},
		dm{re: 0x1920, si: 0x00000000, ne: 0x15f5e00015f66},
		dm{re: 0x1921, si: 0x00000000, ne: 0x15f6600015f6b},
		dm{re: 0x1922, si: 0x00000000, ne: 0x15f6b00015f6e},
		dm{re: 0x1923, si: 0x00000000, ne: 0x15f6e00015f71},
		dm{re: 0x1924, si: 0x00000000, ne: 0x15f7100015f89},
		dm{re: 0x1925, si: 0x00000000, ne: 0x15f8900015f91},
		dm{re: 0x1926, si: 0x00000000, ne: 0x15f9100015f94},
		dm{re: -0x0001, si: 0x15f9400015f99, ne: 0x15f9900015f9c},
		dm{re: 0x1927, si: 0x00000000, ne: 0x15f9c00015f9e},
		dm{re: 0x1928, si: 0x00000000, ne: 0x11790000117b},
		dm{re: 0x1929, si: 0x00000000, ne: 0x15f9e00015fa1},
		dm{re: 0x192a, si: 0x00000000, ne: 0x4e3400004e36},
		dm{re: 0x192b, si: 0x00000000, ne: 0x15fa100015fa3},
		dm{re: 0x192c, si: 0x00000000, ne: 0x4d5000004d52},
		dm{re: 0x192d, si: 0x00000000, ne: 0x15fa300015fa5},
		dm{re: 0x192e, si: 0x00000000, ne: 0x11fd900011fe0},
		dm{re: 0x192f, si: 0x00000000, ne: 0x15fa500015fa8},
		dm{re: 0x1930, si: 0x00000000, ne: 0x15fa800015fac},
		dm{re: 0x1931, si: 0x00000000, ne: 0x15fac00015fb4},
		dm{re: 0x1932, si: 0x00000000, ne: 0xd3a80000d3aa},
		dm{re: 0x1933, si: 0x00000000, ne: 0x15fb400015fb9},
		dm{re: 0x1934, si: 0x00000000, ne: 0x15fb900015fbd},
		dm{re: 0x1935, si: 0x00000000, ne: 0x77440000774b},
		dm{re: 0x1936, si: 0x00000000, ne: 0x15fbd00015fc2},
		dm{re: 0x1937, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1938, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1939, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x193a, si: 0x00000000, ne: 0x15fc200015fc4},
		dm{re: 0x193b, si: 0x00000000, ne: 0x990f00009911},
		dm{re: 0x193c, si: 0x00000000, ne: 0x15fc400015fc7},
		dm{re: 0x193d, si: 0x00000000, ne: 0x15fc700015fcc},
		dm{re: 0x193e, si: 0x00000000, ne: 0x15fcc00015fd1},
		dm{re: 0x193f, si: 0x00000000, ne: 0x15fd100015fd7},
		dm{re: 0x1940, si: 0x00000000, ne: 0x15fd700015fda},
		dm{re: 0x1941, si: 0x00000000, ne: 0x15fda00015fdf},
		dm{re: 0x1942, si: 0x00000000, ne: 0x15fdf00015fe4},
		dm{re: 0x1943, si: 0x00000000, ne: 0x15fe400015fed},
		dm{re: 0x1944, si: 0x00000000, ne: 0x15fed00015ff3},
		dm{re: -0x0001, si: 0x15ff300015ff8, ne: 0x15fc700015fcc},
		dm{re: 0x1945, si: 0x00000000, ne: 0x15ff800016001},
		dm{re: -0x0001, si: 0x1600100016006, ne: 0x1600600016012},
		dm{re: 0x1946, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1947, si: 0x00000000, ne: 0x160120001601e},
		dm{re: 0x1948, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1602f00016037, ne: 0x160370001603d},
		dm{re: 0x194b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x194d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x194e, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1605d0001606b},
		dm{re: 0x1953, si: 0x00000000, ne: 0x1606e00016079},
		dm{re: 0x1954, si: 0x00000000, ne: 0x1607900016083},
		dm{re: 0x1955, si: 0x00000000, ne: 0x1607900016083},
		dm{re: 0x1957, si: 0x00000000, ne: 0x1608600016090},
		dm{re: 0x1958, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1609c000160a8},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x195d, si: 0x00000000, ne: 0x160b8000160bd},
		dm{re: -0x0001, si: 0x160bd000160c4, ne: 0x160c4000160cb},
		dm{re: -0x0001, si: 0x160cb000160d3, ne: 0x160cb000160d3},
		dm{re: -0x0001, si: 0x160da000160df, ne: 0x160da000160df},
		dm{re: -0x0001, si: 0x160df000160ea, ne: 0x160ea000160ee},
		dm{re: -0x0001, si: 0x160ee000160fa, ne: 0x160fa000160fe},
		dm{re: -0x0001, si: 0x160fe00016108, ne: 0x161080001610b},
		dm{re: 0x195f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1960, si: 0x00000000, ne: 0x1610b0001610e},
		dm{re: -0x0001, si: 0x1610e00016113, ne: 0x1611300016118},
		dm{re: -0x0001, si: 0x1611800016124, ne: 0x1612400016130},
		dm{re: 0x1961, si: 0x00000000, ne: 0x1613000016137},
		dm{re: 0x1962, si: 0x00000000, ne: 0x161370001613c},
		dm{re: -0x0001, si: 0x1613c00016142, ne: 0x1614200016149},
		dm{re: 0x1963, si: 0x00000000, ne: 0x1614900016153},
		dm{re: -0x0001, si: 0x1615300016168, ne: 0x1616800016174},
		dm{re: 0x1964, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1966, si: 0x00000000, ne: 0x1617c00016187},
		dm{re: 0x1968, si: 0x00000000, ne: 0x161960001619e},
		dm{re: 0x1969, si: 0x00000000, ne: 0x1619e000161a1},
		dm{re: 0x196a, si: 0x00000000, ne: 0x161a1000161a4},
		dm{re: 0x196b, si: 0x00000000, ne: 0x161a4000161a8},
		dm{re: 0x196c, si: 0x00000000, ne: 0x161a8000161ad},
		dm{re: 0x196d, si: 0x00000000, ne: 0x161ad000161b2},
		dm{re: 0x196e, si: 0x00000000, ne: 0x161b2000161b5},
		dm{re: 0x196f, si: 0x00000000, ne: 0xba810000ba88},
		dm{re: -0x0001, si: 0x161b5000161bb, ne: 0x161bb000161c1},
		dm{re: -0x0001, si: 0x161c1000161c8, ne: 0x161c1000161c8},
		dm{re: -0x0001, si: 0x161c8000161ce, ne: 0x161ce000161d4},
		dm{re: -0x0001, si: 0x161d4000161da, ne: 0x161da000161dd},
		dm{re: 0x1970, si: 0x00000000, ne: 0x161dd000161e0},
		dm{re: -0x0001, si: 0x161e0000161e5, ne: 0x161e5000161eb},
		dm{re: 0x1971, si: 0x00000000, ne: 0x161eb000161f2},
		dm{re: 0x1972, si: 0x00000000, ne: 0x161f2000161fa},
		dm{re: 0x1973, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1974, si: 0x00000000, ne: 0x161fa0001620a},
		dm{re: 0x1975, si: 0x00000000, ne: 0x1620a00016213},
		dm{re: 0x1976, si: 0x00000000, ne: 0x162130001621e},
		dm{re: 0x1977, si: 0x00000000, ne: 0x1621e00016228},
		dm{re: 0x1978, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1623400016241, ne: 0x162410001624f},
		dm{re: -0x0001, si: 0x1624f00016257, ne: 0x1625700016260},
		dm{re: 0x197a, si: 0x00000000, ne: 0x1626000016269},
		dm{re: 0x197b, si: 0x00000000, ne: 0x1626900016272},
		dm{re: 0x197c, si: 0x00000000, ne: 0x162720001627b},
		dm{re: -0x0001, si: 0x1627b00016283, ne: 0x1628300016285},
		dm{re: 0x197d, si: 0x00000000, ne: 0x162850001628b},
		dm{re: 0x197e, si: 0x00000000, ne: 0x1628b00016292},
		dm{re: 0x197f, si: 0x00000000, ne: 0x162920001629d},
		dm{re: 0x1980, si: 0x00000000, ne: 0x1629d000162aa},
		dm{re: 0x1981, si: 0x00000000, ne: 0x162aa000162b6},
		dm{re: 0x1982, si: 0x00000000, ne: 0x162b6000162bf},
		dm{re: 0x1983, si: 0x00000000, ne: 0x162bf000162c7},
		dm{re: 0x1984, si: 0x00000000, ne: 0x162c7000162d5},
		dm{re: 0x1985, si: 0x00000000, ne: 0x162d5000162df},
		dm{re: 0x1986, si: 0x00000000, ne: 0x162df000162eb},
		dm{re: 0x1987, si: 0x00000000, ne: 0x162eb000162f6},
		dm{re: 0x1988, si: 0x00000000, ne: 0x162f600016301},
		dm{re: 0x1989, si: 0x00000000, ne: 0x1630100016310},
		dm{re: 0x198a, si: 0x00000000, ne: 0x163100001631b},
		dm{re: 0x198b, si: 0x00000000, ne: 0x1631b00016326},
		dm{re: 0x198c, si: 0x00000000, ne: 0x1632600016336},
		dm{re: 0x198d, si: 0x00000000, ne: 0x1633600016345},
		dm{re: 0x198e, si: 0x00000000, ne: 0x1634500016348},
		dm{re: 0x198f, si: 0x00000000, ne: 0x1634800016350},
		dm{re: 0x1990, si: 0x00000000, ne: 0x1635000016358},
		dm{re: 0x1991, si: 0x00000000, ne: 0x1635800016360},
		dm{re: 0x1992, si: 0x00000000, ne: 0x163600001636c},
		dm{re: 0x1993, si: 0x00000000, ne: 0x1636c00016374},
		dm{re: 0x1994, si: 0x00000000, ne: 0x1637400016380},
		dm{re: 0x1995, si: 0x00000000, ne: 0x163800001638c},
		dm{re: 0x1996, si: 0x00000000, ne: 0x1638c00016394},
		dm{re: 0x1997, si: 0x00000000, ne: 0x16394000163a0},
		dm{re: 0x1998, si: 0x00000000, ne: 0x163a0000163b0},
		dm{re: 0x1999, si: 0x00000000, ne: 0x163b0000163bc},
		dm{re: 0x199a, si: 0x00000000, ne: 0x163bc000163c4},
		dm{re: 0x199b, si: 0x00000000, ne: 0x163c4000163d4},
		dm{re: 0x199c, si: 0x00000000, ne: 0x163d4000163e0},
		dm{re: 0x199d, si: 0x00000000, ne: 0x163e0000163ea},
		dm{re: 0x199e, si: 0x00000000, ne: 0x163ea000163f5},
		dm{re: 0x199f, si: 0x00000000, ne: 0x163f5000163fd},
		dm{re: 0x19a0, si: 0x00000000, ne: 0x163fd00016409},
		dm{re: 0x19a1, si: 0x00000000, ne: 0x1640900016412},
		dm{re: 0x19a2, si: 0x00000000, ne: 0x1641200016422},
		dm{re: 0x19a3, si: 0x00000000, ne: 0x164220001642a},
		dm{re: 0x19a4, si: 0x00000000, ne: 0x1642a00016433},
		dm{re: 0x19a5, si: 0x00000000, ne: 0x164330001643b},
		dm{re: 0x19a6, si: 0x00000000, ne: 0x1643b00016442},
		dm{re: 0x19a7, si: 0x00000000, ne: 0x164420001644d},
		dm{re: 0x19a8, si: 0x00000000, ne: 0x1644d00016455},
		dm{re: 0x19a9, si: 0x00000000, ne: 0x1645500016461},
		dm{re: 0x19aa, si: 0x00000000, ne: 0x1646100016466},
		dm{re: 0x19ab, si: 0x00000000, ne: 0x164660001646b},
		dm{re: 0x19ac, si: 0x00000000, ne: 0x1646b00016475},
		dm{re: 0x19ad, si: 0x00000000, ne: 0x164750001647b},
		dm{re: 0x19ae, si: 0x00000000, ne: 0x1647b00016481},
		dm{re: 0x19af, si: 0x00000000, ne: 0x164810001648b},
		dm{re: 0x19b0, si: 0x00000000, ne: 0x1648b00016495},
		dm{re: 0x19b1, si: 0x00000000, ne: 0x16495000164a0},
		dm{re: 0x19b2, si: 0x00000000, ne: 0x164a0000164ab},
		dm{re: 0x19b3, si: 0x00000000, ne: 0x164ab000164b5},
		dm{re: 0x19b4, si: 0x00000000, ne: 0x164b5000164bb},
		dm{re: 0x19b5, si: 0x00000000, ne: 0x164bb000164c4},
		dm{re: 0x19b6, si: 0x00000000, ne: 0x164c4000164c9},
		dm{re: 0x19b7, si: 0x00000000, ne: 0x164c9000164d3},
		dm{re: 0x19b8, si: 0x00000000, ne: 0x164d3000164d8},
		dm{re: 0x19b9, si: 0x00000000, ne: 0x164d8000164e1},
		dm{re: 0x19ba, si: 0x00000000, ne: 0x164e1000164ea},
		dm{re: 0x19bb, si: 0x00000000, ne: 0x164ea000164f3},
		dm{re: 0x19bc, si: 0x00000000, ne: 0x164f3000164f8},
		dm{re: 0x19bd, si: 0x00000000, ne: 0x164f800016500},
		dm{re: 0x19be, si: 0x00000000, ne: 0x1650000016509},
		dm{re: 0x19bf, si: 0x00000000, ne: 0x1650900016512},
		dm{re: 0x19c0, si: 0x00000000, ne: 0x1651200016518},
		dm{re: 0x19c1, si: 0x00000000, ne: 0x1651800016520},
		dm{re: 0x19c2, si: 0x00000000, ne: 0x165200001652f},
		dm{re: 0x19c3, si: 0x00000000, ne: 0x7c7700007c7e},
		dm{re: 0x19c4, si: 0x00000000, ne: 0x1652f0001653c},
		dm{re: 0x19c5, si: 0x00000000, ne: 0x1653c00016543},
		dm{re: 0x19c6, si: 0x00000000, ne: 0x165430001654e},
		dm{re: 0x19c7, si: 0x00000000, ne: 0x1654e00016555},
		dm{re: 0x19c8, si: 0x00000000, ne: 0x1655500016560},
		dm{re: 0x19c9, si: 0x00000000, ne: 0x165600001656c},
		dm{re: 0x19ca, si: 0x00000000, ne: 0x1656c00016577},
		dm{re: 0x19cb, si: 0x00000000, ne: 0x165770001657e},
		dm{re: 0x19cc, si: 0x00000000, ne: 0x1657e00016589},
		dm{re: 0x19cd, si: 0x00000000, ne: 0x1658900016590},
		dm{re: 0x19ce, si: 0x00000000, ne: 0x165900001659b},
		dm{re: 0x19cf, si: 0x00000000, ne: 0x1659b000165a5},
		dm{re: 0x19d0, si: 0x00000000, ne: 0x165a5000165ac},
		dm{re: 0x19d1, si: 0x00000000, ne: 0x165ac000165b7},
		dm{re: 0x19d2, si: 0x00000000, ne: 0x165b7000165bf},
		dm{re: 0x19d3, si: 0x00000000, ne: 0x165bf000165c7},
		dm{re: 0x19d4, si: 0x00000000, ne: 0x165c7000165ce},
		dm{re: 0x19d5, si: 0x00000000, ne: 0x165ce000165d6},
		dm{re: 0x19d6, si: 0x00000000, ne: 0x165d6000165de},
		dm{re: 0x19d7, si: 0x00000000, ne: 0x165de000165e6},
		dm{re: 0x19d8, si: 0x00000000, ne: 0x165e6000165f1},
		dm{re: 0x19d9, si: 0x00000000, ne: 0x165f1000165f9},
		dm{re: 0x19da, si: 0x00000000, ne: 0x165f900016602},
		dm{re: 0x19db, si: 0x00000000, ne: 0x166020001660c},
		dm{re: 0x19dc, si: 0x00000000, ne: 0x1660c00016617},
		dm{re: 0x19dd, si: 0x00000000, ne: 0x166170001661f},
		dm{re: 0x19de, si: 0x00000000, ne: 0x1661f0001662a},
		dm{re: 0x19df, si: 0x00000000, ne: 0x1662a00016637},
		dm{re: 0x19e0, si: 0x00000000, ne: 0x1663700016640},
		dm{re: 0x19e1, si: 0x00000000, ne: 0x1664000016649},
		dm{re: 0x19e2, si: 0x00000000, ne: 0x1664900016652},
		dm{re: 0x19e3, si: 0x00000000, ne: 0x166520001665f},
		dm{re: 0x19e4, si: 0x00000000, ne: 0x1665f0001666d},
		dm{re: 0x19e5, si: 0x00000000, ne: 0x1666d00016676},
		dm{re: 0x19e6, si: 0x00000000, ne: 0x1667600016683},
		dm{re: 0x19e7, si: 0x00000000, ne: 0x166830001668a},
		dm{re: 0x19e8, si: 0x00000000, ne: 0x1668a0001668f},
		dm{re: 0x19e9, si: 0x00000000, ne: 0x1668f00016695},
		dm{re: 0x19ea, si: 0x00000000, ne: 0x166950001669c},
		dm{re: -0x0001, si: 0x1669c000166a4, ne: 0x2e2900002e2b},
		dm{re: 0x19eb, si: 0x00000000, ne: 0x166a4000166a8},
		dm{re: 0x19ec, si: 0x00000000, ne: 0x166a8000166b0},
		dm{re: 0x19ed, si: 0x00000000, ne: 0x166b0000166b6},
		dm{re: 0x19ee, si: 0x00000000, ne: 0xed370000ed3d},
		dm{re: 0x19ef, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x19f0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x19f1, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x166bd000166cc, ne: 0x166cc000166d3},
		dm{re: 0x19f3, si: 0x00000000, ne: 0x166d3000166db},
		dm{re: 0x19f5, si: 0x00000000, ne: 0x166e0000166e6},
		dm{re: 0x19f6, si: 0x00000000, ne: 0x166e6000166ee},
		dm{re: 0x19f7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x19f8, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x166f800016704, ne: 0x1670400016710},
		dm{re: 0x19fa, si: 0x00000000, ne: 0x1671000016716},
		dm{re: -0x0001, si: 0x167160001671e, ne: 0x1671e00016727},
		dm{re: -0x0001, si: 0x167270001672f, ne: 0x1672f00016737},
		dm{re: -0x0001, si: 0x167370001673f, ne: 0x1673f00016747},
		dm{re: 0x19fb, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x19fc, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x19fd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x19fe, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: -0x0001, si: 0x167530001675e, ne: 0x1675e00016762},
		dm{re: -0x0001, si: 0x167620001676d, ne: 0x1676d00016772},
		dm{re: 0x19ff, si: 0x00000000, ne: 0x1677200016776},
		dm{re: 0x1a01, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a02, si: 0x00000000, ne: 0xcbd40000cbdf},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1678b0001678e},
		dm{re: 0x1a03, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a04, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x167980001679e, ne: 0x167980001679e},
		dm{re: 0x1a06, si: 0x00000000, ne: 0x167a3000167aa},
		dm{re: 0x1a07, si: 0x00000000, ne: 0x167aa000167b3},
		dm{re: -0x0001, si: 0x00000000, ne: 0x167bb000167c5},
		dm{re: -0x0001, si: 0x167c8000167d0, ne: 0x167c8000167d0},
		dm{re: 0x1a0a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a0b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a0c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a0d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a0f, si: 0x00000000, ne: 0xca6a0000ca72},
		dm{re: -0x0001, si: 0x167d7000167de, ne: 0x167d7000167de},
		dm{re: -0x0001, si: 0x167de000167e6, ne: 0x167de000167e6},
		dm{re: -0x0001, si: 0x167e6000167ee, ne: 0x167e6000167ee},
		dm{re: 0x1a10, si: 0x00000000, ne: 0x167ee000167fb},
		dm{re: 0x1a11, si: 0x00000000, ne: 0x167fb00016802},
		dm{re: 0x1a12, si: 0x00000000, ne: 0x1680200016807},
		dm{re: 0x1a13, si: 0x00000000, ne: 0x168070001680c},
		dm{re: 0x1a14, si: 0x00000000, ne: 0x1680c00016813},
		dm{re: 0x1a15, si: 0x00000000, ne: 0x168130001681a},
		dm{re: -0x0001, si: 0x1681a00016827, ne: 0x1681a00016827},
		dm{re: -0x0001, si: 0x1682700016835, ne: 0x1683500016843},
		dm{re: 0x1a16, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x168550001685e, ne: 0x1685e00016867},
		dm{re: -0x0001, si: 0x1686700016870, ne: 0x1686700016870},
		dm{re: 0x1a1b, si: 0x00000000, ne: 0x1687600016880},
		dm{re: 0x1a1c, si: 0x00000000, ne: 0x1688000016889},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1688e00016896},
		dm{re: 0x1a1f, si: 0x00000000, ne: 0x65f2000065f7},
		dm{re: -0x0001, si: 0x1689c000168ab, ne: 0x168ab000168b4},
		dm{re: -0x0001, si: 0x168b4000168bc, ne: 0x168bc000168c5},
		dm{re: 0x1a20, si: 0x00000000, ne: 0x168c5000168d2},
		dm{re: -0x0001, si: 0x168d2000168e0, ne: 0x168d2000168e0},
		dm{re: -0x0001, si: 0x168e0000168ea, ne: 0x168e0000168ea},
		dm{re: 0x1a21, si: 0x00000000, ne: 0x168ea000168f8},
		dm{re: -0x0001, si: 0x168f800016902, ne: 0x169020001690c},
		dm{re: -0x0001, si: 0x1690c00016918, ne: 0x1691800016924},
		dm{re: -0x0001, si: 0x1692400016928, ne: 0x1692400016928},
		dm{re: -0x0001, si: 0x169280001692f, ne: 0x1692f00016936},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1694600016953},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a26, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a27, si: 0x00000000, ne: 0x1696100016968},
		dm{re: -0x0001, si: 0x169710001697a, ne: 0x169710001697a},
		dm{re: -0x0001, si: 0x1697a00016983, ne: 0x169830001698c},
		dm{re: -0x0001, si: 0x1698c00016991, ne: 0x1698c00016991},
		dm{re: -0x0001, si: 0x169910001699c, ne: 0x1699c000169a2},
		dm{re: -0x0001, si: 0x00000000, ne: 0x169b1000169c3},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a2b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a2c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x169d5000169da, ne: 0x169da000169e5},
		dm{re: -0x0001, si: 0x169e5000169ea, ne: 0x169ea000169f5},
		dm{re: -0x0001, si: 0x169f5000169fa, ne: 0x169fa00016a05},
		dm{re: -0x0001, si: 0x16a0500016a09, ne: 0x16a0900016a13},
		dm{re: -0x0001, si: 0x16a1300016a18, ne: 0x16a1800016a23},
		dm{re: -0x0001, si: 0x16a2300016a28, ne: 0x940b00009411},
		dm{re: -0x0001, si: 0x16a2800016a2d, ne: 0x16a2d00016a38},
		dm{re: -0x0001, si: 0x16a3800016a3f, ne: 0x16a3f00016a4c},
		dm{re: -0x0001, si: 0x16a4c00016a52, ne: 0x16a5200016a5e},
		dm{re: 0x1a2e, si: 0x00000000, ne: 0x16a5e00016a68},
		dm{re: 0x1a2f, si: 0x00000000, ne: 0x16a6800016a77},
		dm{re: -0x0001, si: 0x16a7700016a7d, ne: 0x16a7d00016a8a},
		dm{re: -0x0001, si: 0x16a8a00016a93, ne: 0x16a9300016a9d},
		dm{re: -0x0001, si: 0x16a9d00016aa7, ne: 0x16aa700016ab1},
		dm{re: 0x1a30, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: -0x0001, si: 0x16ab100016aba, ne: 0xbd000000bd},
		dm{re: 0x1a31, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a32, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a33, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a35, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x16ac300016ad0, ne: 0x16ad000016ae4},
		dm{re: 0x1a36, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a37, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a39, si: 0x00000000, ne: 0x16aed00016afb},
		dm{re: 0x1a3a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a3c, si: 0x00000000, ne: 0x16b0300016b0f},
		dm{re: -0x0001, si: 0x16b0f00016b18, ne: 0x16b1800016b2d},
		dm{re: -0x0001, si: 0x16b2d00016b40, ne: 0x16b4000016b53},
		dm{re: -0x0001, si: 0x16b5300016b5f, ne: 0x16b5300016b5f},
		dm{re: 0x1a3d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a3e, si: 0x00000000, ne: 0x16b5f00016b69},
		dm{re: 0x1a3f, si: 0x00000000, ne: 0x16b5f00016b69},
		dm{re: -0x0001, si: 0x16b6900016b75, ne: 0x16b7500016b80},
		dm{re: 0x1a40, si: 0x00000000, ne: 0x16b8000016b97},
		dm{re: 0x1a41, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a43, si: 0x00000000, ne: 0x16b9c00016ba8},
		dm{re: 0x1a44, si: 0x00000000, ne: 0x16ba800016bb3},
		dm{re: 0x1a45, si: 0x00000000, ne: 0x16bb300016bbb},
		dm{re: 0x1a46, si: 0x00000000, ne: 0x16bbb00016bc8},
		dm{re: -0x0001, si: 0x16bc800016bd3, ne: 0x16bd300016bdf},
		dm{re: 0x1a47, si: 0x00000000, ne: 0x16bdf00016bea},
		dm{re: 0x1a48, si: 0x00000000, ne: 0x16bea00016bf5},
		dm{re: 0x1a49, si: 0x00000000, ne: 0x16bf500016c01},
		dm{re: 0x1a4a, si: 0x00000000, ne: 0x16c0100016c0c},
		dm{re: 0x1a4b, si: 0x00000000, ne: 0x16c0c00016c19},
		dm{re: 0x1a4c, si: 0x00000000, ne: 0x16c1900016c2e},
		dm{re: 0x1a4d, si: 0x00000000, ne: 0x16c2e00016c39},
		dm{re: 0x1a4e, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x16c4700016c51, ne: 0x16c5100016c5b},
		dm{re: -0x0001, si: 0x16c5b00016c67, ne: 0x16c6700016c73},
		dm{re: -0x0001, si: 0x16c7300016c7e, ne: 0x16c7e00016c89},
		dm{re: -0x0001, si: 0x00000000, ne: 0x16c8d00016c92},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a54, si: 0x00000000, ne: 0x16c9f00016cb1},
		dm{re: 0x1a55, si: 0x00000000, ne: 0x16cb100016cc3},
		dm{re: 0x1a56, si: 0x00000000, ne: 0x16cc300016cdb},
		dm{re: 0x1a57, si: 0x00000000, ne: 0x16cdb00016cec},
		dm{re: 0x1a58, si: 0x00000000, ne: 0x16cec00016cfd},
		dm{re: 0x1a59, si: 0x00000000, ne: 0x16cfd00016d0e},
		dm{re: 0x1a5a, si: 0x00000000, ne: 0x16d0e00016d19},
		dm{re: 0x1a5b, si: 0x00000000, ne: 0x16d1900016d29},
		dm{re: -0x0001, si: 0x16d2900016d3b, ne: 0x16d3b00016d48},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x16d6500016d74},
		dm{re: 0x1a60, si: 0x00000000, ne: 0x16d7400016d7c},
		dm{re: 0x1a61, si: 0x00000000, ne: 0x16d7c00016d83},
		dm{re: 0x1a62, si: 0x00000000, ne: 0x16d8300016d88},
		dm{re: 0x1a63, si: 0x00000000, ne: 0x16d8800016d90},
		dm{re: 0x1a64, si: 0x00000000, ne: 0x16d9000016d96},
		dm{re: 0x1a65, si: 0x00000000, ne: 0x16d9600016d9a},
		dm{re: 0x1a66, si: 0x00000000, ne: 0x743600007438},
		dm{re: -0x0001, si: 0x16da100016daa, ne: 0x16daa00016dac},
		dm{re: 0x1a68, si: 0x00000000, ne: 0x990f00009911},
		dm{re: 0x1a69, si: 0x00000000, ne: 0x16dac00016dae},
		dm{re: 0x1a6a, si: 0x00000000, ne: 0x16dae00016db5},
		dm{re: 0x1a6b, si: 0x00000000, ne: 0x16db500016db8},
		dm{re: 0x1a6c, si: 0x00000000, ne: 0x16db800016dc1},
		dm{re: 0x1a6d, si: 0x00000000, ne: 0x16dc100016dcd},
		dm{re: 0x1a6e, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: 0x1a6f, si: 0x00000000, ne: 0xc6a50000c6ad},
		dm{re: 0x1a70, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a74, si: 0x00000000, ne: 0x16de600016def},
		dm{re: 0x1a75, si: 0x00000000, ne: 0x16def00016df3},
		dm{re: 0x1a76, si: 0x00000000, ne: 0x16df300016e02},
		dm{re: 0x1a77, si: 0x00000000, ne: 0x16e0200016e10},
		dm{re: 0x1a78, si: 0x00000000, ne: 0x16e1000016e18},
		dm{re: 0x1a7a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a7b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a7d, si: 0x00000000, ne: 0x16e3a00016e3f},
		dm{re: 0x1a7f, si: 0x00000000, ne: 0x81c2000081d2},
		dm{re: 0x1a80, si: 0x00000000, ne: 0x8ab100008abc},
		dm{re: 0x1a81, si: 0x00000000, ne: 0x16e4600016e52},
		dm{re: -0x0001, si: 0x16e6400016e6e, ne: 0x16e6e00016e7f},
		dm{re: 0x1a82, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a84, si: 0x00000000, ne: 0x16e8600016e8d},
		dm{re: 0x1a85, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: -0x0001, si: 0x16e8d00016e98, ne: 0x16e8d00016e98},
		dm{re: 0x1a86, si: 0x00000000, ne: 0x16e9800016e9c},
		dm{re: -0x0001, si: 0x16e9c00016ea7, ne: 0x16ea700016eae},
		dm{re: -0x0001, si: 0x16eae00016eb7, ne: 0x16eb700016ebc},
		dm{re: 0x1a87, si: 0x00000000, ne: 0x15c6d00015c73},
		dm{re: -0x0001, si: 0x16ebc00016ec4, ne: 0x16ec400016ecc},
		dm{re: -0x0001, si: 0x16ecc00016ed4, ne: 0x16ecc00016ed4},
		dm{re: 0x1a88, si: 0x00000000, ne: 0x16ed400016edd},
		dm{re: -0x0001, si: 0x16edd00016ee6, ne: 0x16ee600016eef},
		dm{re: -0x0001, si: 0x16eef00016ef4, ne: 0x16ef400016ef9},
		dm{re: -0x0001, si: 0x16ef900016f01, ne: 0x16f0100016f09},
		dm{re: -0x0001, si: 0x16f0900016f11, ne: 0x16f1100016f19},
		dm{re: 0x1a89, si: 0x00000000, ne: 0x16f1900016f1e},
		dm{re: -0x0001, si: 0x16f1e00016f25, ne: 0x16f2500016f2c},
		dm{re: -0x0001, si: 0x16f2c00016f33, ne: 0x16f2c00016f33},
		dm{re: 0x1a8a, si: 0x00000000, ne: 0x16f3300016f3b},
		dm{re: 0x1a8b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a8c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a8d, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a90, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x16f5f00016f69},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a98, si: 0x00000000, ne: 0x16f7900016f7d},
		dm{re: -0x0001, si: 0x16f7d00016f82, ne: 0x16f7d00016f82},
		dm{re: -0x0001, si: 0x16f8200016f87, ne: 0x16f8200016f87},
		dm{re: -0x0001, si: 0x16f8700016f8b, ne: 0x16f8700016f8b},
		dm{re: 0x1a99, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a9a, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1a9c, si: 0x00000000, ne: 0x59a8000059af},
		dm{re: 0x1a9d, si: 0x00000000, ne: 0x16f9200016f9c},
		dm{re: 0x1a9e, si: 0x00000000, ne: 0x16f9c00016fa8},
		dm{re: 0x1a9f, si: 0x00000000, ne: 0x16fa800016faf},
		dm{re: 0x1aa0, si: 0x00000000, ne: 0x16faf00016fba},
		dm{re: 0x1aa1, si: 0x00000000, ne: 0x16fba00016fc0},
		dm{re: 0x1aa2, si: 0x00000000, ne: 0x16fc000016fc4},
		dm{re: 0x1aa3, si: 0x00000000, ne: 0x16fc400016fcb},
		dm{re: -0x0001, si: 0x16fcb00016fd5, ne: 0x5ced00005cf7},
		dm{re: -0x0001, si: 0x16fd500016fdc, ne: 0x16fdc00016fe3},
		dm{re: 0x1aa4, si: 0x00000000, ne: 0x16fe300016ff1},
		dm{re: 0x1aa5, si: 0x00000000, ne: 0x16ff100016ff9},
		dm{re: 0x1aa6, si: 0x00000000, ne: 0x16ff900017002},
		dm{re: 0x1aa7, si: 0x00000000, ne: 0x170020001700f},
		dm{re: 0x1aa8, si: 0x00000000, ne: 0x1700f00017018},
		dm{re: 0x1aa9, si: 0x00000000, ne: 0x1701800017021},
		dm{re: 0x1aaa, si: 0x00000000, ne: 0x1702100017028},
		dm{re: 0x1aab, si: 0x00000000, ne: 0x1702800017030},
		dm{re: 0x1aac, si: 0x00000000, ne: 0x1703000017039},
		dm{re: 0x1aad, si: 0x00000000, ne: 0x1703900017044},
		dm{re: 0x1aae, si: 0x00000000, ne: 0x1704400017050},
		dm{re: 0x1aaf, si: 0x00000000, ne: 0x1705000017058},
		dm{re: 0x1ab0, si: 0x00000000, ne: 0x170580001705d},
		dm{re: 0x1ab1, si: 0x00000000, ne: 0x1705d00017067},
		dm{re: 0x1ab2, si: 0x00000000, ne: 0xbae60000baee},
		dm{re: 0x1ab3, si: 0x00000000, ne: 0x170670001706e},
		dm{re: 0x1ab4, si: 0x00000000, ne: 0x1706e00017075},
		dm{re: 0x1ab5, si: 0x00000000, ne: 0x170750001707d},
		dm{re: 0x1ab6, si: 0x00000000, ne: 0x377200003778},
		dm{re: 0x1ab7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ab8, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ab9, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1abb, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1abc, si: 0x00000000, ne: 0x1708100017093},
		dm{re: 0x1abd, si: 0x00000000, ne: 0x17093000170a5},
		dm{re: 0x1abe, si: 0x00000000, ne: 0x170a5000170b7},
		dm{re: 0x1abf, si: 0x00000000, ne: 0x170b7000170c9},
		dm{re: 0x1ac0, si: 0x00000000, ne: 0x170c9000170dc},
		dm{re: 0x1ac1, si: 0x00000000, ne: 0x170dc000170f3},
		dm{re: 0x1ac2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ac4, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x1ac5, si: 0x00000000, ne: 0x170fb00017102},
		dm{re: -0x0001, si: 0x171020001710e, ne: 0x1710e0001711a},
		dm{re: 0x1ac6, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x8be800008beb},
		dm{re: 0x1ac8, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ac9, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1acb, si: 0x00000000, ne: 0x1712f00017135},
		dm{re: 0x1acc, si: 0x00000000, ne: 0x171350001713e},
		dm{re: 0x1acd, si: 0x00000000, ne: 0x1713e00017144},
		dm{re: 0x1ace, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: 0x1acf, si: 0x00000000, ne: 0x171440001714b},
		dm{re: 0x1ad0, si: 0x00000000, ne: 0x1714b00017153},
		dm{re: 0x1ad1, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: 0x1ad2, si: 0x00000000, ne: 0x171530001715e},
		dm{re: 0x1ad3, si: 0x00000000, ne: 0x1715e00017165},
		dm{re: -0x0001, si: 0x1716c00017170, ne: 0x1717000017178},
		dm{re: -0x0001, si: 0x171780001717d, ne: 0x5e5300005e57},
		dm{re: -0x0001, si: 0x1717d00017181, ne: 0x171810001718a},
		dm{re: -0x0001, si: 0x1718a0001718e, ne: 0x1718e00017197},
		dm{re: -0x0001, si: 0x171970001719b, ne: 0x1719b000171a4},
		dm{re: -0x0001, si: 0x171a4000171a8, ne: 0x171a4000171a8},
		dm{re: -0x0001, si: 0x171a8000171ac, ne: 0x171ac000171b8},
		dm{re: -0x0001, si: 0x171b8000171bc, ne: 0x171bc000171c5},
		dm{re: -0x0001, si: 0x171c5000171ca, ne: 0x171ca000171ce},
		dm{re: -0x0001, si: 0x171ce000171d2, ne: 0xf6d60000f6d9},
		dm{re: -0x0001, si: 0x171d2000171d6, ne: 0x171d6000171dd},
		dm{re: 0x1ad6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ad7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ad8, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x171ed000171f1},
		dm{re: 0x1ada, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x171fa00017200, ne: 0x1720000017207},
		dm{re: 0x1adc, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1adf, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1720d00017217, ne: 0x1721700017221},
		dm{re: 0x1ae0, si: 0x00000000, ne: 0x1722100017226},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ae4, si: 0x00000000, ne: 0x1723500017240},
		dm{re: 0x1ae5, si: 0x00000000, ne: 0x1724000017248},
		dm{re: -0x0001, si: 0x1724c00017256, ne: 0x1725600017260},
		dm{re: -0x0001, si: 0x172600001726a, ne: 0x1726a00017274},
		dm{re: 0x1ae7, si: 0x00000000, ne: 0x1727400017281},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1728a0001728e},
		dm{re: 0x1aea, si: 0x00000000, ne: 0x1033c00010342},
		dm{re: 0x1aeb, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x1aec, si: 0x00000000, ne: 0x172950001729a},
		dm{re: 0x1aed, si: 0x00000000, ne: 0x1728a0001728e},
		dm{re: -0x0001, si: 0x1729e000172a8, ne: 0x172a8000172a9},
		dm{re: -0x0001, si: 0x00000000, ne: 0x172b0000172b2},
		dm{re: 0x1af1, si: 0x00000000, ne: 0x172b8000172c5},
		dm{re: 0x1af2, si: 0x00000000, ne: 0x172c5000172cc},
		dm{re: 0x1af4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1af6, si: 0x00000000, ne: 0x172d9000172e6},
		dm{re: 0x1af7, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1afa, si: 0x00000000, ne: 0x172eb000172f5},
		dm{re: 0x1afb, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1afd, si: 0x00000000, ne: 0x172fd00017311},
		dm{re: 0x1afe, si: 0x00000000, ne: 0x1731100017316},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1731c00017326},
		dm{re: 0x1b01, si: 0x00000000, ne: 0x1732d00017338},
		dm{re: -0x0001, si: 0x173380001733f, ne: 0x1733f0001734c},
		dm{re: -0x0001, si: 0x1734c00017353, ne: 0x1735300017367},
		dm{re: -0x0001, si: 0x1736700017370, ne: 0x1737000017381},
		dm{re: -0x0001, si: 0x1738100017387, ne: 0x1738700017391},
		dm{re: 0x1b02, si: 0x00000000, ne: 0x173910001739b},
		dm{re: 0x1b04, si: 0x00000000, ne: 0x173a1000173ac},
		dm{re: 0x1b05, si: 0x00000000, ne: 0x173ac000173b4},
		dm{re: -0x0001, si: 0x173b4000173bc, ne: 0x173b4000173bc},
		dm{re: -0x0001, si: 0x173bc000173c2, ne: 0x173bc000173c2},
		dm{re: -0x0001, si: 0x173c2000173cb, ne: 0x173c2000173cb},
		dm{re: -0x0001, si: 0x173cb000173d4, ne: 0x15f9000015fb},
		dm{re: -0x0001, si: 0x173d4000173da, ne: 0x4d9200004d94},
		dm{re: -0x0001, si: 0x173da000173e1, ne: 0xb0160000b018},
		dm{re: 0x1b06, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x1b07, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1b08, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x173e8000173f3},
		dm{re: 0x1b0b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1b0c, si: 0x00000000, ne: 0x173f900017404},
		dm{re: 0x1b0d, si: 0x00000000, ne: 0x1740400017413},
		dm{re: 0x1b0e, si: 0x00000000, ne: 0x174130001741d},
		dm{re: 0x1b0f, si: 0x00000000, ne: 0x1741d00017430},
		dm{re: 0x1b10, si: 0x00000000, ne: 0x1743000017436},
		dm{re: 0x1b11, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1b12, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1b13, si: 0x00000000, ne: 0x174360001743d},
		dm{re: 0x1b14, si: 0x00000000, ne: 0x1743d0001744b},
		dm{re: 0x1b16, si: 0x00000000, ne: 0x1745000017457},
		dm{re: 0x1b17, si: 0x00000000, ne: 0x1745700017466},
		dm{re: 0x1b18, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1b19, si: 0x00000000, ne: 0x108f1000108f4},
		dm{re: 0x1b1a, si: 0x00000000, ne: 0x174760001747b},
		dm{re: 0x1b1b, si: 0x00000000, ne: 0x1747b00017483},
		dm{re: 0x1b1c, si: 0x00000000, ne: 0x174830001748d},
		dm{re: 0x1b1d, si: 0x00000000, ne: 0x1748d00017495},
		dm{re: 0x1b1e, si: 0x00000000, ne: 0x174950001749e},
		dm{re: 0x1b1f, si: 0x00000000, ne: 0x131300001317},
		dm{re: 0x1b20, si: 0x00000000, ne: 0x1749e000174a6},
		dm{re: 0x1b21, si: 0x00000000, ne: 0x174a6000174b2},
		dm{re: 0x1b22, si: 0x00000000, ne: 0x174b2000174b9},
		dm{re: 0x1b23, si: 0x00000000, ne: 0x174b9000174c0},
		dm{re: 0x1b24, si: 0x00000000, ne: 0x174c0000174c8},
		dm{re: 0x1b25, si: 0x00000000, ne: 0x174c8000174d1},
		dm{re: 0x1b26, si: 0x00000000, ne: 0x29f000002a4},
		dm{re: 0x1b27, si: 0x00000000, ne: 0x174d1000174dc},
		dm{re: 0x1b28, si: 0x00000000, ne: 0x174dc000174e8},
		dm{re: 0x1b29, si: 0x00000000, ne: 0x174e8000174f7},
		dm{re: 0x1b2a, si: 0x00000000, ne: 0x174f700017502},
		dm{re: 0x1b2b, si: 0x00000000, ne: 0x175020001750e},
		dm{re: 0x1b2c, si: 0x00000000, ne: 0x1750e00017513},
		dm{re: 0x1b2d, si: 0x00000000, ne: 0x175130001751b},
		dm{re: 0x1b2e, si: 0x00000000, ne: 0x1751b00017529},
		dm{re: 0x1b2f, si: 0x00000000, ne: 0x175290001752f},
		dm{re: -0x0001, si: 0x1752f0001753c, ne: 0x1752f0001753c},
		dm{re: 0x1b30, si: 0x00000000, ne: 0x1753c00017546},
		dm{re: 0x1b31, si: 0x00000000, ne: 0x1754600017550},
		dm{re: 0x1b32, si: 0x00000000, ne: 0x1755000017556},
		dm{re: 0x1b33, si: 0x00000000, ne: 0x175560001755c},
		dm{re: 0x1b34, si: 0x00000000, ne: 0x1755c00017561},
		dm{re: 0x1b35, si: 0x00000000, ne: 0x1756100017567},
		dm{re: 0x1b36, si: 0x00000000, ne: 0xc6500000c654},
		dm{re: 0x1b37, si: 0x00000000, ne: 0x1032300010328},
		dm{re: 0x1b38, si: 0x00000000, ne: 0x1756700017570},
		dm{re: 0x1b39, si: 0x00000000, ne: 0x1757000017578},
		dm{re: 0x1b3a, si: 0x00000000, ne: 0x175780001757d},
		dm{re: 0x1b3b, si: 0x00000000, ne: 0x1757d0001758b},
		dm{re: 0x1b3c, si: 0x00000000, ne: 0x5e5b00005e63},
		dm{re: 0x1b3d, si: 0x00000000, ne: 0x5e7d00005e83},
		dm{re: 0x1b3e, si: 0x00000000, ne: 0x1758b00017597},
		dm{re: 0x1b3f, si: 0x00000000, ne: 0x17597000175a2},
		dm{re: 0x1b40, si: 0x00000000, ne: 0x175a2000175ad},
		dm{re: 0x1b41, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1b42, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x175b2000175bd, ne: 0x175bd000175cc},
		dm{re: -0x0001, si: 0x175cc000175da, ne: 0x175da000175e1},
		dm{re: -0x0001, si: 0x175e7000175ee, ne: 0x175ee000175fa},
		dm{re: -0x0001, si: 0x175fa000175fe, ne: 0x175fe0001760a},
		dm{re: -0x0001, si: 0x1760a00017610, ne: 0x1761000017617},
		dm{re: -0x0001, si: 0x1761700017626, ne: 0x1762600017632},
		dm{re: -0x0001, si: 0x1763200017642, ne: 0x176420001764f},
		dm{re: 0x1b45, si: 0x00000000, ne: 0x1764f00017656},
		dm{re: 0x1b46, si: 0x00000000, ne: 0x1764f00017656},
		dm{re: -0x0001, si: 0x1765600017662, ne: 0x1766200017674},
		dm{re: -0x0001, si: 0x176740001767b, ne: 0x1767b00017684},
		dm{re: -0x0001, si: 0x176840001768b, ne: 0x1768b00017695},
		dm{re: -0x0001, si: 0x176950001769c, ne: 0x1769c000176a6},
		dm{re: -0x0001, si: 0x176a6000176ad, ne: 0x176ad000176b7},
		dm{re: -0x0001, si: 0x176b7000176be, ne: 0x176be000176c8},
		dm{re: 0x1b47, si: 0x00000000, ne: 0x176c8000176d3},
		dm{re: 0x1b48, si: 0x00000000, ne: 0x176d3000176dc},
		dm{re: 0x1b49, si: 0x00000000, ne: 0xda270000da2f},
		dm{re: -0x0001, si: 0x176dc000176ee, ne: 0x176dc000176ee},
		dm{re: 0x1b4a, si: 0x00000000, ne: 0x176ee000176fb},
		dm{re: 0x1b4b, si: 0x00000000, ne: 0x176fb00017704},
		dm{re: -0x0001, si: 0x1770400017714, ne: 0x177140001771d},
		dm{re: -0x0001, si: 0x1771d0001772c, ne: 0x1772c00017734},
		dm{re: 0x1b4c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x177410001774f, ne: 0x1774f00017754},
		dm{re: 0x1b4f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1b50, si: 0x00000000, ne: 0x1775400017759},
		dm{re: 0x1b51, si: 0x00000000, ne: 0x1775900017761},
		dm{re: 0x1b52, si: 0x00000000, ne: 0x177610001776f},
		dm{re: 0x1b53, si: 0x00000000, ne: 0x1776f00017778},
		dm{re: 0x1b54, si: 0x00000000, ne: 0x1777800017781},
		dm{re: 0x1b55, si: 0x00000000, ne: 0x177810001778c},
		dm{re: 0x1b56, si: 0x00000000, ne: 0x1778c00017797},
		dm{re: 0x1b57, si: 0x00000000, ne: 0x17797000177a0},
		dm{re: 0x1b58, si: 0x00000000, ne: 0x177a0000177a8},
		dm{re: 0x1b59, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1b5a, si: 0x00000000, ne: 0x177a8000177b7},
		dm{re: 0x1b5b, si: 0x00000000, ne: 0x177b7000177c9},
		dm{re: 0x1b5c, si: 0x00000000, ne: 0x177c9000177da},
		dm{re: 0x1b5e, si: 0x00000000, ne: 0x177e3000177e7},
		dm{re: 0x1b5f, si: 0x00000000, ne: 0x177e7000177ee},
		dm{re: 0x1b60, si: 0x00000000, ne: 0x177ee000177fa},
		dm{re: 0x1b61, si: 0x00000000, ne: 0x177fa00017804},
		dm{re: 0x1b62, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1b63, si: 0x00000000, ne: 0x178040001781e},
		dm{re: 0x1b64, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1782a00017834, ne: 0x1783400017837},
		dm{re: -0x0001, si: 0x1783700017842, ne: 0x1784200017845},
		dm{re: -0x0001, si: 0x1784500017850, ne: 0x1785000017853},
		dm{re: -0x0001, si: 0x178530001785e, ne: 0x1785e00017861},
		dm{re: -0x0001, si: 0x178610001786c, ne: 0x1786c0001786f},
		dm{re: -0x0001, si: 0x1786f00017879, ne: 0x178790001787c},
		dm{re: 0x1b66, si: 0x00000000, ne: 0x1787c0001787f},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1b68, si: 0x00000000, ne: 0x1788900017890},
		dm{re: 0x1b6a, si: 0x00000000, ne: 0x178950001789b},
		dm{re: 0x1b6b, si: 0x00000000, ne: 0x376c00003772},
		dm{re: 0x1b6d, si: 0x00000000, ne: 0x178a0000178a5},
		dm{re: -0x0001, si: 0x178b1000178c0, ne: 0x178c0000178c4},
		dm{re: -0x0001, si: 0x178c4000178cb, ne: 0x178c4000178cb},
		dm{re: 0x1b70, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1b71, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1b72, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1b74, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: 0x1b75, si: 0x00000000, ne: 0x377e00003786},
		dm{re: 0x1b77, si: 0x00000000, ne: 0x178de000178e8},
		dm{re: 0x1b78, si: 0x00000000, ne: 0x178e8000178f1},
		dm{re: 0x1b79, si: 0x00000000, ne: 0x178f1000178f9},
		dm{re: 0x1b7a, si: 0x00000000, ne: 0x178f900017900},
		dm{re: 0x1b7b, si: 0x00000000, ne: 0x1790000017906},
		dm{re: 0x1b7c, si: 0x00000000, ne: 0x179060001790d},
		dm{re: 0x1b7d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1b7e, si: 0x00000000, ne: 0x1790d0001791e},
		dm{re: 0x1b7f, si: 0x00000000, ne: 0x14d7100014d76},
		dm{re: 0x1b80, si: 0x00000000, ne: 0x1791e00017928},
		dm{re: 0x1b81, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1b83, si: 0x00000000, ne: 0x1792c00017930},
		dm{re: 0x1b84, si: 0x00000000, ne: 0x1793000017936},
		dm{re: 0x1b85, si: 0x00000000, ne: 0x179360001793c},
		dm{re: 0x1b86, si: 0x00000000, ne: 0x1793c00017946},
		dm{re: 0x1b87, si: 0x00000000, ne: 0x179460001794f},
		dm{re: 0x1b88, si: 0x00000000, ne: 0x1794f00017956},
		dm{re: 0x1b89, si: 0x00000000, ne: 0x179560001795c},
		dm{re: -0x0001, si: 0x1795c00017962, ne: 0x179620001796f},
		dm{re: -0x0001, si: 0x1796f00017975, ne: 0x1797500017980},
		dm{re: 0x1b8a, si: 0x00000000, ne: 0x1798000017989},
		dm{re: 0x1b8b, si: 0x00000000, ne: 0x1798900017991},
		dm{re: 0x1b8c, si: 0x00000000, ne: 0x179910001799c},
		dm{re: 0x1b8d, si: 0x00000000, ne: 0x1799c000179a4},
		dm{re: 0x1b8e, si: 0x00000000, ne: 0x179a4000179ae},
		dm{re: 0x1b8f, si: 0x00000000, ne: 0x179ae000179ba},
		dm{re: 0x1b90, si: 0x00000000, ne: 0x179ba000179c4},
		dm{re: 0x1b91, si: 0x00000000, ne: 0x179c4000179d3},
		dm{re: 0x1b92, si: 0x00000000, ne: 0x179d3000179da},
		dm{re: 0x1b93, si: 0x00000000, ne: 0x179da000179e2},
		dm{re: 0x1b94, si: 0x00000000, ne: 0x179e2000179e9},
		dm{re: -0x0001, si: 0x179e9000179ef, ne: 0x179ef000179f7},
		dm{re: -0x0001, si: 0x179f7000179fd, ne: 0x179fd00017a08},
		dm{re: -0x0001, si: 0x17a0800017a0e, ne: 0x17a0e00017a15},
		dm{re: 0x1b95, si: 0x00000000, ne: 0x17a1500017a1f},
		dm{re: 0x1b96, si: 0x00000000, ne: 0x17a1f00017a26},
		dm{re: 0x1b97, si: 0x00000000, ne: 0x17a2600017a2e},
		dm{re: 0x1b98, si: 0x00000000, ne: 0x17a2e00017a35},
		dm{re: 0x1b99, si: 0x00000000, ne: 0x17a3500017a3d},
		dm{re: 0x1b9a, si: 0x00000000, ne: 0x17a3d00017a48},
		dm{re: 0x1b9b, si: 0x00000000, ne: 0x17a4800017a4e},
		dm{re: 0x1b9c, si: 0x00000000, ne: 0x17a4e00017a58},
		dm{re: 0x1b9d, si: 0x00000000, ne: 0x17a5800017a5e},
		dm{re: 0x1b9e, si: 0x00000000, ne: 0x17a5e00017a68},
		dm{re: 0x1b9f, si: 0x00000000, ne: 0xaec60000aec9},
		dm{re: 0x1ba0, si: 0x00000000, ne: 0x17a6800017a6b},
		dm{re: 0x1ba1, si: 0x00000000, ne: 0x17a6b00017a71},
		dm{re: 0x1ba2, si: 0x00000000, ne: 0x17a7100017a75},
		dm{re: 0x1ba3, si: 0x00000000, ne: 0x17a7500017a7c},
		dm{re: 0x1ba4, si: 0x00000000, ne: 0x17a7c00017a86},
		dm{re: 0x1ba5, si: 0x00000000, ne: 0x17a8600017a89},
		dm{re: 0x1ba6, si: 0x00000000, ne: 0x17a8900017a8c},
		dm{re: 0x1ba7, si: 0x00000000, ne: 0x17a8c00017a8f},
		dm{re: 0x1ba8, si: 0x00000000, ne: 0x17a8f00017a94},
		dm{re: 0x1ba9, si: 0x00000000, ne: 0x17a9400017a9c},
		dm{re: 0x1baa, si: 0x00000000, ne: 0x17a9c00017aa2},
		dm{re: 0x1bab, si: 0x00000000, ne: 0x17aa200017aa7},
		dm{re: 0x1bac, si: 0x00000000, ne: 0x17aa700017aac},
		dm{re: 0x1bad, si: 0x00000000, ne: 0x17a8c00017a8f},
		dm{re: 0x1bae, si: 0x00000000, ne: 0x17aac00017abc},
		dm{re: 0x1baf, si: 0x00000000, ne: 0x781d00007820},
		dm{re: -0x0001, si: 0x17abc00017ac2, ne: 0x17ac200017ac7},
		dm{re: -0x0001, si: 0x17ac700017ace, ne: 0x17ace00017ad3},
		dm{re: 0x1bb0, si: 0x00000000, ne: 0x159b0000159d},
		dm{re: 0x1bb1, si: 0x00000000, ne: 0x17ad300017ad9},
		dm{re: 0x1bb2, si: 0x00000000, ne: 0xf3fe0000f401},
		dm{re: -0x0001, si: 0x17ad900017adf, ne: 0x17adf00017ae6},
		dm{re: -0x0001, si: 0x17ae600017aeb, ne: 0x17aeb00017af1},
		dm{re: 0x1bb3, si: 0x00000000, ne: 0x9b8b00009b8d},
		dm{re: 0x1bb4, si: 0x00000000, ne: 0x17af100017af6},
		dm{re: 0x1bb5, si: 0x00000000, ne: 0x17af600017afc},
		dm{re: 0x1bb6, si: 0x00000000, ne: 0x17afc00017afe},
		dm{re: 0x1bb7, si: 0x00000000, ne: 0x17afe00017b01},
		dm{re: 0x1bb8, si: 0x00000000, ne: 0x17b0100017b04},
		dm{re: 0x1bb9, si: 0x00000000, ne: 0x17b0400017b0d},
		dm{re: 0x1bba, si: 0x00000000, ne: 0x17b0d00017b10},
		dm{re: 0x1bbb, si: 0x00000000, ne: 0x142e00001430},
		dm{re: 0x1bbc, si: 0x00000000, ne: 0x17b1000017b13},
		dm{re: 0x1bbd, si: 0x00000000, ne: 0x17b1300017b1a},
		dm{re: 0x1bbe, si: 0x00000000, ne: 0x17b1a00017b1e},
		dm{re: 0x1bbf, si: 0x00000000, ne: 0x17b1e00017b21},
		dm{re: 0x1bc0, si: 0x00000000, ne: 0x17b2100017b28},
		dm{re: 0x1bc1, si: 0x00000000, ne: 0x17b2800017b2f},
		dm{re: 0x1bc2, si: 0x00000000, ne: 0x17b2f00017b36},
		dm{re: 0x1bc3, si: 0x00000000, ne: 0x17b3600017b39},
		dm{re: 0x1bc4, si: 0x00000000, ne: 0x17b3900017b3c},
		dm{re: 0x1bc5, si: 0x00000000, ne: 0x17b3c00017b42},
		dm{re: 0x1bc6, si: 0x00000000, ne: 0xb2040000b20b},
		dm{re: 0x1bc7, si: 0x00000000, ne: 0x17b4200017b44},
		dm{re: 0x1bc8, si: 0x00000000, ne: 0x17b4400017b4b},
		dm{re: 0x1bc9, si: 0x00000000, ne: 0x17b4b00017b52},
		dm{re: 0x1bca, si: 0x00000000, ne: 0x17b5200017b55},
		dm{re: 0x1bcb, si: 0x00000000, ne: 0xb9100000b912},
		dm{re: 0x1bcc, si: 0x00000000, ne: 0x17b5500017b5c},
		dm{re: 0x1bcd, si: 0x00000000, ne: 0x17b5c00017b5e},
		dm{re: 0x1bce, si: 0x00000000, ne: 0x17b5e00017b66},
		dm{re: 0x1bcf, si: 0x00000000, ne: 0x17b6600017b6c},
		dm{re: 0x1bd0, si: 0x00000000, ne: 0x17b6c00017b72},
		dm{re: 0x1bd1, si: 0x00000000, ne: 0x17b7200017b7a},
		dm{re: 0x1bd2, si: 0x00000000, ne: 0x17b7a00017b7d},
		dm{re: 0x1bd3, si: 0x00000000, ne: 0x17b7d00017b83},
		dm{re: 0x1bd4, si: 0x00000000, ne: 0x17b8300017b8e},
		dm{re: 0x1bd5, si: 0x00000000, ne: 0x17b8e00017b91},
		dm{re: 0x1bd6, si: 0x00000000, ne: 0x17b9100017b99},
		dm{re: 0x1bd7, si: 0x00000000, ne: 0x17b9900017b9d},
		dm{re: 0x1bd8, si: 0x00000000, ne: 0x17b9d00017ba3},
		dm{re: 0x1bd9, si: 0x00000000, ne: 0x17ba300017ba6},
		dm{re: 0x1bda, si: 0x00000000, ne: 0x17ba600017baa},
		dm{re: 0x1bdb, si: 0x00000000, ne: 0x17baa00017bad},
		dm{re: 0x1bdc, si: 0x00000000, ne: 0x17baa00017bad},
		dm{re: 0x1bdd, si: 0x00000000, ne: 0x17bad00017bb0},
		dm{re: 0x1bde, si: 0x00000000, ne: 0x17bb000017bb7},
		dm{re: 0x1bdf, si: 0x00000000, ne: 0x17bb700017bba},
		dm{re: 0x1be0, si: 0x00000000, ne: 0x17bba00017bc1},
		dm{re: 0x1be1, si: 0x00000000, ne: 0x17bc100017bc4},
		dm{re: 0x1be2, si: 0x00000000, ne: 0x17bc400017bc8},
		dm{re: 0x1be3, si: 0x00000000, ne: 0x11ceb00011cf1},
		dm{re: 0x1be4, si: 0x00000000, ne: 0x17bc800017bd0},
		dm{re: 0x1be5, si: 0x00000000, ne: 0x11cf800011cff},
		dm{re: 0x1be6, si: 0x00000000, ne: 0x17bd000017bdc},
		dm{re: 0x1be7, si: 0x00000000, ne: 0x17bdc00017bdf},
		dm{re: 0x1be8, si: 0x00000000, ne: 0x17bdf00017be3},
		dm{re: 0x1be9, si: 0x00000000, ne: 0x17be300017bea},
		dm{re: 0x1bea, si: 0x00000000, ne: 0x17bea00017bf6},
		dm{re: 0x1beb, si: 0x00000000, ne: 0x17bf600017bfd},
		dm{re: 0x1bec, si: 0x00000000, ne: 0x17bfd00017c05},
		dm{re: 0x1bed, si: 0x00000000, ne: 0x17c0500017c08},
		dm{re: 0x1bee, si: 0x00000000, ne: 0x17c0800017c0e},
		dm{re: 0x1bef, si: 0x00000000, ne: 0x17c0e00017c16},
		dm{re: 0x1bf0, si: 0x00000000, ne: 0x17c1600017c1e},
		dm{re: 0x1bf1, si: 0x00000000, ne: 0x17c1e00017c21},
		dm{re: 0x1bf2, si: 0x00000000, ne: 0x17c2100017c24},
		dm{re: 0x1bf3, si: 0x00000000, ne: 0x17c2400017c27},
		dm{re: 0x1bf4, si: 0x00000000, ne: 0x17c2700017c2a},
		dm{re: -0x0001, si: 0x17c2a00017c30, ne: 0x17c3000017c37},
		dm{re: 0x1bf5, si: 0x00000000, ne: 0x17c3700017c3b},
		dm{re: 0x1bf6, si: 0x00000000, ne: 0x17c3b00017c3f},
		dm{re: 0x1bf7, si: 0x00000000, ne: 0x17c3f00017c42},
		dm{re: 0x1bf8, si: 0x00000000, ne: 0x17c4200017c46},
		dm{re: 0x1bf9, si: 0x00000000, ne: 0x17c4600017c49},
		dm{re: 0x1bfa, si: 0x00000000, ne: 0x17c4900017c4c},
		dm{re: 0x1bfb, si: 0x00000000, ne: 0x17c4c00017c4f},
		dm{re: 0x1bfc, si: 0x00000000, ne: 0x17c4f00017c59},
		dm{re: 0x1bfd, si: 0x00000000, ne: 0x17c5900017c5d},
		dm{re: 0x1bfe, si: 0x00000000, ne: 0x17c5d00017c61},
		dm{re: 0x1bff, si: 0x00000000, ne: 0x17c6100017c65},
		dm{re: 0x1c00, si: 0x00000000, ne: 0x17c6500017c70},
		dm{re: 0x1c01, si: 0x00000000, ne: 0x17c7000017c74},
		dm{re: 0x1c02, si: 0x00000000, ne: 0x17c7400017c78},
		dm{re: 0x1c03, si: 0x00000000, ne: 0x17c4f00017c59},
		dm{re: 0x1c04, si: 0x00000000, ne: 0x17c7800017c7e},
		dm{re: -0x0001, si: 0x17c7e00017c84, ne: 0x17c8400017c8b},
		dm{re: 0x1c05, si: 0x00000000, ne: 0x17c8b00017c8f},
		dm{re: 0x1c06, si: 0x00000000, ne: 0x17c8f00017c93},
		dm{re: 0x1c07, si: 0x00000000, ne: 0x17c9300017c96},
		dm{re: 0x1c08, si: 0x00000000, ne: 0x17b3c00017b42},
		dm{re: 0x1c09, si: 0x00000000, ne: 0x17c9600017c98},
		dm{re: 0x1c0a, si: 0x00000000, ne: 0x17c9800017ca3},
		dm{re: 0x1c0b, si: 0x00000000, ne: 0x17ca300017ca6},
		dm{re: 0x1c0c, si: 0x00000000, ne: 0x17ca600017cb0},
		dm{re: 0x1c0d, si: 0x00000000, ne: 0x17cb000017cb4},
		dm{re: 0x1c0e, si: 0x00000000, ne: 0x17cb400017cb7},
		dm{re: 0x1c0f, si: 0x00000000, ne: 0x17cb700017cbb},
		dm{re: -0x0001, si: 0x17cbb00017cc1, ne: 0x17cc100017cc4},
		dm{re: 0x1c10, si: 0x00000000, ne: 0x17cc400017cc7},
		dm{re: 0x1c11, si: 0x00000000, ne: 0x17cc700017ccb},
		dm{re: 0x1c12, si: 0x00000000, ne: 0x17ccb00017cce},
		dm{re: 0x1c13, si: 0x00000000, ne: 0xee4d0000ee50},
		dm{re: -0x0001, si: 0x17cce00017cd5, ne: 0x17cd500017cd9},
		dm{re: 0x1c14, si: 0x00000000, ne: 0x17cd900017cdc},
		dm{re: 0x1c15, si: 0x00000000, ne: 0x17cdc00017ce6},
		dm{re: 0x1c16, si: 0x00000000, ne: 0x17ce600017cea},
		dm{re: 0x1c17, si: 0x00000000, ne: 0x17cb700017cbb},
		dm{re: 0x1c18, si: 0x00000000, ne: 0x17cea00017cee},
		dm{re: 0x1c19, si: 0x00000000, ne: 0x17cee00017cf1},
		dm{re: 0x1c1a, si: 0x00000000, ne: 0x17cf100017cf5},
		dm{re: 0x1c1b, si: 0x00000000, ne: 0x17cf500017cf8},
		dm{re: 0x1c1c, si: 0x00000000, ne: 0x17cf800017cfc},
		dm{re: -0x0001, si: 0x17cfc00017d02, ne: 0x17d0200017d09},
		dm{re: 0x1c1d, si: 0x00000000, ne: 0x17d0900017d0d},
		dm{re: 0x1c1e, si: 0x00000000, ne: 0x17d0d00017d11},
		dm{re: -0x0001, si: 0x17d1100017d17, ne: 0x17d1700017d22},
		dm{re: -0x0001, si: 0x17d2200017d28, ne: 0x17d2800017d2c},
		dm{re: 0x1c1f, si: 0x00000000, ne: 0x17d2c00017d2f},
		dm{re: 0x1c20, si: 0x00000000, ne: 0x17d2f00017d32},
		dm{re: 0x1c21, si: 0x00000000, ne: 0x17d3200017d36},
		dm{re: 0x1c22, si: 0x00000000, ne: 0x17d3600017d3a},
		dm{re: 0x1c23, si: 0x00000000, ne: 0x17d3a00017d3d},
		dm{re: 0x1c24, si: 0x00000000, ne: 0x17d3d00017d41},
		dm{re: 0x1c25, si: 0x00000000, ne: 0x17d4100017d44},
		dm{re: 0x1c26, si: 0x00000000, ne: 0x17d4400017d4e},
		dm{re: 0x1c27, si: 0x00000000, ne: 0x17d4e00017d52},
		dm{re: 0x1c28, si: 0x00000000, ne: 0x17d5200017d58},
		dm{re: -0x0001, si: 0x17d5800017d5e, ne: 0x17d5e00017d62},
		dm{re: 0x1c29, si: 0x00000000, ne: 0x17d6200017d65},
		dm{re: 0x1c2a, si: 0x00000000, ne: 0x17d6500017d68},
		dm{re: 0x1c2b, si: 0x00000000, ne: 0x17d6800017d6c},
		dm{re: 0x1c2c, si: 0x00000000, ne: 0x17d6c00017d70},
		dm{re: 0x1c2d, si: 0x00000000, ne: 0x17d7000017d73},
		dm{re: 0x1c2e, si: 0x00000000, ne: 0x17d7300017d7a},
		dm{re: 0x1c2f, si: 0x00000000, ne: 0x17d7a00017d7d},
		dm{re: 0x1c30, si: 0x00000000, ne: 0x17d7d00017d80},
		dm{re: 0x1c31, si: 0x00000000, ne: 0x17d8000017d83},
		dm{re: 0x1c32, si: 0x00000000, ne: 0x17d8300017d87},
		dm{re: 0x1c33, si: 0x00000000, ne: 0x17d8700017d8a},
		dm{re: 0x1c34, si: 0x00000000, ne: 0x17d8a00017d8e},
		dm{re: 0x1c35, si: 0x00000000, ne: 0x17d8e00017d99},
		dm{re: 0x1c36, si: 0x00000000, ne: 0x17d8300017d87},
		dm{re: 0x1c37, si: 0x00000000, ne: 0x17d9900017d9c},
		dm{re: 0x1c38, si: 0x00000000, ne: 0x17d9c00017da0},
		dm{re: 0x1c39, si: 0x00000000, ne: 0x17da000017da3},
		dm{re: 0x1c3a, si: 0x00000000, ne: 0x17da300017da6},
		dm{re: 0x1c3b, si: 0x00000000, ne: 0x17da600017da8},
		dm{re: 0x1c3c, si: 0x00000000, ne: 0x17da800017dae},
		dm{re: 0x1c3d, si: 0x00000000, ne: 0x17dae00017db1},
		dm{re: 0x1c3e, si: 0x00000000, ne: 0x17db100017db4},
		dm{re: 0x1c3f, si: 0x00000000, ne: 0xb90a0000b90c},
		dm{re: 0x1c40, si: 0x00000000, ne: 0x17db400017db7},
		dm{re: 0x1c41, si: 0x00000000, ne: 0xc0bf0000c0c1},
		dm{re: 0x1c42, si: 0x00000000, ne: 0x17db700017dba},
		dm{re: 0x1c43, si: 0x00000000, ne: 0x17dba00017dc4},
		dm{re: 0x1c44, si: 0x00000000, ne: 0xb9060000b908},
		dm{re: 0x1c45, si: 0x00000000, ne: 0x17dc400017dca},
		dm{re: 0x1c46, si: 0x00000000, ne: 0x17dca00017dce},
		dm{re: 0x1c47, si: 0x00000000, ne: 0x17dce00017dd4},
		dm{re: 0x1c48, si: 0x00000000, ne: 0x17dd400017ddc},
		dm{re: 0x1c49, si: 0x00000000, ne: 0x17ddc00017ddf},
		dm{re: 0x1c4a, si: 0x00000000, ne: 0x427200004275},
		dm{re: 0x1c4b, si: 0x00000000, ne: 0x17b7d00017b83},
		dm{re: 0x1c4c, si: 0x00000000, ne: 0x17ddf00017de3},
		dm{re: 0x1c4d, si: 0x00000000, ne: 0x370300003706},
		dm{re: 0x1c4e, si: 0x00000000, ne: 0x17de300017ded},
		dm{re: 0x1c4f, si: 0x00000000, ne: 0x17ded00017df6},
		dm{re: 0x1c50, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1c51, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x17dfb00017e01, ne: 0x17dfb00017e01},
		dm{re: -0x0001, si: 0x17e0100017e08, ne: 0x17e0100017e08},
		dm{re: -0x0001, si: 0x17e0800017e0f, ne: 0x17e0800017e0f},
		dm{re: 0x1c53, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x17e1600017e25, ne: 0x17e1600017e25},
		dm{re: 0x1c55, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x17e2d00017e34, ne: 0x17e3400017e3e},
		dm{re: -0x0001, si: 0x17e3e00017e43, ne: 0x17e4300017e4e},
		dm{re: -0x0001, si: 0x17e4e00017e53, ne: 0x17e5300017e60},
		dm{re: -0x0001, si: 0x17e6000017e67, ne: 0x17e6700017e74},
		dm{re: -0x0001, si: 0x17e7400017e7b, ne: 0x17e7b00017e87},
		dm{re: 0x1c57, si: 0x00000000, ne: 0x17e8700017e94},
		dm{re: 0x1c58, si: 0x00000000, ne: 0x17e9400017e9c},
		dm{re: 0x1c59, si: 0x00000000, ne: 0x17e9c00017ea4},
		dm{re: -0x0001, si: 0x17ea400017eab, ne: 0x17eab00017eb8},
		dm{re: -0x0001, si: 0x17eb800017ebe, ne: 0x17ebe00017ec6},
		dm{re: -0x0001, si: 0x17ec600017ecd, ne: 0x17ecd00017ed5},
		dm{re: -0x0001, si: 0x17ed500017edc, ne: 0x17edc00017ee4},
		dm{re: -0x0001, si: 0x17ee400017eeb, ne: 0x17eeb00017ef4},
		dm{re: -0x0001, si: 0x17ef400017efb, ne: 0x17efb00017f08},
		dm{re: -0x0001, si: 0x17f0800017f15, ne: 0x17f1500017f22},
		dm{re: -0x0001, si: 0x17f2200017f29, ne: 0x17f2900017f36},
		dm{re: -0x0001, si: 0x17f3600017f3d, ne: 0x17f3d00017f45},
		dm{re: -0x0001, si: 0x17f4500017f4c, ne: 0x17f4c00017f55},
		dm{re: -0x0001, si: 0x17f5500017f5c, ne: 0x17f5c00017f6c},
		dm{re: 0x1c5a, si: 0x00000000, ne: 0x17e3400017e3e},
		dm{re: 0x1c5b, si: 0x00000000, ne: 0xfb870000fb8e},
		dm{re: 0x1c5c, si: 0x00000000, ne: 0x17f6c00017f78},
		dm{re: 0x1c5d, si: 0x00000000, ne: 0x17f7800017f80},
		dm{re: 0x1c5e, si: 0x00000000, ne: 0x17f8000017f8d},
		dm{re: 0x1c5f, si: 0x00000000, ne: 0x17f8d00017f9a},
		dm{re: -0x0001, si: 0x17f9a00017fab, ne: 0x17fab00017fb5},
		dm{re: -0x0001, si: 0x17fb500017fbb, ne: 0x17fbb00017fc8},
		dm{re: -0x0001, si: 0x17fc800017fce, ne: 0x17fce00017fdb},
		dm{re: -0x0001, si: 0x17fdb00017fe2, ne: 0x17fe200017fef},
		dm{re: -0x0001, si: 0x17fef00017ff6, ne: 0x17ff600018001},
		dm{re: -0x0001, si: 0x1800100018008, ne: 0x1800800018013},
		dm{re: -0x0001, si: 0x180130001801b, ne: 0x1801b00018025},
		dm{re: -0x0001, si: 0x180250001802d, ne: 0x1802d00018039},
		dm{re: -0x0001, si: 0x1803900018041, ne: 0x180410001804c},
		dm{re: 0x1c60, si: 0x00000000, ne: 0x1804c00018058},
		dm{re: 0x1c61, si: 0x00000000, ne: 0x1805800018064},
		dm{re: 0x1c62, si: 0x00000000, ne: 0x180640001806f},
		dm{re: 0x1c63, si: 0x00000000, ne: 0x1806f0001807a},
		dm{re: 0x1c64, si: 0x00000000, ne: 0x1807a00018086},
		dm{re: 0x1c65, si: 0x00000000, ne: 0x1808600018094},
		dm{re: 0x1c66, si: 0x00000000, ne: 0x18094000180a3},
		dm{re: 0x1c67, si: 0x00000000, ne: 0x180a3000180b2},
		dm{re: 0x1c68, si: 0x00000000, ne: 0x180b2000180c2},
		dm{re: 0x1c69, si: 0x00000000, ne: 0xa5470000a549},
		dm{re: 0x1c6a, si: 0x00000000, ne: 0x180c2000180c8},
		dm{re: 0x1c6b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1c6c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1c6e, si: 0x00000000, ne: 0x180ce000180d4},
		dm{re: 0x1c6f, si: 0x00000000, ne: 0x180d4000180da},
		dm{re: 0x1c70, si: 0x00000000, ne: 0x180da000180df},
		dm{re: 0x1c71, si: 0x00000000, ne: 0x180df000180e6},
		dm{re: 0x1c72, si: 0x00000000, ne: 0x180e6000180ef},
		dm{re: 0x1c73, si: 0x00000000, ne: 0x180ef000180f5},
		dm{re: 0x1c74, si: 0x00000000, ne: 0x180f5000180fb},
		dm{re: 0x1c75, si: 0x00000000, ne: 0x180fb00018102},
		dm{re: 0x1c76, si: 0x00000000, ne: 0x1810200018109},
		dm{re: 0x1c77, si: 0x00000000, ne: 0x1810900018110},
		dm{re: 0x1c78, si: 0x00000000, ne: 0x1811000018116},
		dm{re: 0x1c79, si: 0x00000000, ne: 0x181160001811e},
		dm{re: 0x1c7a, si: 0x00000000, ne: 0x1811e00018124},
		dm{re: 0x1c7b, si: 0x00000000, ne: 0x181240001812c},
		dm{re: -0x0001, si: 0x1812c00018135, ne: 0x181350001813e},
		dm{re: 0x1c7c, si: 0x00000000, ne: 0x1813e00018145},
		dm{re: 0x1c7d, si: 0x00000000, ne: 0x181450001814e},
		dm{re: 0x1c7e, si: 0x00000000, ne: 0x1814e00018157},
		dm{re: 0x1c7f, si: 0x00000000, ne: 0x181570001815f},
		dm{re: 0x1c80, si: 0x00000000, ne: 0x1815f00018168},
		dm{re: -0x0001, si: 0x181680001816f, ne: 0x1816f00018176},
		dm{re: 0x1c81, si: 0x00000000, ne: 0x60f900006100},
		dm{re: -0x0001, si: 0x181760001817d, ne: 0x1817d00018184},
		dm{re: -0x0001, si: 0x181840001818d, ne: 0x1818d00018196},
		dm{re: -0x0001, si: 0x181960001819d, ne: 0x1819d000181a4},
		dm{re: -0x0001, si: 0x181a4000181ab, ne: 0x181ab000181b2},
		dm{re: 0x1c83, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1c84, si: 0x00000000, ne: 0x181b8000181bf},
		dm{re: 0x1c85, si: 0x00000000, ne: 0x181bf000181c7},
		dm{re: 0x1c86, si: 0x00000000, ne: 0x181c7000181cf},
		dm{re: 0x1c87, si: 0x00000000, ne: 0x181cf000181d6},
		dm{re: -0x0001, si: 0x181e2000181ea, ne: 0x181e2000181ea},
		dm{re: -0x0001, si: 0x181f0000181f5, ne: 0x181f5000181fb},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1c8b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1c8c, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1c8d, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1c90, si: 0x00000000, ne: 0x1820e00018214},
		dm{re: 0x1c91, si: 0x00000000, ne: 0xc80e0000c813},
		dm{re: 0x1c92, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1c94, si: 0x00000000, ne: 0x1821a00018225},
		dm{re: 0x1c95, si: 0x00000000, ne: 0x182250001822b},
		dm{re: 0x1c96, si: 0x00000000, ne: 0x1822b00018238},
		dm{re: 0x1c97, si: 0x00000000, ne: 0x182380001823d},
		dm{re: 0x1c98, si: 0x00000000, ne: 0x1823d00018245},
		dm{re: 0x1c99, si: 0x00000000, ne: 0x182450001824b},
		dm{re: 0x1c9a, si: 0x00000000, ne: 0x1824b00018253},
		dm{re: 0x1c9c, si: 0x00000000, ne: 0x182570001825f},
		dm{re: 0x1c9d, si: 0x00000000, ne: 0x1825f00018269},
		dm{re: 0x1c9e, si: 0x00000000, ne: 0x1826900018272},
		dm{re: 0x1c9f, si: 0x00000000, ne: 0x182720001827c},
		dm{re: 0x1ca0, si: 0x00000000, ne: 0x1827c00018289},
		dm{re: 0x1ca1, si: 0x00000000, ne: 0x99c9000099cd},
		dm{re: 0x1ca2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ca4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ca5, si: 0x00000000, ne: 0x1828900018292},
		dm{re: 0x1ca6, si: 0x00000000, ne: 0x182920001829b},
		dm{re: -0x0001, si: 0x1829b000182a4, ne: 0x182a4000182ad},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x182b3000182c2},
		dm{re: 0x1caa, si: 0x00000000, ne: 0x182c8000182d7},
		dm{re: -0x0001, si: 0x182d7000182e8, ne: 0x182e8000182f9},
		dm{re: 0x1cab, si: 0x00000000, ne: 0x182f900018305},
		dm{re: 0x1cac, si: 0x00000000, ne: 0x1830500018312},
		dm{re: 0x1cad, si: 0x00000000, ne: 0x1831200018320},
		dm{re: 0x1cae, si: 0x00000000, ne: 0x1832000018328},
		dm{re: 0x1caf, si: 0x00000000, ne: 0xca6a0000ca72},
		dm{re: 0x1cb0, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1832e00018336, ne: 0x183360001833e},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1835400018360, ne: 0x183600001836f},
		dm{re: 0x1cb4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1cb6, si: 0x00000000, ne: 0x1837e00018385},
		dm{re: 0x1cb7, si: 0x00000000, ne: 0x183850001838c},
		dm{re: 0x1cb8, si: 0x00000000, ne: 0x1838c00018391},
		dm{re: 0x1cb9, si: 0x00000000, ne: 0x183910001839b},
		dm{re: 0x1cba, si: 0x00000000, ne: 0x1839b000183a2},
		dm{re: 0x1cbb, si: 0x00000000, ne: 0x183a2000183ad},
		dm{re: 0x1cbc, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1cbd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1cbe, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1cc2, si: 0x00000000, ne: 0x183bc000183c5},
		dm{re: 0x1cc3, si: 0x00000000, ne: 0x183c5000183ce},
		dm{re: 0x1cc4, si: 0x00000000, ne: 0x183ce000183d7},
		dm{re: 0x1cc5, si: 0x00000000, ne: 0x183d7000183e2},
		dm{re: 0x1cc6, si: 0x00000000, ne: 0x183e2000183e8},
		dm{re: 0x1cc7, si: 0x00000000, ne: 0x183e8000183ef},
		dm{re: 0x1cc8, si: 0x00000000, ne: 0x183ef000183fb},
		dm{re: 0x1cc9, si: 0x00000000, ne: 0x183fb00018407},
		dm{re: 0x1cca, si: 0x00000000, ne: 0x1840700018410},
		dm{re: 0x1ccb, si: 0x00000000, ne: 0x184100001841a},
		dm{re: 0x1ccc, si: 0x00000000, ne: 0x1841a0001841e},
		dm{re: 0x1ccd, si: 0x00000000, ne: 0x1841e00018423},
		dm{re: 0x1cce, si: 0x00000000, ne: 0x184230001842b},
		dm{re: 0x1ccf, si: 0x00000000, ne: 0x1842b00018437},
		dm{re: 0x1cd0, si: 0x00000000, ne: 0x184370001843f},
		dm{re: 0x1cd1, si: 0x00000000, ne: 0x1843f00018444},
		dm{re: 0x1cd2, si: 0x00000000, ne: 0x184440001844e},
		dm{re: 0x1cd3, si: 0x00000000, ne: 0x42b6000042bd},
		dm{re: 0x1cd4, si: 0x00000000, ne: 0x1844e00018456},
		dm{re: 0x1cd5, si: 0x00000000, ne: 0x184560001845e},
		dm{re: 0x1cd6, si: 0x00000000, ne: 0x1845e00018466},
		dm{re: 0x1cd7, si: 0x00000000, ne: 0x184660001846f},
		dm{re: 0x1cd8, si: 0x00000000, ne: 0x1846f00018475},
		dm{re: 0x1cd9, si: 0x00000000, ne: 0x1847500018479},
		dm{re: 0x1cda, si: 0x00000000, ne: 0x184790001847e},
		dm{re: 0x1cdb, si: 0x00000000, ne: 0x1847e00018483},
		dm{re: 0x1cdc, si: 0x00000000, ne: 0x1848300018488},
		dm{re: 0x1cdd, si: 0x00000000, ne: 0x184880001848d},
		dm{re: -0x0001, si: 0x1848d00018496, ne: 0x184960001849f},
		dm{re: -0x0001, si: 0x1849f000184a5, ne: 0x184a5000184ac},
		dm{re: -0x0001, si: 0x184ac000184b6, ne: 0x184b6000184bd},
		dm{re: 0x1cde, si: 0x00000000, ne: 0x184bd000184c4},
		dm{re: 0x1cdf, si: 0x00000000, ne: 0x184c4000184c9},
		dm{re: 0x1ce0, si: 0x00000000, ne: 0x184c9000184d0},
		dm{re: 0x1ce1, si: 0x00000000, ne: 0x184d0000184d3},
		dm{re: 0x1ce2, si: 0x00000000, ne: 0x184d3000184d9},
		dm{re: 0x1ce3, si: 0x00000000, ne: 0x184d9000184dd},
		dm{re: -0x0001, si: 0x184dd000184e3, ne: 0x184e3000184ea},
		dm{re: 0x1ce4, si: 0x00000000, ne: 0x178c0000178c4},
		dm{re: 0x1ce5, si: 0x00000000, ne: 0x15db900015dbf},
		dm{re: 0x1ce6, si: 0x00000000, ne: 0x184ea000184f0},
		dm{re: 0x1ce7, si: 0x00000000, ne: 0x184f0000184f5},
		dm{re: 0x1ce8, si: 0x00000000, ne: 0x184f500018500},
		dm{re: 0x1ce9, si: 0x00000000, ne: 0x185000001850c},
		dm{re: 0x1cea, si: 0x00000000, ne: 0x1850c00018514},
		dm{re: 0x1ceb, si: 0x00000000, ne: 0x1851400018519},
		dm{re: 0x1cec, si: 0x00000000, ne: 0x185190001851e},
		dm{re: 0x1ced, si: 0x00000000, ne: 0x1851e00018526},
		dm{re: 0x1cee, si: 0x00000000, ne: 0x185260001852c},
		dm{re: 0x1cef, si: 0x00000000, ne: 0x1852c00018533},
		dm{re: -0x0001, si: 0x1853300018539, ne: 0x1853900018545},
		dm{re: 0x1cf0, si: 0x00000000, ne: 0x1854500018551},
		dm{re: 0x1cf1, si: 0x00000000, ne: 0x1855100018558},
		dm{re: -0x0001, si: 0x1855800018561, ne: 0x185610001856d},
		dm{re: -0x0001, si: 0x1856d00018577, ne: 0x185770001857e},
		dm{re: -0x0001, si: 0x1857e00018588, ne: 0x185880001858f},
		dm{re: 0x1cf2, si: 0x00000000, ne: 0x15e3500015e3a},
		dm{re: 0x1cf3, si: 0x00000000, ne: 0x1858f00018596},
		dm{re: 0x1cf4, si: 0x00000000, ne: 0x18596000185a2},
		dm{re: 0x1cf5, si: 0x00000000, ne: 0x185a2000185a9},
		dm{re: 0x1cf6, si: 0x00000000, ne: 0x185a9000185ae},
		dm{re: 0x1cf7, si: 0x00000000, ne: 0x185ae000185b1},
		dm{re: 0x1cf8, si: 0x00000000, ne: 0x185b1000185b6},
		dm{re: -0x0001, si: 0x185b6000185bc, ne: 0x185bc000185c3},
		dm{re: 0x1cf9, si: 0x00000000, ne: 0x185c3000185cb},
		dm{re: 0x1cfa, si: 0x00000000, ne: 0x185cb000185d6},
		dm{re: 0x1cfb, si: 0x00000000, ne: 0x185d6000185de},
		dm{re: 0x1cfc, si: 0x00000000, ne: 0x185de000185e5},
		dm{re: 0x1cfd, si: 0x00000000, ne: 0x185e5000185e9},
		dm{re: 0x1cfe, si: 0x00000000, ne: 0x185e9000185f0},
		dm{re: 0x1cff, si: 0x00000000, ne: 0x185f0000185fc},
		dm{re: 0x1d00, si: 0x00000000, ne: 0x185fc00018603},
		dm{re: 0x1d01, si: 0x00000000, ne: 0x186030001860e},
		dm{re: 0x1d02, si: 0x00000000, ne: 0x1860e0001861a},
		dm{re: 0x1d03, si: 0x00000000, ne: 0x1861a00018620},
		dm{re: -0x0001, si: 0x1862000018627, ne: 0x1862700018631},
		dm{re: 0x1d04, si: 0x00000000, ne: 0x186310001863a},
		dm{re: 0x1d05, si: 0x00000000, ne: 0x1863a00018645},
		dm{re: 0x1d06, si: 0x00000000, ne: 0x186450001864c},
		dm{re: 0x1d07, si: 0x00000000, ne: 0x1864c00018656},
		dm{re: -0x0001, si: 0x186560001865b, ne: 0x1865b00018664},
		dm{re: -0x0001, si: 0x186640001866a, ne: 0x3d5d00003d63},
		dm{re: -0x0001, si: 0x1866a00018670, ne: 0x186700001867a},
		dm{re: -0x0001, si: 0x1867a00018680, ne: 0x1868000018688},
		dm{re: -0x0001, si: 0x186880001868e, ne: 0x1868e00018695},
		dm{re: 0x1d08, si: 0x00000000, ne: 0x18695000186a0},
		dm{re: -0x0001, si: 0x186a0000186a6, ne: 0x186a6000186ac},
		dm{re: -0x0001, si: 0x186ac000186b6, ne: 0x186b6000186c1},
		dm{re: 0x1d09, si: 0x00000000, ne: 0xee4d0000ee50},
		dm{re: -0x0001, si: 0x186c1000186cb, ne: 0xee4d0000ee50},
		dm{re: -0x0001, si: 0x186cb000186d1, ne: 0x17cd900017cdc},
		dm{re: 0x1d0a, si: 0x00000000, ne: 0x186d1000186d4},
		dm{re: 0x1d0b, si: 0x00000000, ne: 0x186d4000186d7},
		dm{re: -0x0001, si: 0x186d7000186dd, ne: 0x186dd000186e0},
		dm{re: 0x1d0c, si: 0x00000000, ne: 0x186e0000186e3},
		dm{re: -0x0001, si: 0x186e3000186e9, ne: 0x17d6500017d68},
		dm{re: -0x0001, si: 0x186e9000186ef, ne: 0x186ef000186f2},
		dm{re: 0x1d0d, si: 0x00000000, ne: 0x3d6900003d6f},
		dm{re: 0x1d0e, si: 0x00000000, ne: 0x186f2000186fc},
		dm{re: 0x1d0f, si: 0x00000000, ne: 0x186fc00018702},
		dm{re: 0x1d10, si: 0x00000000, ne: 0x187020001870d},
		dm{re: -0x0001, si: 0x1870d00018717, ne: 0x183bc000183c5},
		dm{re: 0x1d11, si: 0x00000000, ne: 0x187170001871b},
		dm{re: 0x1d12, si: 0x00000000, ne: 0x1871b00018721},
		dm{re: 0x1d13, si: 0x00000000, ne: 0x1872100018727},
		dm{re: 0x1d14, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1d16, si: 0x00000000, ne: 0x1872f00018736},
		dm{re: 0x1d17, si: 0x00000000, ne: 0x39c0000039f},
		dm{re: -0x0001, si: 0x1873600018746, ne: 0x187460001874d},
		dm{re: 0x1d18, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1d19, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1d1a, si: 0x00000000, ne: 0x1874d00018757},
		dm{re: 0x1d1b, si: 0x00000000, ne: 0x187570001875e},
		dm{re: -0x0001, si: 0x1875e00018767, ne: 0x37200000377},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1876c00018778},
		dm{re: 0x1d1e, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1d1f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1d21, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1d22, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1d23, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1d25, si: 0x00000000, ne: 0x1878900018790},
		dm{re: 0x1d26, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1d27, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x187980001879c},
		dm{re: -0x0001, si: 0x00000000, ne: 0x187a3000187ab},
		dm{re: 0x1d2a, si: 0x00000000, ne: 0x187b1000187b9},
		dm{re: -0x0001, si: 0x187b9000187c7, ne: 0x187c7000187cf},
		dm{re: 0x1d2b, si: 0x00000000, ne: 0x187cf000187d9},
		dm{re: 0x1d2c, si: 0x00000000, ne: 0x187d9000187e1},
		dm{re: -0x0001, si: 0x00000000, ne: 0x187e9000187f0},
		dm{re: -0x0001, si: 0x187f5000187fa, ne: 0x187fa00018801},
		dm{re: -0x0001, si: 0x1880100018806, ne: 0x188060001880c},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1881300018822, ne: 0x1882200018829},
		dm{re: -0x0001, si: 0x00000000, ne: 0x188310001883d},
		dm{re: 0x1d32, si: 0x00000000, ne: 0x188430001884c},
		dm{re: 0x1d33, si: 0x00000000, ne: 0x1884c00018851},
		dm{re: 0x1d34, si: 0x00000000, ne: 0x4a2c00004a31},
		dm{re: 0x1d35, si: 0x00000000, ne: 0x1885100018859},
		dm{re: 0x1d36, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1886300018873, ne: 0x188730001887d},
		dm{re: -0x0001, si: 0x1887d00018887, ne: 0x1888700018892},
		dm{re: 0x1d39, si: 0x00000000, ne: 0x188920001889b},
		dm{re: -0x0001, si: 0x1889b000188aa, ne: 0x188aa000188b3},
		dm{re: 0x1d3a, si: 0x00000000, ne: 0x188b3000188ba},
		dm{re: 0x1d3b, si: 0x00000000, ne: 0x17b3900017b3c},
		dm{re: 0x1d3c, si: 0x00000000, ne: 0x188ba000188c3},
		dm{re: -0x0001, si: 0x188c3000188d1, ne: 0x188d1000188df},
		dm{re: -0x0001, si: 0x188df000188e6, ne: 0x188e6000188ed},
		dm{re: 0x1d3d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1d3f, si: 0x00000000, ne: 0x188f3000188fa},
		dm{re: -0x0001, si: 0x188fa00018904, ne: 0x189040001890e},
		dm{re: -0x0001, si: 0x1890e0001891d, ne: 0x1891d0001892c},
		dm{re: -0x0001, si: 0x1892c0001893d, ne: 0x1893d0001894e},
		dm{re: -0x0001, si: 0x1894e0001895a, ne: 0xbd000000bd},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1d42, si: 0x00000000, ne: 0x17c2100017c24},
		dm{re: 0x1d43, si: 0x00000000, ne: 0x17c4600017c49},
		dm{re: 0x1d44, si: 0x00000000, ne: 0x1896400018967},
		dm{re: 0x1d46, si: 0x00000000, ne: 0x1897100018982},
		dm{re: 0x1d47, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1d48, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1d49, si: 0x00000000, ne: 0x1898200018991},
		dm{re: 0x1d4a, si: 0x00000000, ne: 0x1899100018999},
		dm{re: 0x1d4b, si: 0x00000000, ne: 0x18999000189aa},
		dm{re: 0x1d4c, si: 0x00000000, ne: 0x189aa000189b7},
		dm{re: 0x1d4e, si: 0x00000000, ne: 0x189bd000189c8},
		dm{re: -0x0001, si: 0x189c8000189ce, ne: 0x189ce000189de},
		dm{re: 0x1d4f, si: 0x00000000, ne: 0x189de000189eb},
		dm{re: 0x1d50, si: 0x00000000, ne: 0x189eb000189fc},
		dm{re: 0x1d51, si: 0x00000000, ne: 0x189fc00018a09},
		dm{re: 0x1d52, si: 0x00000000, ne: 0x18a0900018a1a},
		dm{re: 0x1d53, si: 0x00000000, ne: 0x18a1a00018a2a},
		dm{re: 0x1d54, si: 0x00000000, ne: 0x18a2a00018a3e},
		dm{re: 0x1d55, si: 0x00000000, ne: 0x18a3e00018a4f},
		dm{re: 0x1d56, si: 0x00000000, ne: 0x18a4f00018a5c},
		dm{re: 0x1d57, si: 0x00000000, ne: 0x18a5c00018a65},
		dm{re: 0x1d58, si: 0x00000000, ne: 0x18a6500018a6e},
		dm{re: 0x1d59, si: 0x00000000, ne: 0x18a6e00018a74},
		dm{re: 0x1d5a, si: 0x00000000, ne: 0x18a7400018a7f},
		dm{re: 0x1d5b, si: 0x00000000, ne: 0x18a7f00018a87},
		dm{re: 0x1d5c, si: 0x00000000, ne: 0x18a8700018a92},
		dm{re: 0x1d5d, si: 0x00000000, ne: 0x18a9200018a99},
		dm{re: 0x1d5e, si: 0x00000000, ne: 0x18a9900018aa0},
		dm{re: -0x0001, si: 0x18aa000018aa8, ne: 0x18aa800018ab0},
		dm{re: -0x0001, si: 0x18ab000018aca, ne: 0x18aca00018ae5},
		dm{re: -0x0001, si: 0x18ae500018aef, ne: 0x18aef00018afa},
		dm{re: 0x1d5f, si: 0x00000000, ne: 0x18afa00018b01},
		dm{re: 0x1d60, si: 0x00000000, ne: 0x18b0100018b06},
		dm{re: 0x1d61, si: 0x00000000, ne: 0x18b0600018b0f},
		dm{re: 0x1d62, si: 0x00000000, ne: 0x18b0f00018b14},
		dm{re: 0x1d63, si: 0x00000000, ne: 0x18b1400018b1a},
		dm{re: 0x1d64, si: 0x00000000, ne: 0x18b1a00018b24},
		dm{re: 0x1d65, si: 0x00000000, ne: 0x18b2400018b31},
		dm{re: 0x1d66, si: 0x00000000, ne: 0x18b3100018b3f},
		dm{re: 0x1d67, si: 0x00000000, ne: 0x18b3f00018b48},
		dm{re: 0x1d68, si: 0x00000000, ne: 0x18b4800018b56},
		dm{re: 0x1d69, si: 0x00000000, ne: 0x18b5600018b5c},
		dm{re: 0x1d6a, si: 0x00000000, ne: 0x18b5c00018b69},
		dm{re: 0x1d6b, si: 0x00000000, ne: 0x18b6900018b6f},
		dm{re: 0x1d6c, si: 0x00000000, ne: 0x18b6f00018b75},
		dm{re: 0x1d6d, si: 0x00000000, ne: 0x18b7500018b7f},
		dm{re: 0x1d6e, si: 0x00000000, ne: 0x18b7f00018b85},
		dm{re: 0x1d6f, si: 0x00000000, ne: 0x18b8500018b92},
		dm{re: 0x1d70, si: 0x00000000, ne: 0x18b9200018ba2},
		dm{re: 0x1d71, si: 0x00000000, ne: 0x18ba200018bac},
		dm{re: 0x1d72, si: 0x00000000, ne: 0x18bac00018bb7},
		dm{re: 0x1d73, si: 0x00000000, ne: 0x18bb700018bc0},
		dm{re: 0x1d74, si: 0x00000000, ne: 0x18bc000018bc6},
		dm{re: 0x1d75, si: 0x00000000, ne: 0x18bc600018bc8},
		dm{re: 0x1d76, si: 0x00000000, ne: 0x18bc800018bcb},
		dm{re: 0x1d77, si: 0x00000000, ne: 0x18bcb00018bd4},
		dm{re: 0x1d78, si: 0x00000000, ne: 0x18bd400018be9},
		dm{re: 0x1d79, si: 0x00000000, ne: 0x18be900018bf0},
		dm{re: 0x1d7a, si: 0x00000000, ne: 0x18bf000018bf9},
		dm{re: 0x1d7b, si: 0x00000000, ne: 0x18bf900018c04},
		dm{re: 0x1d7c, si: 0x00000000, ne: 0x18c0400018c1c},
		dm{re: 0x1d7d, si: 0x00000000, ne: 0x18c1c00018c26},
		dm{re: 0x1d7e, si: 0x00000000, ne: 0x18c2600018c30},
		dm{re: -0x0001, si: 0x18c3000018c3b, ne: 0x18c3b00018c40},
		dm{re: 0x1d7f, si: 0x00000000, ne: 0x18c4000018c44},
		dm{re: 0x1d80, si: 0x00000000, ne: 0x18c4400018c4a},
		dm{re: 0x1d81, si: 0x00000000, ne: 0x18c4a00018c4f},
		dm{re: 0x1d82, si: 0x00000000, ne: 0x18c4f00018c54},
		dm{re: 0x1d83, si: 0x00000000, ne: 0x18c5400018c5c},
		dm{re: 0x1d84, si: 0x00000000, ne: 0x18c5c00018c65},
		dm{re: 0x1d85, si: 0x00000000, ne: 0x18c6500018c6b},
		dm{re: 0x1d86, si: 0x00000000, ne: 0x18c6b00018c75},
		dm{re: 0x1d87, si: 0x00000000, ne: 0x18c7500018c7d},
		dm{re: 0x1d88, si: 0x00000000, ne: 0x18c7d00018c88},
		dm{re: 0x1d89, si: 0x00000000, ne: 0x18c8800018c91},
		dm{re: 0x1d8a, si: 0x00000000, ne: 0x18c9100018c9a},
		dm{re: 0x1d8b, si: 0x00000000, ne: 0x18c9a00018ca0},
		dm{re: 0x1d8c, si: 0x00000000, ne: 0x18ca000018ca9},
		dm{re: 0x1d8d, si: 0x00000000, ne: 0x18ca900018cb5},
		dm{re: -0x0001, si: 0x18cb500018cc1, ne: 0x18cb500018cc1},
		dm{re: 0x1d8e, si: 0x00000000, ne: 0x18cc100018cc8},
		dm{re: 0x1d8f, si: 0x00000000, ne: 0x18cc800018ccf},
		dm{re: 0x1d90, si: 0x00000000, ne: 0x18ccf00018cda},
		dm{re: 0x1d91, si: 0x00000000, ne: 0x18cda00018ce2},
		dm{re: 0x1d92, si: 0x00000000, ne: 0x18ce200018cea},
		dm{re: 0x1d93, si: 0x00000000, ne: 0x18cea00018cf1},
		dm{re: 0x1d94, si: 0x00000000, ne: 0x18cf100018cfc},
		dm{re: 0x1d95, si: 0x00000000, ne: 0x18cfc00018d05},
		dm{re: 0x1d96, si: 0x00000000, ne: 0x18d0500018d0c},
		dm{re: 0x1d97, si: 0x00000000, ne: 0x18d0c00018d19},
		dm{re: 0x1d98, si: 0x00000000, ne: 0x18d1900018d21},
		dm{re: 0x1d99, si: 0x00000000, ne: 0x18d2100018d29},
		dm{re: 0x1d9a, si: 0x00000000, ne: 0x18d2900018d31},
		dm{re: 0x1d9b, si: 0x00000000, ne: 0x18d3100018d3a},
		dm{re: 0x1d9c, si: 0x00000000, ne: 0x18d3a00018d42},
		dm{re: 0x1d9d, si: 0x00000000, ne: 0x18d4200018d4e},
		dm{re: 0x1d9e, si: 0x00000000, ne: 0x18d4e00018d56},
		dm{re: 0x1d9f, si: 0x00000000, ne: 0x18d5600018d65},
		dm{re: 0x1da0, si: 0x00000000, ne: 0x18d6500018d73},
		dm{re: 0x1da1, si: 0x00000000, ne: 0x18d7300018d88},
		dm{re: 0x1da2, si: 0x00000000, ne: 0x18d8800018d95},
		dm{re: 0x1da3, si: 0x00000000, ne: 0x18d9500018db2},
		dm{re: 0x1da4, si: 0x00000000, ne: 0x18db200018dcc},
		dm{re: 0x1da5, si: 0x00000000, ne: 0x18dcc00018dd9},
		dm{re: 0x1da6, si: 0x00000000, ne: 0x18dd900018de5},
		dm{re: 0x1da7, si: 0x00000000, ne: 0x18de500018dee},
		dm{re: 0x1da8, si: 0x00000000, ne: 0x18dee00018dfe},
		dm{re: 0x1da9, si: 0x00000000, ne: 0x18dfe00018e0b},
		dm{re: 0x1daa, si: 0x00000000, ne: 0x18e0b00018e1a},
		dm{re: 0x1dab, si: 0x00000000, ne: 0x18e1a00018e27},
		dm{re: 0x1dac, si: 0x00000000, ne: 0x18e2700018e32},
		dm{re: 0x1dad, si: 0x00000000, ne: 0x18e3200018e3f},
		dm{re: 0x1dae, si: 0x00000000, ne: 0x18e3f00018e48},
		dm{re: 0x1daf, si: 0x00000000, ne: 0x18e4800018e4d},
		dm{re: 0x1db0, si: 0x00000000, ne: 0x18e4d00018e51},
		dm{re: 0x1db1, si: 0x00000000, ne: 0x18e5100018e55},
		dm{re: 0x1db2, si: 0x00000000, ne: 0x18e5500018e5d},
		dm{re: 0x1db3, si: 0x00000000, ne: 0x18e5d00018e6c},
		dm{re: 0x1db4, si: 0x00000000, ne: 0x18e6c00018e78},
		dm{re: 0x1db5, si: 0x00000000, ne: 0x18e7800018e85},
		dm{re: 0x1db6, si: 0x00000000, ne: 0x18e8500018e8d},
		dm{re: 0x1db7, si: 0x00000000, ne: 0x18e8d00018e95},
		dm{re: 0x1db8, si: 0x00000000, ne: 0x18e9500018e9d},
		dm{re: 0x1db9, si: 0x00000000, ne: 0x18e9d00018ea3},
		dm{re: 0x1dba, si: 0x00000000, ne: 0x18ea300018eaf},
		dm{re: 0x1dbb, si: 0x00000000, ne: 0x18eaf00018eb8},
		dm{re: 0x1dbc, si: 0x00000000, ne: 0x18eb800018ec1},
		dm{re: 0x1dbd, si: 0x00000000, ne: 0x18ec100018ec8},
		dm{re: 0x1dbe, si: 0x00000000, ne: 0x18ec800018ecf},
		dm{re: 0x1dbf, si: 0x00000000, ne: 0x18ecf00018ed9},
		dm{re: 0x1dc0, si: 0x00000000, ne: 0x18ed900018ee6},
		dm{re: 0x1dc1, si: 0x00000000, ne: 0x18ee600018eed},
		dm{re: 0x1dc2, si: 0x00000000, ne: 0x18eed00018ef4},
		dm{re: 0x1dc3, si: 0x00000000, ne: 0x18ef400018eff},
		dm{re: 0x1dc4, si: 0x00000000, ne: 0x18eff00018f06},
		dm{re: 0x1dc5, si: 0x00000000, ne: 0x18f0600018f11},
		dm{re: 0x1dc6, si: 0x00000000, ne: 0x18f1100018f1b},
		dm{re: 0x1dc7, si: 0x00000000, ne: 0x18f1b00018f2a},
		dm{re: 0x1dc8, si: 0x00000000, ne: 0x18f2a00018f37},
		dm{re: 0x1dc9, si: 0x00000000, ne: 0x18f3700018f43},
		dm{re: -0x0001, si: 0x18f4300018f56, ne: 0x18f4300018f56},
		dm{re: -0x0001, si: 0x18f5600018f68, ne: 0x18f5600018f68},
		dm{re: 0x1dca, si: 0x00000000, ne: 0x18f6800018f74},
		dm{re: 0x1dcb, si: 0x00000000, ne: 0x18f7400018f82},
		dm{re: 0x1dcc, si: 0x00000000, ne: 0x18f8200018f90},
		dm{re: 0x1dcd, si: 0x00000000, ne: 0x18f9000018fa0},
		dm{re: 0x1dce, si: 0x00000000, ne: 0x18fa000018faf},
		dm{re: 0x1dcf, si: 0x00000000, ne: 0x18faf00018fc2},
		dm{re: 0x1dd0, si: 0x00000000, ne: 0x18fc200018fd2},
		dm{re: -0x0001, si: 0x18fd200018fe4, ne: 0x18fd200018fe4},
		dm{re: 0x1dd1, si: 0x00000000, ne: 0x18fe400018ff1},
		dm{re: -0x0001, si: 0x18ff100018ffa, ne: 0x18ffa00019008},
		dm{re: 0x1dd2, si: 0x00000000, ne: 0x18f8200018f90},
		dm{re: 0x1dd3, si: 0x00000000, ne: 0x1900800019018},
		dm{re: -0x0001, si: 0x1901800019021, ne: 0x1902100019032},
		dm{re: 0x1dd4, si: 0x00000000, ne: 0x1903200019042},
		dm{re: 0x1dd5, si: 0x00000000, ne: 0x1904200019053},
		dm{re: 0x1dd6, si: 0x00000000, ne: 0x1905300019064},
		dm{re: 0x1dd7, si: 0x00000000, ne: 0x1906400019078},
		dm{re: 0x1dd8, si: 0x00000000, ne: 0x190780001908a},
		dm{re: 0x1dd9, si: 0x00000000, ne: 0x1908a0001909a},
		dm{re: 0x1dda, si: 0x00000000, ne: 0x1909a000190aa},
		dm{re: -0x0001, si: 0x190aa000190b3, ne: 0x190b3000190c1},
		dm{re: 0x1ddb, si: 0x00000000, ne: 0x190c1000190d2},
		dm{re: -0x0001, si: 0x190d2000190db, ne: 0x190b3000190c1},
		dm{re: 0x1ddc, si: 0x00000000, ne: 0x190db000190ee},
		dm{re: 0x1ddd, si: 0x00000000, ne: 0x190ee000190fe},
		dm{re: 0x1dde, si: 0x00000000, ne: 0x190fe0001910b},
		dm{re: 0x1ddf, si: 0x00000000, ne: 0x1910b00019120},
		dm{re: 0x1de0, si: 0x00000000, ne: 0x1912000019131},
		dm{re: 0x1de1, si: 0x00000000, ne: 0x191310001913e},
		dm{re: 0x1de2, si: 0x00000000, ne: 0x1913e00019146},
		dm{re: -0x0001, si: 0x1914600019151, ne: 0x191510001915c},
		dm{re: -0x0001, si: 0x1915c0001916a, ne: 0x1915c0001916a},
		dm{re: -0x0001, si: 0x1916a00019179, ne: 0x1916a00019179},
		dm{re: -0x0001, si: 0x1917900019183, ne: 0x1917900019183},
		dm{re: 0x1de3, si: 0x00000000, ne: 0x191830001918d},
		dm{re: 0x1de4, si: 0x00000000, ne: 0x1918d00019194},
		dm{re: 0x1de5, si: 0x00000000, ne: 0x191940001919f},
		dm{re: 0x1de6, si: 0x00000000, ne: 0x1919f000191a8},
		dm{re: 0x1de7, si: 0x00000000, ne: 0x191a8000191ad},
		dm{re: 0x1de8, si: 0x00000000, ne: 0x191a8000191ad},
		dm{re: 0x1de9, si: 0x00000000, ne: 0x729a0000729e},
		dm{re: 0x1dea, si: 0x00000000, ne: 0x191ad000191b2},
		dm{re: 0x1deb, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ded, si: 0x00000000, ne: 0x191b6000191ba},
		dm{re: -0x0001, si: 0x191be000191c7, ne: 0x191c7000191cf},
		dm{re: 0x1def, si: 0x00000000, ne: 0x191cf000191d6},
		dm{re: 0x1df0, si: 0x00000000, ne: 0x191d6000191e0},
		dm{re: 0x1df1, si: 0x00000000, ne: 0x191e0000191e6},
		dm{re: 0x1df2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1df3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1df4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1df6, si: 0x00000000, ne: 0x191ea000191fa},
		dm{re: 0x1df7, si: 0x00000000, ne: 0x191fa00019204},
		dm{re: 0x1df8, si: 0x00000000, ne: 0x192040001920a},
		dm{re: 0x1df9, si: 0x00000000, ne: 0x1920a00019211},
		dm{re: 0x1dfa, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1dfd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1dfe, si: 0x00000000, ne: 0x1921e00019220},
		dm{re: 0x1dff, si: 0x00000000, ne: 0x1922000019227},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1e05, si: 0x00000000, ne: 0x3a1300003a19},
		dm{re: -0x0001, si: 0x1924400019252, ne: 0x192520001925b},
		dm{re: -0x0001, si: 0x1925b00019266, ne: 0x192660001926c},
		dm{re: -0x0001, si: 0x1926c00019278, ne: 0x192780001927f},
		dm{re: -0x0001, si: 0x1927f0001928b, ne: 0x1928b00019292},
		dm{re: 0x1e06, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x19298000192a2},
		dm{re: -0x0001, si: 0x192a8000192b7, ne: 0x192b7000192bd},
		dm{re: 0x1e09, si: 0x00000000, ne: 0x192bd000192c4},
		dm{re: -0x0001, si: 0x192c4000192cf, ne: 0x192bd000192c4},
		dm{re: -0x0001, si: 0x192cf000192da, ne: 0x192da000192e1},
		dm{re: -0x0001, si: 0x192e1000192ef, ne: 0x192ef000192f7},
		dm{re: -0x0001, si: 0x192f700019300, ne: 0x1930000019309},
		dm{re: -0x0001, si: 0x1930900019312, ne: 0x193120001931c},
		dm{re: -0x0001, si: 0x1931c00019325, ne: 0x193250001932f},
		dm{re: 0x1e0a, si: 0x00000000, ne: 0x1932f00019337},
		dm{re: -0x0001, si: 0x1933700019340, ne: 0x1934000019349},
		dm{re: -0x0001, si: 0x1934900019352, ne: 0x193520001935b},
		dm{re: -0x0001, si: 0x1935b00019367, ne: 0x193670001936f},
		dm{re: -0x0001, si: 0x1936f00019377, ne: 0x1937700019382},
		dm{re: -0x0001, si: 0x193820001938b, ne: 0x1938b00019397},
		dm{re: 0x1e0b, si: 0x00000000, ne: 0x19397000193a1},
		dm{re: -0x0001, si: 0x193a1000193aa, ne: 0x193aa000193b3},
		dm{re: -0x0001, si: 0x193b6000193bb, ne: 0x193bb000193c3},
		dm{re: -0x0001, si: 0x193c3000193cb, ne: 0x193cb000193d5},
		dm{re: -0x0001, si: 0x193d5000193db, ne: 0x193db000193e5},
		dm{re: 0x1e0d, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x193e9000193ec, ne: 0x193ec000193f4},
		dm{re: -0x0001, si: 0x193f4000193fe, ne: 0x193fe00019406},
		dm{re: -0x0001, si: 0x194060001940e, ne: 0x1940e00019416},
		dm{re: -0x0001, si: 0x194160001941a, ne: 0x1941a00019423},
		dm{re: -0x0001, si: 0x194230001942a, ne: 0x1942a00019433},
		dm{re: -0x0001, si: 0x1943300019437, ne: 0x1943300019437},
		dm{re: 0x1e0f, si: 0x00000000, ne: 0x194370001943f},
		dm{re: 0x1e10, si: 0x00000000, ne: 0x1943f00019449},
		dm{re: 0x1e11, si: 0x00000000, ne: 0x1944900019456},
		dm{re: 0x1e12, si: 0x00000000, ne: 0x1943f00019449},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1945d00019464},
		dm{re: 0x1e15, si: 0x00000000, ne: 0x11ad000011ad7},
		dm{re: 0x1e16, si: 0x00000000, ne: 0x1946800019474},
		dm{re: 0x1e18, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1e19, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1e1b, si: 0x00000000, ne: 0x1947b00019483},
		dm{re: 0x1e1c, si: 0x00000000, ne: 0x194830001948c},
		dm{re: 0x1e1d, si: 0x00000000, ne: 0x1948c00019493},
		dm{re: 0x1e1e, si: 0x00000000, ne: 0x1949300019499},
		dm{re: 0x1e1f, si: 0x00000000, ne: 0x19499000194a1},
		dm{re: 0x1e20, si: 0x00000000, ne: 0x194a1000194ac},
		dm{re: 0x1e21, si: 0x00000000, ne: 0x194ac000194b3},
		dm{re: 0x1e22, si: 0x00000000, ne: 0x4fb000004fe},
		dm{re: -0x0001, si: 0x00000000, ne: 0x194ba000194be},
		dm{re: -0x0001, si: 0x194c3000194c8, ne: 0x194c3000194c8},
		dm{re: 0x1e25, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1e26, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x194d1000194db, ne: 0x194db000194e5},
		dm{re: -0x0001, si: 0x194e5000194f2, ne: 0x194f2000194ff},
		dm{re: 0x1e2a, si: 0x00000000, ne: 0x24400000249},
		dm{re: 0x1e2c, si: 0x00000000, ne: 0x1950700019512},
		dm{re: 0x1e2d, si: 0x00000000, ne: 0x195120001951b},
		dm{re: 0x1e2e, si: 0x00000000, ne: 0x1951b00019528},
		dm{re: 0x1e2f, si: 0x00000000, ne: 0x1952800019532},
		dm{re: 0x1e30, si: 0x00000000, ne: 0x195320001953a},
		dm{re: 0x1e31, si: 0x00000000, ne: 0x1953a00019542},
		dm{re: 0x1e32, si: 0x00000000, ne: 0x195420001954b},
		dm{re: 0x1e33, si: 0x00000000, ne: 0x1954b00019557},
		dm{re: 0x1e34, si: 0x00000000, ne: 0x1955700019561},
		dm{re: 0x1e35, si: 0x00000000, ne: 0x2780000027a},
		dm{re: 0x1e36, si: 0x00000000, ne: 0x195610001956a},
		dm{re: 0x1e37, si: 0x00000000, ne: 0x1956a00019572},
		dm{re: 0x1e38, si: 0x00000000, ne: 0x1957200019582},
		dm{re: 0x1e39, si: 0x00000000, ne: 0x1958200019591},
		dm{re: -0x0001, si: 0x1959100019596, ne: 0x195960001959f},
		dm{re: 0x1e3a, si: 0x00000000, ne: 0x1959f000195ac},
		dm{re: 0x1e3b, si: 0x00000000, ne: 0x195ac000195b9},
		dm{re: 0x1e3c, si: 0x00000000, ne: 0x195b9000195c7},
		dm{re: 0x1e3d, si: 0x00000000, ne: 0x195c7000195cd},
		dm{re: 0x1e3e, si: 0x00000000, ne: 0x195cd000195d7},
		dm{re: 0x1e3f, si: 0x00000000, ne: 0x195d7000195e5},
		dm{re: 0x1e40, si: 0x00000000, ne: 0x195e5000195f4},
		dm{re: 0x1e41, si: 0x00000000, ne: 0x195f4000195fe},
		dm{re: 0x1e42, si: 0x00000000, ne: 0x195fe00019605},
		dm{re: 0x1e43, si: 0x00000000, ne: 0x1960500019612},
		dm{re: -0x0001, si: 0x1961200019618, ne: 0x1961800019626},
		dm{re: -0x0001, si: 0x196260001962d, ne: 0x1962d0001963a},
		dm{re: -0x0001, si: 0x1963a00019640, ne: 0x196400001964e},
		dm{re: -0x0001, si: 0x1964e00019653, ne: 0x196530001965e},
		dm{re: -0x0001, si: 0x1965e00019664, ne: 0x196640001966e},
		dm{re: -0x0001, si: 0x1966e00019673, ne: 0x196730001967a},
		dm{re: 0x1e44, si: 0x00000000, ne: 0x1967a00019682},
		dm{re: 0x1e45, si: 0x00000000, ne: 0x1968200019689},
		dm{re: 0x1e46, si: 0x00000000, ne: 0x1968900019693},
		dm{re: 0x1e47, si: 0x00000000, ne: 0x196930001969a},
		dm{re: 0x1e48, si: 0x00000000, ne: 0x1969a000196a2},
		dm{re: 0x1e49, si: 0x00000000, ne: 0x196a2000196a5},
		dm{re: 0x1e4a, si: 0x00000000, ne: 0x196a5000196a8},
		dm{re: 0x1e4b, si: 0x00000000, ne: 0x196a8000196ae},
		dm{re: 0x1e4c, si: 0x00000000, ne: 0x196ae000196b6},
		dm{re: 0x1e4d, si: 0x00000000, ne: 0x196b6000196c2},
		dm{re: 0x1e4e, si: 0x00000000, ne: 0x196c2000196c6},
		dm{re: 0x1e4f, si: 0x00000000, ne: 0x196c6000196ce},
		dm{re: 0x1e50, si: 0x00000000, ne: 0x1aaa00001aaf},
		dm{re: 0x1e51, si: 0x00000000, ne: 0x14fb600014fbe},
		dm{re: 0x1e52, si: 0x00000000, ne: 0x196ce000196d8},
		dm{re: 0x1e53, si: 0x00000000, ne: 0x196d8000196df},
		dm{re: 0x1e54, si: 0x00000000, ne: 0x17b4200017b44},
		dm{re: 0x1e55, si: 0x00000000, ne: 0x196df000196e6},
		dm{re: 0x1e56, si: 0x00000000, ne: 0x196e6000196f0},
		dm{re: 0x1e57, si: 0x00000000, ne: 0x196f0000196fb},
		dm{re: 0x1e58, si: 0x00000000, ne: 0x196fb00019703},
		dm{re: 0x1e59, si: 0x00000000, ne: 0x197030001970b},
		dm{re: 0x1e5a, si: 0x00000000, ne: 0x1970b00019716},
		dm{re: 0x1e5b, si: 0x00000000, ne: 0x197160001971f},
		dm{re: 0x1e5c, si: 0x00000000, ne: 0x1971f00019728},
		dm{re: 0x1e5d, si: 0x00000000, ne: 0x197280001972e},
		dm{re: 0x1e5e, si: 0x00000000, ne: 0x1972e00019737},
		dm{re: 0x1e5f, si: 0x00000000, ne: 0x1973700019741},
		dm{re: 0x1e60, si: 0x00000000, ne: 0x1974100019747},
		dm{re: 0x1e61, si: 0x00000000, ne: 0x197470001974c},
		dm{re: 0x1e62, si: 0x00000000, ne: 0x1974c00019757},
		dm{re: 0x1e63, si: 0x00000000, ne: 0x1975700019765},
		dm{re: -0x0001, si: 0x197650001976a, ne: 0x1976a00019775},
		dm{re: -0x0001, si: 0x1977500019779, ne: 0x1977900019780},
		dm{re: -0x0001, si: 0x1978000019784, ne: 0x197840001978c},
		dm{re: 0x1e64, si: 0x00000000, ne: 0x1978c00019799},
		dm{re: -0x0001, si: 0x19799000197a5, ne: 0x19799000197a5},
		dm{re: -0x0001, si: 0x197a5000197b2, ne: 0x197b2000197bb},
		dm{re: 0x1e65, si: 0x00000000, ne: 0x197bb000197c6},
		dm{re: -0x0001, si: 0x197c6000197ca, ne: 0x197ca000197ce},
		dm{re: -0x0001, si: 0x197ce000197d3, ne: 0x197d3000197db},
		dm{re: 0x1e66, si: 0x00000000, ne: 0x197db000197e2},
		dm{re: 0x1e67, si: 0x00000000, ne: 0x197e2000197ea},
		dm{re: -0x0001, si: 0x197ea000197ef, ne: 0x89ab000089b1},
		dm{re: 0x1e68, si: 0x00000000, ne: 0x197ef000197f7},
		dm{re: -0x0001, si: 0x197f7000197fb, ne: 0x197fb00019807},
		dm{re: 0x1e69, si: 0x00000000, ne: 0x1980700019810},
		dm{re: -0x0001, si: 0x198100001981d, ne: 0x1981d00019825},
		dm{re: -0x0001, si: 0x198250001982a, ne: 0x1982a00019832},
		dm{re: 0x1e6a, si: 0x00000000, ne: 0x1983200019836},
		dm{re: 0x1e6b, si: 0x00000000, ne: 0x198360001983b},
		dm{re: 0x1e6c, si: 0x00000000, ne: 0x1983b0001984b},
		dm{re: 0x1e6d, si: 0x00000000, ne: 0x1984b0001985a},
		dm{re: 0x1e6e, si: 0x00000000, ne: 0x1985a00019866},
		dm{re: 0x1e6f, si: 0x00000000, ne: 0x1986600019873},
		dm{re: 0x1e70, si: 0x00000000, ne: 0x198730001987d},
		dm{re: 0x1e71, si: 0x00000000, ne: 0x1987d0001988a},
		dm{re: 0x1e72, si: 0x00000000, ne: 0x1988a00019892},
		dm{re: 0x1e73, si: 0x00000000, ne: 0x198920001989f},
		dm{re: 0x1e74, si: 0x00000000, ne: 0x1989f000198ac},
		dm{re: 0x1e75, si: 0x00000000, ne: 0x198ac000198b4},
		dm{re: 0x1e76, si: 0x00000000, ne: 0x198b4000198bc},
		dm{re: 0x1e77, si: 0x00000000, ne: 0x198bc000198c8},
		dm{re: 0x1e78, si: 0x00000000, ne: 0x198c8000198d5},
		dm{re: 0x1e79, si: 0x00000000, ne: 0x198d5000198dd},
		dm{re: 0x1e7a, si: 0x00000000, ne: 0x198dd000198e6},
		dm{re: 0x1e7b, si: 0x00000000, ne: 0x198e6000198ef},
		dm{re: 0x1e7c, si: 0x00000000, ne: 0x198ef000198fd},
		dm{re: 0x1e7d, si: 0x00000000, ne: 0x198fd00019905},
		dm{re: 0x1e7e, si: 0x00000000, ne: 0x1990500019915},
		dm{re: 0x1e7f, si: 0x00000000, ne: 0x199150001991d},
		dm{re: 0x1e80, si: 0x00000000, ne: 0x1991d0001992b},
		dm{re: 0x1e81, si: 0x00000000, ne: 0x1978c00019799},
		dm{re: 0x1e82, si: 0x00000000, ne: 0x1992b00019933},
		dm{re: 0x1e83, si: 0x00000000, ne: 0x199330001993f},
		dm{re: 0x1e84, si: 0x00000000, ne: 0x1993f0001994c},
		dm{re: 0x1e85, si: 0x00000000, ne: 0x1994c00019954},
		dm{re: 0x1e86, si: 0x00000000, ne: 0x1995400019960},
		dm{re: 0x1e87, si: 0x00000000, ne: 0x1996000019968},
		dm{re: 0x1e88, si: 0x00000000, ne: 0x1996800019973},
		dm{re: -0x0001, si: 0x199730001997d, ne: 0x199730001997d},
		dm{re: 0x1e89, si: 0x00000000, ne: 0x1997d0001998a},
		dm{re: 0x1e8a, si: 0x00000000, ne: 0x1998a00019996},
		dm{re: 0x1e8b, si: 0x00000000, ne: 0x19996000199a3},
		dm{re: 0x1e8c, si: 0x00000000, ne: 0x199a3000199b0},
		dm{re: 0x1e8d, si: 0x00000000, ne: 0x199b0000199b8},
		dm{re: 0x1e8e, si: 0x00000000, ne: 0x199b8000199c1},
		dm{re: 0x1e8f, si: 0x00000000, ne: 0x199c1000199c9},
		dm{re: 0x1e90, si: 0x00000000, ne: 0x199c9000199d2},
		dm{re: 0x1e91, si: 0x00000000, ne: 0x199d2000199db},
		dm{re: 0x1e92, si: 0x00000000, ne: 0x199db000199e3},
		dm{re: 0x1e93, si: 0x00000000, ne: 0x199e3000199eb},
		dm{re: 0x1e94, si: 0x00000000, ne: 0x199eb000199f4},
		dm{re: 0x1e95, si: 0x00000000, ne: 0x199f4000199ff},
		dm{re: 0x1e96, si: 0x00000000, ne: 0x199ff00019a0c},
		dm{re: -0x0001, si: 0x19a0c00019a17, ne: 0x19a1700019a24},
		dm{re: -0x0001, si: 0x19a2400019a2c, ne: 0x19a2c00019a3a},
		dm{re: -0x0001, si: 0x19a3a00019a43, ne: 0x19a4300019a4c},
		dm{re: -0x0001, si: 0x19a4c00019a54, ne: 0x19a5400019a5d},
		dm{re: 0x1e97, si: 0x00000000, ne: 0x19a5d00019a6b},
		dm{re: 0x1e98, si: 0x00000000, ne: 0x199b8000199c1},
		dm{re: 0x1e99, si: 0x00000000, ne: 0x19a6b00019a78},
		dm{re: 0x1e9a, si: 0x00000000, ne: 0x19a7800019a80},
		dm{re: 0x1e9b, si: 0x00000000, ne: 0x19a8000019a88},
		dm{re: -0x0001, si: 0x19a8800019a8c, ne: 0x19a8c00019a94},
		dm{re: -0x0001, si: 0x19a9400019a99, ne: 0x19a9900019aa4},
		dm{re: -0x0001, si: 0x19aa400019aaa, ne: 0x19aaa00019ab6},
		dm{re: -0x0001, si: 0x19ab600019abc, ne: 0x19abc00019aca},
		dm{re: -0x0001, si: 0x19aca00019ace, ne: 0x19ace00019ad9},
		dm{re: -0x0001, si: 0x19ad900019add, ne: 0x19add00019ae9},
		dm{re: -0x0001, si: 0x19ae900019aed, ne: 0x19aed00019afa},
		dm{re: -0x0001, si: 0x19afa00019b00, ne: 0x19b0000019b0f},
		dm{re: -0x0001, si: 0x19b0f00019b14, ne: 0x19b1400019b1d},
		dm{re: -0x0001, si: 0x19b1d00019b21, ne: 0x19b2100019b28},
		dm{re: -0x0001, si: 0x19b2800019b2e, ne: 0x19b2e00019b3a},
		dm{re: -0x0001, si: 0x19b3a00019b3e, ne: 0x19b3e00019b4d},
		dm{re: -0x0001, si: 0x19b4d00019b51, ne: 0x19b5100019b5c},
		dm{re: -0x0001, si: 0x19b5c00019b60, ne: 0x19b6000019b6b},
		dm{re: 0x1e9c, si: 0x00000000, ne: 0x19b6b00019b76},
		dm{re: 0x1e9d, si: 0x00000000, ne: 0x19b7600019b82},
		dm{re: -0x0001, si: 0x19b8200019b87, ne: 0x19b8700019b91},
		dm{re: -0x0001, si: 0x19b9100019b97, ne: 0x19b9700019ba3},
		dm{re: -0x0001, si: 0x19ba300019ba9, ne: 0x19ba900019bb5},
		dm{re: -0x0001, si: 0x19bb500019bbb, ne: 0x19bbb00019bc5},
		dm{re: -0x0001, si: 0x19bc500019bcf, ne: 0x19bcf00019bd9},
		dm{re: -0x0001, si: 0x19bd900019bde, ne: 0x19bd900019bde},
		dm{re: 0x1e9e, si: 0x00000000, ne: 0x19bde00019bed},
		dm{re: -0x0001, si: 0x19bed00019bf3, ne: 0x19bf300019c07},
		dm{re: -0x0001, si: 0x19c0700019c0d, ne: 0x19c0d00019c1d},
		dm{re: 0x1e9f, si: 0x00000000, ne: 0x19c1d00019c24},
		dm{re: 0x1ea0, si: 0x00000000, ne: 0x19c2400019c29},
		dm{re: -0x0001, si: 0x19c2900019c2d, ne: 0x19c2d00019c36},
		dm{re: -0x0001, si: 0x19c3600019c3a, ne: 0x19c3a00019c41},
		dm{re: -0x0001, si: 0x19c4100019c45, ne: 0x19c4500019c4d},
		dm{re: -0x0001, si: 0x19c4d00019c51, ne: 0x19c5100019c58},
		dm{re: 0x1ea1, si: 0x00000000, ne: 0x19c5800019c64},
		dm{re: -0x0001, si: 0x19c6400019c69, ne: 0x19c6900019c73},
		dm{re: -0x0001, si: 0x19c7300019c77, ne: 0x19c7700019c80},
		dm{re: -0x0001, si: 0x19c8000019c84, ne: 0x19c8400019c8d},
		dm{re: -0x0001, si: 0x19c8d00019c91, ne: 0x19c9100019c97},
		dm{re: -0x0001, si: 0x19c9700019c9b, ne: 0x19c9b00019ca4},
		dm{re: 0x1ea2, si: 0x00000000, ne: 0x19ca400019caf},
		dm{re: -0x0001, si: 0x19caf00019cb5, ne: 0x19cb500019cc0},
		dm{re: -0x0001, si: 0x19cc000019cc6, ne: 0x19cc600019cd1},
		dm{re: 0x1ea3, si: 0x00000000, ne: 0x19cd100019cdc},
		dm{re: -0x0001, si: 0x19cdc00019ce2, ne: 0x19ce200019cf0},
		dm{re: -0x0001, si: 0x19cf000019cf6, ne: 0x19cf600019d04},
		dm{re: 0x1ea4, si: 0x00000000, ne: 0x19d0400019d0a},
		dm{re: 0x1ea5, si: 0x00000000, ne: 0x19d0a00019d10},
		dm{re: -0x0001, si: 0x19d1000019d16, ne: 0x19d1600019d21},
		dm{re: -0x0001, si: 0x19d2100019d25, ne: 0x19d2500019d2e},
		dm{re: -0x0001, si: 0x19d2e00019d34, ne: 0x19d3400019d40},
		dm{re: 0x1ea6, si: 0x00000000, ne: 0x19d4000019d47},
		dm{re: 0x1ea7, si: 0x00000000, ne: 0x19d4700019d4d},
		dm{re: 0x1ea8, si: 0x00000000, ne: 0x19d4d00019d56},
		dm{re: -0x0001, si: 0x19d5600019d5b, ne: 0x19d5b00019d66},
		dm{re: 0x1ea9, si: 0x00000000, ne: 0x195c7000195cd},
		dm{re: -0x0001, si: 0x19d6600019d6b, ne: 0x19d6b00019d72},
		dm{re: -0x0001, si: 0x19d7200019d78, ne: 0x19d7800019d83},
		dm{re: 0x1eaa, si: 0x00000000, ne: 0x19d8300019d8e},
		dm{re: -0x0001, si: 0x19d8e00019d93, ne: 0x19d9300019d99},
		dm{re: 0x1eab, si: 0x00000000, ne: 0x19d9900019d9d},
		dm{re: -0x0001, si: 0x19d9d00019da3, ne: 0x19b6b00019b76},
		dm{re: -0x0001, si: 0xadac0000adb0, ne: 0x19da300019da8},
		dm{re: -0x0001, si: 0x19da800019dac, ne: 0x19dac00019db2},
		dm{re: 0x1eac, si: 0x00000000, ne: 0x15d0000015d3},
		dm{re: -0x0001, si: 0x19db200019db7, ne: 0x19db700019dbe},
		dm{re: 0x1ead, si: 0x00000000, ne: 0x19dbe00019dc3},
		dm{re: 0x1eae, si: 0x00000000, ne: 0x19dc300019dc7},
		dm{re: 0x1eaf, si: 0x00000000, ne: 0x19dc700019dcc},
		dm{re: 0x1eb0, si: 0x00000000, ne: 0x19dcc00019dd9},
		dm{re: 0x1eb1, si: 0x00000000, ne: 0x19dd900019de8},
		dm{re: 0x1eb2, si: 0x00000000, ne: 0x19de800019dee},
		dm{re: 0x1eb3, si: 0x00000000, ne: 0x19dee00019dfa},
		dm{re: 0x1eb4, si: 0x00000000, ne: 0x19dfa00019e0b},
		dm{re: 0x1eb5, si: 0x00000000, ne: 0x19e0b00019e11},
		dm{re: -0x0001, si: 0x19e1100019e1a, ne: 0x19e1a00019e28},
		dm{re: -0x0001, si: 0x19e2800019e30, ne: 0x19e3000019e3b},
		dm{re: -0x0001, si: 0x19e3b00019e43, ne: 0x19e4300019e53},
		dm{re: -0x0001, si: 0x19e5300019e5b, ne: 0x19e5b00019e63},
		dm{re: -0x0001, si: 0x19e6300019e70, ne: 0x19e6300019e70},
		dm{re: 0x1eb6, si: 0x00000000, ne: 0x19e7000019e7a},
		dm{re: -0x0001, si: 0x19e7a00019e82, ne: 0x19e8200019e93},
		dm{re: 0x1eb7, si: 0x00000000, ne: 0x19e9300019e9f},
		dm{re: 0x1eb8, si: 0x00000000, ne: 0x19e9f00019ead},
		dm{re: 0x1eb9, si: 0x00000000, ne: 0x19ead00019ebb},
		dm{re: 0x1eba, si: 0x00000000, ne: 0x19ebb00019ec7},
		dm{re: 0x1ebb, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ebc, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ebd, si: 0x00000000, ne: 0x19a7800019a80},
		dm{re: 0x1ebe, si: 0x00000000, ne: 0x199b0000199b8},
		dm{re: 0x1ebf, si: 0x00000000, ne: 0x199c1000199c9},
		dm{re: 0x1ec0, si: 0x00000000, ne: 0x199c9000199d2},
		dm{re: 0x1ec1, si: 0x00000000, ne: 0x19a7800019a80},
		dm{re: 0x1ec2, si: 0x00000000, ne: 0x19a7800019a80},
		dm{re: 0x1ec3, si: 0x00000000, ne: 0x19ec700019ed1},
		dm{re: 0x1ec4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ec5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ec6, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x19ed400019ed8, ne: 0x75ef000075f1},
		dm{re: -0x0001, si: 0x19ed800019edd, ne: 0x19edd00019ee5},
		dm{re: -0x0001, si: 0x19ee500019eea, ne: 0x19eea00019ef1},
		dm{re: -0x0001, si: 0x19ef100019ef6, ne: 0x19ef600019efd},
		dm{re: -0x0001, si: 0x19efd00019f02, ne: 0x19efd00019f02},
		dm{re: -0x0001, si: 0x19f0200019f07, ne: 0x19f0200019f07},
		dm{re: -0x0001, si: 0x19f0700019f0c, ne: 0x19f0c00019f12},
		dm{re: -0x0001, si: 0x19f1200019f17, ne: 0x19f1700019f1e},
		dm{re: -0x0001, si: 0x19f1e00019f23, ne: 0x19f2300019f2a},
		dm{re: -0x0001, si: 0x19f2a00019f2f, ne: 0x19f2a00019f2f},
		dm{re: -0x0001, si: 0x19f2f00019f36, ne: 0x19f3600019f3d},
		dm{re: -0x0001, si: 0x19f3d00019f41, ne: 0x19f4100019f49},
		dm{re: -0x0001, si: 0x19f4900019f4d, ne: 0x19f4d00019f52},
		dm{re: -0x0001, si: 0x19f5200019f55, ne: 0x19f5500019f5a},
		dm{re: 0x1ec8, si: 0x00000000, ne: 0x19f5a00019f61},
		dm{re: 0x1ec9, si: 0x00000000, ne: 0x19f6100019f65},
		dm{re: 0x1eca, si: 0x00000000, ne: 0x19f6500019f6f},
		dm{re: 0x1ecb, si: 0x00000000, ne: 0x19f6f00019f78},
		dm{re: 0x1ecc, si: 0x00000000, ne: 0x19f7800019f81},
		dm{re: 0x1ecd, si: 0x00000000, ne: 0x19f8100019f88},
		dm{re: 0x1ece, si: 0x00000000, ne: 0x19f8800019f8c},
		dm{re: 0x1ecf, si: 0x00000000, ne: 0x19f8c00019f97},
		dm{re: 0x1ed0, si: 0x00000000, ne: 0x19f9700019f9c},
		dm{re: 0x1ed1, si: 0x00000000, ne: 0x19f9c00019fab},
		dm{re: 0x1ed2, si: 0x00000000, ne: 0x19fab00019fb6},
		dm{re: 0x1ed3, si: 0x00000000, ne: 0x19fb600019fba},
		dm{re: 0x1ed4, si: 0x00000000, ne: 0x19fba00019fc4},
		dm{re: 0x1ed5, si: 0x00000000, ne: 0x19fc400019fcd},
		dm{re: 0x1ed6, si: 0x00000000, ne: 0x19fcd00019fd6},
		dm{re: 0x1ed7, si: 0x00000000, ne: 0x19fd600019fde},
		dm{re: 0x1ed8, si: 0x00000000, ne: 0x19fde00019fe3},
		dm{re: -0x0001, si: 0x19fe300019fec, ne: 0x19fec00019ff5},
		dm{re: -0x0001, si: 0x19ff500019ffc, ne: 0x19ffc00019fff},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1edb, si: 0x00000000, ne: 0xcd350000cd3c},
		dm{re: 0x1edc, si: 0x00000000, ne: 0x1a0090001a00d},
		dm{re: -0x0001, si: 0x1a00d0001a018, ne: 0x1a0180001a024},
		dm{re: -0x0001, si: 0x1a0240001a02f, ne: 0x1a02f0001a03c},
		dm{re: -0x0001, si: 0x1a03c0001a047, ne: 0x1a0470001a052},
		dm{re: 0x1ede, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1edf, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ee1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ee2, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1a05f0001a069, ne: 0x1a0690001a074},
		dm{re: 0x1ee4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ee5, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1a0790001a07e, ne: 0x1a07e0001a086},
		dm{re: -0x0001, si: 0x1a0860001a08b, ne: 0x1a08b0001a093},
		dm{re: -0x0001, si: 0x1a0930001a098, ne: 0x1a0980001a09b},
		dm{re: -0x0001, si: 0x1a09b0001a0a0, ne: 0x1a0a00001a0a9},
		dm{re: -0x0001, si: 0x1a0a90001a0ae, ne: 0x1a0520001a057},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1a0b70001a0c2},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1a0c80001a0cc},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1eeb, si: 0x00000000, ne: 0xf86c0000f872},
		dm{re: 0x1eec, si: 0x00000000, ne: 0x1a0d50001a0e0},
		dm{re: 0x1eed, si: 0x00000000, ne: 0x1a0e00001a0e8},
		dm{re: 0x1eee, si: 0x00000000, ne: 0x1a0e80001a0f4},
		dm{re: 0x1eef, si: 0x00000000, ne: 0x1a0f40001a0fd},
		dm{re: -0x0001, si: 0x1a1020001a107, ne: 0x1a1070001a10c},
		dm{re: 0x1ef1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ef3, si: 0x00000000, ne: 0x1a1100001a115},
		dm{re: 0x1ef4, si: 0x00000000, ne: 0x1a1150001a11d},
		dm{re: 0x1ef5, si: 0x00000000, ne: 0x1a11d0001a123},
		dm{re: 0x1ef6, si: 0x00000000, ne: 0x1882200018829},
		dm{re: 0x1ef7, si: 0x00000000, ne: 0x1a1230001a12f},
		dm{re: 0x1ef8, si: 0x00000000, ne: 0x1a12f0001a136},
		dm{re: 0x1ef9, si: 0x00000000, ne: 0x1a1360001a13d},
		dm{re: 0x1efa, si: 0x00000000, ne: 0x1a13d0001a147},
		dm{re: 0x1efb, si: 0x00000000, ne: 0x635c00006362},
		dm{re: 0x1efc, si: 0x00000000, ne: 0x1a1470001a150},
		dm{re: 0x1efd, si: 0x00000000, ne: 0x1a1500001a156},
		dm{re: 0x1efe, si: 0x00000000, ne: 0x1a1560001a15d},
		dm{re: 0x1eff, si: 0x00000000, ne: 0x1a15d0001a164},
		dm{re: 0x1f00, si: 0x00000000, ne: 0x1a1640001a16c},
		dm{re: 0x1f01, si: 0x00000000, ne: 0x1a16c0001a177},
		dm{re: 0x1f02, si: 0x00000000, ne: 0x1a1770001a17e},
		dm{re: 0x1f03, si: 0x00000000, ne: 0x1a17e0001a187},
		dm{re: 0x1f04, si: 0x00000000, ne: 0x1a1870001a18c},
		dm{re: 0x1f05, si: 0x00000000, ne: 0x1a18c0001a193},
		dm{re: 0x1f06, si: 0x00000000, ne: 0x1a1930001a198},
		dm{re: 0x1f07, si: 0x00000000, ne: 0x1a1980001a1a0},
		dm{re: 0x1f08, si: 0x00000000, ne: 0x1a1a00001a1ad},
		dm{re: 0x1f09, si: 0x00000000, ne: 0x1a1ad0001a1b3},
		dm{re: 0x1f0a, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1a1b70001a1bf, ne: 0x1a1bf0001a1c7},
		dm{re: -0x0001, si: 0x1a1c70001a1ce, ne: 0x1a1ce0001a1d5},
		dm{re: -0x0001, si: 0x1a1d50001a1db, ne: 0x1a1d50001a1db},
		dm{re: -0x0001, si: 0x1a1db0001a1e9, ne: 0x1a1e90001a1f7},
		dm{re: -0x0001, si: 0x1a1f70001a200, ne: 0x1a2000001a209},
		dm{re: -0x0001, si: 0x1a2090001a213, ne: 0x1a2130001a21d},
		dm{re: 0x1f0c, si: 0x00000000, ne: 0x1a21d0001a224},
		dm{re: -0x0001, si: 0x1a2240001a22e, ne: 0x1a22e0001a238},
		dm{re: -0x0001, si: 0x1a2380001a23f, ne: 0x1a23f0001a246},
		dm{re: 0x1f0d, si: 0x00000000, ne: 0x1a2460001a24d},
		dm{re: -0x0001, si: 0x1a24d0001a253, ne: 0x1a2530001a259},
		dm{re: -0x0001, si: 0x1a2590001a25d, ne: 0x101d9000101dd},
		dm{re: -0x0001, si: 0x1a25d0001a262, ne: 0x1a2620001a267},
		dm{re: -0x0001, si: 0x1a2670001a272, ne: 0x1a2720001a27d},
		dm{re: -0x0001, si: 0x1a27d0001a289, ne: 0x1a2890001a295},
		dm{re: 0x1f0e, si: 0x00000000, ne: 0x1a2950001a29f},
		dm{re: -0x0001, si: 0x1a29f0001a2ab, ne: 0x1a2ab0001a2b7},
		dm{re: -0x0001, si: 0x1a2b70001a2c2, ne: 0x1a2c20001a2cd},
		dm{re: -0x0001, si: 0x1a2cd0001a2d4, ne: 0x1a2d40001a2db},
		dm{re: 0x1f0f, si: 0x00000000, ne: 0x1a2db0001a2e5},
		dm{re: -0x0001, si: 0x1a2e50001a2eb, ne: 0x1a2eb0001a2f1},
		dm{re: -0x0001, si: 0x1a2f10001a2f5, ne: 0x1a2f50001a2f9},
		dm{re: 0x1f10, si: 0x00000000, ne: 0x1a2f90001a302},
		dm{re: 0x1f11, si: 0x00000000, ne: 0x1a3020001a306},
		dm{re: 0x1f12, si: 0x00000000, ne: 0x1a3060001a30b},
		dm{re: 0x1f13, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1f14, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1f16, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1f17, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1f18, si: 0x00000000, ne: 0x1a30f0001a317},
		dm{re: 0x1f19, si: 0x00000000, ne: 0x1a30f0001a317},
		dm{re: 0x1f1a, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1a31c0001a321},
		dm{re: -0x0001, si: 0x1a3270001a32d, ne: 0x1a3270001a32d},
		dm{re: 0x1f1c, si: 0x00000000, ne: 0x1a32d0001a332},
		dm{re: -0x0001, si: 0x1a3320001a338, ne: 0x1a3320001a338},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1a33b0001a344},
		dm{re: -0x0001, si: 0x1a3480001a350, ne: 0x1a3500001a35d},
		dm{re: -0x0001, si: 0x1a35d0001a367, ne: 0x1a3670001a374},
		dm{re: -0x0001, si: 0x1a3740001a37e, ne: 0x1a37e0001a38b},
		dm{re: -0x0001, si: 0x1a38b0001a398, ne: 0x1a3980001a3a5},
		dm{re: 0x1f1f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1f21, si: 0x00000000, ne: 0x1a3a70001a3b1},
		dm{re: 0x1f22, si: 0x00000000, ne: 0x1a3b10001a3c1},
		dm{re: 0x1f23, si: 0x00000000, ne: 0x1a3c10001a3d2},
		dm{re: 0x1f24, si: 0x00000000, ne: 0x438f00004394},
		dm{re: 0x1f25, si: 0x00000000, ne: 0x1a3d20001a3d9},
		dm{re: 0x1f26, si: 0x00000000, ne: 0x1a3d90001a3e0},
		dm{re: 0x1f27, si: 0x00000000, ne: 0x1a3e00001a3e7},
		dm{re: 0x1f28, si: 0x00000000, ne: 0x1a3e70001a3ed},
		dm{re: 0x1f29, si: 0x00000000, ne: 0x9fdc00009fe1},
		dm{re: 0x1f2a, si: 0x00000000, ne: 0x1a3ed0001a3f0},
		dm{re: 0x1f2b, si: 0x00000000, ne: 0x1a3f00001a3f9},
		dm{re: 0x1f2c, si: 0x00000000, ne: 0x1197100011977},
		dm{re: 0x1f2d, si: 0x00000000, ne: 0x1a3f90001a400},
		dm{re: 0x1f2e, si: 0x00000000, ne: 0x14f2a00014f30},
		dm{re: 0x1f2f, si: 0x00000000, ne: 0x1a4000001a40f},
		dm{re: -0x0001, si: 0x1a40f0001a417, ne: 0x1a4170001a422},
		dm{re: -0x0001, si: 0x1a4220001a42a, ne: 0x1a4220001a42a},
		dm{re: -0x0001, si: 0x1a42a0001a432, ne: 0x104af000104b2},
		dm{re: -0x0001, si: 0x1a4320001a43a, ne: 0x1a43a0001a440},
		dm{re: -0x0001, si: 0x1a4400001a448, ne: 0x1a4480001a44e},
		dm{re: 0x1f30, si: 0x00000000, ne: 0x170580001705d},
		dm{re: -0x0001, si: 0x1a44e0001a456, ne: 0x1a4560001a45a},
		dm{re: -0x0001, si: 0x1a45a0001a462, ne: 0x1a4620001a468},
		dm{re: 0x1f31, si: 0x00000000, ne: 0x1a4680001a46e},
		dm{re: -0x0001, si: 0x1a46e0001a476, ne: 0xeb820000eb85},
		dm{re: -0x0001, si: 0x1a4760001a47e, ne: 0x439e000043a1},
		dm{re: -0x0001, si: 0x1a47e0001a486, ne: 0x1a4860001a48b},
		dm{re: -0x0001, si: 0x1a48b0001a492, ne: 0x1a4920001a499},
		dm{re: 0x1f32, si: 0x00000000, ne: 0x1197100011977},
		dm{re: -0x0001, si: 0x1a4990001a4a1, ne: 0x2e8900002e8d},
		dm{re: -0x0001, si: 0x1a4a10001a4a9, ne: 0x1a4a90001a4ad},
		dm{re: 0x1f33, si: 0x00000000, ne: 0x1a4ad0001a4b5},
		dm{re: 0x1f34, si: 0x00000000, ne: 0x1a4b50001a4bc},
		dm{re: 0x1f35, si: 0x00000000, ne: 0x1a4bc0001a4c1},
		dm{re: 0x1f36, si: 0x00000000, ne: 0x1a4c10001a4cb},
		dm{re: 0x1f37, si: 0x00000000, ne: 0x1a4cb0001a4d1},
		dm{re: 0x1f38, si: 0x00000000, ne: 0xf3030000f30a},
		dm{re: 0x1f39, si: 0x00000000, ne: 0x1a4d10001a4d6},
		dm{re: -0x0001, si: 0x1a4d60001a4dd, ne: 0x4c0500004c09},
		dm{re: 0x1f3a, si: 0x00000000, ne: 0x1a4dd0001a4e1},
		dm{re: 0x1f3b, si: 0x00000000, ne: 0x1a4e10001a4ea},
		dm{re: 0x1f3c, si: 0x00000000, ne: 0x1a4ea0001a4f2},
		dm{re: 0x1f3d, si: 0x00000000, ne: 0x1a4f20001a4fa},
		dm{re: 0x1f3e, si: 0x00000000, ne: 0x1a4fa0001a4fe},
		dm{re: 0x1f3f, si: 0x00000000, ne: 0x1a4fe0001a502},
		dm{re: 0x1f40, si: 0x00000000, ne: 0x37960000379a},
		dm{re: 0x1f41, si: 0x00000000, ne: 0x1a5020001a510},
		dm{re: 0x1f42, si: 0x00000000, ne: 0x1a5100001a515},
		dm{re: 0x1f43, si: 0x00000000, ne: 0x1a5150001a51e},
		dm{re: 0x1f44, si: 0x00000000, ne: 0x1a51e0001a531},
		dm{re: 0x1f45, si: 0x00000000, ne: 0x1a3b10001a3c1},
		dm{re: 0x1f46, si: 0x00000000, ne: 0x1a5310001a539},
		dm{re: 0x1f47, si: 0x00000000, ne: 0x1a5390001a541},
		dm{re: 0x1f48, si: 0x00000000, ne: 0x1a5410001a552},
		dm{re: 0x1f49, si: 0x00000000, ne: 0x1a5520001a558},
		dm{re: 0x1f4a, si: 0x00000000, ne: 0x1a5580001a55c},
		dm{re: 0x1f4b, si: 0x00000000, ne: 0x1a55c0001a565},
		dm{re: 0x1f4c, si: 0x00000000, ne: 0x1a5650001a56b},
		dm{re: 0x1f4d, si: 0x00000000, ne: 0x1a56b0001a573},
		dm{re: 0x1f4e, si: 0x00000000, ne: 0x1a5730001a57c},
		dm{re: 0x1f4f, si: 0x00000000, ne: 0x8350000083c},
		dm{re: 0x1f50, si: 0x00000000, ne: 0x1a57c0001a584},
		dm{re: 0x1f51, si: 0x00000000, ne: 0x1a5840001a58f},
		dm{re: 0x1f52, si: 0x00000000, ne: 0x1a58f0001a59a},
		dm{re: 0x1f53, si: 0x00000000, ne: 0x1a59a0001a5a0},
		dm{re: 0x1f54, si: 0x00000000, ne: 0x1a5a00001a5a7},
		dm{re: 0x1f55, si: 0x00000000, ne: 0x1a5a70001a5b4},
		dm{re: 0x1f56, si: 0x00000000, ne: 0x14f2a00014f30},
		dm{re: 0x1f57, si: 0x00000000, ne: 0x1a5b40001a5be},
		dm{re: 0x1f58, si: 0x00000000, ne: 0x3fd100003fd6},
		dm{re: 0x1f59, si: 0x00000000, ne: 0x1a5be0001a5c5},
		dm{re: 0x1f5a, si: 0x00000000, ne: 0x1a5c50001a5cb},
		dm{re: 0x1f5b, si: 0x00000000, ne: 0x1a5cb0001a5cf},
		dm{re: 0x1f5c, si: 0x00000000, ne: 0x1a5cf0001a5d5},
		dm{re: 0x1f5d, si: 0x00000000, ne: 0x1a5d50001a5db},
		dm{re: 0x1f5e, si: 0x00000000, ne: 0x1a5db0001a5e5},
		dm{re: 0x1f5f, si: 0x00000000, ne: 0x1a5e50001a5f1},
		dm{re: 0x1f60, si: 0x00000000, ne: 0x1a5f10001a602},
		dm{re: 0x1f61, si: 0x00000000, ne: 0x1a6020001a60a},
		dm{re: 0x1f62, si: 0x00000000, ne: 0x9fdc00009fe1},
		dm{re: 0x1f63, si: 0x00000000, ne: 0x1a60a0001a611},
		dm{re: 0x1f64, si: 0x00000000, ne: 0x1a6110001a61b},
		dm{re: 0x1f65, si: 0x00000000, ne: 0x3fa600003fad},
		dm{re: 0x1f66, si: 0x00000000, ne: 0xc6c80000c6cd},
		dm{re: -0x0001, si: 0x1a61b0001a623, ne: 0x1a6230001a628},
		dm{re: 0x1f67, si: 0x00000000, ne: 0xc71c0000c720},
		dm{re: 0x1f68, si: 0x00000000, ne: 0x37960000379a},
		dm{re: 0x1f69, si: 0x00000000, ne: 0x1a6280001a637},
		dm{re: 0x1f6a, si: 0x00000000, ne: 0x1a6370001a63d},
		dm{re: 0x1f6b, si: 0x00000000, ne: 0x1a63d0001a642},
		dm{re: 0x1f6c, si: 0x00000000, ne: 0x1a6420001a64c},
		dm{re: 0x1f6d, si: 0x00000000, ne: 0x5caa00005cb1},
		dm{re: 0x1f6e, si: 0x00000000, ne: 0x1a64c0001a654},
		dm{re: 0x1f6f, si: 0x00000000, ne: 0x1a6540001a658},
		dm{re: 0x1f70, si: 0x00000000, ne: 0x1a6580001a65d},
		dm{re: 0x1f71, si: 0x00000000, ne: 0x1a5d50001a5db},
		dm{re: 0x1f72, si: 0x00000000, ne: 0x1a65d0001a661},
		dm{re: 0x1f73, si: 0x00000000, ne: 0x1a6610001a669},
		dm{re: 0x1f74, si: 0x00000000, ne: 0x1a6690001a674},
		dm{re: 0x1f75, si: 0x00000000, ne: 0x1a6740001a678},
		dm{re: 0x1f76, si: 0x00000000, ne: 0x1a6780001a683},
		dm{re: 0x1f77, si: 0x00000000, ne: 0x1a6830001a689},
		dm{re: 0x1f78, si: 0x00000000, ne: 0x3fbe00003fc3},
		dm{re: -0x0001, si: 0x1a6890001a691, ne: 0x1a6910001a69d},
		dm{re: -0x0001, si: 0x1a69d0001a6a5, ne: 0x7c9800007c9c},
		dm{re: 0x1f79, si: 0x00000000, ne: 0x1a6a50001a6ab},
		dm{re: 0x1f7a, si: 0x00000000, ne: 0x1a6ab0001a6b0},
		dm{re: 0x1f7b, si: 0x00000000, ne: 0x9fd800009fdc},
		dm{re: 0x1f7c, si: 0x00000000, ne: 0x1a6b00001a6bb},
		dm{re: 0x1f7d, si: 0x00000000, ne: 0x1a6bb0001a6c2},
		dm{re: 0x1f7e, si: 0x00000000, ne: 0x1a6c20001a6c7},
		dm{re: 0x1f7f, si: 0x00000000, ne: 0x1a6c70001a6d0},
		dm{re: 0x1f80, si: 0x00000000, ne: 0x1a3ed0001a3f0},
		dm{re: 0x1f81, si: 0x00000000, ne: 0x1a6d00001a6d7},
		dm{re: 0x1f82, si: 0x00000000, ne: 0x1a6d70001a6e1},
		dm{re: 0x1f83, si: 0x00000000, ne: 0x1a6e10001a6e8},
		dm{re: 0x1f84, si: 0x00000000, ne: 0x1a6e80001a6ed},
		dm{re: 0x1f85, si: 0x00000000, ne: 0x1a6ed0001a6f2},
		dm{re: 0x1f86, si: 0x00000000, ne: 0x1a6f20001a6f7},
		dm{re: 0x1f87, si: 0x00000000, ne: 0x1a6f70001a6ff},
		dm{re: 0x1f88, si: 0x00000000, ne: 0x1a6ff0001a705},
		dm{re: 0x1f89, si: 0x00000000, ne: 0x1a7050001a70b},
		dm{re: 0x1f8a, si: 0x00000000, ne: 0x1a70b0001a713},
		dm{re: 0x1f8b, si: 0x00000000, ne: 0x1a7130001a71c},
		dm{re: 0x1f8c, si: 0x00000000, ne: 0x1a71c0001a721},
		dm{re: 0x1f8d, si: 0x00000000, ne: 0x1a7210001a725},
		dm{re: 0x1f8e, si: 0x00000000, ne: 0x6a5c00006a61},
		dm{re: 0x1f8f, si: 0x00000000, ne: 0x1a7250001a72d},
		dm{re: 0x1f90, si: 0x00000000, ne: 0xfbae0000fbb1},
		dm{re: 0x1f91, si: 0x00000000, ne: 0x1a72d0001a733},
		dm{re: 0x1f92, si: 0x00000000, ne: 0x1a7330001a73c},
		dm{re: 0x1f93, si: 0x00000000, ne: 0x1a73c0001a742},
		dm{re: 0x1f94, si: 0x00000000, ne: 0x1a7420001a74a},
		dm{re: 0x1f95, si: 0x00000000, ne: 0x1a74a0001a752},
		dm{re: 0x1f96, si: 0x00000000, ne: 0x1a7520001a757},
		dm{re: 0x1f97, si: 0x00000000, ne: 0x1a7570001a75f},
		dm{re: -0x0001, si: 0x1a75f0001a76f, ne: 0x1a76f0001a776},
		dm{re: 0x1f98, si: 0x00000000, ne: 0x1a7760001a77e},
		dm{re: 0x1f99, si: 0x00000000, ne: 0x1a77e0001a785},
		dm{re: 0x1f9a, si: 0x00000000, ne: 0x1a7850001a78f},
		dm{re: 0x1f9b, si: 0x00000000, ne: 0x1a78f0001a79a},
		dm{re: 0x1f9c, si: 0x00000000, ne: 0x1a79a0001a79d},
		dm{re: 0x1f9d, si: 0x00000000, ne: 0x152d5000152da},
		dm{re: 0x1f9e, si: 0x00000000, ne: 0x1a79d0001a7a4},
		dm{re: 0x1f9f, si: 0x00000000, ne: 0x1a7a40001a7ac},
		dm{re: 0x1fa0, si: 0x00000000, ne: 0x1a7ac0001a7b4},
		dm{re: 0x1fa1, si: 0x00000000, ne: 0x1a7b40001a7b9},
		dm{re: 0x1fa2, si: 0x00000000, ne: 0x1a7b90001a7c3},
		dm{re: 0x1fa3, si: 0x00000000, ne: 0x1a7c30001a7c9},
		dm{re: 0x1fa4, si: 0x00000000, ne: 0x1a7c90001a7cd},
		dm{re: 0x1fa5, si: 0x00000000, ne: 0x1a7cd0001a7d3},
		dm{re: 0x1fa6, si: 0x00000000, ne: 0x1a7d30001a7dd},
		dm{re: 0x1fa7, si: 0x00000000, ne: 0x1a7dd0001a7e3},
		dm{re: 0x1fa8, si: 0x00000000, ne: 0x1a7e30001a7f1},
		dm{re: 0x1fa9, si: 0x00000000, ne: 0x1a7f10001a7fb},
		dm{re: 0x1faa, si: 0x00000000, ne: 0x1a7fb0001a809},
		dm{re: 0x1fab, si: 0x00000000, ne: 0x1a8090001a812},
		dm{re: 0x1fac, si: 0x00000000, ne: 0x1a8120001a81f},
		dm{re: 0x1fad, si: 0x00000000, ne: 0x1a81f0001a826},
		dm{re: 0x1fae, si: 0x00000000, ne: 0x1a8260001a82d},
		dm{re: 0x1faf, si: 0x00000000, ne: 0x1a82d0001a833},
		dm{re: 0x1fb0, si: 0x00000000, ne: 0x1a8330001a838},
		dm{re: -0x0001, si: 0x1a8380001a842, ne: 0x1a8380001a842},
		dm{re: 0x1fb1, si: 0x00000000, ne: 0x1a8420001a84f},
		dm{re: 0x1fb2, si: 0x00000000, ne: 0x1a4cb0001a4d1},
		dm{re: 0x1fb3, si: 0x00000000, ne: 0x16dae00016db5},
		dm{re: 0x1fb4, si: 0x00000000, ne: 0x103060001030a},
		dm{re: 0x1fb5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1fb6, si: 0x00000000, ne: 0x1a84f0001a853},
		dm{re: -0x0001, si: 0x1a8530001a85b, ne: 0x1a85b0001a869},
		dm{re: 0x1fb7, si: 0x00000000, ne: 0x1a8690001a86d},
		dm{re: 0x1fb8, si: 0x00000000, ne: 0x1a86d0001a875},
		dm{re: 0x1fb9, si: 0x00000000, ne: 0x1a8750001a87a},
		dm{re: 0x1fba, si: 0x00000000, ne: 0x1a87a0001a881},
		dm{re: 0x1fbb, si: 0x00000000, ne: 0x1a8810001a887},
		dm{re: 0x1fbc, si: 0x00000000, ne: 0x1a8870001a88c},
		dm{re: 0x1fbd, si: 0x00000000, ne: 0x1a88c0001a892},
		dm{re: 0x1fbe, si: 0x00000000, ne: 0x1a8920001a89d},
		dm{re: 0x1fbf, si: 0x00000000, ne: 0x1726a00017274},
		dm{re: 0x1fc0, si: 0x00000000, ne: 0x1030a0001030e},
		dm{re: 0x1fc1, si: 0x00000000, ne: 0x1a89d0001a8a8},
		dm{re: 0x1fc2, si: 0x00000000, ne: 0x1a8a80001a8ae},
		dm{re: 0x1fc3, si: 0x00000000, ne: 0x1032300010328},
		dm{re: 0x1fc4, si: 0x00000000, ne: 0x1a8ae0001a8b4},
		dm{re: 0x1fc5, si: 0x00000000, ne: 0x1a8b40001a8b9},
		dm{re: 0x1fc6, si: 0x00000000, ne: 0x1a8b90001a8c3},
		dm{re: 0x1fc7, si: 0x00000000, ne: 0x1a8c30001a8c7},
		dm{re: 0x1fc8, si: 0x00000000, ne: 0x1a8c70001a8cc},
		dm{re: 0x1fc9, si: 0x00000000, ne: 0x1a8cc0001a8da},
		dm{re: 0x1fca, si: 0x00000000, ne: 0x1a8da0001a8e3},
		dm{re: 0x1fcb, si: 0x00000000, ne: 0x1a8e30001a8ec},
		dm{re: 0x1fcc, si: 0x00000000, ne: 0x1a8ec0001a8f5},
		dm{re: 0x1fcd, si: 0x00000000, ne: 0x1a8f50001a8fa},
		dm{re: 0x1fce, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1fcf, si: 0x00000000, ne: 0x1a8fa0001a904},
		dm{re: 0x1fd0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1fd2, si: 0x00000000, ne: 0x1a9090001a91b},
		dm{re: 0x1fd3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1fd4, si: 0x00000000, ne: 0x1a91b0001a92f},
		dm{re: -0x0001, si: 0x1a92f0001a93a, ne: 0x1a93a0001a93f},
		dm{re: -0x0001, si: 0x1a93f0001a958, ne: 0x1a9580001a96b},
		dm{re: -0x0001, si: 0x1a96b0001a982, ne: 0x1a9820001a996},
		dm{re: -0x0001, si: 0x1a9960001a9b1, ne: 0x1a9b10001a9c6},
		dm{re: 0x1fd5, si: 0x00000000, ne: 0x1a9c60001a9cd},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1fd9, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1a9df0001a9eb, ne: 0x1a9eb0001a9f7},
		dm{re: 0x1fdb, si: 0x00000000, ne: 0x1a9fc0001aa05},
		dm{re: 0x1fdc, si: 0x00000000, ne: 0x1aa050001aa0e},
		dm{re: 0x1fdd, si: 0x00000000, ne: 0x1aa0e0001aa18},
		dm{re: 0x1fde, si: 0x00000000, ne: 0x1aa180001aa23},
		dm{re: 0x1fdf, si: 0x00000000, ne: 0x1aa230001aa2a},
		dm{re: 0x1fe0, si: 0x00000000, ne: 0x1aa2a0001aa30},
		dm{re: 0x1fe1, si: 0x00000000, ne: 0x1aa300001aa34},
		dm{re: 0x1fe2, si: 0x00000000, ne: 0x1aa340001aa3d},
		dm{re: 0x1fe3, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1fe6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1fe7, si: 0x00000000, ne: 0x1aa4b0001aa55},
		dm{re: 0x1fe8, si: 0x00000000, ne: 0x1aa550001aa5a},
		dm{re: 0x1fe9, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1fea, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1feb, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1aa5f0001aa6b, ne: 0x1aa5f0001aa6b},
		dm{re: -0x0001, si: 0x1aa6b0001aa7b, ne: 0x1aa6b0001aa7b},
		dm{re: 0x1fed, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1fee, si: 0x00000000, ne: 0x185190001851e},
		dm{re: 0x1fef, si: 0x00000000, ne: 0x1aa7b0001aa86},
		dm{re: 0x1ff0, si: 0x00000000, ne: 0x1aa860001aa96},
		dm{re: 0x1ff1, si: 0x00000000, ne: 0x1aa960001aaa5},
		dm{re: 0x1ff2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ff4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ff5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x1ff7, si: 0x00000000, ne: 0x81400000817},
		dm{re: 0x1ff8, si: 0x00000000, ne: 0x1aab00001aab7},
		dm{re: 0x1ff9, si: 0x00000000, ne: 0x1aab70001aac0},
		dm{re: 0x1ffa, si: 0x00000000, ne: 0x1aaa00001aaf},
		dm{re: 0x1ffb, si: 0x00000000, ne: 0x1aac00001aaca},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1aad50001aade},
		dm{re: -0x0001, si: 0x00000000, ne: 0x377e00003786},
		dm{re: -0x0001, si: 0x1aae70001aaf5, ne: 0x1aaf50001ab05},
		dm{re: -0x0001, si: 0x1ab050001ab12, ne: 0x1ab120001ab21},
		dm{re: -0x0001, si: 0x1ab210001ab32, ne: 0x1ab320001ab45},
		dm{re: -0x0001, si: 0x1ab450001ab4f, ne: 0x1ab4f0001ab57},
		dm{re: -0x0001, si: 0x1ab570001ab67, ne: 0x1ab670001ab77},
		dm{re: -0x0001, si: 0x1ab770001ab8b, ne: 0x1ab8b0001aba1},
		dm{re: -0x0001, si: 0x1aba10001abb5, ne: 0x1abb50001abcb},
		dm{re: -0x0001, si: 0x1abcb0001abd5, ne: 0x1abd50001abdf},
		dm{re: -0x0001, si: 0x1abdf0001abe7, ne: 0x1abdf0001abe7},
		dm{re: 0x2000, si: 0x00000000, ne: 0x1abe70001abee},
		dm{re: -0x0001, si: 0x1abee0001abf5, ne: 0x1abf50001abfc},
		dm{re: -0x0001, si: 0x1abfc0001ac06, ne: 0x1a5cb0001a5cf},
		dm{re: -0x0001, si: 0x1ac060001ac10, ne: 0x1ac060001ac10},
		dm{re: -0x0001, si: 0x1ac100001ac22, ne: 0x1ac220001ac36},
		dm{re: -0x0001, si: 0x1ac360001ac4c, ne: 0x1ac4c0001ac64},
		dm{re: -0x0001, si: 0x1ac640001ac72, ne: 0x1ac720001ac85},
		dm{re: -0x0001, si: 0x1ac850001ac95, ne: 0x1ac950001aca5},
		dm{re: -0x0001, si: 0x1aca50001acb1, ne: 0x1aca50001acb1},
		dm{re: -0x0001, si: 0x1acb10001acc2, ne: 0x1acc20001acd5},
		dm{re: -0x0001, si: 0x1acd50001ace1, ne: 0x1ace10001aced},
		dm{re: -0x0001, si: 0x1aced0001acf4, ne: 0x1acf40001acfb},
		dm{re: -0x0001, si: 0x1acfb0001ad08, ne: 0x1ad080001ad17},
		dm{re: 0x2001, si: 0x00000000, ne: 0x1ad170001ad2c},
		dm{re: -0x0001, si: 0x1ad2c0001ad3d, ne: 0x1ad3d0001ad50},
		dm{re: -0x0001, si: 0x1ad500001ad66, ne: 0x1ad660001ad7e},
		dm{re: 0x2002, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1ad980001ada5, ne: 0x1ada50001adac},
		dm{re: -0x0001, si: 0x1adac0001adb2, ne: 0x1adb20001adb8},
		dm{re: -0x0001, si: 0x1adb80001adc4, ne: 0x1adc40001add0},
		dm{re: 0x200a, si: 0x00000000, ne: 0x1add40001add7},
		dm{re: 0x200b, si: 0x00000000, ne: 0x1add70001addb},
		dm{re: 0x200c, si: 0x00000000, ne: 0x1addb0001ade2},
		dm{re: 0x200d, si: 0x00000000, ne: 0x1ade20001ade5},
		dm{re: 0x200e, si: 0x00000000, ne: 0x1ade50001adef},
		dm{re: 0x200f, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1adf50001adfa, ne: 0x1adf50001adfa},
		dm{re: -0x0001, si: 0x1adfa0001ae05, ne: 0x1ae050001ae10},
		dm{re: -0x0001, si: 0x1ae100001ae17, ne: 0x1ae170001ae1e},
		dm{re: 0x2011, si: 0x00000000, ne: 0x1ae1e0001ae27},
		dm{re: 0x2012, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2013, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2014, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2016, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2018, si: 0x00000000, ne: 0x1ae410001ae4b},
		dm{re: 0x2019, si: 0x00000000, ne: 0x1ae4b0001ae53},
		dm{re: -0x0001, si: 0x1ae530001ae5a, ne: 0x1ae5a0001ae62},
		dm{re: -0x0001, si: 0x1ae620001ae69, ne: 0x1ae620001ae69},
		dm{re: 0x201a, si: 0x00000000, ne: 0x1ae690001ae71},
		dm{re: -0x0001, si: 0x1ae710001ae7c, ne: 0x1ae7c0001ae88},
		dm{re: -0x0001, si: 0x1ae880001ae8e, ne: 0x1ae8e0001ae95},
		dm{re: -0x0001, si: 0x1ae950001ae9c, ne: 0x1ae9c0001aea4},
		dm{re: -0x0001, si: 0x1aea40001aeaf, ne: 0x1aeaf0001aebb},
		dm{re: -0x0001, si: 0x1aebb0001aec6, ne: 0x1aec60001aed2},
		dm{re: -0x0001, si: 0x1aed20001aed8, ne: 0x1aed80001aedf},
		dm{re: -0x0001, si: 0x1aedf0001aee5, ne: 0x1aedf0001aee5},
		dm{re: 0x201b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x201e, si: 0x00000000, ne: 0x1aeee0001aef7},
		dm{re: 0x201f, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2020, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2022, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2023, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2025, si: 0x00000000, ne: 0x1af010001af07},
		dm{re: 0x2026, si: 0x00000000, ne: 0x1af070001af0b},
		dm{re: 0x2027, si: 0x00000000, ne: 0xccd30000ccd9},
		dm{re: 0x2028, si: 0x00000000, ne: 0x1af0b0001af0f},
		dm{re: 0x2029, si: 0x00000000, ne: 0x1af0f0001af16},
		dm{re: 0x202a, si: 0x00000000, ne: 0x64a3000064a8},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1af220001af27},
		dm{re: -0x0001, si: 0x1af2b0001af30, ne: 0x1af300001af33},
		dm{re: -0x0001, si: 0x1af330001af38, ne: 0x1af380001af3f},
		dm{re: -0x0001, si: 0x1af3f0001af44, ne: 0x1af440001af47},
		dm{re: -0x0001, si: 0x1af470001af4c, ne: 0x1af4c0001af4f},
		dm{re: 0x202d, si: 0x00000000, ne: 0x1af4f0001af52},
		dm{re: -0x0001, si: 0x1af520001af57, ne: 0x1af570001af5a},
		dm{re: -0x0001, si: 0x1af5a0001af5f, ne: 0x1af5f0001af66},
		dm{re: -0x0001, si: 0x1af660001af6b, ne: 0x1af6b0001af6e},
		dm{re: -0x0001, si: 0x1af6e0001af74, ne: 0x1af740001af77},
		dm{re: -0x0001, si: 0x1af770001af7c, ne: 0x1af7c0001af7f},
		dm{re: -0x0001, si: 0x1af7f0001af84, ne: 0x1af840001af87},
		dm{re: -0x0001, si: 0x1af870001af8c, ne: 0x1af8c0001af93},
		dm{re: -0x0001, si: 0x1af930001af98, ne: 0x1af980001af9b},
		dm{re: -0x0001, si: 0x1af9b0001afa1, ne: 0x1afa10001afa8},
		dm{re: -0x0001, si: 0x1afa80001afae, ne: 0x1afae0001afb5},
		dm{re: -0x0001, si: 0x1afb50001afbb, ne: 0x1afbb0001afc2},
		dm{re: -0x0001, si: 0x1afc20001afc8, ne: 0x1afc80001afcf},
		dm{re: -0x0001, si: 0x1afcf0001afd4, ne: 0x1afd40001afd7},
		dm{re: -0x0001, si: 0x1afd70001afdc, ne: 0x1afdc0001afdf},
		dm{re: -0x0001, si: 0x1afdf0001afe5, ne: 0x1afe50001afec},
		dm{re: -0x0001, si: 0x1afec0001aff2, ne: 0x1aff20001aff6},
		dm{re: -0x0001, si: 0x1aff60001affb, ne: 0x1affb0001afff},
		dm{re: 0x202e, si: 0x00000000, ne: 0x1afff0001b006},
		dm{re: -0x0001, si: 0x1b0060001b00b, ne: 0x1b00b0001b013},
		dm{re: -0x0001, si: 0x1b0130001b019, ne: 0xf7660000f769},
		dm{re: -0x0001, si: 0x1b0190001b01e, ne: 0xf7a50000f7a8},
		dm{re: -0x0001, si: 0x1b01e0001b023, ne: 0xf7bb0000f7be},
		dm{re: -0x0001, si: 0x1b0230001b028, ne: 0x1b0280001b030},
		dm{re: -0x0001, si: 0x1b0300001b035, ne: 0x1b0350001b03e},
		dm{re: -0x0001, si: 0x1b03e0001b043, ne: 0x1b0430001b050},
		dm{re: -0x0001, si: 0x1b0500001b055, ne: 0x1b0550001b061},
		dm{re: -0x0001, si: 0x1b0610001b06a, ne: 0x1b0610001b06a},
		dm{re: 0x202f, si: 0x00000000, ne: 0x1b06a0001b072},
		dm{re: 0x2030, si: 0x00000000, ne: 0x1b06a0001b072},
		dm{re: 0x2031, si: 0x00000000, ne: 0x1b0720001b076},
		dm{re: 0x2032, si: 0x00000000, ne: 0x1b0760001b07f},
		dm{re: 0x2033, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1b07f0001b08a, ne: 0x1b08a0001b095},
		dm{re: 0x2034, si: 0x00000000, ne: 0x1b0950001b0a3},
		dm{re: 0x2035, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2036, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1b0a90001b0b0},
		dm{re: 0x2039, si: 0x00000000, ne: 0x1b0b30001b0bb},
		dm{re: 0x203a, si: 0x00000000, ne: 0xb7550000b757},
		dm{re: -0x0001, si: 0x1b0c00001b0cb, ne: 0x1b0cb0001b0d6},
		dm{re: 0x203c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1b0dc0001b0e4, ne: 0x1b0e40001b0ec},
		dm{re: -0x0001, si: 0x1b0ec0001b0f2, ne: 0x1b0f20001b0f6},
		dm{re: 0x203e, si: 0x00000000, ne: 0x1b0f60001b0fb},
		dm{re: 0x2040, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2042, si: 0x00000000, ne: 0x1b10a0001b117},
		dm{re: 0x2043, si: 0x00000000, ne: 0x1b1170001b123},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2047, si: 0x00000000, ne: 0x1b1330001b13a},
		dm{re: 0x2048, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2049, si: 0x00000000, ne: 0x161a1000161a4},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1b1470001b14e, ne: 0x1b14e0001b15f},
		dm{re: -0x0001, si: 0x1b15f0001b166, ne: 0x1b1660001b175},
		dm{re: -0x0001, si: 0x1b1750001b17c, ne: 0x1b17c0001b18d},
		dm{re: -0x0001, si: 0x1b18d0001b194, ne: 0x1b1940001b1a1},
		dm{re: -0x0001, si: 0x1b1a10001b1a8, ne: 0x1b1a80001b1b8},
		dm{re: 0x204c, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1b1b80001b1c1, ne: 0x1b1c10001b1cb},
		dm{re: -0x0001, si: 0x1b1cb0001b1d2, ne: 0x1b1d20001b1e3},
		dm{re: 0x204d, si: 0x00000000, ne: 0x1b1e30001b1f6},
		dm{re: -0x0001, si: 0x1b1f60001b206, ne: 0x1b2060001b219},
		dm{re: -0x0001, si: 0x1b2190001b228, ne: 0x1b2280001b23a},
		dm{re: 0x204e, si: 0x00000000, ne: 0x1b23a0001b24c},
		dm{re: -0x0001, si: 0x1b24c0001b25c, ne: 0x1b25c0001b26f},
		dm{re: -0x0001, si: 0x1b26f0001b27b, ne: 0x1b27b0001b287},
		dm{re: 0x204f, si: 0x00000000, ne: 0x1b2870001b295},
		dm{re: -0x0001, si: 0x1b2950001b29c, ne: 0x1b29c0001b2b0},
		dm{re: 0x2050, si: 0x00000000, ne: 0x1b2b00001b2c4},
		dm{re: 0x2051, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2052, si: 0x00000000, ne: 0x1b2c40001b2d6},
		dm{re: -0x0001, si: 0x1b2d60001b2dd, ne: 0x1b2dd0001b2ef},
		dm{re: 0x2053, si: 0x00000000, ne: 0x1b2ef0001b301},
		dm{re: 0x2054, si: 0x00000000, ne: 0x1b3010001b312},
		dm{re: 0x2055, si: 0x00000000, ne: 0x1b3120001b325},
		dm{re: -0x0001, si: 0x1b3250001b32c, ne: 0x1b32c0001b33e},
		dm{re: -0x0001, si: 0x1b33e0001b345, ne: 0x1b3450001b357},
		dm{re: -0x0001, si: 0x1b3570001b35e, ne: 0x1b35e0001b370},
		dm{re: -0x0001, si: 0x1b3700001b377, ne: 0x1b3770001b38a},
		dm{re: 0x2056, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1b38a0001b391, ne: 0x1b3910001b397},
		dm{re: 0x2057, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1b3970001b39e, ne: 0x1b39e0001b3a4},
		dm{re: -0x0001, si: 0x1b3a40001b3ab, ne: 0x1b3ab0001b3b2},
		dm{re: -0x0001, si: 0x1b3b20001b3b9, ne: 0x1b3b90001b3c0},
		dm{re: 0x2058, si: 0x00000000, ne: 0x1b3c00001b3c7},
		dm{re: 0x2059, si: 0x00000000, ne: 0x1b3c70001b3d3},
		dm{re: -0x0001, si: 0x1b3d30001b3da, ne: 0x1b3da0001b3e5},
		dm{re: -0x0001, si: 0x1b3e50001b3ec, ne: 0x1b3ec0001b3f8},
		dm{re: -0x0001, si: 0x1b3f80001b3ff, ne: 0x5b4b00005b4f},
		dm{re: -0x0001, si: 0x1b3ff0001b406, ne: 0x1b4060001b40d},
		dm{re: 0x205a, si: 0x00000000, ne: 0x1b40d0001b415},
		dm{re: -0x0001, si: 0x1b4150001b41c, ne: 0x1b41c0001b423},
		dm{re: -0x0001, si: 0x1b4230001b42a, ne: 0x1b42a0001b431},
		dm{re: 0x205b, si: 0x00000000, ne: 0x1b4310001b438},
		dm{re: -0x0001, si: 0x1b4380001b43f, ne: 0x1b43f0001b447},
		dm{re: -0x0001, si: 0x1b4470001b44f, ne: 0x1b44f0001b45c},
		dm{re: -0x0001, si: 0x1b45c0001b463, ne: 0x1b4630001b469},
		dm{re: -0x0001, si: 0x1b4690001b470, ne: 0x1b4700001b477},
		dm{re: 0x205c, si: 0x00000000, ne: 0x1b4770001b47e},
		dm{re: 0x205d, si: 0x00000000, ne: 0x1b47e0001b484},
		dm{re: 0x205e, si: 0x00000000, ne: 0x1b4840001b491},
		dm{re: 0x2060, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2061, si: 0x00000000, ne: 0x1b4990001b49f},
		dm{re: 0x2063, si: 0x00000000, ne: 0x1b4a30001b4a9},
		dm{re: 0x2064, si: 0x00000000, ne: 0x1b4a90001b4b1},
		dm{re: 0x2065, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1b4b10001b4b9, ne: 0x1b4b10001b4b9},
		dm{re: -0x0001, si: 0x781d00007820, ne: 0x781d00007820},
		dm{re: -0x0001, si: 0x1b4b90001b4c0, ne: 0x1b4c00001b4c7},
		dm{re: 0x2066, si: 0x00000000, ne: 0x1b4c70001b4ce},
		dm{re: 0x2067, si: 0x00000000, ne: 0x1b4ce0001b4dc},
		dm{re: 0x2069, si: 0x00000000, ne: 0x1b4dc0001b4ea},
		dm{re: 0x206a, si: 0x00000000, ne: 0x1b4ea0001b4f7},
		dm{re: 0x206b, si: 0x00000000, ne: 0x1b4f70001b4fd},
		dm{re: 0x206d, si: 0x00000000, ne: 0x1b4fd0001b502},
		dm{re: 0x206e, si: 0x00000000, ne: 0x1b5020001b506},
		dm{re: 0x206f, si: 0x00000000, ne: 0x1b5060001b516},
		dm{re: 0x2070, si: 0x00000000, ne: 0x1b5160001b526},
		dm{re: 0x2071, si: 0x00000000, ne: 0x1b5260001b532},
		dm{re: 0x2072, si: 0x00000000, ne: 0x1b5320001b538},
		dm{re: 0x2073, si: 0x00000000, ne: 0x1b5380001b53e},
		dm{re: 0x2074, si: 0x00000000, ne: 0x1b53e0001b544},
		dm{re: 0x2075, si: 0x00000000, ne: 0x1b5440001b54b},
		dm{re: -0x0001, si: 0x1b54b0001b559, ne: 0x1b54b0001b559},
		dm{re: -0x0001, si: 0x1b5590001b566, ne: 0x1b5590001b566},
		dm{re: -0x0001, si: 0x1b5660001b571, ne: 0x1b5660001b571},
		dm{re: -0x0001, si: 0x1b5710001b57c, ne: 0x1b5710001b57c},
		dm{re: -0x0001, si: 0x1b57c0001b59c, ne: 0x1b59c0001b5b0},
		dm{re: -0x0001, si: 0x1b5b00001b5c9, ne: 0x1b5c90001b5d4},
		dm{re: -0x0001, si: 0x1b5d40001b5e6, ne: 0x1b5e60001b5f2},
		dm{re: -0x0001, si: 0x1b5f20001b613, ne: 0x1b6130001b62b},
		dm{re: 0x2078, si: 0x00000000, ne: 0x1b62b0001b637},
		dm{re: 0x2079, si: 0x00000000, ne: 0x778800007792},
		dm{re: -0x0001, si: 0x1b6370001b652, ne: 0x1b6520001b65e},
		dm{re: -0x0001, si: 0x1b65e0001b672, ne: 0x1b6720001b67a},
		dm{re: -0x0001, si: 0x1b67a0001b695, ne: 0x1b6950001b6a1},
		dm{re: -0x0001, si: 0x1b6a10001b6bf, ne: 0x1b6bf0001b6e5},
		dm{re: -0x0001, si: 0x1b6e50001b6ec, ne: 0x1b6ec0001b71d},
		dm{re: 0x207b, si: 0x00000000, ne: 0x1b71d0001b730},
		dm{re: 0x207c, si: 0x00000000, ne: 0x1b7300001b736},
		dm{re: 0x207d, si: 0x00000000, ne: 0x1b7360001b747},
		dm{re: 0x207e, si: 0x00000000, ne: 0x1b7470001b752},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1b75b0001b774},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1b7740001b78c},
		dm{re: 0x2081, si: 0x00000000, ne: 0x1b79b0001b7a7},
		dm{re: 0x2082, si: 0x00000000, ne: 0x1b79b0001b7a7},
		dm{re: 0x2084, si: 0x00000000, ne: 0x1b7a70001b7b4},
		dm{re: 0x2085, si: 0x00000000, ne: 0x1b7b40001b7c1},
		dm{re: 0x2086, si: 0x00000000, ne: 0x1b7c10001b7cd},
		dm{re: 0x2087, si: 0x00000000, ne: 0x1b7cd0001b7d9},
		dm{re: 0x2088, si: 0x00000000, ne: 0x1b7d90001b7e5},
		dm{re: 0x2089, si: 0x00000000, ne: 0x1b7e50001b7f1},
		dm{re: 0x208a, si: 0x00000000, ne: 0x1b7f10001b7fd},
		dm{re: 0x208b, si: 0x00000000, ne: 0x1b7fd0001b807},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1b8100001b81c, ne: 0x1b8100001b81c},
		dm{re: 0x208d, si: 0x00000000, ne: 0xa6420000a645},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1b82c0001b833},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2090, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2091, si: 0x00000000, ne: 0x1b8380001b83e},
		dm{re: 0x2092, si: 0x00000000, ne: 0x781d00007820},
		dm{re: 0x2094, si: 0x00000000, ne: 0x1b83e0001b84f},
		dm{re: -0x0001, si: 0x1b84f0001b855, ne: 0x1b8550001b866},
		dm{re: -0x0001, si: 0x1b8660001b86c, ne: 0x1b86c0001b87d},
		dm{re: -0x0001, si: 0x1b87d0001b883, ne: 0x1b8830001b894},
		dm{re: -0x0001, si: 0x1b8940001b89a, ne: 0x1b89a0001b8ab},
		dm{re: -0x0001, si: 0x1b8ab0001b8b1, ne: 0x1b8b10001b8c1},
		dm{re: -0x0001, si: 0x1b8c10001b8c9, ne: 0x1b8c90001b8de},
		dm{re: 0x2095, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x209a, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: 0x209b, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1b9d10001b9db, ne: 0x1b9d10001b9db},
		dm{re: 0x209d, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x209e, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1b9f10001b9f8, ne: 0x1b9f10001b9f8},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1ba0e0001ba17},
		dm{re: -0x0001, si: 0x1ba170001ba24, ne: 0x1ba170001ba24},
		dm{re: 0x20a2, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1ba2b0001ba31},
		dm{re: -0x0001, si: 0x00000000, ne: 0x1ba340001ba3c},
		dm{re: -0x0001, si: 0x1ba4e0001ba50, ne: 0x1ba4e0001ba50},
		dm{re: -0x0001, si: 0x1ba500001ba5a, ne: 0x1ba500001ba5a},
		dm{re: -0x0001, si: 0x1ba5a0001ba64, ne: 0x1ba5a0001ba64},
		dm{re: -0x0001, si: 0x1ba640001ba6e, ne: 0x1ba640001ba6e},
		dm{re: -0x0001, si: 0x1ba6e0001ba77, ne: 0x1ba6e0001ba77},
		dm{re: -0x0001, si: 0x1ba770001ba81, ne: 0x1ba770001ba81},
		dm{re: -0x0001, si: 0x1ba810001ba8a, ne: 0x1ba810001ba8a},
		dm{re: -0x0001, si: 0x1ba8a0001ba97, ne: 0x1ba8a0001ba97},
		dm{re: 0x20ae, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20af, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1ba970001ba9e, ne: 0x1ba970001ba9e},
		dm{re: 0x20b4, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1baa80001bab0, ne: 0x1bab00001bab9},
		dm{re: -0x0001, si: 0x1bab90001bac1, ne: 0x1bac10001baca},
		dm{re: -0x0001, si: 0x1baca0001bad2, ne: 0x1bad20001badb},
		dm{re: -0x0001, si: 0x1badb0001bae3, ne: 0x1bae30001baec},
		dm{re: -0x0001, si: 0x1baec0001baf4, ne: 0x1baf40001bafd},
		dm{re: 0x20b5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20b7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20b8, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20b9, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1bb0d0001bb15, ne: 0x1bb150001bb1e},
		dm{re: -0x0001, si: 0x1bb220001bb29, ne: 0x1bb220001bb29},
		dm{re: -0x0001, si: 0x1bb2c0001bb36, ne: 0x1bb2c0001bb36},
		dm{re: -0x0001, si: 0x1bb360001bb41, ne: 0x1bb360001bb41},
		dm{re: -0x0001, si: 0x1bb410001bb4c, ne: 0x1bb410001bb4c},
		dm{re: -0x0001, si: 0x1bb4c0001bb59, ne: 0x1bb4c0001bb59},
		dm{re: -0x0001, si: 0x1bb590001bb64, ne: 0x1bb590001bb64},
		dm{re: 0x20bd, si: 0x00000000, ne: 0x1bb640001bb6f},
		dm{re: 0x20be, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20bf, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20c0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20c1, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20c2, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20c3, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20c4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20c5, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1bb6f0001bb74, ne: 0x1bb6f0001bb74},
		dm{re: -0x0001, si: 0x1bb740001bb78, ne: 0x1bb740001bb78},
		dm{re: 0x20c9, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20cc, si: 0x00000000, ne: 0x1bb8e0001bb95},
		dm{re: 0x20ce, si: 0x00000000, ne: 0x1bb950001bba3},
		dm{re: -0x0001, si: 0x1bbac0001bbae, ne: 0x1bbac0001bbae},
		dm{re: 0x20d0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20d1, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: -0x0001, si: 0x1bbbf0001bbca, ne: 0x1bbbf0001bbca},
		dm{re: 0x20d5, si: 0x00000000, ne: 0x1bbde0001bbe8},
		dm{re: 0x20d6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20d7, si: 0x00000000, ne: 0x1bbe80001bbef},
		dm{re: 0x20d8, si: 0x00000000, ne: 0x1bbef0001bbfc},
		dm{re: 0x20da, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20db, si: 0x00000000, ne: 0x107ef000107fb},
		dm{re: -0x0001, si: 0x1bc050001bc0c, ne: 0x1bc050001bc0c},
		dm{re: -0x0001, si: 0x1bc0c0001bc13, ne: 0x1bc0c0001bc13},
		dm{re: -0x0001, si: 0x1bc1a0001bc23, ne: 0x1bc1a0001bc23},
		dm{re: 0x20e5, si: 0x00000000, ne: 0x1bc2d0001bc2f},
		dm{re: 0x20e6, si: 0x00000000, ne: 0x1bbef0001bbfc},
		dm{re: -0x0001, si: 0x1bc2f0001bc39, ne: 0x1bc390001bc48},
		dm{re: 0x20e7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20e8, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20ea, si: 0x00000000, ne: 0xbd000000bd},
		dm{re: 0x20eb, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20ec, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20ed, si: 0x00000000, ne: 0x1bc520001bc57},
		dm{re: -0x0001, si: 0x1bc570001bc5d, ne: 0x1bc570001bc5d},
		dm{re: 0x20ee, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20f0, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20f1, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1bc760001bc7d, ne: 0x1bc760001bc7d},
		dm{re: 0x20f2, si: 0x00000000, ne: 0x1bc7d0001bc85},
		dm{re: 0x20f3, si: 0x00000000, ne: 0x1bc850001bc8e},
		dm{re: 0x20f4, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20f5, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20f6, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20f7, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x20f9, si: 0x00000000, ne: 0x1bbef0001bbfc},
		dm{re: -0x0001, si: 0x1bc930001bc9e, ne: 0x1bc930001bc9e},
		dm{re: 0x20fb, si: 0x00000000, ne: 0x13700000139},
		dm{re: -0x0001, si: 0x1bcb20001bcbc, ne: 0x1bcbc0001bcc6},
		dm{re: 0x20fd, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x2100, si: 0x00000000, ne: 0x1bcd90001bce1},
		dm{re: 0x2101, si: 0x00000000, ne: 0x1bce10001bce9},
		dm{re: 0x2102, si: 0x00000000, ne: 0x1bce90001bcf1},
		dm{re: 0x2103, si: 0x00000000, ne: 0x1bcf10001bcf9},
		dm{re: 0x2104, si: 0x00000000, ne: 0x1bcf90001bd01},
		dm{re: 0x2105, si: 0x00000000, ne: 0x1bd010001bd09},
		dm{re: -0x0001, si: 0x1bd090001bd11, ne: 0x1bd090001bd11},
		dm{re: -0x0001, si: 0x1bd110001bd18, ne: 0x1bd110001bd18},
		dm{re: 0x2106, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x210b, si: 0x00000000, ne: 0x13700000139},
		dm{re: 0x210c, si: 0x00000000, ne: 0x1bd230001bd2e},
	}
	__dr_re = []*regexp.Regexp{
		regexp.MustCompile(`(?i)EK-G[CN][0-9]{3}`),
		regexp.MustCompile(`(?i)EK-GC([0-9]{3})`),
		regexp.MustCompile(`(?i)(?:Tesla/[0-9.]+|QtCarBrowser)`),
		regexp.MustCompile(`(?i)Tesla/[0-9.]+`),
		regexp.MustCompile(`(?i)Archos.*GAMEPAD([2]?)`),
		regexp.MustCompile(`(?i)Nintendo (([3]?DS[i]?)|Wii[U]?|Switch)`),
		regexp.MustCompile(`(?i)PlayStation ?(2|3|4 Pro|4|5|Portable|Vita)`),
		regexp.MustCompile(`(?i)(?:E500A_2019|2E E450 2018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E500A_2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2E E450 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:180[1379]-A01|1713-A01|1707-A01|1509-A00|1603-A03|1607-A01|1503-A01|1505-A02|1605-A01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1807-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1803-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1809-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1713-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1707-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1801-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1509-A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1503-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1605-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1603-A03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1607-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1505-A02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)3GNET[ _]`),
		regexp.MustCompile(`(?i)3GNET[ _](U8|T800|U6s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)3GNET[ _]T ?900`),
		regexp.MustCompile(`(?i)(?:Aplay ?[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aplay ?([34])`),
		regexp.MustCompile(`(?i)AC0731B|AC1024C|AC7803C|BC9710AM|EL72B|LC0720C|LC0723B|LC0725B|LC0804B|LC0808B|LC0809B|LC0810C|LC0816C|LC0901D|LC1016C|MT0724B|MT0729[BD]|MT0811B|OC1020A|RC0709B|RC0710B|RC0718C|RC0719H|RC0721B|RC0722C|RC0726B|RC0734H|RC0743H|RC0817C|RC1018C|RC1019G|RC1025F|RC1301C|RC780[24]F|RC9711B|RC9712C|RC9716B|RC9717B|RC9724C|RC9726C|RC9727F|RC9730C|RC9731C|TS0807B|TS1013B|VM0711A|VM1017A|RC0813C|QS9719D|QS9718C|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT7801C|TS9708B|AC0732C|MT0739D|MT0812E|(?:3Q_)?ER71B`),
		regexp.MustCompile(`(?i)MT0724B|LC0901D|LC0816C|LC0810C|LC0809B|LC0808B|LC0804B|LC0725B|LC0723B`),
		regexp.MustCompile(`(?i)VM1017A|TS1013B|TS0807B|RC9731C|RC9730C|RC9727F|RC9726C|RC9724C|RC9717B|RC9716B|RC9712C|RC9711B|RC1301C|RC1025F|RC1019G|RC1018C|RC0817C|RC0813C|RC0743H|RC0734H|RC0726B|RC0722C|RC0721B|RC0719H|RC0718C|RC0710B|RC0709B|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT0811B|MT0739D|MT0729[BD]|LC1016C|LC0720C|BC9710AM|AC1024C|AC0731B`),
		regexp.MustCompile(`(?i)MT7801C|QS9718C|QS9719D|VM0711A|OC1020A`),
		regexp.MustCompile(`(?i)AC7803C|AC0732C`),
		regexp.MustCompile(`(?i)MT0812E|RC7802F`),
		regexp.MustCompile(`(?i)EL72B|(?:3Q_)?ER71B`),
		regexp.MustCompile(`(?i)(RC7804F)`),
		regexp.MustCompile(`(?i)4Good[ _]|S450m [43]G|S555m 4G|S501m 3G|T700i_3G|People (?:G503|G410|GT300)|Light (?:A10[34]|B100)`),
		regexp.MustCompile(`(?i)(T700i|T100m)[_ ]?3G`),
		regexp.MustCompile(`(?i)People (GT300|AT100)`),
		regexp.MustCompile(`(?i)S555m[_ ]4G`),
		regexp.MustCompile(`(?i)(S(?:450m|501m)[_ ][43]G|Light (?:A10[34]|B100)|People (?:G503|G410))`),
		regexp.MustCompile(`(?i)4Good[ _]([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)4ife (4K Smart TV Box)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SWEGUE|DRENA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8848 (M[3-6])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A1 (?:Alpha|Alpha 20\+)|Alpha 20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1 Alpha 20\+`),
		regexp.MustCompile(`(?i)(Hashtag|Shine|Chacer)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM ([^/;)]+)(?: Build|[;)])|AG[_ ]Go[_-]Tab|(?:Flair|Ultra 2|Freedom Access)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AG[_ ]Go[_-]Tab[_ ]Access(_2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Flair|Ultra 2|Freedom Access)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM A9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:AIDATA ELDE 10 TABLET|ADT_?1061(?:_1)?|ADT1012L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADT_?1061(?:_1)?`),
		regexp.MustCompile(`(?i)AIRBOOK PRO 8S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris708|Kingcomm C500`),
		regexp.MustCompile(`(?i)ALDINORD, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)ALDISUED, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)AM(350|355|40[257]|41[025]|450|50[689]|52[037]|51[58]|53[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AM(355|407)`),
		regexp.MustCompile(`(?i)AM([0-9]{3})`),
		regexp.MustCompile(`(?i)ANS/|UL40 Build`),
		regexp.MustCompile(`(?i)AOC,|(?:Q10107L-ME)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Q10107L-ME)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LE(?:32|43)S5970(?:s)?-20|LE55U7970-30|LE43S5977-20|U60856)`),
		regexp.MustCompile(`(?i)AOYODKG[_ ](A38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(WT(?:22|19)M-FI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARRIS[,;] ([^),;/]+)`),
		regexp.MustCompile(`(?i)(?:EA1002|EA21100[12]|U(?:304|202|705|31[89])AA|QS5509A|V340U|V350U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U304AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U705AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA211001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QS5509A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U318AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U319AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V350U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U202AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA1002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA211002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V340U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TB-703G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Excer[ _]`),
		regexp.MustCompile(`(?i)Excer[ _]G5.([36])`),
		regexp.MustCompile(`(?i)Excer[ _]G5`),
		regexp.MustCompile(`(?i)Excer[ _]10[ _]PRO`),
		regexp.MustCompile(`(?i)Excer[ _]8`),
		regexp.MustCompile(`(?i)(?:ACCENT[_ ]NEON|FAST73G|PEARL[_ ]A[24567]|TANK_P55|CAMELEON[_ ](?:C[456]|A1)(?:[_ ]PLUS)?|Speed[- ](?:[AXYM]2|X2\+)|SURF1000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ACCENT[_ ]NEON(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAMELEON[_ ]C6[_ ]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Speed[- ]([AXYM]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Speed-X2\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAMELEON[_ ](C[456]|A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL A4 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL[_ ]A([2567])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TANK_P55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FAST73G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURF1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BUZZ [12]|BUZZ 2|CLEVER 1|URBAN 1(?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BUZZ ([12]) Lite`),
		regexp.MustCompile(`(?i)BUZZ ([12]) Plus`),
		regexp.MustCompile(`(?i)BUZZ ([12])`),
		regexp.MustCompile(`(?i)acer|a(?:101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)|Android.*V3[67]0(?:[);/ ]|$)|Android.*Z1[23456]0 Build|Android.*Z5\d{2} Build|Android.*T0[234678] Build|Android.*S55(?:[);/ ]|$)|(?:A1-(713(HD)?|7[23]4|830|841|840(?:FHD)?|81[01])|A3-A[1234][01]|B1-(7[1235-9][01](HD)?|7[23]3|7A0|8[1235]0|A71|860A)|TPA60W|B3-(A[125]0|A3[02]|A40FHD)|E39)(?:[);/ ]|$)|S5[12]0 Build|(DA[0-9]+HQ?L|Aspire (?:V5-121|XC-704G|V5-573G|4349)|Chromebook 14 \(CB3-431\)|Predator G9-793|GT-810|B1-870|B3-A20B|B3-A4[02]|B3-A50FHD|ET-108-11A|ATAB1021E|ACTAB721|A3-A20FHD|ATAB721E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DA220HQL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DA241HL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DA[0-9]+HQ?L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1-81[01]`),
		regexp.MustCompile(`(?i)ATAB(1021|721)E`),
		regexp.MustCompile(`(?i)A1-84(1|0(?:FHD)?)`),
		regexp.MustCompile(`(?i)A1-713(HD)?`),
		regexp.MustCompile(`(?i)A1-7[23]4`),
		regexp.MustCompile(`(?i)A3-A[12][01]`),
		regexp.MustCompile(`(?i)A3-A[34]0`),
		regexp.MustCompile(`(?i)B1-7(?:[5-9]0|30HD|A0)`),
		regexp.MustCompile(`(?i)B1-7[123][01]|B1-A71`),
		regexp.MustCompile(`(?i)B1-7[23]3`),
		regexp.MustCompile(`(?i)B1-8[123567]0`),
		regexp.MustCompile(`(?i)B3-A([125]0|3[02]|[45]0FHD|4[02])`),
		regexp.MustCompile(`(?i)A50[01]`),
		regexp.MustCompile(`(?i)(ACTAB721)`),
		regexp.MustCompile(`(?i)E39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E310(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E320(?:-orange)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*V360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*V370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?P400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?P300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?S200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?E100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z1([234])0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z150(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z160(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z(5\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*S57(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T07(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T08(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*S55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer )?(Chromebook R1[13])`),
		regexp.MustCompile(`(?i)(?:Acer )?(Chromebook 14)`),
		regexp.MustCompile(`(?i)(Aspire (?:V5-121|XC-704G|V5-573G|A515-51G|4349))`),
		regexp.MustCompile(`(?i)(Predator G9-793|Aspire E5-511)`),
		regexp.MustCompile(`(?i)Acer; ?([^;\(\)/]+)`),
		regexp.MustCompile(`(?i)Acer[ _\-]?([^;\(\)/]+)[();/ ]`),
		regexp.MustCompile(`(?i)acer[\-_]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)a(101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Adronix[ _]?(?:MT[0-9]+|X1001|Mini ?Tab ?7 ?3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Adronix ?Mini ?Tab ?7 ?3G`),
		regexp.MustCompile(`(?i)Adronix[ _]?(MT[0-9]+|X1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ADVAN (?:M4|S40)|i7U|S45E|S50H|I7D|i55[KD]|i4U|S7D|S4Z|i5[KE]|S5E[ _]NXT|S5J\+|S4\+)(?:[);/ ]|$)|[ ](?:50(?:[46]1|5[89]|62)|600[24])(?: Build|\) AppleWebKit)|(?:E1C_3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S5E[ _]NXT`),
		regexp.MustCompile(`(?i)i(55[KD]|5[KE])`),
		regexp.MustCompile(`(?i) 6004(?: Build|\) AppleWebKit)`),
		regexp.MustCompile(`(?i) 6002(?: Build|\) AppleWebKit)`),
		regexp.MustCompile(`(?i)(S45E|50[46]1|505[89]|5062|S50H|I7D|S7D|S4Z|S5J\+|S4\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hollogram|(?:HL(?:4936|6246|[56]575|5[67]67|9000)|IntroTr3544|Pr(?:61(?:4[56]|50)|60[27]0|5[69]50)|Tr3845|SP[345]701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IntroTr3544|Tr3845`),
		regexp.MustCompile(`(?i)SP([345]701)`),
		regexp.MustCompile(`(?i)Pr(61(?:4[56]|50)|60[27]0|5[69]50)`),
		regexp.MustCompile(`(?i)HL(4936|6246|[56]575|5[67]67|9000)`),
		regexp.MustCompile(`(?i)Hollogram ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(CYGNUSX?|Gravity Z2|ChampionPro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CYGNUSX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CYGNUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gravity Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ChampionPro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy|novo[0-9]|Novo 10 Hero|AX10PRO|NUMY3GAX9|NOVO10 Spark|Aurora-II`),
		regexp.MustCompile(`(?i)Numy[_ ]?3G[_ ]?Sword`),
		regexp.MustCompile(`(?i)NUMY3GAX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy3G_AX10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Novo 10 Hero QuadCore)`),
		regexp.MustCompile(`(?i)Novo7 ?Flame(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOVO7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Novo([0-9]+)[ \-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)AIRNESS-([\w]+)`),
		regexp.MustCompile(`(?i)Airtel[ _]`),
		regexp.MustCompile(`(?i)(AT702)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AW790|M300|AWM(?:53[39]|50[19]|561)|AW500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AW790(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AW500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AWM(53[39]|50[19]|561)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AKAI,|Akai[ _-]|Eco[ _]E2|Glory[ _](?:G[1235]|L[123]|O[125])|TAB-[79]8[03]0Q?|X6 METAL|AKTB-703MZ`),
		regexp.MustCompile(`(?i)TAB-([79]8[03]0Q?)`),
		regexp.MustCompile(`(?i)Glory[ _](G[1235]|L[123]|O[125])`),
		regexp.MustCompile(`(?i)Eco[ _]E2`),
		regexp.MustCompile(`(?i)Akai[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)AKAI,(AK3219NF)`),
		regexp.MustCompile(`(?i)Alba ?(?:57|4|10 TABLET|(?:[78]|10)(?:Nou|Pie))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alba (4)`),
		regexp.MustCompile(`(?i)Alba((?:[78]|10)(?:Nou|Pie))`),
		regexp.MustCompile(`(?i)Alcatel|Alc[a-z0-9]+|One[ _]?Touch|idol3|TIMXL|(?:(?:4003[AJ]|4009[ADEFIKMSX]|4013[DEJKMX]|4014[ADEKMX]|4015[ADNTX]|4016[ADX]|4017[ADEFSX]|4018[ADEFMX]|4024[DEX]|4027[ADNX]|4028[AEJS]|4032[ADEX]|4034[ADEFGLTX]|4035[ADXY]|4045[ADELX]|4047[ADFGNX]|4049[DEGMX]|4060[SW]|4087U|4114E|5001[ADJTU]|5002[ABDEFJHLMRSX]|5003[ADGU]|5006[ADG]|5007[AGUO]|5008[ADTUY]|5009[AD]|5010[DEGSUX]|5011A|5012[DFG]|5015[ADEX]|5016[AJX]|5017[ABDEOX]|5019D|5022[DEX]|5023[EF]|5024[ADFIJ]|5025[DEG]|5026[ADJ]|5027B|5028[ADY]|5029[ADEFY]|5030[ADEFJMU]|5032W|5033(?:[YX]R|FP|[ADEFGJMOQSTXY])|5034D|5036D|5038[ADEX]|5039[DY]|5041[CD]|5042[ADEFGTWX]|5044[ADGIKOPSTY]|5045[ADFGIJTXY]|5046[ADGIJSTUY]|5047[DIUY]|5048[AIUY]|5049[EGSWZ]|5050[ASXY]|5051[ADEJMTWX]|5052[ADY]|5053[ADKY]|5054[ADNSTWX]|5056[ADEGIJMNTUWX]|5057M|5058[AIY]|5059[ADIJSTXYZ]|5060[ADJ]|5061[AKU]|5065[ADNWX]|5070D|5080[ADFQUX]|5085[ABCDGHIJNOQY]|5086[ADY]|5090[AIY]|5095[IKY]|5098[OS]|5099[ADIUY]|5116J|5145A|6016[ADEX]|6025[DH]|6036[AXY]|6037[BKY]|6039[AHJKSY]|6042D|6043[AD]|6044D|6045[BFIKOXY]|6050[AFY]|6055[ABDHIKPUYZ]|6056H|6058[ADX]|6060[SXC]|6062W|6070K|7040[ADEFKRT]|7041[DX]|7042A|7043[AEKY]|7044[AX]|7045Y|7048[ASWX]|7053D|7055A|7070X|7071[ADX]|8030Y|8050[DEGX]|8063|8088[MQX]|8094M|9001[DIX]|9002X|9003[AX]|9005X|9007[ATX]|9008[ADIJNTUX]|9009[AG]|9010X|9013[AX]|9020A|9022X|9024O|9026X|9027[FQTWX]|9029Z|9032[WXZ]|9203A|A(?:46[46]BG|57[04]BL|576CC|621BL|50[13]DL|57[17]VL)|I213|I216[AX]|80(?:82|6[78]|5[12]))(?:_(?:EEA|RU|TR))?|P3[36]0X|AM-H200|4063F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5022[EDX]|5070D`),
		regexp.MustCompile(`(?i)4015[ATX]|4016A`),
		regexp.MustCompile(`(?i)4015[DN]|4016[DX]`),
		regexp.MustCompile(`(?i)4032[AX]`),
		regexp.MustCompile(`(?i)4032[DE]`),
		regexp.MustCompile(`(?i)7040[AFK]|7041X|7042A`),
		regexp.MustCompile(`(?i)7040[DE]|7041D`),
		regexp.MustCompile(`(?i)4018[ADEFMX]`),
		regexp.MustCompile(`(?i)4035[ADXY]`),
		regexp.MustCompile(`(?i)5038[ADEX]`),
		regexp.MustCompile(`(?i)4045[AXL]`),
		regexp.MustCompile(`(?i)4045[DE]`),
		regexp.MustCompile(`(?i)5042[AFGWX]`),
		regexp.MustCompile(`(?i)5042[DE]`),
		regexp.MustCompile(`(?i)7043[AY]|7044[AX]`),
		regexp.MustCompile(`(?i)7043[EK]`),
		regexp.MustCompile(`(?i)50[16]5X`),
		regexp.MustCompile(`(?i)5015[AE]|5016[AJ]|5065[ADWX]|5116J`),
		regexp.MustCompile(`(?i)5025[DEG]|5054[ADSTX]`),
		regexp.MustCompile(`(?i)5051[AEJMTWX]`),
		regexp.MustCompile(`(?i)5095[IKY]`),
		regexp.MustCompile(`(?i)5056[ADEGJMTUX]`),
		regexp.MustCompile(`(?i)5050[ASXY]`),
		regexp.MustCompile(`(?i)6037[BKY]`),
		regexp.MustCompile(`(?i)7071[ADX]`),
		regexp.MustCompile(`(?i)5002[ABDEHLMSXJ]`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5008R`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5002R`),
		regexp.MustCompile(`(?i)5034D|6056H`),
		regexp.MustCompile(`(?i)7040[RT]`),
		regexp.MustCompile(`(?i)5056[NW]`),
		regexp.MustCompile(`(?i)6016[AX]`),
		regexp.MustCompile(`(?i)6016[DE]`),
		regexp.MustCompile(`(?i)6036[AXY]`),
		regexp.MustCompile(`(?i)6050[AFY]`),
		regexp.MustCompile(`(?i)6039[AHJKYS]|idol3`),
		regexp.MustCompile(`(?i)6045[BFIKOYX]|AM-H200`),
		regexp.MustCompile(`(?i)6055[ABDHIKPUYZ]`),
		regexp.MustCompile(`(?i)6058[ADX]`),
		regexp.MustCompile(`(?i)6060[SX]`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?6060C`),
		regexp.MustCompile(`(?i)6043[AD]`),
		regexp.MustCompile(`(?i)4024[DEX]`),
		regexp.MustCompile(`(?i)4009[AFIKMSX]`),
		regexp.MustCompile(`(?i)4009[DE]`),
		regexp.MustCompile(`(?i)4003[AJ]|4013[DEJKMX]|4014[AEKMX]|4114E`),
		regexp.MustCompile(`(?i)4027[ADNX]|4028[AEJS]|5019D`),
		regexp.MustCompile(`(?i)5017[ABDEOX]`),
		regexp.MustCompile(`(?i)9007[TX]`),
		regexp.MustCompile(`(?i)(?:9009G|9013A)`),
		regexp.MustCompile(`(?i)8082(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8052(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8051(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:806[78]|9013X)(?:_(?:EEA|RU))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4017[ADEFSX]`),
		regexp.MustCompile(`(?i)4034[ADEFGXL]`),
		regexp.MustCompile(`(?i)4060[SW]`),
		regexp.MustCompile(`(?i)5023[EF]`),
		regexp.MustCompile(`(?i)5010[DEGSUX]`),
		regexp.MustCompile(`(?i)5012[DFG]`),
		regexp.MustCompile(`(?i)5045[ADFGIJTXY]|5145A`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5004R`),
		regexp.MustCompile(`(?i)5046[ADIJTUY]`),
		regexp.MustCompile(`(?i)5011A|5049[EG]`),
		regexp.MustCompile(`(?i)9008[ADIJNTUX]`),
		regexp.MustCompile(`(?i)(?:9027[QFTWX]|9032X)`),
		regexp.MustCompile(`(?i)5085[BQ]`),
		regexp.MustCompile(`(?i)5085[ADHIJY]`),
		regexp.MustCompile(`(?i)5090[AIY]`),
		regexp.MustCompile(`(?i)5046[GS]`),
		regexp.MustCompile(`(?i)5085[GO]`),
		regexp.MustCompile(`(?i)5048[AYUI]`),
		regexp.MustCompile(`(?i)8050[GX]`),
		regexp.MustCompile(`(?i)8050[ED]`),
		regexp.MustCompile(`(?i)5098S|9001[DIX]`),
		regexp.MustCompile(`(?i)9003[AX]`),
		regexp.MustCompile(`(?i)I216[AX]`),
		regexp.MustCompile(`(?i)7048[ASWX]`),
		regexp.MustCompile(`(?i)(?:Alcatel-)?OT-802`),
		regexp.MustCompile(`(?i)(?:TRIBE_)?3075A`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch[ _]((?:T[0-9]+|TAB[^/;]+|EVO[78](?:HD)?)) Build`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch([^/;\)]*)\)`),
		regexp.MustCompile(`(?i)5080[ADFQUX]`),
		regexp.MustCompile(`(?i)4049[DEGMX]`),
		regexp.MustCompile(`(?i)5044[ADIKOPTY]`),
		regexp.MustCompile(`(?i)4047[DFXN]`),
		regexp.MustCompile(`(?i)5047[DIUY]`),
		regexp.MustCompile(`(?i)4044[CV]`),
		regexp.MustCompile(`(?i)(?:Alcatel)?4044[MNT]`),
		regexp.MustCompile(`(?i)5044[GS]`),
		regexp.MustCompile(`(?i)5033[ADJEFGMOTXYQS]`),
		regexp.MustCompile(`(?i)5009[AD]`),
		regexp.MustCompile(`(?i)5008[ADUYT]`),
		regexp.MustCompile(`(?i)5007[AGU]`),
		regexp.MustCompile(`(?i)5003[ADGU]`),
		regexp.MustCompile(`(?i)5006[ADG]`),
		regexp.MustCompile(`(?i)5024[ADFIJ]|5028Y|6025[DH]`),
		regexp.MustCompile(`(?i)(?:5028[AD]|5007O)`),
		regexp.MustCompile(`(?i)5030[ADFJMU]`),
		regexp.MustCompile(`(?i)5001[ADJTU]`),
		regexp.MustCompile(`(?i)5059[ADJXYZIT]`),
		regexp.MustCompile(`(?i)5060[ADJ]`),
		regexp.MustCompile(`(?i)5052[ADY]|5053[ADKY]`),
		regexp.MustCompile(`(?i)5029[ADFY]`),
		regexp.MustCompile(`(?i)5032W|5099[ADYUI]`),
		regexp.MustCompile(`(?i)5026[ADJ]`),
		regexp.MustCompile(`(?i)5039[DY]`),
		regexp.MustCompile(`(?i)5058[AIY]`),
		regexp.MustCompile(`(?i)5061[AKU]`),
		regexp.MustCompile(`(?i)5086[ADY]`),
		regexp.MustCompile(`(?i)8088[XQM]`),
		regexp.MustCompile(`(?i)9032[WZ]`),
		regexp.MustCompile(`(?i)(?:ALCATEL_)?A383G`),
		regexp.MustCompile(`(?i)ALCATEL([^/;]+) Build`),
		regexp.MustCompile(`(?i)ALCATEL[ \-]?([^/;\)]+)`),
		regexp.MustCompile(`(?i)ALCATEL_([^/;\)]+)`),
		regexp.MustCompile(`(?i)Alc([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Access_Q784C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Alfawise (?:A9)|(?:A95X_R1|Z28Pro))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A95X_R1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z28Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfawise (A9)`),
		regexp.MustCompile(`(?i)ALIGATOR[_ ]`),
		regexp.MustCompile(`(?i)ALIGATOR[ _](S4080|S50(?:6[56]|[678]0)|S5540|RX510|S6[05]00|RX710|RX800|S5520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AllCall_|Heat[34]|Rio_X(?:[);/ ]|$)|Hot ?[125][^;/]+ Build`),
		regexp.MustCompile(`(?i)AllCall_(Alpha|Atom|Bro|Madrid)`),
		regexp.MustCompile(`(?i)Heat([34])`),
		regexp.MustCompile(`(?i)Rio_X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hot ?([125][^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:T1001XS?|T1006S?|T1001|iPlay_[234]0|U1006H?|U63PLUS|iPlay8|iPlay_?8T|iPlay[34]0|iPlay_40H|iPlay20S|kPad|X_Game)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001XS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kPad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1006S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U63PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U1006H?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iPlay_?([234]0|8T?|40H|20s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X_Game(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Allview|A4You|H1003_LTE_PRO|A5_(?:Easy(?:_TM)?|Ready(?:_TM)?|Quad|Quad_Plus_TM)|A[5-9]_Lite|A5Smiley|A6_Duo|A10_Lite_(?:2019|2GB)|A10_(?:Plus|Max)|AX2_Frenzy|AX4Nano|AX5NanoQ|C6_Duo|E[23]_Living|E3_(?:Jump|Sign)|E4_Lite|M9_Connect|P(?:43_Easy|[5689]_Energy|6_Energy_Lite|[68]_Energy_Mini(?:_TM)?|(41|[458])_eMagic(?:_TM)?|[589](?:_)?Life(?:_TM)?|[567]_Lite(?:_TM)?|6_plus|[45678]_Pro|7_Seon|10_Life|10_Max|10_Style|7_Xtreme|6_Qmax|4_Quad)|V(?:[134]_Viper|1_Viper_I|2_Viper_(?:[EISX]|X_plus|Xe))|X4_Soul_Vision|X(?:[1-46]_Soul_Xtreme|[1-5]_Soul|3_Soul_Lite|[2-6]_Soul_Mini(?:_TM)?|4_Soul_Mini_S(?:_TM)?|[2-58]_Soul_Style(?:_TM)?|2_Soul_Style_Plus|2_Twin)|Viva_(?:H801|100[13]G|(?:H100[12]|H701|H802)_LTE|C701|i701G|803G)`),
		regexp.MustCompile(`(?i)E([23])_Living`),
		regexp.MustCompile(`(?i)P(41|[458])_eMagic(?:_TM)?`),
		regexp.MustCompile(`(?i)P([567])_Lite(?:_TM)?`),
		regexp.MustCompile(`(?i)P([45678])_Pro`),
		regexp.MustCompile(`(?i)P([69])_Energy_Lite`),
		regexp.MustCompile(`(?i)P([689])_Energy_mini(?:_TM)?`),
		regexp.MustCompile(`(?i)P([5689])_Energy`),
		regexp.MustCompile(`(?i)P([589])(?:_)?Life(?:_TM)?`),
		regexp.MustCompile(`(?i)V([12])_Viper_I4G(?:_TM)?`),
		regexp.MustCompile(`(?i)V([134])_Viper`),
		regexp.MustCompile(`(?i)V2_Viper_(E|I|S|X(?:e)?)`),
		regexp.MustCompile(`(?i)X([1246])_Soul_Xtreme`),
		regexp.MustCompile(`(?i)X4_Soul_Infinity_(L|N|S|Z)`),
		regexp.MustCompile(`(?i)X([34])_Soul_Lite`),
		regexp.MustCompile(`(?i)X4_Soul_Mini_S(?:_TM)?`),
		regexp.MustCompile(`(?i)X([23456])_Soul_Mini(?:_TM)?`),
		regexp.MustCompile(`(?i)X([35])_Soul_Pro`),
		regexp.MustCompile(`(?i)X([23458])_Soul_Style(?:_TM)?`),
		regexp.MustCompile(`(?i)X([12345])_Soul`),
		regexp.MustCompile(`(?i)A5_Easy(?:_TM)?`),
		regexp.MustCompile(`(?i)A([56789])_Lite`),
		regexp.MustCompile(`(?i)A5_Ready(?:_TM)?`),
		regexp.MustCompile(`(?i)Viva_(H801|100[13]G|(?:H802|H100[12]|H701)_LTE|C701|i701G|803G)`),
		regexp.MustCompile(`(?i)ALLVIEW ?SPEEDI`),
		regexp.MustCompile(`(?i)ALLVIEW ?SPEED`),
		regexp.MustCompile(`(?i)Allview[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Allview[ _-]([^;/]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:QUAD-CORE (?:T3 p1|A64 p3|A33 y3|T3 K2001M|T3 k2001o|T3 k2001-nwd)|ZY-07B|UltraOcta-T8|OCTA-CORE T8|OCTOPUS-CORE T8|QuadCore-R16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUAD-CORE T3 K(2001M?)`),
		regexp.MustCompile(`(?i)(?:FF-5000|ZQ8003)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FF-5000)`),
		regexp.MustCompile(`(?i)(ZQ8003)`),
		regexp.MustCompile(`(?i)Altice[ _](S62|S31|S43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AFT[ABMNRST]|AFTSSS?|AFTKA|SD4930UR|AEO(?:BC|C[HW]|KN)|KF(?:OT|ONWI|TT|JWI|JWA|[DFS]OWI|A[PRSU]WI|T[BH]WI|TRP?WI|SAW[IA]|GIWI|KAWI|MAWI|MEWI|MUWI|SUWI))(?:[);/ ]|$)|Kindle|AlexaMediaPlayer|Amazon (?:Tate|Jem)|Silk/\d+\.\d+|Echo/1|.+FIRETVSTICK`),
		regexp.MustCompile(`(?i)AFT[MST]`),
		regexp.MustCompile(`(?i).+FIRETVSTICK2018`),
		regexp.MustCompile(`(?i)KFFOWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFJWI(?:[);/ ]|$)|Amazon Jem`),
		regexp.MustCompile(`(?i)KFJWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSOWI(?:[);/ ]|$)|Amazon Tate`),
		regexp.MustCompile(`(?i)KFTHWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTHWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAPWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAPWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFARWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFASWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMEWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFGIWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFDOWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFKAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFONWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSAWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTBWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTRWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTRPWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFOT|Kindle Fire|Silk/\d+\.\d+`),
		regexp.MustCompile(`(?i)Echo/1|AEO(?:BC|KN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AEOC[HW](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMIGOO (R300|R9 Max|M1 Max|X15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Amigo7x?(?:YUF|SCB)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amoi|(?:A862W|Clever[ -]?(?:Gem S52|Gleam S45|Pad P7|Wave S50|Touch S46|JOY S40|Lite S41))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Clever[ -]?(Gleam S45|Gem S52|Wave S50|Touch S46|Lite S41)`),
		regexp.MustCompile(`(?i)Amoi[-_ /](CA6)`),
		regexp.MustCompile(`(?i)Amoi[-_ /]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Amoisonic-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:ANDOWL-)?(Q[45]|QG9)(?:[);/ ]|$)|Andowl`),
		regexp.MustCompile(`(?i)angelcare[ _]`),
		regexp.MustCompile(`(?i)F20 ?pro`),
		regexp.MustCompile(`(?i)angelcare[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)AFTMM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANRY-(RS10|[SX]20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AOCOS ([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)aoson(?:R10[1-3]|S[78]|M707TG)(?:[_ ]?Pro)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aosonR10([1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aosonS7_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aosonS7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aosonS8Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson(M707TG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:iTunes-)?Apple[ _]?TV|Apple/|(?:Apple-|iTunes-)?(?:iPad|iPhone)|iPh(?:[0-9]|1[0-4]),[0-9]|CFNetwork|HomePod|AirPlay|Watch ?OS|Watch1,[12]|MDCR_Mac|ICRU_iP(?:ad|hone)|Mac OS X[,;]|macOS,`),
		regexp.MustCompile(`(?i)Watch3,[13]`),
		regexp.MustCompile(`(?i)Watch3,[24]`),
		regexp.MustCompile(`(?i)Watch5,(?:9|11)`),
		regexp.MustCompile(`(?i)Watch5,1[02]`),
		regexp.MustCompile(`(?i)Watch([456]),[13]`),
		regexp.MustCompile(`(?i)Watch([456]),[24]`),
		regexp.MustCompile(`(?i)Watch6,[68]`),
		regexp.MustCompile(`(?i)Watch6,[79]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacPro2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacPro3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacPro4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacPro5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac11(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac11(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac11(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac12(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac13(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac13(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac14(?:%2C|,)[13]`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac14(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac14(?:%2C|,)4`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac17(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac18(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac18(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac19(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac19(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac20(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:.+_)?iMac21(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:.+_)?iMacPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook[45](?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBook9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir3(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir4(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir6(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir7(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookAir10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro1(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro2(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro[34](?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro5(?:%2C|,)[34]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro5(?:%2C|,)5`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro6(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro8(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro9(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro10(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro11(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro11(?:%2C|,)[23]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro11(?:%2C|,)[45]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro13(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro13(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro14(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro14(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro15(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro15(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro15(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro15(?:%2C|,)4`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro16(?:%2C|,)[14]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro16(?:%2C|,)[23]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro17(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro18(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:.+_)?MacBookPro18(?:%2C|,)[34]`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini5(?:%2C|,)[123]`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini6(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?Macmini9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?PowerMac7(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?PowerMac7(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:.+_)?PowerMac8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:.+_)?PowerMac10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?PowerMac12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:.+_)?PowerBook5(?:%2C|,)6`),
		regexp.MustCompile(`(?i)(?:.+_)?PowerBook6(?:%2C|,)7`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?1[C,_]1`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?1[C,_]2`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?2[C,_]1| 3GS\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?3[C,_][123]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?4[C,_]1|1C2%254enohPi| 4S\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?5[C,_][12]| 5\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?5[C,_][34]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?6[C,_][12]| 5S\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?7[C,_]1|1C2%257enohPi| 6PLUS\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?7[C,_]2| 6\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?8[C,_]2| 6SPLUS\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?8[C,_]1|iPhone[ /]6s| 6S\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?8[C,_]4| SE\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?9[C,_][13]|iphone7 | 7\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?9[C,_][24]| 7PLUS\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?10[C,_][14]| 8\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?10[C,_][25]| 8PLUS\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?10[C,_][36]|iPhone X| X\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?11[C,_]2| XS\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?11[C,_][46]|iPhoneXSMax| XSMAX\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?11[C,_]8| XR\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?12[C,_]1|iPhone 11| 11\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?12[C,_]3| 11PRO\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?12[C,_]5| 11PROMAX\)$|iPhone_11_Pro_Max`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?12[C,_]8| SE2\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?13[C,_]1| 12MINI\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?13[C,_]2| 12\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?13[C,_]3| 12PRO\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?13[C,_]4| 12PROMAX\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?14[C,_]2| 13PRO\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?14[C,_]3| 13PROMAX\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?14[C,_]4| 13MINI\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?14[C,_]5| 13\)$`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPh(?:one)?14[C,_]6`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad1[C,_]1`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad2[C,_][1-4]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad2[C,_][567]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad3[C,_][123]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad3[C,_][456]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad4[C,_][123]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad4[C,_][456]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad4[C,_][789]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad5[C,_][12]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad5[C,_][34]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad6[C,_][34]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad6[C,_][78]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad6[C,_](?:11|12)`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad7[C,_][12](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad7[C,_][34](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad7[C,_][56](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad7[C,_](?:11|12)(?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad8[C,_](?:9|10)`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_]4`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_][5-7]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad8[C,_]1[12]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad8[C,_][1-4]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad8[C,_][5-8]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad11[C,_][12]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad11[C,_][34]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad11[C,_][67]`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad12[C,_]1`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad12[C,_]2`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_]8`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_](?:9|10|11)`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_]16`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_]17`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_]1`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad13[C,_]2`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad14[C,_]1`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad14[C,_]2`),
		regexp.MustCompile(`(?i)Apple-?TV2[C,_]1`),
		regexp.MustCompile(`(?i)Apple-?TV3[C,_][12]`),
		regexp.MustCompile(`(?i)Apple-?TV5[C,_]3`),
		regexp.MustCompile(`(?i)Apple-?TV6[C,_]2`),
		regexp.MustCompile(`(?i)Apple-?TV11[C,_]1`),
		regexp.MustCompile(`(?i)(?:iTunes-)?Apple[ _]?TV`),
		regexp.MustCompile(`(?i)iTunes-iPad/[0-9]+(?:\.[0-9]+)* \(([^;]+);`),
		regexp.MustCompile(`(?i)(?:Apple-|.+_)?iPad`),
		regexp.MustCompile(`(?i)iTunes-iPhone/[0-9]+(?:\.[0-9]+)* \(([^;]+);`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPhone ?(3GS?|4S?|5[CS]?|6(:? Plus)?)?`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos|(?:A50TI|AC101BHE|AC50BHE|AC45NE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos (Oxygen (?:63|57|68XL))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A50TI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC45NE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos ?5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC101BHE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC50BHE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos 80 Oxygen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos 101 Oxygen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Oxygen 101S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos ([^/;]*(?:PAD)[^/;]*) Build`),
		regexp.MustCompile(`(?i)Archos ((?:[789]|10)[0-9]?[a-z]* ?(?:G9|G10|Helium|Titanium|Copper|Cobalt|Platinum|Xenon|Carbon|Neon|XS|IT)[^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos ([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\))|Impulse[ _]P[12]|(?:EDGE A5HD|Elf_S8|ICON (R40\+|R45)|Wizard_[12]|UKOZI U5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)Impulse[ _]P1\+`),
		regexp.MustCompile(`(?i)Impulse[ _](P[12])`),
		regexp.MustCompile(`(?i)EDGE (A5HD)`),
		regexp.MustCompile(`(?i)ICON (R40\+|R45)`),
		regexp.MustCompile(`(?i)Wizard_([12])`),
		regexp.MustCompile(`(?i)Elf_S8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UKOZI U5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TSD Octa A0520P|TSD Quadra A050[59]P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arnova|ARCHM901|AN7CG2|AN7G2(DTE|I)?|AN7[BCDFH]?G3|A80KSC|AN8G2|AN8[BC]?G3|AN9G2I?|AN9G3|A101[BC]|AN10G2|AN10BG2(DT|I)?|AN10BG3(DT)?|AN10[CD]G3`),
		regexp.MustCompile(`(?i)AN7G2I|AN7G2|AN7G2DTE`),
		regexp.MustCompile(`(?i)A101B2|A101C|AN10G2`),
		regexp.MustCompile(`(?i)AN10BG2|AN10BG2DT|AN10BG2I`),
		regexp.MustCompile(`(?i)AN10BG3|AN10BG3DT|AN10BG3-LZ`),
		regexp.MustCompile(`(?i)Arnova ([^/;]*) Build`),
		regexp.MustCompile(`(?i)ARTLINE[ _-](KMX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artel[_ ]|\w+_ARTEL_\w+|(?:GAP YOQ| ALO|U1 MINI|Android 8.+; U4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAP YOQ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U1 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 8.+ U4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) ALO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artel[_ ](Quadro(?: Pro)?|Tesla|Air|Tomchi|Premium|U3_4G|Z5|Sentinel (?:X 8G|X D5|X)|T10)`),
		regexp.MustCompile(`(?i)Artel[_ ]Komi3`),
		regexp.MustCompile(`(?i)Artel[_ ]Q21_PRO`),
		regexp.MustCompile(`(?i)Artel[_ ](Star|Nova|Connect|Choice|Style)`),
		regexp.MustCompile(`(?i)(?:\w+_)?ARTEL_([FVM]5|X[45])_\w+`),
		regexp.MustCompile(`(?i)Artizlee[ _]S9|ATL-(?:16|21(?:PLUS|[XT])?|31|26)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATL-21PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ATL-(?:16|21[XT]?|31|26))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artizlee[ _]S9`),
		regexp.MustCompile(`(?i)(?:32LH7010T|32LH7030S|32LF7130S|28LH7011T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2})(L[FH]\d+[ST])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASANZO[ _](?:A2|S[23]|[SZ]5|S3_PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASANZO[ _]S3[ _]PLUS`),
		regexp.MustCompile(`(?i)ASANZO[ _](A2|S[23]|[SZ]5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASK[ _]`),
		regexp.MustCompile(`(?i)ASK[ _]791SP[ _]3G`),
		regexp.MustCompile(`(?i)ASK[_ ]([^/;]*) Build`),
		regexp.MustCompile(`(?i)ASPERA|(?:Wren)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASPERA[ _](R5h|R9|RT3|A4[02]|A50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wren(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AS[-_](?:50[123]|543[1-6]|44[12]1|541[12]|54[23]1|6431|[46]01L)|AP-(?:109|115G|721N|753G|7[25]7G|10[68]|107G|110N|941|719))[;/)_ ]`),
		regexp.MustCompile(`(?i)AS[-_]401L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5432(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS[-_](?:5434|501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS_601L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5433 Secret(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5433(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5421(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-44[12]1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5435(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5436[ _]`),
		regexp.MustCompile(`(?i)AS-6431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5411[_ ]`),
		regexp.MustCompile(`(?i)AS-5412 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-721N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-941(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-108(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-106(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AP-(?:109|115G|7[25]7G|753G|107G|110N|719))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AS-(?:\d+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[- ](S451|S501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Asus|Transformer|ZenFone Max|MeMOPad 10|TF300T|Slider SL101|PadFone|ME302(?:C|KL)|ME301T|ME371MG|ME17(?:1|2V|3X)|(?:K0[01][0-9a-z]|(?:P(?:00[128ACIL]|01[MTVWYZ]|01MA|01T_1|02[13478])(?: Build|\))|X015D|X018D|X003|X00[7ABT]D|Z00D|Z00[MTY]D|Z01[7FGHKMR]D)|K01[579N]|AST21)(?:[);/ ]|$)|G55[023]KL|ZB(631|602|633|55[135]|50[01])KL|ZC(55[134]|520|600)KL|ZA550KL|ZE(5[02]0|620|55[2345])KL|ZD55[23]KL|ZS6(?:61|7[02136])KS|ZS(6[0236]0|55[10])KL|ZS590KS|ZB(500KG|601KL)|MeMo Pad FHD 10 LTE|Z00[SV]D|P01Y_S|Zenfone 5Z|AOSP on Duma`),
		regexp.MustCompile(`(?i)ME171(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASUS Z906(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME302C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ME302KL|MeMOPad 10FHD LTE|MeMo Pad FHD 10 LTE|AOSP on Duma)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME301T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z101 Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X Pad 10 LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[3A7]|K007|K00R)(?:[);/ ]|$)|MeMO Pad 7`),
		regexp.MustCompile(`(?i)K01E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00U|ME173X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[15]|K00L|AST21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TF300T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K01B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P01[YZ](?:_S)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00J`),
		regexp.MustCompile(`(?i)P01[VW]|P002`),
		regexp.MustCompile(`(?i)(?:P024|P00A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P01MA?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASUS_(w706)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00I`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00C|P02[138]|P00L|P01T_1`),
		regexp.MustCompile(`(?i)ME371MG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[2N9]|K00E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K016(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00N`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00[CE]`),
		regexp.MustCompile(`(?i)(?:ASUS[-_])?T00T`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A002(A)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I006D|ZS590KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I004D|ZS672KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A006`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A009`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z007`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00P[SD]|ZB555KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZB60[12]KL)|ZenFone Max Pro M1`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X01([AB]D)|ZB633KL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z00[AD]|Z008D|Z008|Z00AD[AB]?|ZE551ML)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZenFone 2E)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:A007|Z00YD|ZA550KL|ZB553KL|ZB501KL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00RD|G552KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z00[ERLMTW]D|Z011D|ZE500KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00[IQ1]|Z01KD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00[JF]|X00QD|X00QSA|ZE620KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00P`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00K|X017DA|X017D|ZC600KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z01RD|ZS620KL)|Zenfone 5Z`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00G|Z002|ZS630KL|I01WD[X]?)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZS671KS`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZS670KS|I002D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z010D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X018D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X00TD?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X01BDA|ZB631KL|Zenfone Max Pro M2)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X014D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(L001|X00[7AB]D|X009[DB][DA]|X009D|Z00[SV]D|ZB500K[LG]|ZB551KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X013D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?G550KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00[SV]D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00[23])`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X005`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X550`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00GD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00D[DS]|X008D)|ZC553KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X008)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(ZE553KL|Z01HDA?)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZS550KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00UD`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(Z016[DS]|Z01FD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z(?:017DA|E520KL|E552KL|017D|012(?:DC?|S))`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z01B[DS]|ZC551KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A001`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZD552KL|Z01MDA?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00LDA|ZD553KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00LD|Z01KS|Z01KDA|ZE554KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X00(?:[HIK]D|IS)|ZC554KL|ZC520KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X015D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(:?Z01G[DS]|ZS551KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00XS`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z01QD|ZS600KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I001D[ABCE]?|ZS660KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I003DD?|ZS661KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I005D[AC]?|ZS67[36]KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZenWatch( 2)?`),
		regexp.MustCompile(`(?i)Asus(?:-|;)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(PadFone(?: [^;/]+)?) Build`),
		regexp.MustCompile(`(?i)(PadFone(?: [a-z0-9]+)?)`),
		regexp.MustCompile(`(?i)(?:Asus|Transformer) ((?:Pad |Prime )?TF[0-9a-z]+)`),
		regexp.MustCompile(`(?i)Chromebook Flip (C10[01]PA|C302)`),
		regexp.MustCompile(`(?i)ATOM-(108AM|216RK|216AM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(100011886BK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Audiovox|CDM|UTS(?:TARCOM)?\-|audio[a-z0-9\-]+`),
		regexp.MustCompile(`(?i)Audiovox[_\-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)CDM(?:-)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)UTS(?:TARCOM)?-([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)audio([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)R2021W2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(R2021W2)`),
		regexp.MustCompile(`(?i)Avenzo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOB4 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOB4PRO 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avvio[ _]?([a-z0-9\-]+)|(?:CHIVAS_55|Colombia_2018|Mint_M353)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avvio[ _]PAD`),
		regexp.MustCompile(`(?i)Avvio[ _]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(UTBook)`),
		regexp.MustCompile(`(?i)PICOp(?:hone|ad)_`),
		regexp.MustCompile(`(?i)PICOphone_(L1|M4N|M4P_M3|M4U_M2_M)`),
		regexp.MustCompile(`(?i)PICOpad_(7H_7)_3G`),
		regexp.MustCompile(`(?i)Axxion ATAB-[0-9]+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Axxion ATAB-([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azumi[_ -]|(?:SPEED55|A50_Style_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azumi[_ -]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Azumi[_ -]([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)bb-mobile|Techno[-_ ](8\.0|9\.7|TQ863Q|X595BT|X800BJ|S700BF|I700AJ|10.1 LTE TQ060X|7.0 LTE TQ763I|I785AP|I101BI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]S700BF(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]10.1 LTE TQ060X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]TQ863Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]I700AJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[-_ ]I785AP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]X800BJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[-_ ]I101BI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]7.0 LTE TQ763I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FirstTab TP-17)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ](9\.7|8\.0) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ](?:X595BT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([65]5|50|4[03]|3[29]|28)LEX[-_](81(?:27|39|45|58|6[12]|7[34])|71(?:[23]7|4[345]|5[45]|6[368]|[57]8))[_/]([FU]?TS2C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BDF[- ](?:819|P10|M107|K107H|KT107|MT6753|X20)|K960N_MT(?:6580|6753)(?:_32_N)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BDF[- ](819|P10|M107|K107H|KT107|MT6753|X20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K960N_MT(6580|6753)(_32_N)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SMART_B19|Destiny)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BGH ([^/;\)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Y([17]00|2[01]0|1010)`),
		regexp.MustCompile(`(?i)BGH (\+Simple|Mini)`),
		regexp.MustCompile(`(?i)BGH ([^/;\)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(ZBH-)?BIHEE`),
		regexp.MustCompile(`(?i)(A1[1268]|A[78]\+|A[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I10(Plus)?_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RUNE III?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RUNE (III?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nook|BN[TR]V[0-9]+`),
		regexp.MustCompile(`(?i)Nook([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Nook[ _]([^/;]+)[ _]Build`),
		regexp.MustCompile(`(?i)(BN[TR]V[0-9]+)`),
		regexp.MustCompile(`(?i)Becker-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Beeline|A239s(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Beeline[_ ]Pro[_ ]([2436])`),
		regexp.MustCompile(`(?i)Tab (Fast(?: 2)?|Pro)`),
		regexp.MustCompile(`(?i)Tab ([0-9])`),
		regexp.MustCompile(`(?i)E([67]00)`),
		regexp.MustCompile(`(?i)(?:Beeline[_ ])?Smart[ _]?([0-9])`),
		regexp.MustCompile(`(?i)(?:Beeline[_ ])?Fast[_ ]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fast(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A239s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Beelink (?:G[ST]1|LAKE I|SEA I|A1)|GTKing(?:_AT)?|GT1mini-2|GT1-mini(?:[-_]AT)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beelink (G[ST]1|LAKE I|SEA I|A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT1-mini(?:-AT)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT1mini-2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTKing PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTKing(?:_AT)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beetel ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(X104)-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bp100 X-Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BENQ(?:[ \-])?([a-z0-9]+)|(?:F52_09|F5_15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F(52|5)_(?:15|09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BENQ(?:[ \-])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)BENQ-SIEMENS - ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Benco[_ ]|(?:AE9010|AE9950)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB-A03-BS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Class S300 LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SURVE(10|[26-8]|[12] PRO)|Home9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURVE([12]) PRO`),
		regexp.MustCompile(`(?i)SURVE(10|[26-8])`),
		regexp.MustCompile(`(?i)BEZKAM (BK-RAM2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAMETAB-ONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BilimBook mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Capture\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BioWolf 8-F30|BIOWOLF8F30|Ruggbo 20 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BioWolf 8-F30|BIOWOLF8F30`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+)`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+)`),
		regexp.MustCompile(`(?i)Bitel[ _-]([^/;]+) Build|(?:B(?:840[5-9]|841[0456]|850[2346]|860[146]|9401|950[1-5])|S8402L?|S8501L?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B(?:840[5789]|841[0456]|850[2346]|860[146]|9401|950[12345])|S8402L?|S8501L?)`),
		regexp.MustCompile(`(?i)Bitel[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:Mobitab10c-3G|Tab1011Q_II|Colortab[ _]?(10(?:M| II)?|816i))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Mobitab)(10)c-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab1011Q_II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Colortab[ _]?(10(?:M| II)?|816i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tough Mobile 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bphone[ _](B111[45]|B2017)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B6 Master|B6 Note X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BMM[ _-]?(?:44[123]D|441[AWB]|44[12]S|431[SD]|53[23]D|54[12]S|541[ABW]|54[123]D|543S|531[ABD]|532 S|531S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BMM441[AS]`),
		regexp.MustCompile(`(?i)BMM442S|BMM441B`),
		regexp.MustCompile(`(?i)BMM543[DS]`),
		regexp.MustCompile(`(?i)BMM[ _-]?(53[23]D|431[DS]|54[12]S|531S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blackview|(BV([24-9]000|[46]900|(5[1589]|9[15689])00|6[1368]00)(?:[ _](?:PRO))?|(P10000(?:[ _](?:PRO))?)|omega[ _]pro|Alife[ _][PS]1|Heatwave|DM550|BV9700Pro|A[68]0(?:Pro)?\))|(?:A[86]0Plus|A80S|BL6000Pro|R6 Lite|P2Lite|A8 MAX|A20Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A([268]0)Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A60\)`),
		regexp.MustCompile(`(?i)A8 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A80S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A[86]0|BV[59]500)Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BV6000S)`),
		regexp.MustCompile(`(?i)(P2|R6) ?Lite`),
		regexp.MustCompile(`(?i)(BL6000|BV(?:[0-9]+))Pro`),
		regexp.MustCompile(`(?i)Blackview (A[78]|E7S)`),
		regexp.MustCompile(`(?i)(BV6[13]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BV([24-9]000|6[69]00|4900|9[69]00E|(5[1589]|9[15689])00)(?:[ _](?:PRO))?)`),
		regexp.MustCompile(`(?i)(P10000(?:[ _](?:PRO))?)`),
		regexp.MustCompile(`(?i)omega[ _]pro`),
		regexp.MustCompile(`(?i)(Alife[ _][PS]1|DM550|Heatwave)`),
		regexp.MustCompile(`(?i)Blaupunkt|Soundphone S2|Atlantis[_ ](?:1001A|1010A|A10\.G40[23])|SLplus02|Discovery[_ ](?:A10_302|111C|1000C|1001A?)|Endeavour[_ ](?:785|101[GLM]|1000|1001|101[03]|1100)|Polaris[_ ]803|BP_6010`),
		regexp.MustCompile(`(?i)Discovery[_ ]111C`),
		regexp.MustCompile(`(?i)Discovery[_ ]A10_302`),
		regexp.MustCompile(`(?i)Discovery[_ ]1000C`),
		regexp.MustCompile(`(?i)Discovery[_ ]1001A`),
		regexp.MustCompile(`(?i)Discovery[_ ]1001`),
		regexp.MustCompile(`(?i)Endeavour[_ ](101[GLM]|785|100[01]|101[03]|1100)`),
		regexp.MustCompile(`(?i)Polaris[_ ](803)`),
		regexp.MustCompile(`(?i)Atlantis[_ ](1001A|1010A|A10\.G40[23])`),
		regexp.MustCompile(`(?i)(BP_6010)`),
		regexp.MustCompile(`(?i)Blaupunkt[_ ](SL[_ ]0[124]|SM[_ ]0[12])`),
		regexp.MustCompile(`(?i)(SF02)`),
		regexp.MustCompile(`(?i)(4K Android TV)`),
		regexp.MustCompile(`(?i)(?:BE_(xl|se|o2|fr|et|dg)|BL-919845)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE_(xl|se|o2|fr|et|dg)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Zero18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LaserTAB10|PlatinumTAB10_4G_V\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PlatinumTAB10_4G_(V\d)`),
		regexp.MustCompile(`(?i)BLU[ _]|(?:blu|Dash)[ _]([^/;)]+)(?: Build|[;)])|(?:Studio[ _](X12|5.0K|5.5|View XL|Mega|C 8\+8|[CGM][ _]HD|G2 HD|[CGX]|SELFIE|Selfie LTE|Touch|M5 Plus|J[1258]|X8 HD|X10\+?|XL(?: 2)?)|Advance (4.0 ?[LM]|5.[02](?: HD)?|A4|L[45])|M6 2021|ENERGY (DIAMOND|XL)|Energy X 2|LIFE XL|B110DL|Dash (?:X[2L]|L3)|PURE (?:X[LR]|MINI|View)|Life One X2|G50 (?:Mega|Plus)|G51 Plus|G90(?: PRO)?|G91 Pro|GRAND (?:M3|Max|5.5 HD|XL LTE|Mini)|R1 (?:HD|PLUS)|R2 (?:LTE|Plus)|Tank Xtreme [45].0|Tank Xtreme(?: Pro)?|Touchbook M7 Pro|DASH X PLUS|C[456] 2019|BOLD (?:M7|N1)|B1[34]0DL|Vivo (?:5 Mini|One Plus|5R|XL[234]| Plus|8L|XI[+]?|GO)|C[56]L(?: 2020)?|C6 2020|G9 PRO|D701|VIEW 1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Advance (4.0 ?[LM]|4.0|5.[02](?: HD)?|A4|L[54])`),
		regexp.MustCompile(`(?i)M6 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Studio[ _](5.0 C|5.5|C 5\+5 LTE|View XL|Mega|C 8\+8|[CG][ _]HD|C|G|Touch|M HD|G2 HD|M5 Plus|J[1258]|X8 HD|X5|X10\+?|XL(?: 2)?|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Studio[ _]5.0 ?K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STUDIO[_ ](X12)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STUDIO SELFIE ([23]|LTE)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?NEO_ENERGY_MINI`),
		regexp.MustCompile(`(?i)DASH[ _]X[ _]PLUS[ _]LTE`),
		regexp.MustCompile(`(?i)DASH 4.5`),
		regexp.MustCompile(`(?i)PURE (X[LR]|View)`),
		regexp.MustCompile(`(?i)BOLD (M7|N1)`),
		regexp.MustCompile(`(?i)LIFE ONE (X2?)`),
		regexp.MustCompile(`(?i)NEO (XL|X)`),
		regexp.MustCompile(`(?i)G(90?) PRO`),
		regexp.MustCompile(`(?i)(G90|D701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRAND 5.5 HD`),
		regexp.MustCompile(`(?i)R([12]) PLUS`),
		regexp.MustCompile(`(?i)C([456]) 20(19|20)`),
		regexp.MustCompile(`(?i)Tank Xtreme ([45]).0`),
		regexp.MustCompile(`(?i)C([56])L 20(20|21)`),
		regexp.MustCompile(`(?i)C([56])L`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?VIVO[ _]SELFIE`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo 5 Mini`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo (One|XL3|XI)(?: Plus|[+])`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo (5R|XI|XL[234]|8L)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?VIVO GO`),
		regexp.MustCompile(`(?i)STUDIO 7.0 II`),
		regexp.MustCompile(`(?i)DASH (L[45] LTE|5.0|L[45]X|L3|X2|[LMX])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DASH[ _]([^)/;]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)blu[ _]([^/;]+)( Build|[);])`),
		regexp.MustCompile(`(?i)Bluboo|Maya Build|(?:Picasso(?: 4G)?|Xfire2?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Picasso(?: 4G)?`),
		regexp.MustCompile(`(?i)(?:Bluboo[_ ])?S8[_ ]plus`),
		regexp.MustCompile(`(?i)Bluboo[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Bluboo[ _-]?([^;/)]+)`),
		regexp.MustCompile(`(?i)(VF550|EF501R)(:_RU)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLUEDOT[_ ]|(?:BNT-71)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLUEDOT[_ ])?(BNP-500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BNT-71)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:33GT HD|WV8R-M|WV8R[_-]N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WV8R[_-]N`),
		regexp.MustCompile(`(?i)Bmobile[_ ]|B60Pro_MV03|BL54_?Pro|(?:B50Pro|FUN 4 2018|AX-?(?:[1-9][0-9]{2,3}[eEO+]?|7OO))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AX-?([1-9][0-9]{2,3}[eEO+]?)`),
		regexp.MustCompile(`(?i)BL54_?Pro`),
		regexp.MustCompile(`(?i)Bmobile[_ ]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Bmobile[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:K10[ ]?SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:sprd-)?(BOWAY)`),
		regexp.MustCompile(`(?i)BOWAY[ _-]([^/;]+)[ _]Build`),
		regexp.MustCompile(`(?i)([^/;]+) Build/BOWAY`),
		regexp.MustCompile(`(?i).*BOWAY[ _-]([^/;]+)/`),
		regexp.MustCompile(`(?i)(BPRIME|BSTAR\+?|BPRIMES|B-ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bravis[ _]|A501 Bright|A552 JOY Max|A504 Trace|A505 JOY Plus|A503 Joy|NB(?:106M|10[1-8]|751|7[145]|8[57]1|76)|NP101|NB961|NP 104 3G|B501|N1-570 Space|Atlas A551|A511 Harmony|A512 Harmony Pro|A510_Jeans_4G|A509_Jeans|N1_550_Cruiser`),
		regexp.MustCompile(`(?i)Bravis[_ ]X500`),
		regexp.MustCompile(`(?i)Bravis[_ ]A506`),
		regexp.MustCompile(`(?i)Bravis[_ ]A553`),
		regexp.MustCompile(`(?i)BRAVIS[ _]TAU`),
		regexp.MustCompile(`(?i)BRAVIS[ _]DELTA`),
		regexp.MustCompile(`(?i)BRAVIS[ _]TREND`),
		regexp.MustCompile(`(?i)BRAVIS[ ]A554`),
		regexp.MustCompile(`(?i)BRAVIS[ ]S500`),
		regexp.MustCompile(`(?i)BRAVIS[ _]SPARK`),
		regexp.MustCompile(`(?i)BRAVIS[ _]SLIM[ _]3G`),
		regexp.MustCompile(`(?i)Bravis[_ ]([^;\)]+) Build`),
		regexp.MustCompile(`(?i)(NB(?:106M|10[1-8]|75[134]|7[145]|8[57]1|76)|NP101|NB961)`),
		regexp.MustCompile(`(?i)(HD1023|XD233|XD230|XD1030|XD1132|XT114[34]|4K1142|LS424)`),
		regexp.MustCompile(`(?i)Brondi[ _]|(?:CENTURION|GLADIATOR| GLORY|LUXURY|SENSUELLE|VICTORY|AMICO_SMARTPHONE_4G|MIDNIGHT_SKY)(?:[ _-]?[2-6])?(?:[);/ ]|$)|Surfing Tab|501 SZ`),
		regexp.MustCompile(`(?i)(?:Brondi[ _])?(620 SZ|730_4G_HD|501 SZ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CENTURION(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLADIATOR(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUXURY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIDNIGHT_SKY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SENSUELLE(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VICTORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMICO_SMARTPHONE_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Surfing Tab ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Surfing Tab ([^;/)]+)[;/)]`),
		regexp.MustCompile(`(?i)(BUB6R-3T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BTOUCH7_PLUS|SWEET 5\+ 2019|SWEET ?[56]\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET 5\+ 2019`),
		regexp.MustCompile(`(?i)SWEET ?([65])\+`),
		regexp.MustCompile(`(?i)Bush[ ,_-]|Bush10Nou`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+)Tablet(?: Build|[);])`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)BUSH, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)CAGI-([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)(?:CG_OMEGA6|Omega (?:[38])|CG_EON_Blaze_Pro|CG\|EON Blaze GOLD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Omega ([38])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG_OMEGA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG_EON_Blaze_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG\|EON Blaze GOLD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CGV_(Ultimate T8)`),
		regexp.MustCompile(`(?i)BlueS10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN[_ ]`),
		regexp.MustCompile(`(?i)CORN R([124])0`),
		regexp.MustCompile(`(?i)CORN[_ ]X(4|55|5)`),
		regexp.MustCompile(`(?i)COYOTE[ _]`),
		regexp.MustCompile(`(?i)CUBOT|QUEST(?: LITE)?|(?:NOTE 7|NOTE 20(?: PRO)?|RAINBOW 2|KING_KONG_3|KINGKONG [57]|KINGKONG 5 Pro|ZORRO 001|KINGKONG[_ ]MINI2?|KING KONG CS|R15_PRO|S550 Pro| CHEETAH| [RX]19|X19 S|MAX 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHEETAH( 2)?`),
		regexp.MustCompile(`(?i)KING[_ ]?KONG[_ ]([357])`),
		regexp.MustCompile(`(?i)CUBOT[ _]Echo`),
		regexp.MustCompile(`(?i)CUBOT[ _]MANITO`),
		regexp.MustCompile(`(?i)CUBOT[ _]MAGIC`),
		regexp.MustCompile(`(?i)CUBOT[ _]MAX`),
		regexp.MustCompile(`(?i)(R15|S550|J3)[_ ]PRO`),
		regexp.MustCompile(`(?i)CUBOT[_ ]NOTE[_ ]S`),
		regexp.MustCompile(`(?i)CUBOT[ _](A5|C6W|H3|J3|P7|P20|[RXJ]9|R11|X18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (X19 S|[RX]19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUBOT ([^;/]+) Build`),
		regexp.MustCompile(`(?i)([^;/]+) Build/CUBOT`),
		regexp.MustCompile(`(?i)CVTE[_ ](MSD338_(:?1G|512M))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Camfone (?:SE)|Hero[_ ](?:H5\+|SE2|H9|(?:H7|XR)_Plus|SX|1[123]|SE3[ _]Max)|Honey (?:Y1|Y2s))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hero[_ ](?:H5\+|SE2|H9|(?:H7|XR)_Plus|SX|1[123]|SE3[ _]Max)|Honey (?:Y1|Y2s))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Camfone (SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S70CDS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Capitel-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Captiva[ _-]([^;/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)CT(?:10[0123]0|7[12]0|820|735_16GB)(?:W|FR)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT(10[0123]0(?:W|FR)?)`),
		regexp.MustCompile(`(?i)CT(7[12]0(?:W|FR)?|735)`),
		regexp.MustCompile(`(?i)(C811|C7[57]1)(?: 4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C751(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C771(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C811 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASPER[_ ]|VIA[- _]([XF]20|T7D|A[34]|E[43]|F[123]|G[345]|M4|[LS]8|S7|P[23]|V8C|A[13]_Plus(?:_64)?|A1(?:_1)?|S[13]0|S48|S|T17_M|T1[07]|T7|T7-3G|T8B|T8D-3G|S1[78]|S48_0|L30_0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CASPER[_ ])?VIA_A1_Plus(?:_64)?`),
		regexp.MustCompile(`(?i)(?:CASPER[_ ])?VIA[_ ]([XF]20|G1_Plus|A3_Plus|G[135]|E[14]|[AE]2|M[123]|V[35689]|V10|G3|V6X|A[34]|E3|F[123]|G4|M4|P[23]|S|V8C|A1(?:_1)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASPER_L10_4.5G`),
		regexp.MustCompile(`(?i)CASPER_(S[23]8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIA[- _](T7|T8D)-3G`),
		regexp.MustCompile(`(?i)VIA[- _](T7D|S[13]0|S48|[LS]8|S7|T17_M|T1[07]|T7|T8B|S1[78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIA[- _](S48|L30)(?:_0)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cat ?(tablet|stargate|nova)|(?:B15Q|CAT B35|CAT-B100|S62 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cat ?(?:tablet)? ?((?:Galactica|Nova|StarGate|PHOENIX)[^/;]*) Build`),
		regexp.MustCompile(`(?i)Cat ?tablet`),
		regexp.MustCompile(`(?i)CAT-(B100)`),
		regexp.MustCompile(`(?i)(?:Cavion[_ ](?:Solid[_ ]4[\._]5|Base[ _](?:7|7_3G_Silver|5[._]0|10|7.2 Quad)|10_3GRQ)|Cavion7.1quad)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cavion[_ ]Solid[_ ]4[._]5`),
		regexp.MustCompile(`(?i)Cavion[ _]BASE[ _]5[._]0`),
		regexp.MustCompile(`(?i)Cavion(?:7.1quad)`),
		regexp.MustCompile(`(?i)Cavion Base 7.2 Quad`),
		regexp.MustCompile(`(?i)CELCUS, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Celkon|Android 7.+ UNIQ(?: Build|[);])|(?:Millennia Hero|2GBStar|2GBXpress|CliQ2|Campus Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Celkon[ _*](C[78]20)`),
		regexp.MustCompile(`(?i)Celkon[_ ]4G_TAB-8`),
		regexp.MustCompile(`(?i)CliQ2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 7.+ UniQ(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Campus Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Celkon[ _*](CT[^;/]+) Build`),
		regexp.MustCompile(`(?i)Celkon[ _*]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Celkon[\. _*]([^;/\)]+)[\)/]`),
		regexp.MustCompile(`(?i)Cell_?C_`),
		regexp.MustCompile(`(?i)Cell_C_(Summit_Plus|Fame|Evolve)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Cool_Extreme_2|Earn|Fashion2Plus|Fashion[ _]C|Cool Duo|CHIC_X1|Miracle XS|Miracle 6.0 S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cool_Extreme_2|Earn|Fashion[ _]C|Cool Duo|Miracle XS|Miracle 6.0 S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cosmas|CT_Cosmas_V`),
		regexp.MustCompile(`(?i)(?:Centric[- ]CM(?:5001|33[23]1|3321Plus)|CM4331)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM5001`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3321Plus`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3321`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3331`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM4331`),
		regexp.MustCompile(`(?i)Changhong[ ]?(X1-K|X6|R8|Z9S?|Z1S|S18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)changhong,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:Opera TV.+)Changhong-([^);/]+)`),
		regexp.MustCompile(`(?i)Cherry|Superion[_ ](?:S2|Radar Deluxe|S1 DTV|S1 Plus DTV)|Flare([ _])?(2X|4|A[123]|J[123568]|P[13]|S[4-8]|X2|Y[367]|S Play|HD|LITE|XL|X_V2|Y3s|Tab)(?:[ _](?:Pro|Plus|Max|LTE))?|Fusion Bolt|Omega[_ ](?:Icon 2|Icon Lite 2|lite[_ ][43][Cs]?|HD [45]|HD_Duo)|Spin Max 2|Selfie_Two|Flare_5|Android 1.*Aqua S9`),
		regexp.MustCompile(`(?i)(Flare2X|Aqua S9(?: (?:Max|Lite|Pro))?)`),
		regexp.MustCompile(`(?i)Flare[_ ]HD[_ ]([345])`),
		regexp.MustCompile(`(?i)Flare[_ ]J([26])S`),
		regexp.MustCompile(`(?i)Flare_([A-Z]\d+)_Prime`),
		regexp.MustCompile(`(?i)Flare_([A-Z]\d+)_Deluxe`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Power`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Pro`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Lite`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Plus`),
		regexp.MustCompile(`(?i)Flare ?J3 ?Plus`),
		regexp.MustCompile(`(?i)Cherry[_ ]X740`),
		regexp.MustCompile(`(?i)Flare[ _]X[_ ]V2`),
		regexp.MustCompile(`(?i)Flare[ _](J[12]|S[57]|Y3|J6|P1)[ _]mini`),
		regexp.MustCompile(`(?i)Flare[_ ](S[47]|J2)[_ ]Max`),
		regexp.MustCompile(`(?i)Flare[_ ]J2[_ ]DTV`),
		regexp.MustCompile(`(?i)Flare[_ ]Lite[_ ]3S`),
		regexp.MustCompile(`(?i)Flare(?:[ _])?(A[123]|J8 LTE|J[13568]|P[13]|S[4-8]|X2|Y3s|Y7_LTE|Y[673]|[45])`),
		regexp.MustCompile(`(?i)OMEGA HD ([45])`),
		regexp.MustCompile(`(?i)Omega[_ ]Lite[_ ](3[Cs]|4)`),
		regexp.MustCompile(`(?i)Flare Tab Pro V(\d)`),
		regexp.MustCompile(`(?i)(Fusion Bolt|Flare Tab Pro|Flare Tab|Superion[_ ](?:S2|Radar Deluxe|S1 DTV))`),
		regexp.MustCompile(`(?i)Cherry(?:[ _]?Mobile)?[ _]?([^/;]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:ALTO (?:Bombo|classic|Estrella|JUEGO|SUBIR|[235])|FUEGO MAX|OJOS[ _](?:CAMBIO|NUBE|[68i]|ORO))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALTO ([235])`),
		regexp.MustCompile(`(?i)OJOS[ _]([68i])`),
		regexp.MustCompile(`(?i)(M812C|1501_M02|9930i|A1303|A309W|M651CY|CMCC[ -]M(?:670|860))(?: Build|[);])`),
		regexp.MustCompile(`(?i)(M812C|1501_M02|9930i|A1303|A309W|M670)`),
		regexp.MustCompile(`(?i)(?:TYH61[12]M|TYH211U|TYH201H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-(Hi8-super|Hi12|V99i?|V17HD3G|VX8-3G|V88-QUAD|V9-DUAL|V88S|Vi[78]|[HV]i10 (?:pro|plus))|Hi10 (?:Pro|plus)|HiPad[ -](?:X|Pro|Air)|HiBox-hero|HiBook(?: pro)?|Hi[89] ?(?:Air|Pro)|HiPad ?Plus|Hi8SE|Vi8 plus|Vi10(?: ?Pro)?|Surpad)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CW-Hi8-super)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-)?(Vi10|Hi10|Vi8) plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V88)-QUAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V9)-DUAL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V17HD|VX8)-?(3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-)?(Hi10) pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBook pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBook(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad-Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi([89]) ?Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi8SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi([89]) ?pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10 ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Surpad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBox-hero(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(Vi[78]|Hi12|V99i?|V88S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Claresta[ _]|(?:AirPhoneS[56]|AirPhone K6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AirPhone ?(S[56]|K6)`),
		regexp.MustCompile(`(?i)Claresta (F3) PRO`),
		regexp.MustCompile(`(?i)Claresta[ _](F4)`),
		regexp.MustCompile(`(?i)Clarmin[_ ](B[65]|C1)`),
		regexp.MustCompile(`(?i)ClearPHONE 620(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CLEMPAD[_ ](?:6_XL|HR_Plus|HR|[68]|7_S|201[89])|ClemPhone_7|MFC_(?:2018|8))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLEMPAD_(201[89])`),
		regexp.MustCompile(`(?i)Clempad[_ ](6_XL|HR_Plus|HR|[68])`),
		regexp.MustCompile(`(?i)ClemPhone[ _](7)`),
		regexp.MustCompile(`(?i)(?:Cyclone_C4|Storm_C3|Stratus_C5(?:_Elite)?|Sunshine_T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Sunshine_T1)`),
		regexp.MustCompile(`(?i)(Stratus_C5|Cyclone_C4)`),
		regexp.MustCompile(`(?i)CloudFone[ _]|(?:Thrill (?:Boost[ ]?(2|3)?|Snap|Access|Plus 16GB)|Excite Prime 2 Pro|Excite Prime|ExciteC|NBA Edition|Go SP|Next Infinity Plus|Go Connect)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Boost 2 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Boost (2|3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Boost(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Snap(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Plus 16GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Access(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NBA Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Go SP(?: 2)?|Next Infinity Plus|Go Connect(?: Lite)?(?: 2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Next(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)\+VT(?:107C|Q007C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)\+VT(107C)`),
		regexp.MustCompile(`(?i)\+VTQ(007C)`),
		regexp.MustCompile(`(?i)Hind[ _]5\.1|X417[ _]Amaze|X418[ _]Zest|X421[ _]Nova|X422[ ]Exotic|X425[ _]Shavit|X428[ _]Astute`),
		regexp.MustCompile(`(?i)Hind[ _]5\.1`),
		regexp.MustCompile(`(?i)X417[ _]Amaze`),
		regexp.MustCompile(`(?i)X418[ _]Zest`),
		regexp.MustCompile(`(?i)X421[ _]Nova`),
		regexp.MustCompile(`(?i)X422[ _]Exotic`),
		regexp.MustCompile(`(?i)X425[ _]Shavit`),
		regexp.MustCompile(`(?i)X428[ _]Astute`),
		regexp.MustCompile(`(?i)CnM[ \-](?:Touchpad|TP)[ \-]([0-9\.]+)`),
		regexp.MustCompile(`(?i)Cobalt[ _-](?:SM|T)`),
		regexp.MustCompile(`(?i)Cobalt[ _-]SM_(55?|6)`),
		regexp.MustCompile(`(?i)Cobalt[ _-]T((?:7|10))[ _]3G`),
		regexp.MustCompile(`(?i)Cobalt[ _-]T((?:7|10))[ _]wifi`),
		regexp.MustCompile(`(?i)(MID(?:1024|112[56]|1045|1048|106[05]|4331|701[26]|7015A?|70[32]2|703[56]|704[278]|7052|7065|7120|8024|80[47]2|8048|8065|8125|812[78]|9724|974[02]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Colors[ _](S(?:[19]|11)|P70|P[456]5|P32|E15|P50 Plus)|Pride_1A|P52_Pride5C|P90_Pride5X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pride_1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P52_Pride5C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P90_Pride5X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Colors[ _](S(?:[19]|11)|P70|E15|P[456]5|P32|P50 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tesla|Impulse 7.85 3G|Impulse 10.1 OCTA|Smartphone_6.1|SP(?:6.2|6.2_Lite)|TTL(?:713G|8)`),
		regexp.MustCompile(`(?i)TeslaEvo5.0`),
		regexp.MustCompile(`(?i)(Gravity 9.7 SHD)`),
		regexp.MustCompile(`(?i)(Impulse 7.85 3G)`),
		regexp.MustCompile(`(?i)Impulse 10.1 OCTA`),
		regexp.MustCompile(`(?i)Tesla_SP([^/;)]+)L(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Smartphone_6.1`),
		regexp.MustCompile(`(?i)SP6.2_Lite`),
		regexp.MustCompile(`(?i)Tesla_SP(\d+)[_.](\d+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Tesla_SP([^/;]+) Build`),
		regexp.MustCompile(`(?i)SP([^/;]+) Build`),
		regexp.MustCompile(`(?i)Smartphone ([36])`),
		regexp.MustCompile(`(?i)(L7.1)`),
		regexp.MustCompile(`(?i)(L7 Quad) Build`),
		regexp.MustCompile(`(?i)(L7 Quad Lite)`),
		regexp.MustCompile(`(?i)(L8.1)`),
		regexp.MustCompile(`(?i)TESLA,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Comio|CT701G PLUS|CT701W|GT100`),
		regexp.MustCompile(`(?i)Comio[ _-]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Compal-[a-z0-9]+`),
		regexp.MustCompile(`(?i)ConCorde ([^/;]+) Build|Concorde_Raptor_Z55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Concorde_(Raptor_Z55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ConCorde Tab ?([^/;]+) Build`),
		regexp.MustCompile(`(?i)ConCorde ReadMan ?([^/;]+) Build`),
		regexp.MustCompile(`(?i)ConCorde ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Concord[ _-]|(?:Flyfix 6|C-721|Plus-7_C777|Plus_M19_C779|Plus-9_C778)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Plus[-_]([79]|M19)_(C77[789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Allure (?:M[123]|X)|Griffe T[235-9]|TFX712G|TRA-901G|TGW[-]?(710G|709|102L|801[GL])|(?:PGN\-?[456][012][0-9]|PHS\-601|PHQ519|PHQ52[056]|TB105L|TB717G|PKT\-301|Plume (?:H1|L[1-468]|P8|P6 PRO LTE))(?:[);/ ]|$)|CTAB[^/;]+ Build`),
		regexp.MustCompile(`(?i)CTAB([^/;]+) Build`),
		regexp.MustCompile(`(?i)(TGW)-?(710G|709|801[GL]|102L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TFX712G|TB105L|TB717G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TRA)-(901G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHS\-601`),
		regexp.MustCompile(`(?i)PGN\-?403`),
		regexp.MustCompile(`(?i)PGN\-?404`),
		regexp.MustCompile(`(?i)PGN\-?409`),
		regexp.MustCompile(`(?i)PKT\-?301`),
		regexp.MustCompile(`(?i)PGN\-?504`),
		regexp.MustCompile(`(?i)PGN\-?505`),
		regexp.MustCompile(`(?i)PGN\-?506`),
		regexp.MustCompile(`(?i)(Allure \w+) Plus`),
		regexp.MustCompile(`(?i)(Allure \w+) Lite`),
		regexp.MustCompile(`(?i)(Allure (?:M[123]|X))`),
		regexp.MustCompile(`(?i)PGN\-?507`),
		regexp.MustCompile(`(?i)PGN\-?508`),
		regexp.MustCompile(`(?i)PGN\-?509`),
		regexp.MustCompile(`(?i)PGN\-?511`),
		regexp.MustCompile(`(?i)PGN\-?513`),
		regexp.MustCompile(`(?i)PGN\-?514`),
		regexp.MustCompile(`(?i)PGN\-?515`),
		regexp.MustCompile(`(?i)PGN\-?516`),
		regexp.MustCompile(`(?i)PGN\-?51[78]`),
		regexp.MustCompile(`(?i)PGN\-?521`),
		regexp.MustCompile(`(?i)Griffe T3 ?pro`),
		regexp.MustCompile(`(?i)Griffe T([0-9]) Plus`),
		regexp.MustCompile(`(?i)Griffe T([0-9])`),
		regexp.MustCompile(`(?i)PGN\-?522`),
		regexp.MustCompile(`(?i)PGN\-?523`),
		regexp.MustCompile(`(?i)PGN\-?527`),
		regexp.MustCompile(`(?i)PGN\-?528|PLUME P6 PRO LTE`),
		regexp.MustCompile(`(?i)PGN\-?605`),
		regexp.MustCompile(`(?i)PGN\-?606`),
		regexp.MustCompile(`(?i)PGN\-?607`),
		regexp.MustCompile(`(?i)PGN\-?608`),
		regexp.MustCompile(`(?i)PGN\-?609`),
		regexp.MustCompile(`(?i)PGN\-?610`),
		regexp.MustCompile(`(?i)PGN\-?611`),
		regexp.MustCompile(`(?i)PGN\-?612`),
		regexp.MustCompile(`(?i)PGN\-?613`),
		regexp.MustCompile(`(?i)Plume L([2468]) Pro`),
		regexp.MustCompile(`(?i)Plume L([13]) Plus`),
		regexp.MustCompile(`(?i)Plume L([1-4])`),
		regexp.MustCompile(`(?i)PGN\-?([0-9]{3})`),
		regexp.MustCompile(`(?i)(?:CP6001A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CTAB1044hn|CTAB-1044|SEN_1055_ARM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CTAB1044hn|CTAB-1044)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Conquest[-_](?:S(?:20|[68]|1[0126])|F2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Conquest[-_]S([68]|1[0126]|20)`),
		regexp.MustCompile(`(?i)Contixo|(?:CX-1045 3G|KT995 3G|CX1045|B108_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CX-?1045(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CONTIXO GX 1035(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Contixo GT1160 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B105(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B108(?:[_ ]4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT107(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT715 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT995(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT ?1100GT(?: 4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad|(?:Cool_9S|1824-S0|8190Q|1831-A0|8676-[AM]01|1872-A0|CP8298_I00|CP3648AT?|CP8676_I0[23]|REVVLPLUS C3701A|VCR-[AI]0|C105-(?:8|E0)|C106-[789]|C107-9| C106|MTS-T0|cp3705A[S]?|ORL-C0|DLS-E0|1826-I01|8298-(?:M02|A01)|5560S|CP3320AS2|CP3667AT|CP3706AS|CP3669AS|CP3321AT|CP350[34]L|C103|CP03)(?:[);/ ]|$)|(8295|5860S) Build`),
		regexp.MustCompile(`(?i)VCR-[AI]0`),
		regexp.MustCompile(`(?i)1831-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1872-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8190Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DLS-E0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1824-S0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3321AT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3705A[S]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3648AT?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3320AS2?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3706AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3669AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MTS-T0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:C106-[789]|R116|C10[36])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C107-9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C105-(?:E0|8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1826-I01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ORL-C0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cool_9S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5560S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(5860S|8295) Build`),
		regexp.MustCompile(`(?i)CP8676_I02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP8676_I03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP8298_I00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CP350[34]L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(8676-[AM]01|8298-(?:M02|A01))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad[ _\-]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(CP-J55a|CP-J55aW|CP-J55aX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WING 5|WING9|Venus[ _][14]`),
		regexp.MustCompile(`(?i)Venus[ _]([14])`),
		regexp.MustCompile(`(?i)Cricket-([a-z0-9]+)|(?:U304AC|U325AC|U705AC|V350C|EC1002|EC21100[1-4])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cricket-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Q7A\+?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRONY-7021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Crosscall|ODYSSEY_Plus|Odyssey S1|Trekker-[MSX][1-4]|Action-X[35]|Core-(?:M[45]|T4|X[34])`),
		regexp.MustCompile(`(?i)Action-X3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Action-X([35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Core-(M[45]|X[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Crosscall ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Trekker-([MSX][1-4]) Core`),
		regexp.MustCompile(`(?i)Trekker-([MSX][1-4](?: Core)?)`),
		regexp.MustCompile(`(?i)CROWN, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(<!myPhone ?)Cube|(U[0-9]+GT|K8GT)|(?:T8-PLUSM?S?|T8PLUSML|I1-TF[BD]?|I1-TC|i15-TG|i1002S|Iwork10 Flagship|iwork10 Pro|T10 PLUS|CUBE-T970)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T8-PLUSM?S?|T8PLUSML)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1-TF[BD]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1-TC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i15-TG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:i1002S|iwork10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Iwork10 Flagship(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUBE-T970(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U[0-9]+GT[^;/]*) Build`),
		regexp.MustCompile(`(?i)(U[0-9]+GT(?:[0-9]|[\-_][a-z]+)?)`),
		regexp.MustCompile(`(?i)(K8GT)`),
		regexp.MustCompile(`(?i)Cyrus[ _-]|CyrusApel`),
		regexp.MustCompile(`(?i)Cyrus[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Cyrus[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP|(?:Ursus|Ixion)[ _]([^;/)]+)|H135[ _]Build|Larus_TV1|Ixion(?:ML4.7|ES250)|M150Storm|(?:SENIOR|F4[38]D8000K|VA(?:[12]10|170)|ML450|MS[56]50|BL(?:[123]50|160|155)|BS(?:155|160|[1256]50)|S(?:3[78]0|2[89]0|670)|AL(?:[12]40|[23]50)|AS(?:155|[123]60)| (?:N280i|P310|P380i?|R1[18]0|Q110|E1[78]0|E[12]10|B(?:450|340|35[05])|M445|T155|U43F8000Q|A(?:1[456]0|340|[34]55)|GS15[035]|GL[23]55|G25[05]|G15[05]|ES750|XL150|Z[1-4]55|H170|H310|P510|L2[17]0)|Z250|A440|N[13]80i|L3[17]0i|G450|G660|Q[123]10|Q[12]80|N[234]10|N[35]70|EX111)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ixion[_ ]([^;/]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(ML450|MS[56]50|ES750|XL150)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IxionES250(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IxionML4.7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M150Storm(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M445(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AL250(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AL350(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS155(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ursus[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(VA[21]10|VA170|E210|R1[18]0|Q110|N280i|P380i?|P[35]10|S2[89]0|S3[78]0|S670|H170|H310|L2[17]0|N[13]80i|N[234]10|E1[178]0|Q[123]10|Q[12]80|EX111|N[35]70|L3[17]0i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G450)[ _](2021)`),
		regexp.MustCompile(`(?i) (A440|A[34]55|B450|B340|B35[05]|BL155|BL160|A160|A340|T155|Z[1-4]55|G25[05]|Z250|G450|G660)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SENIOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H135[ _]Build`),
		regexp.MustCompile(`(?i)(BL[123]50|BS155|BS160|BS[1256]50|AL[12]40|A1[45]0|GS15[035]|AS160|GL[23]55|G15[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)DEXP[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F4[38]D8000K|U43F8000Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JAGUAR|SATURN|TIGER|PUMA)-0\dC?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SATURN-(02C?)`),
		regexp.MustCompile(`(?i)DIGIFORS (400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DINGDING[ _-](SK\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WTCELERO5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIXON_|(?:ACK1010|KT5512|HK7-3502|DN6015|DFM48)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ACK1010|KT5512|DFM48)`),
		regexp.MustCompile(`(?i)DIXON_XK1_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DNS|AirTab)[ _\-]([^;/)]+)|(?:S4505M|S4004M|SD01M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DNS[_ ])?(S4505M|S4004M|SD01M|S4502|S4003|S4003)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-4003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AirTab[ _\-]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)DNS[ _\-]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Aloha_5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUNNS[ _]`),
		regexp.MustCompile(`(?i)DUNNS[ _](?:MOBILE[ _])?(703GDC|AT1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Daewoo|(DTA-07IDRF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DTA-07IDRF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Daewoo (Android TV 638)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dslide ?([^;/]+) Build|Konnect_?(?:402|50[246]|60[1278])|GEODROID_A5|Dslide[ _]?(?:714|101[45]|1020|1013QC)`),
		regexp.MustCompile(`(?i)Konnect_?(402|50[246]|60[1278])`),
		regexp.MustCompile(`(?i)Dslide ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Dslide[ _]?(714|1013QC|101[45]|1020)`),
		regexp.MustCompile(`(?i)(?:MEMOR 10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K908H4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DATANG[ _-])+([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:DATANG[ _-])+([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)DW-[A-Z0-9]{5}(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DW-PS3G5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DBTEL(?:[\-/])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)DeWalt (MD501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dell[^a-z]|Venue|XCD35`),
		regexp.MustCompile(`(?i)Venue ((?:10|[78]) [0-9]{4}|[78] HSPA\+)`),
		regexp.MustCompile(`(?i)(?:Dell )?Venue(?: Build|[);])`),
		regexp.MustCompile(`(?i)Dell; Venue Pro`),
		regexp.MustCompile(`(?i)(OptiPlex (?:3050|7010))`),
		regexp.MustCompile(`(?i)(?:Dell )?(Streak|Venue) ?([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:Dell Inc./)?(XPS 13 9360|Latitude 7480)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dell; ((?:Streak|Venue)[^;/\)]*)`),
		regexp.MustCompile(`(?i)Dell; ([^;/\)]+)`),
		regexp.MustCompile(`(?i)Dell[ _\-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:TA[CDQ]-[0-9]+)|P(?:.+)TAQ-(?:[0-9]+)|SDQ[_-](?:550[24]4L|52001G|50002G|57004L)`),
		regexp.MustCompile(`(?i)P(?:.+)TAQ-(10213GMK2|10172MK3|10242MK2|70242MK2|[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA[CDQ]-[0-9]+)`),
		regexp.MustCompile(`(?i)SDQ[_-](550[24]4L|52001G|50002G|57004L)`),
		regexp.MustCompile(`(?i)Desay[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Desay[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dialog ?([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)DICAM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Digi[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGICEL|DL3(?:PlusPro)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DL3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGICEL ([^/;]+) Build`),
		regexp.MustCompile(`(?i)DIGIHOME, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:DL721-RB|DL(?:1016|1023|1036|9002|[78]006|1008M)|Compumax Blue)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DL(1016|1023|1036|9002|[78]006|721-RB)`),
		regexp.MustCompile(`(?i)(Compumax Blue)`),
		regexp.MustCompile(`(?i)Digma[_ ]([^;/]+) Build|HIT HT707[10]MG|CITI (?:7 E401 4G|8 E400 4G|ATL 4G|Kids|Octa [178]0|1902 3G|10 E402|Z530 3G)|(CITI[_ ](?:[A-Z0-9]+)[_ ][34]G)[ _][TC][ST](?:[0-9]{4}[PM][LG])|HIT 4G|HT7074ML|IDX5|(iDx10|iDx7)|MVM900H(?:WZ|C)|MVM908HCZ|(iDxD8 3G|iDxD10 3G|iDrQ10 3G|iDxD[45]|iDxQ5|iD[nx]D7(?:[_ ]3G)?)|PS604M|PT452E|Linx.+ [34]G L[TS][0-9]{4}[PM][GL]|Linx PS474S|PS1043MG|HT7071MG|HT5035PG|HT4039PG|NS6902QL|NS9797MG|TS7854M|TS1012E 3G|TT1004PG|TT702[045]MG|TT1002MG|TT7026MW|VRL42|((?:Optima|Platina|Plane)[ _](?:[EM])?(?:[0-9\.ST]+|Prime)(?:[ _][43]G)?)|(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)|DM-LED(?:43SR23|24SR20)`),
		regexp.MustCompile(`(?i)HIT(?: 3G)? HT707[10]MG`),
		regexp.MustCompile(`(?i)(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)`),
		regexp.MustCompile(`(?i)Linx ([A-Z][0-9]{3}) 3G (?:LT4028PG|LS4019PG|LT4001PG|LT5001PG|LT4038PG|LT5037MG|LT4030PG)`),
		regexp.MustCompile(`(?i)(Linx PS474S)`),
		regexp.MustCompile(`(?i)(CITI Z530 3G)`),
		regexp.MustCompile(`(?i)(CITI [A-Z0-9]+ [34]G) C[ST](?:606[32]ML|4024PG|5009PL|5021ML|502[56]PL)`),
		regexp.MustCompile(`(?i)MVM900H(?:WZ|C)`),
		regexp.MustCompile(`(?i)(iD(?:xD10|rQ10|xD7)[_ ]3G)`),
		regexp.MustCompile(`(?i)(iDx10|iDx7)`),
		regexp.MustCompile(`(?i)(iDxD[45]|iDxQ5)`),
		regexp.MustCompile(`(?i)CITI[_ ](1902 3G|Kids|8527_4G|Octa [178]0|10 E402 4G|8 E400 4G|7 E401 4G)`),
		regexp.MustCompile(`(?i)(CITI[ _](?:[A-Z0-9]+)[ _][34]G)[ _][TC][ST](?:106[24]ML|111[46]ML|1115MG|1117PG|1207MG|1210MG|3001ML|500[67]PG|7052PG|706[567]MG|7097MG|720[48]MG|820[69]MG|11[459]4MG|1195MG|1196ML|3001ML|8152ML|1050PL|709[68]PL|7113PL|7193MG|7216MG|8205PG|7203MG|8143MG|7153MG|7141MG|7140ML)`),
		regexp.MustCompile(`(?i)(iDnD7)`),
		regexp.MustCompile(`(?i)Optima ([0-9]+ [AXZ][0-9]+S?) ([43])G`),
		regexp.MustCompile(`(?i)Optima ([0-9]+ A500S) 3G`),
		regexp.MustCompile(`(?i)((?:Optima|Platina|Plane)[ _](?:[EM])?(?:[0-9\.STNMEV]+|Prime)(?:[ _][43]G)?)`),
		regexp.MustCompile(`(?i)Digma[_ ]([^;/]+) Build`),
		regexp.MustCompile(`(?i)VRL42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DM-LED(\d+SR\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M1092R(?:-[12]|V[45])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QC-(?:703GN|704GA|803GN|1013G|7BHD))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Divisat|X-MEDIA|DVS X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DVS )?(J-Link|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X-MEDIA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DoCoMo|\;FOMA|KGT/1\.0`),
		regexp.MustCompile(`(?i)DoCoMo/.+MST.+(SH2101V)`),
		regexp.MustCompile(`(?i)DoCoMo/[12]\.0[/ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)([a-z0-9]+)(?:_W)?\;FOMA`),
		regexp.MustCompile(`(?i)KGT/1\.0 ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(24DHS54)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dolamee[_ -](D[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DOOGEE[/ _-]|Valencia2_Y100(?:_?(?:pro|plus))?|Y100_Plus|X5max(?:[_ ]PRO)?|Shoot_[12]|x5_doogee|(KISSME|BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)|(?:BL12000|BL5500[_ ]Lite|X9 Mini|LEO_DG280|Y9Plus|Y8 Plus|Hitman_DG850|S(?:[568]8|9[0567]|59|40|86)Pro|X9[56]Pro|S[478]0Lite|S88Plus|BL[579]000|N[24]0Pro|S90C|Ibiza_F2|S55_Lite|T5_Lite|S60 ?Lite|Iron-bone DG750|X10S|X[56]0L|MIX2|Y6 Max|Y6_Piano(?:_black)?|X[679]pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Valencia2_)?Y100_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Valencia2_Y100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO_(DG280)`),
		regexp.MustCompile(`(?i)Iron-bone (DG750)`),
		regexp.MustCompile(`(?i)(BL[579]000|S90C|X10S|X[56]0L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X(9[56])Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N([24]0)Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL5500[_ ]Lite`),
		regexp.MustCompile(`(?i)S([568]8|9[0567]|59|40|86)Pro`),
		regexp.MustCompile(`(?i)S(88)Plus`),
		regexp.MustCompile(`(?i)S([4-8]0|55)[_ ]?Lite`),
		regexp.MustCompile(`(?i)Shoot_([12])`),
		regexp.MustCompile(`(?i)X([679])pro`),
		regexp.MustCompile(`(?i)(X5max(?:[_ ]PRO)?)`),
		regexp.MustCompile(`(?i)(?:DOOGEE[ _-])?(BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|Valencia2_Y100pro|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DOOGEE[ _-]([^);/]+) Build`),
		regexp.MustCompile(`(?i)DOOGEE[ _-]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y([89]) ?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doopro P3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dopod(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Doppio DP355(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doppio ([0-9a-z]+)`),
		regexp.MustCompile(`(?i)Doro|DSB-02[23]0`),
		regexp.MustCompile(`(?i)DSB-0230(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DSB-0220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doro[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Doro[ _-]([0-9a-z]+)`),
		regexp.MustCompile(`(?i)(Notepad[_ ](?:K10|102))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sens 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sens 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DROXIO (C40|A47|B45|KENTIA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DuneHD|SOLO 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLO 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DuneHD/\d.\d \([a-z]+__([a-z0-9_-]+);`),
		regexp.MustCompile(`(?i)DuneHD/\d.\d \(([a-z0-9_-]+);`),
		regexp.MustCompile(`(?i)E-Boda|Eclipse_(?:G400M|G500)|Revo R77 GPS`),
		regexp.MustCompile(`(?i)E-Boda ((?:Revo|Izzycomm|Essential|Intelligence|Supreme)[^/;]+) Build`),
		regexp.MustCompile(`(?i)Eclipse_(G400M|G500)`),
		regexp.MustCompile(`(?i)E-Boda ([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:CT9716(?:-B)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT9716(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT9716-B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E-tel[_ ]i250`),
		regexp.MustCompile(`(?i)EBEST[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)EBEST[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TA10CA3|TM105A?|TR10[CR]S1|TF10EA2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TA10CA3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TR10[CR]S1|TF10EA2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM105A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM105(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Harrier(?: Tab)?|Hawk|Rook)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)(Harrier Tab)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)Rook[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)(Harrier|Hawk)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)EKO[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)EKO[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EK-(?:5040|5336|5540|5937|6020|8680|MII|T7020)`),
		regexp.MustCompile(`(?i)EK-(MII|T7020)`),
		regexp.MustCompile(`(?i)EK-(5040|5336|5540|5937|6020|8680)`),
		regexp.MustCompile(`(?i)KidPhone4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVBOX-PLUS\+`),
		regexp.MustCompile(`(?i)EVBOX-PLUS\+`),
		regexp.MustCompile(`(?i)OCTA T720Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EX7SL?4|EX10S4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EXO_)?(Wave_i101G|Wave_i007B?|Wave i101[Hb]|Wave-i101L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eagle[ _](Classic Pro|Elite|Gold)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EasyPad|EasyPhone`),
		regexp.MustCompile(`(?i)(EasyPhone[^/;]+) Build`),
		regexp.MustCompile(`(?i)EasyPad ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)ECHO[ _](HOLI|HORIZON|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION)|HORIZON_M|Stellar 3G|FEELING`),
		regexp.MustCompile(`(?i)(HORIZON_M|FEELING)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ECHO[ _](HOLI|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION)`),
		regexp.MustCompile(`(?i)Einstein(T3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S5LS|X4UPlus`),
		regexp.MustCompile(`(?i)electroneum(M1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(?:4[238]S[AM]{2}RT|5[05](?:CV_)?SMART_UHD|32SMART)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(4[238])S[AM]{2}RT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-55CV_SMART_UHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(50)SMART_UHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(32)SMART(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB(?:101|728)[ _]3G|TAB7(?:[03]8|16|40|3[30]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elephone|Vowney(?: Lite)?|P6000( ?Pro| ?Plus|\+| ?02| 5.0 01)?|Soldier|(?:Trunk 1|P8_3D|P8_Max|A6_mini|Android 9.+ PX|PX_Pro| U3H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Elephone[_ ])?Trunk(?: 1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vowney Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vowney(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000(\+| ?Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 5.0 01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Soldier(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A6_mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PX_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) U3H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 9.+ PX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P8_3D|P8_Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Elephone[ _])?(P[768]000|S2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elephone[ _\-]([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:NV5(?:01|10)WAC|NV501|NV510WB|NV711WAC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV(501|510|711)WAC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV510WB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EGQ101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerMax|HARDCASEH5[05]0S|ENERGY[_ ]?(?:[45]00|400S|S[56]00|E12|E5[02]0S?)(?:[_ ](?:LTE|EU))?`),
		regexp.MustCompile(`(?i)PowerMax(P[0-9]+S?)`),
		regexp.MustCompile(`(?i)ENERGY[_ ]([45]00|E520)[_ ]LTE`),
		regexp.MustCompile(`(?i)ENERGY[_ ]400S`),
		regexp.MustCompile(`(?i)ENERGY[_ ]S([56]00)`),
		regexp.MustCompile(`(?i)ENERGY[_ ]?(E500S|E500|E12)`),
		regexp.MustCompile(`(?i)HARDCASE(H5[05]0S)`),
		regexp.MustCompile(`(?i)ENERGY[ _-]?([^;/]+) Build|Energy Phone Pro 3`),
		regexp.MustCompile(`(?i)ENERGY[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(EN1007Q)plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Enot[ _-](E102|J101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K501 Plus|[ ]K5(?:0[0-4]|1[01]|03[TS]|3[456]|4[05]|73|03HD)|[ ]K60[01]|[ ]X507T|[ ]K40[56]|[ ]T700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Projector(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ERGO|(V550[_ ]Vision|B502 Basic|B504[_ ]Unit|A502[_ ]Aurum|A503[ _]Optima|Prime B400|A551 Sky 4G|A553 Power|A555 Universe|Force F500|GoTab GBT9|GoTab Gti8|F501_Magic|V551[ _]Aura|V540_Level|V570_BIG_BEN|B506[_ ]INTRO|A503-Optima|B505_Unit_4G|LE32CT5515AK)`),
		regexp.MustCompile(`(?i)B506[_ ]INTRO`),
		regexp.MustCompile(`(?i)V550[_ ]Vision`),
		regexp.MustCompile(`(?i)B504[_ ]Unit`),
		regexp.MustCompile(`(?i)V551[ _]Aura`),
		regexp.MustCompile(`(?i)(ERGO_)?A500[ _]Best`),
		regexp.MustCompile(`(?i)(ERGO_)?A550[ _]Maxx`),
		regexp.MustCompile(`(?i)A502[_ ]Aurum`),
		regexp.MustCompile(`(?i)A503[ _]Optima`),
		regexp.MustCompile(`(?i)ERGO[_ ]A556`),
		regexp.MustCompile(`(?i)ERGO[_ ]F500`),
		regexp.MustCompile(`(?i)ERGO[_ ]F501`),
		regexp.MustCompile(`(?i)ERGO[_ ]Tab[ _]Crystal[ _]Lite`),
		regexp.MustCompile(`(?i)ERGO[_ ]Tab[ _]Hero[ _]II`),
		regexp.MustCompile(`(?i)ERGO[_ ](B700)`),
		regexp.MustCompile(`(?i)(LE32CT5515AK)`),
		regexp.MustCompile(`(?i)(?:Ericsson(?:/ )?[a-z0-9]+)|(?:R380 2.0 WAP1.1)`),
		regexp.MustCompile(`(?i)Ericsson(?:/ )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)R380 2.0 WAP1.1`),
		regexp.MustCompile(`(?i)Ericy-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(42FLEA73T2SM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PH-1[ )]`),
		regexp.MustCompile(`(?i)PH-1[ )]`),
		regexp.MustCompile(`(?i)(?:Wooze[_ ]?(?:I55?|I45|X?L)|HEYOU(?:[135]|30))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEYOU([135]|30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wooze[_ ]?((?:I55?|I45|X?L))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eton[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Eton[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ETL-S(?:3520|4521|5042|5084|6022)|ETL-T(?:752G|882G|9[78]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ETL-S(?:[^/); ]+))`),
		regexp.MustCompile(`(?i)(ETL-T(?:[^/); ]+))`),
		regexp.MustCompile(`(?i)(EUTB_758G?)`),
		regexp.MustCompile(`(?i)(ET7002C-H12|Onyx-[13]S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onyx-([13]S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ET7002C-H12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVERCOSS[ _]|(A75A\*|U50A_PLUS|M50 STAR|A75 MAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A75A\*(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A75 MAX*(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U50A_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M50 STAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVERCOSS[ _](A7[BRLZ]|A65|A74A|A5Z)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ever(?:Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Smart|Star)[^/;]*) Build|E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E7914HG|V5_Nano|EverMiracle Plus`),
		regexp.MustCompile(`(?i)(E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E7914HG)`),
		regexp.MustCompile(`(?i)(Ever(?:Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Smart|Star)[^/;]*) Build`),
		regexp.MustCompile(`(?i)Evolio|M4MAGIC`),
		regexp.MustCompile(`(?i)Evolio[ _](M6|S4 Cobalt|S5|X10|Yuppi)`),
		regexp.MustCompile(`(?i)EVOLVEO|StrongPhone`),
		regexp.MustCompile(`(?i)Smart TV ([^;/]*) Build`),
		regexp.MustCompile(`(?i)EVOLVEO StrongPhone G(\d)`),
		regexp.MustCompile(`(?i)(?:EVOLVEO[ _])?StrongPhone[ _]?Q([679])(_LTE)?`),
		regexp.MustCompile(`(?i)EVOLVEO[ _]([^;/]*) Build`),
		regexp.MustCompile(`(?i)EVM4G3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVM4G3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVROMEDIA|Playpad[ _]|PLAY_PAD_PRO_XL|3G NOTE XL`),
		regexp.MustCompile(`(?i)EX(29|45)i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Exmart[ _](K1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Explay|[\w]+-EXPLAY-FIN|ActiveD[ _]|Atlant |Informer[ _][0-9]+|CinemaTV 3G|Surfer[ _][0-9\.]|sQuad[ _][0-9\.]|Onliner[1-4]|RioPlay|Leader|Pulsar|Infinityll|Joy_TV|Imperium[78]|Winner[78]|Indigo|Lagoon|Tornado(?:3G)?|Onyx`),
		regexp.MustCompile(`(?i)ActiveD[ _]7.4[ _]3G`),
		regexp.MustCompile(`(?i)Imperium([78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ActiveD[ _]8.2[ _]3G`),
		regexp.MustCompile(`(?i)CinemaTV[ _]3G`),
		regexp.MustCompile(`(?i)Informer[ _]([0-9]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Surfer[ _]([0-9\.]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)sQuad[ _]([0-9\.]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Onliner([1-4])`),
		regexp.MustCompile(`(?i)Winner([78])`),
		regexp.MustCompile(`(?i)Atlant(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Indigo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pulsar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tornado(?:3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onyx(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy_TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[\w]+-EXPLAY-FIN`),
		regexp.MustCompile(`(?i)Lagoon(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Explay[ _-]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)RioPlay(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rock X9+|ROCK_X11`),
		regexp.MustCompile(`(?i)Rock X9+`),
		regexp.MustCompile(`(?i)EZIO-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)EZZE-|EZ[a-z0-9]+`),
		regexp.MustCompile(`(?i)EZZE-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)EZ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:Bison2021|B2021|[HR]2022)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([HR]2022)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Bison2021|B2021)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z8PLUS|Z8POCKET|LT5216|F80s_plus|C8Finger|F80 PIABELLA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LT5216)`),
		regexp.MustCompile(`(?i)(K118)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fise_32433_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPTIMUM (500[1-4]|5501)`),
		regexp.MustCompile(`(?i)UNICUM (1002|8S|8003)`),
		regexp.MustCompile(`(?i)(?:16M4HI105024|FMT-NM7058-02|176HS1050(?:232|531)|175WT1050231|175HS1050231|175FT1050241)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ConeXis (A[12]|X[12])|SP5045V`),
		regexp.MustCompile(`(?i)ifive(?:[_ ]mini[_ ][43]G?S|X2|Mini3|3| Air)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ifive[_ ]mini[_ ]([43]G?S)`),
		regexp.MustCompile(`(?i)ifive(X2|3)`),
		regexp.MustCompile(`(?i)FORME[ _-]`),
		regexp.MustCompile(`(?i)FORME[ _-]F520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FORME[ _-](A[35]7|R7S?|P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FTRW100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (FP(?:1U?|[23]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FX[123]00)`),
		regexp.MustCompile(`(?i)FAN-M300H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart ?(601|550|50[59])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(vKB011B|vKB004L)`),
		regexp.MustCompile(`(?i)Fero[_ ]|Royale[_ ](?:[YX]2|A1)`),
		regexp.MustCompile(`(?i)Royale[_ ]([YX]2|A1)`),
		regexp.MustCompile(`(?i)Fero[ _](A4001|A450[23]|A5001|L100|Iris|Power|Mega LTE|Vibe)`),
		regexp.MustCompile(`(?i)ATRIUM II F55L2|TRIO F40LT|CENTRIC S50G|EPIC F50G|Gravity X55L|Orion M50L|ULTRA M50G|UltraJ8|M405B|VIRTUE3|F55L Build|Orbit_ll`),
		regexp.MustCompile(`(?i)(F55L)`),
		regexp.MustCompile(`(?i)(Gravity X55L|Orion M50L)`),
		regexp.MustCompile(`(?i)Note_(?:[37]|11)_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Note_([37]|11)_Pro`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([AB][1-9]|[CD][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([AB][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([CD][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FINLUX, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:AURII[ _](?:Passion|Virtuoso|ULTRA|Secret Lite|AMUSE[_ ]3G|FORCE|FUSION|F8[_ ]Premium|XCITE|DELIGHT|DREAM[_ ](?:MINI|One))|SECRET_XR|INTENSE[ _](?:POWER|METAL_2|XT)|SUPER SWEET|SWEET MINI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FORCE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DELIGHT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DREAM[_ ]MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DREAM[_ ]One(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]ULTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]AMUSE[_ ]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FUSION(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]XCITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SECRET_XR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]((?:Passion|Virtuoso|Secret Lite|F8[_ ]Premium))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE POWER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_XT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_METAL_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPER SWEET(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly|Power Plus 5000|Photo Pro|Slimline|Life (?:Ace|Jet|Sky|Compact 4G|Geo|Zen|Play)|FS50[1-9]|FS51[0-8]|FS52[0-9]|FS530|FS55[134]|FS40[1-9]|FS45[1-9]|4FS06|MERIDIAN-|(?:IQ[0-9]{3,}[i]?)[ _]?(?:Quad|Firebird|Quattro|Turbo|Magic)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ310(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ236(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slimline(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Plus 5000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Photo Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Ace(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Jet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Sky(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Geo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Zen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Buzz(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Compact 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ237(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ238(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ240(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ255(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ270(?: Firebird)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ275(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ285(?: Turbo)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ432(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ436(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4490(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ434(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4406(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ436i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ440(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ441(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ442 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ442(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ443(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ444(?: Quattro)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ445(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ446(?: Magic)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ447(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ456(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4409 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ448(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ449(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ450(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ450[ _]Quattro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ451(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ452 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ454(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4404(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4410 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4411(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4412 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4413[ _]Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4414 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4415 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4504 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ([0-9]+[i]? ?(?:Quad|Firebird|Quattro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly[ _\-]?([a-z0-9_]+)/`),
		regexp.MustCompile(`(?i)Flylife[ _\-]?([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Fly[ _\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MERIDIAN-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Fondi[- _]([^;/)]+)|(T702|Q008B|Q010B|Q718B|Q902|T602B|T707G|T708B|T725B|T725B1|T907B)(?:\)| Build)`),
		regexp.MustCompile(`(?i)(T702|T602B)`),
		regexp.MustCompile(`(?i)(Q008B|Q010B|Q718B|Q902|T707G|T708B|T725B|T725B1|T907B)`),
		regexp.MustCompile(`(?i)Fondi[- _]([^;/)]+)`),
		regexp.MustCompile(`(?i)Fonos-(O1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Formuler[ _]|(?:S_TURBO_PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Formuler[ _](Z8(?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S_TURBO_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amosta ?3G5`),
		regexp.MustCompile(`(?i)Amosta ?3G5`),
		regexp.MustCompile(`(?i)(Apollo 5 Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Four[ _]?(S600|S300I|S185|K500|S61)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Four[ _]?(S600|S300I|K500)`),
		regexp.MustCompile(`(?i)Four[ _]?S185`),
		regexp.MustCompile(`(?i)Four[ _]?S61`),
		regexp.MustCompile(`(?i)(?:EASYSMARTM3|EasySmart M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY ?SMART ?M([32])`),
		regexp.MustCompile(`(?i)InFocus M[0-9]+[a-z]?`),
		regexp.MustCompile(`(?i)InFocus M([0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)(?:FTJ17[AC]00|FTJ152[ABCD]|FTU18A00|FT141B|FT142D(?:_LTEXM)?|FT142A?|FTJ161[AB]|FTJ1[56]2E|FTJ162[BD]|FTE161[GE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTJ17A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTJ17C00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTU18A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FT142D(?:_LTEXM)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FT142A?`),
		regexp.MustCompile(`(?i)(?:F-01[FHJKLM]|F-02[EFGHLK]|F-03[DEFGKHL]|F-04[EGFHKJ]|F-05[DEFJG]|F-06[EF]|F-07[DE]|F-08D|F-09[DE]|F-10D|F-[45]1A|F-41B|F-[45]2A|F-11D|F-12C|F-51B|M532|FARTM933KZ|901FJ|arrows(?:RX|M03|M0[45](?:-PREMIUM)?)|801FJ|FJL2[12]|RM02|FCG01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-01[LM]|F-06F|F-03K|F-42A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FJL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FJL22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-52A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901FJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-41B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-06E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-07D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:F-51B|FCG01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)801FJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-07E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-08D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-09D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-09E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-10D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-11D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-12C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-04[JF])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RM02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsRX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM04-PREMIUM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM(0[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-0[32]F|F-03G|F-04H|F-05E|F-02K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUNAI, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Fusion5|F104Bv2`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F104B)v2_PRO`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F104B)v2`),
		regexp.MustCompile(`(?i)G-TiDE_(A1|S[34])`),
		regexp.MustCompile(`(?i)E(57|60|66|72|77)`),
		regexp.MustCompile(`(?i)GTouch[_ ]|(?:Stella (?:XS?|Omega))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Stella (XS?|Omega)`),
		regexp.MustCompile(`(?i)GTouch[_ ]STELLA`),
		regexp.MustCompile(`(?i)GEOFOX[_ ](MID ?743)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PRESIDENT_GOLD_(9|10)|President Gpower 1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRESIDENT_GOLD_(9|10)`),
		regexp.MustCompile(`(?i)Quartz(T10-3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLX (?:Aria|Dorna|Taban|Shine|Spark|ASA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLX (Aria|Taban|Shine|Spark)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLX (Dorna)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOCLEVER|QUANTUM_(?:[235]_)?[0-9]{3}|QUANTUM [0-9]{1}|QUANTUM 700N|Quantum2 500|QUANTUM_(1010N|1010M|900|II_500_N)|ARIES|INSIGNIA|ORION_|ELIPSO|LIBRA[ _]97`),
		regexp.MustCompile(`(?i)QUANTUM_(1010N|1010M|900)`),
		regexp.MustCompile(`(?i)INSIGNIA_(785_PRO|1010M|800M)`),
		regexp.MustCompile(`(?i)(ORION|ARIES|ELIPSO)[_ ](71|101|102)`),
		regexp.MustCompile(`(?i)QUANTUM_2_(1010|700|960)_Mobile`),
		regexp.MustCompile(`(?i)QUANTUM_([235])_(5[05]0)_RUGGED`),
		regexp.MustCompile(`(?i)QUANTUM_(\d+)_RUGGED_PRO`),
		regexp.MustCompile(`(?i)QUANTUM[_ ]([235])_([45]00)[_ ]LITE`),
		regexp.MustCompile(`(?i)QUANTUM[_ ]([45]00)[_ ]LITE`),
		regexp.MustCompile(`(?i)QUANTUM[ _]?([235])[ _]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)((?:QUANTUM|ARIES|INSIGNIA|ORION|ELIPSO)[ _-]?[^;/]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]TAB[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)TAB ([^;/)]+) Build/GOCLEVER`),
		regexp.MustCompile(`(?i)([^;/)]+) Build/GOCLEVER`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?TAB[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)LIBRA[ _]97`),
		regexp.MustCompile(`(?i)GI UNI2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Garmin-Asus|Garminfone`),
		regexp.MustCompile(`(?i)Garminfone[ \-_]([^;/]*)Build`),
		regexp.MustCompile(`(?i)Garmin-Asus[ \-_]([^;/]+)Build`),
		regexp.MustCompile(`(?i)Garmin-Asus[ \-_]([^;/]+)[\)/]`),
		regexp.MustCompile(`(?i)(GEM[0-9]+[a-z]*)`),
		regexp.MustCompile(`(?i)GM 5 Plus|GM8 go|GM [568] d|GM 8|General Mobile 4G|GM 9 (?:Pro|Plus)|(?:e-tab 20|Android 1.+ (?:G[35]01|G[35]10|G700)|GM Discovery II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GM (\d+) d`),
		regexp.MustCompile(`(?i)e-tab 20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SK-Mtek GT730[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEOTEL[ _]?`),
		regexp.MustCompile(`(?i)GEOTEL[ _]?Note`),
		regexp.MustCompile(`(?i)GEOTEL[ _]AMIGO`),
		regexp.MustCompile(`(?i)(GTX-R10i Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GHIA|QS702|SVEGLIO[ _][QH]1|VECTOR10\.1|GTKIDS7[BVR]?|(?:GTA7WF|VENUS7|TREO_TAB8G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SVEGLIO[ _]([QH]1)`),
		regexp.MustCompile(`(?i)GHIA[ _](L1)`),
		regexp.MustCompile(`(?i)VECTOR10\.1`),
		regexp.MustCompile(`(?i)GTKIDS7[BVR]?`),
		regexp.MustCompile(`(?i)GHIA[ ]?(47458)`),
		regexp.MustCompile(`(?i)GHONG(V10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GHOST G03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GSmart[ _][a-z0-9 ]+(?: Build|\))|Gigabyte-[a-z0-9]+|Simba SX1|GSmart_Classic_Lite|Classic[_ ](?:Joy|Pro)`),
		regexp.MustCompile(`(?i)(GSmart[ _][a-z0-9 ]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Gigabyte-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Classic[ _](?:Joy|Pro)|GSmart_Classic_Lite)`),
		regexp.MustCompile(`(?i)Gigaset|(?: GX290|GS80|GS1[0189]0|GS1[89]5|GS2[89]0|GS5[357]-6|GS[23]70(?:_Plus)?|E940-2795-00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gigaset QV(1030|830)`),
		regexp.MustCompile(`(?i)G(S[23]70)[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GS([23]70|1[0189]0|1[89]5|2[89]0|80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GX290)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gigaset ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Gigaset ([^;/)]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Gini[ _]`),
		regexp.MustCompile(`(?i)Gini[ _]W(7)`),
		regexp.MustCompile(`(?i)Gini[ _]n(8)`),
		regexp.MustCompile(`(?i)Gini[ _]s5Pro`),
		regexp.MustCompile(`(?i)Gini[ _]Tab[ _](V[78])`),
		regexp.MustCompile(`(?i)GINZZU[_ ]|((?:RS(?:7[14]|81|9[67])D)|S5002|S5021|S5230|S50[45]0|S51[24]0|RS(6[12]|9[45])D|S40[23]0|RS850[12]|RS9602)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GINZZU[_ ]?(S40[17]0|S4710|ST60[14]0|ST6120)`),
		regexp.MustCompile(`(?i)GINZZU[_ ]?(GT-(?:1050|7105|70[1-4]0|7115|7210|[WX]831|X[78]70|7810|8[01]10|X853|X890))`),
		regexp.MustCompile(`(?i)(RS6[12]D) ULTIMATE`),
		regexp.MustCompile(`(?i)(?:GINZZU[ _])?((?:RS(?:7[14]|81|9[14-7]|7)D)|S50[45]0|S5002|S5021|S5230|S51[24]0|S40[23]0|RS850[12]|RS9602|RS94D|R8 Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]?[a-z0-9]+|(?:Dream_D1|V188S?|GN[0-9]{3,4}[a-z]?)(?:[);/ ]|$)|F103(?: Pro)?(?: Build|\))|P5 mini Build|P7 Max Build|(M7 Power|F106L|F100A|F103S|F103 Pro|M6 mirror|20190620G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GN810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GN([0-9]{3,4}[a-z]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F106L|F100A|V188S|V188|F103S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7 Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190620G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S11|F205|S10) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M6 mirror(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F9 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F103( Pro)?( BUILD|\))`),
		regexp.MustCompile(`(?i)(?:(?:GIO-)?GIONEE[ _-])?Dream_D1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+).*Android`),
		regexp.MustCompile(`(?i)Android.*(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(GU1011C|GU8012C|GU7013C|GU730C|GU-6012B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GU8012C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GU-6012B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GU1011C|GU7013C|GU730C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Gpad_U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO Onyx|GO[0-9]{3,4}`),
		regexp.MustCompile(`(?i)GO([0-9]{3,4})`),
		regexp.MustCompile(`(?i)Goly[ _-]`),
		regexp.MustCompile(`(?i)Goly[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Goly[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:GOME[_ ](?:201[678].+|C7_Note(?:_Plus)?|U9|S[17])|Fenmmy_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018X38A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018X07A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017X05A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017X82A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2016G68A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2016M25A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017M27A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017M95A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018M29A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](C7_Note(?:_Plus)?|U9|S[17])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GOME[_ ])?(Fenmmy_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexus|GoogleTV|Google Fiber|Google Pixel|Glass|CrKey[^a-z0-9]|(?:Pixel|sailfish|taimen|blueline|Chromecast)(?: Build|[)])|Pixel (?:XL|C|[2-6]|[2-4] XL)|Google 2XL|G011A|AOSP on (?:HammerHead|Manta)`),
		regexp.MustCompile(`(?i)(Nexus (?:S|4|5X?|One))`),
		regexp.MustCompile(`(?i)(Nexus (?:6P?))`),
		regexp.MustCompile(`(?i)(Nexus (?:7|9|10))`),
		regexp.MustCompile(`(?i)(GFHD[12]00)`),
		regexp.MustCompile(`(?i)CrKey[^a-z0-9]`),
		regexp.MustCompile(`(?i)(?:Pixel|sailfish)(?: Build|[)])`),
		regexp.MustCompile(`(?i)Pixel 2 XL|taimen`),
		regexp.MustCompile(`(?i)Pixel 4a \(5G\)`),
		regexp.MustCompile(`(?i)pixel ([45])a`),
		regexp.MustCompile(`(?i)pixel ([2-6])`),
		regexp.MustCompile(`(?i)Goophone[ _]|(?:M(G492|L7[JK]2)CH|MN(4A2|8J2)ZP|MGA92ZP|MKU82ZP|MNGW2CH|MNH02CH|MNRM2CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MG492CH|MGA92ZP)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML7[JK]2CH[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MKU82ZP[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MNGW2CH[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MN4A2ZP|MNH02CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MN8J2ZP|MNRM2CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S4 MEGA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Goophone i([69])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gooweel| M5 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gooweel; (S7);`),
		regexp.MustCompile(`(?i)Gplus ([ZXP]10|N809)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRADIENTE-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)GRADIENTE ([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(?:Grape[ _])?GTM-5([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:G0[256]15D|G0245D|G0335D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G0215D|G0245D|G0335D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X1_Light(?:_Lte)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1_Light(?:_Lte)?`),
		regexp.MustCompile(`(?i)Gresso[ _]|(?:REGAL R2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gresso[ _]Regal(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gretel|(?:GT6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GT6000)`),
		regexp.MustCompile(`(?i)Gretel; (A[67])`),
		regexp.MustCompile(`(?i)GR?-TB[0-9]+[a-z]*|GRUNDIG|portalmmm/2\.0 G|AFTEU(?:011|014|FF014)`),
		regexp.MustCompile(`(?i)(GR?-TB[0-9]+[a-z]*)`),
		regexp.MustCompile(`(?i)GRUNDIG ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 G([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Gtel[ _]`),
		regexp.MustCompile(`(?i)Infinity 8s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity 9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H96[ _]`),
		regexp.MustCompile(`(?i)Max RK3318(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Max X2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T2000)(?: Build|[);])`),
		regexp.MustCompile(`(?i)SP-001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HKPRO,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Hewlett-Packard|HP/HP|HP Chromebook|HP EliteBook 820|TouchPad/\d+\.\d+|hp-tablet|HP ?iPAQ|webOS.*P160U|HP (?:Pro )?Slate|HP [78]|HP 10 Plus|Compaq [7|8]|HP; [^;/)]+`),
		regexp.MustCompile(`(?i)HP ([78][^)/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)Compaq ([78][^/;]*) Build`),
		regexp.MustCompile(`(?i)HP Slate ?(.+) Build`),
		regexp.MustCompile(`(?i)HP Slate ?([0-9]+)`),
		regexp.MustCompile(`(?i)TouchPad/(\d+\.\d+)|hp-tablet`),
		regexp.MustCompile(`(?i)HP; ([^;/)]+)`),
		regexp.MustCompile(`(?i)HP ?iPAQ ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)webOS.*(P160U)`),
		regexp.MustCompile(`(?i)HP ProBook (6560b)`),
		regexp.MustCompile(`(?i)Chromebook (11 G5|x360 11 G1 EE|13 G1)`),
		regexp.MustCompile(`(?i)HTC|Sprint (?:APA|ATP)|ADR[a-z0-9]+|NexusHD2|Amaze[ _]4G(?:[);/ ]|$)|(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|\))|(Amaze[ _]4G|One ?[XELSV\+]+)(?:[);/ ]|$)|SPV E6[05]0|(One M8|One Mini 2|X525a|PG86100|PC36100|XV6975|PJ83100|2PYB2|2PS64|2PZC5|0PJA10|0PJA2|HTV33|0PM92|0PCV1|601HT|0PAJ5|HTL2[23]|HTV3[12]|2PQ93|X2-HT|EXODUS 1|ISW13HT|710C|U Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2PZF1|U Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ](?:U-2u|U Play|2PZM3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]U-1w(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:U11 plus|(?:HTC_)?2Q4D[12]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC (?:U12\+|2Q55[13]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U(1[12]) life(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:U11 Eyes|2Q4R100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XV6975(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PG86100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PC36100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ])?(?:HTV33|601HT|2PZC100|2PZC5|U-3[uw])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:801e|802[wdt])`),
		regexp.MustCompile(`(?i)PJ83100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC)?One ?Mini ?2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X2-HT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC 2PXH3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ISW13HT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTL22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTL23|HTV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTCButterflys901s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ])?(?:M9pw|One M9 ?PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ]M9u|0PJA2|0PJA10|HTC One M9|HTC6535LVW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)One[ _](X9|[EM]8) dual sim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire[ _](.+) dual sim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC(?: One m7|6500LVW|PN071)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:One M8|HTC6525LVW|HTC[_ ]M8[xd]|HTC[_ ]0P6B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)0PAJ5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]E9x(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]E9pw(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_S9u(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC6515LVW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X525a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2PQ9(?:3|10)|HTC[_ ]A9u)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2PS64|HTC6545LVW`),
		regexp.MustCompile(`(?i)(710C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)0PM92(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)0PCV1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC ?D160LVW(?:PP)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]D310n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)608t(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_(?:0P9O2|D610x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(0P4E[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?D620h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(?:D626ph|D200LVWPP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?(?:0P9C2|D816[xd]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?D526h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EXODUS 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC 2Q7A100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire 10 compact(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_D10i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[ _]10[ _]evo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire (.+) pro 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire (.+) pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire 10 lifestyle(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[ _-]P715a`),
		regexp.MustCompile(`(?i)HTC[ _-]Flyer Build`),
		regexp.MustCompile(`(?i)HTC[ _-]Flyer[ _\-]([\w]{1,5})`),
		regexp.MustCompile(`(?i)HTC(?:[ _-])?(?:One[ _\-]max|6600LVW|0P3P7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[ _]([^/;]+) [0-9]+(?:\.[0-9]+)+ Build`),
		regexp.MustCompile(`(?i)HTC[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)HTC[ _]([a-z0-9]+[ _\-]?(?:[a-z0-9_+\-])*)`),
		regexp.MustCompile(`(?i)USCCHTC(\d+)`),
		regexp.MustCompile(`(?i)Sprint (ATP.*) Build`),
		regexp.MustCompile(`(?i)Sprint (APA.*) Build`),
		regexp.MustCompile(`(?i)(?:HTC-)?HTC(?:[\-/ ])?([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)HTC;(?: )?([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(Amaze[ _]4G|One ?[XELSV\+]*) Build`),
		regexp.MustCompile(`(?i)(ADR[^;/]+) Build`),
		regexp.MustCompile(`(?i)(ADR[a-z0-9]+)`),
		regexp.MustCompile(`(?i)HTV32(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HAFURY|GT20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MIX|UMAX)`),
		regexp.MustCompile(`(?i)Haier|(?:M53-52401|I6_Infinity|Titan[ _]T[135]|(?:HW-)?W(?:71[67]|757|86[07]|970)|S5 Silk|(?:HM-)?(N505|N700|G(?:152|303|353|552|70[01])?-FL|HM-(?:I559|N50[15]|I560|G553|N70[01])-FL|HR-V101|G(?:303)?-W|I(?:557)?-FL)|(?:PAD[ _](?:D71|G781|d85))|A2_Lite_NFC|A4_Lite|HL810G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HM-)?(G(?:152|353|552|70[01])|G(?:303)|I(?:557))`),
		regexp.MustCompile(`(?i)(Titan[_ ]T[135]|I6_Infinity)`),
		regexp.MustCompile(`(?i)(?:HW-)?W(71[67]|757|86[07]|970)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAD[ -_](D71|G781|d85)`),
		regexp.MustCompile(`(?i)(HL810G|HR-V101|M53-52401)`),
		regexp.MustCompile(`(?i)Haier[ _\-](H[WT]-[^/;]+) Build`),
		regexp.MustCompile(`(?i)Haier[ _\-](H[WT]-[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)Haier[ _\-](sy[0-9]+)`),
		regexp.MustCompile(`(?i)Haier[ _\-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Haipai ?noble S6`),
		regexp.MustCompile(`(?i)Hamlet[ _]`),
		regexp.MustCompile(`(?i)(?:Hamlet[ _])?XZPAD(412W)`),
		regexp.MustCompile(`(?i)(HSG[0-9]{4})|SN97T41W|SN1AT71W\(B\)|SN70T51A|SN70T31?|T7-QC`),
		regexp.MustCompile(`(?i)(HSG[0-9]{4})`),
		regexp.MustCompile(`(?i)SN1AT71W\(B\)`),
		regexp.MustCompile(`(?i)ODROID[-]?(C2|U2|XU[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hasee ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Hasee ([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Helio (S60|S5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HTB801)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Boost (?:Hypa|Ultra)|HMR5012)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost (Hypa|Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMR5012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Hebe|Hera)-BD00`),
		regexp.MustCompile(`(?i)HLV-T([a-z0-9]+)`),
		regexp.MustCompile(`(?i) HIMAX[_ ]`),
		regexp.MustCompile(`(?i)POLYMER( X)?`),
		regexp.MustCompile(`(?i)HIMAX[_ ]PURE[_ ]3S`),
		regexp.MustCompile(`(?i)(ELT070[46]H|ELT0802H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIGHSCREEN|(Easy[- ]Power(?:[- ]Pro)?|Pure[_ ](?:Power|F)|Power Ice(?: Max)?|Easy[_ ]([SFL]|XL)(?:_Pro)?|Razar_Pro|Power Rage(?: Evo)?|Zera-S-Power|Zera[ _][UFS]|Power[ _]?Five[ _]?(?:Pro|Evo|Max|Max(?:Lite|2))|Power(?:Four|Five)|BOOST II(?:se)?|Fest(?:XL)?(?:-Pro)?|Tasty|Boost3|Boost 3(?: Pro)? SE|Expanse|Hercules|Alpha Rage|VergeM|Ice2|Prime [LS]|Spade|Spark 2|Alpha GTR|Wallet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Power Ice(?:[ ](?:Max|Evo))?|Power Rage(?: Evo)?|Zera[ _][UFS]|Alpha GTR|Wallet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFivePro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFiveMaxLite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFiveMax2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Five Evo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Five Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power[_ ]?Five(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spade(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spark 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FestXL-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FestXL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fest-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fest(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFour(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure[_ ]Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure[ _]F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Razar_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Easy[_ ]([SLF]|XL)[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Easy[_ ]([SFL]|XL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HIGHSCREEN )?Easy[- ]Power[- ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HIGHSCREEN )?Easy-Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST IIse(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost 3 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost 3 Pro SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zera-S-Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tasty(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VergeM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WinWin(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Expanse(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hercules(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alpha Rage(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ice2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime ([LS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_|10DTB12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_9DTB39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10DTB12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/]+) Build|Hisense [^);/]+|HISENSE; |HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9\-]*|HNR55[01]T|E270BSA|HWCD100E|HITV300C|M470BS[AE]|EG98|E2281|EG680|I46D1G|HAT4KDTV|HITV10[12]C|HLTE([237]00T|200M|203T|202N|21[023567][TM]|22[67]T|22[13]E|230E|103E|310[TM]|31[16]T|500T|501N|510[TM]|7[23]0T)|KS(?:907|964)|U601S Pro|HNR320T|HiSmart [24]K ATV4`),
		regexp.MustCompile(`(?i)HITV10[12]C`),
		regexp.MustCompile(`(?i)M470BS[AE]`),
		regexp.MustCompile(`(?i)HLTE221E|E MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE200T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE210T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE215T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE213T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE311T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE216[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE316T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE226T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F8 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE217T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE227T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HNR550T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HNR551T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE310[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE510[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE500T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HLTE230E|Infinity H40 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE720T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWCD100E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HLTE300T|HLTE200M|HLTE212T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HITV300C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E260T\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U601S Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity H50 ZOOM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity E30SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9\-]*)`),
		regexp.MustCompile(`(?i)(HAT4KDTV|HiSmart [24]K ATV4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KS964(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense (U3) 2021(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+) Pro(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+) Plus(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^/]+)/`),
		regexp.MustCompile(`(?i)HITACHI, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(Amaze[ _](?:S2_4G|S[56] 4G|S1|S[56](?: Plus)?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HOFFMANN|Neo[_ ]A[1379]00|X-Go|X-Play|X-Pro|X_Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neo[_ ](A[1379]00)`),
		regexp.MustCompile(`(?i)HOFFMANN[ _]X[-_ ](Prime|Twist|Max)`),
		regexp.MustCompile(`(?i)X[-_](Play|Go|Pro|Ultra)`),
		regexp.MustCompile(`(?i)(?:Ideal (?:10S|Tab [79])|ALFA(?:10TB|7LM)|ALFA[_ ](?:10RC|10TM?|10MB|7RS|[78]RC|7M)|HT[ _](?:7RT|8MZ))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ideal (?:10S|Tab 9))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALFA[_ ]?(10RC|10T[BM]?|7RS|[78]RC|7L?M|10MB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ideal Tab 7 Ips( 3G)?`),
		regexp.MustCompile(`(?i)HT[ _](7RT|8MZ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Homtom|(?:HT[0-9]{1,2}(?: ?Pro)?|HT3_Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Homtom[_ ])?HT ?([0-9]{1,2})[ _]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Homtom[_ ])?HT ?([0-9]{1,2}?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Homtom ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:EDA50K?|EDA70|EDA51|CK65|CT60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EDA50K?|EDA70|EDA51)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CK65|CT60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001)|MZ104|HZ0010|HZ1012|YK_P30(?:_EEA)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001|MZ104)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HZ0010|HZ1012)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YK_P30)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Horizont (32LE7011D)`),
		regexp.MustCompile(`(?i)HOSIN[ _-]`),
		regexp.MustCompile(`(?i)HOSIN[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)HOSIN[ _-]([^;/]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:HPP-(GS1|L55B)|VLE5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Venus[_ ](?:X[12]|X1[0245679]|R8 PLUS|R[236-9]|R1[028]|X16-1)|Cosmos[ _](?:V8_lite|V19_Plus|V2[0-3]|U2|V1[359]|V[45689]|V8-2)|Pearl K2|Magic Q8|Magic 5 Plus|Magic (?:[89]|1[13])|Hot[_ ]6|Symbol (?:M1|X|Max|R60)|Cyber 9 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cosmos[ _]V8_lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hot[_ ]6?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus R8 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus[_ ]X16(?:-1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus[_ ](X[12]|X1[0245679]|R[236-9]|R1[028])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cosmos[ _](?:V19_Plus|V2[0-3]|U2|V1[359]|V[45689])|Pearl K2(?: Prime)?|Magic Q8|Magic 5 Plus|Magic (?:[89]|1[13])|Symbol (?:X|Max))(?:-2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HT-705XS|705-G Go|1001-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HT-705XS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(1001-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(705-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huadoo[ _](HG0[46]|HG11|V[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huagan[ _]`),
		regexp.MustCompile(`(?i)Huagan[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)KHATAR H-20 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KHATAR H-20 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HW-)?(?:Huawei|MediaPad T1|Ideos|Honor[ _]?|(?:(?:AGS|AGS2|ALE|ALP|AMN|ANA|ANE|ARE|ARS|ASK|ATH|ATU|AUM|BAC|BAH[234]?|BG2|BGO|B[ZK]K|BKL|BL[ALN]|BND|BTV|CA[GMNZ]|CH[CM]|CHE[12]?|CLT|CMR|COL|COR|CPN|CRO|CRR|CUN|DIG|DLI|DRA|DUA|DUB|DUK|EDI|ELE|EML|EVA|EVR|FDR|FIG|FLA|FRD|FRL|GEM|GRA|HDN|HLK|HMA|Hol|HRY|HWI|H[36]0|INE|JAT|JEF|JDN|JDN2|JKM|JMM|JSN|KII|KIW|KNT|KOB|KSA|LDN|LEO|LIO|LLD|LND|LON|LRA|LUA|LY[AO]|MAR|MHA|MRD|MYA|NCE|NEN|NEM|NEO|NXT|PAR|PCT|PIC|PLE|PLK|POT|PPA|PRA|RIO|RNE|RVL|SCC|SCL|SCM|SEA|SHT|SLA|SNE|SPN|STF|STK|TAG|TIT|TNY|TRT|VCE|VEN|VIE|VKY|VNS|VOG|VRD|VTR|WAS|YAL|G(?:527|620S|621|630|735)|Y(?:221|330|550|6[23]5))-(?:[A-Z]{0,2}[0-9]{1,4}[A-Z]{0,3}?)|H1711|U(?:8230|8500|8661|8665|8667|8800|8818|8860|9200|9508))(?:[);/ ]|$))|hi6210sft|PE-(UL00|TL[12]0|TL00M)|T1-(A21?[Lw]|A2[23]L|701u|823L)|G7-(?:L01|TL00)|HW-01K|JNY-(LX[12]|AL10)|OXF-AN[01]0|TAS-(A[LN]00|L29|TL00)|WLZ-(AL10|AN00)|YOK-AN[10]0|NIC-LX1A|MRX-(AN19|AL[01]9|W[0-3]9)|CDY-(?:[AT]N00|AN[29][05]|NX9[AB]|TN[29]0)|GLK-(?:[AT]L00|LX1U)|JER-(?:[AT]N20|[AT]N10)|ELS-(?:[AT]N[10]0|NX9|N39|N04)|AKA-(AL10|L29)|MON-(W|AL)19|BMH-AN[12]0|AQM-([AT]L[01]0|LX1)|MOA-([AT]L[02]0|LX9N)|NTS-AL00|ART-(?:[AT]L00[xm]|L29N?|L28)|MED-(?:[AT]L00|LX9N?|AL20)|EBG-(?:AN[01]0|TN00)|ANA-(?:[AT]N00|NX9)|BZ[AK]-W00|BZT-(W09|AL[01]0)|HDL-(AL09|W09)|HWV3[123]|HW-02L|TEL-[AT]N(?:00a?|10)|KKG-AN[07]0|MXW-[AT]N00|JKM-AL00[ab]|TAH-(?:N29|AN00)m?|C8817D|T1-821W|d-01[JK]|d-02[HK]|KRJ-(?:W09|AN00)|HWT31|Y320-U10|Y541-U02|VAT-L19|70[14]HW|60[58]HW|NOH-(?:NX9|AN0[01]|AN50|AL[01]0)|TNNH?-AN00|LIO-(?:[TA]L00|[LN]29|AN00)|KOB2-[LW]09|AGS3-(?:[WL]09|AL0[09]|W00[DE])|DNN-LX9|NEY-NX9|LON-AL00|HLK-L41|503HW|AGR-(?:[LW]09|AL09)|PPA-LX[12]|ANG-(?:AN00|LX[12])|NOP-AN00|ALA-AN70|DVC-[AT]N[02]0|302HW|Nexus 6P|DBY-W09|WKG-(?:LX9|[AT]N00)|JSC-(?:AN00|AL50)|OCE-A[NL][015]0|NZA-AL00|BRQ-A[LN]00|BZC-(?:AL|W)00|NEN-L(?:X1|22)|KOZ-AL[04]0|NTH-(?:AN00|NX9)|MRR-W[23]9|WGR-(?:W[10]9|AN19)|TET-AN00|SCMR-(?:W09|AL09)|OXP-AN00|HJC-(?:AN90|LX9)|CDL-AN50|CND-AN00|NTN-(?:LX[13]|AN20|L22)|RNA-[AT]N00|CHL-(?:A[LN]00|AL60)|ELZ-AN[012]0|NAM-(?:LX9|AL00)|JLH-AN00|JAD-(?:AL[056]0|LX9)|AGS3K-[WL]09|AGRK-[WL]09|MT2L03|LSA-AN00|KJR-W09|TET-A[NL][05]0|TYH601M|RTE-AL00|BAL-AL00|BZI-AL00|BZT3-(?:AL00|W09)|BZD-(?:W00|AL00)|MLD-AL[01]0|AGM3-(?:W09|AL09)HN|ABR-AL00|GIA-AN00|LEO-DLXX|BZA-L00|MGI-AN00|CMA-AN00|NEW-AN90|KRJ2-(?:W09|AN00)|BRT-(?:W09|AN09)|ANY-AN00`),
		regexp.MustCompile(`(?i)POT-[TA]L00a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z100-UL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y320-(?:U10|T00|U05)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y330-U05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y541-U02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8818(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G527-U081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G620S-L0[13]|C8817D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G630-U251(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G7-(?:L01|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P7-L10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G730-C00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H1711(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y221-U(?:[12]2|[0345]3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y550-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y560-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huawei g700(?:-(?:U[012]0|T0[01]))?`),
		regexp.MustCompile(`(?i)ART-[AT]L00[xm](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MED-(?:[AT]L00|AL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG-[ACT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NCE-(AL[10]0|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-(?:TL10|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SLA-(?:AL00|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIG-(?:[AT]L[10]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TRT-AL00[A]?|TRT-TL10A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LDN-(?:AL[12]0|TL[02]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-[AT]L10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRD-[TA]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DVC-[AT]N20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DVC-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PPA-AL20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FRL-[AT]N00`),
		regexp.MustCompile(`(?i)MLD-AL[01]0`),
		regexp.MustCompile(`(?i)U8665(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MED-LX9N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G735-L(?:03|12|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHC-U(?:0[13]|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?G621-TL00M?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KII-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLL-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JAD-(?:AL[056]0|LX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8860(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COL-(?:AL[01]0|TL[01]0|L29|L10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HRY-(?:[AT]L00[A]?|LX[12]|LX1MEB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HRY-LX1T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9508(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YAL-(?:L21|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LRA-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HRY-AL00T[a]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YAL-(L41|AL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MAR-LX1H|YAL-AL50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BMH-(?:AN[12]0|TN10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EBG-[AT]N00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EBG-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CDY-(?:AN9[05]|NX9A|TN90)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LRA-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MXW-[AT]N00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?H30-(?:C00|L01M?|L02|U10|T00|T10)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hol-U19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G750-T01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?SCL-(?:AL00|CL00|TL00H?)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CHM-U01(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Honor 4c Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CHE2?-[UT]L00[HM]?|CHE1-CL[12]0|CHE2-L(?:1[12]|23)|Che1-L04|CHE-TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CUN-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CAM-(?:AL00|TL00H|TL00)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-(?:AL10|L51|UL10|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-(?:L22|TL00H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?KIW-(?:AL10|TL00H|[TC]L00|L2[1-4]|UL00)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTH-(?:NX9|AN00)`),
		regexp.MustCompile(`(?i)JLH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTN-(?:LX[13]|L22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNA-[AT]N00`),
		regexp.MustCompile(`(?i)((?:Honor_|HW-)?H60-L(?:01|02|03|04|11|12)(?:_TD)?|HW-H60-J1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-TL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PE-(UL00|TL[12]0|TL00M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?DLI-(?:AL10|L[24]2|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L21HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JMM-L22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?BLN-(?:L2[124]|AL[1-4]0|TL[01]0(?:[);/ ]|$))`),
		regexp.MustCompile(`(?i)(?:Honor[_]?|HW-)?PLK-(?:AL10|CL00|TL00|TL01H?|UL00|L01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUM-(?:AL[20]0|L33[A]?|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUM-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?(?:LND-(?:AL[34]0|L29|TL40)|AUM-L41)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATH-(?:[CAU]L00|TL00H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?DUA-(?:L22|LX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?BND-(?:AL[01]0|TL10|L2[14]|L31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FRD-(?:AL[01]0|L0[249]|L1[49]|DL00)|VAT-L19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRA-(?:AL00X|AL00|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUK-(?:L09|TL30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEN-L22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JAT-L(29|X[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JAT-L41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKK-(?:AL[10]0|L21|L22|LX2|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KSA-(LX[239]|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JSN-L(?:2[123]|42)|JSN-[TA]L00[a]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARE-(?:AL[10]0|L22(?:HN)?|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STF-(?:AL[10]0|L09S?|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOA-LX9N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AKA-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LLD-(?:AL[01]0|L[23]1|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LLD-AL[23]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUA-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLK-AL00a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLK-(?:AL10|L4[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAM-UL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTS-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNY-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RVL-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EDI-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VKY-TL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOG-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-(?:[AT]N00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-NX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COR-(?:AL[01]0|L29|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASK-AL(00x|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMA-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KSA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNNH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHM-[CUT]L00[HM]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AKA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OXP-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NZA-AL00?|KOZ-AL40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHL-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHL-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUA-[TA]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HJC-AN90(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KOZ-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HJC-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JAT-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOA-(?:AL[02]0|TL00))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKL-(?:AL00|AL20|AL30|L09|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCT-[TA]L10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOK-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KNT-(?:AL[12]0|[TU]L10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUK-AL20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JMM-[AT]L[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKL-L04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCT-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OXF-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OXF-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?SCL-L(0[1-4]|21|32)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?LYO-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTN-AN20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TEL-(?:AN(?:00a?|10)|TN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KKG-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DNN-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALA-AN70(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNN-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAH-(?:N29|AN00)m(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TET-A[NL]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALP-(?:[TA]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNE-(?:AL00|L(?:01|03|21|23))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLA-(?:A09|L[02]9|[TA]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMA-(?:[AT]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SNE-(?:AL00|LX[0-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LYA-(?:AL[01]0|L[02]9|L0C|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LYA-AL00P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVR-(?:[TA]L00|L29|N29|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAS-([AT]L00|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAS-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-AN00P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPN-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-(?:[TA]L00|L29|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-N29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-AN00m(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOH-(?:NX9|AN0[01]|AN50|AL[01]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOP-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OCE-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OCE-(?:A[NL]50|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NXT-(?:AL10|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MHA-(?:L[02]9|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLL-L23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LON-(?:AL00(?:-PD)?|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRR-(?:L09|UL[20]0|CL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BND-L34(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CAZ-(?:AL[01]0|TL[12]0)|CAN-L[01][1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:608HW|PRA-LX[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-L11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PIC-(?:[AT]L00|LX9)|HWV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704HW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-(?:L01|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-(?:AL00|L2[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNE-L[02]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWI-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAR-(?:[AT]L00|LX[19]|LX1M|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANE-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INE-(?:AL00|LX[12]r|LX[12]|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCE-(L22|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAR-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEA-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLK-(?:[AT]L00|LX1U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPN-TL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WLZ-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WLZ-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JNY-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JEF-(?:[AT]N00|[AT]N20|NX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JER-(?:[AT]N10|[AT]N20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CDY-(?:[AT]N00|NX9B|[AT]N20)|CDL-AN50|CND-AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JNY-LX2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANG-LX[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEN-L(?:X[13]|22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANG-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BRQ-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BRQ-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAM-(?:AL00|LX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RTE-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WAS-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WKG-[AT]N00`),
		regexp.MustCompile(`(?i)WKG-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIG-L(?:A1|X[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-(?:LX(?:[13]|1T|2J|1AF)|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-LX1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PPA-LX[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VTR-(?:L[02]9|AL00|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WAS-(?:L(?:X1|X1A|X2|X2J|X3|03T)|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VKY-(?:AL00|L09|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EML-(?:[TA]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ANE-(?:LX[123]|LX2J|TL00)|HWV32)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CLT-(?:AL0[01]|TL0[01]|L(?:04|[02]9))l?|HW-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ELE-L(?:04|09|29)|ELE-[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MAR-(?:LX(?:1[BM]|2B|[13]Am?|2J?|3BM)|TL00)|NIC-LX1A|HWV33)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VOG-(?:L(?:04|09|29)|TL00|AL10)|HW-02L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-LX4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JNY-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L29N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ELS-(?:[AT]N00|NX9|N04)|NEY-NX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELS-(?:AN10|N39)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRA-(?:L09|[TU]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRA-UL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ALE-L(?:02|21|23)|ALE-[TUC]L00|503HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PRA-L(?:A1|X[12])|hi6210sft)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVA-(?:AL[10]0|L[012]9|[TCD]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-L(?:[23]1|[26]2|53|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-L52(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SLA-L(?:02|03|22|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L(?:03|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIE-(?:AL10|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-TL[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATH-UL0[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U(8230|8661|8667)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARS-([AT]L00|L22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRO-(?:L[02]2|U00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAG-L[02]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUA-(U22|L2[12]|U03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-(?:L(?:02|03|2[23])|U29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-L(?:01|03|21|23|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMN-LX[1239](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-LX5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRO-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAG-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-(?:LX2|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-L13(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUN-(?:L(?:0[123]|2[123]|33)|U29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SCC-U21|SCL-U31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-L11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-(L41|AL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-L(?:11|21|22|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRD-L(?:X1[NF]?|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-L(?:31|42)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIT-(?:AL00|L01|U02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRD-LX2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y625-U03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y635-L0[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y635-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAM-L(?:03|21|23|32)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TRT-LX[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LDN-L(?:01|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HUAWEI[ _]?)?DUB-(?:LX[13]|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LDN-(?:AL00|L21)|TRT-TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LDN-(?:LX2|TL10)|TRT-(?:L21A|L53))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-(?:LX2|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-AL00a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-AL20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PPA-LX3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L28(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLA-(LX[123]|AL20|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JKM-(?:[TA]L00[ab]?|LX[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-(L2[12]|LX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FRL-L2[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)302HW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NMO-L31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexus 6P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWT31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HDN-[LW]09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH3-(?:AL00|[LW]09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH3-W59(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH3-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DBY-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCMR-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCMR-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-(L09|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HDL-(?:W09|AL09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JDN-(?:AL00|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KJR-W09|KRJ-W09`),
		regexp.MustCompile(`(?i)AGS3-AL09HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W09HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MON-(W|AL)19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZA-W00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZA-L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZC-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZC-W00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2-801L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-AL[01]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-W[0-3]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRR-W[23]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-AN19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WGR-W[10]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WGR-AN19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMR-(?:AL[01]9|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMR-W19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCM-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEM-70[1-3]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JDN2-(:?[WL]09|AL[50]0)|BAH2-(?:AL[01]0|L09|W[01]9))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHT-(?:AL|W)09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VRD-(?:(AL|W)09|AL10|W10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCM-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BTV-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BAH-W09|CPN-(?:L|W)09|CPN-AL00|701HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH-(?:L09|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AGS2-AL00|JDN2-(?:AL00|W09))HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS2-(?:[LW]09|W09HN|W19|L03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KOB2-[LW]09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGR-[LW]09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS-(?:L0[39]|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KOB-(?:L|W)09|BZK-[LW]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BG2-(?:U0[13]|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BGO-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BGO-DL09|PLE-70[13]L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JDN-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FDR-(A01[LW]|A03L)|605HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1-(?:A21[LW]|A2[23]L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1-701u(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T1-82(?:3L|1W)|MediaPad T1 8.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS2-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W00[DE](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZT-(W09|AL[01]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:d-01J|d-02[HK])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(d-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO-BX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO-DLXX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MediaPad[^/;]*) Build`),
		regexp.MustCompile(`(?i)Ideos([^;/]*) Build`),
		regexp.MustCompile(`(?i)(?:HUAWEI )?MT([0-9]+)`),
		regexp.MustCompile(`(?i)Huawei[ _\-]?([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:HW-)?Huawei(?:/1\.0/0?(?:Huawei))?[_\- /]?([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)Huawei; ([a-z0-9 \-]+)`),
		regexp.MustCompile(`(?i)Hurricane[ _]|(?:Flame_Plus|Glaze|Cobra|Ridge Plus|Rush Plus|DZIRE|Android 7.+ Beam|Vulcan|SAGE|Iris Plus 2021|VortexPlus|Excite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hurricane[ _]IGNITE`),
		regexp.MustCompile(`(?i)Hurricane[ _]Bolt`),
		regexp.MustCompile(`(?i)Hurricane[ _]VORTEX`),
		regexp.MustCompile(`(?i)Hurricane[ _]GIGA`),
		regexp.MustCompile(`(?i)VULKANO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hyundai|Ultra (?:Active|Air|Charm|Dream|Energy|Latitude|Link|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)|Ultra_Vision_Plus|E(?:475|504|603)|G(?:24027|2552[34])K|W25042L|HP554O|Seoul S8|L503F Plus|HT0701L16|HT0704K08|HT1004L16|HT1004LI16|Koral_8W2|Eternity[_ ]G25|HYMI 5S Plus|7GB1|7WD1|(?:Android 9.+ E553)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultra[_ ]Vision[_ ]Plus`),
		regexp.MustCompile(`(?i)Ultra (Active|Air|Charm|Dream|Energy Lite|Energy Plus|Energy|Latitude|Link|Live II|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)`),
		regexp.MustCompile(`(?i)Eternity[_ ]G25`),
		regexp.MustCompile(`(?i)E(475|504|553|603)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Hyundai_)?(Eternity_(?:G57L?|G[56]0))`),
		regexp.MustCompile(`(?i)7GB1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)7WD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hyundai ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Hyundai[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:Pryme 01|ST01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GO5_55|BLESS_GO55|BLESSPLUS|KF4Go|KF5bless)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KF4Go|KF5bless)`),
		regexp.MustCompile(`(?i)(?:IKU[_ ](?:A40|T[123]|K3|i[34]|T[_ ]MAX)|Powerful_K55i|Curvy C50L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Powerful_K55i|Curvy C50L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ](A40|K3|i[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ](T[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ]T[_ ]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]\w`),
		regexp.MustCompile(`(?i)IMO[ _]Q([23]) Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q([4]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]FEEL A2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S80(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S89(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S88(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S99(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S98(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S87(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S67(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S78(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Discovery II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _](Y5|Z[67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO TAB X9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KZCAR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INQ[/ ]`),
		regexp.MustCompile(`(?i)INQ/([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)INQ ([^;/]+) Build`),
		regexp.MustCompile(`(?i)HK9-4010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM (?:picasso|vivaldi|newton)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM picasso(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM vivaldi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM newton(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IRA_DUO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IT-(?:1101S?|1101-QUAD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IT-(1101S?)`),
		regexp.MustCompile(`(?i)IUNI[ _]`),
		regexp.MustCompile(`(?i)IUNI[ _](U3|i1|N1)`),
		regexp.MustCompile(`(?i)IconBIT|NT-(3506M|1501C|0704S|0909T|1009T|10[01]1T|1017T|3601P/3602P|3603P|3702S|3805C|3905T|3701S|0701S|0805C|0902S|370[23]M)|XDS[789]4K|Omnicast UHD|Movie Smart 4K|Movie IPTV Quad|TOUCAN (?:NANO|Stick) 4K|NetTAB_Space_3G`),
		regexp.MustCompile(`(?i)NT-10[01]1T`),
		regexp.MustCompile(`(?i)(?:iconBIT )?(Movie Smart 4K|Movie IPTV Quad|Movie Ultra HD 4K|XDS[789]4K|Omnicast UHD|Stick|XDS1000)`),
		regexp.MustCompile(`(?i)(?:Impression[ _\-]?([^/;]+)|A502|I10\-LE|ImPad[ _]?(.*)|ImSmart[ _]?(.*))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A502)`),
		regexp.MustCompile(`(?i)ImSmart[ _]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)ImPad[ _]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(I10\-LE)`),
		regexp.MustCompile(`(?i)Impression[ _\-]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)IF(900[1237]|902[19]|903[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Inch (?:Regulus (?:7.85|II)|Avior 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Regulus 7.85)`),
		regexp.MustCompile(`(?i)(Regulus II|Avior 3)`),
		regexp.MustCompile(`(?i)(?:Inco[ _](Aurora II|Colors|Sphere|Plain[_ ]2S?|Plain2 S|Flex(?: 2S)?|S4|Bloom(?: 2)?)|(Horizon_S|Horizon \+|MATTER))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Inco[ _])?(Plain[_ ]2S?|Colors|Horizon_S|Horizon \+|Aurora II|Flex(?: 2S)?|S4|Bloom(?: 2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Inco Sphere( 3)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X260`),
		regexp.MustCompile(`(?i)Infinix[ _-]X502`),
		regexp.MustCompile(`(?i)Infinix[ _-]X570`),
		regexp.MustCompile(`(?i)Infinix[ _-]X350`),
		regexp.MustCompile(`(?i)Infinix[ _-]X351`),
		regexp.MustCompile(`(?i)Infinix[ _-]X352`),
		regexp.MustCompile(`(?i)Infinix[ _-]X403`),
		regexp.MustCompile(`(?i)Infinix[ _-]X503`),
		regexp.MustCompile(`(?i)Infinix[ _-]X511`),
		regexp.MustCompile(`(?i)Infinix[ _-]X400`),
		regexp.MustCompile(`(?i)Infinix[ _-]X401`),
		regexp.MustCompile(`(?i)Infinix[ _-]X450`),
		regexp.MustCompile(`(?i)Infinix[ _-]X451`),
		regexp.MustCompile(`(?i)Infinix[ _-]X454`),
		regexp.MustCompile(`(?i)Infinix[ _-]X500`),
		regexp.MustCompile(`(?i)Infinix[ _-]X501`),
		regexp.MustCompile(`(?i)Infinix[ _-]X506`),
		regexp.MustCompile(`(?i)Infinix[ _-]X509`),
		regexp.MustCompile(`(?i)Infinix[ _-]X552`),
		regexp.MustCompile(`(?i)Infinix[ _-]X555`),
		regexp.MustCompile(`(?i)Infinix[ _-]X(?:574|602)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X603`),
		regexp.MustCompile(`(?i)Infinix[ _-]X603B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X620`),
		regexp.MustCompile(`(?i)Infinix[ _-]X687B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X687`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6811`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6810`),
		regexp.MustCompile(`(?i)Infinix[ _-]X507`),
		regexp.MustCompile(`(?i)Infinix[ _-]X510`),
		regexp.MustCompile(`(?i)Infinix[ _-]X55[34]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X521`),
		regexp.MustCompile(`(?i)Infinix[ _-]X522`),
		regexp.MustCompile(`(?i)Infinix[ _-]X557`),
		regexp.MustCompile(`(?i)Infinix[ _-]X556`),
		regexp.MustCompile(`(?i)Infinix[ _-]X559c`),
		regexp.MustCompile(`(?i)Infinix[ _-]X559`),
		regexp.MustCompile(`(?i)Infinix[ _-]X606[BC]?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X608`),
		regexp.MustCompile(`(?i)Infinix[ _-]X624`),
		regexp.MustCompile(`(?i)Infinix[ _-]X625`),
		regexp.MustCompile(`(?i)Infinix[ _-]X650`),
		regexp.MustCompile(`(?i)Infinix[ _-]X655F`),
		regexp.MustCompile(`(?i)Infinix[ _-]X655`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680[BCEF]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680`),
		regexp.MustCompile(`(?i)Infinix[ _-]X688`),
		regexp.MustCompile(`(?i)Infinix[ _-]X682[BC]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X689C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X689F`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X659|PR652|X658)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X573B?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6812`),
		regexp.MustCompile(`(?i)Infinix[ _-]X662`),
		regexp.MustCompile(`(?i)Infinix[ _-]X612`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5010`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5515F`),
		regexp.MustCompile(`(?i)Infinix[ _-]X609`),
		regexp.MustCompile(`(?i)Infinix[ _-]X627`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5514D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X653`),
		regexp.MustCompile(`(?i)Infinix[ _-]X657`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6511`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X626`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652`),
		regexp.MustCompile(`(?i)Infinix[ _-]X660`),
		regexp.MustCompile(`(?i)Infinix[ _-]X551`),
		regexp.MustCompile(`(?i)Infinix[ _-]X600`),
		regexp.MustCompile(`(?i)Infinix[ _-]X601`),
		regexp.MustCompile(`(?i)Infinix[ _-]X572`),
		regexp.MustCompile(`(?i)Infinix[ _-]X571`),
		regexp.MustCompile(`(?i)Infinix[ _-]X604`),
		regexp.MustCompile(`(?i)Infinix[ _-]X605`),
		regexp.MustCompile(`(?i)Infinix[ _-]X610`),
		regexp.MustCompile(`(?i)Infinix[ _-]X690`),
		regexp.MustCompile(`(?i)Infinix[ _-]X656`),
		regexp.MustCompile(`(?i)Infinix[ _-]X692`),
		regexp.MustCompile(`(?i)Infinix[ _-]X683`),
		regexp.MustCompile(`(?i)Infinix[ _-]X695`),
		regexp.MustCompile(`(?i)Infinix[ _-]X693`),
		regexp.MustCompile(`(?i)Infinix[ _-]X663`),
		regexp.MustCompile(`(?i)Infinix[ _-]X697`),
		regexp.MustCompile(`(?i)Infinix HOT ([a-z]?[1-6])( (?:Lite|Plus|Pro))?`),
		regexp.MustCompile(`(?i)Infinix[ _-](X[78]00)`),
		regexp.MustCompile(`(?i)Infinix[ _-](X\d+)`),
		regexp.MustCompile(`(?i)Infinix[ _-]([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)(TVB-906X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)intki[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)InnJoo|(?:Halo Plus|Halo X|Halo[ _]4(?:[ _]mini[ _]LTE)?|Halo2 3G|Fire2 Plus LTE|Superb_PLus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]X3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo[ _]X[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo[ _]4[ _]mini[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo2 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]Pro2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Innjoo ONE 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Innjoo[ _]2[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]([2-4])`),
		regexp.MustCompile(`(?i)Innos_?(D6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INNO([a-z0-9]+)`),
		regexp.MustCompile(`(?i)inoiPad mini 2\+32 Wi-Fi\+3G`),
		regexp.MustCompile(`(?i)inoiPad 2\+32 Wi-Fi\+3G`),
		regexp.MustCompile(`(?i)inoiPad mini 1\+16 Wi-Fi`),
		regexp.MustCompile(`(?i)INOI (2|5) Lite (2019|2021)`),
		regexp.MustCompile(`(?i)INOI[_ ]([13])[_ ]LITE`),
		regexp.MustCompile(`(?i)INOI ([257]) (?:\d\+\d+ )?(2019|202[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INOI[_ ]([^);/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)NS-(P11A8100|P10A8100|P10A6100|P16AT08|P16AT10|P16AT785HD|P08A7100|P10A7100)(?:[);/ ]|$)|AFTEAMR311|AFTJMST12`),
		regexp.MustCompile(`(?i)NS-(P10A6100|P16AT10)`),
		regexp.MustCompile(`(?i)NS-(P10A8100|P10A7100)`),
		regexp.MustCompile(`(?i)Intex|(Aqua|Cloud[ _][XY][0-9]{1}|Cloud (?:Fame|Glory) 4G)|CLOUD TREAD|IM0318ND(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _]LIONS[ _]T1[ _]LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _]LIONS[ _]([NT]1|[23]|E3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA (A4) PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _](A4|S[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA CRYSTAL\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA FulVU e5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA JEWEL 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Intex[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)CLOUD TREAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cloud (?:Fame|Glory) 4G)`),
		regexp.MustCompile(`(?i)(Aqua|Cloud)[ _\.]([^/;\)]+)(?:[ _]Build|/|\))`),
		regexp.MustCompile(`(?i)Intex[ _]([a-z0-9_+\-]+)`),
		regexp.MustCompile(`(?i)(Fighter|Eager|Royal R[1-8])(?: Build|[;)])`),
		regexp.MustCompile(`(?i)INVIN[ _-]|KM5PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INVIN[ _-](X[24]|KM[678])`),
		regexp.MustCompile(`(?i)IRBIS|TZ(1(?:0[04]|42|5[01]|84|65|7[01345-89]|8[356]|9[12578])|200|49|55|72|22|7(?:0[127]|1[1-46789]|2[021567]|3[025-8]|4[257]|5[23457]|6[12]|72|7[137]|8[1]|9[147])|8(?:[34]1|32|5[3-8]|6[2-5]|7[12478]|8[1-5]|9[0127])|96[0-9])|TZ85|TZ13|TZ(?:one|art|HIT|81L)|(SP(?:0[56]|2[01]|4[1-36]|40[12]|45[345]|49[34]|50|51[0147]|531|54[12]|55[0124]|571))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TZ(?:[0-9]+)|TZ(?:one|art|HIT|81L))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SP[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Vox[_ ](?:[45]S|Alpha|POP|STEEL Plus|Energy|FORTIS|VERO)|IS2_?Plus|IS2S|Next_P_PRO|IRS002-16|X1 mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vox[_ ]([45])S`),
		regexp.MustCompile(`(?i)VOX[_ ]FORTIS`),
		regexp.MustCompile(`(?i)VOX[_ ]VERO`),
		regexp.MustCompile(`(?i)IS2_?Plus`),
		regexp.MustCompile(`(?i)TPC-[A-Z0-9]+|TPCY-TX[TE][^);/ ]+`),
		regexp.MustCompile(`(?i)TPC-([A-Z0-9]+)`),
		regexp.MustCompile(`(?i)(TPCY-TX[TE][^);/ ]+)`),
		regexp.MustCompile(`(?i)JFone[ _](JS501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JKL[_ ](A28)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JVC[;,]|AV-10NT310`),
		regexp.MustCompile(`(?i)JVC[;,](32D1290)`),
		regexp.MustCompile(`(?i)JVC, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(AV-10NT310)`),
		regexp.MustCompile(`(?i)Remix (?:Pro|Mini)`),
		regexp.MustCompile(`(?i)(?:JK(?:960|[71]03) 3G|JK702|JK101|JK[17]00 v2.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JK(960|[71]03) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JK(702|[17]00 v2.0|101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jesy_(J7)|J9S_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jesy_(J7)`),
		regexp.MustCompile(`(?i)JK-?(760)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JIAYU[ _-]|(?:JY-G4[\\_]G5|(?:JY-[a-z0-9]+)|JY_G4C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JIAYU G4_G5|JY-G4[\\_]G5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JIAYU[ _-](G4[S]?|G2F|G3[S]?|S[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JY[-_]([a-z0-9]+|G4C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga[-_ ]|(?:(?:Fresh|Optim)4G|Pass(?:Plus|3G)|PicassoNote|Hotz[_ ]M1|WinPRO|Touch4G|Start(?:3G|LTE)?|IGO[ _]L[41]|Basco (?:L3|L[45]00|XS1|S2)|M500-1|Hit4G|A450|Neon|JoyPRO|Fresh|GoalPlus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Optim4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hotz[_ ]M1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hit4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PassPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pass3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GoalPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Win|Joy)PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Touch4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Start3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StartLTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Start(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PicassoNote(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Iron(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Basco neo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M500-1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Jinga[ _])?Basco[ _](L[13]|L[45]00|XS1|S2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Trezor S1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JINGA_IGO_L2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JINGA[_ ])?IGO[_ ]([ML]1|L4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JINGA[_ ])?(Neon|A450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS1542QWN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS1542QWN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Revolution TnT3|Xtreme_(?:[37]|3x)|Xtreme (?:XT84|XT309 Plus|1))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Revolution (TnT3)`),
		regexp.MustCompile(`(?i)Xtreme (XT84)`),
		regexp.MustCompile(`(?i)Xtreme (XT309) Plus`),
		regexp.MustCompile(`(?i)Xtreme[ _]([137]|3x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy (?:HH|JD)`),
		regexp.MustCompile(`(?i)Joy[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)EZpad ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER(s)?|COSMO[_ ](L707|L808)|BLASTER|FREEDOM[ _](C100|M303|X1)|Freedom`),
		regexp.MustCompile(`(?i)COSMO[_ ](L707|L808)`),
		regexp.MustCompile(`(?i)FREEDOM[ _](C100|M303|X1)`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER2s`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER2`),
		regexp.MustCompile(`(?i)K-?Touch[ _][a-z0-9]+|Pace 2 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K-?Touch[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)K-?Touch[ _]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KATV-01) PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kddi-([a-z0-9]+)|INFOBAR A01`),
		regexp.MustCompile(`(?i)kddi-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)INFOBAR (A01)`),
		regexp.MustCompile(`(?i)KINGZONE_|K1[_ ]turbo`),
		regexp.MustCompile(`(?i)KINGZONE_(N5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K1[_ ]turbo`),
		regexp.MustCompile(`(?i)KOPO[ _-]`),
		regexp.MustCompile(`(?i)KOPO[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)KOPO[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)KREZ[_ ]`),
		regexp.MustCompile(`(?i)KREZ[_ ](SL502)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KREZ[_ ](TM100[12]S8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KRIP_|K(?:4[bm]|5[bdm]|6b|55h|57|65)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K(4[bm]|5[bdm]|6b|55h|57|65)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KRIP_K4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NET1100|NET_(?:TITAN|VOLT)`),
		regexp.MustCompile(`(?i)NET_(TITAN|VOLT)`),
		regexp.MustCompile(`(?i)(KM-[a-z0-9]+|EV-[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KAAN[ _](N[12]|A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KaiCloud[ ]?(7[48]4|942)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KALLEY|(?:ELEMENT (?:4 Plus|MAX|Q)|ELEMENT_PRO_2|K-BOOK(?:8MG|73G)|SILVER_MAX|Silver Max (?:Lite|Pro)|Black G|ATV R[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Silver Max (Lite|Pro)`),
		regexp.MustCompile(`(?i)K-BOOK(8MG|73G)`),
		regexp.MustCompile(`(?i)ATV (R[12])`),
		regexp.MustCompile(`(?i)KALLEY,(55D1240)`),
		regexp.MustCompile(`(?i)KJ-(OB0[23]|YUBI|SMART4K|GOCHI|ALFARK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Browser-)?Karbonn|K9 Kavach 4G|K9[_ ](?:Viraat|Smart)[_ ]Plus|K9 Music 4G|K9 Smart|K9 VIRAAT 4G|Aura (?:Sleek Plus|Power 4G Plus|Note Play|Note 2)|Titanium[ _](?:3D-Plex|Octane Plus|Vista 4G|Jumbo|S360|S1[059]|S35|S20[13]|S22|S[15]|S200 HD|Frames S7|MOGHUL|S9)|MACHFIVE|MACHONE|K-lite F3|Sparkle V|Alfa A114 Quad|Quattro[ _]L(?:45|5[025])[ _](?:HD|IPS|VR)|A9 Indian|S2052GB`),
		regexp.MustCompile(`(?i)K9[_ ]Smart[_ ]Plus`),
		regexp.MustCompile(`(?i)K9[_ ]Viraat[_ ]Plus`),
		regexp.MustCompile(`(?i)karbonnK9 Viraat 4G|K9 VIRAAT 4G`),
		regexp.MustCompile(`(?i)Titanium[ _]S2[ _]Plus`),
		regexp.MustCompile(`(?i)Titanium[_ ]S(99|360|1[059]|109|35|200 HD|20[13]|22|[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Titanium[ _]MOGHUL`),
		regexp.MustCompile(`(?i)Titanium[ _]3D-Plex`),
		regexp.MustCompile(`(?i)Quattro[ _]L(5[05])[ _]HD`),
		regexp.MustCompile(`(?i)Quattro[ _]L(45)[ _]IPS`),
		regexp.MustCompile(`(?i)Quattro[ _]L(52)[ _]VR`),
		regexp.MustCompile(`(?i)Karbonn ([a-z0-9]+) WAP-Browser`),
		regexp.MustCompile(`(?i)WAP Browser-Karbonn ([a-z0-9]+)/`),
		regexp.MustCompile(`(?i)Karbonn_([^;/)]+)`),
		regexp.MustCompile(`(?i)Karbonn ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Karbonn ([^;/]+)/`),
		regexp.MustCompile(`(?i)Kata[ _-]`),
		regexp.MustCompile(`(?i)Kata[ _-](C3|L1|M3s|M4|V[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata[ _-]i5-\w`),
		regexp.MustCompile(`(?i)Kata-(T5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata-Tmini4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata Box 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kazam|(?:Trooper_X[0-9][0-9]|Tornado 348|TROOPER 4\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TROOPER 4\.0`),
		regexp.MustCompile(`(?i)Trooper_X([0-9])([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kazam[; _]([^;/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Alumini_?3_?Plus|Alumini ?[23]|KEMPLER_(?:P1|TV|[X9]|8_PLUS)`),
		regexp.MustCompile(`(?i)Alumini ?2`),
		regexp.MustCompile(`(?i)Alumini_?3_?Plus`),
		regexp.MustCompile(`(?i)KENEKSI|(?:Hemera|Teta Dual|Helios)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hemera|Teta Dual|Helios)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]liberty`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]FLASH`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]SUN`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]ZETA`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]SIGMA`),
		regexp.MustCompile(`(?i)KENEKSI[ _-](Moon|Libra_Dual|Glass|Amber|Chance|Amulet|Choice|Crystal|Dream|Delta[_ ]Dual|Norma 2|Norma|Sky|Fire 2|Fire|Flame|Flora|Rock|Solo|Soul|Step|Smart|Star|Storm|Wind)`),
		regexp.MustCompile(`(?i)Three[_ ]Proofings[_ ]W([5-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kiano|Elegance_[45]_[015](?:_PRO)?|Elegance 6|CORE 10.1 DUAL 3G|Intelect ?(7|8|10)|Slim ?Tab ?\d+(?:[_ ]3GR?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slim ?Tab ?(\d+)(?:[_ ]3GR?)?`),
		regexp.MustCompile(`(?i)CORE 10.1 DUAL 3G`),
		regexp.MustCompile(`(?i)Elegance_(5)_([51])_Pro`),
		regexp.MustCompile(`(?i)Elegance_([45])_([015])`),
		regexp.MustCompile(`(?i)(Kiano)?(Intelect|Elegance) ?(7|8|10)?`),
		regexp.MustCompile(`(?i)Kiano[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kingsun[ _-]`),
		regexp.MustCompile(`(?i)Kingsun[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kingsun[ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:[AS]5|X4)_CRISTAL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X4|[AS]5)_CRISTAL`),
		regexp.MustCompile(`(?i)KIVI [24]K|(?:24H600G[RU]|24FR50WU|24HK30B|32HR55GU|32H700GU|4[39]UP50GU|40UR50G[RU]|40U600G[RU]|55U600G[RU]|65UP50GU|55U[PC]50G[RU]|50U600G[RU]|50UX10S|55UR50G[RU]|40FK30G|40FR5[02]BR|43U(?:800BR|600KD|K35G)|50FK30G|50UK35G|32HR50GR|55UC30G|32HK30G|40FK30G|32HR50GU|43UK30G|32FR50(?:WR|BU)|32FK3[02]G|32H600KD)(?:_-Ver0[0-9])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(24H600G[RU]|24FR50WU|24HK30B|32HR55GU|32H700GU|4[39]UP50GU|40UR50G[RU]|40U600G[RU]|55U600G[RU]|65UP50GU|55U[PC]50G[RU]|50UX10S|50U600G[RU]|55UR50G[RU]|40FK30G|40FR5[02]BR|43U(?:K35G|600KD|800BR)|50FK30G|50UK35G|32HR50GR|32FR50(?:WR|BU)|32FK3[02]G|32H600KD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(55UC30G|40FK30G|43UK30G|32HR50G[RU]|32HK30G|32FK32G)_-Ver0([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KIVI ([24]K Android TV)`),
		regexp.MustCompile(`(?i)KLIPAD_|(?:KL-V905|KL4889|KL9878A?(?:_EEA)?|7589AN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KLIPAD_)?(V355B?|KL600|KL-V905)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KL4889|7589AN|KL9878A?)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kocaso|M(?:6200|729|7[357][026][hw]?|76[01236][bw]?|83[016]|8[567]0|1050s|106[012368]w?|1070|X736(?:-kit)?|X780)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M6200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M729(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(7[357][026])[hw]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(76[01236])[bw]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX780(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(83[016])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(8[567]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1050S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(106[012368])W?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX736(?:-kit)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kocaso[ _\-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kocaso[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)KODAK|(?:IM5|KD50|Ektra|Smartway[_ ](?:[FT]1|L2)|D55L|D60LX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KD50|D55L|D60LX)`),
		regexp.MustCompile(`(?i)Ektra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KODAK[_ ])?SMARTWAY[_ ]L1 PRO`),
		regexp.MustCompile(`(?i)(?:KODAK[_ ])?SMARTWAY[_ ]([FLMTX]1|[LM]2|T3)`),
		regexp.MustCompile(`(?i)Tablet (7|10)`),
		regexp.MustCompile(`(?i)Kogan ?(SmarterTV(?: 2K)?|TV|TVAP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kogan[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kogan[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Komu[_ -]`),
		regexp.MustCompile(`(?i)Komu[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Komu[_ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)KONKA[_ ]([a-z0-9]+)|(?: RE1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)W(9[67]0)`),
		regexp.MustCompile(`(?i)( RE1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KONKA[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:BIGCOOL|COOLFIVE|COOL-K|Just5|Link5|EASY(?:5|62)|CITY55|Cool55|SKY_55_EEA|android 11.+ SWEET5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BIGCOOL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COOL-K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cool55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COOLFIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Just5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Link5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY(5|62)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CITY55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY_55_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Koobee[ _\-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Koobee[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(K1 Trio)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kooper-mobile-W502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KORIDY[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(KL1071Z|KL1084)`),
		regexp.MustCompile(`(?i)Kruger[ _&]Matz|KrugerMatz[ _]|K&M|FLOW ?5PLUS|FLOW 4 PLUS|Flow 9|FLOW_5|FLOW7|FLOW6(?:S|Lite)|DRIVE9|DRIVE 8|DRIVE[_ ]6S?|MOVE8mini|MOVE9|MOVE_|LIVE_6plus|LIVE 5 PLUS|Live [89]|LIVE4_KM043[89]|LIVE 7S|Flow 7S|KM(?:106[679]|1065G|0701_1|0702|0805_1|1070)`),
		regexp.MustCompile(`(?i)MOVE[_ ]([78]|6S?)`),
		regexp.MustCompile(`(?i)DRIVE[ _]?([45689][S]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW ?([54]) ?PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW6Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW[ _]?([4-7][S]?|9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE4_(KM043[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KrugerMatz_LIVE4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)_LIVE5_(KM0450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE 5 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE_6plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE ([79])S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Live ([89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOVE9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(106[679])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(1070)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(1065G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(701)_1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(805)_1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(702)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K&M,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)KULIAO (K10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ambition|Beyond)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai[ _\-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Kurio[_ ]?(10S|7S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kurio[_ ]?Phone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kyocera|KWC-|QC-[0-9]{4}|(?:QC6035|NP501KC|302KC|503KC|602KC|705KC|901KC|C51[27]0|C5155|C5215|C67[35]0|C6522N?|C6530N|C6740N?|C6743|E6[89]10|KYL2[13]|KYV3[1-9]|KYT3[123]|KYF3[123579]|KYF40|KYX31|KYG01|KYY2[1-4]|S2151|KC-S701|S[468]-KC|KYV40U?|KYV4[1-8]|KYV4[47]|KC-S301AE|X3-KC|E6560[CT]|E6782[L]?|E6790(?:TM)?|SZJ-JS201|KCP01K|[47]04KC|A001KC|WX10K|URBANO PROGRESSO|E7110|E6921)(?:[-_]u2?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S4-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S6-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S8-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5155(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)503KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)404KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)302KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP501KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WX10K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYX31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5170(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5215(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C6522N?`),
		regexp.MustCompile(`(?i)C6740(N)?`),
		regexp.MustCompile(`(?i)E6560[CT]`),
		regexp.MustCompile(`(?i)(?:KYOCERA-)?E68[12]0`),
		regexp.MustCompile(`(?i)(?:KYOCERA-)?(?:E69[12]0|E6921)`),
		regexp.MustCompile(`(?i)KYL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYL23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY24(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF32(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF35(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF3[179](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV48(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV35(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV46(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV32?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV47(?:-u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV43(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)705KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV37(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV42(?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV44(?:_u2?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT32(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV40U?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV34(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV(?:45|38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Kyocera-)?E6790(?:TM)?`),
		regexp.MustCompile(`(?i)X3-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6782(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6782L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KCP01K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KC-S301AE|SZJ-JS201)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A001KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URBANO PROGRESSO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kyocera-KZ-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Kyocera(?:[\-/])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KWC|QC)-?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KA-E410W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ureki_U1|Victor V1|DART KZ07|REX RX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sapphire 8|Sapphire[76]|Mega plus[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mega plus([23])`),
		regexp.MustCompile(`(?i)Sapphire ?([678])`),
		regexp.MustCompile(`(?i)(Glam|New York|Dubai)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LCT_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:LEM14|LEM12Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LEM12)Pro`),
		regexp.MustCompile(`(?i)(LEM14)`),
		regexp.MustCompile(`(?i)LG|Web0S; Linux/SmartTV|portalmmm/2\.0 (?:KE|KG|KP|L3)|(?:VX[0-9]+|L-0[12]D|L-07C|P713|(LM-[A-Z][0-9]{3}[A-Z]{0,3}(?:\(FGN?\)|\(G\)|\.FN|\.F(?:GN?)?)?)|LM-(X625N1|G820QM[0127])|G Watch)(?:[);/ ]|$)|NetCast|RS98[78]|RS500|VS(?:50[01]|835|876|880|98[05-8]|99[056]|(410|415|425|500|880)PP)|VS820|VS870 4G|Nexsus 5|LML(41[34]D|211B|713D|212V)L|VK810 4G|VK815|X5-LG|L-05[DE]|L-03K|L-01[LJK]|L-52A|L-[45]1A|901LG|A001LG|80[12]LG|402LG|LGT32|L-02K|L-01F|LM-V40|DM-01K|DM-02H|LMX130IM|VS810PP|VS425|VM670`),
		regexp.MustCompile(`(?i)DM-(01K|02H)`),
		regexp.MustCompile(`(?i)LG-D32[05]`),
		regexp.MustCompile(`(?i)LG-?(D315|L31L)`),
		regexp.MustCompile(`(?i)LG-D4(?:[01]5|10)`),
		regexp.MustCompile(`(?i)VS980|L-01F|LG-F320L|LG-D800`),
		regexp.MustCompile(`(?i)LG-D6(?:18|20)`),
		regexp.MustCompile(`(?i)LG-(?:D85[012568]|AS990)|VS985|LGLS990|LGL24(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-D693n?|LG-D690n`),
		regexp.MustCompile(`(?i)LG-(?:D72[23568]|F470K)`),
		regexp.MustCompile(`(?i)LG-?H81[012589]|LG-?[LU]S991|LGV32|LG-F500[LSK]|VS986`),
		regexp.MustCompile(`(?i)LG-H525n?`),
		regexp.MustCompile(`(?i)LG-(?:H540|H542|H630)`),
		regexp.MustCompile(`(?i)LG-H8(?:20|3[01]|5[08]|6[08])|VS987|(?:LG-)?RS988|LG-F700[SKL]|LG-?[LU]S992`),
		regexp.MustCompile(`(?i)LG-H84[05]`),
		regexp.MustCompile(`(?i)VS988|LG-H87(?:[01](?:DS|[SI]|AR)?|[23])|LG-?US997|LGM-G600[SKL]|LG-[AL]S993`),
		regexp.MustCompile(`(?i)LGL23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-D68[06]`),
		regexp.MustCompile(`(?i)LM-G820([NV]|QM[0127]|UMB)?`),
		regexp.MustCompile(`(?i)901LG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-H410(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS501|LM-X120`),
		regexp.MustCompile(`(?i)LG-(?:F520K|H788)`),
		regexp.MustCompile(`(?i)(?:LG-)?H50[02]`),
		regexp.MustCompile(`(?i)LG-(?:X15[05]|X165g)`),
		regexp.MustCompile(`(?i)LG-D33[15]`),
		regexp.MustCompile(`(?i)LG-D29[05]`),
		regexp.MustCompile(`(?i)(?:LG-)?H343`),
		regexp.MustCompile(`(?i)(?:LG-)?H650`),
		regexp.MustCompile(`(?i)(?:LG-)?M154`),
		regexp.MustCompile(`(?i)LGM-K120[LSK]`),
		regexp.MustCompile(`(?i)LG-K120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGM-X320[SKL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?P500H`),
		regexp.MustCompile(`(?i)LG-F240[KLS]`),
		regexp.MustCompile(`(?i)LG-E4(?:70f|40|65f)`),
		regexp.MustCompile(`(?i)LG-E4[17]5f`),
		regexp.MustCompile(`(?i)(L-05[DE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-L160L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:P713|LG-P71[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-01D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-02D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:F800[SKL]?|H990|H910(?:PR)?|US996|V34|LS997)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q710(?:\(FGN\)|[\.]?FGN)`),
		regexp.MustCompile(`(?i)LG-(?:K520|F720[SL])`),
		regexp.MustCompile(`(?i)LG-(?:K53[05])`),
		regexp.MustCompile(`(?i)LM-Q[67]10\.FG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(Q72[57][KLS]|Q610.FGN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q815[KSL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGM-X800[KL]|LG-H970`),
		regexp.MustCompile(`(?i)LM-Q925[LKS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(?:Q730N|Q620)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q520N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGV33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-03K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-01L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS835(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:MS550|K550)`),
		regexp.MustCompile(`(?i)L-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:MS63[14]|H63[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:LS777|L84VL|M430|L83BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?([TM]P450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q710|LML713DL|LG-Q710[AP]L`),
		regexp.MustCompile(`(?i)(?:LM-Q720|LGL722DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-G710(N|VM)?|LG-G710`),
		regexp.MustCompile(`(?i)LM-X410\.FG?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGL455DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LML41[34]DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?L355DL`),
		regexp.MustCompile(`(?i)LG-(?:K580|F690[LS])`),
		regexp.MustCompile(`(?i)LG-(?:SP320|M32[27])`),
		regexp.MustCompile(`(?i)LG-K200|LGLS676`),
		regexp.MustCompile(`(?i)LG-(?:K500|F650)`),
		regexp.MustCompile(`(?i)LG-(?:M710|H700|US701)`),
		regexp.MustCompile(`(?i)LM-X(?:41[05]K|410S)`),
		regexp.MustCompile(`(?i)LM-X(415[LS]|410L)`),
		regexp.MustCompile(`(?i)LM-X410(?:\.FN|\(FG\))`),
		regexp.MustCompile(`(?i)LM-X(?:320|410[UP]M)|LGL322DL`),
		regexp.MustCompile(`(?i)(?:LG-X230|VS425)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-K130(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:M160|L57BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-X430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:802LG|LM-X520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LM-X510[KLS]|X5-LG)`),
		regexp.MustCompile(`(?i)LGMS210|LG-M210`),
		regexp.MustCompile(`(?i)LM-X210[G]?`),
		regexp.MustCompile(`(?i)LM-X220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-X220N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-V40(?:5|9N|5EBW)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(?:V500N?|V450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:RS987|H90[01]|H96[0218]|VS990|F600[LK]|K428)`),
		regexp.MustCompile(`(?i)LG-(?:X240|M200)`),
		regexp.MustCompile(`(?i)(?:LG-)?RS500`),
		regexp.MustCompile(`(?i)(?:LG-)?VS500`),
		regexp.MustCompile(`(?i)LM-X212\(G\)|LGUS215`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:VS995|F800K|US999|LS997|H91[058]|H990(?:DS|[NT])?)`),
		regexp.MustCompile(`(?i)(?:VS996|LG-(?:H933|H93[012]|H930RE|H932PR|[LU]S998|AS998)|LGM-V300[KLS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L-01K|LGV35|LG-H930DS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L-52A|LM-G900(?:N|TM)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-V700N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A001LG|LM-V600V?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?VS410PP`),
		regexp.MustCompile(`(?i)LM-V350[N]?`),
		regexp.MustCompile(`(?i)(?:LG-)?VS415PP`),
		regexp.MustCompile(`(?i)(?:LG-)?VS425PP`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K100|LS450)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K|MS)33[02]|LG-X210`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K|MS)350`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K420(?:N)?|F670[KLS]?|K430(?:DS|DSF|DSY)?|K410|MS428)`),
		regexp.MustCompile(`(?i)(?:LG-)?M250N?`),
		regexp.MustCompile(`(?i)(?:LG-)?M255`),
		regexp.MustCompile(`(?i)(?:LG-?)?[MT]P260`),
		regexp.MustCompile(`(?i)LM-K200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K420(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LM-K500|LGL555DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K526(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q510N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) LM-Q310N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q630N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?M700(?:N|A|DSK|AN)?|LGM-X600[SLK]|LG-M703|LG-US700`),
		regexp.MustCompile(`(?i)LGV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-M257(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K220|LS755|F750K)`),
		regexp.MustCompile(`(?i)(?:LG-?)?M320`),
		regexp.MustCompile(`(?i)(?:LG-)?K371`),
		regexp.MustCompile(`(?i)(?:LG-)?M150`),
		regexp.MustCompile(`(?i)(?:LG-)?F100[SL]`),
		regexp.MustCompile(`(?i)(?:LG-)?VM670`),
		regexp.MustCompile(`(?i)(?:LG-)?P880`),
		regexp.MustCompile(`(?i)(?:LG-)?(H340n?|H32[04])`),
		regexp.MustCompile(`(?i)(?:LG-)?H342|LGMS345`),
		regexp.MustCompile(`(?i)(?:LG-)?H4(?:40|2[02])`),
		regexp.MustCompile(`(?i)(?:LG)?C660`),
		regexp.MustCompile(`(?i)LML21(?:1B|2V)L`),
		regexp.MustCompile(`(?i)VS880(PP)?|LG-D690`),
		regexp.MustCompile(`(?i)LM-F100N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-T60[05]`),
		regexp.MustCompile(`(?i)LG-?(?:UK|V)410`),
		regexp.MustCompile(`(?i)LG-?(?:LK430|V400)`),
		regexp.MustCompile(`(?i)LG-V49[56]`),
		regexp.MustCompile(`(?i)LG-V4[89]0`),
		regexp.MustCompile(`(?i)\(LGE?, WEBOS[123], (?:wired|wireless)`),
		regexp.MustCompile(`(?i)\(LGE?, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)webOS.TV`),
		regexp.MustCompile(`(?i)LGE_DLNA_SDK|NetCast`),
		regexp.MustCompile(`(?i)G Watch( R)?`),
		regexp.MustCompile(`(?i)(LM-[A-Z]{1}[0-9]{3}([A-Z]{1,3})?)`),
		regexp.MustCompile(`(?i)LGE(?: |-LG| LG-AX|-)([a-z0-9]+)`),
		regexp.MustCompile(`(?i)FBDV/LG-([a-z0-9]+);FBSV`),
		regexp.MustCompile(`(?i)LGE;([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)LG[ _\-](V90.*|Optimus[ _\-]Pad.*) Build`),
		regexp.MustCompile(`(?i)LGM-([^/;]*)( Build|[;)])`),
		regexp.MustCompile(`(?i)LG(?:/|-LG| |-)?([^/;]*) Build`),
		regexp.MustCompile(`(?i)LG(?:/|-LG| |-)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)LG; ([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 ((?:KE|KG|KP|L3)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(VX[0-9]+)`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV`),
		regexp.MustCompile(`(?i)(APPLLP2?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[ _-](?:NOTE 10[SM]|C3100|S10[ _]Lite)`),
		regexp.MustCompile(`(?i)LT[- ]NOTE (10[SM])`),
		regexp.MustCompile(`(?i)LT[ _]S10[ _]Lite`),
		regexp.MustCompile(`(?i)(LYF[ _])?LS-[456][0-9]{3}|LYF/[^/]+/`),
		regexp.MustCompile(`(?i)(LYF[ _])?LS-4006`),
		regexp.MustCompile(`(?i)LS-450[58]`),
		regexp.MustCompile(`(?i)LYF/([^/]+)/`),
		regexp.MustCompile(`(?i)Land[ ]?Rover[d]?[ _-](?:X1[0-9]|Explore|T878|L15\+|V18|V[168]|X)(?:[);/ ]|$)|Polar3|Vphone[- ]X3`),
		regexp.MustCompile(`(?i)Land[ ]?Rover[d]?[ _-](X1[0-9]|Explore|T878|L15\+|V18|V[168]|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vphone[- ]X3`),
		regexp.MustCompile(`(?i)XM[123]00|S6 Build`),
		regexp.MustCompile(`(?i)XM([123])00([^/;]*) Build`),
		regexp.MustCompile(`(?i)LANIX-([a-z0-9]+)|Ilium[ _]|IliumPad|X120C|Alpha 950`),
		regexp.MustCompile(`(?i)ILIUM[ _]?PAD[ _]?([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Ilium[ _](Alpha [15]s|Alpha [379]|Alpha 1T|L(?:200|6[12]0|9[0125]0|1[0124]00|1050|1120)|LT5[012]0|M[579]s|M7T|M[13579]|S(?:106|520|6[27]0)|X(?:1[12]0|2[0126]0|5[12]0|500B|710))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILIUM[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)LANIX-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Lark|Cumulus|Evolution|FreeMe|Ultimate (?:X4|7i))[ _-]|Build/Lark|Bjorn[_ ]SP-500|FreeBird 5WiFi`),
		regexp.MustCompile(`(?i)Cumulus[ _](5\.5|[56])[ _]HD`),
		regexp.MustCompile(`(?i)FreeMe X2 ([79]) (?:ver|v)?\.([23])`),
		regexp.MustCompile(`(?i)FreeMe[ _]X2[ _]([7-9])`),
		regexp.MustCompile(`(?i)FreeMe X4[ _]7[_ ]?HD`),
		regexp.MustCompile(`(?i)FreeMe X4[ _]9`),
		regexp.MustCompile(`(?i)(?:Lark[ _-])?Evolution[ _](X2 7 3G-GPS|X4[_ ]10\.1|10|X4[_ ]7[ _]IPS)`),
		regexp.MustCompile(`(?i)Ul(?:ti|it)mate (X4 10\.1 3G IPS|X4 8s 3G|7i)`),
		regexp.MustCompile(`(?i)Phablet 6\.0`),
		regexp.MustCompile(`(?i)Bjorn[_ ]SP-500`),
		regexp.MustCompile(`(?i)Cirrus[ _](4\.5|[45])`),
		regexp.MustCompile(`(?i)Lark[ _](Stratus[_ ]5)`),
		regexp.MustCompile(`(?i)Lava[ _]|LAVA(?:A1|X10)|(?:DISCOVER136|KKT QUADRA)|iris[ _]?([^/;)]+)(?: Build|[;)])|A(?:67|76) Build|X1 Selfie Build|X41 Plus Build|(?:Flair (?:[ZS]1|P8)|PixelV1|Pixel V2\+?|Z60s|Z61_2GB|A97 IPS|A97 2GB PLUS|L[EH]9920(?:[_ ]P)?|L[NEH]9910|LH9810|Ivory(?:S1|S4G)?|A76Plus|Grand2c|AH9910| A3_mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Flair ([ZS]1|P8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AH9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LXX501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z61P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A97 IPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF6810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A97 2GB PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A76Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) A3_mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixel V2\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixel ?V([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1 Selfie(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X41 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LAVA[_ ]?)?A([13]|67|76)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z61_2GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMX06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMG01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z60s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9920[ _]P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF9810(?:_2GB)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9830(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9950(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KKT40[ ]?Power[P\+]`),
		regexp.MustCompile(`(?i)Ivory(S1|S4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lava[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)LAVA[ _]([^/;)]+)/MIDP`),
		regexp.MustCompile(`(?i)Le ?Pan|TC970 ([^;/]+)Build`),
		regexp.MustCompile(`(?i)TC970 ([^;/]+)Build`),
		regexp.MustCompile(`(?i)Le ?Pan ?(II|S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le ?Pan ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Letv|LeEco|Le ?X[0-9][^;/]+|Le Max|Le [12]|Le2[_ ]x527|X900 Build|(?:X[89]00\+|X52[67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X800\+`),
		regexp.MustCompile(`(?i)X900\+`),
		regexp.MustCompile(`(?i)X50[10]`),
		regexp.MustCompile(`(?i)(X910)`),
		regexp.MustCompile(`(?i)LEX72[07](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Le ?X526|Le2[_ ]x527|Le 2|X52[67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEX82[09]`),
		regexp.MustCompile(`(?i)Le ?X([^;/]+) Build`),
		regexp.MustCompile(`(?i)Le ?X([^) ;/]+)`),
		regexp.MustCompile(`(?i)Le ?([12][^;/]+) Build`),
		regexp.MustCompile(`(?i)Le Max([^;/]*) Build`),
		regexp.MustCompile(`(?i)Le Max([^ ;/]*)`),
		regexp.MustCompile(`(?i)LeEco ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(Vyper|N-5[07]|N-45|LP DAISY|LP_(?:VEYRON|PRADO|Pro1|B-50))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LP_)?(Vyper|N-5[07]|N-45|Pro1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MY)?LEAGOO[ _-]?|(?:XRover(?: C)?|Shark 5000|M5 EDGE|KIICAA (POWER|MIX)|Leapad[ _](?:X|7s)|Alfa [125]|Elite [15]|Venture 1|Z10-E|M9 Pro|Power 5|Power[ _]2(?: Pro)?|Android 9.+ M1[23]|Lead 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[- _])?M([89])[_-]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEAGOO[- _](Z[156]|Z5c|M[58]|T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[_ ])?Lead ?([357])`),
		regexp.MustCompile(`(?i)Elite ([15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Shark 5000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power 2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power[ _]([25])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venture 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfa ([125])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XRover( C)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[- _])?(Z10-E|M6|M1[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:My)?Leagoo[- _](E4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Leapad[ _])(7s|10|X)`),
		regexp.MustCompile(`(?i)(?:Ledstar[_ ])?(?:Trendy 5.0|Novus_Premium_6.0)`),
		regexp.MustCompile(`(?i)Trendy 5.0`),
		regexp.MustCompile(`(?i)Ledstar_Novus_Premium_6.0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(32H520T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Leke[ _]Pad-([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lemhoov[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Lenco ([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lenco ([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:LNV-)?Lenovo|IdeaTab|IdeaPad|Thinkpad|Yoga Tablet|Tab2A[0-9]-[0-9]{2}[a-z]?|ZUK[ -_]|(?:TB2-X30L|TB3-710I|YT3-X50[ML]|K50a40|TB-(?:X103F|8504F|X304F|X704V|X704A)|A5500-H|A2107A-H|A3500-HV|A2109A|S6000|Z2 Plus|Vibe[ _](?:P1|S6i Plus|S[23567]i|C|[ZX]2|K5(?: Plus)?|V7)|P2A42|L38011|L18011|[5-8]01LV|[67]02LV|Z2131|K350t|K31-t3|TAB 2 A8-50LC|S90-A|A101LV|P70-A|VR-1541F|d-42A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ?G780`),
		regexp.MustCompile(`(?i)Lenovo ?A3500-FL`),
		regexp.MustCompile(`(?i)(?:Lenovo ?)?A3500-(?:H|HV|F)`),
		regexp.MustCompile(`(?i)(?:Lenovo[ _])?A5500-[HF]`),
		regexp.MustCompile(`(?i)Lenovo ?A7600`),
		regexp.MustCompile(`(?i)TB2-X30[FL]`),
		regexp.MustCompile(`(?i)TB-X6C6[XF]`),
		regexp.MustCompile(`(?i)YT3-X50[FLM]`),
		regexp.MustCompile(`(?i)YT-J706[XF]`),
		regexp.MustCompile(`(?i)TB3-710[IF]`),
		regexp.MustCompile(`(?i)501LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB 2 A10-70L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TB3-850[FM]|601LV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X304[FL]`),
		regexp.MustCompile(`(?i)(?:TB-X704[FVL]|70[12]LV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)801LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X103F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X704A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X605F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X705[FL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J606[LF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J606[FN]`),
		regexp.MustCompile(`(?i)TB-J607F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J616[XF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J706[LF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7104[IF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-8304F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7504X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X606[FXV]A?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X605[FL]C`),
		regexp.MustCompile(`(?i)TB-7305[IXF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7306[XF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ?B8000(-[FH])?`),
		regexp.MustCompile(`(?i)YOGA Tablet 2 Pro-1380[FL]`),
		regexp.MustCompile(`(?i)YOGA Tablet 2-1050[FL]`),
		regexp.MustCompile(`(?i)YOGA Tablet 2-830(?:[FL]|LC)`),
		regexp.MustCompile(`(?i)Lenovo ?B6000(-[FH])?`),
		regexp.MustCompile(`(?i)YT3-X90(L|F|X)`),
		regexp.MustCompile(`(?i)YT3-850[FL]`),
		regexp.MustCompile(`(?i)YT-X705[FL]`),
		regexp.MustCompile(`(?i)S6000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ([ASB][0-9]{4})[A-Z]?\-[EHF]`),
		regexp.MustCompile(`(?i)ThinkPadTablet_(A[0-9]{3})_`),
		regexp.MustCompile(`(?i)ThinkPad ?Tablet([^;/]*) Build`),
		regexp.MustCompile(`(?i)Lenovo ?A3300-(?:GV|H)`),
		regexp.MustCompile(`(?i)TAB 2 A7-30[HGD]C`),
		regexp.MustCompile(`(?i)TB-X505[FX]`),
		regexp.MustCompile(`(?i)TB-X104[FXL]`),
		regexp.MustCompile(`(?i)Tab2A([0-9]-[0-9]{2}[a-z]?)`),
		regexp.MustCompile(`(?i)IdeaTab[ \-_]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Yoga Tablet([^;/]+) Build`),
		regexp.MustCompile(`(?i)TB-8505[FX]S`),
		regexp.MustCompile(`(?i)TB-8505[FX]|TB-8506F`),
		regexp.MustCompile(`(?i)TB-8705[FX]`),
		regexp.MustCompile(`(?i)Lenovo (TB[0-9]?\-[a-z0-9\-]+) Build`),
		regexp.MustCompile(`(?i)Lenovo K30-W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L19111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L10041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78121(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z213[12]`),
		regexp.MustCompile(`(?i)ZUK[ -_]([^/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)K10a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:k50a40|K50-t5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K(1[30]) Note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7010(?:a48)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K350t(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L38041|K5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L39051(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A7020a4[08]|L38012|K52e78)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L19041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K31-t3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A6010Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A6020a46|Vibe K5 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Lenovo-)?(?:A6020(?:a40|l36)|Vibe K5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIBE C|A2020a40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIBE X2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X3(?:a40|c[57]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo X3 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE V7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE S6i Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE[ _]S([23567])i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L79031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L70081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)k33a48(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38043(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38082(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P2A42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)k53a48(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K33a42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P1ma40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vibe P1 Turbo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:P1(?:a42|c72)|Vibe P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2016a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1010a20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z90a40|Z90-7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S1a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S1La40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z6 Pro|L78051)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L58041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L58091(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB2-6(?:70M|50[YM])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB1-750M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB1-770M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S90-A|P70-A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IdeaPad ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)d-42A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo X2(?:-[ER]U)?`),
		regexp.MustCompile(`(?i)LENOVO/81W8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LENOVO/81MV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LENOVO/81SS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo TAB ?([^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Lenovo ([^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:LNV-|Lenovo-)?Lenovo[ \-_]?([a-z0-9_+\-]+)`),
		regexp.MustCompile(`(?i)(LESPH501[14]|LESPH5003B|SUPERNOVA (?:Qi16|Qi32|i3G96[X]?|iS3G)|PULSAR QI3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPERNOVA (Qi16|Qi32|i3G96[X]?|iS3G)`),
		regexp.MustCompile(`(?i)PULSAR (QI3G)`),
		regexp.MustCompile(`(?i)lephone[ _]|lephoneP1`),
		regexp.MustCompile(`(?i)lephone[ _](K7|K10)`),
		regexp.MustCompile(`(?i)lephone(?:[ _])?(W(1[0125]|[279])|T2|P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANOVA A5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lexand[ _]|(?:SC7 PRO HD|S5A[1-4]|S4A[1-5]|S6A1|A811|A802|LPH7_Smarty)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A(811|802)`),
		regexp.MustCompile(`(?i)Lexand[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(MFC[0-9]{3}[a-z]{2,})`),
		regexp.MustCompile(`(?i)MFC17[05]FR`),
		regexp.MustCompile(`(?i)(MFC[0-9]{3}[a-z]{2,})`),
		regexp.MustCompile(`(?i)((?:24|32)TP1HDTA1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIFEMAXX, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Lingwin[ _\-]`),
		regexp.MustCompile(`(?i)Lingwin[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Lingwin[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)LI(22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LOGIC[_ ](X50|X[135]|X4M|L5D|X5[AFT]|X60G|L50T?|L57|L6[01]|X60_PLUS)(:?[_ ]LITE2?)?|L55[ABS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ]X60_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](X5|X4M)[_ ]LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](X5)[_ ]LITE2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](X50|X[13]|X4M|L5D|X5[AFT]|X60G|L6[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(L50T?|L57|L55[ABS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fieldbook F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGICOM[_ ]|(TAB950|TAB1062|E731|E812|E912|E1031|POWER BOT|La[ _]Tab[ _](?:7[24]|10[57]|11[345])|(?:B|C|M|ID|VR)[ _]?BOT[ _]?(?:TAB[ _])?([0-9]+\+?)(?:PLUS)?|KT712A_4\.4|L-?IXIR[0-9]*|L-ITE|L-EGANTONE(?:-R)?|Le Fizz|L-?EMENT.+|Le[ _]?(?:Up|Connect|Hop|Hello|Lift|Hola|Moov[2]?|Must(?: 2)?|Starter L|Fit FR|Spark|Prime|Smooth(?: FR)?)|LeFit)(?:[);/ ]|$|_)`),
		regexp.MustCompile(`(?i)La[ _]Tab[ _](7[24]|10[57]|11[345]|105_P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT712A_4.4|L-IXIR TAB 701 3G`),
		regexp.MustCompile(`(?i)L-?IXIR[ _]TAB[ _]([^);/]+)( Build|[);])`),
		regexp.MustCompile(`(?i)L-ITE[ _](400M|452|50[46] HD|506R HD|552 HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-ITE[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)L-?EMENT[ _]?(350|451|40[103]|55[013]|50[15]|500L?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-?EMENT[ _](?:TAB)[ )]?([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)L-?EMENT[ _]?(74[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB950|TAB1062|E731|E812|E912|E1031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:B|C|M|ID|VR))[ _]?BOT[ _]?((?:TAB[ _])?([0-9]+\+?)(?:PLUS)?)`),
		regexp.MustCompile(`(?i)Le[ _]Connect`),
		regexp.MustCompile(`(?i)Le Hola FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Hola(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LeMoov2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LeMoov(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Fit FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]?Fit`),
		regexp.MustCompile(`(?i)Le Hop(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Hello(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Smooth FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Smooth(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Must 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Must(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Starter L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Spark(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Up(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lumigon[ _](T3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEO(SR620|SC600)|INNOSR545|Lumus[_ ]Ion|AEONSR570)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO(SR620|SC600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INNO(SR545)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lumus[_ ]Ion(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AEON(SR570)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LUNA[ _](?:[VG]55|G[56]0)|TG-L800S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUNA[ _]([VG]55|G[56]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TG-L800S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUXOR, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)M-HORSE|(?:Pure (?:3|2A?)|Pure ?1|Power1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure ?([13]|2A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EROS 4G|MTECH (?:ACE9|TURBO L\d+|TEZ 4G|JAZBAA))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TURBO L(\d+)`),
		regexp.MustCompile(`(?i)M\.T\.T\.`),
		regexp.MustCompile(`(?i)M\.T\.T\. ?Tablet([^;/]+)? Build`),
		regexp.MustCompile(`(?i)M\.T\.T\. ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:M4 SS[0-9]{4}(?:-R)?|M4_B[23]|M4_R2|R2_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M4_B([23])`),
		regexp.MustCompile(`(?i)M4_R(2)`),
		regexp.MustCompile(`(?i)MAXVI[ _](?:MS401)(?:[);/ ]|$)|\w*_?MAXVI?_\w+|MS502[_ ]Orion|MS531`),
		regexp.MustCompile(`(?i)MAXVI[ _](MS401)`),
		regexp.MustCompile(`(?i)MS502[_ ]Orion`),
		regexp.MustCompile(`(?i)\w*MAXVI_(P11|K10|X[358]00)_`),
		regexp.MustCompile(`(?i)(T1270G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MBOX3?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Prime_S|M300 4G|MDC M5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime_S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M300) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MDC M5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MDTV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MEEG[ _-]`),
		regexp.MustCompile(`(?i)MEEG[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)MEEG[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)MEU ([a-z0-9]+) Build`),
		regexp.MustCompile(`(?i)(Caryota [1245789]|Jazz J[13] 2018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Caryota [1245789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jazz (J[13]) 2018`),
		regexp.MustCompile(`(?i)(M35|M20|G7106|G7108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M[0-9]{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G[0-9]{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLLED[ _]`),
		regexp.MustCompile(`(?i)MLLED[ _]([^;/]+)Build`),
		regexp.MustCompile(`(?i)MLLED[ _]([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)IQ(?:0705|L550|1010w?|1012N?|1019N|1025|1060M|1380|1401|1436|1452a|1453|1470|1502a|1511|1552|1553|1568|1570|1805N|1806|1808|1810B_M|1832|1850|1890|5017|L626|9610|181011N|A27X_E|E[12]00|EL41|G550|GW516|L30|L5[01]|M801|M1001|N700|P50|R300|S300|S1001|W503|W511T|W553N?|W60[38]|W626|M960|D700|9013_4N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ0705(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1010W?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1012N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ9013_4N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1019N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1805N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ181011N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1380(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1436(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1452a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1453(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1470(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1502a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1552(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1553(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1568(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1806(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1808(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1810B_M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1832(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1850(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1890(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ5017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ9610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQM960(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQG550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQGW516(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQE100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQE200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQA27X_E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQEL41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQN700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQP50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQS300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQS1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1060M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQR300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW608(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQW603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW626(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW511T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW553N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQL626?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQD700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MMI, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Primo ?(?:9[13]|81|76)|Enjoy 7 Plus`),
		regexp.MustCompile(`(?i)Primo ?(9[13]|76|81)`),
		regexp.MustCompile(`(?i)MTC[ _](968|97[82]|970|982[OT]?|1078)|(?:MTC[_ ])?SMART[ _]?(?:Race[2]?|Sprint|Run|Turbo|Surf[2]?)[ _]4G|MTC975|Smart Bit|Smart_(?:LINE|Light)|(?:MTC[ _])?SMART[ _](?:Run|Start_[23])|Redbox Mini 5\(MTS\)|MTS TV|DV8304-C`),
		regexp.MustCompile(`(?i)MTC[ _]?(97[258]|970[H]?|982[OT]?|968)`),
		regexp.MustCompile(`(?i)MTC[ _](1078)`),
		regexp.MustCompile(`(?i)SMART[ _]Race[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Race2[ _]4G`),
		regexp.MustCompile(`(?i)(?:MTC_)?SMART[ _]Sprint[ _]4G`),
		regexp.MustCompile(`(?i)(?:MTC_)?SMART[ _]Start_([23])`),
		regexp.MustCompile(`(?i)SMART[ _]?Run(?:[ _]4G)?`),
		regexp.MustCompile(`(?i)SMART[ _]Surf2[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Surf[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Turbo[ _]4G`),
		regexp.MustCompile(`(?i)Redbox Mini 5\(MTS\)`),
		regexp.MustCompile(`(?i)MTN-(L860|S620)`),
		regexp.MustCompile(`(?i)MTN-([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)(MC-X7MINI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mafe_M820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N5NOVA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Magnus[ _](?:bravoZ[23]0|Infinity_?(?:G8|G11))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)bravo(Z[23]0)`),
		regexp.MustCompile(`(?i)(?:Magnus[ _])?Infinity_?(G8|G11)`),
		regexp.MustCompile(`(?i)MAJESTIC[ _-]|CRONO ?[0-9]+|(?:TAB (?:647|411) 3G|TAB-714|TAB 711 4G|URANO 77LTE|PLUTO__?26N?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URANO 77LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLUTO__?(26N?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB (647|411) 3G`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]Tab([^;/]+)Build`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]Tab([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]([^;/]+)Build`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]([^);/]+)(?:(?:[);/ ]|$)|$)`),
		regexp.MustCompile(`(?i)CRONO ?([0-9]+) Build`),
		regexp.MustCompile(`(?i)CRONO ?([0-9]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)(?:Build/)?Malata[ _]?([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZUG 3|ZUG 5S(?: Q)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MSP950(1[245]|2[01])|MSP96017|MSP94501|MSP95009|MSP96002|MSP450[79]|(MID713|MID(?:06[SN]|08[S]?|12|13|14|15|701|702|703|704|705(?:DC)?|706[AS]?|707|708|709|711|712|714|717|781|801|802|901|1001|1002|1003|1004(?: 3G)?|1005|1009|1010|7802|9701|9702))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID713|MID(?:06[SN]|08[S]?|12|13|14|15|701|702|703|704|705(?:DC)?|706[AS]?|707|708|709|711|712|714|717|781|801|802|901|1001|1002|1003|1004(?: 3G)?|1005|1009|1010|7802|9701|9702))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MSP450[79]|MSP95009)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MFSTAB(?:_74G)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mara(?: Phones)?[ _](Z1?|X1|S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Massgo[ _]`),
		regexp.MustCompile(`(?i)Massgo[ _]VI2S`),
		regexp.MustCompile(`(?i)Massgo[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Masstel|(?:Juno[ _]Q[567]|Tab10Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Masstel[_ ])?(Juno[_ ]Q[3567]|X9|N4[56]0|N5[2458]0|N536|M05|M1[29]0|M1[125]|M250|M25)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel[_ ]\((M18)\)`),
		regexp.MustCompile(`(?i)Masstel_Tab7LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel_Tab10_?4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel Tab (840|700i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MASTERTECH,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:7116-A5|818 3G|MATRIX GRAVITY|Matrix7116)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(7116-A5|818 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Matrix7116(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS(?:45[036]|505|514)|MS457(?:PLUS)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS457)PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MS(45[0367]|505|514)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maximus[ _]|(Noir X|G10 max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Maximus[ _])?(Noir X|D1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G10 max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maximus_(T2)`),
		regexp.MustCompile(`(?i)Maxtron[ _-](V[327]|S[89]|T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxtron[ _-](V[327]|S[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxtron[ _-](T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Astro[_ ](?:Phablet_9|55?N[_ ]LTE|5 PRO|5s|[45]P|X4|5_GO_LTE|X55s?|4\.5|4|X5)|Astro6|Virtue Z5|Nitro[_ ](?:4S?|55R|5[XRP]|[45] GO|4s LTE)|Gravity_55?_GO|Nitro_Phablet_9s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[_ ](55?)N[_ ]LTE`),
		regexp.MustCompile(`(?i)Astro[_ ]X55[_ ]LTE`),
		regexp.MustCompile(`(?i)Astro[_ ](X55s?|5s|4|X[45]|[45]P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[_ ](4\.5)`),
		regexp.MustCompile(`(?i)Astro (X55s?|5s)`),
		regexp.MustCompile(`(?i)Astro[_ ]X4`),
		regexp.MustCompile(`(?i)Nitro ([45]) GO`),
		regexp.MustCompile(`(?i)Nitro[ _]4s`),
		regexp.MustCompile(`(?i)Nitro[_ ](4|55R|5[XRP])`),
		regexp.MustCompile(`(?i)Gravity_(55?)_GO`),
		regexp.MustCompile(`(?i)(?:Alpha[_ ]X|Maze Alpha)(?:[);/ ]|$)|(?:Android [78].+ Blade|Comet)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Alpha[_ ]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maze Alpha(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Blade|Comet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SSB-(?:500|508)|SSB408D|SSB504R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SSB-?(500|508|408D|504R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M785|800P3[12]C|101P51C|X1010|M7[67]QF6|M17QF6_[43]G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M785(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M17QF6_([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)800P31C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)800P32C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)101P51C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7([76])QF6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mecool[ _-]|(?:KM9PRO|BB2 PRO|K[I]{1,3} PRO|KI PLUS|KM9_TV_BOX|M8SPROW|M8S (?:PLUS|PRO) (?:DVB|[LW]|PLUS)|M8S (?:MAX|PRO))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM9PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM9_TV_BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BB2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K[I]{1,3}) PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KI PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8SPROW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PLUS DVB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PLUS ([LW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO ([LW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mecool[ _-]([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:SmartPad7503G|M-SP10MXA|M-PPAB500|SmartPad970s2(?:3G)?|M[_-][MPS]P[0-9a-z]+|M-IPRO[0-9a-z]+|1AEC|1AZ2[TP])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad7503G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad970s23G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad970s2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP84[02]M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP940M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP8MXA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP7HXAH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP8HXAH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP(?:710|720|725|726|740)GOx?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP876S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8S2[AB]?3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP(101|102|860|875)S2[BW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP85S23G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP10[45][01]S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1S2[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8[24]S4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8S4[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP9S4A3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1[02]S4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP7S4A3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1040MC?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1S4[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10HXxH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXHA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXHL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8PA3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP10PA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP10PA3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-IPRO([18][01]0)[BW](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1AZ2[TP](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M-MP75S23G|M-MP72[01]M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP7S2[ABDK]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP5303G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxB400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAG550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAB500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2G530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPG700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS531(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S650C?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS551U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAG4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP[ABC]G500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S500[BC]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M[_-]PP[Ax]X(470|510|520)U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxG(400|501|[457][PM]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS(532[LU]|470|501|5P?|7P?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxG(450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP([0-9a-z]+)`),
		regexp.MustCompile(`(?i)Medion|(?:MD_)?LIFETAB|([SPX]10[0-9]{2}X|E10[45]1X|X5001|P851X|P850X|E691X|E1050X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MD_)?LIFETAB[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(E450[46]|E5004|S5004|X5001|E5020|P5015|P500[45]|X6001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B5530)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(E10[45]1X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([SPX]10[0-9]{2}X|P851X|P850X|E691X|E1050X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Medion(?: Smartphone)? ([^/;]+) Build`),
		regexp.MustCompile(`(?i)MEDION, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)MegaFon|MFLoginPh|MegLogPh|(MFLogin[34]T?|MS3B|SP-A5|SP-A20i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MFLoginPh|MegLogPh`),
		regexp.MustCompile(`(?i)MFLogin3T|MegaFon Login 3`),
		regexp.MustCompile(`(?i)MS3B|Megafon Optima`),
		regexp.MustCompile(`(?i)(SP-A5)`),
		regexp.MustCompile(`(?i)MegaFon V9+`),
		regexp.MustCompile(`(?i)(?:Meitu[2]?|MP1503|MP1512|MP160[235]|MP170[19]|MP171[138]|MP1801)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MP1512|Meizu M6s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1602(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP17(?:01|13)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP17(?:09|11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meitu2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meitu (Kiss|[MV]4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meizu|MZ-[A-Z]|(M04[05]|MZ-16th(?: Plus)?|MZ-16[st]|M7[12]1C|M35[1356]|M612C|M578CA|M181[36]|M1822|M681C|M6T|MX[ -]?[2345](?: Pro)?|(?:MZ-)?m[1-6] note|M621C|M1852|M57[18]C|M3[ESX]|M3 Max|M031|m1 metal|M1 E|M2|M2 E|M5s Build|PRO [567]|PRO 7-[HS]| 15 Lite| 16th|MZ-15 (?:Lite|Plus)|15 Plus|MZ-16 X| 16 X| 16T|MX6|16s Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M571C`),
		regexp.MustCompile(`(?i)(?:MZ-|Meizu-)?m([1-6])[_ ]note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M1 E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2 E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M578C[A]?|M2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M681C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M621C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M711C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M721C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M6T|MX6|M3E|M3X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M3S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M3 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M5S|M612C`),
		regexp.MustCompile(`(?i)(M04[05]|MX[ -]?2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M35[1356]|MX[ -]?3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX[ -]?4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX[ -]?4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Meizu[- _])?MX[ -]?5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1813(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M1816|M8 lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8c Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO 7-[HS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO ([76]) Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO ([567])`),
		regexp.MustCompile(`(?i)M031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1852(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1822(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16th Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?15 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-15 Lite| 15 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MZ-16th| 16th(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16 X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16s Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meizu (17|C9) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MZ-?M3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Meizu[_ ])?note([89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?Meizu[_ ]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:MZ-)?Meizu[_ ]([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)MZ-([^/;]+) Build`),
		regexp.MustCompile(`(?i)MELROSE[_ ](?:S9\+?|S9P|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE[_ ]S9\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE[_ ](S9|S9P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE_2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SlidePad ?([^;/]*) Build|SPNG?[0-9]{2,4}[a-z]{0,2}(?:[);/ ]|$)|SP704CE?|SP-NG708-3G`),
		regexp.MustCompile(`(?i)SlidePad ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)SPNG([0-9]{2,4}[a-z]{0,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-NG(708)-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP704(CE?)`),
		regexp.MustCompile(`(?i)(?:MiXzo[ _])?(?:ME ?10(?:2[35]|30)|MX1037|MX1024|MX10[24]1|MX1397)([ _][34]G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiXzo[_ ]ME ?(1023|1030)(?:[_ ]([34])G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiXzo[_ ]MX1021(?:[_ ]3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MiXzo[ _])?MX(1037|1041|1024|1397)[ _]4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME ?1025`),
		regexp.MustCompile(`(?i)(?:MicroMax[ \-\_]?[a-z0-9]+|Q327)|4560MMX|P70221|(?:YU(?:5040|5530)|AQ5001(?: Canvas Power)?|N8216|N8301|IN_2b|IN_Note1|ione note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q465(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E451(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4560MMX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN_2b(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E481(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q462(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P70221(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q(3[25]7|301|326|338)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q402\+`),
		regexp.MustCompile(`(?i)YU5040(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q402 ?Plus`),
		regexp.MustCompile(`(?i)Q440Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax[_ ]Q353P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q452(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q421(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E313(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q413(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4251(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax C1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C2APLS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bharat (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ione note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN_Note1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E7533(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ \-\_])?(X291|X246|X252|X458|X312)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ \-\_])?(P[a-z0-9]+)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ \-\_])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)KIN\.(One|Two)|RM-(?:1010|1031|106[57]|107[23467]|1089|109[02]|1096|1099|1109|111[348]|1127|1141|115[24]|994)|Microsoft; Lumia|Lumia (?:1530|1320|950|850|650|640|550|535|435)|Corporation/Surface|Surface Duo`),
		regexp.MustCompile(`(?i)KIN\.(One|Two)`),
		regexp.MustCompile(`(?i)RM-1099|Lumia 430`),
		regexp.MustCompile(`(?i)RM-1114|Lumia 435`),
		regexp.MustCompile(`(?i)RM-1031|Lumia 532`),
		regexp.MustCompile(`(?i)RM-109[02]|RM-1089|Lumia 535`),
		regexp.MustCompile(`(?i)RM-1141|Lumia 540`),
		regexp.MustCompile(`(?i)RM-1127|Lumia 550`),
		regexp.MustCompile(`(?i)RM-106[57]|RM-1096|Lumia 640 XL`),
		regexp.MustCompile(`(?i)RM-1109|RM-1113|RM-107[23467]|Lumia 640`),
		regexp.MustCompile(`(?i)RM-1154|Lumia 650`),
		regexp.MustCompile(`(?i)Lumia 950|RM-1118`),
		regexp.MustCompile(`(?i)RM-994|Lumia 1320`),
		regexp.MustCompile(`(?i)Surface Pro( [34])?`),
		regexp.MustCompile(`(?i)Microsoft; Lumia ([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:ETL101AL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO[- ](?:X8-H|U9-H|X[57]-mini|X8H-PLUS|X88-?I|X7-216A|X5-116A|X[68]|U1|Z64|U22-XJ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X8-H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO U22-XJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X([57])-mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X8H-PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X88-?I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X7-216A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X5-116A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X([68])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-U1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-Z64(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-U9-H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Coolmintt(?:A3|M2)?|Ultramintt(?:S2)?|FRESHMINTT(?:A7|A10)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Coolmintt ?([PM]1|P3|A3|M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultramintt ?([SR]1|S2|A5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FRESHMINTT ?(A7|A10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIO(?:/)?([a-z0-9]+)|(?:MOBIX M6|Mio TouchPad 7 Quad Core)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOBIX M6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIO(?:/)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Mione[_ ]`),
		regexp.MustCompile(`(?i)Hero (\d+)`),
		regexp.MustCompile(`(?i)Mione_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIDM[_-]|MPM[_-]`),
		regexp.MustCompile(`(?i)MIDM[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MPM[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MITO[- _]`),
		regexp.MustCompile(`(?i)MITO[- _]3255(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITO[- _]A37[_ ]Z1plus`),
		regexp.MustCompile(`(?i)MITO[- _](A(?:19[_ ][12]GB|37[_ ]Z1|36[_ ]W1|[0-9]+)|311)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITO[- _](T(?:[0-9]+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITSU|portalmmm/[12]\.0 M`),
		regexp.MustCompile(`(?i)MITSU/[a-z0-9.]+ \(([a-z0-9]+)\)`),
		regexp.MustCompile(`(?i)MITSU[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12]\.0 (M[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(MC32020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MobiPrint 4\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MobiPrint 4\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Kiona|KANUNA|Halona|Kicka[_ ][45][ _]Plus|Kohana|Kosumi|KWANITA|Lonan|Hotah|Kicka 5|Kiona|SmartE11|Sakari)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Kiona|Kicka[_ ][45][ _]Plus|Kohana|Kosumi|Lonan|Halona|Hotah|Kicka 5|Kiona|Sakari)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobicel_(R1)|ASTRO(?: Build|[;)]|$)|(?:Android 8.+ BEAM|FAME(?:_DS)?|CLIK|R7_1|HYPE(?:_X)?|DANDY(?:_ZAM)?|Matrix|VENUS_G|TRENDY PLUS|FENDY_DS|TANGO_LITE|BLINK|BERRY|BERRY[_ ]?(?:[12]|PLUS)|R1PLUS_1|ZOOM-H|REBEL|LEGEND MAX|HERO_DS|Switch[ _]GO|SWITCH1|PULSE_1|TRENDY 2|TRENDY_LITE|FEVER_PLUS_[HJ]|RIO_(?:SS|ZAM)|Clik plus|(PURE|Fendy) PLUS|Neo[ _]LTE|Titan_1|ZOOM_1|R4 LTE|NEO_1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BERRY[_ ]PLUS`),
		regexp.MustCompile(`(?i)Neo[ _]LTE`),
		regexp.MustCompile(`(?i)RIO_(SS|ZAM)`),
		regexp.MustCompile(`(?i)Switch[ _]GO`),
		regexp.MustCompile(`(?i)Mobicel_(R1)`),
		regexp.MustCompile(`(?i)FEVER_PLUS_([HJ])`),
		regexp.MustCompile(`(?i)Mobiistar|Zumbo[ _]S|(?:PRIME X MAX|X1 (?:Notch|Dual)|E1 Selfie|XQ[_ ]Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1 (Notch|Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E1 Selfie(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ[_ ]Dual(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mobiistar_LAI_Zumbo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zumbo[_ ]S[_ ]2017[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zumbo[_ ]S[_ ]2017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mobiistar ZUMBO S2( Dual)`),
		regexp.MustCompile(`(?i)Mobiistar_LAI_Zumbo_J_2017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobiistar_LAI_Zumbo_J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobiistar[_ ]Zumbo[_ ]S2`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]YUNA[ _]([1XCS])`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]ZORO[ _]([23])`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]Zena`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]Z([12])?`),
		regexp.MustCompile(`(?i)mobiistar LAI 504([KC])`),
		regexp.MustCompile(`(?i)mobiistar[ _]PRIME[ _](X1|558|X[ _]Plus|X[ _]Grand) Build`),
		regexp.MustCompile(`(?i)mobiistar[ _]KOOL([ _]Lite)?`),
		regexp.MustCompile(`(?i)Mobiistar[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(MS5[50]X6|MS55X5|MS55L1|MS50L1|MS43A3000|MS45A4000|MS50A4000|MS50A4500|MS50A5000|MS50A6000|MS50B11000|MB-2900 QUATTRO|POLYS[_ ]MS45L1|Wave5)`),
		regexp.MustCompile(`(?i)POLYS[_ ]MS45L1`),
		regexp.MustCompile(`(?i)(Cynus[ _][^/;)]+)( Build|\))`),
		regexp.MustCompile(`(?i)(?:(?:MOBO[_ ]MB7005|MT7-421HD)|(?:MT7-442D|MT7-411D))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOBO[_ ])?(MB7005|MT7-421HD|MT7-442D|MT7-411D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Modecom|Free(?:Way )?Tab|xino z[\d]+ x[\d]+`),
		regexp.MustCompile(`(?i)xino Z([\d]+) X([\d]+)`),
		regexp.MustCompile(`(?i)FreeTab[ _\-]?([^/;]+)? Build`),
		regexp.MustCompile(`(?i)FreeTab[ _\-]?([^);/ ]+)?`),
		regexp.MustCompile(`(?i)FreeWay Tab[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)FreeWay Tab[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)Mofut[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Mofut[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)MOT|DROID ?(?:Build|[a-z0-9]+)|portalmmm/2.0 (?:E378i|L6|L7|v3)|XOOM [^;/]*Build|XT1941-2|XT1924-9|XT1925-10|XT1965-6|XT1970-5|XT1799-2|XT1021|XT2171-3|XT2071-4|XT2175-2|XT2125-4|XT2143-1|XT2153-1|XT2201-2|XT2137-2|XT1710-08|XT180[3-5]|XT194[23]-1|XT1929-15|(?:XT|MZ|MB|ME)[0-9]{3,4}[a-z]?(?:\(Defy\)|-0[1-5])?(?:[;]? Build|\))`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT300`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT30[35]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT31[16]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2125-4`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2175-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2143-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2153-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT32[01]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT3(?:89|90)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT502`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT531`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT535`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT55[567]C?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT603`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT610`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT615`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT621`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT626`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT682`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT685`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT687`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT720`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT800W`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT860`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT881`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT882`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT88[56]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT890`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT894`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT897`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT901`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT90[567]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT910S?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT91[4568]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT9(?:19|20)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT925`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT102[12]|XT830C)`),
		regexp.MustCompile(`(?i)Moto E \(XT2052DL\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1706`),
		regexp.MustCompile(`(?i)MotoE2\(4G-LTE\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1924-9`),
		regexp.MustCompile(`(?i)moto e\(?([0-9])\)? plus`),
		regexp.MustCompile(`(?i)Moto E([0-9]) Play`),
		regexp.MustCompile(`(?i)moto e6 \(XT2005DL\)`),
		regexp.MustCompile(`(?i)moto e5 cruise(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)moto e5 supra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E5 go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?(\di?)\)? Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?([567]i?)\)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?([567])s\)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1030`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1565`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1096`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1254`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT10(?:28|3[12349]|68|69)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?g\(?(\d+)\)? 5G`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1609`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT180[3-5]|Moto G ?5S Plus|Moto G \(5S\) Plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1799-2|Moto G \(5S\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT168[57]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT167[06]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1925-10`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1965-6`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT10(?:49|5[23568]|60|9[23457])`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT156[234]|Moto X Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1572`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1575`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT158[01]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1080`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1585`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1650(?:-05)?`),
		regexp.MustCompile(`(?i)moto z4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto Z3 Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1635(?:-0[1-3])?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1710-(?:-0[28])?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1789-05|Moto Z2 Force(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1929-15|moto z3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1663`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1943-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1941-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1942-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge 20 fusion`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge 20 lite`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge 20 pro`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge 5G UW \(2021\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge (\d+)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge \(2021\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one vision plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT1970-5|one vision)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one power`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one hyper`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one zoom`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one fusion\+`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one fusion`),
		regexp.MustCompile(`(?i)moto g stylus \(XT2115DL\)`),
		regexp.MustCompile(`(?i)moto g stylus \(2021\)`),
		regexp.MustCompile(`(?i)moto g play \(XT2093DL\)`),
		regexp.MustCompile(`(?i)moto g play \(2021\)`),
		regexp.MustCompile(`(?i)moto g power \(XT2041DL\)`),
		regexp.MustCompile(`(?i)moto g power \(2021\)`),
		regexp.MustCompile(`(?i)moto g power \(2022\)`),
		regexp.MustCompile(`(?i)moto g\(?40\)? fusion`),
		regexp.MustCompile(`(?i)moto g(31|41)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)moto g\(?60\)?s`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) \(XT1925DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) forge`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) optimo \(XT1952DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) optimo maxx\(XT1955DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) power lite`),
		regexp.MustCompile(`(?i)moto g\(([0-9]|10)\) power`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) supra`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) plus`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) play`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\)`),
		regexp.MustCompile(`(?i)moto e\(?([0-9]+)\)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)moto x\(?(4+)\)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)moto(?:rola)? one 5G`),
		regexp.MustCompile(`(?i)Moto ([CGEXZ]) ?\(([a-z0-9]+)\)( Plus| Play)?`),
		regexp.MustCompile(`(?i)Moto ?([CGEXZ])([0-9]+)( Plus| Play)?`),
		regexp.MustCompile(`(?i)(?:Motorola-)?Moto[ _]?([CGEXZ])([ _](?:Plus|Play))?`),
		regexp.MustCompile(`(?i)Moto(?:rola)?[- _]F100`),
		regexp.MustCompile(`(?i)razr \(2020\)`),
		regexp.MustCompile(`(?i)MOTORAZR[ _-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MOTORIZR[ _\-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Motorola[ _-]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Moto[ _-]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)MOT[O]?[_-]?([a-z0-9.]+)`),
		regexp.MustCompile(`(?i)DROID ?([a-z0-9 ]*) Build`),
		regexp.MustCompile(`(?i)DROID ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 ((?:E378i|L6|L7|V3)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(XOOM [^;/]*)Build`),
		regexp.MustCompile(`(?i)(MZ[0-9]{3})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:ME|MB|XT)[0-9]{3,4}(?:\(Defy\))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOVIC|F4502`),
		regexp.MustCompile(`(?i)MOVIC[ -]W([2345])`),
		regexp.MustCompile(`(?i)(?:MPQC|MPDC)[0-9]+|PH(?:150|340|350|360|451|500|520|544|604)|(?:MID(?:7C|74C|82C|84C|801|811|701|711|170|77C|43C|102C|103C|104C|114C)|MP100i OCTA|MP(?:843|717|718|1010|7007|7008|843|888|959|969|QCG(1[01]|77)(?: 3G)?)|MGP7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:MPQC|MPDC)[0-9]+[^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)MP100i OCTA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MPQCG10(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID(?:7C|74C|82C|84C|801|811|701|711|170|77C|43C|102C|103C|104C|114C)|MP(?:843|717|718|1010|7007|7008|843|888|959|969|QCG(?:11|77))|MGP7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PH(?:150|340|350|360|451|500|520|544|604))`),
		regexp.MustCompile(`(?i)(?:Multilaser[ _](?:[FEGH])(?:[_ ](?:Pro|Max|Lite))?|MS50[LGXM]|M7[_-]3G[_-](?:PLUS|QC_3|QUAD_CORE)|MS5\.V2|M9-3G|MS45S_A6|ML([02]1|12)-M7s[- ]?Quad-?Core| ML01-M7-SD|MS45S|MS50S|MS60[XZ]|M7SQC_Plus|MS80X|MS40[GS]|MS55M|MS70|M7_3G_A10|M7-3G QUAD CORE|M7s_?Lite|M10_4G_PRO|MS50L?_4G|MS60F(?:_PLUS)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]F[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G[_ ]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]E[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]([FEH])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MS60F_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS50[LGXSM]|MS45S_A6|MS40[GS]|MS55M|MS60F|MS70|MS60[XZ]|MS45S|MS80X|MS50L?_4G|MS5\.V2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7[_-]3G[_-]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M10_4G_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7SQC_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7-3G_QC_3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7-3G[ _]QUAD[ _]CORE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML([02]1|12)-M7s[- ]?Quad-?Core(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7s_?Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML01-M7-SD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M9-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7_3G_A10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyGica[_ ]`),
		regexp.MustCompile(`(?i)HDR (Quad Core|Smart TV) Box`),
		regexp.MustCompile(`(?i)ATV(19[60]0|495 Pro 16G)`),
		regexp.MustCompile(`(?i)(?:MyPhone|MyPad|MyTab)[ _][^;/)]+( Build|\))|Cube_LTE|myTab10II|LUNA_II|AXE_M_LTE|HAMMER[ _](FORCE|Blade_3|Blade2_PRO|IRON_[23]|Explorer|ENERGY|Titan 2|AXE[_ ](?:M[_ ]LTE|Pro)|Iron 2|Active[2]?(_LTE)?)|IRON_2|C-Smart_pix|myPhone_Fun_8|FUN_18x9|MyPhoneMY27|Prime_4_Lite|myA17|myX12|Pocket_2|Prime_18x9|Prime3Lite|myT6 DTV|myXI1 (?:Plus|Pro)|myXI3|Q_Smart_BE|Brown 1|Q-Smart_III_Plus|SmartView_(?:[78]|9_6)_(?:LTE|[34]G)`),
		regexp.MustCompile(`(?i)MyPad[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)MyTab[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY[ _](\d+)`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY`),
		regexp.MustCompile(`(?i)HAMMER_AXE[_ ]M[_ ]LTE`),
		regexp.MustCompile(`(?i)Hammer[_ ]FORCE`),
		regexp.MustCompile(`(?i)(?:Hammer[ _])?Iron[ _](2|3)`),
		regexp.MustCompile(`(?i)Hammer[ _]Explorer`),
		regexp.MustCompile(`(?i)Hammer Active(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer_Active2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer_Active2_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pocket_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myA17(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun[_ ]?(\d)[_ ]?Lite`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun[_ ]?(\d)[_ ]?LTE`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun_?([48]|18x9)`),
		regexp.MustCompile(`(?i)myX12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myXI1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myXI1 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myXI3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q_Smart_BE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime_18x9(_LTE)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime3Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Brown 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myPhone[_ ]Pocket[_ ]Pro`),
		regexp.MustCompile(`(?i)MyPhone[ _]([^;/)]+)( Build|\))`),
		regexp.MustCompile(`(?i)MyTAB[ _-](?:8 MINI Dual Core|U55GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyTAB[ _-]8 MINI Dual Core(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyTAB-U55GT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyWigo[ _]([^;/)]+)( Build|\))`),
		regexp.MustCompile(`(?i)(MOVE_S201)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (Myria_[^/;]+|502M|Cozy|Easy tab 9|Grand) Build|Myria_FIVE|Myria_Grand_4G|Myria_Wide_2|Myria_Wide_4G`),
		regexp.MustCompile(`(?i)Myria_([^/;]+) Build`),
		regexp.MustCompile(`(?i)(502M|Grand)`),
		regexp.MustCompile(`(?i)(Cozy|Easy tab 9)`),
		regexp.MustCompile(`(?i)(E70 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYSTERY|(MID-(?:123G|72[12]|7[01348]3G|753G|8[23]3G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MID-(123G|72[12]|7[01348]3G|753G|8[23]3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYSTERY_TV_(D3155CH31)`),
		regexp.MustCompile(`(?i)NEC[ _\-]|KGT/2\.0|portalmmm/1\.0 (?:DB|N)|(?:portalmmm|o2imode)/2.0[ ,]N|(?:PC-T[SE]\d{3}[\w]{2,3}|N-06C|N-02E|LAVIE Tab E (?:10|8)FHD[12]|7SD1|8HD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N-06C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEC[ _\-]|KGT/2\.0 )([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/1\.0 ((?:DB|N)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:portalmmm|o2imode)/2\.0[ ,](N[a-z0-9]+)`),
		regexp.MustCompile(`(?i)LAVIE Tab E ((?:10|8)FHD[12]|7SD1|8HD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PC-TE(\d+)`),
		regexp.MustCompile(`(?i)PC-TS(\d+)`),
		regexp.MustCompile(`(?i)(MXQ|MXQ-Pro)-NEXBOX|NEXBOX-([^) ]+)`),
		regexp.MustCompile(`(?i)NEXBOX-([^) ]+)`),
		regexp.MustCompile(`(?i)NEXON (X3\+|X[12589])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NG3128HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NGM[_ ][a-z0-9]+|(Forward|Dynamic)[ _]?[^/;]+(?:Build|/)|Smart5Plus32GB`),
		regexp.MustCompile(`(?i)(Forward|Dynamic)[ _]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)(Forward|Dynamic)[ _]?([^/;]+)/`),
		regexp.MustCompile(`(?i)NGM ([^;/]+) Build`),
		regexp.MustCompile(`(?i)NGM_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:NOA-)?NOA[ _]|Hummer(?:_2019_R|LE)|NextSE|Vivo 4G_r|SPRINT4G`),
		regexp.MustCompile(`(?i)NOA[_ ]CORE[_ ]FORTE`),
		regexp.MustCompile(`(?i)NOA[_ ]Hummer[_ ]Lite`),
		regexp.MustCompile(`(?i)NOA[_ ]MOVEse`),
		regexp.MustCompile(`(?i)NOA[_ ]NEXT`),
		regexp.MustCompile(`(?i)NOA[_ ]VISION[_ ]H3SE`),
		regexp.MustCompile(`(?i)NOA[_ ]VISION[_ ]H3`),
		regexp.MustCompile(`(?i)NOA[_ ]LOOP`),
		regexp.MustCompile(`(?i)(?:NOA-)?NOA[_ ]H4se`),
		regexp.MustCompile(`(?i)NOA[_ ]Mg12`),
		regexp.MustCompile(`(?i)NOA[_ ]H44SE`),
		regexp.MustCompile(`(?i)NOA[_ ]H10LE`),
		regexp.MustCompile(`(?i)(?:NOA[_ ])?Vivo 4G_r`),
		regexp.MustCompile(`(?i)NOA[_ ]([^;)/ ]+)`),
		regexp.MustCompile(`(?i)SMART_VOLT_NX5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPAD7G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPAD7G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_|(?:(?:N(5702|500[12])L|S6001L|[SN]5501L)|A6L-[CG]|N5502L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_A([13])`),
		regexp.MustCompile(`(?i)NUU_M([32])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_X5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(N5001L|A6L-[CG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NYX[ _]|(?:GLAM|ARGON)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NYX[ _]REX`),
		regexp.MustCompile(`(?i)(?:DMTAB-(?:IN08A|NV08B|NV2[04]A)|NBTY07SMKG|NBFP07PMKG|SNB02-NV7A|NABI2-NV7A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DMTAB-(?:IN08A|NV08B)`),
		regexp.MustCompile(`(?i)DMTAB-NV(2[04])A`),
		regexp.MustCompile(`(?i)(?:NAOMIPHONE Ambar|DAMMAR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAOMIPHONE Ambar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DAMMAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NX-32THS100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEXO (?:Smarty|handy|SMART DUO|Evo)|MOVIO 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP-752Go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NeoTab)[ _-]((?:S1[23]0|S125|H85|H11[05]|KID741|S9700))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _]|(?:T737PRO|T505PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _](T70[07]) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _](T757)LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _](A73[0157]|A650)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T(505|737)PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RE900 Full HD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ]|(?:Vision_Tab_(?:7|10)|Pure Micro|Superme_Max|Raptor3G8GB|Predator (?:10|3G)|Platinum[_ ]10[_ ]3G(?:_V2)?|Supreme[_ ](?:Fine(?:[_ ]Micro)?|Chief|Pure|Pro)(?:[_ ](?:Mini|Plus))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M505 LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F552|D504)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Superme_Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine_Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine_Micro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Fine[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Chief(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Pure[ _]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme Pure(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure Micro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ]Infinity(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ](D405)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Platinum[ _]10[ _]3G(_V2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Orpheus[ _]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon_)?Predator[_ ](3G|10|7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Raptor3G8GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vision_Tab_(7|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M002[DGQK]-2|M002N|M002N-3T|M002W-2T|6M-3T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neffos|(TP601A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:C57|TP601A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neffos[_ ]Y50`),
		regexp.MustCompile(`(?i)Neffos[_ ]((?:[YNCXA])[0-9][A-Z]?(?: Max| Lite| Plus)?)`),
		regexp.MustCompile(`(?i)NEO, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)NEO[ ]?(90[689])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NQT-(?:101|7)[34]GIQ|NQT-7W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NQT-101([34])GIQ`),
		regexp.MustCompile(`(?i)NQT-7([34])GIQ`),
		regexp.MustCompile(`(?i)NIM-(450D|550O|600Q)`),
		regexp.MustCompile(`(?i)NB (RunIQ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEWGEN\-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:NLS-MT90)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Newman[ _](P308|K1|G5i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CarPad-(?:II|III)-P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Newsday[_ ](E1|A[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexa[ _](?:Atlas|Vega N1)`),
		regexp.MustCompile(`(?i)Nexa[ _](Vega N1)`),
		regexp.MustCompile(`(?i)Nexa[ _](Atlas)`),
		regexp.MustCompile(`(?i)S?Nexian`),
		regexp.MustCompile(`(?i)S?Nexian[ ]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)S?Nexian-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Next[0-9]|NX(?:785QC8G|M900MC|008HD8G|010HI8G|M908HC|M726|16A8116K|A8QC116|16A10132S|16A11264)`),
		regexp.MustCompile(`(?i)Next([0-9]+[^;/]+) Build`),
		regexp.MustCompile(`(?i)TAB (A40[13]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nextbit|(?:Robin)(?: Build|\))`),
		regexp.MustCompile(`(?i)(Robin)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOAIN[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)NOAIN[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)Nobby[ ](S500|X800(?: Pro)?|S300(?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Noblex|NBX-`),
		regexp.MustCompile(`(?i)(?:Noblex|NBX)[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Noblex|NBX)[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)Nokia|Lumia|Maemo RX|portalmmm/2\.0 N7|portalmmm/2\.0 NK|nok[0-9]+|Symbian.*\s([a-z0-9]+)$|RX-51 N900|TA-[0-9]{4}|ARM; 909`),
		regexp.MustCompile(`(?i)TA-10(07|23|29|35)`),
		regexp.MustCompile(`(?i)TA-10(20|28|32|38)`),
		regexp.MustCompile(`(?i)TA-10(24|27|44|53)`),
		regexp.MustCompile(`(?i)TA-10(00|03|21|25|33|39|54)`),
		regexp.MustCompile(`(?i)TA-10(04|12|52)`),
		regexp.MustCompile(`(?i)Nokia 6\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 5\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 3\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 2 V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nokia ?X2DS`),
		regexp.MustCompile(`(?i)(?: )?(Nokia500|nokiaasha500(?:dualsim)?)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia5130c(?:-2)?`),
		regexp.MustCompile(`(?i)Nokia8800e?`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})c(?:-)?`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})s(?:-)?`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})`),
		regexp.MustCompile(`(?i)(?: )?Nokia([235][0-9]{2})(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia([CEX]-?[0-9]{1,2}i?)-[0-9]{1,2}u?(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia;? 520T`),
		regexp.MustCompile(`(?i)RM-91[45]`),
		regexp.MustCompile(`(?i)RM-997|Nokia 526`),
		regexp.MustCompile(`(?i)RM-97[68]`),
		regexp.MustCompile(`(?i)RM-97[45]`),
		regexp.MustCompile(`(?i)NOKIA;? 710`),
		regexp.MustCompile(`(?i)Nokia;? 720T`),
		regexp.MustCompile(`(?i)RM-103[89]`),
		regexp.MustCompile(`(?i)Nokia;? 800C`),
		regexp.MustCompile(`(?i)Nokia;? 800`),
		regexp.MustCompile(`(?i)Nokia;? 900`),
		regexp.MustCompile(`(?i)(RM-82[12]|Nokia;? 920)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)(RM-89[23]|RM-910|Nokia;? 925)(?: Build|[a_);/])`),
		regexp.MustCompile(`(?i)(ARM; 909|NOKIA;? 909|NOKIA; id300)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)NOKIA;? 1520\.1`),
		regexp.MustCompile(`(?i)Nokia ([A-Za-z0-9\. ]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Nokia(N[0-9]+)`),
		regexp.MustCompile(`(?i)Nokia-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NOKIA; ([a-z0-9\- ]+)`),
		regexp.MustCompile(`(?i)NOKIA[ _]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)NOKIA/([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(Lumia [a-z0-9\-]+ XL)`),
		regexp.MustCompile(`(?i)(Lumia [a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Maemo RX-51 ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NokiaInternal|Nokia-WAP-Toolkit|Nokia-MIT-Browser|Nokia Mobile|Nokia Browser|Nokia/Series`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 (N7[37]|NK[a-z0-9]+)`),
		regexp.MustCompile(`(?i)nok([0-9]+)`),
		regexp.MustCompile(`(?i)Symbian.*\s([a-z0-9]+)$`),
		regexp.MustCompile(`(?i)Nomi[ _-]|(C101010 Ultra2|i501[234]|i5032|i50[537]0|i5031|i55[13]0|i5532|C0(700(?:[02358]|2HD)|7850)|C1010[0-3]|i(?:50[0158]|450|40[01]|55[02]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i501[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i506(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i6030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I5070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[_ ]I4070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i4510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i4500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[_ ]i5511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i5710(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i508(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi[ _])?i(50[015]|450|40[01]|55[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101040`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101030`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101014`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101034`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101044`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070010`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070020`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070011`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070030`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070014L`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C0700[13]4`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070044`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080034`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080014`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C07008`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C10105`),
		regexp.MustCompile(`(?i)(?:Nomi[ _])?(C0(?:700(?:[0235]|2HD)|7850|9600)|C1010[0-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Nomi[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:Nomu[ _-](?:T18|S30mini|S10)|(?:V1600S|S10 PRO|S50_Pro))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]T18(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]s10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]S30mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S([15]0)[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1600S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NT-TP10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nos (?:FIVE|NOVU|NEVA|Roya)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS FIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NEVA 80(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS Roya(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NS(?:[356]|500[2-68]|5511|5502)|NS 5511)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NS 5511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NS[0-9]{1,4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NWX-40F171MSY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO \[Reloaded\](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nubia[ _]|(?:NX(?:403A|404H|406E|40[X2]|503A|50[5678]J|51[0123]J|521J|523J_V1|529Jq?|5[345]1J|5[48]9J|569[HJ]|5[67]3J|575J|59[157]J|60[1689]J|61[12679]J|62[79]J|65[19]J|6[126]9J|66[67]J|907J))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NX40[X2]`),
		regexp.MustCompile(`(?i)NX(403[AE]|406E|404H)`),
		regexp.MustCompile(`(?i)(NX5[12]1J|Nubia Z9 mini)`),
		regexp.MustCompile(`(?i)(NX510J|Nubia Z9 Max)`),
		regexp.MustCompile(`(?i)(?:NX549J|Nubia Z11 mini S)`),
		regexp.MustCompile(`(?i)(?:NX529Jq?|Nubia Z11 mini)`),
		regexp.MustCompile(`(?i)NX569[HJ]`),
		regexp.MustCompile(`(?i)NX6(?:08|17)J`),
		regexp.MustCompile(`(?i)Nubia[_ ]([^;)/]+)( build|[;)])`),
		regexp.MustCompile(`(?i)Nuvo[_ ](NS35|Blue ND40|Green[_ ]ND[_ ]45)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nuvo[_ ](NS35)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blue (ND40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Green[_ ]ND[_ ]45(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NVIDIA|SHIELD|Tegra(Note-P1640| Note 7)`),
		regexp.MustCompile(`(?i)(SHIELD Tablet(?: K1)?|Tegra Note 7)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)SHIELD Andr[o0]id TV`),
		regexp.MustCompile(`(?i)O\+[ _](Air|Crunch|Ultra|Upsized|Venti|360 ALPHA PLUS 2.0)`),
		regexp.MustCompile(`(?i)O\+[ _](Crunch|Ultra 2.0|Ultra|Upsized|Venti 4G)`),
		regexp.MustCompile(`(?i)O\+_AIR`),
		regexp.MustCompile(`(?i)O\+ 360 ALPHA PLUS 2.0`),
		regexp.MustCompile(`(?i)Xda|O2[ \-]|COCOON`),
		regexp.MustCompile(`(?i)(Xda[ _][a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(COCOON)`),
		regexp.MustCompile(`(?i)O2 ([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)O2-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(TEG9300)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OINOM[_ ](V9D|V7H|V[679])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GEN-10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OKWU SIGMA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OMIX[ _]`),
		regexp.MustCompile(`(?i)X(\d*)`),
		regexp.MustCompile(`(?i)(ONA19TB00[327]|10000520[6-9]|O8HD|100026191|100011886|10000356[12]|100011885|100015685-A|TBBVNC10000520[78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KON_TIKI(2)?|Nova3Color)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KON_TIKI(2)?`),
		regexp.MustCompile(`(?i)(?:OB-)?OPPO[ _]?([a-z0-9]+)|N1T|R8001|A101OP|OPG01|A00[12]OP|(?:OPG02|X90[07][0679]|U70[57]T?|X909T?|R(?:10[01]1|2001|201[07]|6007|7005|7007|80[13579]|81[13579]|82[01379]|83[013]|800[067]|8015|810[679]|811[13]|820[057])[KLSTW]?|N520[79]|N5117|A33[wf]|A33fw|A37fw?|PAAM00|PAAT00|PAC[TM]00|R7kf|R7plus[fmt]?|A1601|CPH[0-9]{4}|CPH19(69|79|23|1[179])|PB(A[TM]00|CT10|BT30|CM[13]0|[FD]M00)|P(E[RFHG]M\d{2}|E[GH]T\d{2}|DAM10|ADM00|AF[TM]00|ADT00|AHM00|BBM[03]0|BBT00|BDT00|BFT00|[CB]E[MT]00|CA[MT]00|C[CDG]M00|CA[MT]10|[CD]PM00|CRM00|CDT00|CD[TM]10|CHM[013]0|CKM[08]0|CLM[15]0|DEM[13]0|DHM00|D[RK][TM]00|DPT00|DB[TM]00|DCM00|[CD]NM00|DVM00|DY[TM][12]0|DNT00|EA[TM]00|CRT01|EDM00)|PFDM00|PEG[MT]10|PEM[MT][02]0|PDET10|PDS[TM]00|PEC[MT]30|OPG03|PE[QYPEXNLU]M00|PCHT30|PCRT00|PFGM00|PF[VU]M10|A102OP|PFCM00|PFJM10|PGCM10|PECM20|PDAT10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCHM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCHT30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2083|CPH2077)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2179)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2271)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2185)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCHM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1923(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1925(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2269(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(CPH1837|PAD[TM]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A37f(w)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A37f(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH20(?:81|73|31|15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2137(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH18(?:0[35]|53)|PBBM30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1809|PBA[TM]00|PBBT30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH19(?:3[13]|43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEC[MT]30|PECM20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDVM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEFM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDA[TM]10|CPH2069|CPH2061)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH(?:2127|213[19])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2135(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2321(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2195|OPG02|CPH2303)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2239|CPH2241)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2273(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEM[MT][02]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2325(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A102OP|CPH2309)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH170[15](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH19(?:09|1[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH190[15]|PBF[TM]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1717(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDY[TM]20|CPH2067)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH(?:2161|2099)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2219(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2263(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDY[TM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1715(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A79kt`),
		regexp.MustCompile(`(?i)PCD[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PBBT00|PBBM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDBM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1729(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1827(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PCA[TM]10|CPH1938)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CPH1937|CPH1941|PCHM30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCPM00|CPH20[02]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2059(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDK[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEH[MT]00|CPH212[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PFGM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2203)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2197)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2365|PELM00`),
		regexp.MustCompile(`(?i)PCE[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1903(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X9009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH191[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH19(?:69|87)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2095`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2119)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A1601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1613(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH172[37](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1725(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH18(?:[15]9|21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1825|CPH1881)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1823(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2223(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2285(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2213(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X909T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R827T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X907[067](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X900[067](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PEUM00`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R815[TW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8015(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R821T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?U707T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?U705T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH187[15]|PAF[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PAHM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDE[TM]10|CPH2023)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDEM30|OPG01|CPH2025)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEDM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEEM00|CPH2173|OPG03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R1011 Build`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PBC(?:M30|T10))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1955(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PCNM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PCLM50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PERM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGCM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PERM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?N5117(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?N520[79](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R831T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R831K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R831[SL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A33[wf](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A33fw(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8113(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R11 Plusk?t?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R8001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1721|R11s Plust?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1719|R11st?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1835|PAC[TM]00|PAAM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH183[13]|PAAT00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PBCM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1879|PBE[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1893)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1877|PBD[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R800[07](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R810[679](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7kf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7Plus[mt]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7Plusf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X9079(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1607|R9sk)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1611|R9s Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1917|PCA[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1983(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1919|PCCM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCKM00|CPH1907)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1989(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCKM80|CPH1945|CPH1951)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2043(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2013|A002OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDCM00|A001OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCR[MT]00|CPH203[567]|CPH2009)`),
		regexp.MustCompile(`(?i)PCRT01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2113(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2125(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDP[TM]00|CPH2091)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEA[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDN[TM]00|CPH2089)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2065(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2209(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2159(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2199|A101OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2205(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEG[MT]00|CPH2145)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEG[MT]10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2217(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2211(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDS[TM]00|CPH220[17])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDR[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1921(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2235|PEQM00|CPH2251)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2237(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEPM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH224[79](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PENM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PFDM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEYM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEXM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCLM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDHM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCGM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1979|PCD[TM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A59st(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N1T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R([0-9]{3,4}[KSTW]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CPH[0-9]{4})`),
		regexp.MustCompile(`(?i)(?:OB-)?OPPO[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)OYSIN[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Apex([13])|CC1 PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CC1) PRO`),
		regexp.MustCompile(`(?i)Apex([13])`),
		regexp.MustCompile(`(?i)(?:OBA_?(?:SMART_3|Conecta_Max|Conecta_4G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBA_(Conecta_(?:Max|4G))`),
		regexp.MustCompile(`(?i)Obi[ _-]|(SJ1\.5|SJ2\.6|S(400|452\+|45[13]|50[127]|503\+?|520|55[01])|falcon)[ _]`),
		regexp.MustCompile(`(?i)SJ2\.6`),
		regexp.MustCompile(`(?i)SJ1\.5`),
		regexp.MustCompile(`(?i)(?:Obi_)?S400`),
		regexp.MustCompile(`(?i)(?:Obi_)?S451|falcon`),
		regexp.MustCompile(`(?i)(?:Obi_)?S452\+`),
		regexp.MustCompile(`(?i)(?:Obi_)?S453`),
		regexp.MustCompile(`(?i)(?:Obi_)?S501`),
		regexp.MustCompile(`(?i)(?:Obi_)?S502`),
		regexp.MustCompile(`(?i)(?:Obi_)?S503\+`),
		regexp.MustCompile(`(?i)(?:Obi_)?S503`),
		regexp.MustCompile(`(?i)(?:Obi_)?S507`),
		regexp.MustCompile(`(?i)(?:Obi_)?S520`),
		regexp.MustCompile(`(?i)(?:Obi_)?S550`),
		regexp.MustCompile(`(?i)(?:Obi_)?S551`),
		regexp.MustCompile(`(?i)(?:Obi_)?S454`),
		regexp.MustCompile(`(?i)Obi[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Obi[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:Pacific|Quest).+OculusBrowser|Standalone HMD`),
		regexp.MustCompile(`(?i)(?:Quest 2|Standalone HMD)`),
		regexp.MustCompile(`(?i)ODYS[ _-]|IEOS[_ ]([^/;]+)|NOON(?:_PRO)? Build|SPACE10_(?:PLUS|PRO)_3G|THOR_?10|TAO_X10|RAPID_?(?:10|7)_?LTE|MAVEN_?10_|CONNECT[78]|ELEMENT10_PLUS_3G|XELIO[_0-9P]|ADM816HC|ADM8000KP|NEO6_LTE|EOS10|AEON|FALCON_10_PLUS_3G|FUSION|THANOS_10|MAVEN_X10_HD(?:_LTE)?|JUNIOR_8_PRO|JuniorT8Pro|(?:NOVA|PYRO)_X?7_PLUS_3G|UNO_X8|MAVEN_G10|SLADE_X55|XELIO_PRO_10_LTE|NOTOSplus3G|PACE ?10|PACE_10_LTE|Titan_10_LTE|PEDI_PLUS_W`),
		regexp.MustCompile(`(?i)XELIO[_ ]A10`),
		regexp.MustCompile(`(?i)MAVEN_?10_PRO_PLUS_3G`),
		regexp.MustCompile(`(?i)MAVEN_?10_?PLUS`),
		regexp.MustCompile(`(?i)MAVEN_?10_?PRO`),
		regexp.MustCompile(`(?i)MAVEN_?10_?HD`),
		regexp.MustCompile(`(?i)RAPID_?7_?LTE`),
		regexp.MustCompile(`(?i)RAPID_?10_?LTE`),
		regexp.MustCompile(`(?i)THOR_?10 Build`),
		regexp.MustCompile(`(?i)PACE ?10`),
		regexp.MustCompile(`(?i)THOR_?10_PLUS_3G`),
		regexp.MustCompile(`(?i)NEO6[_ ]LTE`),
		regexp.MustCompile(`(?i)IEOS[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:ODYS[ _-])?NOON Build`),
		regexp.MustCompile(`(?i)(?:ODYS[ _-])?NOON_PRO Build`),
		regexp.MustCompile(`(?i)Odys[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)AFTWI001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Signature (?:L|Pro|Touch)`),
		regexp.MustCompile(`(?i)Signature (L|Pro|Touch)`),
		regexp.MustCompile(`(?i)Onda|(?:(?:V820w|V891[w]?|V919(?: 3G)? Air)[ _-]DualOS|(?:V919 4G Air|V989 Air|V972) Core[48]|T2101L2B1C| V10 4G|OBOOK (?:20 SE|20 PLUS DUALOS)|OBOOK10 SE|V919 Air CH DualOS| T9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?: T9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONDA[ _]MID`),
		regexp.MustCompile(`(?i)V820w[ _-]DualOS`),
		regexp.MustCompile(`(?i)V891W[ _-]DualOS`),
		regexp.MustCompile(`(?i)V891[ _-]DualOS`),
		regexp.MustCompile(`(?i)V919 3G Air[ _-]DualOS`),
		regexp.MustCompile(`(?i)V919 Air[ _-]DualOS`),
		regexp.MustCompile(`(?i)T2101L2B1C|OBOOK 20 PLUS DUALOS`),
		regexp.MustCompile(`(?i) V10 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK 20 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK10 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([a-z0-9]+)[ _]Onda`),
		regexp.MustCompile(`(?i)Onda ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:du_)?ONEPLUS|(?:A0001|A200[135]|AC200[13]|A300[03]|A3010|A5000|A600[03]|A601[03]|BE201[1235]|BE202[5689]|E100[135]|GM191[03517]|GM190[0135]|GM192[05]|HD191[013]|HD190[01357]|HD1925|IN201[013579]|IN202[0135]|KB200[01357]|LE211[01357]|LE212[035]|Nord N10 5G|LE210[01]|LE212[17]|DE211[78]|DN210[13]|EB210[13]|MT211[01]|IV2201|NE2210)(?: Build|\))`),
		regexp.MustCompile(`(?i)AC200[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EB210[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE201[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DE211[78](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BE202[69]|Nord N10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DN210[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IV2201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN202[0135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KB2000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IN201[01357]|OnePlus 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE211[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MT211[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE210[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE212[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NE2210(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GM191[01357]|OnePlus 7 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GM190[0135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HD190[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HD191[013]|OnePlus 7T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HD1925|GM192[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KB200[1357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A200[135]|OnePlus2`),
		regexp.MustCompile(`(?i)E100[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A3010|OnePlus3T`),
		regexp.MustCompile(`(?i)A300[03]|OnePlus3`),
		regexp.MustCompile(`(?i)A5010|OnePlus[ ]?5T`),
		regexp.MustCompile(`(?i)A5000|OnePlus5`),
		regexp.MustCompile(`(?i)A600[03]|OnePlus6`),
		regexp.MustCompile(`(?i)A601[03](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:du_)?ONEPLUS[ _]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:ONIX S405|AT101-1116|ONIX_8_3G_01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT101-1116)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONIX_8_3G_01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S405)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DP-CMX1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Opel ?Mobile|(?:OpelMobile_Smart(?:JX|X1)|Easy_Smart_2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Openbox (?:A[34](?: (?:Pro|Lite))?)|AS_4K_CI(?:_PRO)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Openbox (A[34](?: (?:Pro|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Opsson|IUSAI`),
		regexp.MustCompile(`(?i)IUSAI[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)IUSAI[ _]([^/;\)]+)[/;\)]`),
		regexp.MustCompile(`(?i)Opsson[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:Opsson-)?Opsson[ -_]([^/;]+)/`),
		regexp.MustCompile(`(?i)SPV[ \-]?([a-z0-9]+)|Orange[ _-]([^/;]+)( Build|\))|SC/IHD92|Nura 2|FunTab ([^/;]+) Build|Orange Mahpee|Dive 50`),
		regexp.MustCompile(`(?i)FunTab ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Orange[ _-](Rise)(3[12]|5[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Orange[ _-])?Dive ?(\d+) Dual(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Orange[ _-])?Dive ?(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Orange[ _-](Daytona|Dublin|Fova|Gova|Hi 4G|Hiro|Kivo|Monte Carlo|Neva 80|Neva play|Nura|Reyo|Rise[_ ](3[034]|40|5[345])|Rono|Roya|San Francisco|Tactile internet 2|Tado|Yomi|Yumo|Zali|Mahpee)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPV[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)RC(?:501|545|555)L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RC501L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RC545L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RC555L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(OT-DVB\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LeNumero1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ORION, ([a-z0-9_ \-]+), (?:wired|wireless)|CRANE-EVB`),
		regexp.MustCompile(`(?i)ORION, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(CRANE-EVB)`),
		regexp.MustCompile(`(?i)OUKI|OK[AU][0-9]+[a-z]* Build`),
		regexp.MustCompile(`(?i)OUKI[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)([^;/)]+) Build/OUKI`),
		regexp.MustCompile(`(?i)OUKI[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(OK[AU][0-9]+[a-z]*) Build`),
		regexp.MustCompile(`(?i)OUKITEL|(?:Android 10.+ (?:C19|C22)|Android 8.+ U23|Android 7.+ (?:U1[78]|U22)|(?:C1[569]|K10000|K[46]000)(?:[ _]Pro)|K4000Pro|C1[18]_Pro|C1[0237] Pro|C2[13] Pro|C12 Plus|U15 Pro|K15_Plus|U16 Max|C11_F|U7 Max|U7 Plus|U11[_ ]Plus|U20_Plus|OK6000 Plus|WP5000|WP[58] Pro|K[46]000[ _](?:Plus|Lite)|Y4800|K10000|K7 Power|K[4-8]000| RT1| WP(?:[15-79]|1[023567])|K[37]_Pro|K13_Pro|U25_Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C1[0-9]|C2[13]|K10000|K[46]000|WP[258]|WP12|U[12]5|K[37]|K13)[ _]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OUKITEL K([37])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K10000|U16|U7)[ _]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U20|K[46]000|U7|U11|OK6000|K15|C12)[_ ]?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K4000)[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K10000)[_ ]Mix(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K7 Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y4800|K10000|K[4-8]000|WP5000|[CU]2|U1[078]|U2[23]|C19|C22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (RT1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OUKITEL)? (WP\d+|C11_F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OUKITEL; ([^;]+);`),
		regexp.MustCompile(`(?i)OV-[a-z]+(?:[^;(/]*)[();/ ]|Qualcore 10(?:10|27)|Livecore7032|Vertis 5021 Aim|Vertis 4004 You|OV1027[34]G`),
		regexp.MustCompile(`(?i)OV-Vertis[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)OV1027([34])G`),
		regexp.MustCompile(`(?i)(OV-[a-z]+(?:[^;(/]*))[();/ ]`),
		regexp.MustCompile(`(?i)(?:OWWO[ _]?(?:[1457]S|Q[78])|CARNIVAL B5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OWWO[ _]?([1457]S|Q[78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CARNIVAL B5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Oysters|T84ERI[ _]3G|T72HM(s_)?3G|T102MS_3G|T102ER3G|(T74HMi|T84Bi)[_ ]4G|T74MR4G|T84Ni[_ ][34]G|Pacific(?:[ ]?800i|E)|T104B_[34]G|IndianV|T72HA_3G|T12V? 3G|T74D_3G|T74N_3G|T74SC_3G|T74Mai_3G|T104MBi_3G|T104SCi_3G|T104ER4G|Atlantic4G|AntarcticE|T7V 3G|Pacific(?:VS?|4G)`),
		regexp.MustCompile(`(?i)Pacific[ ]?800i`),
		regexp.MustCompile(`(?i)(?:Oysters[_ ])?Pacific(VS?|4G)`),
		regexp.MustCompile(`(?i)Oysters ((?:Arctic|Indian|Atlantic|Pacific)[^/;]+) Build`),
		regexp.MustCompile(`(?i)(T84ERI[ _]3G|T72HM(s_)?3G|(?:(T74HMi|T84Bi)[_ ]4G)|T84Ni[_ ][34]G)`),
		regexp.MustCompile(`(?i)(T74MR|T102MS|T104B|T74SC|T74[DN]|T72HA|T102ER|T104SCi|T104MBi|T104ER|T7V|T12V?)[ _]?([34]G)`),
		regexp.MustCompile(`(?i)Oysters ([^/;]+)( Build|\))`),
		regexp.MustCompile(`(?i)OYYUT11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ozone HD|OzoneHD[ _](T2 WiFi|4K(?: TV)?|Fun)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-0[143]P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-04P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-03P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-01P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Art-PCB-V116|Bee-PCB-V216|Clap-PCB-I316|PCB-T(103|715)`),
		regexp.MustCompile(`(?i)PCD[ ]?50[689]`),
		regexp.MustCompile(`(?i)PCD[ ]?(50[689])`),
		regexp.MustCompile(`(?i)(?:POCO[ _](?:X[23](?:_SN)?|F2 PRO|M[32]|F3)|M2010J19C[GI]|M2007J20C[ITG]|M2012K11AG|M2006C3MI|M2004J19PI|M2102J20S[GI]|M2103K19P[IGY]|21091116AG|21061110AG|M2104K10I|211033MI|2201117PG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCO X2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K11AG|POCO F3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2004J19PI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2103K19P[IGY]|M3 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCO M([23]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2010J19C[GI]|POCO M3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J20C[GT]|POCO X3 NFC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2102J20S[GI]|X3 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J20CI|POCO X3(?:_SN)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061110AG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2104K10I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3MI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)211033MI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCO F2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P9000_MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P9000_MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KING 7S?)`),
		regexp.MustCompile(`(?i)PULID[ _]|F1[01357]\+? Build`),
		regexp.MustCompile(`(?i)F(1[01357]\+?) Build`),
		regexp.MustCompile(`(?i)PULID[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)PULID[ _]([a-z0-9_]+)\)`),
		regexp.MustCompile(`(?i)(PB1009|M10[45]00|M7500|M7600-D|DAYTONA-G12|MONZA-T7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PB1009|M10[45]00|M7500|M7600-D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Pre|Pixi)/(\d+)\.(\d+)|Palm|Treo|Xiino|PVG100(?:E_RU|E)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:Pre|Pixi))/(\d+\.\d+)`),
		regexp.MustCompile(`(?i)Palm(?:[ \-])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Treo([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Xiino|Palmscape`),
		regexp.MustCompile(`(?i)Panasonic|PANATV[0-9]+|Viera/|(?:P902i|P-0[28]D|FZ-B2D|FZ-[NX]1|DMC-CM1|P-01J|P-0[23]E|P55 Max)(?:[);/ ]|$)|Eluga[ _]|P55 Novo 4G`),
		regexp.MustCompile(`(?i)P-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P-03E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eluga[ _]I7(?:_EE)?`),
		regexp.MustCompile(`(?i)Eluga[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Eluga[ _-]([^);/]+)[;/)]`),
		regexp.MustCompile(`(?i)(DMC-CM1)`),
		regexp.MustCompile(`(?i)P-02D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FZ-[XN]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FZ-B2D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P902i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PANATV[0-9]+|Viera/`),
		regexp.MustCompile(`(?i)(43D1200|(?:32|43)D1270|32D1280)`),
		regexp.MustCompile(`(?i)PANASONIC, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Panasonic[ _\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 (P[a-z0-9]+)`),
		regexp.MustCompile(`(?i)P-08D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pantech|P[GN]-|PT-[a-z0-9]{3,}|TX[T]?[0-9]+|IM-[a-z0-9]+(?:[);/ ]|$)|ADR910L`),
		regexp.MustCompile(`(?i)Pantech[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Pantech_([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(P[GTN]-[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(TX[T]?[0-9]+) Pro`),
		regexp.MustCompile(`(?i)(TX[T]?[0-9]+)`),
		regexp.MustCompile(`(?i)(IM-[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Xplorer_2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pelitt[ _]`),
		regexp.MustCompile(`(?i)Pendoo|A5X MAX(?:[\.-]\w+)?\.01\.d4`),
		regexp.MustCompile(`(?i)Pendoo ?(T95Z|X10) PLUS`),
		regexp.MustCompile(`(?i)Pendoo ?X8PRO+`),
		regexp.MustCompile(`(?i)Pendoo[ \.]?(X9[29]|T95)`),
		regexp.MustCompile(`(?i)A5X MAX(?:[\.-]\w+)?\.01\.d4`),
		regexp.MustCompile(`(?i)Pentagram|Quadra|Monster X5`),
		regexp.MustCompile(`(?i)(?:PENTAGRAM[_ ])?EON[_ ]PRIX`),
		regexp.MustCompile(`(?i)Quadra 7(?: UltraSlim)?`),
		regexp.MustCompile(`(?i)Monster X5?`),
		regexp.MustCompile(`(?i)Quadra ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)Pentagram ?TAB ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)Pentagram ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)(PHICOMM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C630 \(CLUE L\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E653\(ENERGY L\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHICOMM ENERGY 3\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLUE (2S|M|C230)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHILCO |(PCS0[12]|PH350B|PTB[78]R|PTB7PAP_PTB7PAB_PTB7PAR|Hit Max|Hit P10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PCS0[12]|PH350B|Hit Max|Hit P10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PTB[78]R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHILCO Android TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PTB7PAP_PTB7PAB_PTB7PAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Philips|NETTV/|Xenium S[25]66|(?:PI3210G|TPM1[79]1E|70PUH6774_96|QM152E|QM16[134]E|TLE(?:821L|722G)|AND1E|S397|W5510|S410J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?Xenium[ _](S[25]66|V787)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?(X818|X588)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?(S397|W5510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AND1E(?: TV)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PI3210G)`),
		regexp.MustCompile(`(?i)(TPM1[79]1E)`),
		regexp.MustCompile(`(?i)QM152E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QM16[134]E)`),
		regexp.MustCompile(`(?i)(70PUH6774)_96`),
		regexp.MustCompile(`(?i)(TLE821L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TLE722G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S410J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Philips, BDP([0-9]{4})`),
		regexp.MustCompile(`(?i)Philips, ([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)(NETTV/[0-9\.]{5})`),
		regexp.MustCompile(`(?i)Philips-FISIO ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Philips[ _-]?([a-z0-9\-@]+)`),
		regexp.MustCompile(`(?i)(?:PHONEMAX[_ ](?:Saturn(?:[_ ]X)?|Mars|Venus X)|Rocky 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Saturn[_ ]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Saturn(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Mars(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Venus X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rocky 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pipo[_ ]|PipoM9Pro`),
		regexp.MustCompile(`(?i)Pipo[_ ]([TP]9)`),
		regexp.MustCompile(`(?i)PIPO[_ ](X10|X9S)`),
		regexp.MustCompile(`(?i)Pico (G2 4K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pioneer|.*; R1 Build|(?:dvr700pi|XDP-300R|F9212[AB])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i).*; R1 Build`),
		regexp.MustCompile(`(?i)(XDP-300R)`),
		regexp.MustCompile(`(?i)(F9212[AB])`),
		regexp.MustCompile(`(?i)Pioneer, ?([a-z0-9_ \-]+), ?(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Pioneer[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Pioneer[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)Infineum[_ ](Z4?5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixelphone S1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixus|(hiPower|Touch_7_3G|Ride[_ ][34]G|Play[ _]Three[ _]v(?:[234].0|3.1))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ride[_ ]([34])G`),
		regexp.MustCompile(`(?i)Play[ _]Three[ _]v([234].0|3.1)`),
		regexp.MustCompile(`(?i)Pixus[ _]Sprint`),
		regexp.MustCompile(`(?i)(?:Pixus_)?Touch[ _]7[ _]3G`),
		regexp.MustCompile(`(?i)Pixus[ _]hiMax`),
		regexp.MustCompile(`(?i)Pixus[ _]Blast`),
		regexp.MustCompile(`(?i)Pixus[ _]Joker`),
		regexp.MustCompile(`(?i)Pixus Blaze 10.1 3G`),
		regexp.MustCompile(`(?i)(Cosmo_Communicator)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOMO([0-9]|[ ]?mini[ ]?(?:S|3GS)?)`),
		regexp.MustCompile(`(?i)MOMO([0-9][^);/]*) Build`),
		regexp.MustCompile(`(?i)MOMO([0-9][^);/]*)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)PLUM[ _]`),
		regexp.MustCompile(`(?i)Pluzz[_-](Z552|PL5[05]10|PL4010|PL501[46]|Elite_Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook[ _/]`),
		regexp.MustCompile(`(?i)A7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A10 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURFpad2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook SURFpad 3 \(([\d]+).([\d]+)["]?\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURFpad 4 ([LMS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook/(515|614|62[23467]|63[012]|64[01]|650|740|801|840)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POV_TV|POV_TAB|MOB-5045`),
		regexp.MustCompile(`(?i)POV_TAB[_-]NAVI7[_-]3G[_-]M`),
		regexp.MustCompile(`(?i)POV_TAB-PROTAB25XXL8?`),
		regexp.MustCompile(`(?i)POV_TAB-PROTAB([a-z0-9]+)`),
		regexp.MustCompile(`(?i)POV_TAB-P?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Polar[_ ](P24L51T2CSM|P40L33T2CSM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PolarLine[_ ](32PL13TC-SM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Polaroid|(?:PMID|MIDC)[0-9a-z]+(?:[);/ ]|$)|MID(?:1014|0714)|PRO[VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z])|(?:P(?:400[56]|4526|500[56]|502[56]|504[67]|552[56])A|P902/A900|PSPC(?:505|550|[MZL]20A0|K2[01]NA)|SIGMA 5|MIDS145PXE|MIDS747PX|MID4004JBL|MIDS185PR|PSPTD21NA|POMDTB006|PSPCL30A0|PSN-H116)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PSPC(505|550)`),
		regexp.MustCompile(`(?i)PRO4611(?:PR201)?`),
		regexp.MustCompile(`(?i)SIGMA 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO([VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z]))`),
		regexp.MustCompile(`(?i)POLAROID, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(MID(?:1014|0714|S145PXE|S747PX|4004JBL)|POMDTB006)`),
		regexp.MustCompile(`(?i)((?:PMID|MIDC)[0-9a-z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P902/A900)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Polestar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POLY ?PAD`),
		regexp.MustCompile(`(?i)POLY ?PAD[_ \.]([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POLY ?PAD[_\.]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)POLYTRON|W8480|W7430|PW1100S|W7550|W7531|W8570|R2401`),
		regexp.MustCompile(`(?i)POLYTRON[ _]R1500`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2402`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2403`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2406`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2407`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2452`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2457`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2501`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2507`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2509SE`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2509`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R250A`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2506`),
		regexp.MustCompile(`(?i)POLYTRON[ _-](?:R3450|W1400)`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R3500`),
		regexp.MustCompile(`(?i)POLYTRON[ _]L501`),
		regexp.MustCompile(`(?i)POLYTRON[ _]P520`),
		regexp.MustCompile(`(?i)POLYTRON[ _]P552`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G501`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G502`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G503`),
		regexp.MustCompile(`(?i)POLYTRON[_ ]?[ _]4G550`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G551`),
		regexp.MustCompile(`(?i)POLYTRON[ _]T7800`),
		regexp.MustCompile(`(?i)POLYTRON[ _]T7700`),
		regexp.MustCompile(`(?i)POMP[ _-]`),
		regexp.MustCompile(`(?i)POMP[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)POMP[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:YPY_S450|Twist 4(?: Fit|Pro)?|T1085|Positivo Q20|M10 4G PRO X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Positivo (Q20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 4 (Fit|Pro)`),
		regexp.MustCompile(`(?i)(?:T1060B|S455|Positivo (?:Twist|Ypy|Mini I)|Twist[ _](?:\(2018\)|2 (?:Fit|Pro)|Mini|Tab|Metal(?: 32GB)?|Max|XL|SE|[23SM]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S455(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist \(2018\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Metal 32GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Metal(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist[ _]Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Fit(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist XL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Positivo )?Twist ([23SM])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Positivo )Mini I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1060B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Positivo Ypy (AB7F|AB10H|L1050E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Tab(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AXE_II|186HS2080531|186HS1050531|186HS1050232|186FT1080231|185FT5050231|PREMIO[ _](?:S50|P420|P451))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PREMIO[ _](S50|P420|P451)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prestigio 5500 DUO|(?:PMP|PAP|PMT|PSP|PGPS)[0-9]+[a-z0-9_]+(?:[);/ ]|$)|Muze C3`),
		regexp.MustCompile(`(?i)PSP(5517|550[578])DUO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Muze C3|PSP3504DUO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGPS7799CIS08GBPG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGPS7797(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PMT(3118|38[74]8|3[12]01|3[12]57|778[18]|5588|5791|577[18]|4327|3768)[_ ]([34])G`),
		regexp.MustCompile(`(?i)PMT(1177|3208|3618|31[357]1|1157|1196|3[10]96|3[17]61)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PMT(4638|4311|413[17]|411[178]|3771)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PMT(3231|4231|4667|38[3678]1)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PSP7546DUO([ _][A-Z]{2})?`),
		regexp.MustCompile(`(?i)PSP7610DUO([ _][A-Z]{2})?`),
		regexp.MustCompile(`(?i)(PM[PT][0-9]+[a-z0-9_]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:PAP|PSP)[0-9]+[a-z0-9_]+(?: DUO)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PD\-(3127NC|3127) Build`),
		regexp.MustCompile(`(?i)PD\-3127NC Build`),
		regexp.MustCompile(`(?i)PD\-3127 Build`),
		regexp.MustCompile(`(?i)Primux|SirocoY`),
		regexp.MustCompile(`(?i)Primux_ioxphone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxDelta6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxKappa(P50[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxKappa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_Beta2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_?Omega([57])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxUP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) PrimuxZonda4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_Siroco6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SirocoY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRIXTON |(T7012Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRIXTON (C18)`),
		regexp.MustCompile(`(?i)(T7012Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLT([^;/]+) Build|PLT(?:777[45]|9774|1074)G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLT([^;/]+) Build`),
		regexp.MustCompile(`(?i)PLT(777[45]|9774|1074)G`),
		regexp.MustCompile(`(?i)ProVision (S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Proline_|(?:H10882M-TN|H10888M|H1010)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Proline[_ ]FalconXL`),
		regexp.MustCompile(`(?i)(H10882M-TN|H10888M|H1010)`),
		regexp.MustCompile(`(?i)(MPC-(?:[57]0|65)|MPC-110DSP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PROTRULY[ _](D[78]|V10S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QBOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qtouch_|[ ](Q09|QS701|Q05A|QS31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Qtouch[_ ])?[ ]?(Q09|QS701|Q05A|Q85|QS31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QPHONE[_ ](?:10.1|9.[12]|7.1|5.[246])|QTAB10EW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QPHONE[_ ](?:10.1|9.[12]|7.1|5.[246]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QMobile|QTab|Q-?Smart|(?:E2 Noir|Noir X1S|LUNA PRO|NICE S|JazzX JS(?:[27]|10)(?: PRO)?|LT[57]00[ _]PRO|LT950|Q Infinity|Hot 5|Hot Pro 2|VITA S|i7i 2020|i10[ _]20(?:20|19)|Z12 PRO| GLi)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JazzX JS(2|10)`),
		regexp.MustCompile(`(?i)A600(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT([57]00)[ _]PRO`),
		regexp.MustCompile(`(?i)i(\d+)i 20(20|1[89])`),
		regexp.MustCompile(`(?i)i10[ _]20(20|19)`),
		regexp.MustCompile(`(?i)Q Infinity ([FCB])`),
		regexp.MustCompile(`(?i)(LT950)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLi Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) GLi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QMobile ENERGY (X[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QTab[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)QTab[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:QMobile|Q-?Smart)[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(QMP_K8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qilive [0-9][^;/]*|Q(7S5[5]?IN4G|7T10INP|T19101HV|8T10IN|8S55IN4G2|8S[56]IN4G|9T9IN|9T(?:7|10)IN4G|9S55IN4G|10S5[37]IN4G|10S[56]IN4G|10S[56]IN4GR|9S5IN4G|6T7IN)`),
		regexp.MustCompile(`(?i)Q10S5IN4G[R]?`),
		regexp.MustCompile(`(?i)(QT19101HV)`),
		regexp.MustCompile(`(?i)Qilive (1\d+[^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Qilive ([0-5][^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Qilive ([0-5]*)/`),
		regexp.MustCompile(`(?i)Qilive ([6-9][^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i) Passion[ _]P|Hynex plus|Stark K1|Hynex H[356]|Levin V[12]`),
		regexp.MustCompile(`(?i)Passion[ _](P[0-9]+)`),
		regexp.MustCompile(`(?i)Hynex plus( 2)?`),
		regexp.MustCompile(`(?i)Hynex (H[356])\+`),
		regexp.MustCompile(`(?i)Hynex (H[35])`),
		regexp.MustCompile(`(?i)Levin (V[12])`),
		regexp.MustCompile(`(?i)Qtek[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:Quantum (?:Fit|Five|UP|MUV (?:PRO|UP)|Go|Mini|V|You [2E])|Q20|LIO\+|Q-TITANO(_007i|-H2)?|Q-Pulse70M|Q-Wave(?:101|71M))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum (Fit|Five|Go|Mini|V|You [2E]|Q20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum MUV PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum MUV UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-TITANO[ _-](BOS|X|M1|007i|H[12]|AK47)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Pulse70M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Wave(101|71M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cronos|MINERVA(?:_32GB)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUMO[ _]?|(?:Quest[ _]?(?:408|410|45[56]|50[679])|Vega[ _]?78[23]|Sirius[ _]?(?:1001|890))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _]?)?Vega[ _]?(78[23]|8002)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Yooda(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sirius[ _]?(1001|890)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _]?)?(Sirius 101-4G 8GB Black|Altair 701 8GB Black|Altair 71 4GB Black|Altair 700[24]|Altair 706|Vega_803i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _])?Quest[ _]?(35[34]|40[268]|410|45[2568]|47[46]|50[679]|5[137]0|574|600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R-TV BOX[ _]?(MINI\+|X99|X10 PRO|[RXS]10)`),
		regexp.MustCompile(`(?i)RCT([^;/]+) Build|RCA RLTP4028|RC7T3G21|RCT6B06P23|RCT6613W23P|RCT6513W87|RCT6973W43(?:MD)?|RCT6703W12|RCT(?:6A06P22|6603W47M7|6303W87(?:DK|M)|6773W22B|6203W46L|6873W42M|6K03W13|6876Q22N|6A06Q22)`),
		regexp.MustCompile(`(?i)RCT6873W42M|RCT6876Q22N?`),
		regexp.MustCompile(`(?i)RCT6973W43(?:MD)?`),
		regexp.MustCompile(`(?i)RCT6703W12|RCT6B06P23`),
		regexp.MustCompile(`(?i)RCT(?:6303W87(?:DK|M)|6K03W13)`),
		regexp.MustCompile(`(?i)RCT([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)RC([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:H1A1000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BB10;|BlackBerry|rim[0-9]+|PlayBook|STV100-[1234]|STH100-[12]|BBA100-[12]|BBB100-[1234567]|BBD100-[126]|BB[EF]100-[123456789]|BB[CGH]100-1`),
		regexp.MustCompile(`(?i)BBA100-[12]`),
		regexp.MustCompile(`(?i)BBB100-[1234567]`),
		regexp.MustCompile(`(?i)BBD100-[126]`),
		regexp.MustCompile(`(?i)BBE100-[123456789]`),
		regexp.MustCompile(`(?i)BBF100-[1234567]`),
		regexp.MustCompile(`(?i)(?:BlackBerry )?(9000|9790)`),
		regexp.MustCompile(`(?i)STV100-[1234]`),
		regexp.MustCompile(`(?i)STH100-[12]`),
		regexp.MustCompile(`(?i)BB10; ([a-z0-9\- ]+)\)`),
		regexp.MustCompile(`(?i)PlayBook.+RIM Tablet OS`),
		regexp.MustCompile(`(?i)BlackBerry(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)rim([0-9]+)`),
		regexp.MustCompile(`(?i)(8520|8530|9220|9320|9360)`),
		regexp.MustCompile(`(?i)(9800|9860)`),
		regexp.MustCompile(`(?i)FORTIUS QUAD 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Shock ?(?:5|5\.5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Shock ?(5|5\.5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZR01|3917JR|P710|C330)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ramos ?([^/);]+)(?: Build|[);])|(?:MOS1(?:max)?|W22PRO 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ramos[ _])?(R10|R9|M7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MOS1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ramos ?([^/;]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Raspberry (Pi [0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RAVOZ[ _](Z[57] (?:Lite|Pro)|Z[3-7]|R[478])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Allure[_ ](?:Ultra(?:[_]Curve)?|Secure|Admire|Rise)|Opulent X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Readboy[ _-]`),
		regexp.MustCompile(`(?i)Readboy[ _-]C18Max`),
		regexp.MustCompile(`(?i)Readboy[ _-]C(\d+)Pro`),
		regexp.MustCompile(`(?i)Readboy[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Realme[ _]|(?:RMX(?:19(03|4[1235]|19|9[23]|2[1579]|[01379]1|73)|20(?:[025-7]1|42|[0357]2|03|2[257]|63|7[56]|8[1356]|[2-5]0)|21(?:0[13]|1[27]|[12]1|4[24]|5[156]|6[13]|7[036]|8[059]|9[345])|220[0125]|18(0[13579]|11|3[13]|2[1257]|[45]1|53|45)|32(?:0[13]|42|[346]1)|30(?:[3468]1|4[23]|9[23]|63|85)|31(?:2[12]|15|42|9[1357]|51|6[16]|71)|3125|33[57]0|330[01]|3357|3393|336[036]|326[23589]|3235|3430|3472|34[69]1|33[86]1)|(?:OPPO[ _]?)?CPH1861|RMP210[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?RMX3142(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1861(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX180[59]`),
		regexp.MustCompile(`(?i)RMX180[137]`),
		regexp.MustCompile(`(?i)RMX(1833|182[125])`),
		regexp.MustCompile(`(?i)RMX185[13]`),
		regexp.MustCompile(`(?i)RMX190[13]|Realme X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX199[12]`),
		regexp.MustCompile(`(?i)RMX1931|Realme X2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2176(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2121(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX1921|Realme XT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX19(1[19]|27)`),
		regexp.MustCompile(`(?i)RMX197[13]`),
		regexp.MustCompile(`(?i)RMX203[02]`),
		regexp.MustCompile(`(?i)RMX200[13]`),
		regexp.MustCompile(`(?i)RMX204[02]`),
		regexp.MustCompile(`(?i)RMX206[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX215[15]`),
		regexp.MustCompile(`(?i)RMX1925(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX1811(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX194[1235](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX202[1207](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2185(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2189(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2180(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX219[45](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX306[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX320[13]`),
		regexp.MustCompile(`(?i)RMX326[123]`),
		regexp.MustCompile(`(?i)RMX319[13]`),
		regexp.MustCompile(`(?i)RMX319[57]`),
		regexp.MustCompile(`(?i)RMX326[589]`),
		regexp.MustCompile(`(?i)RMX330[01]`),
		regexp.MustCompile(`(?i)RMX3031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3357(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX336[0136]`),
		regexp.MustCompile(`(?i)RMX3350(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX216[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2193(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3171(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2156(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX1831(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX(?:20(?:51|[2]5)|2144)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2052(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX207[56](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2072(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX(2142|2081)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX208[56]`),
		regexp.MustCompile(`(?i)RMX346[12]`),
		regexp.MustCompile(`(?i)RMX211[12]`),
		regexp.MustCompile(`(?i)RMX220[01]`),
		regexp.MustCompile(`(?i)RMX312[12]`),
		regexp.MustCompile(`(?i)RMX304[123]`),
		regexp.MustCompile(`(?i)RMX309[23]`),
		regexp.MustCompile(`(?i)Realme[ _]([1-9])[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP210[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wizpad_)?Valuer_V8`),
		regexp.MustCompile(`(?i)(?:Wizpad_)?Valuer_V8`),
		regexp.MustCompile(`(?i)(?:reeder[_ ](?:3G_Tablet|A7iC|A[78]i[_ ]Quad|A8i Q2|M8 Plus|[TM]8|M10 Plus|P11SE)|M10SPlus|P12Curve|P13_Blue_Plus|P13_Max_Blue|P13[_ ]Blue[_ ]Ma(?:ks|x)|P13_Blue|P13 Blue 2021|M7Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)reeder[_ ](3G_Tablet|A7iC|A[78]i[_ ]Quad|A8i Q2|M8 Plus|[TM]8|M10 Plus|P11SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P13[_ ]Blue[_ ]Max|P13_Max_Blue`),
		regexp.MustCompile(`(?i)RD86E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RD86E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Revo[_ ](?:Youplus|555)|RevoYou`),
		regexp.MustCompile(`(?i)Revo[ _]?(You|555)`),
		regexp.MustCompile(`(?i)MK(80[28][^/;]*) Build`),
		regexp.MustCompile(`(?i)Rinno (R(?:400|505))`),
		regexp.MustCompile(`(?i)(RMD[-_](?:10(?:2[689]|30|5[089])|1121|75[017]|726|85[57]|870)|RMP-(?:450|50[56]|530|600))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMD[-_](10(?:2[689]|30|5[089])|1121|75[017]|726|85[57]|870)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP[-_](450|50[56]|530|600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RITZVIVA[_ ]S500C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIVIERA[ _]`),
		regexp.MustCompile(`(?i)RIVIERA[ _](F23|U963)`),
		regexp.MustCompile(`(?i)PHANTOM (?:PZ|RX)|RHYTHM RX`),
		regexp.MustCompile(`(?i)PHANTOM PZ ?(2[05]|[13]5|4|18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHANTOM RX ?(298|387)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RHYTHM RX ?([15-9]0|[467]5|[12]80|150|[14]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IO (?:Pro|3D|Light)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Roku(?:OS)?/(?:DVP|Pluto)?-?|QSP; Roku`),
		regexp.MustCompile(`(?i)Rombica[_ ]|(SSQ-A0500|Smart Box v[0-9]+|Smart Box (?:[ADBXZ]1|[GDFQ]2|A3|H4))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SSQ-A0500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Rombica[_ ])?Cinema4K_v01`),
		regexp.MustCompile(`(?i)(Infinity K8|Smart Box (?:v00[3-9]|Quad|Ultra HD v002|4K V001|[ADBXZ]1|[GDFQ]2|A3|H4)|TV (?:Ultima|Fly))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RM(D)?[-_](974R|600|550|790)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rover ([0-9]+)`),
		regexp.MustCompile(`(?i)(?:Rover[ ]?Pad|RoverPhone|Sky 7.85 3G|Pro_Q(?:8|10)_LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RoverPhone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro_Q(8|10)_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Rover[ ]?Pad)?sky 7.85(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RoverPad (10.4|Air S70|9.7 3G|Sky 9.7|3W A73|3W7|3WT70|3W9.4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RQ[ -](Regal R8|713S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RQ (Regal R8)`),
		regexp.MustCompile(`(?i)RQ-(713S)`),
		regexp.MustCompile(`(?i)(RugGear|RG(?:310|500|65[05]|702|7[13]0|850))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RG[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ruio[ _]|M671M4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ruio[ _](S4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ruio[ _](S5)Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Runbo|F1-TT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Runbo[ _-]?(X5-W|F1 Plus|[PF]1-TT|F1-EN|[FH]1|TT|Q5-S|X5-King|X6|Q5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RYTE U55 LTE|RT701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RYTE (U55 LTE)`),
		regexp.MustCompile(`(?i)(RT701)`),
		regexp.MustCompile(`(?i)S-TELL|(?:M630|M55[78]|P760|M555i|M655)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P760)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S-TELL[ _])?M([0-9]{3}|555i|M655)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S2TEL[ _-]`),
		regexp.MustCompile(`(?i)S2TEL-(Q8)`),
		regexp.MustCompile(`(?i)(?:GO[35]E|5101J|GO3C(?: Plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5101J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO3C Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO3C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GO[35]E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem|StarTab`),
		regexp.MustCompile(`(?i)StarXtrem II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarXtrem ?([3-6])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarXtrem(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail[ _]?([1-9])[ _]([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail[ _]?([1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT II Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarText II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarText(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarNaute II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARNAUTE ?([1-4])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarNaute(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem)[^;/]*) Build`),
		regexp.MustCompile(`(?i)BHX-UH200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Modern[ _](?:S10?|S[3679]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Atractivo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLE[_ ]POP[_ ]S([45]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLO[_ ](Aspire(?: M)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Gravity Max|GRAVITY 2|GRAVITY 4G_2019|GRAVITY_OCTACORE|SPC (?:GEN|SMART)|SPC_ALIEN(?:_STICK)?|SPC Glow9.7|Lightyear)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPC Glow9.7`),
		regexp.MustCompile(`(?i)SQOOL-V(41?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AERIAL PLUS|BLOCK_MINI|BLOCK GO|BLOCK 3|Fractal|Joy Pro|Origins Pro|SLAY II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STG[ _](A[12] Pro|[AS]1|X[1-3]|X20|S[1-3]0|[BC]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK[_ ]|Storm 2e Pluz`),
		regexp.MustCompile(`(?i)STK[_ ]([^/;]+) Build`),
		regexp.MustCompile(`(?i)STK[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SUNWIND[_ ]|SUN[-_]LED\d+|(?:SKY 9 [EA]\d+ 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY ([79]) ([EA]\d+) 3G`),
		regexp.MustCompile(`(?i)SUN[-_]LED(\d+\w\d+)`),
		regexp.MustCompile(`(?i)(?:SCHR9G[RL]|PRA(?:U8|100|557|507)|ZUR(?:722M|70016W?|700[RW]|805A))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCHR9G[RL]`),
		regexp.MustCompile(`(?i)PRA(U8|100|557|507)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZUR(70016W?|700[RW]|805A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEON[_ ]RAY`),
		regexp.MustCompile(`(?i)SAGEM|portalmmm/2.0 (?:SG|my)`),
		regexp.MustCompile(`(?i)SAGEM-(my[a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)SAGEM ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAGEM-([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 ((?:SG|my)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)Sagemcom_Broadband_SAS,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:STS570)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(STS570)`),
		regexp.MustCompile(`(?i)SAMSUNG|lineage_j5y17lte|FamilyHub|Maple |Gear Live|(?:SEC_)?SC-(?:001|01[FGHKLM]|02[CGHJKLMF]|03[EFJKL]|04[EFJL]|05[GL]|(?:4[12]|5[1-4])A|5[1-5]B)|N[57]100|N5110|N9100|S(?:CH|GH|PH|EC|AM|HV|HW|M)-|SMART-TV|GT-|Galaxy|(?:portalmmm|o2imode)/2\.0 [SZ]|sam[rua]|vollo Vi86(?:[);/ ]|$)|(?:OTV-)?SMT-E5015|ISW11SC|40[34]SC|SC(?:V3[1-9]|V4[0-9]|51Aa|-56B|T21|G0[1-9]|G1[012]|L2[234])(?:-[uj])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OTV-)?SMT-E5015`),
		regexp.MustCompile(`(?i)Samsung, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-)?N5100`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T677(?:[ATV]|N[KL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T670(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-)?N5110`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N5120`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT|SM)-N8000`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N8010`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N8020`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P1000M?|SCH-I800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P3100B?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P311[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5100|SCH-I915`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P511[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T217T`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5210`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5220`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6201`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6810`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P7100`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P75[01]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P600`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P60[12]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P605|P607T)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P901`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P905`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P587|P588C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P583(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P205(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T307U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T297`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T505[CN]?|T507)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T225`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T11[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X205`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T830[X]?|T837R4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T837P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T835[CN]?|T837[VTA]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T725[CN]?|T720X|T727(?:R4|[AUV])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T720(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T865N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T867(?:R4|[VU])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P615[CN]?|P617)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P610X?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T860X?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T866N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T111`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T116(?:BU|NU|NY)?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T2105|T212)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T210R?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T21(?:[15]|7[AS])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T230(?:NU)?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T23[15]|403SC`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T239|T237[PV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T232(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T312`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T311`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T315`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T33[215]|T337[AVT])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T520`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T53[15]|T537[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T536(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T320`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T325`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T525`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T530(?:NU)?|T533)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T705|T707[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:T805|T807[PV]?)|SCT21)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T813|T810)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T719[CY]?|T715(?:N0|[CY])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T71[03]|T710X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T815|T817[ATW]?|T818[ATVW]?|T819[Y]?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T820`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T82[57]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T975N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T970(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T976[BN]|T978U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T870(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T875N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T878U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T735`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T736`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T733`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X906`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X806`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X706`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T280`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T285`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T3[58]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P350|T3[58]5|T357[TW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T387(?:AA|R4|VK|[TVW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T295`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T290`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P355([MY])?|T550)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P550|P555(M)?|T555)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T58[05]|P58[05])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T587[P]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T59[057]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T51(?:7P|[057])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T37[57]|T378[KLSV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T56[02]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T561`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T567V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T365(?:F0|[MY])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T395[CN]?|T397U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T390(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T575N?|T577U?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T545|T547U?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T540(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P902|P907A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-T2519`),
		regexp.MustCompile(`(?i)Family ?Hub`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G850(?:8S|[AFKLMSWXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A605K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A202K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5510`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5512`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B7510`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5801`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8000`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I8150|SM-T255S)`),
		regexp.MustCompile(`(?i)SC-01H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5830`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G357(?:FZ|M)|G310HN)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8160`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G313(?:HY|M[LUY]|[FM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G316M`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G313[HU]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G316U|G318(?:H|ML))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G9100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHV-E120S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8190`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I826[02]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G386W`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3589W`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8320`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I85[23]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3858`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G600S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I855[028]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G381[28]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8580`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8730`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:E500(?:HQ|YZ|[0FHM])|S978L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E700[09FHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I90(?:00|08|18|88)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9001`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9003`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9010`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9070`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I910[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?ISW11SC`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9103`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9105`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G730(?:W8|[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I919[025]|SCH-I435)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9515`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9295`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9300|SCH-(?:I535|I939|L710))|SC-03E`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9305|SCH-R530)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S975L|GT-I950[025]|SC-04E|SCH-(?:I545|I959|R970)|SGH-M919N?|Galaxy-S4|SHV-E300K)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9506)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHV-E330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5280`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5301`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G110[BHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5360`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6312`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G130(?:BT|HN|[EHMU])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G130BU`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6790`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6810`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6812`),
		regexp.MustCompile(`(?i)SC-04J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SC-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7275`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7500`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-S7560|SCH-I699)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7390`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7580`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I739`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-S7562|SCH-I919)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7582`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G31[36]HU|G313HZ)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7710`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G388F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G389F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G390[FWY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G398FN`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G715(?:FN|U1|[AUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G889(?:YB|[AFG])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G525F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8500`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8530`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8600`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5380`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7250`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5250`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5780`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7230`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:C101|C105([AL])?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:C111(M)?|C115)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G318[HM]Z`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G355(?:6D|[89HM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G350`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G360[FH]?|S820L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G361[FH]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G386F|G3518(?:_TD)?|G3586V)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3568V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G5108Q?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3815`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G9009D`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G900FD`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G900|G906[KLS]|S902L|S903VL)|Galaxy-S5|SCL23|SC-04F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G901F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G870[AFW]|SC-02G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G903[FMW]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G860P`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G920(?:F[DQ]|W8|[089AFIKLPRSTVX])?|SM-S906L|SM-S907VL)|SC-05G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G890A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G925[0ADFIKLPRSTVWX]|SCV31|404SC`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G928(?:7C|N0|R4|W8|[07ACFGIKLPSTVX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G930(?:AZ|FD|R[467]|T1|V[CL]|W8|[0AFKLPRSTUVX8])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G935(?:R4|W8|[0AFKLPSTUVX])|SC-02H|SCV33`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G891A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G950[08FNUW]?|SCV36|SC-02J`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G8750`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G892[AU]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G955[0AFKLNPRTUVWX]?|SCV35|SC-03J`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G960[0FNUWX]?|SCV38|SC-02K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G965[0FNUWX]|SCV39|SC-03K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:G973|G977[BNPTU])|SCV41|SC-03L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S10 Lite|G770(?:U1|F))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G975[08FUNWX]|SCV42|SC-04L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G970(?:U1|[08FUNWX])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G980F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G981(?:U1|[0BNUVW])|SCG01|SC-51A|SC51Aa`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G780`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G781(?:U1|[0BNUVW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G988(?:U1|[0BNQUW])|SCG03`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G985F|SCG02`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G986(?:U1|[0BNUW])|SC-52A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G991(?:U1|[0BNWQU])|SCG09`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G990`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SC-51B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G998(?:U1|[0BNUW])|SC-52B)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G996(?:U1|[0BNWU])|SCG10`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S901(?:U1|[0BENUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S908(?:U1|[0BENUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S906(?:U1|[0BENUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F700(?:U1|[0FNUW])|SCV47`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F707(?:U1|[0BNUW])|SCG04`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I829`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SCH-R740|SGH-S730)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-S738`),
		regexp.MustCompile(`(?i)vollo Vi86(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G386(?:T1|T)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A716S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A015(?:DL|[TU]1|[AFGMUV])|S111DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A013[FGM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A025(?:[AFGM]|AZ)?|S124DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A037[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A035[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A032[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A022[GMF]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A260[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S115(?:DL)?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A225[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A226|SC-56B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A300(?:FU|YZ|XU|XZ|[09FGHMXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A310(?:N0|[FMXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A320(?:FL|[FXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A430F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A500(?:YZ|[9LSWY])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A500[0FGHKM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A500(?:FU|X)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A510[08FKLMSXY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A520[FKLSWX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A525`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SC-53B|SM-A526)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A528`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A600(?:AZ|FN|GN|T1|[AFGNPTUX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A605(?:[FG]N|[08FGX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G6200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A606[0Y]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A700(?:YD|[09FHKLSX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A710[08FKLMSXY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A720[FMSX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A750(?:GN|[CFGNX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A71(?:5[FW])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A725[FM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A716(?:U1|[0BUV])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A(?:530F|800[0FISXY])|SCV32`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G885[FSY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A810(?:YZ|[FS])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A8s|G887[0F])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A530[MNWX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A730[FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A900[0F]`),
		regexp.MustCompile(`(?i)SM-A9\[7\]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A920[0FXN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G885[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A9 Pro|A910[0F]|G887N)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A105[FGMN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A107[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S102DL|A102[NUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A115(?:A[PZ]|U1|[AFMUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A12(?:5[FMNUW]|7[FM])|S127DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A136(?:U1|[UW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A205(?:U1|YN|[FGSWU])|S205DL)|SC-02M|SCV46`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A215(?:DL|U1|[UW])|SM-S215DL|SC-42A|SCV49)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A217[FMN](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A202[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A207[0FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A305(?:[FGY]N|GT|[FGN])|SCV43)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A307(?:FN|GN|GT|[FG])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A315[FGN](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A325`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:A326(?:BR|U1|[BUW])|S326DL)|SCG08)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A405(?:F[NM]|S)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A305[018](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A415F|SC-41A|SCV48)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A426(?:U1|[0BNU])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A505(?:F[GN]|U1|YN|[FGNUWX])|S506DL|505FN)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A5070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A507FN`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A515[FUW]|S515DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A516(?:U1|[0BNUV])|SC-54A|SCG07)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A705(?:GM|[MYF]N|[0FUWX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A707[0F]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A805[0FNX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A908[BN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A9080`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F127G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E225F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F415F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E5260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E625`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9301I`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S120VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J100(?:FN|VPP|MU|[FGHMY])|S777C)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J105[BFHYM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J106[BFHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J120(?:ZN|[AFGHMPTW])|J05H)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J110[FGHLM]|J111[FM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J200[FGHMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J200BT`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J260AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J260([AFGMY]|T1)|S260DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J(?:210F|250[FGMNY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S367VL|S357BL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J311(?:[09]|9S)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S320VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S327VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327(?:T1|[ATW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327(?:[FP]|R4)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337R4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S337TL`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J3109`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J300H|J320(?:[ZF]N|R4|W8|YZ|[AFGHMNPVY]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J330(?:FN|[08FGLN])|J327(?:R7|U))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337(?:VPP|[AWPUV])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G400[FG]|J400[FGM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J500(?:FN|N0|[78FGHMY])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J510(?:[FGMU]N|FQ|[8FGHKLSY])|5108|G510H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J530|lineage_j5y17lte`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G570[0FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J600[FGLN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J610[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J410[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J415(?:[FG]N|[FGN])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J7[01]0(?:FN|MN|[8FHKM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J700P`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J700(?:T1|T)|J710GN|J7109)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J730[K]|J727(?:R4|[AFSU]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J737(?:R4|T1|VPP|[APSTUV])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C710F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G610[FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G611(?:FF|MT|M)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G615F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S727VL|S737TL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J7 Pro|J730(?:GM|[FG]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J701[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J720[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S767VL|S757BL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J727[PTV]`),
		regexp.MustCompile(`(?i)SM-J7\[7\]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J810`),
		regexp.MustCompile(`(?i)SM-J9\[7\] Prime`),
		regexp.MustCompile(`(?i)SM-J9\[8\] Pro`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M015[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M013F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M017F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M025F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M022[FGM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M105[FGMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M107F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M115[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M127[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:M205(?:[FGMN]|FN)|M20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M215F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M215G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M225`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:M307(?:FN|[0F])|M30s)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M305?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M315F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M325F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M326`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M317F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M405`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M426`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M515F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M526`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M625`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W201([689])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2022`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2015`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G910S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G550(?:FY|T[12]?)|S550TL|G55[01]0|G5520)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G5528`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G600(?:FY|[0F])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G610[0KLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G611[FKLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C500[0X]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C501[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C700[0X]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C701[08FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C710[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C900[08FY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z130H`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z200[FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z300H`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z400[FY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G150(?:N[0KLS])?|G155S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G16(?:0N|[05]0?|5N))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J321AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J326AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J336AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J727AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:F900[0FUW]|F907[BN])|SCV44`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F711|SCG12|SC-54B)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F916(?:U1|[0BNQUW])|SCG05`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F926|SC-55B|SCG11)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9060(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9063`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9(?:080|128)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9168`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9082`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N7000`),
		regexp.MustCompile(`(?i)(?:SC-01G|SCL24)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N935[FSLK](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:(?:GT-)?N7100|SCH-(?:I605|N719|R950)|SPH-L900)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N7105`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G710(?:2T|5[HL]|[25689KLS])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G720(?:AX|N0|[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G530(?:[689]W|[AF]Z|BT|MU|R[47]|[AFHMPTWY])|G531[FH]|S920L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G531(?:BT|[MY])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532MT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532[MG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N7502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N750[05LQ]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N9002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-9005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-N900(?:W8|[05689][VQ]?|[AKLPSTV])?|SCL22|SC-01F|SC-02F)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:N910|910U)|N9100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N916[KLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N915`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N920(?:R[467]|W8|[0ACFGIKLPSTVX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N9208`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G750(?:8Q|[9AFH])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I915[028]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I920[05]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-N930(?:R[467]|W8|[0AFKLPSTUVX])|SCV34)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-N950|SCV37|SC-01K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N960|SCV40|SC-01L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-(?:N970(?:U1|W8|[089DFJKLSUWX])|N971N)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-N770[FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N975(?:U1|XU|[0CFUWX])|SM-N976[0BVNQU]|SC-01M|SCV45)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N980(?:F/DS|F))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N981(?:B/DS|U1|[0BNUW]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N985(?:F/DS|F))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N986(?:B/DS|U1|[0BNUW])|SC-53A|SCG06)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W750V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G310R5`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-E2152`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(GT-(P|N8|N5)[0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?((?:SM-[TNP]|GT-P)[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)((?:SCH|SGH|SPH|SHV|SHW|GT|SM)-[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)Galaxy ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Galaxy ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG[\-][ ]?([a-z0-9]+[\-_][a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG;[ ]?([a-z0-9]+[\-_][a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG[ _/\-]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)SAMSUNG;[ ]?([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)SEC_SC-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SEC-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:portalmmm|o2imode)/2\.0 ([SZ][a-z0-9]+)`),
		regexp.MustCompile(`(?i)sam([rua][0-9]+)`),
		regexp.MustCompile(`(?i)(?:8312D|G(60[25]|70[3568]G?|785|803)|N83(?:-2cpu)?|N91) Build`),
		regexp.MustCompile(`(?i)G(60[25]|70[3568]G?|785|803)`),
		regexp.MustCompile(`(?i)Sansui[_ ]`),
		regexp.MustCompile(`(?i)Sansui[_ ](Switch|Play|Fun|SA4[01]|U4[56]|U3[02]|Nova)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SANTIN|(?:BiTBiZ_V58|ACTOMA ACE|DREAMPLUS03A|Candy U7 Pro|GAAMII|RS635H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BiTBiZ_V58(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAAMII G1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAAMII(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Candy U7 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DREAMPLUS03A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GreenOrange(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLASSONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)halove(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ACTOMA ACE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)monica(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POWER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GALAZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEWDUN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SANTIN[ _][#]?(Dante|Candy U7|Armor|YSL-Y7|ANT.W|N[13]|JS|S6|V9(?:[ _]Pro)?|Life Shine|ovvi|D|11 XS Max|SHUGUO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RS635H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Santin[ _#]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Sanyo|MobilePhone[ ;]`),
		regexp.MustCompile(`(?i)SCP-?6750`),
		regexp.MustCompile(`(?i)SCP-?6760`),
		regexp.MustCompile(`(?i)SCP-?6780`),
		regexp.MustCompile(`(?i)SANYO[ /_-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)MobilePhone ([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i) (TB-PO1|TB-B01|TB-G01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Seatel[ _](L2|V8[AE]|T[5-8]|R6|V[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Seeken[ _-]`),
		regexp.MustCompile(`(?i)Seeken[_ -](SG1|SJ1)`),
		regexp.MustCompile(`(?i)Seeken[_ -](ST-101)`),
		regexp.MustCompile(`(?i)Selecline[ _]|S4T7IN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S4T7IN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Selecline 10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Selenga[ _](A[134])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sencor|(?:ELEMENT[ _]?(?:(?:7|8|9\.7|10[ _]1)(?:[ _]?V[23])?|P[0-9]+|10.1 Q001)|10_1Q205)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?Element (10\.1) (Q001)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2[ _]BASIC`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT8`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT10[ _]1`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?(7Q105)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(10)_(1Q205)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?P([0-9]+)`),
		regexp.MustCompile(`(?i)Sencor[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Sendo([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Senkatel[ _]|(?:MaximusT1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Senkatel[ _](T1009|T8002|T701[12]|T9702)`),
		regexp.MustCompile(`(?i)SENSEIT[ _]?([^;/)]+)( Build|\))`),
		regexp.MustCompile(`(?i)Senwa|(?:S\-?(?:471|7[12]5|6[01]5|915|905TL|1000|5018)|V705B|LS50F| LS50?|LS5518H|LS5718|LS5018F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?471(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?905TL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?5018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5018F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?(615|7[12]5|915)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V705B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS50F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) LS50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) LS5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5518H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Senwa[ _-]*([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(AUTOID9N|CRUISE1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHARP|SBM|SH-?[0-9]+[a-z]?(?:[);/ ]|$)|AQUOS|(?:SH-M0[14-9]|SH-M1[1-7](?:-y)?|S[357]-SH|SH-[MZ](10|01)|SH-[CL]02|SH-RM(?:1[1258]|02)|SH-R?M19|SH-R10A|[34]04SH|401SH|[45]02SH|306SH|[36]05SH|70[1246]SH|80[138]SH|90[1678]SH|50[3679]SH|SHL2[125]|SHV4[0-8]|SHV3[1-9](?:[-_]u)?|FS80(?:1[08]|32|28|0[29])|TG-L900S|NP601SH|403SH|603SH|SHF3[1-4]|SHV4[035][-_]u|SW001SH|SHG0[1-6]|X4-SH|A002SH|SH-A01|DM-01[JH]|SH-D01|SH-01FDQ|A[01]01SH|606SH|FS801[56]|d-41A|NP80[567]SH|NP501SH|A00[34]SH|A102SH|IS05|SH-(?:53A|51B|H01)|LP-01|FS8014|SBM00[35]SH|SBM103SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)506SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)603SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)50[23]SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[34]04SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)606SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)507SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S3-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S5-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S7-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X4-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHG06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M07(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A003SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-54B|SHG05|SH-R?M19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG03|A004SH|SH-M17|SH-53A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-D01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M12(?:-y)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-H01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-[MZ]10|801SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-M13|906SH|SH-01M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG04|A102SH|SH-RM18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG02|A002SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-Z01|Aquos S2 4/64)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-02E|SH-01[GH]|SH-04H|SH-09D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-01FDQ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-?06D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHL2[125]|SH-M01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(203SH|30[23]SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-L02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:605SH|SH-03J|SHV39)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:701SH|SHV41|SH-M06)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-M09|SHV42|706SH|SH-03K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)803SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:908SH|SHG01|SH-M14)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M16(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-C02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHF3[1-4])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-02J|SH-04G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-02H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)30[56]SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)402SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)403SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:509SH|SH-R10A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP601SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV40|SHV3[24])(?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)702SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV3[183](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8010|SH-M08|SHV43(?:-u)?|SH-01[KL])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8016(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV46|SH-R?M11|901SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV44|808SH|SH-04L|SH-03G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8032|FS8015|SH-02M|SHV45(?:-U)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV48|907SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-RM12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-RM15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-51B|A101SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV3[57](?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TG-L900S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8002|SHV47)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SW001SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DM-01[JH])`),
		regexp.MustCompile(`(?i)NP80[56]SH`),
		regexp.MustCompile(`(?i)LP-01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(00[35]SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(103SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM200SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-08E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)d-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LC-(?:[0-9]{2})[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHARP-AQUOS|AQUOSBrowser`),
		regexp.MustCompile(`(?i)SHARP[ \-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)AQUOS[ \-]TV([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(?:SHARP|SBM)([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(SH-?[0-9]+[a-z]?|IS05)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHIFT6m)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STV[-_](40LED25S|40LED42S|32LED42S|32LED30C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHTRIH-SMARTPOS-F2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PNT-704[025])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SICO[_ ](?:PLUS|e1002)|(?:Express3-Max|SSR3-1-51-5M|SSD-1-53-13M|Mega2|Express3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SICO[_ ]PLUS2`),
		regexp.MustCompile(`(?i)SICO[_ ]PLUS`),
		regexp.MustCompile(`(?i)SICO[_ ]e1002`),
		regexp.MustCompile(`(?i)SIEMENS|SIE-|portalmmm/2\.0 SI|(?:S55|SL45i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SIE-)?(S[56]5|S40|C45|ME45|SLIK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SIEMENS[ \-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SIE(?:MENS )?[\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:SIE-)?(SL45i)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 (SI[a-z0-9]+)`),
		regexp.MustCompile(`(?i)Sigma|(X[_-]Style[ _]?Tab[_ ]A(\d+)|X[-_ ]?treme[-_ ]?PQ[0-9]{2}|X-Style_S5501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?treme[-_ ]?PQ([0-9]{2}) Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?treme[-_ ]?PQ([0-9]{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[_-]Style[ _]?Tab[_ ]A(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?Style[-_ ]S([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Silelis[ _](T-1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TangoTab|Presto[ )]|PicassoTab_X|Ultimax|Valumax|S72-B|SX2W`),
		regexp.MustCompile(`(?i)TangoTab_(\d+)`),
		regexp.MustCompile(`(?i)(NP602SI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Singtech|(?:Sapphire[_ ](?:H50S|H7S?|H90)|Infinity_I(?:1|_Mix))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sapphire[_ ](H50S|H7S?|H90)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Singtech[ _](Q2|S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity_I1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity_I_Mix(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Siragon|(?:SP-(?:5[0124]50|5400))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Siragon[_ ])?(SP-(?:5[0124]50|5400))`),
		regexp.MustCompile(`(?i)(?:FINNEY U1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SKY|Elite|Fuego)[_ ][3-7]\.[05](?:[A-Z]{1,2})?|Elite[ _](?:5_0T|M45|[45]T|45T|GO|M5Plus|T[46]|[ABCHP]5|5_5_Octa|Octa|[BCEFHPT]55|A65)|Platinum[_ ](?:5.0M|5\.5C|[56]\.[05]\+?|[HJM]5|[ABCMP]4|[ACGK]55|[ABDEFG]5|A57|P9|X|UNO|VIEW2|O|4\.0|4_0Plus)|PLATINUMVIEW|SKY[ _](?:55M|Pro_III)|SKYVISION|SKY Black| SKY[ _]Prestige`),
		regexp.MustCompile(`(?i)Platinum[_ ](?:5\.0M|M5)`),
		regexp.MustCompile(`(?i)Platinum[_ ]5\.5C`),
		regexp.MustCompile(`(?i)Platinum[_ ]([56])\.([05])\+`),
		regexp.MustCompile(`(?i)Platinum[ _]4\.0`),
		regexp.MustCompile(`(?i)Platinum[_ ](P9) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Platinum[_ ]([ABCMP]4|[HJ]5|[ACGK]55|[ABDEFG]5|A57|P9|X|UNO|O|6\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Platinum[_ ]?VIEW(2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite Octa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite[ _](M45|Go|[45]T|T[46]|[ABCHP]5|[ABCEFHPT]55|A65|45T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite[_ ]([3-7])[\._]([05](?:[A-Z]{1,2})?\+?)`),
		regexp.MustCompile(`(?i)Fuego[_ ]([3-7]\.[05](?:[A-Z]{1,2})?\+?)`),
		regexp.MustCompile(`(?i)SKY[ _]PrestigeX`),
		regexp.MustCompile(`(?i)SKY[ _]Prestige`),
		regexp.MustCompile(`(?i)SKY[_ ]([3-7]\.[05](?:[A-Z]{1,2})?)`),
		regexp.MustCompile(`(?i)Sky_?worth`),
		regexp.MustCompile(`(?i)Sky_?worth ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Android.+(?:Safari)(?: Build|\) AppleWebKit)|SMADL[ _]`),
		regexp.MustCompile(`(?i)Android.+(?:Safari)(?: Build|\) AppleWebKit)`),
		regexp.MustCompile(`(?i)SMADL[ _]Matri([2X])`),
		regexp.MustCompile(`(?i)Smailo_(2GO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Coral 4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMARTBOOK SB ?13`),
		regexp.MustCompile(`(?i)SMARTBOOK (S9Q9)`),
		regexp.MustCompile(`(?i)(ST1009|ST7160)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smartfren|Androtab|Andromax|PD6D1J|AD682J|AD68[89]G|AD6B1H|AD9A1H|AD682H|AD683G`),
		regexp.MustCompile(`(?i)Andromax[ _\-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Andromax[ _\-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Smartfren[ _\-]([^/;\)]+)(?: Build|[/;\)])`),
		regexp.MustCompile(`(?i)(Androtab[^/;]+) Build`),
		regexp.MustCompile(`(?i)Smartisan[_ ]|(SM(?:70[15]|[89]01|919)|OD10[35]|YQ60[1357]|DT2002C|DE106|DT190[12]A|O[CE]106|OS103|O[CS]105)[ /;\)]`),
		regexp.MustCompile(`(?i)SM70[15]`),
		regexp.MustCompile(`(?i)YQ60[1357]`),
		regexp.MustCompile(`(?i)OD10[35]`),
		regexp.MustCompile(`(?i)OS105[ /;\)]`),
		regexp.MustCompile(`(?i)DE106[ /;\)]`),
		regexp.MustCompile(`(?i)OE106[ /;\)]`),
		regexp.MustCompile(`(?i)OC10[56][ /;\)]`),
		regexp.MustCompile(`(?i)DT2002C[ /;\)]`),
		regexp.MustCompile(`(?i)DT190[12]A[ /;\)]`),
		regexp.MustCompile(`(?i)OS103[ /;\)]`),
		regexp.MustCompile(`(?i)Smarty[_ ]`),
		regexp.MustCompile(`(?i)Mini ?(7L?)`),
		regexp.MustCompile(`(?i)Smooth ?(?:5.[05]|626|6.26 Lite|6.[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth (5.[05]|6.[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth626(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth 6.26 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smotreshka Box (115NA|413NA|213a?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Softbank|J-PHONE`),
		regexp.MustCompile(`(?i)Softbank/[12]\.0/([a-z0-9]+)`),
		regexp.MustCompile(`(?i)([a-z0-9]+);Softbank;`),
		regexp.MustCompile(`(?i)J-PHONE/[0-9]\.[0-9]/([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(SS5214G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLONE|(?:E1457|W145[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLONE[ _]Elite[ _]L5501`),
		regexp.MustCompile(`(?i)SOLONE[ _]SUMO[_ ]S5001`),
		regexp.MustCompile(`(?i)SOLONE[ _](SL-K40|S5002)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sonim[ -]|XP(?:[67]7|88)00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XP6700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XP7700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XP8800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sony(?: ?Ericsson)?|SGP|Xperia|(?:[4-9]0[12])SO|C1[569]0[45]|C2[01]0[45]|C230[45]|C530[236]|C550[23]|C6[56]0[236]|C6616|C68(?:0[26]|[34]3)|C69(?:0[236]|16|43)|D(?:200[45]|21(?:0[45]|14)|22(?:0[236]|12|43)|230[2356]|240[36]|2502|2533|510[236]|530[36]|5316|5322|5503|58[03]3|65(?:0[23]|43|63)|66[03458]3|66[14]6|6708)|E(?:20[0345]3|2006|210[45]|2115|2124|230[36]|2312|23[356]3|530[36]|53[3456]3|5506|55[356]3|56[46305][36]|58[02]3|6508|65[35]3|66[0358]3|68[358]3)|F(?:311[12356]|331[13]|321[12356]|5[13]21|5122|813[12]|833[12])|G(?:2299|312[135]|311[26]|322[136]|3212|331[123]|3412|3416|342[136]|823[12]|834[123]|8[14]4[12]|8188)|H(?:3113|3123|3133|3213|3223|3311|3321|4113|4133|4213|4233|4311|4331|4413|4433|4493|8116|8166|82[1679]6|83[12]4|8416|9436|9493)|I(?:3[12]23|3213|[34]113|[34]312|4193|42[19]3|4332)|J(?:3173|3273|81[17]0|82[17]0|91[15]0|92[16]0)|(?:WT|LT|SO|ST|SK|MK)[0-9]+[a-z]+[0-9]*(?: Build|\))|X?L39H|XM50[ht]|XQ-[A-Z]{2}[0-9]{2}|W960|portalmmm/2\.0 K|S3[69]h|SOG0[1-5]|SOL2[2-6]|SOT31|SOV3[1-9]|SOV4[0-3]|X10[ia]v?|E1[05][ai]v?|MT[0-9]{2}[a-z]? Build|SO-0(?:[12]C|[2-5]D|[1-4]E|[1-5]F|[1-5]G|[1-4]H|[1-4]J|[1-5]K|1M|[1-3]L)|R800[aix]|LiveWithWalkman|BRAVIA|SGP771|E3 Dual|A[01]01SO|A102SO|SO-[45]1[AB]|SO-5[23][AB]|A103SO|A002SO|NW-(A100|Z1000)Series|NSZ-GS7|SmartWatch 3|SVP-DTV15`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E10[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E15[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(LT15[ai]?v?|SO-01C)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT18[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT11`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT15`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT27`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MK16[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST15[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST17[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-02L`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST18[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SK17[ai]?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?X10[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)M1`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?R800`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?WT19|LiveWithWalkman`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?CK13i`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?CK15[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F100i`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J105`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J108`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J10`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U10`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U100`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U1`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U5`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U8`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W100`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W150`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W960`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?WT13`),
		regexp.MustCompile(`(?i)SO-01E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ-BE[4-7]2`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I(?:4113|31[12]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J3173(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SO-41B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A001SO|XQ-AU42|XQ-AU51|XQ-A[TU]52|SO-41A|SOV43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A10[12]SO|SO-52B|SOG04|XQ-BT52)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ-BT44(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I(?:42[19]3|32[12]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I4193`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J(?:9110|81[17]0)|SOV40|SO-03L|802SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J9150)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG01|SO-51A|XQ-AT42|XQ-AT51|SO51Aa|XQ-AT72)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SO-51B|SOG03|XQ-BC[457]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT22i|Xperia P`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT25i|Xperia V`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J92[16]0`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J82[17]0|SO-01M|SOV41|901SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG02|A002SO|XQ-AS[4567]2|SO-52A)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SO-53B|A103SO|SOG05|XQ-BQ[75]2)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOV42|902SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J3273`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26ii`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26i|Xperia S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-02C`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-03D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26w`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT28[aih]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT29i|Xperia TX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT30a`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT30p`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST21[ia]2`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST21[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST23[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST25[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL22`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL21`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST26[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST27[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C150[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C160[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E210[45]|E2115|E2124)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E20[05]3|E2006`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C190[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C200[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C210[45]|S36h`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C230[45]|S39h`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C530[236]|Xperia SP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C550[23]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C650[236]|Xperia ZL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL25(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C66(?:0[236]|16)|SO-02E)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C68(?:0[26]|[34]3)|XL39H|SOL24)|Xperia Z Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xperia Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D200[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D21(?:0[45]|14)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D22(?:0[236]|43)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2212|E3 Dual`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E20[34]3`),
		regexp.MustCompile(`(?i)H33[12]1`),
		regexp.MustCompile(`(?i)H43[13]1`),
		regexp.MustCompile(`(?i)I43[13]2`),
		regexp.MustCompile(`(?i)XQ-AD5[12]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2302`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D230[356]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D240[36]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E230[36]|E23[35]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E2312|E2363)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E56[05][36]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E56[436]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2502`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2533`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E53[05]3|E5306`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E53[0346]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E5506|E5553`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E55[36]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D510[236]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D530[36]|D5316|XM50[ht])`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D5322`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D5503|Xperia Z1 Compact`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C69(?:0[236]|16|43)|SOL23|L39H|SO-0[12]F)|Xperia Z1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D58[03]3|SO-02G)|Xperia Z3 Compact(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D65(?:0[23]|43)|SO-03F)|Xperia Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D66[045]3|D66[14]6|SO-01G|SOL26|401SO)|Xperia Z3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D6633|D6683)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E65[35]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D6708)`),
		regexp.MustCompile(`(?i)SOV31|402SO|SO-03G`),
		regexp.MustCompile(`(?i)SGP771|SOT31|SO-05G`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E58[02]3|SO-02H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E66[05]3|SOV32|501SO|SO-01H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E66[38]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E68[58]3|SO-03H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E6833`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F311[135]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F311[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F321[135]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F321[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F833[12]|SOV34|601SO|SO-01J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:701SO|SOV36|G834[123]|SO-01K)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G8441|SO-02K`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F331[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G312[135]|G311[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G341[26]|G342[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G3426`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G322[136]|G3212`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H31[123]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H41[13]3`),
		regexp.MustCompile(`(?i)H44[19]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H(?:3213|3223|4213|4233)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G823[12]|SOV35|602SO|SO-03J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:G814[12]|G8188|SO-04[JK])`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:H83[12]4|H82[17]6|SOV37|SO-03K|H8296|702SO)`),
		regexp.MustCompile(`(?i)(?:H81[16]6|SOV38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:H(8416|9436|9493)|SO-01L|SOV39|801SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G331[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G3312`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-04E`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-04D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-05D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5121`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5122`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5321|SO-02J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:F8131|502SO|SOV33|SO-04H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F8132`),
		regexp.MustCompile(`(?i)(?:SGP(?:311|312|321)|(Sony)?SO-03E|Tablet Z LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP712(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP(?:511|512|521)(?:[);/ ]|$)|SO-05F`),
		regexp.MustCompile(`(?i)SGP(?:6[124]1|612)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGPT(?:12|121|122|123|13|131|132|133)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BRAVIA )(2K GB ATV3|[48]K UR[123]|4K GB ATV3|4K GB|4K VH2|4K 2015|2015|VH1|VU1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SVP-DTV15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NSZ-GS7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sony-BRAVIA-VH1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SonyBDP|SonyDBV`),
		regexp.MustCompile(`(?i)(?:Sony-)?(KDL?-?[0-9a-z]+)`),
		regexp.MustCompile(`(?i)Opera TV Store.*(?:Sony-)([0-9a-z\-_]+)`),
		regexp.MustCompile(`(?i)((?:WT|SO|ST|SK|MK)[0-9]+[a-z]*[0-9]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)(MT[0-9]{2}[a-z]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 K([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SonyEricsson ?IS11S`),
		regexp.MustCompile(`(?i)Sony ?Ericsson?([^/;]*) Build`),
		regexp.MustCompile(`(?i)SonyEricsson([CGJKPTWZ][0-9]+[a-z]+)/`),
		regexp.MustCompile(`(?i)Sony ?Ericsson ?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Sony Corporation/([^/;]*)\)`),
		regexp.MustCompile(`(?i)Sony (Tablet[^/;]*) Build`),
		regexp.MustCompile(`(?i)(SGP[^/;]*) Build`),
		regexp.MustCompile(`(?i)Xperia ([^/;]*Tablet[^/;]*) Build`),
		regexp.MustCompile(`(?i)Xperia ([^;/]+) \(AOSP\) Build`),
		regexp.MustCompile(`(?i)Xperia ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(XQ-[A-Z]{2}[0-9]{2})`),
		regexp.MustCompile(`(?i)Sony[ -]?([^/;]*) Build`),
		regexp.MustCompile(`(?i)Sony[ -]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)((?:SM-LED32M(?:11|04)S)(?:_-Ver01)?|SM-LED40M04S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOYES[ _](?:[67]S|XS|XS11)|S10-H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOYES[ _]([67]S|XS11|XS)`),
		regexp.MustCompile(`(?i)Spark Plus 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Versity 9640)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CARBONO_5|CUARZO_6|DIAMANTE_5|VULCANO_55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VULCANO_55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CARBONO_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUARZO_6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIAMANTE_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice|(?:Xlife[-_ ](?:\d+Q?|Victor5|M5q\+|M5 Pro|Proton5|Electro55HD))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Spice_)?Xlife[-_ ](\d+Q?|M5\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xlife-M5q\+`),
		regexp.MustCompile(`(?i)Spice[-_ ]?([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Spice[-_ ]?([^/;]+)(?:/|$)`),
		regexp.MustCompile(`(?i)AQT(100|8[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N(9[5678]00|8800|9000|9977)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N(9[5678]00|8800|9977)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starlight|(?:My_Star_X|RIO STAR|C_Note_Pro|Star_Mix_2|I_STAR_PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Starmobile (?:Play (?:Neo|Spark|GO|Click)|Astra)|UP[_ ](?:Sense|Rave|Groove|Prime|Selfie|Xtreme|XL|Max)|PLAY (?:Club|Style))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starmobile PLAY GO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starmobile ASTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Starmobile )?Play (Neo|Spark|Click|Club|Style)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UP[_ ](Sense|Rave|Groove|Prime|Selfie|Xtreme|XL|Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Andromeda[ _]S(707|84[05]|850|8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STX[ -]([^;/]+)|STONE EVO`),
		regexp.MustCompile(`(?i)STX[ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)STX[ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)eZee[^a-z]*Tab ?([^;/]*) Build|STOREX LinkBox`),
		regexp.MustCompile(`(?i)eZee[^a-z]*Tab ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)StrawBerry[ _]`),
		regexp.MustCompile(`(?i)StrawBerry[ _](SX|QX15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STYLO|(?:TARISTAB[234]|Luna|CPE91|VS571|VS5502|S57_A[ZL]URE|INKOSI|Ithemba|S56 MIST|S55 Nova|S40_VISTA|S50_JADE|S64_ALPHA|S53_STARK|S40_LIFE|LIFE_2|S49[_ ](?:MONO|POISE|ECO))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STYLO[ _](F1|Viva)`),
		regexp.MustCompile(`(?i)STYLO[ _]S9[_ ]TOPAZ`),
		regexp.MustCompile(`(?i)SV61 VECTOR\+`),
		regexp.MustCompile(`(?i)SM61 MAGIC\+`),
		regexp.MustCompile(`(?i)S49[_ ]POISE`),
		regexp.MustCompile(`(?i)S49[_ ]MONO`),
		regexp.MustCompile(`(?i)S49[_ ]ECO`),
		regexp.MustCompile(`(?i)Stylo[_ ](521)`),
		regexp.MustCompile(`(?i)(VS571|VS5502)`),
		regexp.MustCompile(`(?i)TARISTAB([2-4])`),
		regexp.MustCompile(`(?i)SUBOR[ _]`),
		regexp.MustCompile(`(?i)SUBOR[ _](S5|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUBOR[_ ]K10PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR[ _]`),
		regexp.MustCompile(`(?i)SUGAR Y([78]) MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR F7 Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR[ _]([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Cyclone [^/;]+) Build`),
		regexp.MustCompile(`(?i)SUNVAN[ _\-]`),
		regexp.MustCompile(`(?i)SUNVAN[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)SUNVAN[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(?:V1s-G|T2s_LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T2s_LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1s)-G`),
		regexp.MustCompile(`(?i)(?:SS4G9 Mira|SS4G7 Sole|SS4G1 Luna|SS4G8 Nora|SS4G6 Lola|SN7014S?|SN7016)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SS4G9 Mira|SS4G7 Sole|SS4G1 Luna|SS4G8 Nora|SS4G6 Lola)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SN7014S?|SN7016)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB2323GMQC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T95ZPLUS|T95[KU]PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T95[KU])PRO`),
		regexp.MustCompile(`(?i)(SC-[0-9]+[a-z]+|SC-2110)`),
		regexp.MustCompile(`(?i)SuperTab(A10|K7|S7G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPRA|NVTAB 7.0 3G|M74C 3G`),
		regexp.MustCompile(`(?i)SUPRA[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(NVTAB 7.0 3G|M74C 3G)`),
		regexp.MustCompile(`(?i)SUZUKI[ _]|(?:ECOPAD7|SUMOPad10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUMOPAD(8100|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Elite Sense|Elite_VR|Slate2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Elite Sense|Elite_VR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slate2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)swisstone (SD 5[13]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SYMPHONY[ \_]([a-z0-9]+)|(?:(?:roar[ _](?:V20|V78|E80|V150))|roarV95|ZVIII|V141)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)roar[ _]?(V20|E80|V78|V95|V150)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V141)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SYMPHONY[ \_]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(SYX-(?:T70[04]|T10[12]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T-Mobile[ _][a-z0-9 ]+|(?:REVVLRY\+?|REVVL V\+ 5G|REVVL 2(?: PLUS)?|5062[ZW]|5007[ZW]|T790[WZ]|Telekom Puls|TMRVL4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5062[ZW]`),
		regexp.MustCompile(`(?i)5007[ZW]`),
		regexp.MustCompile(`(?i)T790[WZ]`),
		regexp.MustCompile(`(?i)REVVL V\+ 5G`),
		regexp.MustCompile(`(?i)REVVL 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Telekom Puls(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T-Mobile[ _]([a-z0-9_ ]+) Build`),
		regexp.MustCompile(`(?i)T-Mobile[ _]([a-z0-9_ ]+)`),
		regexp.MustCompile(`(?i)TAG[ -]TAB[ -]III?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG[ -]TAB[ -](III?)`),
		regexp.MustCompile(`(?i)Ignis [89]`),
		regexp.MustCompile(`(?i)Ignis ([89])`),
		regexp.MustCompile(`(?i)TCL,|TCL[_ -][a-z0-9]+|(?:TCL[_ -][^;/]+ Build)|(?:TCLGalaG60(?:\(9108A\))?|4187[DMU]|5004S|5087Z|5101A|5102[BKM]|5107G|5130[JM]|5133A|5148A|5152D|5159[AJ]|5199I|6125[ADFH]|6156H|7040N|9048S|9295G|A(?:50[279]|600)DL|T(?:671[EFHO]|766[AHJU]|767H|770[BH]|773O|774H|775[BH]|780H|781|782H|790Y|799[BH]|810[HS])|Percee TV|BeyondTV\d?)(?:_(?:RU|EEA|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TCLGalaG60(?:\(9108A\))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5004S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4187D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T774H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T775B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T775H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6125[ADFH]`),
		regexp.MustCompile(`(?i)5199I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A509DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A600DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5152D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5133A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5102[BKM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5159[AJ](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5101A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5107G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5130J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4187[MU](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5148A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5130M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T780H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T782H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T790Y(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TCL[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)TCL[_ -]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(7040N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A502DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A507DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T770[HB](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T766[AHJU](?:_(?:EEA|RU))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T671[HFEO](?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T767H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T773O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5087Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T781(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T810[SH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T799[BH]`),
		regexp.MustCompile(`(?i)9048S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Percee TV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BeyondTV(\d)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:43|55)S62FS|(?:43|50)P65US|U(?:43|60|65)P60|65P4USM|(?:40|49)S62|L32S6|55P610|50P8S|55S62|(?:43|50)P6US|55DP60)`),
		regexp.MustCompile(`(?i)(K32DLX9HS|K40DLM8FS|K40DLX9FS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Build/TDTech|(?:NAT-TN70)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TEENO[_ ](S9|A1|S11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TENPLUS[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)TIANYU ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TIANYU-KTOUCH/([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(T12|T151)-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Magictab (?:9GX|7GE|718))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NuclearSX-SP5)`),
		regexp.MustCompile(`(?i)Amazing[ _](X[35]s|X[123567]|A5S|A3[025]|A[468]|A4S|A5[057]|P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](X[35])s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](A5S|X[123567]|A[468]|A4S|A5[057]|A3[025])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWZ[-_ ](?:TabPlay|Y6[08]|Y52|A49|A[59]5|A567|AA8|QQ[12])|TWZQQ1`),
		regexp.MustCompile(`(?i)TWZ[_ ]TabPlay[_ ](12[56])`),
		regexp.MustCompile(`(?i)TWZ[-_ ]?(Y6[08]|Y52|A49|A[59]5|A567|AA8|QQ[12])`),
		regexp.MustCompile(`(?i)(?:TP_1_3000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID211H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA-(?:2[_ ](?:3G|Pro)|5[05][_ ]Power|[1-4]|[1246]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TX5 MAX|TX[69]s|TX3 Mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TX([69])s`),
		regexp.MustCompile(`(?i)Tech[ _]?pad|XTAB[ _-]|(?:3G_16|Dual C1081HD|S813G|NOTE[_ ]4CAM|M5(?:Go|Plus)|M6Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TechPad[_ ](10Y|9x|i700)`),
		regexp.MustCompile(`(?i)TechPad[_ ]3Gx`),
		regexp.MustCompile(`(?i)XTAB[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)M5(Go|Plus)`),
		regexp.MustCompile(`(?i)NOTE[ _]4CAM`),
		regexp.MustCompile(`(?i)Tech ?pad[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)UP10SI[34]6LA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(UP10SI[34]6LA)`),
		regexp.MustCompile(`(?i)Teclast|P80_G3M2|TLA002|TLA016|X98 Air III|M20_4G|X98 Air II\(HG5N\)|Tbook|X80 Power\(B2N4\)|(?:T40 Plus|T30|P80[XH]|P20HD|P10[_ ]HD|M40|P10S|M30_Pro|M40SE|P80)_(?:ROW|EEA|RUS)|P20HD\(N6H5\)|T40 Plus\(M7T3\)|T40 PRO\(T1A1\)|T10\(E3C[56]\)|P10S\(N4H5\)|98\(M1E[45789]\)|98\(M3E3\)|X10 \(M1D3\)|M89 Pro|M40\(N9H3\)|M40(?:SE|Pro)_(?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)Tbook[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)T10\(E3C[56]\)`),
		regexp.MustCompile(`(?i)X10 \(M1D3\)`),
		regexp.MustCompile(`(?i)P10S(?:\(N4H5\)|_(?:ROW|EEA))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P20HD_?(?:ROW|EEA|RUS)|P20HD\(N6H5\)`),
		regexp.MustCompile(`(?i)P10[_ ]HD_(?:ROW|EEA)`),
		regexp.MustCompile(`(?i)P80[_ ](?:ROW|EEA)|P80_G3M2`),
		regexp.MustCompile(`(?i)M([43]0)_?Pro[_ ](?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)M40\(N9H3\)`),
		regexp.MustCompile(`(?i)T40 PRO\(T1A1\)`),
		regexp.MustCompile(`(?i)T40 Plus(?:_(?:ROW|EEA)|\(M7T3\))`),
		regexp.MustCompile(`(?i)(P80[Xh]|T30|M40)[_ ](?:ROW|EEA)`),
		regexp.MustCompile(`(?i)98\(M1E[45789]\)|98\(M3E3\)`),
		regexp.MustCompile(`(?i)X80 Power\(B2N4\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X98 Air III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X98 Air II\(HG5N\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Teclast[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Tecno|Phantom6|Phantom6-Plus|DP7C Pro-SGA1`),
		regexp.MustCompile(`(?i)TECNO[ _]AC8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AB7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AX8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]F4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IA5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID3k(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID5b(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID5a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]7C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P701(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DP7C Pro-SGA1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P703(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P704a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]DP10A Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]P904(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]RC6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CB7[j]?`),
		regexp.MustCompile(`(?i)Tecno[- _]C9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CF7k?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CF8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CC7S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CC9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:CC6|KC3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD6S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD8j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:CE9h|CE7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD6j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE7j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CH9n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CH6n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CH7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]Camon CX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CX Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]F3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]SA2S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1[fg](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:RA8|KB2h)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB2j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BA2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB8S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB6S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]SC7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BB2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BB4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC2c?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC3?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC1s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD2[dp]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD4j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]SA1S Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KG5[mh]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KA7O?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]LB6?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KB7j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KB8?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:KC8S?|KC2j?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:KC6S?|KC1j)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]BB4k(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD6a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD7[hS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE5[jk]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:KF6[nmjki]?|PR651[EH]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF7j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF6p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG6k?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG5n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG6p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KC1h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KC1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]K9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KA9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]DP8D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA7 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LB7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LC6a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]LB8a?`),
		regexp.MustCompile(`(?i)TECNO[ _]LC7S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LC8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]J8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]RA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]W3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]WX3P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LD7j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno (F2) ?LTE`),
		regexp.MustCompile(`(?i)TECNO[ _-]?(T611)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Tecno[ _-]?([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)Preo[ _]`),
		regexp.MustCompile(`(?i)Preo[ _]P([23])`),
		regexp.MustCompile(`(?i)Tele2[ _]`),
		regexp.MustCompile(`(?i)Tele2[ _](Mi[dn]i)[ _]1.1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _]Midi[ _]2.0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _]((?:Maxi|Midi)(?:[_ ](?:Plus|LTE))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _](Mi[dn]i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TELEFUNKEN|Foxtrot|TEL-1013GIQA|TEL-1014GIQ|TEL-73GIQA|TEL-74GIQ|TF-SP(?:500[12]|4002)|(TF-MID(?:[78]02G|70[78]G|80[46]G|9705RG|9707G|7805G|100[57]G|1010G))|(TF-LED(?:65S75T2SU|32S39T2S|32S5[289]T2S|32S7[05]T2S|40S63T2S|40S19T2S))|LTE_LIMA|LTE Mike|Outdoor (?:LTE|WT4|WT4-S)`),
		regexp.MustCompile(`(?i)TEL-(1014GIQ|74GIQ|73GIQA)`),
		regexp.MustCompile(`(?i)(?:TELEFUNKEN)?(TF-SP(?:500[12]|4002)|Outdoor (?:LTE|WT4-S|WT4)|Foxtrot)`),
		regexp.MustCompile(`(?i)(TF-MID(?:[78]02G|70[78]G|80[46]G|9705RG|9707G|7805G|100[57]G|1010G))`),
		regexp.MustCompile(`(?i)(TF-LED(?:65S75T2SU|32S39T2S|32S5[289]T2S|32S7[05]T2S|40S63T2S|40S19T2S))`),
		regexp.MustCompile(`(?i)TELEFUNKEN, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Telego[ _]Mate`),
		regexp.MustCompile(`(?i)Telenor|(?:Infinity[_ ](?:E[2-5]|K2?|A2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Telenor[ _]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Infinity[ _](E[2-5]|K2?|A2)`),
		regexp.MustCompile(`(?i)Telit_Mobile_Terminals-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Telit[\-_]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Hudl (?:[^/;]+)(?: Build|[;)])|W032i-C3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hudl ([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)W032i-C3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASEBOOK_3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ThL[ _-]|(?:Knight 2|THL5000|T200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)THL ?(5000)`),
		regexp.MustCompile(`(?i)(T200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ThL[ _-]*([^;/]+) Build`),
		regexp.MustCompile(`(?i)ThL[ _-]*([^ ;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Primo(7|8)|QM73[45]-8G|QM734-2|QM736-8G\(HD\)|8950|MID1002|5014G|TEO7RK|TEO104G|Friendly_TH101|Delight TH201)(?:[);/ ]|$)|(?:Tlink|Every)[0-9]+|THOMSON,`),
		regexp.MustCompile(`(?i)Primo(7|8)`),
		regexp.MustCompile(`(?i)QM736-8G\(HD\)`),
		regexp.MustCompile(`(?i)8950(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TEO(7RK|104G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5014G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tlink([0-9]+)`),
		regexp.MustCompile(`(?i)Every([0-9]+)`),
		regexp.MustCompile(`(?i)((?:49|55)UC6306|55UC63|32HD55|40FD54|55UD63)`),
		regexp.MustCompile(`(?i)Thuraya[ _](X5-Touch)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TiPhone ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TIVO[ ,]`),
		regexp.MustCompile(`(?i)TIS001[_-]`),
		regexp.MustCompile(`(?i)TIS001[_-]S([34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIS001[_-]T2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TC1050G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tmovi[ _]|(?:Infinit[ _](?:Lite[_ ]2|X[_ ]CAM)|Infinit MX(?: Pro)?|Vision_PRO|VISION ULTRA|Epix|Yeah_Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tmovi[ _]Prime`),
		regexp.MustCompile(`(?i)Infinit[_ ]X[_ ]CAM`),
		regexp.MustCompile(`(?i)Infinit[_ ]Lite([_ ]2)?`),
		regexp.MustCompile(`(?i)Tinai (K[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TiNMO[- _](A11|K3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tolino Tab ([^/;]+) Build`),
		regexp.MustCompile(`(?i)TONE[ _](e19|m15|e2[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOKY (A19|W1|T8[368]|T1982)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOKY A9PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Coto[_ ]|X1013`),
		regexp.MustCompile(`(?i)Toplux ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TOREX[- ](?:PS12|S18|S27)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOREX-(PS12)`),
		regexp.MustCompile(`(?i)TOREX[- ](S18|S27)`),
		regexp.MustCompile(`(?i)Toshiba|TSBNetTV/|portalmmm/[12].0 TS|(?:T-01C|T-0[12]D|IS04|IS11T|AT1S0|AT300SE|AT(?:7-C|10-A|10[PL]E-A|100|200|270|300|330|374|400|470|500a?|503|570|703|830)|AFTKMST12|AFTBAMR311)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AT(100|200|270|300|330|374|400|470|500|503|570|703|830)`),
		regexp.MustCompile(`(?i)AT10([PL])E-A`),
		regexp.MustCompile(`(?i)TOSHIBA, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Toshiba[ /_\-]?([a-z0-9_ \-]+) Build`),
		regexp.MustCompile(`(?i)Toshiba[ /_\-]?([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12].0 (TS[a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)TOUCHMATE|(TM-(?:MID1050WKD|MID1020A|MID794C|MID795|MID710|MID798|MID792|MID788D|SM500N|SM410|MID1010))`),
		regexp.MustCompile(`(?i)(TM-(?:MID1020A|MID794C|MID795|MID710|MID798|MID792|MID788D|MID1010))`),
		regexp.MustCompile(`(?i)(TM-(?:SM500N|SM410))`),
		regexp.MustCompile(`(?i)Touchmate ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Transpeed[_ ]|(?:TR99 MINI\+|TR99)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TR99 MINI\+`),
		regexp.MustCompile(`(?i)(?:Transpeed[_ ])?(TR99|H616|6K|X4S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TrekStor|Surftab) ([^/;]+)(?: Build|\))|Surftab[^;\)]*(?:[;\)]|$)|ST10216-2A|ST13416-1|VT10416-[12]|TFMTKAW01232|PEAQ PET 100|Xintroni10.1`),
		regexp.MustCompile(`(?i)ST10216-2A|VT10416-[12]`),
		regexp.MustCompile(`(?i)TrekStor ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Surftab ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Surftab[ _]([^;\)]*)(?:[;\)]|$)`),
		regexp.MustCompile(`(?i)Xintroni10.1`),
		regexp.MustCompile(`(?i)(PEAQ PET 100)`),
		regexp.MustCompile(`(?i)Trevi[ _]|TAB[ _]10[ _]3G[ _]V16|TAB[ _](7|8)[ _]3G[ _]V8|TAB9 3G|MINITAB 3GV|Phablet[ _](?:4|4\.5|5|5\,3|6)[ _]?[CSQ]|REVERSE[ _]5\.5[ _]?Q`),
		regexp.MustCompile(`(?i)TAB[ _]?(7|8)[ _]3G[ _]V8`),
		regexp.MustCompile(`(?i)TAB[ _]?9[ _]3G[ _]V8`),
		regexp.MustCompile(`(?i)TAB[ _]?9[ _]3G`),
		regexp.MustCompile(`(?i)TAB[ _]10[ _]3G[ _]V16`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4[ _]?C`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4[ _]?S`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4.5[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]5[ _]?S`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]5,3[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?REVERSE[ _]5.5[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]6[ _]?S`),
		regexp.MustCompile(`(?i)Trevi[_]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(A23 Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Passion[-_](?:1S|PRO|PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Trio V51 DT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Orion R68G|Draco AW80|Draco H3|Vega S95_(?:Meta|Pro|Telos))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) TRUE BEYOND TAB 3G|SMART[ _](MAX 4.0 PLUS|4G[ _](?:GEN C [45].[05]|M1 Plus|Champion|Speedy 5.0 Plus|Speedy[_ ]5inch|P1))`),
		regexp.MustCompile(`(?i)SMART MAX 4.0 PLUS`),
		regexp.MustCompile(`(?i)SMART 4G Gen C ([45].[05])`),
		regexp.MustCompile(`(?i)SMART 4G Speedy 5.0 Plus`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]Speedy[_ ]5inch`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]Champion`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]P1 Prime`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]P1`),
		regexp.MustCompile(`(?i)SMART[ _]4G M1 Plus`),
		regexp.MustCompile(`(?i)(SSB-508[ED])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TL554B|TC504B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail TT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[_ ]?(?:X5[_ ]?(?:Max|Black|Space|Hero)|X8|X6[ _]Z|X[ _]Ray)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX5Space(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX5Hero(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX[ _]Ray(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]?X5[ _]?Black(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X5[ _]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X6[ _]Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo-X|(?:Hive V 3G|Turbox_S3|Fire_II_WiFi)(?:[);/ ]|$)|Mercury`),
		regexp.MustCompile(`(?i)Turbo-X_A2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo-X_e3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mercury`),
		regexp.MustCompile(`(?i)Turbo-X Ice(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hive V 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fire_II_WiFi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TURBO-X, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Turbo-X Tablet([^;/]+) Build`),
		regexp.MustCompile(`(?i)Turbo-X ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Turbokids[-_ ]?(TMNT|3G|S4|Princess)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbopad[-_ ]?(72[34]|80[23]|912|101[456]|Pro)(?:NEW)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TURKCELL[_ ]`),
		regexp.MustCompile(`(?i)Turbo T50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T([124-8])0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxi Plus 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MaxiPRO5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turkcell_T_Tablet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TWOE[-_ ]E450R|F534L|F572L|E500A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWOE[-_ ](E450R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F534L|F572L|E500A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tymes[ _](V5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TT175(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Liantong)?(?:VP00[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP001`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP002`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP003`),
		regexp.MustCompile(`(?i)(USCC-[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)UMI(?:DIGI)?[ _]|(?:A[5]_Pro|.+; A[79] Pro|S3_Pro|ROME[_ ]X|BISON|hammer_S|S2 LITE|London|Z2_PRO|C NOTE 2|A11 Pro Max|Power 3|Android 10.+ (?:A3[SX]|A7S)|RP01|MT01|MP0[12])(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MT01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(A[3579]|Z2|S3)[_ ]Pro`),
		regexp.MustCompile(`(?i)MP01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)ROME[_ ]X`),
		regexp.MustCompile(`(?i)RP01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)UMI[_ ]SUPER`),
		regexp.MustCompile(`(?i)MP02(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i) (A3[SX]|A7S)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(?:UMI_)?(London|Diamond(?:_X)?)`),
		regexp.MustCompile(`(?i)UMI(?:DIGI)?[ _]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)UNIWA[ _](X5|F40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNNO[_ ]`),
		regexp.MustCompile(`(?i)UNNO[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)UTOK (45[01]D)`),
		regexp.MustCompile(`(?i)utstar[ _-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)UTIME[ _](U6|G7|U100|[TX]1|FX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uzbekistan(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGOOS-(AM[36])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A101S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uhappy|UP?580|UP350|UP[35679]20`),
		regexp.MustCompile(`(?i)UP([35679]20)`),
		regexp.MustCompile(`(?i)Uhappy[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Uhappy[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone|Gemini Pro|Power 3S|Power_[356]|Power_5S|S(?:10|9)_Pro|(?:Note [89]P|Armor(?:[ _](?:[2367]|2S|X[236]|6[SE]|3WT|3W|X))?|U00[78][ _]Pro|Be[ _]X|Be[ _]Touch(?:[ _][23])?|Be[ _](?:One|Pure)(?:[ _]Lite)?|Note (?:11P|7T)|Paris_X|P6000_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S(10|9)_Pro`),
		regexp.MustCompile(`(?i)Be[ _]Touch([ _][23])?`),
		regexp.MustCompile(`(?i)Be[ _]Pure[ _]Lite`),
		regexp.MustCompile(`(?i)Be[ _]Pure`),
		regexp.MustCompile(`(?i)Be[ _]One[ _]Lite`),
		regexp.MustCompile(`(?i)Be[ _]One`),
		regexp.MustCompile(`(?i)Be[ _]X`),
		regexp.MustCompile(`(?i)U(00[78]) Pro`),
		regexp.MustCompile(`(?i)Power Armor (\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]6S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([679])E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([25])S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]3W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]3WT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _](1\d|11T) 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _](8) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([236789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gemini Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power[_ ]([356][SL]?)`),
		regexp.MustCompile(`(?i)Note 8P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Note 7T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Note (9|11)P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone[_ ]Tab[_ ]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Ulefone[_ ](X|S1[ _]Pro|S[17])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Ulefone[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)VisionBook[ _]|([78]Qa_3G|VB_10Q_Plus|10A_LTE_eea)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VisionBook[ _](?:10Qi|7Q[i]?|8Q[ei]?|P70|8Qi_3G)(?:[ _](?:[34]G|Plus|LTE))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([78])Qa_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_10Q_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_10Q_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10A_LTE_eea(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VB_10Q_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_P50Plus_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VisionBook[ _](?:P50 LTE|P55 X2 LTE|P55 LTE(?: Pro)?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Titan(_pocket)?|Jelly-Pro|Jelly2(?:_JP)?|Atom_X?L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Jelly)-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jelly2(?:_JP)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Titan|Atom_X?L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U((?:67[013]|680)C|(?:452|504)TL|683CL|693CL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uniscope[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Uniscope[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)Plasma Mobile|WebTV/(\d+\.\d+)|(?:M10 Ultra|FO-R15|TVBOX|Smart[ _]?TV|SmartATV|M8S\+ 4K|PCBox|rk3368-box|H10 PLAY|Smart AIO TV|TVBOX_L|L-BOX|TVBOX-5G|mips.+(?:Opera TV|wireless|wired)|smartbox|TV BOX|I12Pro Max|(?:audi_)?ks1280x480)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WebTV/(\d+\.\d+)`),
		regexp.MustCompile(`(?i)M10 Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FO-R15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Smart[ _]?TV|SmartATV|PCBox|rk3368-box|TVBOX|Smart AIO TV|TVBOX_L|L-BOX|TVBOX-5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S\+ 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H10 PLAY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Opera TV|wireless|wired|smartbox|TV BOX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I12Pro Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:audi_)?ks1280x480`),
		regexp.MustCompile(`(?i)Unnecto|(?:U513|U5151|U61[1356]|U7[12]0|U-830|U90[35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Unonu[ _-]|(?:U4001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U4001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Unonu[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Unonu[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DT[45]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DT[45]0)`),
		regexp.MustCompile(`(?i)(?:VPA051|VA-10J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VA-10J)`),
		regexp.MustCompile(`(?i)VAVA[ _](X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Camellia_II|Cactus II|Maple III|Maple-II|Cactus-Pro|LavenderII|Jasmine-II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Camellia_II|Cactus II|Maple III)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Maple|Jasmine|Lavender)-?II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VDVD[_ ](P20|IX21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEON[_ ](C8680)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VGOTEL|(?:Venture V(?:[278]|12)|VentureV10|Ocean[_ ][689]|Ocean9L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venture ?V([278]|1[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ocean[_ ]?([689]|9L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LIGHT MINI|VIWA A5\+|LIGHT PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIWA A5\+`),
		regexp.MustCompile(`(?i)VK-VK([79]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:VK700)-MAX|VK700 Pro|T5SE|VK700X|vk6050|vk6735|vk700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VK700)-MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VK700) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T5SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VK(700X|6050|6735|700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOGA[ _]`),
		regexp.MustCompile(`(?i)ZYVV1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vankyo[_ ]|QTAB1010X`),
		regexp.MustCompile(`(?i)Vankyo[_ ]S(10|[78])`),
		regexp.MustCompile(`(?i)QTAB(1010X)`),
		regexp.MustCompile(`(?i)Vargo[; _]|(?:V210101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V210101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M910A|M783K|M783K-16G|M1072R-3G|KingPad_(?:K10|SA10)(?:Pro)?)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KingPad_(K10|SA10)(Pro)?`),
		regexp.MustCompile(`(?i)(M910A|M783K|M783K-16G|M1072R-3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vega (Q7128)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CX-508|CX-551|Reiv 500|Creon F5|Isprit U50|Isprit-U50-LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Isprit U50|Isprit-U50-LTE`),
		regexp.MustCompile(`(?i)(CX-508|CX-551|Reiv 500|Creon F5)`),
		regexp.MustCompile(`(?i)VCT([a-z0-9_-]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCT9B06Q22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCT([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(RP-UDM0[12]A|RP-UDP05A|JO-UQM10A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QTA(SUN[12]|XIA1|QZ3|QZ3KID|IR7)|QMV7[AB]`),
		regexp.MustCompile(`(?i)QTAXIA1|QTAIR7`),
		regexp.MustCompile(`(?i)QMV7[AB]`),
		regexp.MustCompile(`(?i)Vernee|(?:Mars Pro|Apollo[ _](?:Lite|X)|Thor (?:E|Plus)|X2_euro|M7_EEA|T3 Pro|V2 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Apollo[ _]Lite`),
		regexp.MustCompile(`(?i)Apollo[ _]X`),
		regexp.MustCompile(`(?i)(V2|T3) Pro`),
		regexp.MustCompile(`(?i)Vernee[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Vernee[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)MotionE11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Luck|Luck_L1[02]0_[34]G|Lion_Dual|V709X|TAB X8|TAB X10|Tab [43]G (?:7-2|8-1|10-1)|Pro_P3[01]0_4G|Lion_DC|Baccara|Eagle[ _]4G|ImpressMAX)(?:[);/ ]|$)|Impress[ _]([^;/]+)(?:Build|\))`),
		regexp.MustCompile(`(?i)(Lion_Dual|Lion_DC|Baccara|Eagle[ _]4G|Luck_L1[02]0_[34]G|Luck)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Impress ?MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMPRESS ECLIPSE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro_P(3[01]0)_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Impress_Luck[_ ]?4G_NFC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Impress[ _][a-z]+)([34])G(?:Build|\))`),
		regexp.MustCompile(`(?i)(Impress[ _](?:[^;/]+))(?:Build|\))`),
		regexp.MustCompile(`(?i)(V709X)`),
		regexp.MustCompile(`(?i)TAB X(8|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab ([43])G ([78]|10)-([21])`),
		regexp.MustCompile(`(?i)Vertu[ ]?([a-z0-9]+)|(?:ASTER P|CONSTELLATION X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASTER P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CONSTELLATION X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vertu[ ]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5009`),
		regexp.MustCompile(`(?i)verykool[ _]?S5001`),
		regexp.MustCompile(`(?i)verykool[ _]?S5004`),
		regexp.MustCompile(`(?i)verykool[ _]?S5007`),
		regexp.MustCompile(`(?i)verykool[ _]?s5015`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5011`),
		regexp.MustCompile(`(?i)verykool[ _]?s5019`),
		regexp.MustCompile(`(?i)verykool[ _]?S5005`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5560`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5200`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5050`),
		regexp.MustCompile(`(?i)verykool[ _]?S5030`),
		regexp.MustCompile(`(?i)verykool[ _]?s5527`),
		regexp.MustCompile(`(?i)verykool[ _]?s5526`),
		regexp.MustCompile(`(?i)verykool[ _]?S5530`),
		regexp.MustCompile(`(?i)verykool[ _]?S5525`),
		regexp.MustCompile(`(?i)verykool[ _]?S5524`),
		regexp.MustCompile(`(?i)verykool[ _]?s5516`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5550`),
		regexp.MustCompile(`(?i)verykool[ _]?s5035`),
		regexp.MustCompile(`(?i)verykool[ _]?s5034`),
		regexp.MustCompile(`(?i)verykool[ _]?s5037`),
		regexp.MustCompile(`(?i)verykool[ _]?s5036`),
		regexp.MustCompile(`(?i)verykool[ _]?s6005x`),
		regexp.MustCompile(`(?i)verykool[ _]?SL6010`),
		regexp.MustCompile(`(?i)verykool[ _]?S4006[QT]?`),
		regexp.MustCompile(`(?i)verykool[ _]?S4007`),
		regexp.MustCompile(`(?i)verykool[ _]?S4008`),
		regexp.MustCompile(`(?i)verykool[ _]?s5017|Dorado s5017`),
		regexp.MustCompile(`(?i)verykool[ _]?s4510`),
		regexp.MustCompile(`(?i)verykool[ _]?s5204`),
		regexp.MustCompile(`(?i)verykool[ _]?s5205`),
		regexp.MustCompile(`(?i)verykool[ _]?s5528Jr`),
		regexp.MustCompile(`(?i)verykool[ _]?s5528`),
		regexp.MustCompile(`(?i)verykool[ _]?s5702`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5029`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5565`),
		regexp.MustCompile(`(?i)verykool[ _]?TL8010`),
		regexp.MustCompile(`(?i)verykool[ _]?T7440`),
		regexp.MustCompile(`(?i)verykool[ _]?T7445`),
		regexp.MustCompile(`(?i)verykool[ _]?([^/;)]+)(?:[ _]SL?[0-9]{4}[QT]?)(?: Build|[);])`),
		regexp.MustCompile(`(?i)verykool[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VESTA_SMART|VESTA32LD86(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vestel[ _]|Venus[ _](GO|E[2-5]|V[1-9]|Z[1-9]0)|V_?TAB|VP74|VT97PRO|VSP145M|VSP250[GS]|VSP355[GS]|V3_5580_Dual|V TAB Z1`),
		regexp.MustCompile(`(?i)V_TAB_([0-9]{4}[A-Z]?)`),
		regexp.MustCompile(`(?i)V[_ ]TAB[_ ](Z1)`),
		regexp.MustCompile(`(?i)Venus[ _]V([1-9])([ _][0-9]{4})?`),
		regexp.MustCompile(`(?i)Venus[ _]Z([1-9]0)`),
		regexp.MustCompile(`(?i)Venus[ _]GO`),
		regexp.MustCompile(`(?i)Venus[ _]E2 Plus`),
		regexp.MustCompile(`(?i)Venus[ _]E([345])`),
		regexp.MustCompile(`(?i)Vestel[ _](5000|5530)`),
		regexp.MustCompile(`(?i)(Zippers Tab 10i 3G)`),
		regexp.MustCompile(`(?i)Videocon[_ \-]|(?:VT75C|V406018|V512930|V50(?:2430|3630|4730|5024|5430|4630|5[98]20)|Z45_(?:Dazzle|Amaze)|Z45Q Star|Z50 Nova)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Videocon[_ \-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)VT75C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V502430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505024(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V503630(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V504730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V406018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V512930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V505430|V504630)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z45_(Dazzle|Amaze)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z45Q Star(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z50 Nova(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ViewSonic|ViewPad|ViewPhone|(?:IFP(?:98|86|[67]5)50-3|VSD[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?V500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ViewSonic A8\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?ViewPhone ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?ViewPad ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(VSD[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IFP(98|86|[67]5)50-3`),
		regexp.MustCompile(`(?i)Vinabox[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VMP-(015-162|021-82|041-162|011-81|025-324|045-664)(?:[);/ ]|$)|VMP023\.`),
		regexp.MustCompile(`(?i)VMP023\.`),
		regexp.MustCompile(`(?i)(XA Pro) Build`),
		regexp.MustCompile(`(?i)VMP0617(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO PRO2X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO PRO[ _-]?([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V608C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V608C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vision ?Touch`),
		regexp.MustCompile(`(?i)Vitelcom|portalmmm/[12].0 TSM`),
		regexp.MustCompile(`(?i)TSM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TSM([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12].0 (TSM[a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(?:SMART[_ ]EV[56]|EV7_Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EV7)_Pro`),
		regexp.MustCompile(`(?i)SMART[_ ](EV[56])`),
		regexp.MustCompile(`(?i)VIVAX|(?:Fly5[_ ]Lite|Fun[_ ]S500|Point[_ ](?:X[12]|X501|X450)|PRO3|32LE77SM|40LE77SM|FUN S1|FUN_S20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly5[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Point_X([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fun[_ ]S500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUN[ _]S(1|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[ _]Fly ?(\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[ _]Fly[ _]V(1|550)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIVAX )?(Point[ _](?:X551|X501|X450))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART Point X5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[_ ]PRO3`),
		regexp.MustCompile(`(?i)VIVAX (?:TABLET )?TPC[-_ ](\d+) ([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(32LE77SM|40LE77SM)`),
		regexp.MustCompile(`(?i)((?:VIV-|BBG-)?vivo)|(?:V1730(D[AT]|GA)|V18(01A0|13B[AT])|1819|V1937|I(?:192[78]|201[28])|V(?:2006|202[2-9]|203[0-35-9]|204[0-3568]|205[02-5789]|206[015689]|2070|210[12459]|211[01]|212[049])|V(?:2026|2031|2036|2043)_21|V1936AL|V(?:1732|1809|181[3468]|182[149]|183[1268]|1901|191[13469]|192[1-48]|193[0246]|194[15]|195[05]|196[235]|198[16]|1990|200[125]|201[12]|202[03-5]|203[146]|204[6789]|205[45679]|2066B|206[1568]|207[23]|208[05]|2099|2106|211[18]|212[13]|213[346]|214[1358]|2162)A|V1824BA|V(?:1731|1818|2020)CA|V(?:1818|1938)CT|V(?:1730|2031)EA|V(?:1732|1809|181[3468]|182[19]|183[1268]|1901|1913|1938)T|V2029_PK|V2069A|V217[12]A|I2011|X50 Pro\+|V211[45]A?|V204[57]A?|V210[28]A?|I2009|V215[4678]A|V213[01]A?|V2023EA|V1962BA|V2142|V1930|V216[345]A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1824[B]?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1955A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2171A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2172A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I192[78](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2165A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2049A|I2009)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1922A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1916A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1914A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1981A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1936A[L]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2055A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2118A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1986A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2012A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2073A|I2011)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2023A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2065A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2061A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2143A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2106A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2024A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2025A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2136A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2141A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2025)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2066|V2108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2061(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2055(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2040(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo 1921(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo 1916(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1805(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1912|V1923A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1924A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1950A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1821[AT]|vivo 1813)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo ONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1831[AT]`),
		regexp.MustCompile(`(?i)V1832[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2121A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1932[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1962A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2162A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2020C?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031EA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2080A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2072A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2048A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1941A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1928A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1804(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1806(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1819(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1818(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 19(?:10|09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1907(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 19(?:20(?:_20)?|19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1933(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2022(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]1601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1611(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (1713|1612)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1716|1850)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1723(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1727(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo V3Max(?: [AL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X9s Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X9s(?: [AL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X5Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X20Plus UD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1721(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X20Plus(?: a)?|vivo 1720)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X21i(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X21UD(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1725|X21A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1814[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1809[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1816[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V18(38|29)[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1836[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1938CT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1938T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2001A|vivo 2004)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1937|V1937)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2005A|vivo 2006)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2011A|X50 Pro\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V20(?:46|59)A|V2045)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2085A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2047A|V2046)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2056A|V2047)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2134A|V2105)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2145A|V2114)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2133A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2104(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X([0-9])Plus(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1929|2015)(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1902(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1906(?:_20)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 19(?:04|40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2102(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1901(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1915(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V202[79](?:_PK)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1613(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2043_21|V2048)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V205[24]|V2070|V2101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2037(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2129(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2065(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2038(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2043(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(?:2041|2060)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2023(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1901[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1930A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1938|V203[46]A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2099A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2066[B]?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2036(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2068A?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2057(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1934A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1965A|vivo 1935)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(?:2024|203[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2054A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2057A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2053(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1606(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1606a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2058|V2111A|V2123A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1719(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1714|Y69A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2002A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1724|Y71A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1801i?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1731CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2059(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2124(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1913[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 180([38]|8i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1812(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1732[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:Y83A?|1802)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1726(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1730EA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1823|1908)(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 181[17](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1820(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1945A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2026|V2033|V2042)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V20[63]9|V2026_21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 18(16|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1818[AT]|vivo 181[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1818C[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1807(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1813[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1801A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1918|1951)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1730D[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1917(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1813B[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo Z3x|V1730GA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1921A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1911A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1990A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1963A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2142(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y75s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X710L?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X6SPlus(?: [AD])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X6S(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X([5679]|20)[ALD]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X5Pro(?: L)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y66i(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y(\d{2})[AL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay(\d)S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay(\d)[AL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Vizio|(?:VAP430|VTAB1008|XR6[PM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VTAB1008|XR6[PM]10)`),
		regexp.MustCompile(`(?i)(?:Vodacom)[ _]|(?:Kicka 5 Plus 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Vodacom)[ _](Power Tab 10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _-]|Smart ?Tab ?(?:III? ?)?(?:|4G|7|10)[);/ -]|VodafoneSmartChat|Smart Ultra 6|(?:VFD[ _][0-9]+|VFD320|VF6[89]5|VF-(696|1397|795|895N|1497))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD 50[02]`),
		regexp.MustCompile(`(?i)VFD 51[013]`),
		regexp.MustCompile(`(?i)VFD 52[78]`),
		regexp.MustCompile(`(?i)Vodafone[ _]875(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]975N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]785(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD 525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]890N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]985N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart ?Tab ?3G`),
		regexp.MustCompile(`(?i)Smart ?Tab ?4G`),
		regexp.MustCompile(`(?i)Smart ?Tab ?4`),
		regexp.MustCompile(`(?i)SmartTab7[);/ -]`),
		regexp.MustCompile(`(?i)SmartTab10[);/ -]`),
		regexp.MustCompile(`(?i)Smart ?Tab ?II ?7`),
		regexp.MustCompile(`(?i)Smart ?Tab ?II ?10`),
		regexp.MustCompile(`(?i)Smart ?Tab ?III ?7`),
		regexp.MustCompile(`(?i)Smart ?Tab ?III ?10`),
		regexp.MustCompile(`(?i)Vodafone TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD[ _]([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Vodafone[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Vonino|Epic (?:E8|P7)|Gyga[ _](?:X|S|QS|XS)|Jax[ _](?:QS|[SXQN]|Mini)|Magnet[ _](?:M[19]|G[35]0)|Navo_QS|Onyx_(QS|Z)|Orin_QS|Pluri[ _](?:[BCMQ]7|[CQM]8)|Sirius_QS|Volt[ _][XS]|Xavy_(T7|L8)|Xylo[ _][XSPQT]|Zun[ _]X[OS]?|JAX_N|Druid_L10|iMart_Pro`),
		regexp.MustCompile(`(?i)Zun[ _]XO`),
		regexp.MustCompile(`(?i)Zun[ _]XS`),
		regexp.MustCompile(`(?i)Zun[ _]X`),
		regexp.MustCompile(`(?i)Xylo[ _]([PSXQT])`),
		regexp.MustCompile(`(?i)Volt[ _]S_A7`),
		regexp.MustCompile(`(?i)Volt[ _]S`),
		regexp.MustCompile(`(?i)Volt[ _]X`),
		regexp.MustCompile(`(?i)Gyga[ _]QS`),
		regexp.MustCompile(`(?i)Gyga[ _]XS`),
		regexp.MustCompile(`(?i)Gyga[ _](S|X)`),
		regexp.MustCompile(`(?i)Jax[ _]QS`),
		regexp.MustCompile(`(?i)Jax[ _]S_A7`),
		regexp.MustCompile(`(?i)Jax[ _]([SQXN])`),
		regexp.MustCompile(`(?i)Jax[ _]Mini`),
		regexp.MustCompile(`(?i)Epic (E8|P7)`),
		regexp.MustCompile(`(?i)Pluri[ _](B|C|M|Q)7`),
		regexp.MustCompile(`(?i)Pluri[ _]([CQM])8`),
		regexp.MustCompile(`(?i)Druid[_ ](L10)`),
		regexp.MustCompile(`(?i)Magnet[ _](M[19]|G[35]0)`),
		regexp.MustCompile(`(?i)Onyx_(QS|Z)`),
		regexp.MustCompile(`(?i)(HK1 (?:Max|MINI|PLUS|PRO)|VONTAR[ -](?:Z[58]|V1|KIII|MX-4K|X3))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VONTAR[ -](Z[58]|V1|KIII|MX-4K|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SXPro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VORKE (Z[157]|Z6(?: Plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOTO[ _\-]|VT8[89]8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOTO[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)VOTO[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(VT8[89]8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Voxtel_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:VOYO[_ ](?:A15)|i8-Max|Q101-4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i8-Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Q101)-4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOYO[_ ](A15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Joy [123]\+|Joy [34]|Active 1\+|Bee 3|Active 3|V341U|Bee Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy ([123])\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy ([34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active 1\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bee 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V341U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bee Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VSUN (?:ILLUSION|RACE|V9)|MARS TOUCH|MARS NOTE|MARS NOCAM|SATURN SELFIE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILLUSION(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MARS TOUCH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MARS NOTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MARS NOCAM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SATURN SELFIE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RACE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VP5004A|HT0704W08|VS5513|VS4011|VR6031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VP5004A|VR6031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS5513(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS4011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WE (A[15]0|B3|F[12]0|E[12]|L[3469]|R[34]|V[34]|S1|X[13]|T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WIWA DREAM PLAYER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Walton|Walpad|RX7 Mini|Primo[ _](C[1234]?|D[1-689]|E[1-589]|F8s|S7|EF[23]?|EM|F[1-79]i?|G[1-9]|GF[234]?|GH[23]?|GM|H[2-689M]|H7s|N[F1]?|NX2?|R[1-468]|R[HM]2?|RX[23]?|S[1-6]|V1|X[1-4]|Z|ZX)`),
		regexp.MustCompile(`(?i)Walpad[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Primo H8 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo (RM2|ZX2|NX4) mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo H8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RX7 Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Walton[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)WELLCOM[ _\-/]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Westerndigital|WDSimpleBrowser`),
		regexp.MustCompile(`(?i)WESTPOINT[;,]`),
		regexp.MustCompile(`(?i)(TETS-4919SM)`),
		regexp.MustCompile(`(?i)Wexler|(?:ULTIMA 7 TWIST PLUS|TAB10iQ3G|TAB[ _]10Q)(?:[);/ ]|$)|ZEN[ _](?:4\.[57]|5)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?ZEN[ _]4\.5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?ZEN[ _]4\.7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?ZEN[ _]5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZEN[ _]5\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?TAB[ _]10Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB10iQ3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wexler[ _\-\.]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Wexler[ _\-\.]([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)(ULTIMA 7 TWIST PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wieppo (S6 Lite|S[658]|E1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wigor (V4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WIKO[_ -])|(?:WIKO-)?CINK_[a-z0-9_]+|(?:WIKO-)?HIGHWAY_[a-z0-9_]+|(?:WIKO-)?(?:Cink([^/;]*)|Highway([^/;]*)|Iggy|Stairway|Rainbow ?(Jam|Lite|Up)?|Darkside|Darkmoon|Darkfull|Darknight|Freddy|FEVER|Jerry[2]?|Sublim|Ozzy|JIMMY|Barry|Birdy|Bloom|Getaway|Goa|Kite|Robby|Lenny[2-9]?|Slide|Sunset[2-9]?|Sunny[2-9]?|Tommy[2-9]?|PULP(?: Fab)?|Wax|HARRY|Ridge(?: Fab)?|U FEEL(?: Prime| Lite)?|U PULSE(?: LITE)?|View2 (?:Go|Plus)|View XL|View Prime)(?: Plus)?(?: 4G)?(?: Build|$)?|W_(?:C8[06]0|K[346]00|P130|P200|C200SN)|WC300|W-(?:V7[23]0|V745|V755|V8[035]0|P[36]11|K130|K211|K3[68]0|K420|K510S?|K560|K610|K630)-(?:BYT|EEA|FRA|OPE|SUN|SWI|TIM|TMV|TVM|DU|T[HV]|ID)|WIM Lite|W-V851|W-V6[08]0|W-V750BN|W-K200|W-U300|U307AS|CINK PEAX 2|HIGHWAY PURE|C210AE|v3913|U614AS|V3991AN`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V745`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V750`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V755-EEA`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Cink Peax 2`),
		regexp.MustCompile(`(?i)(?:Wiko-)?Cink([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?CINK_([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY PURE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY STAR`),
		regexp.MustCompile(`(?i)(?:Wiko-)?Highway([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY_([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Iggy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?FEVER`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Stairway`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge Fab 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Rainbow ([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Rainbow`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkside`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkmoon`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkfull`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darknight`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sublim`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ozzy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Barry`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Birdy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Bloom`),
		regexp.MustCompile(`(?i)(?:WIKO-)?JIMMY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Jerry2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Jerry`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Getaway`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Goa`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Freddy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Kite`),
		regexp.MustCompile(`(?i)C210AE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U307AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U316AT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)v3913(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?3 Max`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?4 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?([2-9])`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Slide`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunset2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunset`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny3`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny`),
		regexp.MustCompile(`(?i)(?:W_K600|Tommy3|W_C200SN)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Wax`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HARRY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?WIM Lite`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp Fab 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp Fab`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Robby(2)?`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U PULSE LITE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U PULSE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL LITE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL PRIME`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View2 Go`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View XL`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View Prime`),
		regexp.MustCompile(`(?i)W-V800-(TVM|TIM|EEA|OPE|DU)`),
		regexp.MustCompile(`(?i)W-K130-(?:OPE|EEA)`),
		regexp.MustCompile(`(?i)W-K510-(?:TVM|EEA|OPE|SUN|BYT|TH)|W-K510S-SWI`),
		regexp.MustCompile(`(?i)W-K560-(?:EEA|TVM)`),
		regexp.MustCompile(`(?i)W-V720-(?:EEA|OPE|SUN)`),
		regexp.MustCompile(`(?i)W-P311-(?:EEA|OPE|TVM)`),
		regexp.MustCompile(`(?i)W-P611-(?:EEA|OPE)`),
		regexp.MustCompile(`(?i)W-V830-(?:EEA|OPE|ID)`),
		regexp.MustCompile(`(?i)W-V730-(?:EEA|TVM)`),
		regexp.MustCompile(`(?i)W-U300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U520AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U614AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wiko ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Wileyfox|(?:Swift 2|crackling)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wileyfox Spark \+`),
		regexp.MustCompile(`(?i)Wileyfox; Pro`),
		regexp.MustCompile(`(?i)Wileyfox (Spark|Swift)`),
		regexp.MustCompile(`(?i)Wileyfox ([^/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Swift 2 (X|Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Swift 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOTE GRACE V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wink[_ ]`),
		regexp.MustCompile(`(?i)Wink[_ ]((?:Glory|World|Share|City)(?:[_ ](?:SE|S))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wink[ _](Primo|Highway)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winmax[ _](?:XC14|XC[46]|TX30)(?:[);/ ]|$)|MAUI.+Winmax_BD45`),
		regexp.MustCompile(`(?i)Winmax[ _](XC14|XC[46])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winmax[ _](TX30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAUI.+Winmax_(BD45)`),
		regexp.MustCompile(`(?i)Winnovo[ _]|(?:T10LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T10LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winnovo[ _](M866|M798|VTab|750[PK])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winnovo[ _](K5[46]|K43)[a-z]{2}`),
		regexp.MustCompile(`(?i)WISENET5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)miSmart|miTab|WIAM \#24|WOLDER`),
		regexp.MustCompile(`(?i)WIAM \#24`),
		regexp.MustCompile(`(?i)miSmart[ \-_]?([^/]+) Build`),
		regexp.MustCompile(`(?i)miTab[ \-_]?([^/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)AT[ _-]AS([0-9A-Z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:W55SE|WS067)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wonu ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TERRA[ _]PAD[ _](\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]|Nimbus 101Q`),
		regexp.MustCompile(`(?i)Nimbus ?(101Q|115|1100RX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WOXTER[ _]I-101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]([SQ]X) ?([0-9A-Z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[_ ](?:Zielo[ _])?(Q27|Z800|Z420)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)X[-]?BO (V[78]|V1[01]|V[89]\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[-_]TIGI|Hope7[_ ](?:Mate|Max)|JOY10 Mate|Photo_P15_Lite|SHARP_2`),
		regexp.MustCompile(`(?i)Hope7[_ ](Mate|Max)`),
		regexp.MustCompile(`(?i)X-TIGI[_ ]V28[_ ]LTE`),
		regexp.MustCompile(`(?i)X[-_]TIGI[_ ]V19`),
		regexp.MustCompile(`(?i)X-TIGI[_ ]Photo[_ ]P11`),
		regexp.MustCompile(`(?i)X[-_]TIGI[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)X-View|ZEN_U5\+|AMBER_KIDS|Proton_Amber_HD|PROTON_JADE_2_PRO`),
		regexp.MustCompile(`(?i)ZEN_U5\+`),
		regexp.MustCompile(`(?i)XGIMI TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGODY|Y19\(EU\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGODY Y17(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y19\(EU\)`),
		regexp.MustCompile(`(?i)XGODY_X96(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LA2-(?:L|S[N]?)|HLA Note3|L7620DE|20190416Q|20170608S|20180322D|20190325D|20190718Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLA Note3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LA2-(?:L|S[N]?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(20190416Q|L7620DE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20170608S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20180322D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190325D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190718Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi|MiTV-\w|Mi9 Pro 5G|(?:MI [a-z0-9]+|Mi-4c|MI-One[ _]?[a-z0-9]+|MIX(?: 2S?)?|pomelo)(?:[);/ ]|$)|HM (?:[^/;]+) (?:Build|MIUI)|(?:2014501|2014011|201481[12378]|201302[23]|2013061) Build|Redmi|POCOPHONE|(?:SHARK )?(KLE|KSR|MBU)-[AH]0|SK[RW]-[AH]0|PRS-[AH]0|POCO F1|DLT-[AH]0|MIBOX[234]([_ ]PRO)?|MiTV4[ACSX]?|AWM-A0|MI CC 9 Meitu Edition|MiBOX1S|M2006J10C|M2006C3(?:L[IGC]|LVG|MN?G|MT)|M2007J1(?:7[CGI]|SC)|M2002J9[SEG]|HM2014819|WT88047|210611(?:8C|19BI)|M2004J(?:7[AB]|19)C|M2012K11(?:[CGI]|A[CI])|M2011K2[CG]|M2011J18C|M2006C3[ML]II|M2003J15SC|M2007J3S[ICYGP]|M2007J22[CG]|M2103K19[CGYI]|M2101K(?:[79]AG|7AI|7B[GI]|6[GIRP]|7BNY|9[GCR])|M2010J19S[CGYIL]|M1908C3JGG|M2102(?:K1AC|K1[CG]|J2SC)|HM NOTE 1(?:LTE|W)|MI[_ ]PLAY|XIG01|Qin 1s\+|Qin 2(?: Pro)?|MI_(NOTE_Pro|5X|4i|(?:A2|8)_Lite)|A001XM|lancelot|XIG02|21061119(?:[AD]G|AL)|2107119DC|M2101K(?:7BL|9AI)|M2012K10C|M2104K10AC|M1901F71|21051182[CG]|21081111RG|2109119D[GI]|21091116(?:AI|[AU]?C|i)|220111(?:7T[GIY]|19TI)|21121(?:119S[CG]|23AC)|220111[67]SG|2107113S[GR]|M2105K81A?C|2109119BC|220112[23]C|2201117SY|joyeuse|galahad|begonia|beryllium| MDG1`),
		regexp.MustCompile(`(?i)SKR-[AH]0`),
		regexp.MustCompile(`(?i)SKW-[AH]0`),
		regexp.MustCompile(`(?i)DLT-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KLE-A0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KSR-A0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KLE-H0`),
		regexp.MustCompile(`(?i)(?:SHARK )?MBU-H0`),
		regexp.MustCompile(`(?i)(?:SHARK )?MBU-A0`),
		regexp.MustCompile(`(?i)(?:SHARK )?PRS-[AH]0`),
		regexp.MustCompile(`(?i)Xiaomi_2014501|2014501 Build`),
		regexp.MustCompile(`(?i)Xiaomi_2014011|2014011 Build`),
		regexp.MustCompile(`(?i)Xiaomi_201302[23]|201302[23] Build`),
		regexp.MustCompile(`(?i)Xiaomi[_-]2014818|2014818 Build`),
		regexp.MustCompile(`(?i)Xiaomi_2014817|2014817 Build`),
		regexp.MustCompile(`(?i)Xiaomi[_-]201481[123]|201481[123] Build`),
		regexp.MustCompile(`(?i)MI[_ ]PLAY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi 9 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI CC 9(?: Meitu Edition)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi_M2001J2E_TD-LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xiaomi_)?(?:Mi 10 Pro|M2001J1E(?:_TD-LTE)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2011K2[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11AI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J3S[GI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J3S[CYP](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J1SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2102J2SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2002J9[EGS]|XIG01|Mi 10 Lite 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2107113S[GR]|Xiaomi 11T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21081111RG|Xiaomi 11T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K9[GCR]|2109119DG|Mi 11 Lite 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2109119DI|(?:Xiao)?mi 11 Lite 5G NE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K9A[GI]|Mi 11 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2102K1[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2102K1AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201122C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201123C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2112123AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI[ _]8[ _]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 8 Explorer Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 8 ([a-z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi 9T Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi ?9 Pro 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 9 Transparent Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI ([89]) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 5s Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi_2013061|2013061 Build`),
		regexp.MustCompile(`(?i)Mi[- ]([43])c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 4W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi_4i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 4 ?LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI MAX ([23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi[ _]A2[ _]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2106118C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi MIX 3 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX ([23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX 2S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi Note 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCOPHONE[ _]F1|POCO F1|beryllium`),
		regexp.MustCompile(`(?i)MDG1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WT88047(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM2014819(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 2A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 1S[CW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 8A (Dual|Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2004J7AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J19C|M2006C3MII|lancelot|galahad)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2010J19SI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3L[GCI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3LII(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3M[GT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3LVG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2010J19S[GYL]|pomelo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2006C3MNG|Redmi 9C NFC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21061119D[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061119A[GL]|21121119SG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21061119[BT]I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22011119TI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2004J7BC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K20 Pro Premium Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30 Pro Zoom Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K([23]0) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K10C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006J10C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Y1 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 6 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 4 Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qin 2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qin 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2107119DC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2109119BC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21051182[CG]|(?:Xiao)?mi Pad 5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2105K81C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2105K81AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 4 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIBOX3[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIBOX([234])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiBOX1S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MSSP[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MTEQ0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-AESP0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-ANSP0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOOQ0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MiTV-AXSO0|MiTV4(?:A|-ANSM0)|MiTV-MSSP0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-AXSO[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV(4[CSXI]|4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2011J18C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM NOTE 1W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM NOTE 1TD (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)HM NOTE 1(?:LTE|S)(?:W|GLOBAL|TD)? (?:Build|MIUI)|HM NOTE 1LTE`),
		regexp.MustCompile(`(?i)Xiaomi[_ ]2015052`),
		regexp.MustCompile(`(?i)(?:M2010J19SC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2003J15SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2101K7BL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J22G|A001XM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J22C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)joyeuse(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2101K7A[GI]`),
		regexp.MustCompile(`(?i)M2101K7B(?:[GI]|NY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2103K19[GC]|Redmi Note 10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XIG02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K6[GIRP]|M2104K10AC|Redmi Note 10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201116S[GR](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116UC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21121119SC|2201117T[GIY])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116(?:AI|I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M1908C3JGG|Redmi Note 8 \(2021\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)begonia(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1901F71(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note (\d+) Pro Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note (\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi[ _]Note[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Redmi[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)MI[ _]Note[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Qin 1s\+`),
		regexp.MustCompile(`(?i)MI[- ]One[ _]?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi[- ]One[ _]?([a-z0-9]+)?(?: Build|[);])`),
		regexp.MustCompile(`(?i)MI[ _]([^;/]*) Build`),
		regexp.MustCompile(`(?i)MI[ _]([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM Note ([^/;]+) (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)HM ([^/;]+) (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)Xiaomi[ _-]([^/;]+)(?: Build|$)`),
		regexp.MustCompile(`(?i)XI-CE(?:655|U[48])`),
		regexp.MustCompile(`(?i)XI-CE(655|U[48])`),
		regexp.MustCompile(`(?i)Xolo|(?:Q600|Q700s?|Q800|Q1000s|Q1000[ _]Opus|Q1010i|Q2000|Omega[ _]5.[05]|Era5X|Era[ _]2V|Era_4X(?:_2GB)?|BLACK-1XM|A1000s_Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era_?([45])X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era_4X_2GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era[ _]2V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Q600 Club|Q600|Q700s?|Q800|Q1000s Plus|Q1000s|Q1000[ _]Opus|Q1010i|Q2000|Omega[ _]5.[05]|A1000s_Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xolo[ _]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Xolo[ _]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:TelePAD(?:795|731|1032|10A3|7A3)|Era 2X|HMT(?:390Q?|400)|HST 260)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TelePAD(7|10)A3 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TelePAD(795|731|1032)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMT(390Q?|400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HST 260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Era 2X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xshitou[_ ](P7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xtouch[ _](?:X10|A5|X)|XBot[_ ](?:Senior|Junior)|X9_16GB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xtouch[ _](X10|A5|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X9_16GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XBot[_ ](Senior|Junior)`),
		regexp.MustCompile(`(?i)(BRIO[_ ]X31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YASIN Android TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y103)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU Fly (\w+)`),
		regexp.MustCompile(`(?i)YUHO_|(?:Netra(?:[_ ](?:Plus|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YUHO_(O2|H2|Y[123])_PRO`),
		regexp.MustCompile(`(?i)(?:YUHO_)?(Vast2?|O[12]|Y2|Netra(?:[_ ](?:Plus|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YNDX-?000SB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xenta[ \-]Tab|Luna TAB|TAB09-410|TAB10-410|TAB07-485|TAB0[78]-200|TAB08-201-3G|TAB9-200|TAB09-211|TAB10-2[01]1|TAB13-201`),
		regexp.MustCompile(`(?i)Luna TAB07-10[01]`),
		regexp.MustCompile(`(?i)Xenta-TAB07-21[01]`),
		regexp.MustCompile(`(?i)TAB10-2[01]1`),
		regexp.MustCompile(`(?i)M631Y|M685Y4|M651G_MY|YES (?:Altitude 4|MPY(?:48|54))`),
		regexp.MustCompile(`(?i)YES (Altitude 4|MPY(?:48|54))`),
		regexp.MustCompile(`(?i)Yezz|ANDY[ _]|(?:4E4|A5EI|LIV1|LIV2[_ ]?LTE|ART2PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIV2[_ ]?LTE`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9]\.[0-9][A-Z0-9]*)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9])([0-9][A-Z0-9]*)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9][A-Z0-9]+)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)KB2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YD20[16]|YOTA 3[+])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YD20[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOTA 3[+](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YTONE[ _\-]`),
		regexp.MustCompile(`(?i)YTONE[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)YTONE[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(?:YU5[05]10[A]?|YU4711|AO5510|YU5050|YU501[14]|YU5551)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5010[A]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AO5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5551(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5510[A]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU4711(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N101[ _]DUAL(?:[ _]CORE)?(?:[ _]?2|\|\|)?(?:[ _]V11)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Yusun|LA2-T`),
		regexp.MustCompile(`(?i)Yusun ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Yusun ([a-z0-9_\-\+]+)`),
		regexp.MustCompile(`(?i)YXTEL_([HU]1|U3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ODYSSEY O2|ODYSSEY RANGE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIFRO|(?:ZT-97003G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZT-9700)3G`),
		regexp.MustCompile(`(?i)ZTE|AxonPhone|([a-z0-9]+)_USA_Cricket|(?:Blade[ _](?:E01|V0820|L110|L[2357]|L7A|S6|V[6789]|V8Q|V8 SE|V9 VITA|X7|A(310|320|460|465|475|510|520|530|602|51|30|3)|V580|V Ultra|Q Lux)|N9[15]8St|N818S|N951[0579]|N91[38]0|N9101|N913[267]|N952[01]|N9560|N9810|N799D|[UV]9180|[UV]9815|Z(?:5151V|610DL|6400C|6410S|233V|331|5031O|559DL|6621O|667T|768G|792|81[25]|818L|82[08]|83[12359]|85[125]|851M|992|(557|71[67]|798|836|861|916)BL|986DL|(232|718|828)TL|(?:233|353|558|717|799|837|862|899|917|963)VL|955A|95[678]|965|97[018]|98[1237]|986U|999|936L)|V769M|Apex2|G (LTE|Lux)|Vec|Z959|V865M|Z3001S|902ZT|KIS II Max|Kis 3|K3DX-V5G|Z930L|Optus X|Blade[ _](A[357] 2019-T|A[35] 2020-T|A7S 2020-T|A6 MAX|A0622|X9)|Z3153V|Z836F|Ctyon-A9|602ZT|MO-01[JK]|Z963U|402ZT|P545|P609|P650 Pro|dandelion|901ZT|A00[13]ZT|Z-01K|UZTE (?:GRAND V7|V808)|ZTG01|K8[37]CA|VERGATARIO ?5(?:PLUS)?|Axon mini|KIS C341|A103ZT|Z3351S|Z5156CC|B867RE|MEO Smart A80|P651 2021)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P651 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)7530N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9040N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2122H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A001ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A003ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A103ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTG01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T221(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0616(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A7020(?:RU)?|Blade A7S 2020-T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0722(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade 10 Vita(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE (?:2050|V1050)(?:RU)?`),
		regexp.MustCompile(`(?i)ZTE Axon 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2019G? Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:902ZT|A2020N3 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2020 SP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2021[LGH]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2021E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9000N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N799D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z818L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3001S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3351S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ctyon-A9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K3DX-V5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE)?N918St(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N958St(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z963U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5156CC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9130(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9132(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9136(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9137(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9180(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5151V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9517(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z559DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)402ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade Q Lux(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T320(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9515(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9519(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9521(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9560(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[UV]9180(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[UV]9815(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[_ ]Blade[_ ](C2|V7)[_ ]Plus`),
		regexp.MustCompile(`(?i)(?:ZTE_)?V829`),
		regexp.MustCompile(`(?i)V970M?|V987`),
		regexp.MustCompile(`(?i)Z959(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z95[67]`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Grand[ _]Era`),
		regexp.MustCompile(`(?i)Z331(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N818S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5031O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P545(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Optus X Start(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BA520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L2 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Blade[ _]L2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3 Apex(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]T610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]Blade L4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Blade L5 Plus|BLADE L0510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L7A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L(\d+)(?:RU)?`),
		regexp.MustCompile(`(?i)Blade A([357]) (20(?:19|20))`),
		regexp.MustCompile(`(?i)ZTE BV0720(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A[35] 2020-T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE C880A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A([35]1?) Lite`),
		regexp.MustCompile(`(?i)Blade (S6|A[35]1?) Plus`),
		regexp.MustCompile(`(?i)BLADE A0622(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE (?:A6 MAX|A0605)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0622(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade S6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE A5 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]T617(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V6 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V6 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade (?:V7 Lite|V0720)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0710(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V([67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BV0800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE Blade V1000|(?:ZTE_)?V1000`),
		regexp.MustCompile(`(?i)Blade X([79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T630(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade (?:V8Q|V0840)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V8 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE (?:V0850|V8 Mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V(9|10) Vita(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V([89]|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Blade[ _])?(Apex2|G (LTE|Lux)|Vec)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z768G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z717[BV]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z233VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z798BL|Z799VL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z792`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z812`),
		regexp.MustCompile(`(?i)Z851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z836BL|Z837VL|Z836F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z861BL|Z862VL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z958|Z955A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)dandelion(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE[-_])?Z992`),
		regexp.MustCompile(`(?i)(?:Z999|Z-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B201[56]|Axon mini`),
		regexp.MustCompile(`(?i)A2017[GU]?`),
		regexp.MustCompile(`(?i)A2020(?:RU|[GU])? Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V?975|geek`),
		regexp.MustCompile(`(?i)(?:ZTE-)?G-X991`),
		regexp.MustCompile(`(?i)Z936L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MO-01[JK](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V865M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6621O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P650 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V769M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VERGATARIO 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VERGATARIO5PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE V5 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2121[LE]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B867RE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K83CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K87CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AxonPhone ([^;/]+) Build`),
		regexp.MustCompile(`(?i)([a-z0-9]+)_USA_Cricket`),
		regexp.MustCompile(`(?i)ZTE[- ](V98|V96A|V81|V70)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ](A(\d+)C?|L111|V580|E01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V0730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V0800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE B(A601|A910|A510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE Blade (A[35]1)`),
		regexp.MustCompile(`(?i)ZTE BA610T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[- ]([a-z0-9\-_ ]+) Build`),
		regexp.MustCompile(`(?i)ZTE-(?:G |G-)?([a-z0-9 _]+)`),
		regexp.MustCompile(`(?i)U?ZTE[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)ZYQ-Q88|(Q(?:2602|262[436]|638|2688|272[89]|3022|3623|TAB Tab4|328 m9|328|668)|J77|Q[._](?:Up|Boss P99|Dee R09|Good M9|Hi|Hot|Me|Mate R99|Next|TOP-X8|You))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q\.Up C5`),
		regexp.MustCompile(`(?i)Q\.Up`),
		regexp.MustCompile(`(?i)Q\.Boss P99`),
		regexp.MustCompile(`(?i)Q[._]Dee R09`),
		regexp.MustCompile(`(?i)Q\.Good M9`),
		regexp.MustCompile(`(?i)Q[._]Hi S1`),
		regexp.MustCompile(`(?i)Q[._]Hi`),
		regexp.MustCompile(`(?i)Q[._]Hot P7 3G`),
		regexp.MustCompile(`(?i)Q[._]Hot`),
		regexp.MustCompile(`(?i)Q[._]Me Phone7 3G`),
		regexp.MustCompile(`(?i)Q[._]Me Plus7`),
		regexp.MustCompile(`(?i)Q[._]Me`),
		regexp.MustCompile(`(?i)Q[._]Mate R99`),
		regexp.MustCompile(`(?i)Q[._]Next B7`),
		regexp.MustCompile(`(?i)Q[._]Next J2`),
		regexp.MustCompile(`(?i)Q[._]TOP-X8`),
		regexp.MustCompile(`(?i)Q[._]You`),
		regexp.MustCompile(`(?i)(Z3211G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZATEC[_ ]|(?:[ ]WIND|ZPLAY1_2018|Zpower_(?:Plus|2018))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZATEC[_ ]GRAVITY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[ ]WIND(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (TC5[16]|TC2[0156]|TC75|TC7[05]x|TC5[27]|TC700H|ET51)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TC5[16]|TC2[0156]|TC75|TC7[05]x|TC5[27]|TC700H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ET51)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]([^/;)]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)(Admire[_ ][^/;]+|Cinemax[^/;)]+)(?:Build|\))|(?:AdmireGlam|M72 Smart)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M72 Smart)`),
		regexp.MustCompile(`(?i)(Admire[_ ][^/;]+|Cinemax[^/;)]+)(?:Build|\))`),
		regexp.MustCompile(`(?i)Z5007|Z551[679]|Z6001`),
		regexp.MustCompile(`(?i)C-723ULTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZFINERY900(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIDOO[ _](H6 Pro|X6 Pro|X9S|Z10|X[158]|X20 Pro|Z9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIOX[_ ]|(?:Astra Viva 4G|Astra (?:(?:NXT|Curve|Young) Pro|(?:Metal|Titan|Young|Curve) 4G|Star|Blaze)|Duopix \w\d{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIOX[_ ]F9[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (Viva|Titan|Young|Metal|Curve) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (Star|Blaze)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (NXT|Curve|Young) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Duopix (\w\d{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZM(?:CK|EM|TFTV|TN)[a-z0-9]+)|ZA409`),
		regexp.MustCompile(`(?i)(ZM(?:CK|EM|TFTV|TN)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)ZOPO|(?:ZOPO[_ ])?(Flash X3|F2_Color5_5|F5_Color_M5|ZP[0-9]{2,}[^/;]+)(?:\)| Build)`),
		regexp.MustCompile(`(?i)(?:ZOPO_C2_MOD|ZP998)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO 9xxQuad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?ZP980[+](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?ZP980(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP952(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP951(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP955(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP950[+h]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP(?:900H?|910)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP(?:800H|810)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP500[+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP330(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F2_Color5_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F5_Color_M5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP5(63|86)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP567(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP300[S+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP200[+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP1790(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP781(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO[_ ]ONE[_ ]([YXTP])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?(Flash X3|X1i|ZP[0-9]{2,}[^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Zuum[ _-]|Android 6.+ UNIQ(?: Build|[);])|(?:ROCKET III?|Akus (?:PRO|Z1?)|COVET|MAGNO(?:-S)?|ONIX(?: S)?|STEDI|STELLAR(?:[ _](?:Z|PRO|[MP]1|M2))?|GRAVITY [ZM]|AURA X|COVET_PRO_LITE|RONI|Android.+; LIMIT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COVET( Z)?`),
		regexp.MustCompile(`(?i)MAGNO( C1?)?`),
		regexp.MustCompile(`(?i)STELLAR ([MP][123]|Z)`),
		regexp.MustCompile(`(?i)GRAVITY ([MZ])`),
		regexp.MustCompile(`(?i)ROCKET (III?)`),
		regexp.MustCompile(`(?i)Android 6.+; UNIQ(?: Build|[);])`),
		regexp.MustCompile(`(?i)Android.+; LIMIT(?: Build|[);])`),
		regexp.MustCompile(`(?i)Zuum[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Zuum[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZYNC|(Cloud Z5|Z1000|Z18|Z99|Z99[_ ][23]G|Z99|Z900[_ ]Plus|Z909|Z930[+]|Z930)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z18| DuZ99al Core|Z99[_ ][23]G|Z99 Dual Core|Z99|Z900[_ ]Plus|Z909|Z930[+]|Z930)`),
		regexp.MustCompile(`(?i)(Z1000[^/;]+)Build`),
		regexp.MustCompile(`(?i)Cloud (Z5)`),
		regexp.MustCompile(`(?i)ZYNC Cloud[ _]([^;]+)Build`),
		regexp.MustCompile(`(?i)ZYNC[ _]([^;]+)Build`),
		regexp.MustCompile(`(?i)(AL-555|GI-626|OB[_-](?:421|728|627))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OB[_-](421|728|627)`),
		regexp.MustCompile(`(?i)Decade 53(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BO-(FRSP4|LFSPBS5|LFSP4|LFSPSL4|LFSPBS5|LFSPSL6QCI)`),
		regexp.MustCompile(`(?i)BO-(FRSP4)`),
		regexp.MustCompile(`(?i)Aquaris|bq [^/;]+ Build|BQS[-_]([0-9]{4})|(BQ(ru)?[_ -][0-9]{3,4})|BQ5059|BQ1008G|BQru_BQru-`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5209L|5044)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:6035L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5535L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-(?:5070|6040L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-(?:6424L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5730L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5731L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5745L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5533G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5031G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5732L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-6430L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-6630L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-9011[G]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-8068L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(ru)?-(7082)`),
		regexp.MustCompile(`(?i)BQ-7022(G)?`),
		regexp.MustCompile(`(?i)BQ-6200L|BQ-6000L`),
		regexp.MustCompile(`(?i)BQ(ru)?[ -]6015L`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5525|6030G|6010G)`),
		regexp.MustCompile(`(?i)BQ-6001L|BQ-6050`),
		regexp.MustCompile(`(?i)BQ-5707G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5702(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5700L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5591|551[89]G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5520L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5519L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5540L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5517L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5516L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5515(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5515[L]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5512L|5528L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5511L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS[_ ]5505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5521|5594)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5508L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5507L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5504(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-6045L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4030G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5500L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5302G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5301(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5300G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(ru|S)?-(?:5211|5020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5206L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru|S)?-(?:5204|5050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5203(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5202(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5082(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5045L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5047L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:5065|5340)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5046L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-?(?:5059|5514G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BQru_)?BQ(?:ru)?-5058(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5057(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:5056|5030)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-6042l(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5055(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5054(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5052(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-6051G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-5045(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5037|5514L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5035(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5033(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5541L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5022(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5015L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5016G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5012L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5521L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5010G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5000G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5009L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-500[59](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5008L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5007L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5005L|5530L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5003L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5002G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5001L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru|S)?-5000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4702(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4701(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:4585|5011G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4583(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4560(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4555(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:4526|5004G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4516(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4515(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4501G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4077(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4072(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?[- ]402[68](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4008(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4001G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-3510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-3503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1085L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1084L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1083G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1082G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1077L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1057L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1051G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1050G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[-]?1008G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aquaris_([AM])4.5`),
		regexp.MustCompile(`(?i)BQ(?:ru)?[_ -](?:5590|5740G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:6016L|5520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5701L|5060)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BQ-7850|BQ-700[12]G|BQ-8002G|BQ-905[12]G|BQ-9702G|BQ-7056G)`),
		regexp.MustCompile(`(?i)BQ-8006G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7062G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1081G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7802G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7008G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7064G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7050G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7000G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7040G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7038G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7005G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7098G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1045[G]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:1054L|1020L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7083G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-8077L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7083(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1056L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1022l(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1024L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7055L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1025L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:bq )?(Aquaris[^/;]*) Build`),
		regexp.MustCompile(`(?i)Aquaris (VS|E(4.5|[56])|M(5|10)|U2 Lite|U2|U (Lite|Plus)|V Plus|X5 Plus|X2? Pro|X[25]|[CMUVX])`),
		regexp.MustCompile(`(?i)bq ([^/;]+) Build`),
		regexp.MustCompile(`(?i)eSTAR[_ ](?:Grand|GO\!?|Zoom Quad|Gemini|MINI[_ ]3G|BEAUTY|MOON)`),
		regexp.MustCompile(`(?i)eSTAR (Grand|GO\!?) (HD Intel|IPS Intel|IPS|HD|Intel) Quad Core 3G`),
		regexp.MustCompile(`(?i)eSTAR (Zoom Quad|Gemini|GO)`),
		regexp.MustCompile(`(?i)eSTAR GRAND HD quad core( [34]G)?`),
		regexp.MustCompile(`(?i)eSTAR[_ ]MINI[_ ]3G`),
		regexp.MustCompile(`(?i)eTouch ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Smart-Ex02|Ex-Handy 10)(?: (?:ROW|RUS))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iCherry_?`),
		regexp.MustCompile(`(?i)iCherry[ _](C(?:25[1258]|21[16]|110|121|22[0379]|23[03])|X1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i-Joy|i-Call|(?:Neon[79]|Sygnus|Deox|Elektra (?:M|L|XL|XXL))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra XL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra XXL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neon([79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sygnus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Deox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i-Call ([^;/]+) Build`),
		regexp.MustCompile(`(?i)i-Joy ([^;/]+) Build`),
		regexp.MustCompile(`(?i)i-mate ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)i-mobile ?[a-z0-9]+|i-Style|IQ ?(9\.1|5\.5|5\.6A?)`),
		regexp.MustCompile(`(?i)i-mobile (i-note[^/;]*) Build`),
		regexp.MustCompile(`(?i)i-Style ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)IQ ?(9\.1|5\.5|5\.6A?)`),
		regexp.MustCompile(`(?i)i-mobile (IQ[^/;]*) Build`),
		regexp.MustCompile(`(?i)i-mobile(?: )?([a-z0-9\- ]+) Build`),
		regexp.MustCompile(`(?i)i-mobile(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)iBall[ _]([^;/)]+)[ _]Build|iBall_Slide|(?:Snap[_ ]4G2|6351-Q400i|iT-KSA0003|iT-KSA0012|iT-KSA0066|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Brisk 4G2|Blaze_V4|Wondro 10|Q27 4G|Andi (?:Wink|5G Blink) 4G|Co-Mate)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Snap[_ ]4G2|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Blaze_V4|Wondro 10|Q27 4G|Brisk 4G2|Co-Mate)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6351-Q400i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0066(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBall[ _]([^;/)]+)(?:[ _]Build|\))`),
		regexp.MustCompile(`(?i)AUXUS ([^/;]+) Build`),
		regexp.MustCompile(`(?i)AUXUS (Core[^/;]+) Build`),
		regexp.MustCompile(`(?i)AUXUS ([^/;]+) Build`),
		regexp.MustCompile(`(?i)IBRIT_|(?:SI5[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IBRIT_I([57])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_POWER6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_Speed Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SI51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SI52(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iData (K1)`),
		regexp.MustCompile(`(?i)APACHE G6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART[_ ](L20X|G10[12]|S7[02]|G71|G81[H]?|L103|W10X)(?:_eea)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iHunt|One_ Love_|TITAN[_ ]P\d+|Like_(3|4U|3_Pro)|X300 Elite|S10_Tank_2019|S10 Tank PRO 2020|S60_Discovery_2019|AlienXLite2020|Alien X Lite|Alien_X|(?:S[23]0 Ultra ApeX 2021|S21 Ultra 4G 2021|Like 11 Panda Pro|Like_Hi10_2021|Like Hi5|S21 Plus 2021|Like_[78])(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Like_([378])`),
		regexp.MustCompile(`(?i)S([23]0) Ultra ApeX 2021`),
		regexp.MustCompile(`(?i)iHunt ([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)iKoMo ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(IK-102[58]|IK-1106|IK-7108|IK-787)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iLA[-_ ](Silk|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ITELL[_ ](?:K3300|K3500N?|K4700)|WTAB_714|WTAB 805)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(i5800C|i6800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IMARS VEGA X7|VIVI_8|MILKY_WAY_M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iNew|(?:V7A|V3 Plus|V3-?E|V3C|FIRE_Tab_6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3-?E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V7A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIRE_Tab_6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iNew[ -_]([^;/]+) Build`),
		regexp.MustCompile(`(?i)iOCEAN|M6752|W180|X7[ _]?S|X8 mini`),
		regexp.MustCompile(`(?i)X7[ _]?S`),
		regexp.MustCompile(`(?i)(M6752|W180) Build`),
		regexp.MustCompile(`(?i)iOCEAN[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)iOCEAN[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)iOutdoor (X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iPEGTOP[ _](Z26)`),
		regexp.MustCompile(`(?i)(?:Kylin[ _]5.[05]S?|KYLIN40|Jade[78]s|Amber[67]S?|Amber[58]S[ _]Pro|Phonenix50S|Ruby5S|Zafiro|I9355A|Opal 4S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kylin_5.0S`),
		regexp.MustCompile(`(?i)Kylin (5.[05])`),
		regexp.MustCompile(`(?i)Jade([78])s`),
		regexp.MustCompile(`(?i)(I9355A)`),
		regexp.MustCompile(`(?i)(IFoo (?:U200|H55))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iRola ([^/;]+) Build|(DX758|DX752|DX752|DX758[ _]?Pro) Build`),
		regexp.MustCompile(`(?i)DX758[ _]?Pro`),
		regexp.MustCompile(`(?i)(DX758|DX752)`),
		regexp.MustCompile(`(?i)iRola ([^/;]+) Build`),
		regexp.MustCompile(`(?i)iRULU[ _-](X11|V[34]|U2|AL101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iRULU[ _-](X11|V[34]|AL101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iRULU[ _](U2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ISWAG[ _]`),
		regexp.MustCompile(`(?i)iSWAG[_ ]KRONOS`),
		regexp.MustCompile(`(?i)iSWAG[_ ]Lynx`),
		regexp.MustCompile(`(?i)iSWAG[_ ]MANTRA`),
		regexp.MustCompile(`(?i)iSWAG[_ ]MEGA`),
		regexp.MustCompile(`(?i)iSWAG[_ ]NEMESIS`),
		regexp.MustCompile(`(?i)ISWAG[_ ]VIPER`),
		regexp.MustCompile(`(?i)(IS655)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel|iNote|GP10X2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)W6002E?`),
		regexp.MustCompile(`(?i)[LW]6004`),
		regexp.MustCompile(`(?i)iNote ([^/;]*)Build`),
		regexp.MustCompile(`(?i)iNote_([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)itel-it(1410|1512|1520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel-it1553(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel[- ](A14|A16 Plus|A44 Power|A23S|A52 Lite)`),
		regexp.MustCompile(`(?i)itel it170([23])`),
		regexp.MustCompile(`(?i)iTel ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)iTel[_ ]([a-z0-9\-_]*)`),
		regexp.MustCompile(`(?i)iTRUCK 7 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LAMCY (?:L3[05]0|C100|L400)|IVA S6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAMCY (L3[05]0|C100|L400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IVA S6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:733|730|766|930)TPC|769TPC(?:II)?|744TPC plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:733|730|766|930)TPC|769TPC(?:II)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Innelo_1|iV 505|Me 1\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Me 1\+`),
		regexp.MustCompile(`(?i)(?:MC401_GWL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MC401)_GWL`),
		regexp.MustCompile(`(?i)(Mi7_HERO_(?:BETA|TAB))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi7[_ ]HERO[_ ]BETA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi7[_ ]HERO[_ ]TAB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ivvi[ _](F1S|F2C|V1M-S|V2|i1-S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mPhone ?([68]|7 Plus|7s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _](?:C[12]|X10|X[126]|MG430|Q[145])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _]Q1 plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _](C[12]|X[126]|MG430|Q[145])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _]X10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)phoneOne[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Texet|(NaviPad [^/;]*) Build|TM-(?:1046|1058|1057|1067|3000|3200R|3500|400[34]|4071|450[34]|451[30]|4377|4082R|508[34]|550[358]|5010|5017|507[4-7]|5[23]77|6003|6906|702[13]|7055HD|709[69]|9747BT|9758|9751HD|9767|5513|520[410]|507[13]|558[134]|570[23]|7859|8044|9748[ _]3G|9720|7047HD[ _]3G|9757|9740|4982|4515|4083|500[3567]|5571|3204R|5016|8043|7047HD[ _]3G|8041HD|8066|705[23]|7041|8041HD|8051|8048|974[96]|973[78]W|974[170]|9743W|9750HD|7043XD|7049|7887|7037W|702[46])|TB-(771A|711A)|X-Force[\(-]?TM-5009\)?|X-Plus[\(-]?TM-5577\)?|TM_5011|X-pad (?:AIR 8|iX 7|NAVI 7.[35]|NAVI 10|SKY 8.1|STYLE 8|STYLE 10.1|HIT|LITE 7.[12]|QUAD (?:7.2|10|7)|SHINE 8.1)(?: 3G)?`),
		regexp.MustCompile(`(?i)(NaviPad [^/;]*) Build`),
		regexp.MustCompile(`(?i)X-pad SHINE 8.1 3G`),
		regexp.MustCompile(`(?i)X-pad QUAD 7.2 3G`),
		regexp.MustCompile(`(?i)X-pad LITE (7.[12])`),
		regexp.MustCompile(`(?i)X-pad STYLE 10.1 3G`),
		regexp.MustCompile(`(?i)(X-pad (?:AIR 8|iX 7) 3G)`),
		regexp.MustCompile(`(?i)TM-7096|X-pad NAVI 7.3 3G`),
		regexp.MustCompile(`(?i)X-pad NAVI 7.5 3G`),
		regexp.MustCompile(`(?i)X-pad SKY 8.1 3G`),
		regexp.MustCompile(`(?i)TM-1046|X-pad NAVI 10 3G`),
		regexp.MustCompile(`(?i)(TM-(?:1057|1067|6906|8043|9748[_ ]3G|9740|9757(?:[_ ]3G)?|7047HD[ _]3G|9747BT|9751HD|702[13]|705[23]|7041|9720|7047HD[_ ]3G|8044|8041HD|973[78]W|9743W|974[710]|9750HD|7043XD|7037W|702[46])|TB-(?:771A|711A|8041HD))`),
		regexp.MustCompile(`(?i)(TM-(?:3000|3200R|400[34]|4083|4377|4504|451[30]|500[35]|5[23]77|5571|3204R|520[04]|5581|5505|5017|507[13-7]|5081|6003|5513))`),
		regexp.MustCompile(`(?i)TM-508(3|4)`),
		regexp.MustCompile(`(?i)TM-558(3|4)`),
		regexp.MustCompile(`(?i)TM-(5016|3500)`),
		regexp.MustCompile(`(?i)TEXET[_ ]IX-MINI`),
		regexp.MustCompile(`(?i)X-Force[\(-]?TM-5009\)?`),
		regexp.MustCompile(`(?i)X-Plus[\(-]?TM-5577\)?`),
		regexp.MustCompile(`(?i)teXet[_ ]X-medium[_ ]plus`),
		regexp.MustCompile(`(?i)Vmobile[ _]`),
		regexp.MustCompile(`(?i)Vmobile[ _](J7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vmobile XS Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OWN[ _]|(?:S4035[ _][34]G|Smart8|SMART PLUS LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUN ([67])`),
		regexp.MustCompile(`(?i)FUN 5\(4G\)`),
		regexp.MustCompile(`(?i)(?:OWN[ _])?(S3000D|S3010|S3020D|S4010|S4025|S4035[ _][34]G)`),
		regexp.MustCompile(`(?i)Smart8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART PLUS LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FBMD/(?:Aspire E5-421G|Z5WAL|One S1003);`),
		regexp.MustCompile(`(?i)FBMD/Aspire E5-421G;`),
		regexp.MustCompile(`(?i)FBMD/Z5WAL;`),
		regexp.MustCompile(`(?i)FBMD/One S1003;`),
		regexp.MustCompile(`(?i)FBMD/(?:K50IN|K54L|T100HAN|T103HAF|UX360CAK|X550LB|X553MA|X555LN|X556UQK);`),
		regexp.MustCompile(`(?i)FBMD/K50IN;`),
		regexp.MustCompile(`(?i)FBMD/K54L;`),
		regexp.MustCompile(`(?i)FBMD/T100HAN;`),
		regexp.MustCompile(`(?i)FBMD/T103HAF;`),
		regexp.MustCompile(`(?i)FBMD/UX360CAK;`),
		regexp.MustCompile(`(?i)FBMD/X550LB;`),
		regexp.MustCompile(`(?i)FBMD/X553MA;`),
		regexp.MustCompile(`(?i)FBMD/X555LN;`),
		regexp.MustCompile(`(?i)FBMD/X556UQK;`),
		regexp.MustCompile(`(?i)FBMD/(?:Latitude E4300|Inspiron 3541|XPS 15 95[35]0);`),
		regexp.MustCompile(`(?i)FBMD/((?:Compaq|HP) |23-f364)`),
		regexp.MustCompile(`(?i)HP EliteBook (25[67]0p)`),
		regexp.MustCompile(`(?i)HP ProBook (440 G5|6[35]60b)`),
		regexp.MustCompile(`(?i)FBMD/(?:37021C5|80E5|80SM|80VR);`),
		regexp.MustCompile(`(?i)FBMD/37021C5;`),
		regexp.MustCompile(`(?i)FBMD/80E5;`),
		regexp.MustCompile(`(?i)FBMD/80SM;`),
		regexp.MustCompile(`(?i)FBMD/80VR;`),
		regexp.MustCompile(`(?i)FBMD/SCL141CTP;`),
		regexp.MustCompile(`(?i)FBMD/TH360R12.32CTW;`),
		regexp.MustCompile(`(?i)Satellite (A[25]00|C650|C855|L650|S855)`),
		regexp.MustCompile(`(?i)Satellite ([^;\)]+);`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod1[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod2[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod3[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod4[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod5[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod7[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod9[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod`),
		regexp.MustCompile(`(?i)COWON ([^;/]+) Build`),
		regexp.MustCompile(`(?i)M(1[57])`),
		regexp.MustCompile(`(?i)(SV-MV100)`),
		regexp.MustCompile(`(?i)Sonos/.+\((?:ZP.+)\)|Sonos;`),
		regexp.MustCompile(`(?i)\((ZPS(?:[13569]|1[1-578]|2[03])|ZP90)\)`),
		regexp.MustCompile(`(?i)Sonos;Play5;`),
		regexp.MustCompile(`(?i)Sonos;One;`),
		regexp.MustCompile(`(?i)YP-(G[SIPB]?1|G[57]0|GB70D)`),
		regexp.MustCompile(`(?i)YP-G[B]?1`),
		regexp.MustCompile(`(?i)Shanling (M6\(21\))`),
		regexp.MustCompile(`(?i)(DV-PTB1080)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Erisson[_ ]Shell`),
		regexp.MustCompile(`(?i)ALDINORD[;,]`),
		regexp.MustCompile(`(?i)ALDISUED[;,]`),
		regexp.MustCompile(`(?i)ALDISUED, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(LE43S5970-20|S50856)`),
		regexp.MustCompile(`(?i)ARRIS[;,]`),
		regexp.MustCompile(`(?i)Airties; ?([^);/]+)`),
		regexp.MustCompile(`(?i)Altech UEC; ?([^);/]+)`),
		regexp.MustCompile(`(?i)Blaupunkt_UMC[;,]`),
		regexp.MustCompile(`(?i)BUSH[;,]`),
		regexp.MustCompile(`(?i)CELCUS[;,]`),
		regexp.MustCompile(`(?i)Changhong; ?([^);/]+)`),
		regexp.MustCompile(`(?i)DIGIHOME[;,]`),
		regexp.MustCompile(`(?i)ELECTRONIA[;,]`),
		regexp.MustCompile(`(?i)ESSENTIELB[;,]`),
		regexp.MustCompile(`(?i)FU[;,]`),
		regexp.MustCompile(`(?i)FINLUX[;,]`),
		regexp.MustCompile(`(?i)FUEGO[;,]`),
		regexp.MustCompile(`(?i)GOGEN[;,]`),
		regexp.MustCompile(`(?i)(OWB|Grundig|Arcelik)`),
		regexp.MustCompile(`(?i)(?:HHW_)?HAIER`),
		regexp.MustCompile(`(?i)HI-LEVEL[;,]`),
		regexp.MustCompile(`(?i)Hisense|Eurofins_Digital_Testing`),
		regexp.MustCompile(`(?i)(L[A-Z]{2,3}[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,6}[0-9]?[A-Z]?)`),
		regexp.MustCompile(`(?i)(H[A-Z]?[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,4})`),
		regexp.MustCompile(`(?i)Hitachi[;,]`),
		regexp.MustCompile(`(?i)HORIZON[;,]`),
		regexp.MustCompile(`(?i)HOTEL[;,]`),
		regexp.MustCompile(`(?i)Humax|hdr1000s`),
		regexp.MustCompile(`(?i)(HD-FOX C|HD (FOX\+|NANO)|iCord (HD\+|MINI|Cable)|(CX|IR)HD-5100(C|S)|HM9503HD)`),
		regexp.MustCompile(`(?i)Humax; ([^);/]+)`),
		regexp.MustCompile(`(?i)HYUNDAI[;,]`),
		regexp.MustCompile(`(?i)(Vantage|VT-100|VT-1)`),
		regexp.MustCompile(`(?i)inverto; ([^);/]+)`),
		regexp.MustCompile(`(?i)(Volksbox Web Edition|Volksbox Essential|Volksbox II|Volksbox)`),
		regexp.MustCompile(`(?i)AFTSO001|JVC[;,]`),
		regexp.MustCompile(`(?i)KUBO[;,]`),
		regexp.MustCompile(`(?i)KALLEY[;,]`),
		regexp.MustCompile(`(?i)KEY000000(2E|2F|3B|3F)`),
		regexp.MustCompile(`(?i)(NetCast [0-9]{1}.[0-9]{1}|GLOBAL_PLAT3)`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z0-9]{3}[A-Z]{2})`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z][0-9][A-Z])`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z0-9]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}[A-Z]{2}[0-9]{4}[A-Z0-9]{1}[A-Z]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}NANO[0-9]{3}[A-Z]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}NANO[0-9]{2})`),
		regexp.MustCompile(`(?i)LGE;? ?([0-9]{2}[A-Z]{2}[0-9]{2,4}[A-Z]?)`),
		regexp.MustCompile(`(?i)LAURUS[;,]`),
		regexp.MustCompile(`(?i)Lifemaxx[;,]`),
		regexp.MustCompile(`(?i)LINSAR[;,]`),
		regexp.MustCompile(`(?i)([A-Z]{2}[0-9]{3})`),
		regexp.MustCompile(`(?i)LUXOR[;,]`),
		regexp.MustCompile(`(?i)MStar[;,]`),
		regexp.MustCompile(`(?i)([24])KTV18`),
		regexp.MustCompile(`(?i)MTC[;,]`),
		regexp.MustCompile(`(?i)([24])K_Android_TV_V01`),
		regexp.MustCompile(`(?i)MTK|MediaTek;`),
		regexp.MustCompile(`(?i)(MT[0-9]{4})`),
		regexp.MustCompile(`(?i)MEDION, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)NORDMENDE[;,]`),
		regexp.MustCompile(`(?i)OK[;,]`),
		regexp.MustCompile(`(?i)PROFILO[;,]`),
		regexp.MustCompile(`(?i)VIERA (201[1-9])`),
		regexp.MustCompile(`(?i)(DIGA [A-Z]{1}[0-9]{4})`),
		regexp.MustCompile(`(?i)DIGA Webkit ([A-Z]{1}[0-9]{4})`),
		regexp.MustCompile(`(?i)SmartTV(201[89]|202[0-1])`),
		regexp.MustCompile(`(?i)Philips|NETTV/`),
		regexp.MustCompile(`(?i)Philips[,;] ?([^),;/]+)`),
		regexp.MustCompile(`(?i)NETTV/[0-9\.]{5}`),
		regexp.MustCompile(`(?i)POLAROID[;,]`),
		regexp.MustCompile(`(?i)QILIVE[;,]`),
		regexp.MustCompile(`(?i)REGAL[;,]`),
		regexp.MustCompile(`(?i)SCBC[;,]`),
		regexp.MustCompile(`(?i)SEG[;,]`),
		regexp.MustCompile(`(?i)SWTV[;,]`),
		regexp.MustCompile(`(?i)Saba[;,]`),
		regexp.MustCompile(`(?i)Salora[;,]`),
		regexp.MustCompile(`(?i)Samsung|Maple_2011`),
		regexp.MustCompile(`(?i)SmartTV(201[2-9]|202[0-1]):([^);/]+)`),
		regexp.MustCompile(`(?i)SmartTV(201[2-9]|202[0-1])`),
		regexp.MustCompile(`(?i)Selevision; (?:Selevision )?([^);/]+)`),
		regexp.MustCompile(`(?i)(EMC1000i)`),
		regexp.MustCompile(`(?i)(?:UMC-)?Sharp`),
		regexp.MustCompile(`(?i)SHARP, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Sharp[,;] ?([^),;/]+)`),
		regexp.MustCompile(`(?i)(LE[0-9]{3}[A-Z]{0,3})`),
		regexp.MustCompile(`(?i)LC-([^);/]+)`),
		regexp.MustCompile(`(?i)Sky_worth;([^);/]+)`),
		regexp.MustCompile(`(?i)Smart[;,]`),
		regexp.MustCompile(`(?i)Smart; ([^);/]+)`),
		regexp.MustCompile(`(?i)([A-Z]{2}[0-9]{2}|ZAPPIX)`),
		regexp.MustCompile(`(?i)KDL-GN([56])`),
		regexp.MustCompile(`(?i)BRAVIA (VH1|4K VH2)`),
		regexp.MustCompile(`(?i)(KDL?-?[0-9]{2}[A-Z]{1}[0-9]{4}[A-Z]{1})`),
		regexp.MustCompile(`(?i)(KDL?-?[0-9]{2}[A-Z]{1}[0-9]{3}[A-Z]{1})`),
		regexp.MustCompile(`(?i)(KDL?-?[0-9]{2}[A-Z]{1,2}[0-9]{1,5})`),
		regexp.MustCompile(`(?i)(32D1820|(?:39|55)D2900|32D2930|(?:32|43)S4900)`),
		regexp.MustCompile(`(?i)TDSystems[;,]`),
		regexp.MustCompile(`(?i)SmartTV(2019|2020)`),
		regexp.MustCompile(`(?i)TOKYO[;,]`),
		regexp.MustCompile(`(?i)((DigiCorder|MultyVision|Digit) (ISIO S|ISIO C|ISIO))`),
		regexp.MustCompile(`(?i)TECHNIKA[;,]`),
		regexp.MustCompile(`(?i)([A-Z]{1}-[0-9]{3})`),
		regexp.MustCompile(`(?i)Techwood[;,]`),
		regexp.MustCompile(`(?i)THOMSON[,]?|THOM`),
		regexp.MustCompile(`(?i)(TB28D19DHS-01|T28D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T32RTM5040|T32D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T43FSL5031|T43D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T40D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T49D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T55D18[SD]FS-01B)`),
		regexp.MustCompile(`(?i)(([0-9]{2}|DTV_)[A-Z]{2}[0-9]{1,3})`),
		regexp.MustCompile(`(?i)OEM, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)VOX[;,]`),
		regexp.MustCompile(`(?i)(?:Vestel.+VESTEL|VESTEL;)`),
		regexp.MustCompile(`(?i)videoweb|tv2n`),
		regexp.MustCompile(`(?i)(tv2n)`),
		regexp.MustCompile(`(?i)(videowebtv)`),
		regexp.MustCompile(`(?i)WELLINGTON[;,]`),
		regexp.MustCompile(`(?i)X-VISION[;,]`),
	}
	__dr_buf = []byte{
		0x4e, 0x69, 0x6b, 0x6f, 0x6e, 0x43, 0x6f, 0x6f, 0x6c, 0x70, 0x69, 0x78, 0x20, 0x53, 0x38, 0x30,
		0x30, 0x63, 0x53, 0x61, 0x6d, 0x73, 0x75, 0x6e, 0x67, 0x45, 0x4b, 0x2d, 0x47, 0x4e, 0x31, 0x32,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x58, 0x45, 0x4b, 0x2d, 0x47, 0x43, 0x31,
		0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x45,
		0x4b, 0x2d, 0x47, 0x43, 0x31, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x61,
		0x6d, 0x65, 0x72, 0x61, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x45, 0x4b,
		0x2d, 0x47, 0x43, 0x32, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x61, 0x6d,
		0x65, 0x72, 0x61, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x61, 0x6d, 0x65,
		0x72, 0x61, 0x20, 0x24, 0x31, 0x4d, 0x41, 0x43, 0x20, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x4d, 0x61,
		0x63, 0x20, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x70, 0x72, 0x6f, 0x53, 0x70, 0x72, 0x6f,
		0x53, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x51, 0x74, 0x43, 0x61, 0x72, 0x42,
		0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x20, 0x53, 0x54, 0x6f, 0x70,
		0x77, 0x61, 0x79, 0x73, 0x70, 0x39, 0x38, 0x35, 0x33, 0x69, 0x5f, 0x31, 0x68, 0x31, 0x30, 0x5f,
		0x76, 0x6d, 0x6d, 0x54, 0x53, 0x39, 0x41, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x47, 0x61, 0x6d, 0x65,
		0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x58,
		0x62, 0x6f, 0x78, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x58,
		0x58, 0x62, 0x6f, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x4f,
		0x6e, 0x65, 0x58, 0x42, 0x4f, 0x58, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x45, 0x44, 0x58, 0x62, 0x6f,
		0x78, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x33, 0x36, 0x30, 0x4e,
		0x69, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x6f, 0x24, 0x31, 0x4f, 0x55, 0x59, 0x41, 0x52, 0x65, 0x74,
		0x72, 0x6f, 0x69, 0x64, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x74, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x32, 0x50, 0x6c, 0x75, 0x73, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x65, 0x67, 0x61, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x63, 0x61,
		0x73, 0x74, 0x53, 0x6f, 0x6e, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
		0x6e, 0x20, 0x24, 0x31, 0x32, 0x45, 0x45, 0x35, 0x30, 0x30, 0x41, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x39, 0x29, 0x45, 0x34, 0x35, 0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x33, 0x36, 0x30,
		0x4e, 0x37, 0x4e, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4e,
		0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x36, 0x4e, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x34, 0x4e, 0x35, 0x4e, 0x34, 0x41, 0x4e, 0x35, 0x53, 0x4e,
		0x34, 0x53, 0x33, 0x47, 0x4e, 0x45, 0x54, 0x54, 0x39, 0x30, 0x30, 0x33, 0x47, 0x4f, 0x41, 0x70,
		0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x33, 0x51, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x50, 0x2d, 0x50,
		0x61, 0x64, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x51, 0x2d, 0x50, 0x61, 0x64, 0x51, 0x6f, 0x6f, 0x21,
		0x20, 0x53, 0x75, 0x72, 0x66, 0x54, 0x53, 0x39, 0x37, 0x30, 0x38, 0x42, 0x53, 0x75, 0x72, 0x66,
		0x20, 0x54, 0x53, 0x31, 0x30, 0x30, 0x39, 0x42, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x51,
		0x2d, 0x42, 0x6f, 0x6f, 0x6b, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x47, 0x6c, 0x61, 0x7a, 0x65, 0x34,
		0x47, 0x6f, 0x6f, 0x64, 0x24, 0x31, 0x20, 0x33, 0x47, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x20,
		0x24, 0x31, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x34, 0x69, 0x66, 0x65, 0x37, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x53, 0x77, 0x65, 0x67, 0x75, 0x65, 0x44, 0x52, 0x45, 0x4e, 0x41, 0x44,
		0x72, 0x65, 0x6e, 0x61, 0x38, 0x38, 0x34, 0x38, 0x41, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20,
		0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x32, 0x30, 0x41,
		0x6c, 0x70, 0x68, 0x61, 0x20, 0x32, 0x31, 0x41, 0x31, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x41,
		0x6c, 0x70, 0x68, 0x61, 0x41, 0x47, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x47, 0x4d,
		0x47, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x24, 0x31, 0x41,
		0x39, 0x41, 0x49, 0x44, 0x41, 0x54, 0x41, 0x41, 0x44, 0x54, 0x20, 0x31, 0x30, 0x36, 0x31, 0x41,
		0x44, 0x54, 0x31, 0x30, 0x31, 0x32, 0x4c, 0x41, 0x44, 0x54, 0x20, 0x31, 0x30, 0x31, 0x32, 0x4c,
		0x45, 0x4c, 0x44, 0x45, 0x20, 0x31, 0x30, 0x41, 0x49, 0x52, 0x4f, 0x4e, 0x41, 0x69, 0x72, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x38, 0x53, 0x41, 0x49, 0x53, 0x69, 0x72, 0x69,
		0x73, 0x37, 0x30, 0x38, 0x4c, 0x41, 0x56, 0x41, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x34, 0x2e, 0x35,
		0x4b, 0x69, 0x6e, 0x67, 0x63, 0x6f, 0x6d, 0x6d, 0x20, 0x43, 0x35, 0x30, 0x30, 0x53, 0x75, 0x70,
		0x65, 0x72, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x58, 0x33,
		0x41, 0x4c, 0x44, 0x49, 0x20, 0x4e, 0x4f, 0x52, 0x44, 0x41, 0x4c, 0x44, 0x49, 0x20, 0x53, 0xc3,
		0x9c, 0x44, 0x41, 0x4d, 0x47, 0x4f, 0x4f, 0x41, 0x4d, 0x33, 0x35, 0x30, 0x4a, 0x61, 0x63, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x54, 0x69, 0x67, 0x6f, 0x41, 0x4d, 0x34, 0x30, 0x32, 0x50, 0x72, 0x6f,
		0x6e, 0x74, 0x6f, 0x41, 0x4d, 0x34, 0x31, 0x30, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x41, 0x4d, 0x34,
		0x35, 0x30, 0x53, 0x77, 0x69, 0x66, 0x74, 0x41, 0x4d, 0x35, 0x30, 0x38, 0x46, 0x75, 0x65, 0x67,
		0x6f, 0x41, 0x4d, 0x35, 0x30, 0x39, 0x55, 0x6e, 0x6f, 0x41, 0x4d, 0x35, 0x31, 0x35, 0x44, 0x31,
		0x41, 0x4d, 0x35, 0x31, 0x38, 0x43, 0x31, 0x41, 0x4d, 0x35, 0x32, 0x30, 0x50, 0x72, 0x6f, 0x41,
		0x4d, 0x35, 0x32, 0x33, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x4d, 0x35, 0x32, 0x37, 0x47, 0x65, 0x6f,
		0x41, 0x4d, 0x35, 0x33, 0x30, 0x41, 0x4d, 0x35, 0x33, 0x35, 0x50, 0x31, 0x41, 0x4d, 0x24, 0x31,
		0x41, 0x4e, 0x53, 0x55, 0x4c, 0x34, 0x30, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x4c, 0x34,
		0x30, 0x41, 0x4e, 0x53, 0x2f, 0x4c, 0x35, 0x31, 0x4c, 0x35, 0x31, 0x41, 0x4f, 0x43, 0x41, 0x4f,
		0x59, 0x4f, 0x44, 0x4b, 0x47, 0x41, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x54, 0x49, 0x4c, 0x45, 0x20,
		0x24, 0x31, 0x41, 0x52, 0x52, 0x49, 0x53, 0x41, 0x54, 0x26, 0x54, 0x52, 0x61, 0x64, 0x69, 0x61,
		0x6e, 0x74, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x20, 0x4d,
		0x61, 0x78, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x35, 0x47,
		0x41, 0x78, 0x69, 0x61, 0x43, 0x61, 0x6c, 0x79, 0x70, 0x73, 0x6f, 0x43, 0x61, 0x6c, 0x79, 0x70,
		0x73, 0x6f, 0x20, 0x32, 0x4d, 0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4d, 0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x4d, 0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x4d,
		0x61, 0x78, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x20, 0x32, 0x46, 0x75, 0x73, 0x69,
		0x6f, 0x6e, 0x20, 0x5a, 0x41, 0x55, 0x52, 0x49, 0x53, 0x41, 0x56, 0x48, 0x45, 0x78, 0x63, 0x65,
		0x72, 0x20, 0x47, 0x35, 0x2e, 0x24, 0x31, 0x45, 0x78, 0x63, 0x65, 0x72, 0x20, 0x47, 0x35, 0x45,
		0x78, 0x63, 0x65, 0x72, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x78, 0x63, 0x65, 0x72,
		0x20, 0x38, 0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x6f, 0x6e, 0x43, 0x61, 0x6d, 0x65,
		0x6c, 0x65, 0x6f, 0x6e, 0x20, 0x43, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x70, 0x65, 0x65,
		0x64, 0x20, 0x24, 0x31, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x58, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x50, 0x65, 0x61, 0x72,
		0x6c, 0x20, 0x41, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x65, 0x61, 0x72, 0x6c, 0x20, 0x41,
		0x24, 0x31, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x50, 0x35, 0x35, 0x46, 0x41, 0x53, 0x54, 0x37, 0x20,
		0x33, 0x47, 0x53, 0x75, 0x72, 0x66, 0x20, 0x31, 0x30, 0x30, 0x30, 0x41, 0x63, 0x65, 0x42, 0x75,
		0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x43, 0x4c, 0x45,
		0x56, 0x45, 0x52, 0x20, 0x31, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20, 0x31, 0x55, 0x52, 0x42,
		0x41, 0x4e, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x20, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x55, 0x52, 0x42, 0x41, 0x4e, 0x20, 0x31, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x20,
		0x31, 0x41, 0x63, 0x65, 0x72, 0x44, 0x41, 0x32, 0x32, 0x30, 0x48, 0x51, 0x4c, 0x44, 0x41, 0x32,
		0x34, 0x31, 0x48, 0x4c, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41, 0x41, 0x54, 0x41, 0x42,
		0x24, 0x31, 0x45, 0x45, 0x54, 0x2d, 0x31, 0x30, 0x38, 0x2d, 0x31, 0x31, 0x41, 0x45, 0x6e, 0x64,
		0x75, 0x72, 0x6f, 0x20, 0x54, 0x31, 0x54, 0x50, 0x41, 0x36, 0x30, 0x57, 0x49, 0x63, 0x6f, 0x6e,
		0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x38, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x37, 0x41, 0x31, 0x2d, 0x38, 0x33, 0x30, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61,
		0x20, 0x41, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x53,
		0x41, 0x33, 0x2d, 0x41, 0x32, 0x30, 0x46, 0x48, 0x44, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20,
		0x41, 0x33, 0x20, 0x46, 0x48, 0x44, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41, 0x33, 0x49,
		0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x49, 0x63, 0x6f, 0x6e,
		0x69, 0x61, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x42,
		0x31, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x37, 0x49, 0x63,
		0x6f, 0x6e, 0x69, 0x61, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x38, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61,
		0x20, 0x4f, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x41, 0x31, 0x30, 0x31, 0x56, 0x61, 0x6e, 0x67, 0x6f,
		0x67, 0x68, 0x41, 0x32, 0x30, 0x30, 0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x45, 0x50,
		0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x41, 0x63, 0x65, 0x72, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x37,
		0x4f, 0x6e, 0x65, 0x20, 0x37, 0x47, 0x54, 0x2d, 0x38, 0x31, 0x30, 0x50, 0x72, 0x65, 0x64, 0x61,
		0x74, 0x6f, 0x72, 0x20, 0x38, 0x41, 0x63, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x38, 0x5f,
		0x54, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x54, 0x32, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
		0x20, 0x45, 0x37, 0x30, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69,
		0x71, 0x75, 0x69, 0x64, 0x20, 0x45, 0x31, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69,
		0x64, 0x20, 0x45, 0x32, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x53,
		0x31, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x53, 0x32, 0x6e, 0x65, 0x6f, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x34, 0x30, 0x30, 0x6e, 0x65, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x33, 0x30, 0x30, 0x6e, 0x65, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x53, 0x32, 0x30,
		0x30, 0x62, 0x65, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x45, 0x31, 0x30, 0x30, 0x4c, 0x69, 0x71,
		0x75, 0x69, 0x64, 0x20, 0x5a, 0x24, 0x31, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x31,
		0x31, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x4c,
		0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x34, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75,
		0x69, 0x64, 0x20, 0x4a, 0x61, 0x64, 0x65, 0x20, 0x5a, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20,
		0x5a, 0x35, 0x33, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x36, 0x33, 0x30, 0x4c,
		0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x36, 0x33, 0x30, 0x53, 0x4c, 0x69, 0x71, 0x75, 0x69,
		0x64, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73,
		0x74, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4d, 0x33, 0x33, 0x30, 0x4c,
		0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4d, 0x32, 0x32, 0x30, 0x41, 0x63, 0x65, 0x72, 0x54, 0x44,
		0x36, 0x30, 0x30, 0x54, 0x44, 0x36, 0x30, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4a,
		0x61, 0x64, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x24,
		0x31, 0x41, 0x63, 0x74, 0x65, 0x63, 0x6b, 0x42, 0x4c, 0x45, 0x43, 0x4b, 0x42, 0x6c, 0x65, 0x63,
		0x6b, 0x41, 0x64, 0x72, 0x6f, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x37, 0x20, 0x33, 0x47, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x41, 0x44, 0x56, 0x41, 0x4e, 0x20,
		0x4d, 0x34, 0x4d, 0x34, 0x41, 0x44, 0x56, 0x41, 0x4e, 0x20, 0x53, 0x34, 0x30, 0x53, 0x34, 0x30,
		0x69, 0x37, 0x55, 0x49, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x69, 0x37, 0x55, 0x53, 0x35, 0x45,
		0x20, 0x4e, 0x58, 0x54, 0x49, 0x24, 0x31, 0x69, 0x34, 0x55, 0x49, 0x34, 0x55, 0x47, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x47, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x31, 0x43, 0x5f, 0x33, 0x47, 0x45,
		0x31, 0x43, 0x20, 0x33, 0x47, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x72,
		0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x53, 0x50, 0x24, 0x31, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x20, 0x50, 0x52, 0x24, 0x31, 0x48, 0x6f, 0x6c, 0x6c, 0x6f, 0x67, 0x72, 0x61,
		0x6d, 0x20, 0x48, 0x4c, 0x24, 0x31, 0x48, 0x6f, 0x6c, 0x6c, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20,
		0x24, 0x31, 0x41, 0x66, 0x72, 0x69, 0x4f, 0x6e, 0x65, 0x43, 0x79, 0x67, 0x6e, 0x75, 0x73, 0x20,
		0x58, 0x43, 0x79, 0x67, 0x6e, 0x75, 0x73, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x5a,
		0x32, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x69, 0x6e,
		0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x41, 0x58, 0x31, 0x4e, 0x6f, 0x76,
		0x6f, 0x20, 0x37, 0x20, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x41, 0x58, 0x31, 0x20, 0x33, 0x47, 0x4e,
		0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x53, 0x77, 0x6f, 0x72, 0x64, 0x4e, 0x4f, 0x56, 0x4f,
		0x31, 0x30, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x31, 0x30, 0x20,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x41, 0x58, 0x31, 0x30, 0x50, 0x52, 0x4f, 0x4e, 0x75, 0x6d, 0x79,
		0x20, 0x41, 0x58, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x75, 0x6d, 0x79, 0x5f, 0x33, 0x47,
		0x5f, 0x41, 0x58, 0x33, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x41, 0x58, 0x33, 0x20, 0x53, 0x77, 0x6f,
		0x72, 0x64, 0x4e, 0x75, 0x6d, 0x79, 0x33, 0x47, 0x54, 0x61, 0x6c, 0x6f, 0x73, 0x4e, 0x75, 0x6d,
		0x79, 0x20, 0x33, 0x47, 0x20, 0x54, 0x61, 0x6c, 0x6f, 0x73, 0x4e, 0x75, 0x6d, 0x79, 0x5f, 0x33,
		0x47, 0x5f, 0x42, 0x57, 0x31, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x54, 0x61, 0x6c,
		0x6f, 0x73, 0x20, 0x32, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x41, 0x58, 0x39, 0x4e,
		0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x41, 0x58, 0x31, 0x30, 0x41, 0x75, 0x72, 0x6f, 0x72,
		0x61, 0x2d, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20, 0x41, 0x75, 0x72, 0x6f, 0x72,
		0x61, 0x20, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x6f, 0x37, 0x46, 0x69, 0x72, 0x65, 0x4e, 0x6f, 0x76,
		0x6f, 0x20, 0x37, 0x20, 0x46, 0x69, 0x72, 0x65, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20, 0x46,
		0x6c, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x24,
		0x31, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x41, 0x69, 0x72, 0x6e, 0x65,
		0x73, 0x73, 0x41, 0x69, 0x72, 0x74, 0x65, 0x6c, 0x41, 0x69, 0x72, 0x70, 0x61, 0x64, 0x20, 0x37,
		0x2d, 0x73, 0x41, 0x69, 0x72, 0x50, 0x61, 0x64, 0x20, 0x37, 0x53, 0x41, 0x69, 0x75, 0x74, 0x6f,
		0x41, 0x69, 0x77, 0x61, 0x41, 0x57, 0x37, 0x39, 0x30, 0x41, 0x57, 0x35, 0x30, 0x30, 0x41, 0x57,
		0x4d, 0x24, 0x31, 0x4d, 0x33, 0x30, 0x30, 0x41, 0x6b, 0x61, 0x69, 0x54, 0x41, 0x42, 0x20, 0x24,
		0x31, 0x41, 0x4b, 0x54, 0x42, 0x2d, 0x37, 0x30, 0x33, 0x4d, 0x5a, 0x58, 0x36, 0x20, 0x4d, 0x45,
		0x54, 0x41, 0x4c, 0x69, 0x4c, 0x69, 0x6b, 0x65, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x20, 0x24, 0x31,
		0x45, 0x63, 0x6f, 0x20, 0x45, 0x32, 0x53, 0x69, 0x32, 0x31, 0x35, 0x37, 0x4c, 0x47, 0x33, 0x32,
		0x41, 0x6c, 0x62, 0x61, 0x41, 0x6c, 0x62, 0x61, 0x20, 0x35, 0x37, 0x35, 0x2e, 0x37, 0x31, 0x30,
		0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x54, 0x31, 0x30, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x41, 0x6c, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x34, 0x30, 0x38, 0x37, 0x55, 0x31, 0x53, 0x45, 0x20,
		0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x53, 0x74, 0x61, 0x72, 0x36, 0x30, 0x34, 0x34, 0x44, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x55, 0x70, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x31, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x31, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x43, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x43, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x35, 0x30,
		0x33, 0x36, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70,
		0x20, 0x43, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x37, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x37, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x44, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x44, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x44, 0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53,
		0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20,
		0x32, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20,
		0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70,
		0x20, 0x32, 0x20, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x32, 0x20, 0x35, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x20, 0x35,
		0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x33,
		0x20, 0x35, 0x2e, 0x35, 0x22, 0x35, 0x30, 0x31, 0x35, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53,
		0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20,
		0x34, 0x35, 0x30, 0x35, 0x31, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x53, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x2b, 0x37, 0x30,
		0x37, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70,
		0x20, 0x34, 0x20, 0x36, 0x22, 0x35, 0x30, 0x35, 0x37, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x4d, 0x69, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x53, 0x33, 0x37, 0x30,
		0x34, 0x35, 0x59, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70,
		0x20, 0x53, 0x37, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f,
		0x6c, 0x20, 0x32, 0x35, 0x30, 0x34, 0x32, 0x54, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x35, 0x30, 0x32, 0x37, 0x42, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x44, 0x61, 0x77, 0x6e, 0x41, 0x37, 0x20, 0x58, 0x4c, 0x31,
		0x42, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4f, 0x6e, 0x79, 0x78, 0x56, 0x6f, 0x6c, 0x74,
		0x61, 0x34, 0x30, 0x33, 0x34, 0x54, 0x31, 0x45, 0x35, 0x30, 0x30, 0x32, 0x46, 0x31, 0x41, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x34, 0x30, 0x36, 0x33, 0x46, 0x31, 0x4c, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x33, 0x4c, 0x41, 0x35, 0x37, 0x36, 0x43, 0x43, 0x4b, 0x6f, 0x72, 0x61, 0x20, 0x41,
		0x35, 0x37, 0x36, 0x43, 0x43, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x46,
		0x69, 0x65, 0x72, 0x63, 0x65, 0x20, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x20, 0x34, 0x35, 0x30, 0x35, 0x34, 0x4e, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x20, 0x58,
		0x4c, 0x36, 0x30, 0x34, 0x32, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x46, 0x6c, 0x61, 0x73, 0x68, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49,
		0x64, 0x6f, 0x6c, 0x20, 0x32, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x53,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x33,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x33,
		0x20, 0x35, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49,
		0x64, 0x6f, 0x6c, 0x20, 0x34, 0x36, 0x30, 0x37, 0x30, 0x4b, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x34, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x35, 0x53, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x58, 0x2b, 0x38, 0x30, 0x33,
		0x30, 0x59, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x48, 0x65, 0x72, 0x6f,
		0x20, 0x32, 0x37, 0x30, 0x35, 0x35, 0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x43, 0x37, 0x30, 0x35, 0x33, 0x44, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x58, 0x31, 0x35, 0x30, 0x36, 0x35, 0x4e, 0x54, 0x52,
		0x55, 0x41, 0x35, 0x37, 0x34, 0x42, 0x4c, 0x52, 0x61, 0x76, 0x65, 0x6e, 0x41, 0x35, 0x37, 0x37,
		0x56, 0x4c, 0x5a, 0x69, 0x70, 0x41, 0x34, 0x36, 0x36, 0x42, 0x47, 0x50, 0x69, 0x78, 0x69, 0x20,
		0x55, 0x6e, 0x69, 0x74, 0x65, 0x35, 0x30, 0x35, 0x36, 0x49, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x41, 0x35, 0x37, 0x30, 0x42, 0x4c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x41, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x54, 0x45, 0x41,
		0x35, 0x37, 0x31, 0x56, 0x4c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x41, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x46,
		0x69, 0x72, 0x73, 0x74, 0x41, 0x34, 0x36, 0x34, 0x42, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x47, 0x6c, 0x69, 0x74, 0x7a, 0x41, 0x36,
		0x32, 0x31, 0x42, 0x4c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69,
		0x78, 0x69, 0x20, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x34, 0x30, 0x31, 0x34, 0x44, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x32, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x33, 0x2e,
		0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x33, 0x20, 0x33, 0x2e, 0x35, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33,
		0x20, 0x34, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78,
		0x69, 0x20, 0x33, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x20, 0x34, 0x47,
		0x39, 0x30, 0x30, 0x32, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x37, 0x22, 0x39, 0x30, 0x30, 0x37, 0x41, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x37, 0x22,
		0x20, 0x34, 0x47, 0x31, 0x54, 0x31, 0x54, 0x20, 0x31, 0x30, 0x54, 0x45, 0x4b, 0x45, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x39, 0x30, 0x30, 0x39, 0x41, 0x31, 0x54, 0x20, 0x37, 0x31, 0x54, 0x20,
		0x37, 0x2e, 0x30, 0x22, 0x39, 0x30, 0x32, 0x32, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x38, 0x22, 0x39, 0x30, 0x31, 0x30,
		0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20,
		0x33, 0x20, 0x31, 0x30, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x33, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x34, 0x22, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x34, 0x2e,
		0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x35, 0x22,
		0x20, 0x33, 0x47, 0x35, 0x30, 0x34, 0x31, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x35, 0x2e,
		0x35, 0x22, 0x20, 0x33, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x35, 0x22, 0x20, 0x34, 0x47, 0x35, 0x30, 0x39, 0x38, 0x4f,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x54,
		0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x41, 0x35, 0x30, 0x31, 0x44, 0x4c, 0x41, 0x35, 0x30, 0x33,
		0x44, 0x4c, 0x41, 0x31, 0x58, 0x41, 0x78, 0x65, 0x6c, 0x41, 0x33, 0x41, 0x33, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x33, 0x20, 0x58, 0x4c, 0x39, 0x32, 0x30, 0x33, 0x41, 0x41, 0x33, 0x20, 0x37,
		0x22, 0x20, 0x33, 0x47, 0x33, 0x54, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x39, 0x30, 0x32, 0x36, 0x58,
		0x41, 0x33, 0x20, 0x31, 0x30, 0x22, 0x41, 0x35, 0x41, 0x35, 0x20, 0x4c, 0x45, 0x44, 0x35, 0x30,
		0x38, 0x35, 0x4e, 0x41, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x45, 0x44, 0x41, 0x37, 0x41,
		0x33, 0x30, 0x35, 0x30, 0x34, 0x39, 0x53, 0x41, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x35,
		0x30, 0x34, 0x39, 0x5a, 0x41, 0x33, 0x30, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x41, 0x35,
		0x30, 0x33, 0x58, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x35, 0x30, 0x34, 0x39, 0x57, 0x52,
		0x65, 0x76, 0x76, 0x6c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69,
		0x78, 0x69, 0x20, 0x34, 0x20, 0x36, 0x22, 0x20, 0x33, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x36, 0x22, 0x20, 0x33, 0x47,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x36, 0x22, 0x20, 0x34, 0x47, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20,
		0x37, 0x22, 0x20, 0x33, 0x47, 0x38, 0x30, 0x36, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x39, 0x30, 0x32, 0x34, 0x4f, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x69, 0x78, 0x69, 0x20, 0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x69, 0x78, 0x69, 0x20, 0x37, 0x49, 0x32, 0x31, 0x33, 0x39, 0x30, 0x30, 0x35, 0x58, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x38, 0x50,
		0x33, 0x32, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x4f,
		0x50, 0x20, 0x38, 0x50, 0x33, 0x31, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x37, 0x50, 0x33, 0x33, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x37, 0x53, 0x39, 0x30, 0x32, 0x30,
		0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x54, 0x72, 0x65, 0x6b, 0x20,
		0x48, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x47, 0x6f, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x57, 0x61, 0x76, 0x65, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x4f,
		0x4e, 0x45, 0x5f, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x5f, 0x37, 0x36, 0x38, 0x54, 0x49, 0x73, 0x6c,
		0x61, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x54, 0x72, 0x69,
		0x62, 0x65, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f,
		0x75, 0x63, 0x68, 0x5f, 0x35, 0x38, 0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x35, 0x38, 0x35, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x4f, 0x4e, 0x45, 0x5f,
		0x54, 0x4f, 0x55, 0x43, 0x48, 0x5f, 0x38, 0x33, 0x38, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x38, 0x33, 0x38, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x6f, 0x6e,
		0x65, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x38, 0x31, 0x33, 0x64, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x31, 0x33, 0x44, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45,
		0x4c, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x38, 0x31, 0x33, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x31, 0x33, 0x4f, 0x54, 0x38, 0x37,
		0x31, 0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x37, 0x31, 0x41,
		0x50, 0x33, 0x36, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x31, 0x30, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x24,
		0x31, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x24, 0x31, 0x53, 0x68, 0x69, 0x6e,
		0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x49, 0x4d, 0x58, 0x4c, 0x54, 0x49, 0x4d, 0x20, 0x58,
		0x4c, 0x35, 0x30, 0x38, 0x35, 0x43, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x4d, 0x69, 0x78, 0x55, 0x33,
		0x55, 0x35, 0x55, 0x35, 0x20, 0x33, 0x47, 0x55, 0x35, 0x20, 0x48, 0x44, 0x34, 0x30, 0x34, 0x37,
		0x47, 0x55, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x34, 0x30, 0x34, 0x37, 0x41, 0x55, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x34, 0x30,
		0x34, 0x34, 0x4f, 0x43, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x46, 0x6c, 0x69, 0x70,
		0x20, 0x32, 0x47, 0x6f, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x55, 0x35, 0x30, 0x35, 0x30, 0x33, 0x33,
		0x58, 0x52, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x31, 0x31, 0x43, 0x31, 0x58, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x31, 0x56, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x31,
		0x43, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x33, 0x43, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x31, 0x53, 0x31, 0x53, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x35, 0x30, 0x33, 0x30,
		0x45, 0x31, 0x53, 0x50, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x31, 0x53, 0x45, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x31, 0x56, 0x31, 0x58, 0x35, 0x30, 0x35, 0x39, 0x53, 0x41, 0x76,
		0x61, 0x6c, 0x6f, 0x6e, 0x20, 0x56, 0x35, 0x56, 0x33, 0x35, 0x30, 0x32, 0x39, 0x45, 0x33, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x33, 0x4c, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x33,
		0x56, 0x33, 0x43, 0x33, 0x58, 0x33, 0x58, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x35, 0x36,
		0x30, 0x36, 0x32, 0x57, 0x37, 0x33, 0x54, 0x20, 0x31, 0x30, 0x22, 0x38, 0x30, 0x39, 0x34, 0x4d,
		0x33, 0x54, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x39, 0x30, 0x32, 0x39, 0x5a, 0x4a, 0x6f, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x4a, 0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x41, 0x6c, 0x63,
		0x61, 0x74, 0x65, 0x6c, 0x20, 0x55, 0x50, 0x42, 0x69, 0x67, 0x20, 0x45, 0x61, 0x73, 0x79, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x35, 0x30, 0x34, 0x31, 0x43, 0x54, 0x45, 0x54, 0x52, 0x41, 0x41, 0x6c,
		0x63, 0x6f, 0x72, 0x41, 0x6c, 0x66, 0x61, 0x77, 0x69, 0x73, 0x65, 0x5a, 0x32, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c,
		0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x53, 0x31, 0x5f, 0x58, 0x53, 0x31, 0x20,
		0x58, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x53, 0x31, 0x53, 0x31, 0x41, 0x6c, 0x6c,
		0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52, 0x49, 0x4f, 0x5f, 0x53, 0x52, 0x69, 0x6f, 0x20, 0x53, 0x41,
		0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52, 0x49, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x52, 0x69,
		0x6f, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52, 0x49, 0x4f,
		0x52, 0x69, 0x6f, 0x48, 0x65, 0x61, 0x74, 0x20, 0x24, 0x31, 0x52, 0x69, 0x6f, 0x20, 0x58, 0x48,
		0x6f, 0x74, 0x20, 0x24, 0x31, 0x41, 0x6c, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x62, 0x65, 0x4d, 0x35,
		0x58, 0x53, 0x6b, 0x50, 0x61, 0x64, 0x4d, 0x35, 0x53, 0x4d, 0x35, 0x4d, 0x35, 0x58, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x4d, 0x33, 0x55, 0x36, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x58, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x6c,
		0x6c, 0x76, 0x69, 0x65, 0x77, 0x41, 0x34, 0x59, 0x6f, 0x75, 0x41, 0x34, 0x20, 0x59, 0x6f, 0x75,
		0x41, 0x58, 0x32, 0x5f, 0x46, 0x72, 0x65, 0x6e, 0x7a, 0x79, 0x41, 0x58, 0x32, 0x20, 0x46, 0x72,
		0x65, 0x6e, 0x7a, 0x79, 0x41, 0x58, 0x35, 0x4e, 0x61, 0x6e, 0x6f, 0x51, 0x41, 0x58, 0x35, 0x20,
		0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x51, 0x43, 0x36, 0x5f, 0x44, 0x75, 0x6f, 0x43, 0x36, 0x20, 0x44,
		0x75, 0x6f, 0x45, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x45, 0x33, 0x5f, 0x4a,
		0x75, 0x6d, 0x70, 0x45, 0x33, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x45, 0x33, 0x5f, 0x53, 0x69, 0x67,
		0x6e, 0x45, 0x33, 0x20, 0x53, 0x69, 0x67, 0x6e, 0x45, 0x34, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x45,
		0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x39, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
		0x4d, 0x39, 0x20, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x34, 0x33, 0x5f, 0x45, 0x61,
		0x73, 0x79, 0x50, 0x34, 0x33, 0x20, 0x45, 0x61, 0x73, 0x79, 0x50, 0x24, 0x31, 0x20, 0x65, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x50, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x36, 0x5f, 0x70,
		0x6c, 0x75, 0x73, 0x50, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x5f, 0x51, 0x6d, 0x61,
		0x78, 0x50, 0x36, 0x20, 0x51, 0x6d, 0x61, 0x78, 0x50, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50,
		0x34, 0x5f, 0x51, 0x75, 0x61, 0x64, 0x50, 0x34, 0x20, 0x51, 0x75, 0x61, 0x64, 0x50, 0x39, 0x5f,
		0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x32, 0x30, 0x31, 0x37,
		0x50, 0x39, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x50, 0x39, 0x5f, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x53,
		0x50, 0x39, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x53, 0x50, 0x24, 0x31, 0x20, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x38, 0x5f, 0x45, 0x6e, 0x65,
		0x72, 0x67, 0x79, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x38, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
		0x20, 0x50, 0x72, 0x6f, 0x50, 0x24, 0x31, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x50, 0x24, 0x31, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x50, 0x37, 0x5f,
		0x53, 0x65, 0x6f, 0x6e, 0x50, 0x37, 0x20, 0x53, 0x65, 0x6f, 0x6e, 0x50, 0x37, 0x5f, 0x58, 0x74,
		0x72, 0x65, 0x6d, 0x65, 0x50, 0x37, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x50, 0x24, 0x31,
		0x20, 0x4c, 0x69, 0x66, 0x65, 0x50, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x66, 0x65, 0x50, 0x31, 0x30,
		0x20, 0x4c, 0x69, 0x66, 0x65, 0x50, 0x31, 0x30, 0x5f, 0x4d, 0x61, 0x78, 0x50, 0x31, 0x30, 0x20,
		0x4d, 0x61, 0x78, 0x50, 0x31, 0x30, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x31, 0x30, 0x20,
		0x53, 0x74, 0x79, 0x6c, 0x65, 0x56, 0x24, 0x31, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x49,
		0x20, 0x34, 0x47, 0x56, 0x31, 0x5f, 0x56, 0x69, 0x70, 0x65, 0x72, 0x5f, 0x49, 0x56, 0x31, 0x20,
		0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x49, 0x56, 0x24, 0x31, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72,
		0x56, 0x32, 0x5f, 0x56, 0x69, 0x70, 0x65, 0x72, 0x5f, 0x58, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x56,
		0x32, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x32,
		0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x24, 0x31, 0x58, 0x34, 0x5f, 0x53, 0x6f, 0x75, 0x6c,
		0x5f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x58, 0x74,
		0x72, 0x65, 0x6d, 0x65, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x53, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x58,
		0x33, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x58, 0x33, 0x20, 0x53, 0x6f,
		0x75, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x32, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65,
		0x5f, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x32, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x53, 0x74, 0x79,
		0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20,
		0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x58, 0x32, 0x5f,
		0x54, 0x77, 0x69, 0x6e, 0x58, 0x32, 0x20, 0x54, 0x77, 0x69, 0x6e, 0x41, 0x35, 0x20, 0x45, 0x61,
		0x73, 0x79, 0x41, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x35, 0x20, 0x52, 0x65, 0x61,
		0x64, 0x79, 0x41, 0x35, 0x53, 0x6d, 0x69, 0x6c, 0x65, 0x79, 0x41, 0x35, 0x20, 0x53, 0x6d, 0x69,
		0x6c, 0x65, 0x79, 0x41, 0x35, 0x5f, 0x51, 0x75, 0x61, 0x64, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5f,
		0x54, 0x4d, 0x41, 0x35, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35,
		0x5f, 0x51, 0x75, 0x61, 0x64, 0x41, 0x35, 0x20, 0x51, 0x75, 0x61, 0x64, 0x41, 0x36, 0x5f, 0x44,
		0x75, 0x6f, 0x41, 0x36, 0x20, 0x44, 0x75, 0x6f, 0x41, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65,
		0x5f, 0x32, 0x30, 0x31, 0x39, 0x41, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x41, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x32, 0x47, 0x42,
		0x41, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x31, 0x30, 0x5f, 0x50, 0x6c, 0x75, 0x73,
		0x41, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x31, 0x30, 0x5f, 0x4d, 0x61, 0x78, 0x41,
		0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x20, 0x53, 0x41, 0x4c,
		0x4c, 0x56, 0x49, 0x45, 0x57, 0x20, 0x50, 0x34, 0x69, 0x41, 0x6c, 0x6c, 0x44, 0x72, 0x6f, 0x20,
		0x50, 0x34, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x50, 0x32, 0x41, 0x6c, 0x6c, 0x44,
		0x72, 0x6f, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x43, 0x69, 0x74, 0x79, 0x50, 0x6c, 0x75,
		0x73, 0x43, 0x69, 0x74, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65,
		0x77, 0x43, 0x69, 0x74, 0x79, 0x43, 0x69, 0x74, 0x79, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77,
		0x41, 0x58, 0x32, 0x46, 0x72, 0x65, 0x6e, 0x7a, 0x79, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77,
		0x32, 0x53, 0x70, 0x65, 0x65, 0x64, 0x44, 0x75, 0x6f, 0x41, 0x6c, 0x6c, 0x64, 0x72, 0x6f, 0x20,
		0x32, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x41, 0x6c, 0x6c, 0x76, 0x69,
		0x65, 0x77, 0x33, 0x53, 0x70, 0x65, 0x65, 0x64, 0x51, 0x75, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x64,
		0x72, 0x6f, 0x20, 0x33, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x51, 0x75, 0x61, 0x64, 0x48,
		0x31, 0x30, 0x30, 0x33, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x69, 0x76, 0x61,
		0x20, 0x48, 0x31, 0x30, 0x30, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69,
		0x76, 0x61, 0x5f, 0x31, 0x30, 0x30, 0x33, 0x47, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x76,
		0x61, 0x20, 0x31, 0x30, 0x30, 0x33, 0x47, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x76, 0x61,
		0x20, 0x24, 0x31, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x49, 0x53, 0x70, 0x65, 0x65, 0x64, 0x41,
		0x4c, 0x4c, 0x56, 0x49, 0x45, 0x57, 0x53, 0x50, 0x45, 0x45, 0x44, 0x41, 0x58, 0x34, 0x4e, 0x61,
		0x6e, 0x6f, 0x41, 0x58, 0x34, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x41, 0x4c, 0x4c, 0x56, 0x49, 0x45,
		0x57, 0x5f, 0x54, 0x58, 0x31, 0x5f, 0x51, 0x75, 0x61, 0x73, 0x61, 0x72, 0x54, 0x58, 0x31, 0x20,
		0x51, 0x75, 0x61, 0x73, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x51,
		0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x41, 0x36, 0x34, 0x20, 0x70, 0x33, 0x41,
		0x36, 0x34, 0x20, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x70, 0x33, 0x51,
		0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x41, 0x33, 0x33, 0x20, 0x79, 0x33, 0x41,
		0x33, 0x33, 0x20, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x79, 0x33, 0x5a,
		0x59, 0x2d, 0x30, 0x37, 0x42, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4f, 0x63, 0x74, 0x61, 0x2d, 0x54,
		0x38, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x20, 0x54, 0x38, 0x51, 0x55,
		0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x4b, 0x32, 0x30, 0x30, 0x31,
		0x6f, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x4b, 0x32,
		0x30, 0x30, 0x31, 0x4f, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33,
		0x20, 0x4b, 0x24, 0x31, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33,
		0x20, 0x70, 0x31, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20,
		0x50, 0x31, 0x4f, 0x43, 0x54, 0x41, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x38, 0x4f, 0x43,
		0x54, 0x4f, 0x50, 0x55, 0x53, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x38, 0x51, 0x75, 0x61,
		0x64, 0x43, 0x6f, 0x72, 0x65, 0x2d, 0x52, 0x31, 0x36, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f,
		0x52, 0x45, 0x20, 0x52, 0x31, 0x36, 0x41, 0x6c, 0x70, 0x73, 0x41, 0x6c, 0x74, 0x69, 0x63, 0x65,
		0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x41, 0x46, 0x54, 0x41, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54,
		0x56, 0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x31, 0x29, 0x41, 0x46,
		0x54, 0x52, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x28,
		0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x41, 0x46, 0x54, 0x4e, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54,
		0x56, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x41, 0x46, 0x54, 0x42, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x54, 0x56, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x31, 0x29, 0x41, 0x46, 0x54, 0x53,
		0x53, 0x53, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20,
		0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x41, 0x46, 0x54, 0x53, 0x53, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28,
		0x47, 0x65, 0x6e, 0x20, 0x31, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74,
		0x69, 0x63, 0x6b, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b,
		0x20, 0x34, 0x4b, 0x41, 0x46, 0x54, 0x4b, 0x41, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20,
		0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x37, 0x22, 0x46, 0x69, 0x72, 0x65, 0x20, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x4b,
		0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x2e,
		0x39, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x2e, 0x39, 0x22, 0x20, 0x34, 0x47, 0x4b, 0x69, 0x6e,
		0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x37, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48,
		0x44, 0x58, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65,
		0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x37, 0x22, 0x20, 0x34, 0x47, 0x4b,
		0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38,
		0x2e, 0x39, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39, 0x22, 0x20, 0x34, 0x47, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x36, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20,
		0x37, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39, 0x20, 0x34, 0x47, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31, 0x30,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31,
		0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20,
		0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44,
		0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53,
		0x44, 0x34, 0x39, 0x33, 0x30, 0x55, 0x52, 0x46, 0x69, 0x72, 0x65, 0x20, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x4b, 0x69, 0x6e, 0x64,
		0x6c, 0x65, 0x45, 0x63, 0x68, 0x6f, 0x45, 0x63, 0x68, 0x6f, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20,
		0x38, 0x41, 0x6c, 0x65, 0x78, 0x61, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x65,
		0x72, 0x41, 0x6c, 0x65, 0x78, 0x61, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x6f, 0x41, 0x6d, 0x69, 0x6e,
		0x6f, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x37, 0x78, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x20, 0x37, 0x78,
		0x41, 0x6d, 0x69, 0x67, 0x6f, 0x37, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x20, 0x37, 0x41, 0x6d, 0x6f,
		0x69, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x37, 0x41, 0x38,
		0x36, 0x32, 0x57, 0x43, 0x4c, 0x45, 0x56, 0x45, 0x52, 0x20, 0x4a, 0x4f, 0x59, 0x20, 0x53, 0x34,
		0x30, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20, 0x4a, 0x6f, 0x79, 0x20, 0x53, 0x34, 0x30, 0x43,
		0x6c, 0x65, 0x76, 0x65, 0x72, 0x20, 0x24, 0x31, 0x41, 0x6e, 0x64, 0x6f, 0x77, 0x6c, 0x41, 0x6e,
		0x67, 0x65, 0x6c, 0x63, 0x61, 0x72, 0x65, 0x46, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6e,
		0x6b, 0x65, 0x72, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x20, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x62,
		0x61, 0x72, 0x41, 0x6e, 0x72, 0x79, 0x41, 0x6f, 0x63, 0x6f, 0x73, 0x41, 0x6f, 0x73, 0x6f, 0x6e,
		0x52, 0x31, 0x30, 0x24, 0x31, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x53, 0x37, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x37, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x38, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x48, 0x6f, 0x6d,
		0x65, 0x50, 0x6f, 0x64, 0x41, 0x69, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x31, 0x2c, 0x31, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x31, 0x2c, 0x32, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57,
		0x61, 0x74, 0x63, 0x68, 0x32, 0x2c, 0x36, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72,
		0x69, 0x65, 0x73, 0x20, 0x31, 0x20, 0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x32,
		0x2c, 0x37, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x31,
		0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x32, 0x2c, 0x33, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x32, 0x20, 0x33, 0x38, 0x6d, 0x6d,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x32, 0x2c, 0x34, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65,
		0x72, 0x69, 0x65, 0x73, 0x20, 0x32, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x33, 0x20, 0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x33, 0x20, 0x34, 0x32, 0x6d,
		0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x45, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x20, 0x53, 0x45, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x24, 0x31, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x57,
		0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x24, 0x31, 0x20, 0x34,
		0x34, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20,
		0x37, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69,
		0x65, 0x73, 0x20, 0x37, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61,
		0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x30, 0x2d, 0x32, 0x30, 0x31, 0x32, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32,
		0x30, 0x30, 0x36, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x30, 0x36, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30,
		0x36, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x69, 0x4d, 0x61,
		0x63, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32, 0x30,
		0x30, 0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30,
		0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x30, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x30, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x31, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x31, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x32, 0x2d, 0x32, 0x30, 0x31, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x34, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x34, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x37,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x2d, 0x32, 0x30, 0x30, 0x37,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x31, 0x32, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x31, 0x32, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41,
		0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32,
		0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x2d, 0x32, 0x30, 0x31, 0x37, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69,
		0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61,
		0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30,
		0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61,
		0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61,
		0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x2d, 0x32, 0x30, 0x31, 0x33, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x32, 0x2d, 0x32, 0x30, 0x31, 0x33, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d,
		0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x34, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4d, 0x61,
		0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x2d, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x2d, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x36, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x36,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x61,
		0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x63, 0x69, 0x6e,
		0x74, 0x6f, 0x73, 0x68, 0x20, 0x47, 0x35, 0x20, 0x28, 0x32, 0x30, 0x30, 0x33, 0x29, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x63, 0x69, 0x6e, 0x74, 0x6f, 0x73, 0x68, 0x20, 0x47, 0x35,
		0x20, 0x28, 0x32, 0x30, 0x30, 0x34, 0x2d, 0x32, 0x30, 0x30, 0x35, 0x29, 0x69, 0x4d, 0x61, 0x63,
		0x20, 0x47, 0x35, 0x20, 0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x47, 0x34, 0x20, 0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x34, 0x20, 0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x69,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x34, 0x20, 0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x69, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35,
		0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x43, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x35, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x73,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x73, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x45, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x38, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x58, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x52, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31,
		0x31, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x45, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d,
		0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x53, 0x45, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x69, 0x50, 0x61, 0x64, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x33, 0x69, 0x50, 0x61, 0x64, 0x20, 0x34, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72,
		0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x34, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x31, 0x32, 0x2e, 0x39, 0x69, 0x50, 0x61, 0x64, 0x20, 0x35, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x69, 0x50, 0x61, 0x64, 0x20, 0x36,
		0x20, 0x39, 0x2e, 0x37, 0x69, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x20, 0x31, 0x31, 0x22, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x31, 0x22, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x35, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x33, 0x69, 0x50, 0x61, 0x64, 0x20, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x22, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x39, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x39, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x35, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x35, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x34, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x34, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x36, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x36, 0x41, 0x70, 0x70, 0x6c,
		0x65, 0x20, 0x54, 0x56, 0x20, 0x32, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x33,
		0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20,
		0x54, 0x56, 0x20, 0x34, 0x4b, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x35,
		0x30, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x34, 0x47, 0x34, 0x35, 0x20,
		0x4e, 0x65, 0x6f, 0x6e, 0x31, 0x30, 0x31, 0x42, 0x20, 0x48, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x20,
		0x34, 0x47, 0x35, 0x30, 0x42, 0x20, 0x48, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x34, 0x47, 0x38,
		0x30, 0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x31, 0x30, 0x31, 0x20, 0x4f, 0x78, 0x79, 0x67,
		0x65, 0x6e, 0x20, 0x34, 0x47, 0x31, 0x30, 0x31, 0x73, 0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e,
		0x41, 0x72, 0x69, 0x61, 0x6e, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x31, 0x30, 0x30, 0x20, 0x53,
		0x54, 0x31, 0x30, 0x30, 0x34, 0x50, 0x47, 0x31, 0x30, 0x30, 0x38, 0x30, 0x20, 0x53, 0x53, 0x38,
		0x30, 0x30, 0x33, 0x50, 0x47, 0x38, 0x30, 0x37, 0x31, 0x20, 0x53, 0x54, 0x37, 0x30, 0x30, 0x32,
		0x50, 0x47, 0x37, 0x31, 0x37, 0x30, 0x20, 0x53, 0x54, 0x37, 0x30, 0x30, 0x31, 0x52, 0x57, 0x37,
		0x30, 0x41, 0x72, 0x6b, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x20, 0x24, 0x31, 0x49, 0x6d,
		0x70, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x50, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x6d, 0x70,
		0x75, 0x6c, 0x73, 0x65, 0x20, 0x24, 0x31, 0x45, 0x64, 0x67, 0x65, 0x20, 0x24, 0x31, 0x49, 0x63,
		0x6f, 0x6e, 0x20, 0x24, 0x31, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x20, 0x24, 0x31, 0x45, 0x6c,
		0x66, 0x20, 0x53, 0x38, 0x55, 0x6b, 0x6f, 0x7a, 0x69, 0x20, 0x55, 0x35, 0x41, 0x72, 0x6d, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x41, 0x72, 0x6e, 0x6f, 0x76, 0x61, 0x41, 0x52, 0x43, 0x48, 0x4d, 0x39,
		0x30, 0x31, 0x4d, 0x39, 0x30, 0x31, 0x41, 0x4e, 0x37, 0x43, 0x47, 0x32, 0x37, 0x63, 0x20, 0x47,
		0x32, 0x37, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x37, 0x47, 0x33, 0x37, 0x20, 0x47, 0x33, 0x41, 0x4e,
		0x37, 0x42, 0x47, 0x33, 0x37, 0x62, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x43, 0x47, 0x33, 0x37,
		0x63, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x44, 0x47, 0x33, 0x2d, 0x43, 0x50, 0x43, 0x68, 0x69,
		0x6c, 0x64, 0x70, 0x61, 0x64, 0x41, 0x4e, 0x37, 0x44, 0x47, 0x33, 0x37, 0x64, 0x20, 0x47, 0x33,
		0x41, 0x4e, 0x37, 0x46, 0x47, 0x33, 0x37, 0x66, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x48, 0x47,
		0x33, 0x37, 0x68, 0x20, 0x47, 0x33, 0x41, 0x38, 0x30, 0x4b, 0x53, 0x43, 0x38, 0x41, 0x4e, 0x38,
		0x47, 0x32, 0x38, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x38, 0x47, 0x33, 0x38, 0x20, 0x47, 0x33, 0x41,
		0x4e, 0x38, 0x42, 0x47, 0x33, 0x38, 0x62, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x38, 0x43, 0x47, 0x33,
		0x38, 0x63, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x39, 0x47, 0x32, 0x49, 0x39, 0x69, 0x20, 0x47, 0x32,
		0x41, 0x4e, 0x39, 0x47, 0x32, 0x39, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x39, 0x47, 0x33, 0x39, 0x20,
		0x47, 0x33, 0x31, 0x30, 0x20, 0x47, 0x32, 0x41, 0x31, 0x30, 0x31, 0x42, 0x31, 0x30, 0x31, 0x30,
		0x62, 0x20, 0x47, 0x32, 0x31, 0x30, 0x62, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x31, 0x30, 0x43, 0x47,
		0x33, 0x31, 0x30, 0x63, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x31, 0x30, 0x44, 0x47, 0x33, 0x31, 0x30,
		0x64, 0x20, 0x47, 0x33, 0x41, 0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x39, 0x30, 0x47, 0x33, 0x39,
		0x30, 0x20, 0x47, 0x33, 0x41, 0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x39, 0x30, 0x20, 0x47, 0x34,
		0x39, 0x30, 0x20, 0x47, 0x34, 0x41, 0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x39, 0x37, 0x47, 0x34,
		0x39, 0x37, 0x20, 0x47, 0x34, 0x41, 0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x31, 0x30, 0x31, 0x20,
		0x47, 0x34, 0x31, 0x30, 0x31, 0x20, 0x47, 0x34, 0x41, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x41,
		0x72, 0x74, 0x65, 0x6c, 0x47, 0x61, 0x70, 0x20, 0x59, 0x6f, 0x20, 0x51, 0x55, 0x31, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x55, 0x34, 0x41, 0x6c, 0x6c, 0x6f, 0x4b, 0x6f, 0x6d, 0x69, 0x20, 0x33, 0x51,
		0x32, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x72, 0x74, 0x69, 0x7a, 0x6c, 0x65, 0x65, 0x41, 0x54,
		0x4c, 0x2d, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x39, 0x41, 0x73, 0x61, 0x6e, 0x6f,
		0x24, 0x31, 0x24, 0x32, 0x20, 0x24, 0x31, 0x2e, 0x30, 0x22, 0x41, 0x73, 0x61, 0x6e, 0x7a, 0x6f,
		0x53, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x73, 0x6b, 0x37, 0x39, 0x31, 0x53, 0x50, 0x20,
		0x33, 0x47, 0x41, 0x73, 0x70, 0x65, 0x72, 0x61, 0x57, 0x72, 0x65, 0x6e, 0x41, 0x73, 0x73, 0x69,
		0x73, 0x74, 0x61, 0x6e, 0x74, 0x41, 0x73, 0x70, 0x65, 0x72, 0x41, 0x67, 0x69, 0x6f, 0x43, 0x6c,
		0x75, 0x62, 0x41, 0x53, 0x2d, 0x36, 0x30, 0x31, 0x4c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d,
		0x61, 0x78, 0x20, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x75, 0x72, 0x66, 0x55, 0x6e, 0x61,
		0x6d, 0x69, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x53, 0x68, 0x6f, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65,
		0x74, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x69, 0x64, 0x52, 0x69, 0x64, 0x65, 0x72, 0x4d,
		0x61, 0x78, 0x20, 0x52, 0x69, 0x74, 0x6d, 0x41, 0x53, 0x2d, 0x35, 0x34, 0x31, 0x32, 0x20, 0x4d,
		0x61, 0x78, 0x41, 0x50, 0x2d, 0x37, 0x32, 0x31, 0x4e, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41,
		0x50, 0x2d, 0x39, 0x34, 0x31, 0x43, 0x65, 0x74, 0x75, 0x73, 0x41, 0x50, 0x2d, 0x31, 0x30, 0x36,
		0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x41, 0x73, 0x75, 0x73, 0x45,
		0x65, 0x65, 0x20, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x31, 0x37, 0x31, 0x5a,
		0x39, 0x30, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x45, 0x31, 0x37, 0x32, 0x56, 0x4d,
		0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x46, 0x48, 0x44, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46,
		0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x31, 0x30, 0x5a, 0x31, 0x30, 0x31, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x5a, 0x31, 0x30, 0x31, 0x58, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30,
		0x20, 0x4c, 0x54, 0x45, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x4d, 0x65,
		0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4d, 0x45, 0x31, 0x30, 0x33, 0x4b,
		0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x48, 0x44, 0x20, 0x37, 0x4d, 0x65, 0x4d,
		0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x38, 0x2e, 0x39, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x48, 0x44, 0x20, 0x37,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x31, 0x30, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x37, 0x30, 0x31, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
		0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x31, 0x30, 0x33, 0x43,
		0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x54, 0x46, 0x31, 0x30, 0x33, 0x43, 0x47, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
		0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x33, 0x30, 0x30, 0x54, 0x54, 0x72, 0x61,
		0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x33,
		0x30, 0x33, 0x4b, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x20, 0x53, 0x4c, 0x31, 0x30, 0x31, 0x45,
		0x65, 0x65, 0x20, 0x50, 0x61, 0x64, 0x20, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x20, 0x53, 0x4c,
		0x31, 0x30, 0x31, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x43, 0x20, 0x37, 0x2e, 0x30, 0x50,
		0x30, 0x30, 0x38, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20,
		0x5a, 0x38, 0x50, 0x30, 0x30, 0x31, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x5a, 0x31, 0x30,
		0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x5a, 0x38, 0x73, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64,
		0x20, 0x37, 0x2e, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x5a, 0x65,
		0x6e, 0x50, 0x61, 0x64, 0x20, 0x53, 0x20, 0x38, 0x2e, 0x30, 0x50, 0x30, 0x32, 0x37, 0x5a, 0x65,
		0x6e, 0x50, 0x61, 0x64, 0x20, 0x33, 0x53, 0x20, 0x31, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64,
		0x20, 0x33, 0x53, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x41, 0x53, 0x55, 0x53, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x50,
		0x31, 0x38, 0x30, 0x31, 0x2d, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65,
		0x72, 0x20, 0x41, 0x69, 0x4f, 0x20, 0x50, 0x31, 0x38, 0x30, 0x31, 0x20, 0x31, 0x38, 0x2e, 0x34,
		0x22, 0x41, 0x53, 0x55, 0x53, 0x20, 0x54, 0x41, 0x42, 0x20, 0x41, 0x38, 0x54, 0x41, 0x42, 0x20,
		0x41, 0x38, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x36, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x37,
		0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53,
		0x49, 0x4d, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x38, 0x50, 0x61, 0x64, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x53, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x61,
		0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x54, 0x30, 0x30, 0x38, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x45, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x54, 0x30, 0x30, 0x34, 0x50,
		0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x41, 0x52, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x38, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x46, 0x6c, 0x69, 0x70,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x56, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x56, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x43,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4d, 0x31, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x31,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4d, 0x32, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x32,
		0x45, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x20, 0x4c, 0x31, 0x47, 0x35, 0x35, 0x33,
		0x4b, 0x4c, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4c,
		0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x35, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x5a, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x36,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61,
		0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x4d, 0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x4d, 0x32, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x20, 0x54, 0x56, 0x5a, 0x65, 0x6e, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x20, 0x35, 0x30, 0x30, 0x30, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x20, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61,
		0x73, 0x75, 0x73, 0x20, 0x33, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33,
		0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x33, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20,
		0x44, 0x65, 0x6c, 0x75, 0x78, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x5a, 0x65, 0x6e, 0x46,
		0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x5a, 0x65, 0x6e, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x34, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46,
		0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x6e, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x52, 0x4f, 0x47, 0x20, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x35, 0x5a, 0x4e, 0x32, 0x32, 0x30, 0x49, 0x43, 0x5a, 0x65, 0x6e, 0x20, 0x41, 0x69, 0x4f, 0x20,
		0x5a, 0x4e, 0x32, 0x32, 0x30, 0x49, 0x43, 0x5a, 0x65, 0x6e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x24,
		0x31, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x24, 0x31, 0x43,
		0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x24,
		0x31, 0x41, 0x74, 0x6d, 0x61, 0x63, 0x61, 0x20, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x6f, 0x6e,
		0x69, 0x6b, 0x41, 0x54, 0x4d, 0x41, 0x43, 0x41, 0x5f, 0x41, 0x74, 0x6f, 0x6d, 0x41, 0x74, 0x76,
		0x69, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x76, 0x6f, 0x78, 0x43, 0x44, 0x4d, 0x2d, 0x24, 0x31,
		0x41, 0x75, 0x74, 0x61, 0x6e, 0x41, 0x76, 0x65, 0x6e, 0x7a, 0x6f, 0x4d, 0x6f, 0x62, 0x20, 0x34,
		0x20, 0x34, 0x47, 0x4d, 0x6f, 0x62, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x41,
		0x76, 0x76, 0x69, 0x6f, 0x43, 0x48, 0x49, 0x56, 0x41, 0x53, 0x5f, 0x35, 0x35, 0x43, 0x68, 0x69,
		0x76, 0x61, 0x73, 0x20, 0x35, 0x35, 0x4d, 0x69, 0x6e, 0x74, 0x5f, 0x4d, 0x33, 0x35, 0x33, 0x4d,
		0x69, 0x6e, 0x74, 0x20, 0x4d, 0x33, 0x35, 0x33, 0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x69, 0x61,
		0x5f, 0x32, 0x30, 0x31, 0x38, 0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x69, 0x61, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x50, 0x41, 0x44, 0x41, 0x77, 0x6f, 0x77, 0x41, 0x78, 0x69, 0x6f, 0x6f,
		0x50, 0x69, 0x63, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x50, 0x49, 0x43, 0x4f,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x4d, 0x32, 0x50, 0x69, 0x63, 0x6f, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x4d, 0x32, 0x20, 0x4d, 0x50, 0x69, 0x63, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31,
		0x20, 0x33, 0x47, 0x41, 0x78, 0x78, 0x69, 0x6f, 0x6e, 0x41, 0x54, 0x41, 0x42, 0x2d, 0x24, 0x31,
		0x41, 0x7a, 0x75, 0x6d, 0x69, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x50, 0x45, 0x45,
		0x44, 0x35, 0x35, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x41, 0x35, 0x30,
		0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35, 0x30, 0x20, 0x53,
		0x74, 0x79, 0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x42, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x50, 0x69,
		0x6f, 0x6e, 0x65, 0x65, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x53, 0x37, 0x30, 0x30, 0x42, 0x46,
		0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x20, 0x54, 0x51, 0x30, 0x36, 0x30, 0x58, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x54, 0x51,
		0x38, 0x36, 0x33, 0x51, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20,
		0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x49, 0x37, 0x30, 0x30, 0x41, 0x4a, 0x54,
		0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67,
		0x20, 0x49, 0x37, 0x38, 0x35, 0x41, 0x50, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x58, 0x38, 0x30, 0x30, 0x42, 0x4a, 0x54, 0x65,
		0x63, 0x68, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20,
		0x49, 0x31, 0x30, 0x31, 0x42, 0x49, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x20, 0x4b, 0x61, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x54, 0x51, 0x37,
		0x36, 0x33, 0x49, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x24, 0x31, 0x22, 0x20, 0x33, 0x47,
		0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x47, 0x20,
		0x58, 0x35, 0x39, 0x35, 0x42, 0x54, 0x42, 0x42, 0x4b, 0x24, 0x31, 0x4c, 0x45, 0x58, 0x2d, 0x24,
		0x32, 0x2f, 0x24, 0x33, 0x42, 0x44, 0x46, 0x42, 0x4b, 0x39, 0x36, 0x30, 0x4e, 0x20, 0x4d, 0x54,
		0x24, 0x31, 0x42, 0x44, 0x51, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x31, 0x39, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x42, 0x31, 0x39, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x79, 0x42, 0x44,
		0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x44, 0x53, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x42, 0x47, 0x48, 0x59, 0x24, 0x31, 0x59, 0x37, 0x31, 0x30, 0x20, 0x4b, 0x49, 0x44, 0x53, 0x59,
		0x37, 0x31, 0x30, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x4a, 0x4f, 0x59, 0x20, 0x58, 0x32, 0x4a, 0x6f,
		0x79, 0x20, 0x58, 0x32, 0x42, 0x49, 0x48, 0x45, 0x45, 0x42, 0x4d, 0x41, 0x58, 0x4d, 0x61, 0x78,
		0x50, 0x61, 0x64, 0x20, 0x49, 0x31, 0x30, 0x20, 0x24, 0x31, 0x42, 0x53, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x52, 0x75, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x42, 0x61, 0x72, 0x6e, 0x65, 0x73,
		0x20, 0x26, 0x20, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x42,
		0x65, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x20,
		0x24, 0x31, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x61, 0x62, 0x45, 0x24, 0x31, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x46, 0x61, 0x73, 0x74, 0x20, 0x32, 0x46, 0x61, 0x73, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x38, 0x20, 0x41, 0x32, 0x33, 0x39, 0x73, 0x42, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x47, 0x54,
		0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x54, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32,
		0x47, 0x54, 0x20, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x54, 0x20, 0x4b, 0x69,
		0x6e, 0x67, 0x42, 0x65, 0x65, 0x74, 0x65, 0x6c, 0x42, 0x65, 0x69, 0x73, 0x74, 0x61, 0x42, 0x65,
		0x6c, 0x6c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x50, 0x20, 0x31, 0x30, 0x30, 0x20, 0x58, 0x2d,
		0x50, 0x6c, 0x75, 0x73, 0x42, 0x65, 0x6e, 0x51, 0x46, 0x24, 0x31, 0x42, 0x65, 0x6e, 0x51, 0x2d,
		0x53, 0x69, 0x65, 0x6d, 0x65, 0x6e, 0x73, 0x42, 0x65, 0x6e, 0x63, 0x6f, 0x41, 0x45, 0x39, 0x39,
		0x35, 0x30, 0x56, 0x36, 0x30, 0x41, 0x45, 0x39, 0x30, 0x31, 0x30, 0x56, 0x38, 0x30, 0x42, 0x65,
		0x6e, 0x65, 0x73, 0x73, 0x65, 0x42, 0x65, 0x6e, 0x7a, 0x6f, 0x42, 0x65, 0x79, 0x6f, 0x6e, 0x64,
		0x53, 0x75, 0x72, 0x76, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x75, 0x72, 0x76,
		0x65, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x6d, 0x65, 0x39, 0x48, 0x6f, 0x6d, 0x65, 0x20, 0x39, 0x42,
		0x65, 0x7a, 0x6b, 0x61, 0x6d, 0x42, 0x69, 0x67, 0x62, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x54,
		0x61, 0x62, 0x2d, 0x4f, 0x6e, 0x65, 0x42, 0x69, 0x6c, 0x69, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x42,
		0x69, 0x6c, 0x69, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x69, 0x6c,
		0x6c, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x42, 0x69, 0x6f, 0x52, 0x75, 0x67, 0x67, 0x65, 0x64, 0x42, 0x69, 0x6f, 0x57, 0x6f, 0x6c, 0x66,
		0x20, 0x38, 0x2d, 0x46, 0x33, 0x30, 0x52, 0x75, 0x67, 0x67, 0x62, 0x6f, 0x20, 0x32, 0x30, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x42, 0x69, 0x72, 0x64, 0x42, 0x69, 0x74, 0x65, 0x6c, 0x42, 0x69, 0x74,
		0x6d, 0x6f, 0x72, 0x65, 0x24, 0x31, 0x20, 0x24, 0x32, 0x43, 0x20, 0x33, 0x47, 0x54, 0x61, 0x62,
		0x31, 0x30, 0x31, 0x31, 0x51, 0x20, 0x49, 0x49, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x42, 0x69, 0x74, 0x74, 0x69, 0x75, 0x6d, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x32, 0x42, 0x6b, 0x61, 0x76, 0x42, 0x70, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x42, 0x65, 0x61, 0x72, 0x42,
		0x6c, 0x61, 0x63, 0x6b, 0x20, 0x46, 0x6f, 0x78, 0x42, 0x4d, 0x4d, 0x34, 0x34, 0x33, 0x44, 0x42,
		0x37, 0x20, 0x46, 0x6f, 0x78, 0x2b, 0x42, 0x38, 0x20, 0x46, 0x6f, 0x78, 0x42, 0x38, 0x20, 0x46,
		0x6f, 0x78, 0x2b, 0x42, 0x4d, 0x4d, 0x34, 0x34, 0x31, 0x57, 0x42, 0x38, 0x4d, 0x42, 0x4d, 0x4d,
		0x34, 0x34, 0x32, 0x44, 0x42, 0x37, 0x42, 0x4d, 0x4d, 0x35, 0x33, 0x31, 0x44, 0x42, 0x36, 0x42,
		0x4d, 0x4d, 0x35, 0x33, 0x31, 0x41, 0x42, 0x35, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31, 0x41, 0x42,
		0x35, 0x2b, 0x42, 0x34, 0x42, 0x4d, 0x4d, 0x34, 0x34, 0x31, 0x44, 0x42, 0x34, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31, 0x42, 0x42, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x4e, 0x46, 0x43, 0x42, 0x4d, 0x4d, 0x35, 0x33, 0x31, 0x42, 0x42, 0x34, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x32, 0x44,
		0x42, 0x33, 0x2b, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31, 0x44, 0x42, 0x33, 0x42, 0x4d, 0x4d, 0x35,
		0x34, 0x31, 0x57, 0x42, 0x37, 0x52, 0x20, 0x46, 0x6f, 0x78, 0x42, 0x4d, 0x4d, 0x20, 0x35, 0x33,
		0x32, 0x20, 0x53, 0x42, 0x4d, 0x4d, 0x20, 0x35, 0x33, 0x32, 0x53, 0x42, 0x4d, 0x4d, 0x20, 0x24,
		0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x76, 0x69, 0x65, 0x77, 0x41, 0x24, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x41, 0x36, 0x30, 0x41, 0x38, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x38, 0x30, 0x53, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x56, 0x39, 0x30,
		0x30, 0x30, 0x50, 0x72, 0x6f, 0x2d, 0x46, 0x42, 0x56, 0x39, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x46, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x50,
		0x72, 0x6f, 0x42, 0x6c, 0x61, 0x75, 0x70, 0x75, 0x6e, 0x6b, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f,
		0x76, 0x65, 0x72, 0x79, 0x20, 0x31, 0x31, 0x31, 0x43, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
		0x72, 0x79, 0x20, 0x41, 0x31, 0x30, 0x2e, 0x33, 0x30, 0x32, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
		0x65, 0x72, 0x79, 0x20, 0x31, 0x30, 0x30, 0x30, 0x43, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
		0x72, 0x79, 0x20, 0x31, 0x30, 0x30, 0x31, 0x41, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
		0x79, 0x20, 0x31, 0x30, 0x30, 0x31, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x53, 0x32, 0x45, 0x6e, 0x64, 0x65, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x20, 0x24, 0x31, 0x50,
		0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69,
		0x73, 0x20, 0x24, 0x31, 0x53, 0x4c, 0x70, 0x6c, 0x75, 0x73, 0x30, 0x32, 0x53, 0x4c, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x30, 0x32, 0x42, 0x45, 0x20, 0x24, 0x31, 0x42, 0x4c, 0x2d, 0x39, 0x31,
		0x39, 0x38, 0x34, 0x35, 0x42, 0x45, 0x20, 0x63, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x42, 0x6c, 0x6c, 0x6f, 0x63, 0x42, 0x6c, 0x6f, 0x77, 0x4c, 0x61, 0x73, 0x65, 0x72,
		0x54, 0x41, 0x42, 0x31, 0x30, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31,
		0x30, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30,
		0x20, 0x34, 0x47, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x75, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65,
		0x20, 0x24, 0x31, 0x4d, 0x36, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x74, 0x75, 0x64,
		0x69, 0x6f, 0x20, 0x24, 0x31, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x35, 0x2e, 0x30, 0x20,
		0x4b, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x45, 0x20, 0x4c,
		0x54, 0x45, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20,
		0x4c, 0x54, 0x45, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x4f, 0x4e, 0x45, 0x53, 0x74, 0x75,
		0x64, 0x69, 0x6f, 0x20, 0x4f, 0x6e, 0x65, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x20, 0x24, 0x31, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x53, 0x45,
		0x4c, 0x46, 0x49, 0x45, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69,
		0x65, 0x4e, 0x65, 0x6f, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x44, 0x49, 0x41, 0x4d, 0x4f, 0x4e, 0x44, 0x45, 0x6e,
		0x65, 0x72, 0x67, 0x79, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x45, 0x4e, 0x45, 0x52,
		0x47, 0x59, 0x20, 0x58, 0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x4c, 0x45, 0x6e,
		0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x20, 0x32, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x58,
		0x20, 0x50, 0x4c, 0x55, 0x53, 0x20, 0x32, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x58, 0x20, 0x50,
		0x4c, 0x55, 0x53, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4c, 0x49, 0x46, 0x45, 0x20, 0x58, 0x4c, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x58, 0x4c, 0x44, 0x61,
		0x73, 0x68, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x44, 0x41, 0x53,
		0x48, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x44, 0x61, 0x73, 0x68, 0x20, 0x58, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x44, 0x61, 0x73, 0x68, 0x20, 0x34, 0x2e, 0x35, 0x44, 0x61, 0x73, 0x68, 0x20,
		0x58, 0x4c, 0x50, 0x75, 0x72, 0x65, 0x20, 0x24, 0x31, 0x50, 0x55, 0x52, 0x45, 0x20, 0x4d, 0x49,
		0x4e, 0x49, 0x50, 0x75, 0x72, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x6f, 0x6c, 0x64, 0x20,
		0x24, 0x31, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x32, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x46,
		0x45, 0x20, 0x4f, 0x4e, 0x45, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x4c, 0x49, 0x46,
		0x45, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x58, 0x20, 0x4c, 0x54,
		0x45, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x4d, 0x41, 0x52, 0x4b, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4d,
		0x61, 0x72, 0x6b, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4e, 0x65, 0x6f,
		0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x65, 0x6f, 0x20, 0x24, 0x31, 0x47, 0x35, 0x30,
		0x20, 0x4d, 0x65, 0x67, 0x61, 0x47, 0x35, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x35, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x39, 0x31, 0x20,
		0x50, 0x52, 0x4f, 0x47, 0x39, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20,
		0x35, 0x2e, 0x35, 0x20, 0x48, 0x44, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x4c, 0x54,
		0x45, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x4c, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x33, 0x42, 0x31, 0x31, 0x30, 0x44, 0x4c, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x42, 0x31, 0x33, 0x30, 0x44, 0x4c, 0x56, 0x69, 0x65,
		0x77, 0x20, 0x32, 0x42, 0x31, 0x34, 0x30, 0x44, 0x4c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x56,
		0x49, 0x45, 0x57, 0x20, 0x31, 0x56, 0x69, 0x65, 0x77, 0x20, 0x31, 0x52, 0x31, 0x20, 0x48, 0x44,
		0x52, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x52, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x24,
		0x31, 0x20, 0x28, 0x32, 0x30, 0x24, 0x32, 0x29, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72,
		0x65, 0x6d, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x30, 0x22, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74,
		0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72,
		0x65, 0x6d, 0x65, 0x56, 0x49, 0x56, 0x4f, 0x20, 0x41, 0x49, 0x52, 0x20, 0x4c, 0x54, 0x45, 0x56,
		0x69, 0x76, 0x6f, 0x20, 0x41, 0x69, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x37, 0x43, 0x24, 0x31, 0x4c, 0x20, 0x28, 0x32, 0x30, 0x24,
		0x32, 0x29, 0x43, 0x35, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x24, 0x31, 0x4c, 0x56, 0x69,
		0x76, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x35, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x32, 0x30, 0x31, 0x39, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x56, 0x69, 0x76,
		0x6f, 0x20, 0x47, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x4d, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20,
		0x49, 0x49, 0x44, 0x61, 0x73, 0x68, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x75, 0x62, 0x6f, 0x6f, 0x4d,
		0x61, 0x79, 0x61, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x61, 0x79, 0x61, 0x58, 0x66, 0x69,
		0x72, 0x65, 0x32, 0x58, 0x66, 0x69, 0x72, 0x65, 0x20, 0x32, 0x50, 0x69, 0x63, 0x61, 0x73, 0x73,
		0x6f, 0x20, 0x34, 0x47, 0x58, 0x66, 0x69, 0x72, 0x65, 0x53, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x42, 0x6c, 0x75, 0x65, 0x62, 0x69, 0x72, 0x64, 0x42, 0x6c, 0x75, 0x65, 0x64, 0x6f, 0x74, 0x42,
		0x6c, 0x75, 0x65, 0x67, 0x6f, 0x6f, 0x64, 0x42, 0x4c, 0x55, 0x45, 0x47, 0x4f, 0x4f, 0x44, 0x56,
		0x36, 0x42, 0x6c, 0x75, 0x65, 0x77, 0x61, 0x76, 0x65, 0x33, 0x33, 0x47, 0x54, 0x20, 0x48, 0x44,
		0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x20, 0x48, 0x44, 0x2b, 0x57, 0x56, 0x38, 0x52, 0x2d, 0x4d,
		0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x20, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x72, 0x73, 0x68,
		0x6d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x20, 0x52, 0x65, 0x64,
		0x20, 0x4e, 0x6f, 0x75, 0x67, 0x61, 0x74, 0x42, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x58,
		0x24, 0x31, 0x41, 0x58, 0x37, 0x4f, 0x4f, 0x41, 0x58, 0x37, 0x30, 0x30, 0x46, 0x55, 0x4e, 0x20,
		0x34, 0x20, 0x32, 0x30, 0x31, 0x38, 0x46, 0x75, 0x6e, 0x20, 0x34, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x38, 0x29, 0x42, 0x36, 0x30, 0x50, 0x72, 0x6f, 0x5f, 0x4d, 0x56, 0x30, 0x33, 0x42, 0x36, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x42, 0x35, 0x30, 0x50, 0x72, 0x6f, 0x42, 0x35, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x42, 0x4c, 0x35, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6f, 0x62, 0x61, 0x72, 0x72, 0x79,
		0x4b, 0x31, 0x30, 0x20, 0x53, 0x45, 0x42, 0x6f, 0x77, 0x61, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64,
		0x74, 0x42, 0x72, 0x61, 0x76, 0x69, 0x73, 0x41, 0x35, 0x30, 0x31, 0x20, 0x42, 0x52, 0x49, 0x47,
		0x48, 0x54, 0x41, 0x35, 0x30, 0x31, 0x20, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x54, 0x72, 0x61,
		0x63, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73,
		0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x54, 0x61, 0x75, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x54, 0x72,
		0x65, 0x6e, 0x64, 0x42, 0x35, 0x30, 0x31, 0x45, 0x61, 0x73, 0x79, 0x4e, 0x31, 0x2d, 0x35, 0x37,
		0x30, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x35, 0x35, 0x34, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64,
		0x53, 0x35, 0x30, 0x30, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x41, 0x35, 0x30, 0x35,
		0x20, 0x4a, 0x4f, 0x59, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35, 0x30, 0x35, 0x20, 0x4a, 0x6f,
		0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35, 0x35, 0x32, 0x20, 0x4a, 0x4f, 0x59, 0x20, 0x4d,
		0x61, 0x78, 0x41, 0x35, 0x35, 0x32, 0x20, 0x4a, 0x6f, 0x79, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x74,
		0x6c, 0x61, 0x73, 0x20, 0x41, 0x35, 0x35, 0x31, 0x41, 0x35, 0x35, 0x31, 0x20, 0x41, 0x74, 0x6c,
		0x61, 0x73, 0x41, 0x35, 0x30, 0x33, 0x20, 0x4a, 0x6f, 0x79, 0x41, 0x35, 0x30, 0x34, 0x20, 0x54,
		0x72, 0x61, 0x63, 0x65, 0x41, 0x35, 0x31, 0x32, 0x20, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x35, 0x31, 0x31, 0x20, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79,
		0x41, 0x35, 0x31, 0x30, 0x5f, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x5f, 0x34, 0x47, 0x41, 0x35, 0x31,
		0x30, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x20, 0x34, 0x47, 0x41, 0x35, 0x30, 0x39, 0x5f, 0x4a,
		0x65, 0x61, 0x6e, 0x73, 0x41, 0x35, 0x30, 0x39, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x42, 0x52,
		0x41, 0x56, 0x49, 0x53, 0x20, 0x4e, 0x45, 0x4f, 0x41, 0x34, 0x30, 0x31, 0x20, 0x4e, 0x65, 0x6f,
		0x4e, 0x31, 0x5f, 0x35, 0x35, 0x30, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x72, 0x4e, 0x31,
		0x2d, 0x35, 0x35, 0x30, 0x20, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x72, 0x42, 0x52, 0x41, 0x56,
		0x49, 0x53, 0x20, 0x4f, 0x4d, 0x45, 0x47, 0x41, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x42, 0x52, 0x41,
		0x56, 0x49, 0x53, 0x20, 0x42, 0x49, 0x5a, 0x42, 0x69, 0x7a, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53,
		0x20, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x53, 0x6c, 0x69, 0x6d, 0x20, 0x33, 0x47, 0x4e, 0x50, 0x20, 0x31, 0x30, 0x34, 0x20, 0x33, 0x47,
		0x4e, 0x50, 0x31, 0x30, 0x34, 0x20, 0x33, 0x47, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4e,
		0x50, 0x20, 0x31, 0x30, 0x33, 0x4e, 0x50, 0x31, 0x30, 0x33, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53,
		0x20, 0x4e, 0x50, 0x20, 0x38, 0x34, 0x34, 0x4e, 0x50, 0x38, 0x34, 0x34, 0x42, 0x72, 0x69, 0x67,
		0x68, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x42, 0x72, 0x6f, 0x6e, 0x64, 0x69, 0x43, 0x45, 0x4e, 0x54,
		0x55, 0x52, 0x49, 0x4f, 0x4e, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x41, 0x44, 0x49, 0x41, 0x54, 0x4f,
		0x52, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x4f, 0x52, 0x59, 0x20, 0x24, 0x31, 0x4c, 0x55, 0x58, 0x55,
		0x52, 0x59, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x53, 0x6b,
		0x79, 0x53, 0x45, 0x4e, 0x53, 0x55, 0x45, 0x4c, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x56, 0x49, 0x43,
		0x54, 0x4f, 0x52, 0x59, 0x20, 0x24, 0x31, 0x41, 0x6d, 0x69, 0x63, 0x6f, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x47, 0x53, 0x55, 0x52, 0x46, 0x49, 0x4e,
		0x47, 0x20, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x42, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x67, 0x75,
		0x6d, 0x42, 0x75, 0x6e, 0x64, 0x79, 0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x35, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x37, 0x5f, 0x50, 0x4c,
		0x55, 0x53, 0x42, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x42, 0x75, 0x73, 0x68, 0x42, 0x75, 0x73, 0x68, 0x31, 0x30, 0x4e, 0x6f, 0x75, 0x31, 0x30, 0x4e,
		0x6f, 0x75, 0x24, 0x31, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x43, 0x41, 0x47, 0x49, 0x43, 0x41,
		0x47, 0x49, 0x2d, 0x43, 0x41, 0x47, 0x49, 0x2d, 0x4f, 0x4d, 0x45, 0x47, 0x41, 0x43, 0x47, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x24, 0x31, 0x4f, 0x6d,
		0x65, 0x67, 0x61, 0x20, 0x36, 0x45, 0x4f, 0x4e, 0x20, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x50,
		0x72, 0x6f, 0x45, 0x4f, 0x4e, 0x20, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x47, 0x6f, 0x6c, 0x64,
		0x43, 0x47, 0x56, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x4d, 0x41, 0x58, 0x42, 0x6c, 0x75, 0x65, 0x53,
		0x31, 0x30, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x53, 0x31, 0x30, 0x43, 0x4f, 0x52, 0x4e, 0x52, 0x24,
		0x31, 0x30, 0x58, 0x24, 0x31, 0x43, 0x4f, 0x59, 0x4f, 0x54, 0x45, 0x31, 0x30, 0x39, 0x30, 0x20,
		0x44, 0x56, 0x52, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x43,
		0x55, 0x42, 0x4f, 0x54, 0x43, 0x68, 0x65, 0x65, 0x74, 0x61, 0x68, 0x24, 0x31, 0x52, 0x41, 0x49,
		0x4e, 0x42, 0x4f, 0x57, 0x20, 0x32, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x20, 0x32, 0x52,
		0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x44, 0x49, 0x4e,
		0x4f, 0x53, 0x41, 0x55, 0x52, 0x44, 0x69, 0x6e, 0x6f, 0x73, 0x61, 0x75, 0x72, 0x4b, 0x49, 0x4e,
		0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x32, 0x4b, 0x69, 0x6e, 0x67, 0x20,
		0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x4b, 0x49, 0x4e, 0x47, 0x4b,
		0x4f, 0x4e, 0x47, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e,
		0x67, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x49, 0x4e, 0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x4b,
		0x49, 0x4e, 0x47, 0x20, 0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x43, 0x53, 0x4b, 0x69, 0x6e, 0x67, 0x20,
		0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x43, 0x53, 0x4b, 0x49, 0x4e, 0x47, 0x20, 0x4b, 0x4f, 0x4e, 0x47,
		0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x51, 0x55, 0x45, 0x53, 0x54, 0x20, 0x4c,
		0x49, 0x54, 0x45, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x55, 0x45,
		0x53, 0x54, 0x51, 0x75, 0x65, 0x73, 0x74, 0x5a, 0x4f, 0x52, 0x52, 0x4f, 0x20, 0x30, 0x30, 0x31,
		0x5a, 0x6f, 0x72, 0x72, 0x6f, 0x20, 0x30, 0x30, 0x31, 0x4d, 0x61, 0x6e, 0x69, 0x74, 0x6f, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x4d, 0x41, 0x58, 0x20, 0x33, 0x4d, 0x61, 0x78, 0x20, 0x33, 0x4d, 0x61,
		0x78, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x37, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x4e,
		0x4f, 0x54, 0x45, 0x20, 0x32, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x32, 0x30, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x32, 0x30, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x53, 0x43, 0x55, 0x42, 0x4f, 0x54, 0x5f, 0x4e,
		0x4f, 0x56, 0x41, 0x4e, 0x6f, 0x76, 0x61, 0x43, 0x55, 0x42, 0x4f, 0x54, 0x5f, 0x50, 0x4f, 0x57,
		0x45, 0x52, 0x43, 0x55, 0x42, 0x4f, 0x54, 0x5f, 0x58, 0x31, 0x38, 0x5f, 0x50, 0x6c, 0x75, 0x73,
		0x58, 0x31, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x56, 0x54, 0x45, 0x43, 0x61, 0x6d, 0x66,
		0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6e, 0x61, 0x6c, 0x20, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
		0x4f, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x61, 0x70, 0x69, 0x74, 0x65, 0x6c, 0x43,
		0x61, 0x70, 0x74, 0x69, 0x76, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x43, 0x61, 0x72, 0x72,
		0x65, 0x66, 0x6f, 0x75, 0x72, 0x43, 0x54, 0x38, 0x32, 0x30, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4e, 0x65, 0x6f, 0x32, 0x43, 0x54, 0x24, 0x31, 0x43,
		0x61, 0x73, 0x69, 0x6f, 0x47, 0x27, 0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x61, 0x76, 0x69, 0x6e,
		0x65, 0x47, 0x27, 0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f,
		0x47, 0x27, 0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x20,
		0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x61, 0x73, 0x70, 0x65, 0x72, 0x56, 0x49, 0x41, 0x20,
		0x41, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31, 0x43, 0x41, 0x53,
		0x50, 0x45, 0x52, 0x5f, 0x56, 0x49, 0x41, 0x5f, 0x45, 0x31, 0x63, 0x56, 0x49, 0x41, 0x20, 0x45,
		0x31, 0x43, 0x4c, 0x31, 0x30, 0x20, 0x34, 0x2e, 0x35, 0x47, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31,
		0x20, 0x33, 0x47, 0x43, 0x61, 0x74, 0x42, 0x31, 0x35, 0x51, 0x43, 0x41, 0x54, 0x20, 0x42, 0x33,
		0x35, 0x42, 0x33, 0x35, 0x53, 0x36, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x76, 0x69, 0x6f,
		0x6e, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x42, 0x61, 0x73, 0x65, 0x20,
		0x35, 0x2e, 0x30, 0x22, 0x43, 0x41, 0x56, 0x49, 0x4f, 0x4e, 0x5f, 0x31, 0x30, 0x5f, 0x33, 0x47,
		0x52, 0x51, 0x42, 0x61, 0x73, 0x65, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x52, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x31, 0x22, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x32, 0x22, 0x20, 0x51, 0x75, 0x61, 0x64, 0x43, 0x61,
		0x76, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x31, 0x30, 0x42, 0x61, 0x73, 0x65,
		0x20, 0x31, 0x30, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x5f, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x37,
		0x5f, 0x33, 0x47, 0x5f, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x20, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x43, 0x65, 0x6c,
		0x63, 0x75, 0x73, 0x43, 0x65, 0x6c, 0x6b, 0x6f, 0x6e, 0x34, 0x47, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x38, 0x4d, 0x69, 0x6c, 0x6c, 0x65, 0x6e, 0x6e, 0x69, 0x61, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x32,
		0x47, 0x42, 0x53, 0x74, 0x61, 0x72, 0x32, 0x47, 0x42, 0x20, 0x53, 0x74, 0x61, 0x72, 0x32, 0x47,
		0x42, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x32, 0x47, 0x42, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73,
		0x73, 0x43, 0x6c, 0x69, 0x51, 0x20, 0x32, 0x55, 0x6e, 0x69, 0x51, 0x43, 0x65, 0x6c, 0x6c, 0x2d,
		0x43, 0x43, 0x45, 0x4c, 0x4c, 0x43, 0x5f, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x45, 0x76, 0x6f,
		0x6c, 0x76, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x46, 0x61, 0x73,
		0x68, 0x69, 0x6f, 0x6e, 0x32, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e,
		0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x48, 0x49, 0x43, 0x5f, 0x58, 0x31, 0x43, 0x68,
		0x69, 0x63, 0x20, 0x58, 0x31, 0x43, 0x65, 0x6c, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
		0x73, 0x6d, 0x61, 0x73, 0x43, 0x54, 0x5f, 0x43, 0x6f, 0x73, 0x6d, 0x61, 0x73, 0x5f, 0x56, 0x43,
		0x6f, 0x73, 0x6d, 0x61, 0x73, 0x20, 0x56, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x50, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x33, 0x47, 0x31, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x68, 0x6f,
		0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x48, 0x6f, 0x6e, 0x67, 0x20, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x43, 0x68, 0x65, 0x72, 0x72, 0x79, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x24, 0x31, 0x46, 0x6c,
		0x61, 0x72, 0x65, 0x5f, 0x48, 0x44, 0x5f, 0x4d, 0x41, 0x58, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20,
		0x48, 0x44, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x4c, 0x41, 0x52, 0x45, 0x20, 0x4c, 0x49, 0x54, 0x45,
		0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20,
		0x53, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4a, 0x24, 0x31, 0x73,
		0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x46, 0x6c,
		0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x65, 0x6c, 0x75, 0x78, 0x65, 0x46, 0x6c, 0x61,
		0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x72, 0x65,
		0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x58, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c,
		0x61, 0x72, 0x65, 0x20, 0x4a, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x72, 0x65,
		0x20, 0x41, 0x35, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x58, 0x20, 0x56, 0x32, 0x46, 0x6c, 0x61,
		0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x5f,
		0x4a, 0x32, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4a, 0x32, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x34, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4d,
		0x61, 0x78, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x53, 0x35, 0x4c, 0x69, 0x74, 0x65, 0x44, 0x54, 0x56,
		0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x44, 0x54,
		0x56, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x32, 0x20, 0x44, 0x54, 0x56, 0x46, 0x6c, 0x61,
		0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x53, 0x33, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20,
		0x24, 0x31, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x48, 0x44, 0x20, 0x24, 0x31, 0x4f, 0x6d, 0x65,
		0x67, 0x61, 0x5f, 0x48, 0x44, 0x5f, 0x44, 0x75, 0x6f, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x48,
		0x44, 0x20, 0x44, 0x75, 0x6f, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e,
		0x20, 0x32, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x53,
		0x70, 0x69, 0x6e, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x5f,
		0x54, 0x77, 0x6f, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x54, 0x77, 0x6f, 0x53, 0x75, 0x70,
		0x65, 0x72, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x32, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70,
		0x65, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70,
		0x65, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x54,
		0x56, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x56,
		0x24, 0x31, 0x43, 0x68, 0x69, 0x63, 0x6f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x4c,
		0x54, 0x4f, 0x20, 0x42, 0x6f, 0x6d, 0x62, 0x6f, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x42, 0x6f, 0x6d,
		0x62, 0x6f, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x41, 0x6c,
		0x74, 0x6f, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x45,
		0x73, 0x74, 0x72, 0x65, 0x6c, 0x6c, 0x61, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x45, 0x73, 0x74, 0x72,
		0x65, 0x6c, 0x6c, 0x61, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x4a, 0x55, 0x45, 0x47, 0x4f, 0x41, 0x6c,
		0x74, 0x6f, 0x20, 0x4a, 0x75, 0x65, 0x67, 0x6f, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x53, 0x55, 0x42,
		0x49, 0x52, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x53, 0x75, 0x62, 0x69, 0x72, 0x41, 0x6c, 0x74, 0x6f,
		0x20, 0x24, 0x31, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x24, 0x31, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x4e,
		0x55, 0x42, 0x45, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x4e, 0x75, 0x62, 0x65, 0x4f, 0x4a, 0x4f, 0x53,
		0x20, 0x43, 0x41, 0x4d, 0x42, 0x49, 0x4f, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x43, 0x61, 0x6d, 0x62,
		0x69, 0x6f, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x4f, 0x52, 0x4f, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x4f,
		0x72, 0x6f, 0x46, 0x55, 0x45, 0x47, 0x4f, 0x20, 0x4d, 0x41, 0x58, 0x46, 0x75, 0x65, 0x67, 0x6f,
		0x20, 0x4d, 0x61, 0x78, 0x43, 0x68, 0x69, 0x6e, 0x61, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x4d, 0x36, 0x35, 0x31, 0x43, 0x59, 0x43, 0x4d, 0x43, 0x43, 0x2d, 0x4d, 0x38, 0x36, 0x30, 0x4e,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x68, 0x69, 0x6e, 0x61, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x63,
		0x6f, 0x6d, 0x54, 0x59, 0x48, 0x36, 0x31, 0x31, 0x4d, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67,
		0x20, 0x31, 0x30, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x54, 0x59, 0x48, 0x36, 0x31, 0x32, 0x4d,
		0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x54, 0x59, 0x48,
		0x32, 0x31, 0x31, 0x55, 0x54, 0x69, 0x61, 0x6e, 0x79, 0x69, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x54, 0x59, 0x48, 0x32, 0x30, 0x31, 0x48, 0x54, 0x69, 0x61, 0x6e,
		0x79, 0x69, 0x20, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x75, 0x77, 0x69, 0x48, 0x69, 0x38, 0x24, 0x31,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x24, 0x31, 0x20, 0x24,
		0x32, 0x48, 0x69, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x69, 0x42, 0x6f, 0x6f,
		0x6b, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x58, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x48, 0x69, 0x24, 0x31, 0x20, 0x41, 0x69, 0x72, 0x48, 0x69, 0x38, 0x20,
		0x53, 0x45, 0x48, 0x69, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x31, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x56, 0x69, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x31, 0x30, 0x53,
		0x75, 0x72, 0x50, 0x61, 0x64, 0x48, 0x69, 0x42, 0x6f, 0x78, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x43,
		0x6c, 0x61, 0x72, 0x65, 0x73, 0x74, 0x61, 0x41, 0x69, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x24, 0x31, 0x43, 0x6c, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x50, 0x48,
		0x4f, 0x4e, 0x45, 0x36, 0x32, 0x30, 0x43, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x6e, 0x69,
		0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x28, 0x24, 0x31, 0x29, 0x4d, 0x46, 0x43, 0x5f,
		0x32, 0x30, 0x31, 0x38, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x38, 0x29, 0x4d, 0x46, 0x43, 0x5f, 0x38, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x38,
		0x43, 0x4c, 0x45, 0x4d, 0x50, 0x41, 0x44, 0x5f, 0x37, 0x5f, 0x53, 0x43, 0x6c, 0x65, 0x6d, 0x70,
		0x61, 0x64, 0x20, 0x37, 0x53, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x43,
		0x6c, 0x65, 0x6d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x43, 0x6c, 0x6f, 0x75, 0x64,
		0x53, 0x74, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x33, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x43, 0x33,
		0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x43, 0x35, 0x5f, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x43, 0x35, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x43, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x6e, 0x65, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20,
		0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x68, 0x72, 0x69,
		0x6c, 0x6c, 0x20, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x24, 0x31, 0x54, 0x68, 0x72, 0x69, 0x6c,
		0x6c, 0x20, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x53, 0x6e,
		0x61, 0x70, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x31, 0x36,
		0x47, 0x42, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45,
		0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x45,
		0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x63, 0x69, 0x74,
		0x65, 0x43, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x43, 0x4e, 0x42, 0x41, 0x20, 0x45, 0x64,
		0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x70, 0x61,
		0x64, 0x2b, 0x56, 0x54, 0x24, 0x31, 0x2b, 0x56, 0x54, 0x51, 0x24, 0x31, 0x43, 0x6c, 0x6f, 0x75,
		0x74, 0x48, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x2e, 0x31, 0x58, 0x34, 0x31, 0x37, 0x20, 0x41, 0x6d,
		0x61, 0x7a, 0x65, 0x58, 0x34, 0x31, 0x38, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x58, 0x34, 0x32, 0x31,
		0x20, 0x4e, 0x6f, 0x76, 0x61, 0x58, 0x34, 0x32, 0x32, 0x20, 0x45, 0x78, 0x6f, 0x74, 0x69, 0x63,
		0x58, 0x34, 0x32, 0x35, 0x20, 0x53, 0x68, 0x61, 0x76, 0x69, 0x74, 0x58, 0x34, 0x32, 0x38, 0x20,
		0x41, 0x73, 0x74, 0x75, 0x74, 0x65, 0x43, 0x6e, 0x4d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61,
		0x64, 0x20, 0x24, 0x31, 0x43, 0x6f, 0x62, 0x61, 0x6c, 0x74, 0x53, 0x4d, 0x24, 0x31, 0x54, 0x24,
		0x31, 0x20, 0x33, 0x47, 0x54, 0x24, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x43, 0x6f, 0x62, 0x79,
		0x20, 0x4b, 0x79, 0x72, 0x6f, 0x73, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x50, 0x72, 0x69, 0x64,
		0x65, 0x20, 0x31, 0x41, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x35, 0x43, 0x50, 0x72, 0x69, 0x64,
		0x65, 0x20, 0x35, 0x58, 0x43, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x64, 0x65, 0x20, 0x54, 0x65, 0x73,
		0x6c, 0x61, 0x45, 0x76, 0x6f, 0x20, 0x35, 0x2e, 0x30, 0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4f, 0x43, 0x54, 0x41, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x2e, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x2e, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x54, 0x65, 0x73, 0x6c, 0x61,
		0x5f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x37, 0x38, 0x35, 0x37, 0x2e, 0x38, 0x35, 0x22,
		0x54, 0x54, 0x48, 0x37, 0x48, 0x37, 0x54, 0x54, 0x4c, 0x37, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64,
		0x4c, 0x37, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x5f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x4c,
		0x37, 0x5f, 0x33, 0x47, 0x4c, 0x37, 0x20, 0x33, 0x47, 0x54, 0x54, 0x4c, 0x37, 0x31, 0x33, 0x47,
		0x4c, 0x37, 0x2e, 0x31, 0x20, 0x33, 0x47, 0x54, 0x54, 0x4c, 0x38, 0x20, 0x42, 0x75, 0x69, 0x6c,
		0x64, 0x4c, 0x38, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x54, 0x5f,
		0x4d, 0x37, 0x4d, 0x37, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x5f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x5f, 0x4d, 0x38, 0x4d, 0x38, 0x43, 0x6f, 0x6d, 0x69, 0x6f, 0x47, 0x54, 0x31, 0x30, 0x30, 0x43,
		0x54, 0x37, 0x30, 0x31, 0x57, 0x43, 0x54, 0x37, 0x30, 0x31, 0x47, 0x20, 0x50, 0x4c, 0x55, 0x53,
		0x43, 0x54, 0x37, 0x30, 0x31, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61,
		0x6c, 0x43, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x64, 0x65, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x6e,
		0x20, 0x24, 0x31, 0x43, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x31, 0x30, 0x46, 0x6c, 0x79,
		0x66, 0x69, 0x78, 0x20, 0x36, 0x43, 0x2d, 0x37, 0x32, 0x31, 0x46, 0x6c, 0x79, 0x66, 0x69, 0x78,
		0x20, 0x51, 0x50, 0x6c, 0x75, 0x73, 0x2d, 0x24, 0x31, 0x20, 0x24, 0x32, 0x43, 0x6f, 0x6e, 0x64,
		0x6f, 0x72, 0x43, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x43, 0x38, 0x43, 0x34, 0x2b, 0x20, 0x4e,
		0x6f, 0x69, 0x72, 0x43, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20,
		0x50, 0x34, 0x43, 0x32, 0x43, 0x35, 0x43, 0x38, 0x53, 0x43, 0x37, 0x41, 0x6c, 0x6c, 0x75, 0x72,
		0x65, 0x20, 0x41, 0x39, 0x43, 0x36, 0x2b, 0x43, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x6c,
		0x75, 0x72, 0x65, 0x20, 0x41, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x72, 0x69, 0x66, 0x66,
		0x65, 0x20, 0x47, 0x34, 0x50, 0x48, 0x51, 0x35, 0x31, 0x39, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65,
		0x20, 0x47, 0x34, 0x53, 0x50, 0x48, 0x51, 0x35, 0x32, 0x30, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65,
		0x20, 0x47, 0x35, 0x50, 0x48, 0x51, 0x35, 0x32, 0x35, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20,
		0x47, 0x36, 0x50, 0x48, 0x51, 0x35, 0x32, 0x36, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47,
		0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x37, 0x50, 0x6c, 0x75,
		0x6d, 0x65, 0x20, 0x50, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50,
		0x35, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x36, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20,
		0x47, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x54, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x54, 0x24, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x54, 0x24, 0x31, 0x50, 0x37, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x34, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54,
		0x45, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x38, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20,
		0x41, 0x35, 0x35, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x31, 0x30, 0x30, 0x41, 0x6c,
		0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x35, 0x35, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x41, 0x6c, 0x6c,
		0x75, 0x72, 0x65, 0x20, 0x41, 0x31, 0x30, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x6c, 0x75,
		0x6d, 0x65, 0x20, 0x50, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65,
		0x20, 0x41, 0x38, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x38, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x35, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x48, 0x31, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x33, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x24, 0x31, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20,
		0x50, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x4e, 0x2d, 0x24, 0x31, 0x43, 0x6f, 0x6e, 0x6e,
		0x65, 0x63, 0x74, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x20, 0x36, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x78, 0x53, 0x45, 0x4e, 0x5f, 0x31, 0x30, 0x35,
		0x35, 0x5f, 0x41, 0x52, 0x4d, 0x53, 0x65, 0x72, 0x65, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x31, 0x30,
		0x35, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x43, 0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73, 0x74,
		0x53, 0x24, 0x31, 0x43, 0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x46, 0x32, 0x46, 0x32,
		0x43, 0x6f, 0x6e, 0x74, 0x69, 0x78, 0x6f, 0x43, 0x58, 0x2d, 0x31, 0x30, 0x34, 0x35, 0x20, 0x33,
		0x47, 0x47, 0x58, 0x2d, 0x31, 0x30, 0x33, 0x35, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x47, 0x54, 0x31, 0x31, 0x36, 0x30, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x42, 0x31, 0x30, 0x35, 0x20, 0x33, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42, 0x31, 0x30,
		0x38, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54, 0x31, 0x30, 0x37, 0x20,
		0x33, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54, 0x31, 0x30, 0x39, 0x20, 0x34, 0x47,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54, 0x37, 0x31, 0x35, 0x20, 0x33, 0x47, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x4b, 0x54, 0x39, 0x39, 0x35, 0x20, 0x33, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x4b, 0x54, 0x31, 0x31, 0x30, 0x30, 0x47, 0x54, 0x43, 0x6f, 0x6f, 0x6c, 0x70, 0x61, 0x64,
		0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x43, 0x6f, 0x6f, 0x6c, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x43, 0x37, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x20, 0x37, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x50, 0x4c, 0x55, 0x53, 0x20, 0x43, 0x33, 0x37, 0x30,
		0x31, 0x41, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x50, 0x33, 0x36,
		0x36, 0x37, 0x41, 0x54, 0x54, 0x61, 0x73, 0x6b, 0x65, 0x72, 0x38, 0x31, 0x39, 0x30, 0x51, 0x4e,
		0x35, 0x43, 0x42, 0x65, 0x6c, 0x6c, 0x61, 0x7a, 0x61, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4c,
		0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x53, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x53, 0x20,
		0x53, 0x52, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x42, 0x72, 0x69, 0x73, 0x61, 0x53, 0x75,
		0x76, 0x61, 0x4e, 0x32, 0x4d, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x31, 0x43, 0x6f, 0x6f, 0x6c, 0x20,
		0x53, 0x31, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x35, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x39, 0x43, 0x6f,
		0x6f, 0x6c, 0x20, 0x39, 0x53, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x32, 0x30, 0x41, 0x72, 0x69, 0x73,
		0x65, 0x45, 0x35, 0x30, 0x31, 0x4d, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x45, 0x35, 0x30, 0x32, 0x4d,
		0x6f, 0x64, 0x65, 0x6e, 0x61, 0x20, 0x32, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x74,
		0x65, 0x5f, 0x4d, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x54, 0x61, 0x62, 0x4d, 0x79, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x54, 0x61, 0x62, 0x43, 0x6f, 0x76, 0x69, 0x61, 0x43, 0x72, 0x65,
		0x73, 0x63, 0x65, 0x6e, 0x74, 0x57, 0x49, 0x4e, 0x47, 0x20, 0x35, 0x57, 0x69, 0x6e, 0x67, 0x20,
		0x35, 0x57, 0x49, 0x4e, 0x47, 0x39, 0x57, 0x69, 0x6e, 0x67, 0x20, 0x39, 0x56, 0x65, 0x6e, 0x75,
		0x73, 0x20, 0x24, 0x31, 0x43, 0x72, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x43, 0x32, 0x31, 0x31,
		0x30, 0x30, 0x31, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x35, 0x47, 0x55, 0x33, 0x30, 0x34, 0x41,
		0x43, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x33, 0x32, 0x35, 0x41, 0x43, 0x49, 0x63, 0x6f, 0x6e, 0x20,
		0x32, 0x45, 0x43, 0x32, 0x31, 0x31, 0x30, 0x30, 0x32, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x33, 0x56,
		0x33, 0x35, 0x30, 0x43, 0x49, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x45, 0x43, 0x32,
		0x31, 0x31, 0x30, 0x30, 0x34, 0x49, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x65, 0x20, 0x35, 0x47,
		0x55, 0x37, 0x30, 0x35, 0x41, 0x43, 0x4f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x43, 0x31,
		0x30, 0x30, 0x32, 0x4f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x45, 0x43, 0x32, 0x31,
		0x31, 0x30, 0x30, 0x33, 0x53, 0x70, 0x6c, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x69, 0x75,
		0x73, 0x20, 0x4d, 0x65, 0x61, 0x43, 0x72, 0x6f, 0x6e, 0x79, 0x37, 0x30, 0x32, 0x31, 0x43, 0x72,
		0x6f, 0x73, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x58, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x58, 0x24, 0x31, 0x43, 0x6f,
		0x72, 0x65, 0x2d, 0x24, 0x31, 0x4f, 0x44, 0x59, 0x53, 0x53, 0x45, 0x59, 0x5f, 0x50, 0x6c, 0x75,
		0x73, 0x4f, 0x44, 0x59, 0x53, 0x53, 0x45, 0x59, 0x2b, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79,
		0x20, 0x53, 0x31, 0x4f, 0x44, 0x59, 0x53, 0x53, 0x45, 0x59, 0x20, 0x53, 0x31, 0x54, 0x72, 0x65,
		0x6b, 0x6b, 0x65, 0x72, 0x2d, 0x24, 0x31, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x65, 0x6b,
		0x6b, 0x65, 0x72, 0x2d, 0x24, 0x31, 0x43, 0x6f, 0x72, 0x65, 0x2d, 0x54, 0x34, 0x43, 0x72, 0x6f,
		0x77, 0x6e, 0x43, 0x75, 0x62, 0x65, 0x55, 0x32, 0x37, 0x47, 0x54, 0x54, 0x61, 0x6c, 0x6b, 0x20,
		0x38, 0x54, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x55, 0x35, 0x35, 0x47,
		0x54, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x37, 0x39, 0x54, 0x31, 0x30, 0x20, 0x50, 0x4c, 0x55, 0x53,
		0x54, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x36, 0x35, 0x47, 0x54, 0x54, 0x61, 0x6c,
		0x6b, 0x20, 0x39, 0x58, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x38, 0x20, 0x41, 0x69, 0x72, 0x69,
		0x57, 0x6f, 0x72, 0x6b, 0x20, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x69,
		0x57, 0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
		0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x57, 0x6f, 0x72,
		0x6b, 0x20, 0x31, 0x30, 0x20, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x68, 0x69, 0x70, 0x54, 0x39, 0x37,
		0x30, 0x20, 0x34, 0x47, 0x43, 0x79, 0x72, 0x75, 0x73, 0x44, 0x45, 0x58, 0x50, 0x49, 0x78, 0x69,
		0x6f, 0x6e, 0x20, 0x24, 0x31, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x45, 0x53, 0x32, 0x35, 0x30,
		0x20, 0x52, 0x61, 0x67, 0x65, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x4c, 0x20, 0x34, 0x2e,
		0x37, 0x22, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x31, 0x35, 0x30, 0x20, 0x53, 0x74, 0x6f,
		0x72, 0x6d, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x34, 0x34, 0x35, 0x20, 0x4f, 0x6e, 0x79,
		0x78, 0x20, 0x32, 0x34, 0x2e, 0x35, 0x22, 0x20, 0x41, 0x4c, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x30,
		0x22, 0x20, 0x41, 0x4c, 0x33, 0x35, 0x30, 0x35, 0x2e, 0x34, 0x35, 0x22, 0x20, 0x41, 0x53, 0x31,
		0x35, 0x35, 0x35, 0x2e, 0x38, 0x35, 0x22, 0x20, 0x41, 0x53, 0x32, 0x36, 0x30, 0x36, 0x2e, 0x32,
		0x32, 0x22, 0x20, 0x41, 0x53, 0x33, 0x36, 0x30, 0x55, 0x72, 0x73, 0x75, 0x73, 0x20, 0x24, 0x31,
		0x24, 0x31, 0x20, 0x28, 0x24, 0x32, 0x29, 0x53, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x4c, 0x61, 0x72,
		0x75, 0x73, 0x5f, 0x54, 0x56, 0x31, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x44, 0x46, 0x4a, 0x41, 0x47,
		0x55, 0x41, 0x52, 0x2d, 0x30, 0x31, 0x4a, 0x61, 0x67, 0x75, 0x61, 0x72, 0x20, 0x30, 0x31, 0x53,
		0x61, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x24, 0x31, 0x54, 0x49, 0x47, 0x45, 0x52, 0x2d, 0x30, 0x31,
		0x54, 0x69, 0x67, 0x65, 0x72, 0x20, 0x30, 0x31, 0x50, 0x55, 0x4d, 0x41, 0x2d, 0x30, 0x31, 0x50,
		0x75, 0x6d, 0x61, 0x20, 0x30, 0x31, 0x44, 0x49, 0x47, 0x49, 0x46, 0x4f, 0x52, 0x53, 0x44, 0x49,
		0x4e, 0x47, 0x20, 0x44, 0x49, 0x4e, 0x47, 0x44, 0x49, 0x53, 0x48, 0x57, 0x54, 0x43, 0x45, 0x4c,
		0x45, 0x52, 0x4f, 0x35, 0x47, 0x43, 0x65, 0x6c, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x44, 0x49,
		0x58, 0x4f, 0x4e, 0x48, 0x4b, 0x37, 0x2d, 0x33, 0x35, 0x30, 0x32, 0x53, 0x6f, 0x6c, 0x69, 0x73,
		0x44, 0x4e, 0x36, 0x30, 0x31, 0x35, 0x41, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x58, 0x4b, 0x31, 0x20,
		0x33, 0x47, 0x44, 0x4e, 0x53, 0x53, 0x34, 0x30, 0x30, 0x33, 0x41, 0x69, 0x72, 0x54, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x44, 0x4f, 0x52, 0x4c, 0x41, 0x4e, 0x44, 0x44, 0x55, 0x4e, 0x4e, 0x53, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x65, 0x77, 0x6f, 0x6f, 0x41, 0x72, 0x63, 0x68,
		0x69, 0x76, 0x65, 0x20, 0x37, 0x50, 0x44, 0x61, 0x6e, 0x65, 0x77, 0x4b, 0x6f, 0x6e, 0x6e, 0x65,
		0x63, 0x74, 0x20, 0x24, 0x31, 0x44, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x24, 0x31, 0x47, 0x45,
		0x4f, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5f, 0x41, 0x35, 0x47, 0x65, 0x6f, 0x64, 0x72, 0x6f, 0x69,
		0x64, 0x20, 0x41, 0x35, 0x44, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x24, 0x31, 0x44, 0x61, 0x74,
		0x61, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x44, 0x61,
		0x74, 0x61, 0x6d, 0x69, 0x6e, 0x69, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x67, 0x44, 0x41, 0x54, 0x41,
		0x4e, 0x47, 0x44, 0x61, 0x74, 0x61, 0x77, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74,
		0x20, 0x53, 0x75, 0x72, 0x66, 0x65, 0x72, 0x20, 0x33, 0x47, 0x35, 0x44, 0x57, 0x2d, 0x55, 0x42,
		0x54, 0x37, 0x57, 0x55, 0x62, 0x69, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x37, 0x57, 0x44, 0x61,
		0x74, 0x73, 0x75, 0x6e, 0x44, 0x41, 0x54, 0x53, 0x55, 0x4e, 0x44, 0x41, 0x54, 0x53, 0x55, 0x4e,
		0x5f, 0x44, 0x35, 0x35, 0x30, 0x30, 0x44, 0x35, 0x35, 0x30, 0x30, 0x44, 0x61, 0x74, 0x73, 0x75,
		0x6e, 0x5f, 0x44, 0x35, 0x30, 0x30, 0x31, 0x44, 0x35, 0x30, 0x30, 0x31, 0x44, 0x61, 0x7a, 0x65,
		0x6e, 0x64, 0x61, 0x7a, 0x65, 0x6e, 0x36, 0x41, 0x44, 0x62, 0x74, 0x65, 0x6c, 0x44, 0x65, 0x57,
		0x61, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x6c, 0x58, 0x43, 0x44, 0x33, 0x35, 0x56, 0x65, 0x6e, 0x75,
		0x65, 0x20, 0x24, 0x31, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x20, 0x50,
		0x72, 0x6f, 0x44, 0x65, 0x6e, 0x76, 0x65, 0x72, 0x54, 0x41, 0x51, 0x2d, 0x24, 0x31, 0x53, 0x44,
		0x51, 0x2d, 0x24, 0x31, 0x44, 0x65, 0x73, 0x61, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x44,
		0x69, 0x63, 0x61, 0x6d, 0x44, 0x69, 0x67, 0x69, 0x44, 0x69, 0x67, 0x69, 0x63, 0x65, 0x6c, 0x44,
		0x4c, 0x33, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x44, 0x4c, 0x33, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x4c, 0x33, 0x44, 0x4c, 0x37, 0x35, 0x35, 0x44, 0x4c, 0x38,
		0x31, 0x30, 0x44, 0x69, 0x67, 0x69, 0x68, 0x6f, 0x6d, 0x65, 0x44, 0x69, 0x67, 0x69, 0x6c, 0x61,
		0x6e, 0x64, 0x44, 0x4c, 0x31, 0x30, 0x30, 0x38, 0x4d, 0x44, 0x4c, 0x24, 0x31, 0x44, 0x69, 0x67,
		0x6d, 0x61, 0x48, 0x49, 0x54, 0x20, 0x33, 0x47, 0x69, 0x44, 0x78, 0x35, 0x48, 0x54, 0x35, 0x30,
		0x33, 0x35, 0x50, 0x47, 0x48, 0x49, 0x54, 0x20, 0x51, 0x35, 0x30, 0x30, 0x20, 0x33, 0x47, 0x48,
		0x54, 0x34, 0x30, 0x33, 0x39, 0x50, 0x47, 0x48, 0x49, 0x54, 0x20, 0x51, 0x34, 0x30, 0x31, 0x20,
		0x33, 0x47, 0x50, 0x53, 0x36, 0x30, 0x34, 0x4d, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x36, 0x2e, 0x30,
		0x4c, 0x54, 0x34, 0x30, 0x34, 0x39, 0x50, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x41, 0x74, 0x6f,
		0x6d, 0x20, 0x33, 0x47, 0x4c, 0x54, 0x35, 0x30, 0x34, 0x38, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78,
		0x20, 0x4a, 0x6f, 0x79, 0x20, 0x33, 0x47, 0x4c, 0x54, 0x35, 0x30, 0x35, 0x32, 0x4d, 0x4c, 0x4c,
		0x69, 0x6e, 0x78, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x34, 0x47, 0x4c, 0x54, 0x34, 0x30, 0x34,
		0x37, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x41, 0x6c, 0x66, 0x61, 0x20, 0x33, 0x47, 0x4c,
		0x53, 0x34, 0x30, 0x35, 0x30, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x58, 0x31, 0x20, 0x33,
		0x47, 0x4c, 0x53, 0x34, 0x30, 0x35, 0x31, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x58, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x4c, 0x54, 0x34, 0x30, 0x35, 0x34, 0x4d, 0x47, 0x4c,
		0x69, 0x6e, 0x78, 0x20, 0x41, 0x72, 0x67, 0x6f, 0x20, 0x33, 0x47, 0x4c, 0x53, 0x35, 0x30, 0x34,
		0x31, 0x50, 0x4c, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x54, 0x72, 0x69, 0x78, 0x20, 0x34, 0x47, 0x4c,
		0x53, 0x35, 0x30, 0x34, 0x30, 0x50, 0x4c, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x52, 0x61, 0x67, 0x65,
		0x20, 0x34, 0x47, 0x4c, 0x53, 0x35, 0x30, 0x35, 0x33, 0x4d, 0x4c, 0x4c, 0x69, 0x6e, 0x78, 0x20,
		0x50, 0x61, 0x79, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47,
		0x50, 0x54, 0x34, 0x35, 0x32, 0x45, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x34, 0x2e, 0x35, 0x43, 0x49,
		0x54, 0x49, 0x20, 0x41, 0x54, 0x4c, 0x20, 0x34, 0x47, 0x20, 0x43, 0x53, 0x35, 0x30, 0x32, 0x39,
		0x4d, 0x4c, 0x43, 0x49, 0x54, 0x49, 0x20, 0x41, 0x54, 0x4c, 0x20, 0x34, 0x47, 0x54, 0x53, 0x37,
		0x38, 0x35, 0x34, 0x4d, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x38, 0x2e, 0x31, 0x22, 0x20, 0x33,
		0x47, 0x50, 0x53, 0x31, 0x30, 0x34, 0x33, 0x4d, 0x47, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x31,
		0x30, 0x2e, 0x33, 0x22, 0x20, 0x33, 0x47, 0x54, 0x53, 0x31, 0x30, 0x31, 0x32, 0x45, 0x20, 0x33,
		0x47, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x69,
		0x44, 0x78, 0x38, 0x4d, 0x56, 0x4d, 0x39, 0x30, 0x38, 0x48, 0x43, 0x5a, 0x69, 0x44, 0x78, 0x39,
		0x48, 0x49, 0x54, 0x20, 0x34, 0x47, 0x20, 0x48, 0x54, 0x37, 0x30, 0x37, 0x34, 0x4d, 0x4c, 0x48,
		0x49, 0x54, 0x20, 0x34, 0x47, 0x43, 0x49, 0x54, 0x49, 0x20, 0x24, 0x31, 0x69, 0x44, 0x78, 0x44,
		0x38, 0x20, 0x33, 0x47, 0x44, 0x2d, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x32, 0x20, 0x38, 0x4e, 0x53,
		0x36, 0x39, 0x30, 0x32, 0x51, 0x4c, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x61, 0x20, 0x37, 0x2e,
		0x32, 0x20, 0x34, 0x47, 0x4e, 0x53, 0x39, 0x37, 0x39, 0x37, 0x4d, 0x47, 0x50, 0x6c, 0x61, 0x74,
		0x69, 0x6e, 0x61, 0x20, 0x37, 0x2e, 0x32, 0x20, 0x33, 0x47, 0x54, 0x54, 0x31, 0x30, 0x30, 0x34,
		0x50, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x33,
		0x47, 0x54, 0x54, 0x31, 0x30, 0x30, 0x32, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20,
		0x44, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x37, 0x30, 0x32, 0x35,
		0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e, 0x35, 0x22, 0x20, 0x33, 0x47,
		0x54, 0x54, 0x37, 0x30, 0x32, 0x36, 0x4d, 0x57, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x37,
		0x2e, 0x36, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x37, 0x30, 0x32, 0x30, 0x4d, 0x47, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e, 0x33, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x37, 0x30,
		0x32, 0x34, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e, 0x34, 0x22, 0x20,
		0x33, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x56, 0x52, 0x20, 0x4c, 0x34,
		0x32, 0x44, 0x4d, 0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31, 0x44, 0x69, 0x74, 0x65, 0x63, 0x6d, 0x61,
		0x44, 0x69, 0x76, 0x61, 0x44, 0x69, 0x76, 0x69, 0x73, 0x61, 0x74, 0x58, 0x2d, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x44, 0x6f, 0x43, 0x6f, 0x4d, 0x6f, 0x44, 0x6f, 0x66, 0x66, 0x6c, 0x65, 0x72, 0x44,
		0x6f, 0x6c, 0x61, 0x6d, 0x65, 0x65, 0x44, 0x6f, 0x6f, 0x67, 0x65, 0x65, 0x56, 0x61, 0x6c, 0x65,
		0x6e, 0x63, 0x69, 0x61, 0x32, 0x20, 0x59, 0x31, 0x30, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56,
		0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x32, 0x5f, 0x59, 0x31, 0x30, 0x30, 0x70, 0x72, 0x6f,
		0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x32, 0x20, 0x59, 0x31, 0x30, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x32, 0x20, 0x59, 0x31, 0x30, 0x30,
		0x4c, 0x65, 0x6f, 0x20, 0x24, 0x31, 0x49, 0x72, 0x6f, 0x6e, 0x20, 0x42, 0x6f, 0x6e, 0x65, 0x20,
		0x24, 0x31, 0x58, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x42, 0x4c, 0x31, 0x32, 0x30, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x42, 0x4c, 0x31, 0x32, 0x30,
		0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x35, 0x35, 0x30, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x42, 0x4c, 0x31, 0x32, 0x30, 0x30, 0x30, 0x53, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x53,
		0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4b,
		0x49, 0x53, 0x53, 0x4d, 0x45, 0x2d, 0x44, 0x47, 0x35, 0x38, 0x30, 0x4b, 0x69, 0x73, 0x73, 0x6d,
		0x65, 0x20, 0x44, 0x47, 0x35, 0x38, 0x30, 0x48, 0x69, 0x74, 0x6d, 0x61, 0x6e, 0x5f, 0x44, 0x47,
		0x38, 0x35, 0x30, 0x48, 0x69, 0x74, 0x6d, 0x61, 0x6e, 0x20, 0x44, 0x47, 0x35, 0x38, 0x30, 0x58,
		0x39, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x78, 0x35, 0x5f, 0x64, 0x6f, 0x6f, 0x67, 0x65, 0x65, 0x58,
		0x35, 0x54, 0x35, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x44,
		0x6f, 0x6f, 0x67, 0x65, 0x65, 0x20, 0x58, 0x35, 0x4d, 0x50, 0x58, 0x35, 0x20, 0x4d, 0x61, 0x78,
		0x20, 0x50, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x6f, 0x74, 0x20, 0x24, 0x31, 0x49, 0x62, 0x69, 0x7a,
		0x61, 0x5f, 0x46, 0x32, 0x49, 0x62, 0x69, 0x7a, 0x61, 0x20, 0x46, 0x32, 0x59, 0x36, 0x5f, 0x50,
		0x69, 0x61, 0x6e, 0x6f, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x59, 0x36, 0x20, 0x50, 0x69, 0x61,
		0x6e, 0x6f, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x59, 0x36, 0x5f, 0x50, 0x69, 0x61, 0x6e, 0x6f,
		0x59, 0x36, 0x20, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x59, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x33,
		0x44, 0x59, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x59, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d,
		0x69, 0x78, 0x20, 0x32, 0x44, 0x6f, 0x6f, 0x70, 0x72, 0x6f, 0x50, 0x33, 0x44, 0x6f, 0x6f, 0x76,
		0x44, 0x6f, 0x70, 0x6f, 0x64, 0x44, 0x6f, 0x70, 0x70, 0x69, 0x6f, 0x44, 0x6f, 0x70, 0x70, 0x69,
		0x6f, 0x20, 0x44, 0x50, 0x33, 0x35, 0x35, 0x44, 0x6f, 0x72, 0x6f, 0x38, 0x30, 0x35, 0x30, 0x38,
		0x30, 0x38, 0x30, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x44,
		0x72, 0x65, 0x61, 0x6d, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x20, 0x35, 0x44, 0x72,
		0x6f, 0x78, 0x69, 0x6f, 0x44, 0x75, 0x6e, 0x65, 0x20, 0x48, 0x44, 0x53, 0x6f, 0x6c, 0x6f, 0x20,
		0x34, 0x6b, 0x45, 0x2d, 0x42, 0x6f, 0x64, 0x61, 0x52, 0x65, 0x76, 0x6f, 0x20, 0x52, 0x37, 0x37,
		0x20, 0x47, 0x50, 0x53, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x20, 0x24, 0x31, 0x45, 0x2d,
		0x43, 0x65, 0x72, 0x6f, 0x73, 0x52, 0x65, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
		0x65, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x48, 0x44, 0x45, 0x2d, 0x74, 0x65,
		0x6c, 0x45, 0x2d, 0x74, 0x65, 0x6c, 0x5f, 0x69, 0x32, 0x35, 0x30, 0x69, 0x32, 0x35, 0x30, 0x45,
		0x42, 0x45, 0x53, 0x54, 0x45, 0x43, 0x53, 0x54, 0x41, 0x31, 0x30, 0x43, 0x41, 0x33, 0x54, 0x4d,
		0x31, 0x30, 0x35, 0x41, 0x54, 0x4d, 0x31, 0x30, 0x35, 0x45, 0x45, 0x52, 0x6f, 0x63, 0x6b, 0x45,
		0x47, 0x4c, 0x45, 0x47, 0x4c, 0x31, 0x31, 0x51, 0x46, 0x36, 0x31, 0x31, 0x51, 0x46, 0x36, 0x45,
		0x4b, 0x4f, 0x45, 0x4b, 0x4f, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56,
		0x20, 0x32, 0x4b, 0x32, 0x4b, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56,
		0x45, 0x4b, 0x54, 0x45, 0x4b, 0x2d, 0x24, 0x31, 0x45, 0x4c, 0x41, 0x52, 0x49, 0x4b, 0x69, 0x64,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x47, 0x45, 0x56, 0x50, 0x41, 0x44, 0x45, 0x56, 0x42,
		0x6f, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x57, 0x49, 0x53, 0x4f, 0x63, 0x74, 0x61, 0x20,
		0x54, 0x37, 0x32, 0x30, 0x51, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x58, 0x4f, 0x45, 0x61,
		0x67, 0x6c, 0x65, 0x45, 0x61, 0x73, 0x79, 0x70, 0x69, 0x78, 0x45, 0x61, 0x73, 0x79, 0x50, 0x61,
		0x64, 0x20, 0x24, 0x31, 0x45, 0x63, 0x68, 0x6f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73,
		0x45, 0x43, 0x48, 0x4f, 0x5f, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x54,
		0x45, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x4f, 0x4e, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x54, 0x45,
		0x4c, 0x4c, 0x41, 0x52, 0x20, 0x33, 0x47, 0x45, 0x43, 0x48, 0x4f, 0x5f, 0x53, 0x4d, 0x41, 0x52,
		0x54, 0x5f, 0x34, 0x47, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x34, 0x47, 0x45, 0x69, 0x6e, 0x73,
		0x74, 0x65, 0x69, 0x6e, 0x45, 0x6b, 0x73, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
		0x53, 0x35, 0x4c, 0x53, 0x58, 0x34, 0x55, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x34, 0x55, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x65, 0x75, 0x6d, 0x45, 0x6c,
		0x65, 0x6b, 0x74, 0x61, 0x24, 0x31, 0x22, 0x20, 0x46, 0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x35, 0x35, 0x22, 0x20, 0x55, 0x48, 0x44, 0x20,
		0x43, 0x75, 0x72, 0x76, 0x65, 0x64, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x54, 0x56, 0x24, 0x31, 0x22, 0x20, 0x55, 0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x24, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20, 0x4c, 0x45,
		0x44, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
		0x74, 0x41, 0x46, 0x54, 0x52, 0x53, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x34, 0x4b,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x45, 0x6c, 0x65, 0x6e, 0x62, 0x65, 0x72, 0x67, 0x45,
		0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x56, 0x6f, 0x77, 0x6e,
		0x65, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x6f, 0x77, 0x6e, 0x65, 0x79, 0x50, 0x36, 0x30,
		0x30, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x30, 0x32, 0x50,
		0x36, 0x30, 0x30, 0x30, 0x20, 0x30, 0x31, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x6f, 0x6c, 0x64, 0x69, 0x65, 0x72, 0x41, 0x36, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x58,
		0x20, 0x50, 0x72, 0x6f, 0x55, 0x33, 0x48, 0x50, 0x58, 0x45, 0x6c, 0x74, 0x65, 0x78, 0x4e, 0x56,
		0x2d, 0x24, 0x31, 0x2d, 0x57, 0x61, 0x63, 0x4e, 0x56, 0x2d, 0x35, 0x30, 0x31, 0x4e, 0x56, 0x2d,
		0x35, 0x31, 0x30, 0x2d, 0x57, 0x42, 0x45, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x69, 0x7a, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x24,
		0x31, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x6e,
		0x65, 0x72, 0x67, 0x79, 0x20, 0x34, 0x30, 0x30, 0x53, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x34,
		0x30, 0x30, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x34, 0x30, 0x30, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x20, 0x53, 0x24, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x24, 0x31, 0x48,
		0x61, 0x72, 0x64, 0x20, 0x43, 0x61, 0x73, 0x65, 0x20, 0x24, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67,
		0x79, 0x20, 0x53, 0x69, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x45, 0x6e, 0x67, 0x65, 0x6c, 0x45,
		0x6e, 0x6f, 0x74, 0x45, 0x70, 0x69, 0x6b, 0x20, 0x4f, 0x6e, 0x65, 0x4b, 0x35, 0x30, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4c, 0x65, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x35, 0x30, 0x31,
		0x4c, 0x65, 0x6f, 0x4b, 0x35, 0x30, 0x30, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x4b, 0x35, 0x30, 0x32, 0x4b, 0x35, 0x30, 0x33, 0x54, 0x4c, 0x65, 0x6f, 0x20, 0x54, 0x75,
		0x72, 0x62, 0x6f, 0x4b, 0x35, 0x30, 0x33, 0x53, 0x4c, 0x65, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x4b,
		0x35, 0x30, 0x33, 0x48, 0x44, 0x4c, 0x65, 0x6f, 0x20, 0x48, 0x44, 0x4b, 0x35, 0x30, 0x33, 0x4c,
		0x65, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x35, 0x30, 0x34, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20,
		0x33, 0x47, 0x58, 0x35, 0x30, 0x37, 0x54, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x49, 0x49, 0x4b,
		0x35, 0x31, 0x30, 0x42, 0x6f, 0x6c, 0x74, 0x4b, 0x35, 0x31, 0x31, 0x42, 0x6f, 0x6c, 0x74, 0x20,
		0x50, 0x72, 0x6f, 0x4b, 0x35, 0x33, 0x34, 0x48, 0x61, 0x64, 0x61, 0x4b, 0x35, 0x33, 0x35, 0x48,
		0x61, 0x64, 0x61, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b, 0x35, 0x34, 0x35, 0x52, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x4b, 0x35, 0x33, 0x36, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x4b, 0x35, 0x34, 0x30,
		0x45, 0x78, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x75, 0x72, 0x4b, 0x35, 0x37, 0x33, 0x50, 0x61, 0x6e,
		0x74, 0x68, 0x65, 0x72, 0x4b, 0x36, 0x30, 0x30, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x4b,
		0x36, 0x30, 0x31, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x20, 0x4f, 0x6e, 0x65, 0x4b, 0x34,
		0x30, 0x36, 0x50, 0x65, 0x62, 0x62, 0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x34, 0x30,
		0x35, 0x50, 0x65, 0x62, 0x62, 0x6c, 0x65, 0x20, 0x49, 0x49, 0x54, 0x37, 0x30, 0x30, 0x50, 0x61,
		0x6c, 0x65, 0x74, 0x74, 0x65, 0x45, 0x70, 0x73, 0x6f, 0x6e, 0x48, 0x41, 0x31, 0x34, 0x41, 0x20,
		0x4c, 0x43, 0x44, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x72, 0x67,
		0x6f, 0x46, 0x35, 0x30, 0x31, 0x5f, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x46, 0x35, 0x30, 0x31, 0x20,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x42, 0x35, 0x30, 0x32, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41,
		0x35, 0x30, 0x33, 0x2d, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x41, 0x35, 0x30, 0x33, 0x20, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x61, 0x42, 0x35, 0x30, 0x36, 0x20, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x56,
		0x35, 0x35, 0x30, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x35, 0x30, 0x34, 0x20, 0x55,
		0x6e, 0x69, 0x74, 0x42, 0x35, 0x30, 0x35, 0x5f, 0x55, 0x6e, 0x69, 0x74, 0x5f, 0x34, 0x47, 0x42,
		0x35, 0x30, 0x35, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x20, 0x34, 0x47, 0x56, 0x35, 0x35, 0x31, 0x20,
		0x41, 0x75, 0x72, 0x61, 0x56, 0x35, 0x34, 0x30, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x56, 0x35,
		0x34, 0x30, 0x20, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x56, 0x35, 0x37, 0x30, 0x5f, 0x42, 0x49, 0x47,
		0x5f, 0x42, 0x45, 0x4e, 0x56, 0x35, 0x37, 0x30, 0x20, 0x42, 0x69, 0x67, 0x20, 0x42, 0x65, 0x6e,
		0x45, 0x72, 0x67, 0x6f, 0x20, 0x46, 0x35, 0x30, 0x32, 0x46, 0x35, 0x30, 0x32, 0x20, 0x50, 0x6c,
		0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x41, 0x35, 0x30, 0x30, 0x20, 0x42, 0x65, 0x73, 0x74, 0x41,
		0x35, 0x35, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x42, 0x34,
		0x30, 0x30, 0x41, 0x35, 0x30, 0x32, 0x20, 0x41, 0x75, 0x72, 0x75, 0x6d, 0x41, 0x35, 0x35, 0x31,
		0x20, 0x53, 0x6b, 0x79, 0x20, 0x34, 0x47, 0x41, 0x35, 0x35, 0x33, 0x20, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x41, 0x35, 0x35, 0x35, 0x20, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x41, 0x35,
		0x35, 0x36, 0x46, 0x35, 0x30, 0x30, 0x46, 0x35, 0x30, 0x31, 0x42, 0x35, 0x30, 0x30, 0x20, 0x46,
		0x69, 0x72, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x46, 0x35, 0x30, 0x30, 0x47, 0x6f,
		0x54, 0x61, 0x62, 0x20, 0x47, 0x42, 0x54, 0x39, 0x47, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x47, 0x74,
		0x69, 0x38, 0x47, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x47, 0x54, 0x69, 0x38, 0x54, 0x61, 0x62, 0x20,
		0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x61, 0x62, 0x20,
		0x48, 0x65, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x45, 0x52, 0x47, 0x4f, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x42, 0x6f, 0x78, 0x20, 0x53, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x78, 0x20,
		0x53, 0x58, 0x45, 0x72, 0x69, 0x63, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x33, 0x38, 0x30, 0x45, 0x72,
		0x69, 0x63, 0x79, 0x45, 0x72, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x74,
		0x69, 0x61, 0x6c, 0x50, 0x48, 0x2d, 0x31, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x65, 0x6c,
		0x62, 0x48, 0x45, 0x59, 0x6f, 0x75, 0x20, 0x24, 0x31, 0x57, 0x6f, 0x6f, 0x7a, 0x65, 0x20, 0x24,
		0x31, 0x45, 0x74, 0x6f, 0x6e, 0x45, 0x74, 0x75, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x75, 0x72, 0x6f,
		0x63, 0x61, 0x73, 0x65, 0x45, 0x55, 0x54, 0x42, 0x5f, 0x37, 0x35, 0x38, 0x47, 0x5f, 0x54, 0x41,
		0x42, 0x49, 0x5f, 0x41, 0x72, 0x67, 0x6f, 0x73, 0x5f, 0x4b, 0x49, 0x44, 0x53, 0x54, 0x41, 0x42,
		0x49, 0x20, 0x41, 0x72, 0x67, 0x6f, 0x73, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x37, 0x35, 0x38,
		0x47, 0x45, 0x75, 0x72, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x24, 0x31,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x34, 0x53, 0x45, 0x76, 0x65, 0x72, 0x63, 0x6f, 0x73, 0x73, 0x41,
		0x37, 0x35, 0x41, 0x20, 0x53, 0x74, 0x61, 0x72, 0x41, 0x37, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x55,
		0x35, 0x30, 0x41, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x35, 0x30, 0x20, 0x53, 0x74, 0x61, 0x72,
		0x45, 0x76, 0x65, 0x72, 0x74, 0x65, 0x6b, 0x45, 0x76, 0x65, 0x72, 0x70, 0x61, 0x64, 0x20, 0x24,
		0x31, 0x56, 0x35, 0x5f, 0x4e, 0x61, 0x6e, 0x6f, 0x56, 0x35, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x45,
		0x76, 0x65, 0x72, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45,
		0x76, 0x6f, 0x6c, 0x69, 0x6f, 0x4d, 0x34, 0x4d, 0x41, 0x47, 0x49, 0x43, 0x4d, 0x34, 0x20, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x45, 0x76, 0x6f, 0x6c, 0x69, 0x6f, 0x5f, 0x4d, 0x35, 0x50, 0x72, 0x6f,
		0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x6f, 0x45, 0x56, 0x4f,
		0x4c, 0x56, 0x45, 0x4f, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x20,
		0x42, 0x6f, 0x78, 0x20, 0x4d, 0x34, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x20, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20,
		0x24, 0x31, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x24,
		0x31, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x51, 0x24, 0x31,
		0x24, 0x32, 0x45, 0x76, 0x6f, 0x6f, 0x45, 0x56, 0x4d, 0x34, 0x47, 0x33, 0x45, 0x76, 0x72, 0x6f,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x70, 0x61, 0x64, 0x20, 0x33, 0x47, 0x20,
		0x47, 0x4f, 0x4f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x20, 0x47,
		0x6f, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x20, 0x32, 0x47,
		0x6f, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x52, 0x4f, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x50,
		0x41, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x58, 0x4c, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x58, 0x4c, 0x50, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x64, 0x20,
		0x33, 0x47, 0x54, 0x61, 0x62, 0x20, 0x58, 0x4c, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x33, 0x47, 0x20, 0x54, 0x61, 0x62, 0x20, 0x58, 0x4c, 0x33, 0x47, 0x20, 0x4e, 0x4f, 0x54,
		0x45, 0x20, 0x58, 0x4c, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x58, 0x4c, 0x45, 0x78, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x45,
		0x58, 0x20, 0x24, 0x31, 0x69, 0x45, 0x78, 0x6d, 0x61, 0x72, 0x74, 0x45, 0x78, 0x70, 0x6c, 0x61,
		0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x20, 0x37, 0x2e, 0x34, 0x20, 0x33, 0x47, 0x49,
		0x6d, 0x70, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x41, 0x63, 0x74,
		0x69, 0x76, 0x65, 0x44, 0x20, 0x38, 0x2e, 0x32, 0x20, 0x33, 0x47, 0x43, 0x69, 0x6e, 0x65, 0x6d,
		0x61, 0x54, 0x56, 0x20, 0x33, 0x47, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x6c, 0x6c,
		0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x49, 0x49, 0x49, 0x6e, 0x66, 0x6f, 0x72,
		0x6d, 0x65, 0x72, 0x20, 0x24, 0x31, 0x53, 0x75, 0x72, 0x66, 0x65, 0x72, 0x20, 0x24, 0x31, 0x73,
		0x51, 0x75, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x20, 0x24,
		0x31, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x20, 0x24, 0x31, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74,
		0x49, 0x6e, 0x64, 0x69, 0x67, 0x6f, 0x50, 0x75, 0x6c, 0x73, 0x61, 0x72, 0x54, 0x6f, 0x72, 0x6e,
		0x61, 0x64, 0x6f, 0x20, 0x33, 0x47, 0x4a, 0x6f, 0x79, 0x54, 0x56, 0x46, 0x69, 0x6e, 0x4c, 0x61,
		0x67, 0x6f, 0x6f, 0x6e, 0x52, 0x69, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x65, 0x61, 0x64,
		0x65, 0x72, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x52, 0x6f, 0x63, 0x6b, 0x20, 0x58, 0x39, 0x2b,
		0x52, 0x4f, 0x43, 0x4b, 0x5f, 0x58, 0x31, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x20, 0x58, 0x31, 0x31,
		0x45, 0x7a, 0x69, 0x6f, 0x45, 0x7a, 0x7a, 0x65, 0x45, 0x5a, 0x24, 0x31, 0x46, 0x31, 0x35, 0x30,
		0x42, 0x32, 0x30, 0x32, 0x31, 0x46, 0x32, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5a, 0x38,
		0x50, 0x4c, 0x55, 0x53, 0x5a, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x38, 0x50, 0x4f, 0x43,
		0x4b, 0x45, 0x54, 0x5a, 0x38, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x38, 0x30, 0x73,
		0x5f, 0x70, 0x6c, 0x75, 0x73, 0x46, 0x38, 0x30, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x38,
		0x30, 0x20, 0x50, 0x49, 0x41, 0x42, 0x45, 0x4c, 0x4c, 0x41, 0x46, 0x38, 0x30, 0x20, 0x50, 0x69,
		0x61, 0x62, 0x65, 0x6c, 0x6c, 0x61, 0x43, 0x38, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x43, 0x38,
		0x20, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x46, 0x45, 0x4f, 0x4e, 0x41, 0x4c, 0x46, 0x49, 0x53,
		0x45, 0x46, 0x69, 0x73, 0x65, 0x5f, 0x4d, 0x33, 0x32, 0x34, 0x33, 0x33, 0x20, 0x33, 0x47, 0x46,
		0x4c, 0x59, 0x43, 0x41, 0x54, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x55,
		0x6e, 0x69, 0x63, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x46, 0x4d, 0x54, 0x31, 0x36, 0x4d, 0x34, 0x48,
		0x49, 0x31, 0x30, 0x35, 0x30, 0x32, 0x34, 0x4e, 0x65, 0x74, 0x73, 0x75, 0x72, 0x66, 0x65, 0x72,
		0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x46, 0x4d, 0x54, 0x2d, 0x4e, 0x4d, 0x37, 0x30, 0x35, 0x38,
		0x2d, 0x30, 0x32, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x31, 0x37, 0x36, 0x48, 0x53, 0x31, 0x30, 0x35,
		0x30, 0x35, 0x33, 0x31, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x31, 0x37, 0x36, 0x48, 0x53, 0x31,
		0x30, 0x35, 0x30, 0x32, 0x33, 0x32, 0x42, 0x35, 0x32, 0x31, 0x37, 0x35, 0x57, 0x54, 0x31, 0x30,
		0x35, 0x30, 0x32, 0x33, 0x31, 0x31, 0x37, 0x35, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x32, 0x33,
		0x31, 0x54, 0x6f, 0x6d, 0x63, 0x61, 0x74, 0x31, 0x37, 0x35, 0x46, 0x54, 0x31, 0x30, 0x35, 0x30,
		0x32, 0x34, 0x31, 0x56, 0x69, 0x70, 0x65, 0x72, 0x46, 0x4e, 0x42, 0x53, 0x50, 0x35, 0x30, 0x34,
		0x35, 0x56, 0x43, 0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x41, 0x31, 0x43, 0x6f, 0x6e, 0x65,
		0x58, 0x69, 0x73, 0x20, 0x41, 0x32, 0x43, 0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x58, 0x31,
		0x43, 0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x58, 0x32, 0x46, 0x4e, 0x46, 0x69, 0x46, 0x69,
		0x76, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x24, 0x31, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20,
		0x24, 0x31, 0x69, 0x66, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x33, 0x69, 0x46, 0x69, 0x76,
		0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x69, 0x66, 0x69, 0x76, 0x65, 0x20, 0x41, 0x69,
		0x72, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x41, 0x69, 0x72, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x46,
		0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x46, 0x61, 0x52, 0x61, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x46,
		0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x54, 0x56, 0x50,
		0x6f, 0x72, 0x74, 0x61, 0x6c, 0x20, 0x54, 0x56, 0x46, 0x61, 0x69, 0x72, 0x70, 0x68, 0x6f, 0x6e,
		0x65, 0x46, 0x61, 0x6d, 0x6f, 0x63, 0x6f, 0x46, 0x61, 0x6e, 0x74, 0x65, 0x63, 0x4d, 0x33, 0x30,
		0x30, 0x48, 0x46, 0x61, 0x72, 0x45, 0x61, 0x73, 0x54, 0x6f, 0x6e, 0x65, 0x46, 0x65, 0x6e, 0x67,
		0x78, 0x69, 0x61, 0x6e, 0x67, 0x46, 0x65, 0x72, 0x6f, 0x46, 0x65, 0x72, 0x6f, 0x5f, 0x59, 0x31,
		0x59, 0x31, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x65, 0x20, 0x59, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x52, 0x6f, 0x79, 0x61, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x46, 0x45, 0x52, 0x4f, 0x20, 0x50, 0x41,
		0x43, 0x45, 0x50, 0x61, 0x63, 0x65, 0x46, 0x69, 0x47, 0x4f, 0x41, 0x54, 0x52, 0x49, 0x55, 0x4d,
		0x20, 0x49, 0x49, 0x20, 0x46, 0x35, 0x35, 0x4c, 0x32, 0x41, 0x74, 0x72, 0x69, 0x75, 0x6d, 0x20,
		0x49, 0x49, 0x54, 0x52, 0x49, 0x4f, 0x20, 0x46, 0x34, 0x30, 0x4c, 0x54, 0x54, 0x72, 0x69, 0x6f,
		0x20, 0x46, 0x34, 0x30, 0x4c, 0x54, 0x45, 0x50, 0x49, 0x43, 0x20, 0x46, 0x35, 0x30, 0x47, 0x45,
		0x70, 0x69, 0x63, 0x20, 0x46, 0x35, 0x30, 0x47, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x20, 0x4d, 0x35,
		0x30, 0x47, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4d, 0x34, 0x30, 0x35, 0x42, 0x5f, 0x38, 0x47, 0x42,
		0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x49, 0x49, 0x20, 0x38, 0x47, 0x42, 0x4d, 0x34, 0x30,
		0x35, 0x42, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x49, 0x49, 0x56, 0x49, 0x52, 0x54, 0x55,
		0x45, 0x33, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x49, 0x49, 0x49, 0x43, 0x45, 0x4e, 0x54,
		0x52, 0x49, 0x43, 0x20, 0x53, 0x35, 0x30, 0x47, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x20,
		0x53, 0x35, 0x30, 0x47, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4a, 0x38, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x4a, 0x38, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x5f, 0x6c, 0x6c, 0x4f, 0x72, 0x62, 0x69, 0x74,
		0x20, 0x49, 0x49, 0x46, 0x69, 0x47, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x46, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x6c, 0x75,
		0x78, 0x46, 0x69, 0x72, 0x65, 0x46, 0x6c, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41,
		0x75, 0x72, 0x69, 0x69, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20,
		0x44, 0x65, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x44, 0x72, 0x65,
		0x61, 0x6d, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x44, 0x72, 0x65,
		0x61, 0x6d, 0x20, 0x4f, 0x6e, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x41, 0x6d, 0x75, 0x73, 0x65, 0x20, 0x33, 0x47, 0x41,
		0x75, 0x72, 0x69, 0x69, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x72, 0x69, 0x69,
		0x20, 0x78, 0x43, 0x69, 0x74, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x53, 0x65, 0x63, 0x72,
		0x65, 0x74, 0x20, 0x58, 0x52, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x74,
		0x65, 0x6e, 0x73, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73,
		0x65, 0x20, 0x58, 0x54, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x4d, 0x65, 0x74, 0x61,
		0x6c, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x53, 0x77, 0x65, 0x65, 0x74, 0x53, 0x77,
		0x65, 0x65, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x6c, 0x79, 0x50, 0x61, 0x6e, 0x6f, 0x72,
		0x61, 0x6d, 0x61, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6c, 0x69, 0x6d, 0x6c, 0x69,
		0x6e, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x30, 0x30,
		0x30, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x41,
		0x63, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4a, 0x65, 0x74, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x53,
		0x6b, 0x79, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x47, 0x65, 0x6f, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x5a,
		0x65, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x42, 0x75, 0x7a, 0x7a, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74,
		0x20, 0x34, 0x47, 0x46, 0x53, 0x35, 0x30, 0x36, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x33,
		0x46, 0x53, 0x34, 0x30, 0x33, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x75, 0x73, 0x20, 0x31, 0x46, 0x53,
		0x35, 0x30, 0x38, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x36, 0x46, 0x53, 0x35, 0x31, 0x31,
		0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x37, 0x46, 0x53, 0x35, 0x30, 0x39, 0x4e, 0x69, 0x6d,
		0x62, 0x75, 0x73, 0x20, 0x39, 0x46, 0x53, 0x34, 0x30, 0x36, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75,
		0x73, 0x20, 0x35, 0x46, 0x53, 0x34, 0x30, 0x34, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20,
		0x33, 0x46, 0x53, 0x35, 0x30, 0x34, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53,
		0x34, 0x30, 0x37, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x36, 0x46, 0x53, 0x34, 0x30,
		0x31, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x31, 0x46, 0x53, 0x34, 0x30, 0x32, 0x53,
		0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53, 0x35, 0x30, 0x31, 0x4e, 0x69, 0x6d,
		0x62, 0x75, 0x73, 0x20, 0x33, 0x46, 0x53, 0x35, 0x30, 0x32, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73,
		0x20, 0x31, 0x46, 0x53, 0x35, 0x30, 0x37, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x34, 0x46,
		0x53, 0x35, 0x30, 0x35, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x37, 0x46, 0x53, 0x35, 0x35,
		0x31, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x34, 0x46, 0x53, 0x35, 0x31, 0x34, 0x43, 0x69,
		0x72, 0x72, 0x75, 0x73, 0x20, 0x38, 0x46, 0x53, 0x35, 0x35, 0x33, 0x43, 0x69, 0x72, 0x72, 0x75,
		0x73, 0x20, 0x39, 0x46, 0x53, 0x35, 0x35, 0x34, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x46, 0x48, 0x44, 0x46, 0x53, 0x35, 0x31, 0x37, 0x43, 0x69, 0x72, 0x72, 0x75,
		0x73, 0x20, 0x31, 0x31, 0x46, 0x53, 0x35, 0x31, 0x36, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20,
		0x31, 0x32, 0x46, 0x53, 0x35, 0x31, 0x38, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x33,
		0x46, 0x53, 0x35, 0x32, 0x30, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x31, 0x46, 0x53, 0x35,
		0x32, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x31, 0x46, 0x53,
		0x35, 0x32, 0x32, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x34, 0x46, 0x53, 0x35, 0x32,
		0x33, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x36, 0x46, 0x53, 0x35, 0x32, 0x34, 0x4b,
		0x6e, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x46, 0x53, 0x35, 0x32, 0x36, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53, 0x35, 0x32, 0x37, 0x4e, 0x69, 0x6d,
		0x62, 0x75, 0x73, 0x20, 0x31, 0x37, 0x46, 0x53, 0x35, 0x32, 0x38, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
		0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x53, 0x35, 0x32, 0x39, 0xd0, 0xa1, 0x68, 0x61, 0x6d,
		0x70, 0x46, 0x53, 0x35, 0x33, 0x30, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x58, 0x58, 0x4c, 0x46, 0x53, 0x34, 0x35, 0x34, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20,
		0x38, 0x46, 0x53, 0x34, 0x35, 0x32, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53,
		0x35, 0x31, 0x32, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x30, 0x46, 0x53, 0x35, 0x31,
		0x30, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x32, 0x46, 0x53, 0x34, 0x35, 0x31, 0x4e,
		0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x46, 0x53, 0x34, 0x30, 0x35, 0x53, 0x74, 0x72, 0x61,
		0x74, 0x75, 0x73, 0x20, 0x34, 0x46, 0x53, 0x34, 0x30, 0x38, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75,
		0x73, 0x20, 0x38, 0x46, 0x53, 0x34, 0x30, 0x39, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20,
		0x39, 0x46, 0x53, 0x34, 0x35, 0x35, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x31, 0x46,
		0x53, 0x34, 0x35, 0x36, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x34, 0x46, 0x53, 0x34,
		0x35, 0x37, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x35, 0x46, 0x53, 0x34, 0x35, 0x39,
		0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x36, 0x46, 0x53, 0x34, 0x35, 0x38, 0x53, 0x74,
		0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x37, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4a, 0x61,
		0x7a, 0x7a, 0x57, 0x68, 0x69, 0x7a, 0x7a, 0x50, 0x72, 0x69, 0x64, 0x65, 0x46, 0x69, 0x72, 0x65,
		0x62, 0x69, 0x72, 0x64, 0x4d, 0x61, 0x72, 0x61, 0x74, 0x68, 0x6f, 0x6e, 0x54, 0x75, 0x72, 0x62,
		0x6f, 0x45, 0x76, 0x6f, 0x6b, 0x65, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x45, 0x72, 0x61, 0x20, 0x4e,
		0x61, 0x6e, 0x6f, 0x20, 0x31, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x33, 0x45,
		0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x34, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e,
		0x6f, 0x20, 0x35, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x36, 0x45, 0x72, 0x61,
		0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x39, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x45, 0x72, 0x61,
		0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x32, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63,
		0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c,
		0x65, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x32, 0x47, 0x65, 0x6e, 0x69, 0x75, 0x73,
		0x45, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x31, 0x45, 0x72, 0x61, 0x20, 0x4c, 0x69,
		0x66, 0x65, 0x20, 0x32, 0x45, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x34, 0x43, 0x68,
		0x69, 0x63, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e,
		0x20, 0x32, 0x56, 0x69, 0x73, 0x74, 0x61, 0x45, 0x67, 0x6f, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x20, 0x31, 0x45, 0x76, 0x6f, 0x20, 0x54, 0x65, 0x63, 0x68, 0x20, 0x31, 0x45, 0x6e, 0x65,
		0x72, 0x67, 0x79, 0x20, 0x33, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x20, 0x32, 0x43, 0x6f, 0x72, 0x61, 0x6c, 0x45, 0x76, 0x6f, 0x20, 0x43, 0x68, 0x69,
		0x63, 0x20, 0x33, 0x45, 0x76, 0x6f, 0x20, 0x54, 0x65, 0x63, 0x68, 0x20, 0x33, 0x45, 0x72, 0x61,
		0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x33, 0x45, 0x76, 0x6f, 0x20, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x20, 0x35, 0x49, 0x51, 0x24, 0x31, 0x46, 0x6c, 0x79, 0x6c, 0x69, 0x66, 0x65, 0x20,
		0x24, 0x31, 0x46, 0x6f, 0x6e, 0x64, 0x69, 0x46, 0x6f, 0x6e, 0x6f, 0x73, 0x46, 0x6f, 0x72, 0x6d,
		0x75, 0x6c, 0x65, 0x72, 0x53, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x46,
		0x6f, 0x72, 0x73, 0x74, 0x61, 0x72, 0x41, 0x6d, 0x6f, 0x73, 0x74, 0x61, 0x20, 0x33, 0x47, 0x35,
		0x46, 0x6f, 0x72, 0x74, 0x69, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x53, 0x31, 0x38, 0x35, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x32, 0x53, 0x36, 0x31, 0x20, 0x45,
		0x63, 0x6f, 0x20, 0x32, 0x46, 0x6f, 0x75, 0x72, 0x65, 0x6c, 0x45, 0x61, 0x73, 0x79, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x24, 0x31, 0x46, 0x6f, 0x78, 0x63, 0x6f, 0x6e, 0x6e, 0x49,
		0x6e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x20, 0x4d, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x74, 0x65,
		0x6c, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x43, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61, 0x69, 0x20,
		0x4d, 0x69, 0x79, 0x61, 0x62, 0x69, 0x52, 0x65, 0x69, 0x20, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x35, 0x43, 0x72, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x20,
		0x57, 0x61, 0x76, 0x65, 0x46, 0x54, 0x4a, 0x31, 0x36, 0x31, 0x41, 0x4d, 0x75, 0x73, 0x61, 0x73,
		0x68, 0x69, 0x46, 0x54, 0x45, 0x31, 0x36, 0x31, 0x45, 0x49, 0x63, 0x65, 0x20, 0x32, 0x46, 0x54,
		0x45, 0x31, 0x36, 0x31, 0x47, 0x49, 0x63, 0x65, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46,
		0x54, 0x4a, 0x31, 0x36, 0x32, 0x45, 0x52, 0x61, 0x69, 0x6a, 0x69, 0x6e, 0x46, 0x54, 0x31, 0x34,
		0x31, 0x42, 0x4e, 0x69, 0x63, 0x6f, 0x58, 0x4d, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x32,
		0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x41, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x33, 0x46,
		0x54, 0x4a, 0x31, 0x36, 0x32, 0x44, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x34, 0x46, 0x54,
		0x4a, 0x31, 0x35, 0x32, 0x42, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x33, 0x53, 0x20, 0x4c,
		0x54, 0x45, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x44, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61, 0x69,
		0x20, 0x4b, 0x69, 0x77, 0x61, 0x6d, 0x69, 0x46, 0x54, 0x4a, 0x31, 0x36, 0x32, 0x42, 0x53, 0x61,
		0x6d, 0x75, 0x72, 0x61, 0x69, 0x20, 0x4b, 0x69, 0x77, 0x61, 0x6d, 0x69, 0x20, 0x32, 0x46, 0x54,
		0x4a, 0x31, 0x36, 0x31, 0x42, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61, 0x69, 0x20, 0x52, 0x65, 0x69,
		0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x45, 0x4b, 0x61, 0x74, 0x61, 0x6e, 0x61, 0x20, 0x31, 0x46,
		0x75, 0x6a, 0x69, 0x74, 0x73, 0x75, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x35, 0x47, 0x20,
		0x46, 0x2d, 0x35, 0x31, 0x41, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46,
		0x2d, 0x30, 0x31, 0x46, 0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24,
		0x31, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x46, 0x2d,
		0x30, 0x33, 0x4c, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30,
		0x31, 0x4a, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x31,
		0x4b, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x46, 0x69, 0x74, 0x20, 0x46, 0x2d, 0x30, 0x31,
		0x48, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x32, 0x45, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x32, 0x47, 0x41, 0x72,
		0x72, 0x6f, 0x77, 0x73, 0x20, 0x45, 0x46, 0x20, 0x46, 0x4a, 0x4c, 0x32, 0x31, 0x41, 0x72, 0x72,
		0x6f, 0x77, 0x73, 0x20, 0x5a, 0x20, 0x46, 0x4a, 0x4c, 0x32, 0x32, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x32, 0x48, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x4e, 0x58, 0x39, 0x20, 0x46, 0x2d, 0x35, 0x32, 0x41, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x4b, 0x69, 0x73, 0x73, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x44, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x4b, 0x69, 0x73, 0x73, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x45, 0x44, 0x69, 0x73, 0x6e,
		0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x46, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x53, 0x56, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x48, 0x41, 0x72,
		0x72, 0x6f, 0x77, 0x73, 0x20, 0x4a, 0x20, 0x39, 0x30, 0x31, 0x46, 0x4a, 0x41, 0x72, 0x72, 0x6f,
		0x77, 0x73, 0x20, 0x56, 0x20, 0x46, 0x2d, 0x30, 0x34, 0x45, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x34, 0x47, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0x58, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x46, 0x2d, 0x30, 0x35, 0x44, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x35, 0x46, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x42, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x35, 0x4a, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0x4b, 0x2d, 0x74, 0x61, 0x69, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x65, 0x20, 0x46,
		0x2d, 0x30, 0x34, 0x4b, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x65, 0x20, 0x33, 0x20,
		0x46, 0x2d, 0x30, 0x32, 0x4c, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x65, 0x20, 0x34,
		0x20, 0x46, 0x2d, 0x34, 0x31, 0x41, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x65, 0x20,
		0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x46, 0x2d, 0x34, 0x31, 0x42, 0x41, 0x72, 0x72, 0x6f,
		0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x36, 0x45, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0xce, 0xbc, 0x20, 0x46, 0x2d, 0x30, 0x37, 0x44, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x57, 0x65, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x55, 0x20, 0x38, 0x30, 0x31, 0x46,
		0x4a, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x46,
		0x2d, 0x30, 0x37, 0x45, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x20, 0x46, 0x2d, 0x30, 0x38, 0x44, 0x41, 0x4e, 0x54, 0x45, 0x50, 0x52, 0x49, 0x4d, 0x41,
		0x20, 0x46, 0x2d, 0x30, 0x39, 0x44, 0x52, 0x61, 0x6b, 0x75, 0x2d, 0x52, 0x61, 0x6b, 0x75, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69,
		0x75, 0x6d, 0x20, 0x46, 0x2d, 0x30, 0x39, 0x45, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x58,
		0x20, 0x46, 0x2d, 0x31, 0x30, 0x44, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4d, 0x65, 0x20,
		0x46, 0x2d, 0x31, 0x31, 0x44, 0x46, 0x2d, 0x31, 0x32, 0x43, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x4d, 0x30, 0x33, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x52, 0x4d, 0x30, 0x32, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x52, 0x58, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4d,
		0x30, 0x34, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x4d, 0x24, 0x31, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x46, 0x41, 0x52, 0x54, 0x4d, 0x39, 0x33, 0x33, 0x4b, 0x5a, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x35, 0x30, 0x34, 0x2f, 0x48, 0x41, 0x34, 0x53, 0x74,
		0x79, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x63, 0x46, 0x75, 0x6e, 0x61, 0x69, 0x46, 0x75, 0x73, 0x69,
		0x6f, 0x6e, 0x35, 0x24, 0x31, 0x76, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x76, 0x32, 0x47,
		0x2d, 0x54, 0x69, 0x44, 0x45, 0x53, 0x68, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x37, 0x53, 0x68, 0x69,
		0x6e, 0x69, 0x6e, 0x67, 0x20, 0x37, 0x47, 0x2d, 0x54, 0x69, 0x44, 0x45, 0x20, 0x56, 0x36, 0x47,
		0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x20, 0x24, 0x31, 0x53,
		0x74, 0x65, 0x6c, 0x6c, 0x61, 0x47, 0x45, 0x4f, 0x46, 0x4f, 0x58, 0x4d, 0x49, 0x44, 0x37, 0x34,
		0x33, 0x47, 0x46, 0x69, 0x76, 0x65, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20,
		0x47, 0x6f, 0x6c, 0x64, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74,
		0x20, 0x47, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65,
		0x6e, 0x74, 0x20, 0x47, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x31, 0x47, 0x4c, 0x4f, 0x4e, 0x59,
		0x58, 0x51, 0x75, 0x61, 0x72, 0x74, 0x7a, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x58, 0x47, 0x4c, 0x58,
		0x20, 0x41, 0x53, 0x41, 0x41, 0x73, 0x61, 0x47, 0x4f, 0x43, 0x4c, 0x45, 0x56, 0x45, 0x52, 0x51,
		0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x20, 0x24, 0x31, 0x49, 0x4e, 0x53, 0x49, 0x47, 0x4e, 0x49,
		0x41, 0x20, 0x24, 0x31, 0x54, 0x51, 0x37, 0x30, 0x30, 0x4e, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55,
		0x4d, 0x20, 0x37, 0x30, 0x30, 0x4e, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x5f, 0x31, 0x30,
		0x31, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x31,
		0x30, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20,
		0x32, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74,
		0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x20, 0x52, 0x75, 0x67, 0x67, 0x65, 0x64, 0x51,
		0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x52, 0x75, 0x67, 0x67, 0x65, 0x64,
		0x20, 0x50, 0x72, 0x6f, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x24,
		0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x5f, 0x49, 0x49,
		0x5f, 0x35, 0x30, 0x30, 0x5f, 0x4e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x32, 0x20,
		0x35, 0x30, 0x30, 0x20, 0x4e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x24,
		0x32, 0x4e, 0x45, 0x54, 0x42, 0x4f, 0x4f, 0x4b, 0x20, 0x52, 0x31, 0x30, 0x33, 0x4e, 0x65, 0x74,
		0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x52, 0x31, 0x30, 0x33, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x39,
		0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x49, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69,
		0x6f, 0x6e, 0x73, 0x55, 0x6e, 0x69, 0x20, 0x32, 0x47, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x2d, 0x41,
		0x73, 0x75, 0x73, 0x47, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31,
		0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x47, 0x57, 0x41, 0x54, 0x38, 0x2d, 0x31, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x38, 0x22, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x65, 0x6e,
		0x65, 0x72, 0x61, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47, 0x4d, 0x20, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x47, 0x33, 0x31, 0x30, 0x47, 0x4d, 0x20, 0x32, 0x31, 0x47, 0x35, 0x31,
		0x30, 0x47, 0x4d, 0x20, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x37, 0x30, 0x30, 0x47,
		0x4d, 0x20, 0x32, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x33, 0x30, 0x31, 0x47, 0x4d, 0x20, 0x32,
		0x30, 0x47, 0x35, 0x30, 0x31, 0x47, 0x4d, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4d,
		0x20, 0x24, 0x31, 0x44, 0x47, 0x4d, 0x20, 0x38, 0x47, 0x4d, 0x38, 0x20, 0x67, 0x6f, 0x47, 0x4d,
		0x20, 0x38, 0x20, 0x47, 0x6f, 0x47, 0x4d, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4d, 0x20,
		0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x4d, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
		0x72, 0x79, 0x20, 0x49, 0x49, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x20, 0x34, 0x47, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x34, 0x47, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x20, 0x34, 0x47, 0x34, 0x47, 0x45, 0x2d, 0x54, 0x61, 0x62, 0x20, 0x32, 0x30, 0x47, 0x65, 0x6e,
		0x65, 0x73, 0x69, 0x73, 0x47, 0x65, 0x6f, 0x74, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x6d,
		0x69, 0x67, 0x6f, 0x47, 0x65, 0x6f, 0x74, 0x65, 0x78, 0x47, 0x68, 0x69, 0x61, 0x53, 0x76, 0x65,
		0x67, 0x6c, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x51, 0x53, 0x37, 0x30, 0x32, 0x47, 0x48, 0x49, 0x41,
		0x5f, 0x5a, 0x45, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x5a, 0x65, 0x75, 0x73, 0x20, 0x33, 0x47, 0x47,
		0x48, 0x49, 0x41, 0x5f, 0x41, 0x58, 0x49, 0x53, 0x37, 0x41, 0x78, 0x69, 0x73, 0x20, 0x37, 0x56,
		0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x54, 0x41, 0x37, 0x57,
		0x46, 0x41, 0x37, 0x20, 0x52, 0x4f, 0x4a, 0x41, 0x54, 0x52, 0x45, 0x4f, 0x5f, 0x54, 0x41, 0x42,
		0x38, 0x47, 0x54, 0x52, 0x45, 0x4f, 0x20, 0x54, 0x41, 0x42, 0x38, 0x47, 0x47, 0x54, 0x20, 0x4b,
		0x49, 0x44, 0x53, 0x20, 0x37, 0x56, 0x45, 0x4e, 0x55, 0x53, 0x37, 0x56, 0x45, 0x4e, 0x55, 0x53,
		0x20, 0x37, 0x47, 0x68, 0x6f, 0x6e, 0x67, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x30, 0x33, 0x47,
		0x69, 0x67, 0x61, 0x62, 0x79, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x62, 0x61, 0x20, 0x53, 0x58, 0x31,
		0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x69, 0x6d, 0x62, 0x61, 0x20, 0x53, 0x58, 0x31,
		0x47, 0x69, 0x67, 0x61, 0x73, 0x65, 0x74, 0x47, 0x69, 0x67, 0x61, 0x73, 0x65, 0x74, 0x20, 0x51,
		0x56, 0x24, 0x31, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x53, 0x24, 0x31, 0x47,
		0x53, 0x35, 0x37, 0x2d, 0x36, 0x4d, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x53, 0x35, 0x35, 0x2d,
		0x36, 0x4d, 0x45, 0x45, 0x39, 0x34, 0x30, 0x2d, 0x32, 0x37, 0x39, 0x35, 0x2d, 0x30, 0x30, 0x47,
		0x53, 0x34, 0x47, 0x53, 0x35, 0x33, 0x2d, 0x36, 0x4d, 0x45, 0x20, 0x50, 0x75, 0x72, 0x65, 0x47,
		0x69, 0x6e, 0x69, 0x57, 0x24, 0x31, 0x4e, 0x24, 0x31, 0x53, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x47,
		0x69, 0x6e, 0x7a, 0x7a, 0x75, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
		0x47, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x47, 0x4e, 0x38, 0x31, 0x30, 0x47, 0x4e, 0x38, 0x30, 0x30,
		0x33, 0x4c, 0x4d, 0x36, 0x4c, 0x47, 0x4e, 0x38, 0x30, 0x30, 0x33, 0x4d, 0x36, 0x47, 0x4e, 0x24,
		0x31, 0x4d, 0x37, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x31, 0x31, 0x50, 0x35, 0x20, 0x6d,
		0x69, 0x6e, 0x69, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x35, 0x20, 0x6d, 0x69, 0x6e, 0x69,
		0x50, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x37, 0x20, 0x4d,
		0x61, 0x78, 0x4d, 0x36, 0x20, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x46, 0x39, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x46, 0x31, 0x30, 0x33, 0x24, 0x31, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x44, 0x31,
		0x47, 0x6c, 0x6f, 0x62, 0x65, 0x78, 0x58, 0x38, 0x47, 0x55, 0x36, 0x30, 0x31, 0x32, 0x42, 0x47,
		0x6c, 0x6f, 0x66, 0x69, 0x69, 0x73, 0x68, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x55, 0x47, 0x6f,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47, 0x4f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x47, 0x6f, 0x20,
		0x4f, 0x6e, 0x79, 0x78, 0x47, 0x6f, 0x24, 0x31, 0x47, 0x6f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x48,
		0x31, 0x2d, 0x43, 0x2d, 0x41, 0x4c, 0x41, 0x44, 0x45, 0x4e, 0x47, 0x57, 0x35, 0x47, 0x6f, 0x6c,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x46, 0x31, 0x30, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x45,
		0x46, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x6f, 0x6c, 0x79, 0x47, 0x6f, 0x6d,
		0x65, 0x43, 0x37, 0x32, 0x43, 0x37, 0x31, 0x43, 0x35, 0x31, 0x4b, 0x31, 0x55, 0x31, 0x55, 0x37,
		0x55, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x55, 0x39, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x47,
		0x6c, 0x61, 0x73, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x65, 0x78, 0x75, 0x73,
		0x41, 0x4f, 0x53, 0x50, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x48, 0x65,
		0x61, 0x64, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x35, 0x41, 0x4f, 0x53, 0x50, 0x20, 0x6f, 0x6e,
		0x20, 0x4d, 0x61, 0x6e, 0x74, 0x61, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x31, 0x30, 0x50, 0x69,
		0x78, 0x65, 0x6c, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x69, 0x62, 0x65, 0x72, 0x20, 0x24,
		0x31, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x68, 0x72, 0x6f, 0x6d,
		0x65, 0x63, 0x61, 0x73, 0x74, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x47, 0x6f, 0x6f, 0x67,
		0x6c, 0x65, 0x54, 0x56, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x58,
		0x4c, 0x62, 0x6c, 0x75, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x33,
		0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x33, 0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20,
		0x32, 0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x33, 0x61, 0x20, 0x58, 0x4c, 0x50,
		0x69, 0x78, 0x65, 0x6c, 0x20, 0x33, 0x61, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x20, 0x58,
		0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x61, 0x20, 0x28, 0x35, 0x47, 0x29, 0x50, 0x69,
		0x78, 0x65, 0x6c, 0x20, 0x24, 0x31, 0x61, 0x47, 0x30, 0x31, 0x31, 0x41, 0x50, 0x69, 0x78, 0x65,
		0x6c, 0x20, 0x32, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x20, 0x32, 0x58, 0x4c, 0x50, 0x69, 0x78,
		0x65, 0x6c, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x24, 0x31,
		0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x43, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x36, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x49, 0x36, 0x49, 0x36, 0x53, 0x49, 0x36, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49,
		0x37, 0x49, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x34, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x47,
		0x6f, 0x6f, 0x77, 0x65, 0x65, 0x6c, 0x47, 0x70, 0x6c, 0x75, 0x73, 0x47, 0x72, 0x61, 0x64, 0x69,
		0x65, 0x6e, 0x74, 0x65, 0x47, 0x52, 0x41, 0x44, 0x49, 0x45, 0x4e, 0x54, 0x45, 0x47, 0x72, 0x61,
		0x70, 0x65, 0x47, 0x54, 0x4d, 0x2d, 0x35, 0x24, 0x31, 0x47, 0x72, 0x65, 0x65, 0x47, 0x30, 0x35,
		0x31, 0x35, 0x44, 0x54, 0x6f, 0x73, 0x6f, 0x74, 0x20, 0x35, 0x47, 0x47, 0x30, 0x36, 0x31, 0x35,
		0x44, 0x54, 0x6f, 0x73, 0x6f, 0x74, 0x20, 0x37, 0x47, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x74, 0x65,
		0x6c, 0x58, 0x31, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x65,
		0x73, 0x73, 0x6f, 0x52, 0x45, 0x47, 0x41, 0x4c, 0x20, 0x52, 0x32, 0x52, 0x65, 0x67, 0x61, 0x6c,
		0x20, 0x52, 0x32, 0x52, 0x65, 0x67, 0x61, 0x6c, 0x47, 0x72, 0x65, 0x74, 0x65, 0x6c, 0x47, 0x72,
		0x75, 0x6e, 0x64, 0x69, 0x67, 0x47, 0x24, 0x31, 0x41, 0x46, 0x54, 0x45, 0x55, 0x30, 0x31, 0x34,
		0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x37, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x39, 0x29, 0x41, 0x46, 0x54, 0x45, 0x55, 0x46, 0x46, 0x30, 0x31, 0x34, 0x4f, 0x4c, 0x45, 0x44,
		0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x46, 0x54, 0x45, 0x55, 0x30,
		0x31, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x36, 0x20, 0x48, 0x44, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x47, 0x74, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
		0x20, 0x38, 0x73, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x39, 0x48, 0x39, 0x36,
		0x4d, 0x61, 0x78, 0x20, 0x52, 0x4b, 0x33, 0x33, 0x31, 0x38, 0x4d, 0x61, 0x78, 0x20, 0x58, 0x32,
		0x48, 0x41, 0x4f, 0x56, 0x4d, 0x48, 0x45, 0x52, 0x4f, 0x53, 0x50, 0x2d, 0x30, 0x30, 0x31, 0x48,
		0x4b, 0x50, 0x72, 0x6f, 0x48, 0x50, 0x48, 0x50, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x36,
		0x20, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x20, 0x54, 0x61, 0x62, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20,
		0x36, 0x20, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x61, 0x62, 0x48, 0x50, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6c, 0x61, 0x74, 0x65,
		0x20, 0x24, 0x31, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x20, 0x24, 0x31, 0x48, 0x50, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x38, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x6c,
		0x61, 0x74, 0x65, 0x20, 0x38, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x69, 0x50, 0x41,
		0x51, 0x20, 0x24, 0x31, 0x56, 0x65, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x24, 0x31, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x48,
		0x50, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x38, 0x32, 0x30, 0x20,
		0x47, 0x32, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x38, 0x32, 0x30, 0x20,
		0x47, 0x32, 0x5a, 0x32, 0x34, 0x30, 0x20, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x57, 0x6f, 0x72,
		0x6b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x54, 0x43, 0x55, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x55, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x55, 0x31, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x66, 0x65,
		0x55, 0x31, 0x31, 0x20, 0x45, 0x79, 0x65, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x69, 0x6f, 0x45, 0x76,
		0x6f, 0x20, 0x33, 0x47, 0x45, 0x76, 0x6f, 0x20, 0x34, 0x47, 0x55, 0x31, 0x31, 0x4f, 0x6e, 0x65,
		0x4f, 0x6e, 0x65, 0x20, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x4f,
		0x6e, 0x65, 0x20, 0x58, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x31, 0x30, 0x4a, 0x4a, 0x20, 0x4f,
		0x6e, 0x65, 0x4a, 0x20, 0x42, 0x75, 0x74, 0x74, 0x65, 0x72, 0x66, 0x6c, 0x79, 0x42, 0x75, 0x74,
		0x74, 0x65, 0x72, 0x66, 0x6c, 0x79, 0x20, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39, 0x5f, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x45, 0x64, 0x69, 0x74,
		0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20,
		0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e,
		0x65, 0x20, 0x4d, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39, 0x4f,
		0x6e, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x44, 0x65,
		0x73, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d,
		0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x37, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x38, 0x4f, 0x6e, 0x65, 0x20,
		0x45, 0x38, 0x4f, 0x6e, 0x65, 0x20, 0x45, 0x39, 0x4f, 0x6e, 0x65, 0x20, 0x45, 0x39, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x39, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x65, 0x6d,
		0x69, 0x78, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x2b, 0x4f, 0x6e, 0x65, 0x20, 0x41, 0x39, 0x41, 0x44,
		0x52, 0x36, 0x33, 0x30, 0x30, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x49, 0x6e, 0x63, 0x72, 0x65,
		0x64, 0x69, 0x62, 0x6c, 0x65, 0x48, 0x54, 0x43, 0x36, 0x34, 0x33, 0x35, 0x4c, 0x56, 0x57, 0x44,
		0x72, 0x6f, 0x69, 0x64, 0x20, 0x44, 0x4e, 0x41, 0x41, 0x44, 0x52, 0x36, 0x34, 0x30, 0x30, 0x4c,
		0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6c, 0x74, 0x41, 0x44, 0x52, 0x36, 0x34,
		0x31, 0x30, 0x4c, 0x52, 0x41, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x49, 0x6e, 0x63, 0x72, 0x65,
		0x64, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x33, 0x53, 0x50, 0x56, 0x20, 0x45, 0x36, 0x30, 0x30, 0x53,
		0x50, 0x56, 0x20, 0x45, 0x36, 0x35, 0x30, 0x56, 0x6f, 0x78, 0x32, 0x50, 0x59, 0x42, 0x32, 0x44,
		0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36,
		0x32, 0x36, 0x53, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x35, 0x31, 0x30, 0x44, 0x65, 0x73,
		0x69, 0x72, 0x65, 0x20, 0x35, 0x33, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x33, 0x31,
		0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x30, 0x38, 0x74, 0x44, 0x65, 0x73, 0x69,
		0x72, 0x65, 0x20, 0x36, 0x31, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x30, 0x31,
		0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x32, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65,
		0x20, 0x36, 0x32, 0x36, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x38, 0x31, 0x36, 0x44, 0x65,
		0x73, 0x69, 0x72, 0x65, 0x20, 0x35, 0x32, 0x36, 0x45, 0x78, 0x6f, 0x64, 0x75, 0x73, 0x20, 0x31,
		0x55, 0x31, 0x39, 0x65, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x30, 0x20, 0x43, 0x6f,
		0x6d, 0x70, 0x61, 0x63, 0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x31, 0x30, 0x20, 0x45, 0x76, 0x6f, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c,
		0x69, 0x66, 0x65, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x48, 0x44,
		0x32, 0x48, 0x44, 0x32, 0x50, 0x37, 0x31, 0x35, 0x61, 0x46, 0x6c, 0x79, 0x65, 0x72, 0x46, 0x6c,
		0x79, 0x65, 0x72, 0x20, 0x24, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x24, 0x31, 0x20,
		0x28, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x29, 0x48, 0x61, 0x66, 0x75, 0x72, 0x79, 0x47, 0x54,
		0x32, 0x30, 0x48, 0x61, 0x69, 0x65, 0x72, 0x41, 0x32, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x4e,
		0x46, 0x43, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x41, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x4e, 0x46, 0x43, 0x41, 0x34, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20,
		0x41, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x4d, 0x2d, 0x4e, 0x35, 0x30, 0x35, 0x2d, 0x46,
		0x4c, 0x49, 0x38, 0x53, 0x35, 0x20, 0x53, 0x69, 0x6c, 0x6b, 0x48, 0x4d, 0x2d, 0x4e, 0x37, 0x30,
		0x30, 0x2d, 0x46, 0x4c, 0x48, 0x4d, 0x2d, 0x4e, 0x37, 0x30, 0x31, 0x2d, 0x46, 0x4c, 0x48, 0x4d,
		0x2d, 0x4e, 0x35, 0x30, 0x31, 0x2d, 0x46, 0x4c, 0x4c, 0x35, 0x36, 0x48, 0x4d, 0x2d, 0x49, 0x35,
		0x35, 0x39, 0x2d, 0x46, 0x4c, 0x4c, 0x35, 0x35, 0x73, 0x48, 0x4d, 0x2d, 0x49, 0x35, 0x36, 0x30,
		0x2d, 0x46, 0x4c, 0x47, 0x37, 0x73, 0x48, 0x4d, 0x2d, 0x47, 0x35, 0x35, 0x33, 0x2d, 0x46, 0x4c,
		0x47, 0x35, 0x31, 0x68, 0x61, 0x69, 0x65, 0x72, 0x41, 0x54, 0x56, 0x6e, 0x69, 0x70, 0x70, 0x6f,
		0x72, 0x69, 0x68, 0x61, 0x69, 0x65, 0x72, 0x41, 0x54, 0x56, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
		0x64, 0x20, 0x54, 0x56, 0x48, 0x61, 0x69, 0x70, 0x61, 0x69, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20,
		0x53, 0x36, 0x48, 0x61, 0x6d, 0x6c, 0x65, 0x74, 0x5a, 0x65, 0x6c, 0x69, 0x67, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x24, 0x31, 0x48, 0x61, 0x6e, 0x6e, 0x53, 0x70, 0x72, 0x65, 0x65, 0x53, 0x4e, 0x31,
		0x41, 0x54, 0x37, 0x31, 0x57, 0x28, 0x42, 0x29, 0x53, 0x4e, 0x37, 0x30, 0x54, 0x33, 0x31, 0x53,
		0x4e, 0x37, 0x30, 0x54, 0x33, 0x53, 0x4e, 0x37, 0x30, 0x54, 0x35, 0x31, 0x41, 0x53, 0x4e, 0x39,
		0x37, 0x54, 0x34, 0x31, 0x57, 0x54, 0x37, 0x2d, 0x51, 0x43, 0x53, 0x4e, 0x41, 0x54, 0x37, 0x31,
		0x42, 0x55, 0x45, 0x48, 0x61, 0x72, 0x64, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x4f, 0x44, 0x52,
		0x4f, 0x49, 0x44, 0x20, 0x24, 0x31, 0x48, 0x61, 0x73, 0x65, 0x65, 0x48, 0x65, 0x6c, 0x69, 0x6f,
		0x48, 0x65, 0x7a, 0x69, 0x72, 0x65, 0x48, 0x69, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x24, 0x31,
		0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x47, 0x6f, 0x48, 0x69, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x48,
		0x65, 0x62, 0x65, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x65, 0x72,
		0x61, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x39, 0x48, 0x69, 0x2d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x48,
		0x4c, 0x56, 0x2d, 0x54, 0x24, 0x31, 0x48, 0x69, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x6c, 0x79, 0x6d,
		0x65, 0x72, 0x24, 0x31, 0x50, 0x75, 0x72, 0x65, 0x20, 0x33, 0x53, 0x48, 0x69, 0x67, 0x68, 0x20,
		0x51, 0x48, 0x69, 0x67, 0x68, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46,
		0x69, 0x76, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x45, 0x76, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20,
		0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69,
		0x76, 0x65, 0x53, 0x70, 0x61, 0x64, 0x65, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x46, 0x65,
		0x73, 0x74, 0x20, 0x58, 0x4c, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x65, 0x73, 0x74, 0x20, 0x58, 0x4c,
		0x46, 0x65, 0x73, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x46, 0x6f, 0x75, 0x72, 0x50, 0x75, 0x72, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x50, 0x75, 0x72, 0x65, 0x20, 0x46, 0x52, 0x61, 0x7a, 0x61, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x45,
		0x61, 0x73, 0x79, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x61, 0x73, 0x79, 0x20, 0x24,
		0x31, 0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x45,
		0x61, 0x73, 0x79, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x32,
		0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x32, 0x20, 0x53, 0x45, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20,
		0x33, 0x20, 0x53, 0x45, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x53, 0x45, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x33, 0x5a, 0x65, 0x72, 0x61, 0x20, 0x53, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x61, 0x73, 0x74, 0x79, 0x56, 0x65, 0x72, 0x67, 0x65, 0x20,
		0x4d, 0x57, 0x69, 0x6e, 0x57, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x65, 0x48, 0x65,
		0x72, 0x63, 0x75, 0x6c, 0x65, 0x73, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x52, 0x61, 0x67, 0x65,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x24, 0x31, 0x48, 0x69, 0x70, 0x73, 0x74, 0x72, 0x65, 0x65,
		0x74, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x48, 0x69, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x45, 0x32, 0x37,
		0x30, 0x42, 0x53, 0x41, 0x53, 0x65, 0x72, 0x6f, 0x20, 0x37, 0x45, 0x32, 0x32, 0x53, 0x65, 0x72,
		0x6f, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x32, 0x32, 0x38, 0x31, 0x53, 0x65, 0x72, 0x6f,
		0x20, 0x38, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x30, 0x32, 0x4e, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x30,
		0x33, 0x54, 0x41, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x43, 0x43, 0x48, 0x4c, 0x54, 0x45, 0x37,
		0x30, 0x30, 0x54, 0x41, 0x36, 0x48, 0x4c, 0x54, 0x45, 0x37, 0x33, 0x30, 0x54, 0x41, 0x36, 0x4c,
		0x48, 0x4e, 0x52, 0x33, 0x32, 0x30, 0x54, 0x4d, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x32, 0x30, 0x32, 0x31, 0x4d, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x20, 0x4d, 0x41,
		0x58, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x20, 0x4d, 0x61, 0x78, 0x45,
		0x20, 0x4d, 0x61, 0x78, 0x48, 0x4c, 0x54, 0x45, 0x35, 0x30, 0x31, 0x4e, 0x56, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4b, 0x53, 0x39, 0x30, 0x37, 0x56, 0x33, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x32, 0x33,
		0x45, 0x48, 0x33, 0x30, 0x49, 0x34, 0x36, 0x44, 0x31, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x66,
		0x72, 0x65, 0x6e, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x52, 0x45, 0x47,
		0x36, 0x38, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e, 0x20, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x5a, 0x45, 0x47, 0x39, 0x38, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x66, 0x72, 0x65, 0x6e, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x55, 0x32,
		0x46, 0x32, 0x36, 0x46, 0x32, 0x38, 0x46, 0x32, 0x39, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f,
		0x6e, 0x67, 0x20, 0x34, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x34, 0x20,
		0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x35, 0x4b, 0x69,
		0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x36, 0x46, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x46, 0x33, 0x30, 0x53, 0x46, 0x34, 0x30, 0x46, 0x35, 0x30, 0x46, 0x35, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x48, 0x31, 0x38, 0x48, 0x32, 0x30, 0x48, 0x4c, 0x54, 0x45, 0x31, 0x30, 0x33, 0x45,
		0x45, 0x32, 0x30, 0x48, 0x31, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x48,
		0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x55, 0x33, 0x30, 0x55, 0x34, 0x30, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x45, 0x39, 0x4e, 0x61, 0x6e, 0x61, 0x55, 0x36, 0x30, 0x31, 0x53, 0x20, 0x50, 0x72,
		0x6f, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x48, 0x35, 0x30, 0x20, 0x5a, 0x6f,
		0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x33, 0x30, 0x20, 0x53,
		0x45, 0x55, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x55, 0x33, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x48, 0x69, 0x74, 0x61, 0x63, 0x68, 0x69, 0x48, 0x69, 0x74, 0x65, 0x63, 0x68,
		0x48, 0x6f, 0x66, 0x66, 0x6d, 0x61, 0x6e, 0x6e, 0x58, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x6d, 0x65,
		0x74, 0x65, 0x63, 0x68, 0x41, 0x4c, 0x46, 0x41, 0x20, 0x24, 0x31, 0x49, 0x64, 0x65, 0x61, 0x6c,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x49, 0x50, 0x53, 0x24, 0x31, 0x48, 0x54, 0x20, 0x24,
		0x31, 0x48, 0x6f, 0x6d, 0x74, 0x6f, 0x6d, 0x48, 0x54, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x54, 0x24, 0x31, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x77, 0x65, 0x6c, 0x6c, 0x53, 0x63, 0x61, 0x6e,
		0x50, 0x61, 0x6c, 0x20, 0x24, 0x31, 0x44, 0x6f, 0x6c, 0x70, 0x68, 0x69, 0x6e, 0x20, 0x24, 0x31,
		0x48, 0x6f, 0x6f, 0x7a, 0x6f, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x48, 0x6f, 0x73,
		0x69, 0x6e, 0x48, 0x6f, 0x74, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x48, 0x50, 0x50, 0x2d,
		0x47, 0x53, 0x31, 0x56, 0x4c, 0x45, 0x35, 0x50, 0x6f, 0x62, 0x6c, 0x61, 0x6e, 0x6f, 0x48, 0x50,
		0x50, 0x2d, 0x4c, 0x35, 0x35, 0x42, 0x53, 0x65, 0x72, 0x72, 0x61, 0x6e, 0x6f, 0x48, 0x6f, 0x74,
		0x77, 0x61, 0x76, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x20, 0x56, 0x38, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x48, 0x6f, 0x74, 0x20, 0x36, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x52, 0x38, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x58, 0x31, 0x36, 0x43, 0x79, 0x62, 0x65,
		0x72, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x4d, 0x31,
		0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x52, 0x36, 0x30, 0x48, 0x6f, 0x77, 0x48, 0x54, 0x2d,
		0x31, 0x30, 0x30, 0x31, 0x47, 0x20, 0x47, 0x6f, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x48, 0x54, 0x2d,
		0x24, 0x31, 0x48, 0x75, 0x61, 0x64, 0x6f, 0x6f, 0x48, 0x75, 0x61, 0x67, 0x61, 0x6e, 0x48, 0x75,
		0x61, 0x76, 0x69, 0x4b, 0x48, 0x41, 0x54, 0x41, 0x52, 0x20, 0x48, 0x2d, 0x32, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x48, 0x75, 0x61, 0x77, 0x65, 0x69, 0x39, 0x53, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64,
		0x20, 0x44, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x44, 0x33, 0x41, 0x73, 0x63, 0x65,
		0x6e, 0x64, 0x20, 0x59, 0x33, 0x32, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x33,
		0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x43, 0x41, 0x73, 0x63, 0x65,
		0x6e, 0x64, 0x20, 0x47, 0x33, 0x30, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x35,
		0x32, 0x37, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x36, 0x32, 0x30, 0x53, 0x41, 0x73,
		0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x36, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20,
		0x47, 0x37, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x37, 0x41, 0x73, 0x63, 0x65, 0x6e,
		0x64, 0x20, 0x47, 0x37, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x31, 0x41,
		0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x58, 0x54, 0x32, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20,
		0x59, 0x32, 0x32, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x35, 0x30, 0x41,
		0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x36, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64,
		0x20, 0x47, 0x37, 0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x45, 0x6e, 0x6a,
		0x6f, 0x79, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20,
		0x31, 0x30, 0x45, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x53, 0x45, 0x6e, 0x6a, 0x6f,
		0x79, 0x20, 0x35, 0x53, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x36, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x36, 0x53, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20,
		0x37, 0x53, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6e,
		0x6a, 0x6f, 0x79, 0x20, 0x38, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x38, 0x65, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x39,
		0x65, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x6e, 0x6a,
		0x6f, 0x79, 0x20, 0x5a, 0x20, 0x35, 0x47, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20,
		0x53, 0x45, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x35, 0x47, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x65, 0x46, 0x75, 0x73, 0x69, 0x6f,
		0x6e, 0x20, 0x32, 0x59, 0x36, 0x70, 0x47, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x36, 0x32, 0x31, 0x47, 0x52, 0x33, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x52, 0x35, 0x47, 0x52, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x37, 0x29, 0x47, 0x58, 0x38, 0x47, 0x38, 0x50, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x42,
		0x52, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x50, 0x35, 0x30, 0x42, 0x41, 0x4c, 0x2d, 0x41, 0x4c, 0x30,
		0x30, 0x50, 0x35, 0x30, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x49, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x32, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x32, 0x30, 0x49, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x33, 0x30, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x49, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x33, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x43, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34,
		0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34,
		0x43, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x54, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x41, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x35, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x43, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x58, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35,
		0x30, 0x20, 0x53, 0x45, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47,
		0x4c, 0x53, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x30,
		0x47, 0x49, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x30,
		0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x41, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x36, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x43, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x37, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x41, 0x20, 0x50, 0x72, 0x6f,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x69,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x58,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x38, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x53, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x58, 0x20,
		0x4d, 0x61, 0x78, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x39, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x69, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x39, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x58, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x39, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x48, 0x6f, 0x6c, 0x6c, 0x79, 0x20, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x32, 0x45,
		0x4c, 0x5a, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x20, 0x33, 0x45, 0x4c, 0x5a, 0x2d, 0x41, 0x4e, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x4c, 0x5a,
		0x2d, 0x41, 0x4e, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63,
		0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x4d, 0x47, 0x49, 0x2d, 0x41, 0x4e, 0x30, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x31, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x33, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x34, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x34, 0x30, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50,
		0x34, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x45, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x34, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20,
		0x34, 0x54, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x20, 0x50,
		0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x54, 0x4e,
		0x45, 0x57, 0x2d, 0x41, 0x4e, 0x39, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x35, 0x20, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x58, 0x32, 0x30, 0x20, 0x53, 0x45, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x37, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20,
		0x35, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x32, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38, 0x41, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x39, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56,
		0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x56, 0x34, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x38, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x56, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x39, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x31, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x59,
		0x36, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x59, 0x36, 0x20, 0x49, 0x49, 0x20, 0x43, 0x6f, 0x6d,
		0x70, 0x61, 0x63, 0x74, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x32, 0x30, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x20,
		0x4d, 0x61, 0x78, 0x4b, 0x4b, 0x47, 0x2d, 0x41, 0x4e, 0x37, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x58, 0x33, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x4e, 0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x33, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58,
		0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x34, 0x30,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58, 0x32, 0x49, 0x64, 0x65,
		0x6f, 0x73, 0x20, 0x58, 0x33, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58, 0x35, 0x4d, 0x61, 0x69,
		0x6d, 0x61, 0x6e, 0x67, 0x20, 0x35, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x38, 0x4d,
		0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x39, 0x54, 0x59, 0x48, 0x36, 0x30, 0x31, 0x4d, 0x4d,
		0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x39, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x58, 0x53, 0x54, 0x41, 0x48, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x32, 0x54, 0x45, 0x54, 0x2d, 0x41, 0x4e, 0x35, 0x30, 0x4d,
		0x61, 0x74, 0x65, 0x20, 0x58, 0x32, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x31, 0x30,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65,
		0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x52, 0x53, 0x4d,
		0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x58, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x4d,
		0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30,
		0x20, 0x52, 0x53, 0x20, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65, 0x20, 0x44, 0x65, 0x73, 0x69,
		0x67, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x45, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x4d, 0x61, 0x74,
		0x65, 0x20, 0x34, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x45, 0x4d, 0x61, 0x74, 0x65,
		0x20, 0x38, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x39, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74,
		0x65, 0x20, 0x52, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x52, 0x53, 0x20, 0x50, 0x6f, 0x72, 0x73,
		0x63, 0x68, 0x65, 0x20, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x53,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x53, 0x45, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x49,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x53, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x33, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33, 0x69, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x34, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x34, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x69, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x35, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x36,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x36, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x36, 0x20,
		0x53, 0x45, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x20, 0x53,
		0x45, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x69, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x38, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x69, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x35,
		0x47, 0x4a, 0x53, 0x43, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20,
		0x53, 0x45, 0x20, 0x35, 0x47, 0x4a, 0x53, 0x43, 0x2d, 0x41, 0x4c, 0x35, 0x30, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x38, 0x20, 0x53, 0x45, 0x20, 0x34, 0x47, 0x43, 0x48, 0x4c, 0x2d, 0x41, 0x4c, 0x36,
		0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x53, 0x45, 0x20, 0x56, 0x69, 0x74, 0x61, 0x6c,
		0x69, 0x74, 0x79, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x39, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x6f, 0x75, 0x74,
		0x68, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x59, 0x36, 0x30, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x20, 0x73, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x5a, 0x50, 0x31,
		0x30, 0x50, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x31, 0x30, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x50, 0x32, 0x30, 0x50, 0x32,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x33, 0x30,
		0x50, 0x33, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50,
		0x34, 0x30, 0x50, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x34, 0x30, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x20, 0x45, 0x50, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x45, 0x20, 0x4e,
		0x46, 0x43, 0x50, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x38, 0x50, 0x38, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75,
		0x6d, 0x50, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x50,
		0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x50, 0x39, 0x50,
		0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72,
		0x65, 0x6d, 0x69, 0x75, 0x6d, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x39,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x39, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x58, 0x55, 0x24, 0x31, 0x59, 0x20, 0x4d, 0x61, 0x78,
		0x59, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x38, 0x29, 0x59, 0x33, 0x49, 0x49, 0x59, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59,
		0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x59, 0x35, 0x20, 0x6c, 0x69, 0x74, 0x65, 0x59, 0x35, 0x70, 0x59, 0x35, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x37, 0x29, 0x59, 0x35, 0x49, 0x49, 0x59, 0x36, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x36, 0x29, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x36, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x36, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x36, 0x20, 0x50,
		0x72, 0x6f, 0x59, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59,
		0x36, 0x32, 0x35, 0x59, 0x36, 0x33, 0x35, 0x59, 0x36, 0x33, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x20, 0x53, 0x49, 0x4d, 0x59, 0x36, 0x49, 0x49, 0x59, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x59, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x37, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x59, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x59, 0x37, 0x20, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x37, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x39, 0x59, 0x37,
		0x61, 0x59, 0x37, 0x70, 0x59, 0x38, 0x70, 0x59, 0x39, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x59, 0x39, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x39, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x39, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61,
		0x6d, 0x20, 0x53, 0x47, 0x54, 0x33, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x36, 0x50, 0x51, 0x75,
		0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x30, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x42, 0x41, 0x48, 0x34, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x4d,
		0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x4d, 0x61, 0x74, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61,
		0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x4d, 0x61,
		0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d,
		0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x4d, 0x61, 0x74, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x54, 0x31, 0x30, 0x73, 0x20, 0x57, 0x69, 0x46, 0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x57,
		0x61, 0x74, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38, 0x2e, 0x30, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x32, 0x4b, 0x52, 0x4a, 0x32, 0x2d, 0x57, 0x30, 0x39,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x31, 0x30, 0x2e,
		0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x52, 0x4a, 0x32, 0x2d, 0x41, 0x4e, 0x30, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x31, 0x30, 0x2e,
		0x34, 0x22, 0x20, 0x35, 0x47, 0x42, 0x52, 0x54, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x42, 0x52, 0x54, 0x2d, 0x41, 0x4e, 0x30, 0x39, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31,
		0x22, 0x20, 0x35, 0x47, 0x4b, 0x52, 0x4a, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x35,
		0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x36, 0x20, 0x31, 0x30,
		0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x4f, 0x42, 0x32, 0x2d, 0x57, 0x30, 0x39,
		0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x37, 0x20, 0x38,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47, 0x52, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x4e, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x36, 0x41, 0x47, 0x52, 0x2d, 0x41,
		0x4c, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58,
		0x36, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x36, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35, 0x20, 0x38, 0x43, 0x33, 0x20, 0x39, 0x2e, 0x36, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x43, 0x33, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x43, 0x33, 0x20, 0x39,
		0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x43, 0x33, 0x20, 0x39, 0x2e, 0x37,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4d, 0x61, 0x74,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x4d, 0x61,
		0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e,
		0x38, 0x22, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x32, 0x2e, 0x36, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x36, 0x22, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x38,
		0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x58, 0x32, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x38, 0x2e, 0x34, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x50, 0x61, 0x64, 0x20, 0x4d, 0x36, 0x20, 0x38, 0x2e, 0x34, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x4d, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33, 0x20, 0x38, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x30,
		0x42, 0x54, 0x56, 0x2d, 0x44, 0x4c, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64,
		0x20, 0x4d, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x35, 0x41, 0x47,
		0x4d, 0x33, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47,
		0x4d, 0x33, 0x2d, 0x41, 0x4c, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x54, 0x35, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64,
		0x20, 0x54, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x54, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x33, 0x20,
		0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x33, 0x20, 0x38, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x33, 0x20, 0x37, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x37, 0x2e, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x37, 0x2e, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x31, 0x30, 0x2e,
		0x30, 0x22, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54,
		0x31, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x20,
		0x37, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x20, 0x38, 0x41, 0x47,
		0x53, 0x33, 0x4b, 0x2d, 0x57, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x54, 0x31, 0x30, 0x73, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41,
		0x47, 0x53, 0x33, 0x4b, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64,
		0x20, 0x54, 0x31, 0x30, 0x73, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x41,
		0x47, 0x52, 0x4b, 0x2d, 0x57, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x54, 0x31, 0x30, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47, 0x52,
		0x4b, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31,
		0x30, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x4d, 0x4f, 0x4e, 0x2d, 0x41, 0x4c, 0x31, 0x39, 0x42, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35, 0x20, 0x38, 0x22, 0x42, 0x5a, 0x49, 0x2d, 0x41,
		0x4c, 0x30, 0x30, 0x43, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42, 0x5a, 0x54, 0x33,
		0x2d, 0x57, 0x30, 0x39, 0x43, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x42, 0x5a, 0x54, 0x33, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x43, 0x35, 0x20, 0x31, 0x30, 0x2e,
		0x34, 0x22, 0x42, 0x5a, 0x44, 0x2d, 0x57, 0x30, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x43, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x42, 0x5a,
		0x44, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43,
		0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x44, 0x20, 0x54, 0x61, 0x62, 0x20, 0x43, 0x6f, 0x6d, 0x70,
		0x61, 0x63, 0x74, 0x64, 0x74, 0x61, 0x62, 0x20, 0x64, 0x2d, 0x30, 0x31, 0x4b, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x32, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x65,
		0x6f, 0x73, 0x24, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x24, 0x31, 0x48, 0x75, 0x72, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x65, 0x49, 0x67, 0x6e, 0x69, 0x74,
		0x65, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x47, 0x69, 0x67, 0x61, 0x47, 0x6c, 0x61, 0x7a, 0x65,
		0x43, 0x6f, 0x62, 0x72, 0x61, 0x44, 0x5a, 0x49, 0x52, 0x45, 0x44, 0x7a, 0x69, 0x72, 0x65, 0x53,
		0x41, 0x47, 0x45, 0x53, 0x61, 0x67, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x56, 0x75, 0x6c, 0x63, 0x61,
		0x6e, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x6d, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x69, 0x64, 0x67, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52,
		0x75, 0x73, 0x68, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x72, 0x69, 0x73, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x32, 0x30, 0x32, 0x31, 0x49, 0x72, 0x69, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x50, 0x6c, 0x75, 0x73,
		0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x78, 0x63, 0x69, 0x74,
		0x65, 0x48, 0x75, 0x73, 0x6b, 0x65, 0x65, 0x56, 0x75, 0x6c, 0x6b, 0x61, 0x6e, 0x6f, 0x48, 0x79,
		0x75, 0x6e, 0x64, 0x61, 0x69, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x53, 0x65,
		0x6f, 0x75, 0x6c, 0x20, 0x53, 0x38, 0x47, 0x32, 0x35, 0x35, 0x32, 0x33, 0x4b, 0x45, 0x74, 0x65,
		0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x47, 0x32, 0x33, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74,
		0x79, 0x20, 0x47, 0x32, 0x35, 0x47, 0x32, 0x35, 0x35, 0x32, 0x34, 0x4b, 0x45, 0x74, 0x65, 0x72,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x47, 0x32, 0x34, 0x47, 0x32, 0x34, 0x30, 0x32, 0x37, 0x4b, 0x45,
		0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x47, 0x32, 0x37, 0x57, 0x32, 0x35, 0x30, 0x34,
		0x32, 0x4c, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x57, 0x34, 0x32, 0x48, 0x50,
		0x35, 0x35, 0x34, 0x4f, 0x4c, 0x35, 0x30, 0x33, 0x46, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x59,
		0x4d, 0x49, 0x20, 0x35, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x79, 0x6d, 0x69, 0x20, 0x35,
		0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x54, 0x30, 0x37, 0x30, 0x31, 0x4c, 0x31, 0x36, 0x4b,
		0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x58, 0x4c, 0x48, 0x54, 0x31, 0x30, 0x30, 0x34, 0x4c, 0x49,
		0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x58, 0x4c, 0x4b, 0x6f, 0x72, 0x61,
		0x6c, 0x5f, 0x38, 0x57, 0x32, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x38, 0x57, 0x32, 0x48, 0x54,
		0x31, 0x30, 0x30, 0x34, 0x4c, 0x31, 0x36, 0x48, 0x54, 0x30, 0x37, 0x30, 0x34, 0x4b, 0x30, 0x38,
		0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x4d, 0x34, 0x48, 0x79, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x47, 0x42, 0x31, 0x48, 0x79, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x37, 0x57,
		0x44, 0x31, 0x48, 0x79, 0x76, 0x65, 0x50, 0x72, 0x79, 0x6d, 0x65, 0x20, 0x30, 0x31, 0x53, 0x54,
		0x30, 0x31, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x53, 0x54, 0x30, 0x31, 0x49, 0x4b, 0x49, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47, 0x4f, 0x35, 0x5f, 0x35, 0x35, 0x47, 0x6f, 0x20, 0x35,
		0x2e, 0x35, 0x22, 0x42, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x47, 0x4f, 0x35, 0x35, 0x42, 0x6c, 0x65,
		0x73, 0x73, 0x20, 0x47, 0x6f, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x42, 0x4c, 0x45, 0x53, 0x53, 0x50,
		0x4c, 0x55, 0x53, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x4b, 0x55,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x54, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x4d, 0x4f, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x51, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x32, 0x53, 0x32, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x41, 0x32,
		0x53, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x38, 0x30, 0x20, 0x48, 0x65, 0x72,
		0x6f, 0x53, 0x38, 0x39, 0x20, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x38, 0x38, 0x20,
		0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x39, 0x39, 0x20, 0x4f, 0x63, 0x65,
		0x61, 0x6e, 0x53, 0x39, 0x38, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53, 0x38,
		0x37, 0x20, 0x52, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x53, 0x36, 0x37, 0x20, 0x42, 0x6c, 0x61, 0x73,
		0x74, 0x53, 0x37, 0x38, 0x20, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x51, 0x38, 0x20, 0x43, 0x6c, 0x61,
		0x72, 0x69, 0x74, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x49, 0x49,
		0x51, 0x54, 0x61, 0x62, 0x20, 0x58, 0x39, 0x49, 0x4e, 0x43, 0x41, 0x52, 0x49, 0x4e, 0x51, 0x49,
		0x4e, 0x53, 0x59, 0x53, 0x48, 0x4b, 0x39, 0x2d, 0x34, 0x30, 0x31, 0x30, 0x49, 0x51, 0x4d, 0x56,
		0x69, 0x76, 0x61, 0x6c, 0x64, 0x69, 0x4e, 0x65, 0x77, 0x74, 0x6f, 0x6e, 0x49, 0x52, 0x41, 0x44,
		0x75, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x54, 0x49, 0x54, 0x2d, 0x31, 0x31,
		0x30, 0x31, 0x2d, 0x51, 0x55, 0x41, 0x44, 0x31, 0x31, 0x30, 0x31, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x49, 0x55, 0x4e, 0x49, 0x49, 0x63, 0x6f, 0x6e, 0x42, 0x49, 0x54, 0x4e, 0x54, 0x2d, 0x33, 0x35,
		0x30, 0x36, 0x4d, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72,
		0x79, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x46, 0x48, 0x44, 0x4e, 0x54, 0x2d, 0x30, 0x37, 0x30,
		0x34, 0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x4c, 0x45, 0x4e,
		0x54, 0x2d, 0x30, 0x39, 0x30, 0x39, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68,
		0x6f, 0x72, 0x20, 0x49, 0x5a, 0x4e, 0x54, 0x2d, 0x31, 0x30, 0x30, 0x39, 0x54, 0x4e, 0x65, 0x74,
		0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x71, 0x75, 0x61, 0x64, 0x20, 0x49, 0x49,
		0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x4c, 0x45, 0x4e, 0x54,
		0x2d, 0x31, 0x30, 0x31, 0x37, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f,
		0x72, 0x20, 0x33, 0x47, 0x20, 0x71, 0x75, 0x61, 0x64, 0x4e, 0x54, 0x2d, 0x33, 0x36, 0x30, 0x31,
		0x50, 0x2f, 0x33, 0x36, 0x30, 0x32, 0x50, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x50, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x33, 0x36, 0x30, 0x33, 0x50, 0x4e,
		0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x33, 0x47, 0x20,
		0x53, 0x6c, 0x69, 0x6d, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x32, 0x53, 0x4e, 0x65, 0x74, 0x54,
		0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x48, 0x44, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x33,
		0x38, 0x30, 0x35, 0x43, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x61, 0x74, 0x20,
		0x33, 0x47, 0x20, 0x71, 0x75, 0x61, 0x64, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x31, 0x53, 0x4e,
		0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x33, 0x47, 0x20, 0x64, 0x75, 0x6f,
		0x4e, 0x54, 0x2d, 0x33, 0x39, 0x30, 0x35, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54,
		0x68, 0x6f, 0x72, 0x20, 0x5a, 0x58, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x30, 0x37, 0x30, 0x31,
		0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x6e, 0x65, 0x74, 0x4e,
		0x54, 0x2d, 0x30, 0x38, 0x30, 0x35, 0x43, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b,
		0x61, 0x74, 0x20, 0x4d, 0x58, 0x4e, 0x54, 0x2d, 0x30, 0x39, 0x30, 0x32, 0x53, 0x4e, 0x65, 0x74,
		0x54, 0x41, 0x42, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x71, 0x75, 0x61, 0x64, 0x20, 0x52,
		0x58, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x5f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x33, 0x47,
		0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x33, 0x47, 0x4e,
		0x54, 0x2d, 0x33, 0x37, 0x30, 0x32, 0x4d, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x61,
		0x74, 0x72, 0x69, 0x78, 0x20, 0x33, 0x47, 0x20, 0x64, 0x75, 0x6f, 0x4e, 0x54, 0x2d, 0x33, 0x37,
		0x30, 0x33, 0x4d, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78,
		0x20, 0x33, 0x47, 0x54, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x20, 0x55, 0x4c, 0x54, 0x52, 0x41,
		0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x4e, 0x54, 0x2d, 0x31, 0x35, 0x30, 0x31, 0x43, 0x43, 0x61, 0x6c, 0x6c, 0x69,
		0x73, 0x74, 0x6f, 0x20, 0x31, 0x30, 0x30, 0x54, 0x4f, 0x55, 0x43, 0x41, 0x4e, 0x20, 0x4e, 0x41,
		0x4e, 0x4f, 0x20, 0x34, 0x4b, 0x54, 0x6f, 0x75, 0x63, 0x61, 0x6e, 0x20, 0x4e, 0x61, 0x6e, 0x6f,
		0x20, 0x34, 0x4b, 0x54, 0x4f, 0x55, 0x43, 0x41, 0x4e, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20,
		0x34, 0x4b, 0x54, 0x6f, 0x75, 0x63, 0x61, 0x6e, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34,
		0x4b, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x24, 0x31, 0x49, 0x6d, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x46,
		0x6f, 0x63, 0x75, 0x73, 0x49, 0x46, 0x39, 0x30, 0x30, 0x31, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20,
		0x35, 0x49, 0x46, 0x39, 0x30, 0x30, 0x37, 0x49, 0x46, 0x39, 0x30, 0x32, 0x31, 0x54, 0x75, 0x72,
		0x62, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x46, 0x39, 0x30, 0x33, 0x35, 0x41,
		0x32, 0x49, 0x46, 0x39, 0x30, 0x30, 0x32, 0x4d, 0x35, 0x73, 0x49, 0x46, 0x39, 0x30, 0x30, 0x33,
		0x4d, 0x36, 0x73, 0x49, 0x46, 0x39, 0x30, 0x33, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20,
		0x33, 0x49, 0x46, 0x39, 0x30, 0x32, 0x39, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x49, 0x6e, 0x63, 0x68, 0x24, 0x31, 0x22, 0x49, 0x6e, 0x63, 0x6f, 0x50, 0x6c,
		0x61, 0x69, 0x6e, 0x32, 0x20, 0x53, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x20, 0x32, 0x53, 0x4d, 0x41,
		0x54, 0x54, 0x45, 0x52, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65,
		0x24, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x78, 0x42, 0x75, 0x7a, 0x7a, 0x41, 0x6c, 0x70,
		0x68, 0x61, 0x20, 0x4d, 0x61, 0x72, 0x76, 0x65, 0x6c, 0x53, 0x75, 0x72, 0x66, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x53, 0x75, 0x72, 0x66, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x47,
		0x53, 0x75, 0x72, 0x66, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x53, 0x75, 0x72, 0x66,
		0x20, 0x53, 0x70, 0x69, 0x63, 0x65, 0x53, 0x75, 0x72, 0x66, 0x20, 0x42, 0x72, 0x61, 0x76, 0x6f,
		0x53, 0x75, 0x72, 0x66, 0x20, 0x4e, 0x6f, 0x69, 0x72, 0x52, 0x61, 0x63, 0x65, 0x52, 0x61, 0x63,
		0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x61, 0x63, 0x65, 0x20, 0x42, 0x6f, 0x6c, 0x74, 0x52,
		0x61, 0x63, 0x65, 0x20, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x51, 0x52, 0x61, 0x63, 0x65, 0x20, 0x42,
		0x6f, 0x6c, 0x74, 0x20, 0x32, 0x52, 0x61, 0x63, 0x65, 0x20, 0x45, 0x61, 0x67, 0x6c, 0x65, 0x52,
		0x61, 0x63, 0x65, 0x20, 0x4a, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20,
		0x32, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x33, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x34, 0x5a, 0x65, 0x72,
		0x6f, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x5a, 0x65,
		0x72, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x36, 0x5a, 0x65,
		0x72, 0x6f, 0x20, 0x38, 0x69, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x38, 0x5a, 0x65, 0x72, 0x6f, 0x20,
		0x58, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x58, 0x20, 0x4e, 0x65, 0x6f, 0x48,
		0x6f, 0x74, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x48, 0x6f, 0x74, 0x20, 0x33, 0x48, 0x6f, 0x74, 0x20,
		0x53, 0x48, 0x6f, 0x74, 0x20, 0x53, 0x32, 0x48, 0x6f, 0x74, 0x20, 0x34, 0x48, 0x6f, 0x74, 0x20,
		0x34, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x35, 0x48, 0x6f, 0x74, 0x20, 0x35, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74,
		0x20, 0x37, 0x48, 0x6f, 0x74, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x38,
		0x48, 0x6f, 0x74, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x39, 0x48, 0x6f,
		0x74, 0x20, 0x39, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x48, 0x6f, 0x74, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x48, 0x6f, 0x74, 0x20,
		0x31, 0x30, 0x54, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x78,
		0x20, 0x58, 0x36, 0x38, 0x39, 0x44, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x73, 0x20, 0x4e, 0x46,
		0x43, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x78, 0x20, 0x58, 0x36, 0x38, 0x39, 0x48, 0x6f, 0x74,
		0x20, 0x31, 0x30, 0x73, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x69, 0x48, 0x6f, 0x74, 0x20, 0x53,
		0x33, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x31, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x48, 0x44,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x36, 0x53, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x34, 0x53, 0x35, 0x48, 0x6f, 0x74,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x34, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x35, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x36, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x38, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x69, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x31, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x48, 0x6f, 0x74, 0x20, 0x24, 0x31, 0x24, 0x32, 0x49, 0x6e, 0x66, 0x6f, 0x4b, 0x69, 0x74, 0x49,
		0x6e, 0x6b, 0x74, 0x69, 0x49, 0x6e, 0x6e, 0x4a, 0x6f, 0x6f, 0x58, 0x33, 0x48, 0x61, 0x6c, 0x6f,
		0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x58, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x48, 0x61, 0x6c, 0x6f, 0x20, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4c, 0x54, 0x45, 0x48,
		0x61, 0x6c, 0x6f, 0x20, 0x34, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x32, 0x20, 0x33, 0x47, 0x50, 0x72,
		0x6f, 0x20, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69,
		0x72, 0x65, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x75, 0x70, 0x65, 0x72,
		0x62, 0x5f, 0x50, 0x4c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x42, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x49, 0x6e, 0x6e, 0x6f, 0x73, 0x49, 0x6e, 0x6e, 0x6f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
		0x49, 0x4e, 0x4e, 0x4f, 0x24, 0x31, 0x49, 0x6e, 0x6f, 0x69, 0x49, 0x4e, 0x4f, 0x49, 0x50, 0x61,
		0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x2b, 0x33, 0x32, 0x50, 0x61, 0x64, 0x20, 0x32,
		0x2b, 0x33, 0x32, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x31, 0x2b, 0x31, 0x36,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x49, 0x4e, 0x4f, 0x49, 0x20, 0x65, 0x61, 0x73, 0x79, 0x70, 0x68,
		0x6f, 0x6e, 0x65, 0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x24, 0x31, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x24, 0x32, 0x29, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x69,
		0x61, 0x4e, 0x53, 0x2d, 0x50, 0x31, 0x31, 0x41, 0x38, 0x31, 0x30, 0x30, 0x31, 0x31, 0x2e, 0x36,
		0x22, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4e, 0x53, 0x2d, 0x50, 0x31,
		0x36, 0x41, 0x54, 0x30, 0x38, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x38, 0x22, 0x4e, 0x53, 0x2d, 0x50,
		0x30, 0x38, 0x41, 0x37, 0x31, 0x30, 0x30, 0x38, 0x22, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4e, 0x53,
		0x2d, 0x50, 0x31, 0x36, 0x41, 0x54, 0x37, 0x38, 0x35, 0x48, 0x44, 0x46, 0x6c, 0x65, 0x78, 0x20,
		0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x41, 0x46, 0x54, 0x45, 0x41,
		0x4d, 0x52, 0x33, 0x31, 0x31, 0x48, 0x44, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x41, 0x46,
		0x54, 0x4a, 0x4d, 0x53, 0x54, 0x31, 0x32, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x49, 0x6e, 0x74, 0x65, 0x78, 0x49, 0x4d, 0x30, 0x33, 0x31, 0x38, 0x4e, 0x44, 0x41, 0x71, 0x75,
		0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x33, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69,
		0x6f, 0x6e, 0x73, 0x20, 0x54, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x61, 0x20,
		0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x20,
		0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61,
		0x20, 0x46, 0x75, 0x6c, 0x76, 0x75, 0x20, 0x45, 0x35, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4a, 0x65,
		0x77, 0x65, 0x6c, 0x20, 0x32, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x20, 0x54, 0x72, 0x65, 0x61, 0x64,
		0x49, 0x6e, 0x76, 0x65, 0x6e, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x6e, 0x4b, 0x4d, 0x35, 0x50, 0x52,
		0x4f, 0x4b, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x72, 0x62, 0x69, 0x73, 0x49, 0x72, 0x69,
		0x73, 0x56, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x53, 0x56, 0x6f, 0x78, 0x20, 0x46, 0x6f, 0x72, 0x74,
		0x69, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x56, 0x65, 0x72, 0x6f, 0x56, 0x4f, 0x58, 0x20, 0x41, 0x6c,
		0x70, 0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x41, 0x6c, 0x70, 0x68,
		0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x4f, 0x58, 0x20, 0x53, 0x54, 0x45, 0x45, 0x4c, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x53, 0x74, 0x65, 0x65, 0x6c, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x56, 0x4f, 0x58, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x56, 0x6f, 0x78, 0x20, 0x41,
		0x6c, 0x70, 0x68, 0x61, 0x56, 0x4f, 0x58, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x56, 0x6f,
		0x78, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x56, 0x4f, 0x58, 0x20, 0x50, 0x4f, 0x50, 0x20,
		0x70, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x56, 0x4f, 0x58, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x6f, 0x78, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x5f, 0x50, 0x5f, 0x50, 0x52, 0x4f,
		0x4e, 0x65, 0x78, 0x74, 0x20, 0x50, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x53, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x49, 0x52, 0x53, 0x30, 0x30, 0x32, 0x2d, 0x31, 0x36, 0x49, 0x2d, 0x53, 0x36, 0x49,
		0x53, 0x32, 0x53, 0x58, 0x31, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x31, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x4a, 0x41, 0x59, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x50, 0x43, 0x20, 0x24, 0x31, 0x4a, 0x46, 0x6f, 0x6e, 0x65, 0x4a, 0x4b, 0x4c, 0x4a, 0x56, 0x43,
		0x4a, 0x65, 0x64, 0x69, 0x52, 0x65, 0x6d, 0x69, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x6d,
		0x69, 0x78, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4a, 0x65, 0x6b, 0x61, 0x4a, 0x4b, 0x20, 0x24, 0x31,
		0x20, 0x33, 0x47, 0x4a, 0x4b, 0x20, 0x24, 0x31, 0x4a, 0x65, 0x73, 0x79, 0x4a, 0x39, 0x53, 0x5f,
		0x50, 0x52, 0x4f, 0x4a, 0x39, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x69, 0x61, 0x6b, 0x65, 0x4a,
		0x4b, 0x2d, 0x24, 0x31, 0x4a, 0x69, 0x61, 0x79, 0x75, 0x47, 0x34, 0x2f, 0x47, 0x35, 0x4a, 0x59,
		0x2d, 0x24, 0x31, 0x4a, 0x69, 0x6e, 0x67, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x20, 0x34, 0x47,
		0x46, 0x72, 0x65, 0x73, 0x68, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x74, 0x7a, 0x20, 0x4d, 0x31, 0x48,
		0x69, 0x74, 0x20, 0x34, 0x47, 0x50, 0x61, 0x73, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61,
		0x73, 0x73, 0x20, 0x33, 0x47, 0x47, 0x6f, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x34, 0x47, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x33, 0x47, 0x53, 0x74,
		0x61, 0x72, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x69, 0x63, 0x61,
		0x73, 0x73, 0x6f, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x72, 0x6f, 0x6e, 0x46, 0x72, 0x65, 0x73,
		0x68, 0x42, 0x61, 0x73, 0x63, 0x6f, 0x20, 0x4e, 0x65, 0x6f, 0x42, 0x61, 0x73, 0x63, 0x6f, 0x20,
		0x4d, 0x35, 0x30, 0x30, 0x20, 0x33, 0x47, 0x42, 0x61, 0x73, 0x63, 0x6f, 0x20, 0x24, 0x31, 0x54,
		0x72, 0x65, 0x7a, 0x6f, 0x72, 0x20, 0x53, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x47, 0x4f,
		0x20, 0x4c, 0x32, 0x49, 0x47, 0x4f, 0x20, 0x24, 0x31, 0x4a, 0x69, 0x6f, 0x4a, 0x69, 0x6f, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x4a, 0x69, 0x76, 0x69, 0x52, 0x65, 0x76,
		0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65,
		0x20, 0x4b, 0x6c, 0x69, 0x63, 0x6b, 0x20, 0x24, 0x31, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20,
		0x56, 0x69, 0x65, 0x77, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x50, 0x6c, 0x75, 0x73, 0x58,
		0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x24, 0x31, 0x4a, 0x6f, 0x6c, 0x6c, 0x61, 0x4a, 0x6f, 0x79,
		0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x45, 0x5a, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4a, 0x75,
		0x6e, 0x69, 0x70, 0x65, 0x72, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x4a, 0x75, 0x6e,
		0x69, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x43, 0x65, 0x64, 0x61, 0x72, 0x23, 0x43, 0x54, 0x38, 0x43,
		0x54, 0x38, 0x4a, 0x75, 0x73, 0x74, 0x35, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x24, 0x31, 0x46,
		0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d,
		0x53, 0x70, 0x61, 0x63, 0x65, 0x72, 0x20, 0x32, 0x53, 0x53, 0x70, 0x61, 0x63, 0x65, 0x72, 0x20,
		0x32, 0x4a, 0x55, 0x53, 0x54, 0x35, 0x53, 0x50, 0x41, 0x43, 0x45, 0x52, 0x53, 0x70, 0x61, 0x63,
		0x65, 0x72, 0x42, 0x4c, 0x41, 0x53, 0x54, 0x45, 0x52, 0x20, 0x32, 0x42, 0x6c, 0x61, 0x73, 0x74,
		0x65, 0x72, 0x20, 0x32, 0x42, 0x4c, 0x41, 0x53, 0x54, 0x45, 0x52, 0x42, 0x6c, 0x61, 0x73, 0x74,
		0x65, 0x72, 0x4b, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x63, 0x65, 0x20, 0x32, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4b, 0x41, 0x54, 0x56, 0x31, 0x4b, 0x44, 0x44, 0x49, 0x69, 0x69, 0x64,
		0x61, 0x20, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x72, 0x20, 0x24, 0x31, 0x4b, 0x49, 0x4e, 0x47,
		0x5a, 0x4f, 0x4e, 0x45, 0x4b, 0x31, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b, 0x4f, 0x50, 0x4f,
		0x4b, 0x52, 0x45, 0x5a, 0x4b, 0x52, 0x49, 0x50, 0x4b, 0x24, 0x31, 0x4b, 0x34, 0x4b, 0x52, 0x4f,
		0x4e, 0x4f, 0x4e, 0x45, 0x54, 0x31, 0x31, 0x30, 0x30, 0x4e, 0x45, 0x54, 0x20, 0x31, 0x31, 0x30,
		0x30, 0x4e, 0x45, 0x54, 0x20, 0x24, 0x31, 0x4b, 0x54, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x4b, 0x61,
		0x61, 0x6e, 0x4b, 0x61, 0x69, 0x6f, 0x6d, 0x79, 0x4b, 0x61, 0x69, 0x43, 0x6c, 0x6f, 0x75, 0x64,
		0x20, 0x24, 0x31, 0x4b, 0x61, 0x6c, 0x6c, 0x65, 0x79, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x47,
		0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x4c,
		0x45, 0x4d, 0x45, 0x4e, 0x54, 0x20, 0x4d, 0x41, 0x58, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
		0x20, 0x4d, 0x61, 0x78, 0x53, 0x49, 0x4c, 0x56, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x58, 0x53, 0x69,
		0x6c, 0x76, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x24, 0x31, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x20, 0x51, 0x45, 0x6c,
		0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x51, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x50,
		0x52, 0x4f, 0x5f, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x32, 0x4b, 0x2d, 0x42, 0x4f, 0x4f, 0x4b, 0x24, 0x31, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
		0x20, 0x54, 0x56, 0x20, 0x24, 0x31, 0x4b, 0x61, 0x6e, 0x6a, 0x69, 0x4b, 0x4a, 0x2d, 0x4f, 0x42,
		0x30, 0x33, 0x43, 0x61, 0x74, 0x61, 0x20, 0x37, 0x4b, 0x4a, 0x2d, 0x47, 0x4f, 0x43, 0x48, 0x49,
		0x47, 0x6f, 0x63, 0x68, 0x69, 0x4b, 0x4a, 0x2d, 0x4f, 0x42, 0x30, 0x32, 0x41, 0x69, 0x6c, 0x75,
		0x20, 0x4d, 0x61, 0x78, 0x4b, 0x4a, 0x2d, 0x59, 0x55, 0x42, 0x49, 0x59, 0x75, 0x62, 0x69, 0x20,
		0x33, 0x47, 0x4b, 0x4a, 0x2d, 0x41, 0x4c, 0x46, 0x41, 0x52, 0x4b, 0x41, 0x6c, 0x66, 0x61, 0x4b,
		0x4a, 0x2d, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x34, 0x4b, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34,
		0x4b, 0x4b, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x6e, 0x4b, 0x39, 0x20, 0x4b, 0x61, 0x76, 0x61, 0x63,
		0x68, 0x20, 0x34, 0x47, 0x4b, 0x39, 0x20, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x34, 0x47, 0x4b,
		0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x31, 0x47, 0x42, 0x4b, 0x39, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x4b, 0x39,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x4b, 0x39, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x59, 0x75, 0x76, 0x61, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x39, 0x20, 0x49, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x4b,
		0x39, 0x20, 0x56, 0x69, 0x72, 0x61, 0x61, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72,
		0x61, 0x20, 0x53, 0x6c, 0x65, 0x65, 0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x61,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x34, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75,
		0x72, 0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x75, 0x72, 0x61,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x41, 0x6c, 0x66, 0x61, 0x20, 0x41, 0x31, 0x31, 0x34,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x4b, 0x39, 0x20, 0x56, 0x69, 0x72, 0x61, 0x61, 0x74, 0x20, 0x34,
		0x47, 0x4d, 0x41, 0x43, 0x48, 0x46, 0x49, 0x56, 0x45, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x46, 0x69,
		0x76, 0x65, 0x4d, 0x41, 0x43, 0x48, 0x4f, 0x4e, 0x45, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x41, 0x43, 0x48, 0x4f, 0x4e, 0x45, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69,
		0x75, 0x6d, 0x20, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x4f, 0x6e, 0x65, 0x54, 0x69, 0x74, 0x61, 0x6e,
		0x69, 0x75, 0x6d, 0x20, 0x53, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x74, 0x61, 0x6e,
		0x69, 0x75, 0x6d, 0x5f, 0x53, 0x39, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69,
		0x75, 0x6d, 0x20, 0x53, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69,
		0x75, 0x6d, 0x20, 0x53, 0x24, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x56,
		0x69, 0x73, 0x74, 0x61, 0x20, 0x34, 0x47, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20,
		0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x32, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20,
		0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d, 0x6f,
		0x67, 0x68, 0x75, 0x6c, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x46, 0x72, 0x61,
		0x6d, 0x65, 0x73, 0x20, 0x53, 0x37, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4f,
		0x63, 0x74, 0x61, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69,
		0x75, 0x6d, 0x20, 0x33, 0x44, 0x20, 0x50, 0x6c, 0x65, 0x78, 0x53, 0x32, 0x30, 0x35, 0x32, 0x47,
		0x42, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x53, 0x32, 0x35, 0x30, 0x20, 0x32,
		0x47, 0x42, 0x4b, 0x2d, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x46, 0x33, 0x4b, 0x2d, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x46, 0x33, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x6c, 0x65, 0x20, 0x56, 0x51, 0x75, 0x61,
		0x74, 0x74, 0x72, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x48, 0x44, 0x51, 0x75, 0x61, 0x74, 0x74,
		0x72, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x49, 0x50, 0x53, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72,
		0x6f, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x56, 0x52, 0x4b, 0x61, 0x74, 0x61, 0x49, 0x35, 0x54, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x42, 0x6f, 0x78, 0x20, 0x32, 0x4b, 0x61, 0x7a, 0x61, 0x6d,
		0x54, 0x6f, 0x72, 0x6e, 0x61, 0x64, 0x6f, 0x20, 0x33, 0x34, 0x38, 0x54, 0x68, 0x75, 0x6e, 0x64,
		0x65, 0x72, 0x20, 0x34, 0x35, 0x30, 0x57, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x20, 0x58,
		0x34, 0x2e, 0x30, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x20, 0x58, 0x24, 0x31, 0x2e, 0x24,
		0x32, 0x4b, 0x61, 0x7a, 0x75, 0x6e, 0x61, 0x4b, 0x41, 0x5a, 0x2d, 0x4e, 0x32, 0x30, 0x65, 0x54,
		0x61, 0x6c, 0x6b, 0x20, 0x4d, 0x59, 0x46, 0x4c, 0x49, 0x58, 0x4b, 0x65, 0x6d, 0x70, 0x6c, 0x65,
		0x72, 0x20, 0x26, 0x20, 0x53, 0x74, 0x72, 0x61, 0x75, 0x73, 0x73, 0x41, 0x6c, 0x75, 0x6d, 0x69,
		0x6e, 0x69, 0x20, 0x32, 0x41, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x69, 0x33, 0x41, 0x6c, 0x75, 0x6d, 0x69, 0x6e,
		0x69, 0x20, 0x33, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x50, 0x31, 0x4b, 0x45, 0x4d,
		0x50, 0x4c, 0x45, 0x52, 0x5f, 0x54, 0x56, 0x54, 0x56, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52,
		0x5f, 0x58, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x38, 0x5f, 0x50, 0x4c, 0x55, 0x53,
		0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x39, 0x4b,
		0x65, 0x6e, 0x65, 0x6b, 0x73, 0x69, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x74, 0x79, 0x53, 0x75, 0x6e,
		0x5a, 0x65, 0x74, 0x61, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x4b, 0x65, 0x6e, 0x78, 0x69, 0x6e, 0x64,
		0x61, 0x54, 0x68, 0x72, 0x65, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x69, 0x6e, 0x67, 0x73,
		0x20, 0x57, 0x24, 0x31, 0x4b, 0x69, 0x61, 0x6e, 0x6f, 0x53, 0x6c, 0x69, 0x6d, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x24, 0x31, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x20, 0x44, 0x55,
		0x41, 0x4c, 0x20, 0x33, 0x47, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x24, 0x31,
		0x2e, 0x24, 0x32, 0x22, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65,
		0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x22, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20,
		0x36, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x36, 0x20, 0x35, 0x2e, 0x38, 0x35,
		0x22, 0x24, 0x32, 0x20, 0x24, 0x33, 0x4b, 0x69, 0x6e, 0x67, 0x62, 0x6f, 0x78, 0x4b, 0x69, 0x6e,
		0x67, 0x73, 0x75, 0x6e, 0x4b, 0x69, 0x6f, 0x77, 0x61, 0x24, 0x31, 0x20, 0x43, 0x72, 0x69, 0x73,
		0x74, 0x61, 0x6c, 0x4b, 0x69, 0x76, 0x69, 0x24, 0x31, 0x20, 0x76, 0x24, 0x32, 0x4b, 0x6c, 0x69,
		0x70, 0x61, 0x64, 0x4b, 0x6f, 0x63, 0x61, 0x73, 0x6f, 0x4d, 0x36, 0x32, 0x30, 0x30, 0x4d, 0x37,
		0x32, 0x39, 0x4d, 0x24, 0x31, 0x4d, 0x58, 0x37, 0x38, 0x30, 0x4d, 0x38, 0x35, 0x31, 0x4d, 0x31,
		0x30, 0x35, 0x30, 0x73, 0x4d, 0x31, 0x30, 0x37, 0x30, 0x4d, 0x58, 0x37, 0x33, 0x36, 0x4b, 0x6f,
		0x64, 0x61, 0x6b, 0x49, 0x4d, 0x35, 0x53, 0x65, 0x72, 0x65, 0x6e, 0x20, 0x24, 0x31, 0x45, 0x6b,
		0x74, 0x72, 0x61, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x77, 0x61, 0x79, 0x20, 0x4c, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x77, 0x61, 0x79, 0x20, 0x24, 0x31, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x4b, 0x6f, 0x67, 0x61, 0x6e, 0x4b, 0x6f, 0x6d, 0x75, 0x4b,
		0x6f, 0x6e, 0x6b, 0x61, 0x45, 0x35, 0x36, 0x36, 0x30, 0x53, 0x56, 0x69, 0x76, 0x61, 0x20, 0x35,
		0x36, 0x36, 0x30, 0x73, 0x57, 0x38, 0x33, 0x30, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x38, 0x33,
		0x30, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x20, 0x24, 0x31, 0x57, 0x39, 0x39, 0x30, 0x54, 0x75,
		0x78, 0x65, 0x64, 0x6f, 0x20, 0x39, 0x39, 0x30, 0x4b, 0x6f, 0x6e, 0x72, 0x6f, 0x77, 0x42, 0x69,
		0x67, 0x43, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6f, 0x6c, 0x2d, 0x4b, 0x43, 0x6f, 0x6f, 0x6c, 0x20,
		0x35, 0x35, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x46, 0x69, 0x76, 0x65, 0x4a, 0x75, 0x73, 0x74, 0x20,
		0x35, 0x4c, 0x69, 0x6e, 0x6b, 0x20, 0x35, 0x43, 0x69, 0x74, 0x79, 0x20, 0x35, 0x35, 0x53, 0x6b,
		0x79, 0x20, 0x35, 0x35, 0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x35, 0x4b, 0x6f, 0x6f, 0x62, 0x65,
		0x65, 0x4b, 0x6f, 0x6f, 0x6c, 0x6e, 0x65, 0x65, 0x4b, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x20, 0x57, 0x35, 0x30, 0x32, 0x4b, 0x6f, 0x72, 0x69, 0x64, 0x79, 0x4b,
		0x6f, 0x73, 0x6c, 0x61, 0x6d, 0x4b, 0x72, 0xc3, 0xbc, 0x67, 0x65, 0x72, 0x26, 0x4d, 0x61, 0x74,
		0x7a, 0x4d, 0x4f, 0x56, 0x45, 0x38, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45, 0x20, 0x38,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x36, 0x5f, 0x6d, 0x69, 0x6e, 0x69,
		0x4d, 0x4f, 0x56, 0x45, 0x20, 0x36, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45, 0x20,
		0x24, 0x31, 0x44, 0x52, 0x49, 0x56, 0x45, 0x20, 0x34, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x4c,
		0x54, 0x45, 0x44, 0x52, 0x49, 0x56, 0x45, 0x20, 0x24, 0x31, 0x46, 0x4c, 0x4f, 0x57, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x4c, 0x4f, 0x57, 0x20, 0x36, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x46, 0x4c, 0x4f, 0x57, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x34, 0x20, 0x24,
		0x31, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x34, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x35, 0x20, 0x24, 0x31,
		0x4c, 0x49, 0x56, 0x45, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x49, 0x56, 0x45, 0x20,
		0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x24, 0x31, 0x53, 0x4c, 0x49,
		0x56, 0x45, 0x20, 0x24, 0x31, 0x4d, 0x4f, 0x56, 0x45, 0x20, 0x39, 0x45, 0x41, 0x47, 0x4c, 0x45,
		0x20, 0x24, 0x31, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24,
		0x31, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20,
		0x37, 0x2e, 0x31, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4b, 0x75,
		0x6c, 0x69, 0x61, 0x6f, 0x4b, 0x75, 0x6c, 0x74, 0x4b, 0x75, 0x6d, 0x61, 0x69, 0x4b, 0x75, 0x72,
		0x69, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x43, 0x31, 0x34, 0x35, 0x30, 0x30, 0x4b, 0x79,
		0x6f, 0x63, 0x65, 0x72, 0x61, 0x4d, 0x69, 0x6c, 0x61, 0x6e, 0x6f, 0x4f, 0x6e, 0x65, 0x20, 0x53,
		0x34, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x36, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x38, 0x52, 0x69, 0x73,
		0x65, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x47, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x45, 0x44,
		0x69, 0x67, 0x6e, 0x6f, 0x20, 0x43, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x4a, 0x44, 0x69, 0x67,
		0x6e, 0x6f, 0x20, 0x54, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x20, 0x32, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x52, 0x61, 0x66, 0x72, 0x65,
		0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x42, 0x58, 0x4d, 0x69, 0x72, 0x61, 0x69, 0x65, 0x20, 0x46,
		0x49, 0x6e, 0x66, 0x6f, 0x62, 0x61, 0x72, 0x20, 0x58, 0x56, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x48,
		0x79, 0x64, 0x72, 0x6f, 0x20, 0x45, 0x44, 0x47, 0x45, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x58,
		0x54, 0x52, 0x4d, 0x43, 0x36, 0x37, 0x33, 0x30, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x49, 0x43,
		0x4f, 0x4e, 0x43, 0x36, 0x37, 0x35, 0x30, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x45, 0x4c, 0x49,
		0x54, 0x45, 0x43, 0x36, 0x35, 0x33, 0x30, 0x4e, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x4c, 0x49,
		0x46, 0x45, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x57, 0x41, 0x56, 0x45, 0x43, 0x36, 0x37, 0x34,
		0x33, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x52, 0x65, 0x61, 0x63, 0x68, 0x44, 0x75, 0x72, 0x61,
		0x46, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x50,
		0x72, 0x6f, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x32, 0x45, 0x37, 0x31, 0x31, 0x30, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x4b, 0x43, 0x2d, 0x53, 0x37, 0x30, 0x31, 0x54,
		0x6f, 0x72, 0x71, 0x75, 0x65, 0x4b, 0x59, 0x47, 0x30, 0x31, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65,
		0x20, 0x35, 0x47, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x53, 0x4d, 0x69, 0x72, 0x61, 0x69, 0x65,
		0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x31, 0x45, 0x61, 0x73, 0x79, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x72, 0x76, 0x65,
		0x72, 0x61, 0x4d, 0x61, 0x6d, 0x6f, 0x72, 0x69, 0x6e, 0x6f, 0x20, 0x35, 0x47, 0x72, 0x61, 0x74,
		0x69, 0x6e, 0x61, 0x20, 0x34, 0x47, 0x47, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x61, 0x20, 0x4b, 0x59,
		0x56, 0x34, 0x38, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x58, 0x30, 0x31, 0x54, 0x6f, 0x72,
		0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x32, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30,
		0x33, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x34, 0x42, 0x61, 0x73, 0x69, 0x6f,
		0x42, 0x61, 0x73, 0x69, 0x6f, 0x20, 0x34, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x20, 0x33, 0x4b, 0x61,
		0x6e, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f, 0x51, 0x75, 0x61, 0x20, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x51, 0x58,
		0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x51, 0x5a, 0x51, 0x75, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x51, 0x5a, 0x31, 0x30, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x51, 0x5a, 0x38, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x30, 0x31, 0x52, 0x61, 0x66,
		0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x62, 0x61, 0x72, 0x20, 0x41, 0x30, 0x33, 0x55, 0x72, 0x62,
		0x61, 0x6e, 0x6f, 0x20, 0x4c, 0x30, 0x31, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x4c, 0x30,
		0x32, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x4c, 0x30, 0x33, 0x55, 0x72, 0x62, 0x61, 0x6e,
		0x6f, 0x20, 0x56, 0x30, 0x31, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x56, 0x30, 0x32, 0x55,
		0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x56, 0x30, 0x33, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72,
		0x63, 0x65, 0x20, 0x58, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x33, 0x42, 0x72, 0x69, 0x67, 0x61,
		0x64, 0x69, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x53, 0x63, 0x6f, 0x75, 0x74, 0x4c, 0x75, 0x63,
		0x65, 0x4b, 0x61, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f, 0x20, 0x32, 0x55,
		0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x53,
		0x32, 0x31, 0x35, 0x31, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x4b, 0x5a, 0x20, 0x24, 0x31, 0x24, 0x31,
		0x2d, 0x24, 0x32, 0x4b, 0x79, 0x6f, 0x77, 0x6f, 0x6e, 0x4b, 0x7a, 0x65, 0x6e, 0x55, 0x72, 0x65,
		0x6b, 0x69, 0x5f, 0x55, 0x31, 0x55, 0x72, 0x65, 0x6b, 0x69, 0x20, 0x55, 0x31, 0x56, 0x69, 0x63,
		0x74, 0x6f, 0x72, 0x20, 0x56, 0x31, 0x52, 0x45, 0x58, 0x20, 0x52, 0x58, 0x52, 0x65, 0x78, 0x20,
		0x52, 0x58, 0x44, 0x41, 0x52, 0x54, 0x20, 0x4b, 0x5a, 0x30, 0x37, 0x44, 0x61, 0x72, 0x74, 0x20,
		0x4b, 0x5a, 0x30, 0x37, 0x4c, 0x2d, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x24, 0x31, 0x53, 0x61, 0x70, 0x70, 0x68, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31,
		0x4c, 0x41, 0x49, 0x51, 0x4c, 0x43, 0x54, 0x4c, 0x45, 0x4d, 0x46, 0x4f, 0x4c, 0x47, 0x44, 0x69,
		0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x44, 0x4d, 0x2d, 0x24,
		0x31, 0x4c, 0x37, 0x30, 0x46, 0x37, 0x30, 0x4c, 0x39, 0x30, 0x4c, 0x47, 0x2d, 0x44, 0x33, 0x37,
		0x33, 0x4c, 0x38, 0x30, 0x4c, 0x47, 0x2d, 0x44, 0x33, 0x34, 0x30, 0x46, 0x38, 0x4c, 0x37, 0x30,
		0x20, 0x54, 0x72, 0x69, 0x4c, 0x47, 0x2d, 0x44, 0x31, 0x32, 0x35, 0x4c, 0x33, 0x30, 0x4c, 0x47,
		0x2d, 0x58, 0x31, 0x34, 0x35, 0x4c, 0x36, 0x30, 0x4c, 0x47, 0x2d, 0x58, 0x31, 0x33, 0x35, 0x4c,
		0x36, 0x30, 0x69, 0x4c, 0x47, 0x2d, 0x44, 0x32, 0x38, 0x35, 0x4c, 0x36, 0x35, 0x4c, 0x4d, 0x2d,
		0x58, 0x32, 0x31, 0x30, 0x41, 0x50, 0x4d, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x34,
		0x4c, 0x47, 0x2d, 0x50, 0x35, 0x30, 0x35, 0x52, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30, 0x56,
		0x50, 0x50, 0x5a, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x32, 0x30, 0x50,
		0x4d, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x45, 0x6d, 0x70, 0x69, 0x72, 0x65, 0x4c,
		0x47, 0x2d, 0x53, 0x50, 0x32, 0x30, 0x30, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x44,
		0x79, 0x6e, 0x61, 0x73, 0x74, 0x79, 0x4c, 0x47, 0x4c, 0x53, 0x36, 0x37, 0x35, 0x54, 0x72, 0x69,
		0x62, 0x75, 0x74, 0x65, 0x20, 0x35, 0x4c, 0x47, 0x2d, 0x46, 0x35, 0x37, 0x30, 0x42, 0x61, 0x6e,
		0x64, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x32, 0x47, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47,
		0x33, 0x4c, 0x47, 0x2d, 0x44, 0x37, 0x32, 0x32, 0x47, 0x33, 0x53, 0x47, 0x33, 0x20, 0x53, 0x74,
		0x79, 0x6c, 0x75, 0x73, 0x47, 0x33, 0x20, 0x42, 0x65, 0x61, 0x74, 0x4c, 0x47, 0x2d, 0x46, 0x34,
		0x36, 0x30, 0x47, 0x33, 0x20, 0x43, 0x61, 0x74, 0x2e, 0x20, 0x36, 0x4c, 0x47, 0x2d, 0x44, 0x37,
		0x32, 0x34, 0x47, 0x33, 0x73, 0x47, 0x34, 0x47, 0x34, 0x63, 0x47, 0x34, 0x20, 0x53, 0x74, 0x79,
		0x6c, 0x75, 0x73, 0x4c, 0x47, 0x2d, 0x48, 0x37, 0x33, 0x36, 0x47, 0x34, 0x73, 0x4c, 0x47, 0x2d,
		0x48, 0x37, 0x33, 0x35, 0x47, 0x34, 0x20, 0x42, 0x65, 0x61, 0x74, 0x47, 0x35, 0x47, 0x35, 0x20,
		0x53, 0x45, 0x47, 0x36, 0x4c, 0x4d, 0x2d, 0x51, 0x38, 0x35, 0x30, 0x47, 0x37, 0x20, 0x46, 0x69,
		0x74, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x31, 0x30, 0x47, 0x37, 0x20, 0x4f, 0x6e, 0x65, 0x47, 0x20,
		0x46, 0x6c, 0x65, 0x78, 0x4c, 0x47, 0x2d, 0x48, 0x39, 0x35, 0x30, 0x47, 0x20, 0x46, 0x6c, 0x65,
		0x78, 0x20, 0x32, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x4d, 0x2d,
		0x47, 0x38, 0x35, 0x30, 0x47, 0x38, 0x58, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d,
		0x47, 0x38, 0x31, 0x30, 0x47, 0x38, 0x53, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x57, 0x69, 0x6e,
		0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x48, 0x34, 0x31, 0x30, 0x4b, 0x32, 0x30, 0x4c,
		0x47, 0x4d, 0x53, 0x33, 0x39, 0x35, 0x46, 0x36, 0x30, 0x41, 0x4b, 0x41, 0x4c, 0x4d, 0x2d, 0x4b,
		0x39, 0x32, 0x30, 0x4b, 0x39, 0x32, 0x4c, 0x47, 0x4c, 0x34, 0x31, 0x43, 0x55, 0x6c, 0x74, 0x69,
		0x6d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x4c, 0x47, 0x4c, 0x53, 0x36, 0x36, 0x30, 0x54, 0x72, 0x69,
		0x62, 0x75, 0x74, 0x65, 0x4d, 0x61, 0x67, 0x6e, 0x61, 0x4c, 0x47, 0x4c, 0x36, 0x33, 0x42, 0x4c,
		0x46, 0x69, 0x65, 0x73, 0x74, 0x61, 0x42, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x32, 0x4c, 0x20, 0x42,
		0x65, 0x6c, 0x6c, 0x6f, 0x4c, 0x20, 0x46, 0x69, 0x6e, 0x6f, 0x52, 0x69, 0x73, 0x69, 0x6f, 0x52,
		0x69, 0x73, 0x69, 0x6f, 0x20, 0x32, 0x58, 0x33, 0x30, 0x30, 0x53, 0x70, 0x72, 0x65, 0x65, 0x4c,
		0x47, 0x4d, 0x2d, 0x58, 0x34, 0x30, 0x31, 0x53, 0x58, 0x34, 0x30, 0x30, 0x58, 0x35, 0x30, 0x30,
		0x4c, 0x47, 0x2d, 0x46, 0x36, 0x32, 0x30, 0x4b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x75, 0x73, 0x20, 0x4f, 0x6e, 0x65, 0x4c, 0x47, 0x2d, 0x45, 0x39, 0x37, 0x35, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20,
		0x47, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x47, 0x2d, 0x45, 0x34, 0x33, 0x35, 0x66, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x33, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x4c, 0x34, 0x20, 0x49, 0x49, 0x4c, 0x47, 0x2d, 0x45, 0x34, 0x36, 0x37, 0x66, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x34, 0x20, 0x49, 0x49, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x4c, 0x47, 0x2d, 0x45, 0x34, 0x36, 0x30, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20,
		0x4c, 0x35, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x31, 0x20,
		0x49, 0x49, 0x4c, 0x47, 0x2d, 0x50, 0x38, 0x37, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
		0x20, 0x46, 0x35, 0x4c, 0x47, 0x4d, 0x53, 0x35, 0x30, 0x30, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x46, 0x36, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x69, 0x74, 0x20, 0x24,
		0x31, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x32, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x4c, 0x2d, 0x30, 0x31, 0x44, 0x50, 0x52, 0x41, 0x44,
		0x41, 0x20, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x2d, 0x30, 0x32, 0x44, 0x4c, 0x2d, 0x30,
		0x37, 0x43, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,
		0x20, 0x4c, 0x2d, 0x30, 0x37, 0x43, 0x56, 0x32, 0x30, 0x51, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75,
		0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x38, 0x30, 0x31, 0x4c, 0x47, 0x51, 0x20, 0x53, 0x74, 0x79,
		0x6c, 0x75, 0x73, 0x4c, 0x47, 0x2d, 0x4d, 0x34, 0x30, 0x30, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73,
		0x20, 0x33, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73,
		0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x37, 0x51, 0x37, 0x2b, 0x51, 0x38, 0x2b, 0x51,
		0x38, 0x51, 0x39, 0x51, 0x37, 0x30, 0x51, 0x35, 0x32, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x50, 0x58, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20,
		0x32, 0x4c, 0x47, 0x4c, 0x53, 0x37, 0x37, 0x35, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32, 0x53,
		0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32, 0x20, 0x56, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x33, 0x47, 0x20, 0x53, 0x74, 0x79,
		0x6c, 0x6f, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x33, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x33,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x34, 0x53, 0x74, 0x79, 0x6c,
		0x6f, 0x20, 0x35, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x36, 0x47, 0x37, 0x20, 0x54, 0x68, 0x69,
		0x6e, 0x51, 0x4c, 0x47, 0x2d, 0x4d, 0x31, 0x35, 0x33, 0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65,
		0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30, 0x43, 0x4d, 0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65,
		0x20, 0x32, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x72, 0x65,
		0x6d, 0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72, 0x65,
		0x6d, 0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x4d, 0x2d, 0x58,
		0x35, 0x32, 0x35, 0x51, 0x36, 0x30, 0x4c, 0x4d, 0x2d, 0x4b, 0x33, 0x31, 0x35, 0x49, 0x4d, 0x57,
		0x33, 0x31, 0x4b, 0x33, 0x31, 0x4c, 0x47, 0x4c, 0x34, 0x32, 0x33, 0x44, 0x4c, 0x53, 0x6f, 0x6c,
		0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x47, 0x2d, 0x46, 0x38, 0x32, 0x30, 0x4c, 0x55, 0x4c, 0x4d,
		0x2d, 0x58, 0x32, 0x31, 0x30, 0x4b, 0x58, 0x32, 0x58, 0x20, 0x43, 0x61, 0x6d, 0x58, 0x20, 0x43,
		0x68, 0x61, 0x72, 0x67, 0x65, 0x58, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x47, 0x2d, 0x46,
		0x37, 0x34, 0x30, 0x4c, 0x58, 0x20, 0x53, 0x6b, 0x69, 0x6e, 0x58, 0x20, 0x53, 0x63, 0x72, 0x65,
		0x65, 0x6e, 0x58, 0x20, 0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x4d, 0x2d, 0x58, 0x35,
		0x31, 0x30, 0x57, 0x4d, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x33, 0x58, 0x34, 0x58,
		0x34, 0x2b, 0x4b, 0x31, 0x31, 0x4b, 0x33, 0x30, 0x4c, 0x4d, 0x58, 0x31, 0x33, 0x30, 0x49, 0x4d,
		0x57, 0x31, 0x30, 0x4c, 0x4d, 0x2d, 0x4b, 0x33, 0x31, 0x30, 0x49, 0x4d, 0x57, 0x31, 0x31, 0x4c,
		0x4d, 0x2d, 0x58, 0x36, 0x30, 0x30, 0x49, 0x4d, 0x57, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4c,
		0x4d, 0x2d, 0x58, 0x34, 0x34, 0x30, 0x5a, 0x4d, 0x57, 0x57, 0x33, 0x30, 0x4c, 0x4d, 0x2d, 0x4b,
		0x36, 0x31, 0x30, 0x49, 0x4d, 0x57, 0x34, 0x31, 0x4c, 0x47, 0x2d, 0x48, 0x35, 0x32, 0x32, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x34, 0x47, 0x4c, 0x47, 0x4c, 0x35,
		0x38, 0x56, 0x4c, 0x52, 0x61, 0x62, 0x65, 0x6c, 0x20, 0x32, 0x4c, 0x47, 0x2d, 0x58, 0x31, 0x39,
		0x30, 0x52, 0x61, 0x79, 0x4c, 0x47, 0x4c, 0x53, 0x37, 0x34, 0x30, 0x56, 0x6f, 0x6c, 0x74, 0x4c,
		0x4d, 0x2d, 0x58, 0x34, 0x31, 0x30, 0x4c, 0x47, 0x4d, 0x2d, 0x4b, 0x31, 0x32, 0x31, 0x4c, 0x47,
		0x4d, 0x2d, 0x58, 0x34, 0x30, 0x31, 0x4c, 0x58, 0x34, 0x30, 0x31, 0x4c, 0x4d, 0x2d, 0x58, 0x34,
		0x32, 0x30, 0x4e, 0x58, 0x34, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4b, 0x34, 0x20, 0x4c,
		0x54, 0x45, 0x4b, 0x34, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4c, 0x4d, 0x2d, 0x58, 0x34,
		0x32, 0x30, 0x4b, 0x34, 0x30, 0x4b, 0x34, 0x30, 0x53, 0x4c, 0x4d, 0x2d, 0x4b, 0x34, 0x31, 0x30,
		0x4b, 0x34, 0x31, 0x53, 0x4c, 0x47, 0x2d, 0x58, 0x32, 0x32, 0x30, 0x4b, 0x35, 0x4c, 0x4d, 0x2d,
		0x58, 0x35, 0x34, 0x30, 0x4b, 0x35, 0x30, 0x53, 0x4b, 0x35, 0x30, 0x34, 0x30, 0x32, 0x4c, 0x47,
		0x53, 0x70, 0x72, 0x61, 0x79, 0x4c, 0x2d, 0x30, 0x32, 0x4b, 0x4a, 0x6f, 0x4a, 0x6f, 0x4c, 0x4d,
		0x2d, 0x58, 0x36, 0x32, 0x35, 0x4e, 0x31, 0x58, 0x36, 0x4c, 0x4d, 0x2d, 0x58, 0x36, 0x32, 0x35,
		0x4e, 0x58, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x72, 0x69, 0x73, 0x74, 0x6f,
		0x41, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x20, 0x32, 0x41, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x20, 0x33,
		0x58, 0x32, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x56, 0x34, 0x30, 0x20, 0x54, 0x68, 0x69,
		0x6e, 0x51, 0x56, 0x35, 0x30, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d, 0x56, 0x35,
		0x31, 0x30, 0x4e, 0x56, 0x35, 0x30, 0x53, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d,
		0x51, 0x39, 0x32, 0x30, 0x4e, 0x51, 0x39, 0x32, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x32, 0x37, 0x4c,
		0x51, 0x39, 0x20, 0x4f, 0x6e, 0x65, 0x56, 0x31, 0x30, 0x4b, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x37, 0x29, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x32, 0x30, 0x51, 0x4d, 0x41, 0x4b, 0x38, 0x73, 0x4b,
		0x38, 0x20, 0x34, 0x47, 0x4b, 0x38, 0x20, 0x56, 0x4b, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38,
		0x29, 0x56, 0x33, 0x30, 0x56, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x33, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x35, 0x47, 0x56, 0x65, 0x6c, 0x76,
		0x65, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x4d, 0x2d, 0x47, 0x39, 0x31, 0x30, 0x56,
		0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x34, 0x47, 0x56, 0x36, 0x30, 0x20, 0x54, 0x68, 0x69, 0x6e,
		0x51, 0x20, 0x35, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x5a, 0x6f, 0x6e, 0x65,
		0x56, 0x33, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x5a, 0x6f, 0x6e, 0x65, 0x20,
		0x32, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x5a, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x4b,
		0x33, 0x4c, 0x47, 0x2d, 0x41, 0x53, 0x31, 0x31, 0x30, 0x4b, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x37, 0x29, 0x4b, 0x37, 0x4b, 0x38, 0x56, 0x53, 0x35, 0x30, 0x30, 0x50, 0x50, 0x4b, 0x31, 0x30,
		0x4b, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4b, 0x32, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4b, 0x32, 0x32, 0x4b, 0x34, 0x32, 0x4b, 0x35, 0x31, 0x4b, 0x35, 0x31, 0x53, 0x4b,
		0x35, 0x32, 0x4b, 0x35, 0x36, 0x4b, 0x35, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x35, 0x31,
		0x51, 0x33, 0x31, 0x51, 0x36, 0x31, 0x51, 0x36, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x34, 0x30, 0x69,
		0x74, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x20,
		0x34, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20,
		0x32, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x32, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69,
		0x78, 0x20, 0x33, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x56, 0x75, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x75, 0x73, 0x20, 0x56, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x34, 0x58,
		0x20, 0x48, 0x44, 0x4c, 0x65, 0x6f, 0x6e, 0x4c, 0x65, 0x6f, 0x6e, 0x20, 0x34, 0x47, 0x20, 0x4c,
		0x54, 0x45, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20,
		0x50, 0x72, 0x6f, 0x4c, 0x47, 0x4c, 0x31, 0x35, 0x38, 0x56, 0x4c, 0x52, 0x65, 0x62, 0x65, 0x6c,
		0x20, 0x33, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x20, 0x34, 0x56, 0x53, 0x38, 0x37, 0x36, 0x4c, 0x75,
		0x63, 0x69, 0x64, 0x20, 0x33, 0x47, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x56, 0x53, 0x38, 0x32,
		0x30, 0x4c, 0x61, 0x6e, 0x63, 0x65, 0x74, 0x56, 0x53, 0x38, 0x37, 0x30, 0x20, 0x34, 0x47, 0x4c,
		0x75, 0x63, 0x69, 0x64, 0x20, 0x32, 0x56, 0x53, 0x38, 0x31, 0x30, 0x50, 0x50, 0x54, 0x72, 0x61,
		0x6e, 0x73, 0x70, 0x79, 0x72, 0x65, 0x4c, 0x47, 0x2d, 0x44, 0x38, 0x33, 0x38, 0x47, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x32, 0x57, 0x49, 0x4e, 0x47, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x35, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x46, 0x48, 0x44, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x47, 0x2d, 0x56, 0x35, 0x33, 0x33, 0x47, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x49, 0x56, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x46, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4c, 0x47, 0x4c, 0x4b, 0x34, 0x33, 0x30, 0x47, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x46, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x38, 0x2e, 0x30, 0x4c, 0x47, 0x54, 0x30, 0x31, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x47, 0x2d, 0x56, 0x35, 0x30, 0x30, 0x47, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x38, 0x2e, 0x33, 0x4c, 0x47, 0x2d, 0x56, 0x37, 0x30, 0x30, 0x47, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x4c, 0x47, 0x2d, 0x56, 0x34, 0x39, 0x37, 0x47, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4c, 0x47, 0x2d, 0x56, 0x39,
		0x33, 0x35, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x4c,
		0x47, 0x54, 0x30, 0x32, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x49, 0x20, 0x38, 0x2e,
		0x30, 0x4c, 0x47, 0x2d, 0x56, 0x35, 0x32, 0x31, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x20,
		0x38, 0x2e, 0x30, 0x56, 0x4b, 0x38, 0x31, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e,
		0x33, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x4b, 0x38, 0x31, 0x35, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x58, 0x20, 0x38, 0x2e, 0x33, 0x4c, 0x47, 0x2d, 0x56, 0x35, 0x32, 0x30, 0x47, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x58, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4c, 0x47, 0x2d, 0x56, 0x35, 0x33, 0x30, 0x47,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4c, 0x47, 0x54, 0x33, 0x32, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x64, 0x20, 0x50, 0x5a,
		0x4c, 0x47, 0x54, 0x33, 0x31, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x64, 0x20, 0x50, 0x58, 0x57,
		0x65, 0x62, 0x4f, 0x53, 0x20, 0x54, 0x56, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x42, 0x50, 0x37,
		0x34, 0x30, 0x42, 0x50, 0x37, 0x34, 0x30, 0x34, 0x37, 0x4c, 0x41, 0x37, 0x39, 0x30, 0x57, 0x2d,
		0x5a, 0x41, 0x4e, 0x65, 0x74, 0x43, 0x61, 0x73, 0x74, 0x4c, 0x47, 0x20, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x20, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x55, 0x72,
		0x62, 0x61, 0x6e, 0x65, 0x47, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x24, 0x31, 0x4c, 0x4f, 0x4b,
		0x4d, 0x41, 0x54, 0x4c, 0x54, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x24, 0x31, 0x4c, 0x54, 0x20, 0x43, 0x33, 0x31, 0x30, 0x30, 0x53, 0x31, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x4c, 0x59, 0x46, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x34, 0x46, 0x6c, 0x61,
		0x6d, 0x65, 0x20, 0x32, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x31, 0x45, 0x61, 0x72, 0x74, 0x68,
		0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x32, 0x31, 0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x32,
		0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x35, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x46, 0x31, 0x4c,
		0x53, 0x2d, 0x34, 0x35, 0x30, 0x33, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x4c, 0x53, 0x2d, 0x34,
		0x35, 0x30, 0x33, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x31, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20,
		0x33, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x33, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x34, 0x4c,
		0x53, 0x2d, 0x34, 0x30, 0x30, 0x32, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x35, 0x4c, 0x53, 0x2d,
		0x34, 0x30, 0x30, 0x35, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x36, 0x46, 0x6c, 0x61, 0x6d, 0x65,
		0x20, 0x37, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x38, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x37,
		0x53, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x38, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x32, 0x57,
		0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x35, 0x57, 0x61, 0x74,
		0x65, 0x72, 0x20, 0x34, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x36, 0x57, 0x61, 0x74, 0x65, 0x72,
		0x20, 0x36, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x38, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x32,
		0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x39, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x36, 0x4c, 0x53, 0x2d,
		0x35, 0x30, 0x31, 0x33, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31,
		0x34, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x34, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x30, 0x57, 0x69,
		0x6e, 0x64, 0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x35, 0x57, 0x61, 0x74, 0x65, 0x72,
		0x20, 0x38, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x36, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x37, 0x4c,
		0x53, 0x2d, 0x35, 0x35, 0x30, 0x34, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x37, 0x4c, 0x53, 0x2d,
		0x35, 0x35, 0x30, 0x37, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x37, 0x53, 0x4c, 0x53, 0x2d, 0x35,
		0x30, 0x31, 0x37, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30,
		0x31, 0x38, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x34, 0x53, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x32, 0x30,
		0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x30, 0x4c, 0x53, 0x2d, 0x35, 0x32, 0x30, 0x31, 0x57,
		0x61, 0x74, 0x65, 0x72, 0x20, 0x46, 0x31, 0x53, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x32, 0x57,
		0x69, 0x6e, 0x64, 0x20, 0x33, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x33, 0x57, 0x61, 0x74, 0x65,
		0x72, 0x20, 0x33, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x36, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20,
		0x39, 0x4c, 0x53, 0x2d, 0x36, 0x30, 0x30, 0x31, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x32, 0x4c, 0x61,
		0x6e, 0x64, 0x20, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x56, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58,
		0x33, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x33, 0x49, 0x6f, 0x75, 0x74, 0x64, 0x6f, 0x6f, 0x72, 0x20,
		0x50, 0x6f, 0x6c, 0x61, 0x72, 0x20, 0x33, 0x4c, 0x61, 0x6e, 0x64, 0x76, 0x6f, 0x53, 0x36, 0x20,
		0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x36, 0x58, 0x4d, 0x24, 0x31, 0x30, 0x30, 0x24, 0x32, 0x4c,
		0x61, 0x6e, 0x69, 0x78, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31,
		0x58, 0x31, 0x32, 0x30, 0x43, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x58, 0x31, 0x32, 0x30, 0x43,
		0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x39, 0x35,
		0x30, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x39, 0x35, 0x30,
		0x4c, 0x61, 0x72, 0x6b, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x20, 0x48,
		0x44, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x32, 0x20, 0x24, 0x31, 0x20, 0x56, 0x65,
		0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x32, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58,
		0x34, 0x20, 0x37, 0x20, 0x33, 0x47, 0x20, 0x48, 0x44, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20,
		0x58, 0x34, 0x20, 0x37, 0x48, 0x44, 0x20, 0x33, 0x47, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20,
		0x58, 0x32, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20, 0x37,
		0x48, 0x44, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20, 0x39, 0x46, 0x72, 0x65,
		0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20, 0x37, 0x46, 0x72, 0x65, 0x65, 0x42, 0x69, 0x72, 0x64,
		0x20, 0x35, 0x57, 0x69, 0x46, 0x69, 0x46, 0x72, 0x65, 0x65, 0x42, 0x69, 0x72, 0x64, 0x20, 0x35,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x45, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x24,
		0x31, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x50, 0x48, 0x41, 0x42,
		0x4c, 0x45, 0x54, 0x20, 0x37, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x37, 0x50, 0x68,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x36, 0x2e, 0x30, 0x42, 0x6a, 0x6f, 0x72, 0x6e, 0x20, 0x53,
		0x50, 0x2d, 0x35, 0x30, 0x30, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x24, 0x31, 0x4c, 0x61,
		0x76, 0x61, 0x46, 0x6c, 0x61, 0x69, 0x72, 0x20, 0x24, 0x31, 0x42, 0x65, 0x6e, 0x63, 0x6f, 0x20,
		0x59, 0x34, 0x30, 0x41, 0x67, 0x6e, 0x69, 0x20, 0x35, 0x47, 0x5a, 0x36, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x41, 0x39, 0x37, 0x20, 0x49, 0x50, 0x53, 0x52, 0x35, 0x73, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x41, 0x39, 0x37, 0x20, 0x32, 0x47, 0x42, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x37, 0x36, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x69, 0x78, 0x65, 0x6c,
		0x20, 0x56, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x56, 0x24,
		0x31, 0x49, 0x72, 0x69, 0x73, 0x20, 0x58, 0x31, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x58,
		0x34, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x41, 0x5f, 0x52,
		0x31, 0x52, 0x31, 0x5a, 0x36, 0x31, 0x5a, 0x36, 0x5a, 0x32, 0x5a, 0x33, 0x5a, 0x36, 0x30, 0x73,
		0x56, 0x37, 0x5a, 0x35, 0x33, 0x5a, 0x35, 0x32, 0x5a, 0x36, 0x32, 0x5a, 0x39, 0x33, 0x49, 0x72,
		0x69, 0x73, 0x20, 0x35, 0x32, 0x49, 0x72, 0x69, 0x73, 0x20, 0x35, 0x34, 0x49, 0x72, 0x69, 0x73,
		0x20, 0x35, 0x39, 0x49, 0x72, 0x69, 0x73, 0x20, 0x34, 0x36, 0x5a, 0x34, 0x31, 0x56, 0x38, 0x56,
		0x2b, 0x36, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x32, 0x63, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x32,
		0x43, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x31, 0x33, 0x36, 0x44, 0x69, 0x73, 0x63,
		0x6f, 0x76, 0x65, 0x72, 0x20, 0x31, 0x33, 0x36, 0x4b, 0x4b, 0x54, 0x20, 0x51, 0x55, 0x41, 0x44,
		0x52, 0x41, 0x4b, 0x4b, 0x54, 0x20, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x4b, 0x4b, 0x54, 0x34,
		0x30, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x76, 0x6f, 0x72,
		0x79, 0x20, 0x24, 0x31, 0x49, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x50, 0x61,
		0x6e, 0x54, 0x43, 0x38, 0x30, 0x32, 0x41, 0x4c, 0x65, 0x20, 0x50, 0x61, 0x6e, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x54, 0x43, 0x39, 0x37, 0x30, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x50, 0x61, 0x6e,
		0x20, 0x24, 0x31, 0x4c, 0x65, 0x45, 0x63, 0x6f, 0x4c, 0x65, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x61, 0x78, 0x20, 0x58, 0x39, 0x30, 0x30, 0x2b, 0x4c, 0x65, 0x20, 0x31, 0x53, 0x58, 0x39,
		0x30, 0x30, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x65, 0x20, 0x58, 0x39, 0x30, 0x30, 0x4c,
		0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x4c, 0x65, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x4d, 0x61,
		0x78, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x58, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x65,
		0x20, 0x4d, 0x61, 0x78, 0x24, 0x31, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x4e, 0x2d, 0x34, 0x35, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x2d, 0x34, 0x35,
		0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x56, 0x79, 0x70, 0x65, 0x72, 0x20, 0x50, 0x52, 0x4f, 0x56,
		0x79, 0x70, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x50, 0x20, 0x44, 0x41, 0x49, 0x53, 0x59,
		0x44, 0x61, 0x69, 0x73, 0x79, 0x4c, 0x50, 0x5f, 0x56, 0x45, 0x59, 0x52, 0x4f, 0x4e, 0x56, 0x65,
		0x79, 0x72, 0x6f, 0x6e, 0x4c, 0x50, 0x5f, 0x50, 0x52, 0x41, 0x44, 0x4f, 0x50, 0x72, 0x61, 0x64,
		0x6f, 0x4c, 0x50, 0x5f, 0x42, 0x2d, 0x35, 0x30, 0x42, 0x35, 0x30, 0x4c, 0x65, 0x61, 0x67, 0x6f,
		0x6f, 0x4d, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x35, 0x20, 0x45, 0x44, 0x47, 0x45, 0x4d,
		0x35, 0x20, 0x45, 0x64, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4b, 0x49, 0x49,
		0x43, 0x41, 0x41, 0x20, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x4b, 0x49, 0x43, 0x43, 0x41, 0x41, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x4b, 0x49, 0x49, 0x43, 0x41, 0x41, 0x20, 0x4d, 0x49, 0x58, 0x4b,
		0x49, 0x43, 0x43, 0x41, 0x41, 0x20, 0x4d, 0x69, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24,
		0x31, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x30, 0x30, 0x30, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x24, 0x31, 0x56, 0x65,
		0x6e, 0x74, 0x75, 0x72, 0x65, 0x20, 0x31, 0x41, 0x6c, 0x66, 0x61, 0x20, 0x24, 0x31, 0x58, 0x52,
		0x6f, 0x76, 0x65, 0x72, 0x24, 0x31, 0x4c, 0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4c,
		0x65, 0x64, 0x73, 0x74, 0x61, 0x72, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x35, 0x2e, 0x30,
		0x4e, 0x6f, 0x76, 0x75, 0x73, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x36, 0x2e,
		0x30, 0x22, 0x4c, 0x65, 0x66, 0x66, 0x4c, 0x65, 0x6b, 0x65, 0x50, 0x61, 0x64, 0x2d, 0x24, 0x31,
		0x4c, 0x65, 0x6d, 0x68, 0x6f, 0x6f, 0x76, 0x4c, 0x65, 0x6e, 0x63, 0x6f, 0x4c, 0x45, 0x4e, 0x43,
		0x4f, 0x20, 0x44, 0x69, 0x76, 0x65, 0x72, 0x73, 0x6f, 0x2d, 0x37, 0x30, 0x30, 0x44, 0x69, 0x76,
		0x65, 0x72, 0x73, 0x6f, 0x20, 0x37, 0x30, 0x30, 0x4c, 0x65, 0x6e, 0x6f, 0x76, 0x6f, 0x47, 0x37,
		0x38, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x2d, 0x34, 0x30, 0x49,
		0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x2d, 0x35, 0x30, 0x49, 0x64, 0x65, 0x61,
		0x54, 0x61, 0x62, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x31, 0x30, 0x2d, 0x37, 0x30, 0x41, 0x32, 0x31, 0x30, 0x37, 0x41, 0x2d, 0x48, 0x41,
		0x32, 0x31, 0x30, 0x37, 0x41, 0x32, 0x31, 0x30, 0x39, 0x41, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x32, 0x31, 0x30, 0x39, 0x41, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x41, 0x31,
		0x30, 0x2d, 0x33, 0x30, 0x54, 0x61, 0x62, 0x20, 0x4b, 0x31, 0x30, 0x59, 0x6f, 0x67, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x33, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x31,
		0x59, 0x54, 0x2d, 0x4b, 0x36, 0x30, 0x36, 0x46, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x50, 0x72, 0x6f, 0x54, 0x42, 0x33, 0x2d, 0x37, 0x33, 0x30, 0x58, 0x54, 0x41, 0x42, 0x33,
		0x20, 0x37, 0x54, 0x41, 0x42, 0x33, 0x20, 0x37, 0x20, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69,
		0x61, 0x6c, 0x54, 0x42, 0x2d, 0x37, 0x37, 0x30, 0x33, 0x58, 0x54, 0x41, 0x42, 0x33, 0x20, 0x37,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x42, 0x33, 0x2d, 0x58, 0x37, 0x30, 0x4c, 0x54, 0x41, 0x42,
		0x33, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x42, 0x2d, 0x38, 0x37, 0x30, 0x33,
		0x58, 0x54, 0x41, 0x42, 0x33, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x41, 0x42, 0x20,
		0x32, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30, 0x4c, 0x43, 0x54, 0x41, 0x42, 0x32, 0x20, 0x41, 0x38,
		0x2d, 0x35, 0x30, 0x4c, 0x43, 0x54, 0x41, 0x42, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x54, 0x41,
		0x42, 0x20, 0x32, 0x20, 0x41, 0x31, 0x30, 0x54, 0x41, 0x42, 0x33, 0x20, 0x38, 0x54, 0x41, 0x42,
		0x33, 0x20, 0x38, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x54, 0x41, 0x42, 0x34, 0x20, 0x31, 0x30, 0x54,
		0x42, 0x2d, 0x38, 0x35, 0x30, 0x34, 0x58, 0x54, 0x41, 0x42, 0x34, 0x20, 0x38, 0x54, 0x42, 0x2d,
		0x38, 0x37, 0x30, 0x34, 0x58, 0x54, 0x41, 0x42, 0x34, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x54, 0x41, 0x42, 0x34, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x41, 0x42, 0x35,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x41, 0x42, 0x31, 0x30, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30,
		0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x30, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x31, 0x54, 0x61,
		0x62, 0x20, 0x4b, 0x31, 0x31, 0x54, 0x61, 0x62, 0x20, 0x51, 0x54, 0x20, 0x4b, 0x31, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x54,
		0x61, 0x62, 0x20, 0x45, 0x37, 0x54, 0x61, 0x62, 0x20, 0x45, 0x38, 0x54, 0x42, 0x2d, 0x37, 0x33,
		0x30, 0x34, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61,
		0x6c, 0x54, 0x61, 0x62, 0x20, 0x37, 0x50, 0x42, 0x2d, 0x36, 0x35, 0x30, 0x35, 0x54, 0x61, 0x62,
		0x20, 0x56, 0x37, 0x41, 0x31, 0x30, 0x31, 0x4c, 0x56, 0x54, 0x61, 0x62, 0x20, 0x36, 0x54, 0x61,
		0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x61,
		0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x20, 0x52, 0x65, 0x6c, 0x54, 0x42, 0x2d,
		0x58, 0x36, 0x30, 0x35, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x4c,
		0x65, 0x6e, 0x6f, 0x76, 0x6f, 0x20, 0x54, 0x42, 0x2d, 0x58, 0x33, 0x30, 0x36, 0x54, 0x61, 0x62,
		0x20, 0x4d, 0x31, 0x30, 0x20, 0x48, 0x44, 0x4c, 0x65, 0x6e, 0x6f, 0x76, 0x6f, 0x20, 0x54, 0x42,
		0x2d, 0x58, 0x35, 0x30, 0x35, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x37, 0x54, 0x61, 0x62, 0x20, 0x4d,
		0x37, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x31, 0x30, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x2e, 0x33, 0x22, 0x59, 0x6f,
		0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x32, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x38,
		0x59, 0x6f, 0x67, 0x61, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x59, 0x54, 0x33, 0x2d, 0x38, 0x35, 0x30, 0x4d, 0x59, 0x6f,
		0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x31, 0x30, 0x59, 0x54, 0x2d, 0x58, 0x37,
		0x30, 0x33, 0x4c, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62,
		0x54, 0x42, 0x2d, 0x4a, 0x37, 0x31, 0x36, 0x46, 0x58, 0x69, 0x61, 0x6f, 0x58, 0x69, 0x6e, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x30, 0x30,
		0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x68, 0x69, 0x6e, 0x6b,
		0x50, 0x61, 0x64, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x54, 0x68, 0x69,
		0x6e, 0x6b, 0x50, 0x61, 0x64, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x24, 0x31, 0x54, 0x41,
		0x42, 0x20, 0x32, 0x20, 0x41, 0x37, 0x2d, 0x33, 0x30, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41,
		0x37, 0x54, 0x42, 0x2d, 0x38, 0x35, 0x30, 0x34, 0x46, 0x54, 0x41, 0x42, 0x20, 0x34, 0x20, 0x38,
		0x54, 0x42, 0x2d, 0x38, 0x37, 0x30, 0x34, 0x46, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x38, 0x22,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x42, 0x2d, 0x58, 0x33, 0x30, 0x34, 0x58, 0x54, 0x61, 0x62,
		0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x42, 0x2d, 0x58, 0x33, 0x30, 0x34, 0x46,
		0x45, 0x31, 0x30, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x24, 0x31, 0x59, 0x42, 0x2d, 0x51,
		0x35, 0x30, 0x31, 0x46, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x41, 0x31, 0x32, 0x59, 0x54, 0x2d, 0x58,
		0x37, 0x30, 0x35, 0x58, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x24,
		0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x54, 0x61, 0x62,
		0x20, 0x4d, 0x38, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x20, 0x46, 0x48, 0x44, 0x41, 0x35, 0x73,
		0x41, 0x38, 0x5a, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x32, 0x31, 0x35, 0x31, 0x5a, 0x55,
		0x4b, 0x20, 0x45, 0x64, 0x67, 0x65, 0x5a, 0x55, 0x4b, 0x20, 0x5a, 0x32, 0x5a, 0x32, 0x31, 0x32,
		0x31, 0x5a, 0x55, 0x4b, 0x20, 0x5a, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x55, 0x4b, 0x20, 0x24,
		0x31, 0x4b, 0x33, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x24, 0x31, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x4b, 0x34, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x35, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4b, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x4b, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x35, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x41, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x36, 0x30, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x56, 0x69, 0x62, 0x65, 0x20, 0x4b, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56,
		0x69, 0x62, 0x65, 0x20, 0x4b, 0x35, 0x56, 0x69, 0x62, 0x65, 0x20, 0x5a, 0x32, 0x56, 0x69, 0x62,
		0x65, 0x20, 0x43, 0x56, 0x69, 0x62, 0x65, 0x20, 0x58, 0x32, 0x56, 0x69, 0x62, 0x65, 0x20, 0x58,
		0x33, 0x56, 0x69, 0x62, 0x65, 0x20, 0x58, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x62,
		0x65, 0x20, 0x56, 0x37, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x36, 0x69, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x24, 0x31, 0x69, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e,
		0x20, 0x50, 0x72, 0x6f, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x4b, 0x36, 0x4b, 0x39, 0x50, 0x32, 0x4b, 0x35, 0x53, 0x4b, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x4b, 0x36, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x69, 0x62, 0x65, 0x20, 0x50, 0x31, 0x6d,
		0x56, 0x69, 0x62, 0x65, 0x20, 0x50, 0x31, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x56, 0x69, 0x62,
		0x65, 0x20, 0x50, 0x31, 0x56, 0x69, 0x62, 0x65, 0x20, 0x42, 0x41, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x68, 0x6f, 0x74, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x31,
		0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x5a, 0x35, 0x73, 0x5a,
		0x35, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x47, 0x54, 0x5a, 0x36, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x53, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x47, 0x54, 0x50, 0x68, 0x61, 0x62, 0x20, 0x32, 0x50, 0x68, 0x61,
		0x62, 0x50, 0x68, 0x61, 0x62, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x64, 0x65, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x24, 0x31, 0x64, 0x74, 0x61, 0x62, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74,
		0x20, 0x34, 0x32, 0x41, 0x4c, 0x65, 0x6e, 0x6f, 0x76, 0x6f, 0x20, 0x4b, 0x31, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x4b, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x52, 0x2d, 0x31, 0x35, 0x34, 0x31,
		0x46, 0x4d, 0x69, 0x72, 0x61, 0x67, 0x65, 0x20, 0x53, 0x6f, 0x6c, 0x6f, 0x49, 0x64, 0x65, 0x61,
		0x50, 0x61, 0x64, 0x20, 0x53, 0x31, 0x34, 0x35, 0x2d, 0x31, 0x35, 0x49, 0x49, 0x4c, 0x49, 0x64,
		0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x53, 0x31, 0x34, 0x35, 0x2d, 0x31, 0x35, 0x49, 0x57, 0x4c,
		0x46, 0x6c, 0x65, 0x78, 0x20, 0x31, 0x34, 0x41, 0x50, 0x49, 0x20, 0x38, 0x31, 0x53, 0x53, 0x4c,
		0x65, 0x6f, 0x74, 0x65, 0x63, 0x4c, 0x45, 0x53, 0x50, 0x48, 0x35, 0x30, 0x31, 0x31, 0x41, 0x72,
		0x67, 0x6f, 0x6e, 0x20, 0x65, 0x32, 0x35, 0x30, 0x4c, 0x45, 0x53, 0x50, 0x48, 0x35, 0x30, 0x30,
		0x33, 0x42, 0x41, 0x72, 0x67, 0x6f, 0x6e, 0x20, 0x41, 0x32, 0x35, 0x30, 0x42, 0x4c, 0x45, 0x53,
		0x50, 0x48, 0x35, 0x30, 0x31, 0x34, 0x4b, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6e, 0x20, 0x4b, 0x31,
		0x35, 0x30, 0x53, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x61, 0x20, 0x24, 0x31, 0x50, 0x75,
		0x6c, 0x73, 0x61, 0x72, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x6c, 0x65,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x57, 0x37, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x57, 0x37, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4c, 0x65, 0x73, 0x69, 0x61, 0x41, 0x6e, 0x6f, 0x76, 0x61, 0x20, 0x41,
		0x35, 0x4c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x53, 0x34, 0x41, 0x31, 0x56, 0x65, 0x67, 0x61, 0x53,
		0x34, 0x41, 0x32, 0x49, 0x72, 0x69, 0x64, 0x61, 0x53, 0x34, 0x41, 0x33, 0x50, 0x61, 0x6c, 0x6c,
		0x61, 0x64, 0x61, 0x53, 0x34, 0x41, 0x35, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53, 0x34, 0x41,
		0x34, 0x20, 0x4e, 0x45, 0x4f, 0x4e, 0x53, 0x34, 0x41, 0x34, 0x20, 0x4e, 0x65, 0x6f, 0x6e, 0x53,
		0x35, 0x41, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x53, 0x35, 0x41, 0x32, 0x4f,
		0x76, 0x65, 0x72, 0x6f, 0x6e, 0x53, 0x35, 0x41, 0x33, 0x43, 0x61, 0x70, 0x65, 0x6c, 0x6c, 0x61,
		0x53, 0x35, 0x41, 0x34, 0x41, 0x72, 0x67, 0x6f, 0x6e, 0x53, 0x36, 0x41, 0x31, 0x41, 0x6e, 0x74,
		0x61, 0x72, 0x65, 0x73, 0x53, 0x43, 0x37, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x48, 0x44, 0x4c, 0x50,
		0x48, 0x37, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x50, 0x48, 0x37, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x78, 0x69, 0x62, 0x6f, 0x6f, 0x6b, 0x4d, 0x46, 0x43, 0x31,
		0x39, 0x31, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x33, 0x20, 0x58, 0x4c, 0x4d, 0x46, 0x43, 0x30, 0x34, 0x35, 0x46, 0x52, 0x54, 0x61, 0x62,
		0x54, 0x61, 0x62, 0x4d, 0x46, 0x43, 0x31, 0x36, 0x33, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20, 0x33, 0x4d, 0x46, 0x43, 0x31, 0x34, 0x32,
		0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x4d, 0x46, 0x43,
		0x32, 0x35, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69,
		0x6f, 0x72, 0x4d, 0x46, 0x43, 0x32, 0x37, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x4d, 0x46, 0x43, 0x32, 0x38, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x32, 0x4d, 0x46, 0x43, 0x31, 0x35, 0x36,
		0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4f, 0x6e, 0x65, 0x4d, 0x46, 0x43, 0x31,
		0x35, 0x35, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65,
		0x72, 0x4d, 0x46, 0x43, 0x31, 0x35, 0x37, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20, 0x32, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x4d, 0x46, 0x43, 0x33, 0x37, 0x35, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x32, 0x4d, 0x46, 0x43, 0x31, 0x36, 0x32,
		0x46, 0x52, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x46,
		0x43, 0x31, 0x38, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x41, 0x64, 0x76,
		0x61, 0x6e, 0x63, 0x65, 0x64, 0x4d, 0x46, 0x43, 0x31, 0x38, 0x31, 0x46, 0x52, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x20, 0x32, 0x4d, 0x46,
		0x43, 0x35, 0x30, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x58, 0x4c, 0x4d,
		0x46, 0x43, 0x31, 0x39, 0x30, 0x42, 0x42, 0x46, 0x52, 0x42, 0x61, 0x72, 0x62, 0x69, 0x65, 0x20,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x35, 0x44, 0x43, 0x46, 0x52,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x43, 0x61,
		0x72, 0x73, 0x20, 0x48, 0x44, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x35, 0x46, 0x55, 0x46, 0x52, 0x46,
		0x75, 0x72, 0x62, 0x79, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x46, 0x43, 0x31, 0x39,
		0x35, 0x44, 0x50, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x44, 0x69, 0x73, 0x6e,
		0x65, 0x79, 0x20, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x73, 0x65, 0x20, 0x48, 0x44, 0x4d,
		0x46, 0x43, 0x31, 0x34, 0x30, 0x46, 0x52, 0x4c, 0x61, 0x70, 0x54, 0x61, 0x62, 0x4d, 0x46, 0x43,
		0x31, 0x34, 0x31, 0x46, 0x52, 0x4c, 0x61, 0x70, 0x54, 0x61, 0x62, 0x20, 0x32, 0x4c, 0x69, 0x62,
		0x65, 0x72, 0x74, 0x6f, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x6d, 0x61, 0x78, 0x78, 0x4c, 0x69, 0x6e,
		0x67, 0x77, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6e, 0x65, 0x78, 0x4c, 0x69, 0x20, 0x24, 0x31, 0x4c,
		0x6f, 0x67, 0x69, 0x63, 0x58, 0x36, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x24, 0x31, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x32, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x20, 0x49, 0x6e, 0x73, 0x74, 0x72,
		0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x46,
		0x31, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x6f, 0x6d, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x4f, 0x4d, 0x5f, 0x4c, 0x41, 0x5f, 0x54, 0x41, 0x42, 0x5f,
		0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x37, 0x31, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x69,
		0x6e, 0x6b, 0x20, 0x37, 0x31, 0x4c, 0x2d, 0x69, 0x78, 0x69, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x37, 0x30, 0x31, 0x20, 0x33, 0x47, 0x4c, 0x49, 0x58, 0x49, 0x52, 0x31, 0x30, 0x34, 0x31, 0x4c,
		0x2d, 0x69, 0x78, 0x69, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x34, 0x31, 0x4c, 0x2d,
		0x69, 0x78, 0x69, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x2d, 0x69, 0x74, 0x65,
		0x20, 0x24, 0x31, 0x4c, 0x2d, 0x69, 0x74, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4c,
		0x2d, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x24, 0x31, 0x4c, 0x2d, 0x65, 0x6d, 0x65, 0x6e, 0x74,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x20, 0x42, 0x4f, 0x54,
		0x24, 0x31, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x24, 0x32, 0x4c, 0x65, 0x20, 0x4c, 0x69, 0x66, 0x74,
		0x4c, 0x65, 0x20, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4c, 0x65, 0x20, 0x48, 0x6f, 0x6c,
		0x61, 0x20, 0x46, 0x52, 0x4c, 0x65, 0x20, 0x48, 0x6f, 0x6c, 0x61, 0x4c, 0x65, 0x20, 0x4d, 0x6f,
		0x6f, 0x76, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x4d, 0x6f, 0x6f, 0x76, 0x4c, 0x65, 0x20, 0x46, 0x69,
		0x74, 0x20, 0x46, 0x52, 0x4c, 0x65, 0x20, 0x46, 0x69, 0x74, 0x4c, 0x65, 0x20, 0x46, 0x69, 0x7a,
		0x7a, 0x4c, 0x65, 0x20, 0x48, 0x6f, 0x70, 0x4c, 0x65, 0x20, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x4c,
		0x65, 0x20, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x46, 0x52, 0x4c, 0x65, 0x20, 0x53, 0x6d,
		0x6f, 0x6f, 0x74, 0x68, 0x4c, 0x65, 0x20, 0x4d, 0x75, 0x73, 0x74, 0x20, 0x32, 0x4c, 0x65, 0x20,
		0x4d, 0x75, 0x73, 0x74, 0x4c, 0x65, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x20, 0x4c,
		0x4c, 0x65, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x4c, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x4c, 0x2d, 0x45, 0x47, 0x41, 0x4e, 0x54, 0x4f, 0x4e, 0x45, 0x2d, 0x52, 0x4c, 0x2d, 0x45, 0x67,
		0x61, 0x6e, 0x74, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x4c, 0x2d, 0x45, 0x47, 0x41, 0x4e, 0x54,
		0x4f, 0x4e, 0x45, 0x4c, 0x2d, 0x45, 0x67, 0x61, 0x6e, 0x74, 0x20, 0x4f, 0x6e, 0x65, 0x4c, 0x65,
		0x20, 0x55, 0x70, 0x4c, 0x75, 0x6d, 0x69, 0x67, 0x6f, 0x6e, 0x4c, 0x75, 0x6d, 0x75, 0x73, 0x49,
		0x4e, 0x4e, 0x4f, 0x20, 0x24, 0x31, 0x49, 0x6f, 0x6e, 0x41, 0x45, 0x4f, 0x4e, 0x20, 0x24, 0x31,
		0x4c, 0x75, 0x6e, 0x61, 0x4c, 0x75, 0x78, 0x6f, 0x72, 0x4d, 0x2d, 0x48, 0x6f, 0x72, 0x73, 0x65,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x31, 0x4d, 0x2d, 0x54,
		0x65, 0x63, 0x68, 0x45, 0x52, 0x4f, 0x53, 0x20, 0x34, 0x47, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x34,
		0x47, 0x41, 0x43, 0x45, 0x39, 0x41, 0x63, 0x65, 0x20, 0x39, 0x4a, 0x41, 0x5a, 0x42, 0x41, 0x41,
		0x54, 0x45, 0x5a, 0x20, 0x34, 0x47, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x4d,
		0x2e, 0x54, 0x2e, 0x54, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x24, 0x31, 0x4d, 0x34, 0x74,
		0x65, 0x6c, 0x53, 0x53, 0x31, 0x30, 0x35, 0x30, 0x53, 0x53, 0x31, 0x30, 0x36, 0x30, 0x4c, 0x69,
		0x76, 0x65, 0x53, 0x53, 0x31, 0x30, 0x37, 0x30, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x53, 0x31,
		0x30, 0x38, 0x30, 0x4d, 0x61, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x53, 0x53, 0x31, 0x30, 0x39, 0x30,
		0x4d, 0x61, 0x78, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x53, 0x34, 0x30, 0x32, 0x30, 0x50,
		0x6c, 0x61, 0x79, 0x53, 0x53, 0x34, 0x30, 0x34, 0x30, 0x49, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x53, 0x53, 0x34, 0x30, 0x34, 0x35, 0x53, 0x53, 0x34, 0x33, 0x34, 0x35, 0x53, 0x6f, 0x75,
		0x6c, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x53, 0x34, 0x33, 0x35, 0x30, 0x53, 0x6f, 0x75, 0x6c,
		0x53, 0x53, 0x34, 0x34, 0x34, 0x35, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x41, 0x63, 0x63, 0x65,
		0x73, 0x73, 0x53, 0x53, 0x34, 0x34, 0x35, 0x30, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x53, 0x34,
		0x34, 0x35, 0x31, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x76, 0x65, 0x53, 0x53, 0x34, 0x34, 0x35, 0x32,
		0x44, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x53, 0x34, 0x34, 0x35, 0x33, 0x2d, 0x52, 0x52, 0x31, 0x20,
		0x46, 0x65, 0x65, 0x6c, 0x52, 0x32, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x53, 0x53, 0x34, 0x34, 0x35, 0x33, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x61, 0x74,
		0x69, 0x6f, 0x6e, 0x53, 0x53, 0x34, 0x34, 0x35, 0x35, 0x53, 0x53, 0x34, 0x34, 0x35, 0x36, 0x45,
		0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x53, 0x34, 0x34, 0x35, 0x37, 0x2d, 0x52,
		0x45, 0x76, 0x65, 0x72, 0x53, 0x53, 0x34, 0x34, 0x35, 0x37, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e,
		0x63, 0x65, 0x53, 0x53, 0x34, 0x34, 0x35, 0x38, 0x2d, 0x52, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x53, 0x34, 0x34, 0x35, 0x38, 0x41, 0x74, 0x74, 0x69, 0x74, 0x75, 0x64,
		0x65, 0x42, 0x24, 0x31, 0x52, 0x24, 0x31, 0x4d, 0x41, 0x58, 0x56, 0x49, 0x4d, 0x53, 0x35, 0x33,
		0x31, 0x4d, 0x53, 0x35, 0x33, 0x31, 0x20, 0x56, 0x65, 0x67, 0x61, 0x4d, 0x53, 0x35, 0x30, 0x32,
		0x20, 0x4f, 0x72, 0x69, 0x6f, 0x6e, 0x4d, 0x41, 0x58, 0x58, 0x4d, 0x42, 0x4f, 0x58, 0x4d, 0x44,
		0x43, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x53, 0x24, 0x31,
		0x20, 0x34, 0x47, 0x4d, 0x44, 0x54, 0x56, 0x4d, 0x45, 0x45, 0x47, 0x4d, 0x45, 0x55, 0x4d, 0x49,
		0x56, 0x4f, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x4d, 0x49, 0x58, 0x43, 0x4d, 0x4c, 0x4c, 0x45, 0x44, 0x4d, 0x4c, 0x53, 0x69, 0x51, 0x54, 0x61,
		0x6c, 0x6b, 0x20, 0x54, 0x77, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x63, 0x68, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20,
		0x42, 0x72, 0x61, 0x76, 0x65, 0x20, 0x33, 0x47, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63,
		0x74, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x41, 0x6c, 0x75, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x49, 0x64, 0x65, 0x61, 0x6c, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x43, 0x61, 0x72, 0x65, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x42, 0x72, 0x61, 0x69, 0x6e, 0x20, 0x33, 0x47, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20,
		0x56, 0x65, 0x72, 0x73, 0x65, 0x20, 0x34, 0x47, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x6d, 0x69,
		0x6e, 0x69, 0x20, 0x34, 0x47, 0x54, 0x4f, 0x50, 0x2d, 0x53, 0x20, 0x34, 0x47, 0x54, 0x72, 0x65,
		0x6e, 0x64, 0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x4f, 0x6e, 0x79, 0x78,
		0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x69, 0x51, 0x54, 0x61,
		0x6c, 0x6b, 0x20, 0x53, 0x70, 0x69, 0x63, 0x79, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x54,
		0x69, 0x74, 0x61, 0x6e, 0x20, 0x34, 0x47, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x33, 0x20, 0x34,
		0x47, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20,
		0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61,
		0x62, 0x20, 0x52, 0x6f, 0x73, 0x65, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x61, 0x73, 0x74,
		0x65, 0x72, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x20, 0x33, 0x47,
		0x4a, 0x65, 0x74, 0x20, 0x33, 0x47, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x35, 0x2e,
		0x32, 0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x41, 0x75, 0x72, 0x61, 0x53,
		0x6c, 0x69, 0x63, 0x65, 0x20, 0x34, 0x47, 0x41, 0x6e, 0x67, 0x65, 0x6c, 0x20, 0x33, 0x47, 0x41,
		0x6e, 0x67, 0x65, 0x6c, 0x20, 0x33, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x53, 0x74,
		0x79, 0x6c, 0x65, 0x20, 0x34, 0x47, 0x46, 0x35, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x34,
		0x47, 0x4d, 0x58, 0x20, 0x34, 0x47, 0x4d, 0x58, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x46,
		0x61, 0x62, 0x20, 0x34, 0x47, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x20, 0x34, 0x47, 0x4d, 0x6f,
		0x72, 0x65, 0x20, 0x34, 0x47, 0x57, 0x61, 0x76, 0x65, 0x20, 0x34, 0x47, 0x42, 0x72, 0x61, 0x63,
		0x65, 0x20, 0x32, 0x30, 0x31, 0x38, 0x20, 0x34, 0x47, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x20, 0x34,
		0x47, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x20, 0x34, 0x47, 0x52, 0x75, 0x62, 0x79, 0x20,
		0x34, 0x47, 0x44, 0x58, 0x20, 0x34, 0x47, 0x56, 0x69, 0x73, 0x74, 0x61, 0x20, 0x34, 0x47, 0x53,
		0x70, 0x61, 0x63, 0x65, 0x20, 0x53, 0x20, 0x34, 0x47, 0x52, 0x33, 0x20, 0x34, 0x47, 0x50, 0x68,
		0x61, 0x62, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x44, 0x36, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x62, 0x65,
		0x72, 0x61, 0x6c, 0x41, 0x6c, 0x75, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x50, 0x6f, 0x70, 0x20, 0x34,
		0x47, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x34, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e,
		0x74, 0x20, 0x34, 0x47, 0x4d, 0x4d, 0x49, 0x4d, 0x53, 0x49, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20,
		0x24, 0x31, 0x4d, 0x54, 0x43, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x61, 0x63, 0x65, 0x20,
		0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x61, 0x63, 0x65, 0x20, 0x32, 0x20, 0x34,
		0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34, 0x47,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x69,
		0x6e, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x42, 0x69,
		0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x75, 0x6e, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x53, 0x75, 0x72, 0x66, 0x20, 0x32, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x53, 0x75, 0x72, 0x66, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x20, 0x34, 0x47, 0x52, 0x65, 0x64, 0x62, 0x6f, 0x78, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x35, 0x4d, 0x54, 0x53, 0x20, 0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x33,
		0x31, 0x37, 0x53, 0x42, 0x2d, 0x33, 0x31, 0x37, 0x44, 0x56, 0x38, 0x33, 0x30, 0x34, 0x2d, 0x43,
		0x53, 0x75, 0x70, 0x65, 0x72, 0x57, 0x61, 0x76, 0x65, 0x20, 0x44, 0x56, 0x38, 0x33, 0x30, 0x34,
		0x2d, 0x43, 0x4d, 0x54, 0x4e, 0x4d, 0x54, 0x4e, 0x2d, 0x53, 0x6d, 0x40, 0x72, 0x74, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x24, 0x31, 0x4d, 0x54, 0x4e, 0x2d, 0x38, 0x39, 0x37, 0x38, 0x50, 0x53,
		0x74, 0x65, 0x70, 0x70, 0x61, 0x4d, 0x54, 0x4e, 0x2d, 0x24, 0x31, 0x4d, 0x59, 0x46, 0x4f, 0x4e,
		0x4d, 0x59, 0x50, 0x41, 0x44, 0x37, 0x73, 0x4d, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x73,
		0x4d, 0x61, 0x63, 0x6f, 0x6f, 0x78, 0x4d, 0x43, 0x2d, 0x58, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x4d, 0x61, 0x66, 0x65, 0x4d, 0x61, 0x66, 0x65, 0x5f, 0x4d, 0x38, 0x32, 0x30, 0x53, 0x68, 0x69,
		0x6e, 0x65, 0x20, 0x4d, 0x38, 0x32, 0x30, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x73, 0x65, 0x65, 0x4e,
		0x35, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x4d, 0x61, 0x67, 0x6e, 0x75, 0x73, 0x42, 0x72, 0x61, 0x76,
		0x6f, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x4d,
		0x61, 0x6a, 0x65, 0x73, 0x74, 0x69, 0x63, 0x55, 0x72, 0x61, 0x6e, 0x6f, 0x20, 0x37, 0x37, 0x20,
		0x4c, 0x54, 0x45, 0x50, 0x6c, 0x75, 0x74, 0x6f, 0x20, 0x24, 0x31, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x20, 0x33, 0x47, 0x54, 0x41, 0x42, 0x20, 0x37, 0x31, 0x31, 0x20, 0x34, 0x47, 0x54, 0x61,
		0x62, 0x20, 0x37, 0x31, 0x31, 0x20, 0x34, 0x47, 0x54, 0x41, 0x42, 0x2d, 0x37, 0x31, 0x34, 0x54,
		0x61, 0x62, 0x20, 0x37, 0x31, 0x34, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x24, 0x31,
		0x43, 0x72, 0x6f, 0x6e, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x6c, 0x61, 0x74, 0x61, 0x4d, 0x61,
		0x6e, 0x6e, 0x4d, 0x61, 0x6e, 0x74, 0x61, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x64,
		0x69, 0x61, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x31, 0x32, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x6f,
		0x20, 0x31, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x31, 0x34, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x6f,
		0x20, 0x33, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x31, 0x35, 0x4d, 0x65, 0x7a, 0x6f, 0x20, 0x32,
		0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x32, 0x30, 0x52, 0x6f, 0x63, 0x6b, 0x79, 0x20, 0x32, 0x4d,
		0x53, 0x50, 0x39, 0x35, 0x30, 0x32, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x79, 0x20, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x53, 0x50, 0x39, 0x36, 0x30, 0x31, 0x37, 0x46, 0x6f, 0x72, 0x74, 0x6f, 0x20,
		0x32, 0x4d, 0x53, 0x50, 0x39, 0x36, 0x30, 0x30, 0x32, 0x46, 0x6f, 0x72, 0x74, 0x6f, 0x20, 0x31,
		0x4d, 0x53, 0x50, 0x39, 0x34, 0x35, 0x30, 0x31, 0x45, 0x61, 0x73, 0x79, 0x20, 0x53, 0x65, 0x6c,
		0x66, 0x69, 0x65, 0x4d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x72, 0x61, 0x4d, 0x61, 0x73,
		0x73, 0x67, 0x6f, 0x56, 0x69, 0x32, 0x20, 0x53, 0x4d, 0x61, 0x73, 0x73, 0x74, 0x65, 0x6c, 0x54,
		0x61, 0x62, 0x20, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x34,
		0x47, 0x54, 0x61, 0x62, 0x31, 0x30, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x54, 0x61, 0x62, 0x20, 0x31,
		0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x74, 0x65, 0x63,
		0x68, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x20, 0x47, 0x52,
		0x41, 0x56, 0x49, 0x54, 0x59, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x37, 0x31, 0x31, 0x36,
		0x20, 0x41, 0x35, 0x4d, 0x61, 0x78, 0x63, 0x6f, 0x6d, 0x4d, 0x53, 0x24, 0x31, 0x4d, 0x61, 0x78,
		0x69, 0x6d, 0x75, 0x73, 0x47, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x61, 0x78, 0x74, 0x72,
		0x6f, 0x6e, 0x4d, 0x61, 0x78, 0x77, 0x65, 0x73, 0x74, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x24,
		0x31, 0x4e, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x58, 0x35, 0x35, 0x20,
		0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x5f, 0x35, 0x5f, 0x47, 0x4f, 0x5f, 0x4c, 0x54,
		0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x47, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x41,
		0x73, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x41, 0x73, 0x74,
		0x72, 0x6f, 0x20, 0x24, 0x31, 0x22, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x5a, 0x35, 0x41,
		0x73, 0x74, 0x72, 0x6f, 0x20, 0x58, 0x34, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x20,
		0x47, 0x4f, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x34, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x4e, 0x69,
		0x74, 0x72, 0x6f, 0x20, 0x34, 0x73, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x47, 0x72,
		0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x20, 0x47, 0x4f, 0x41, 0x73, 0x74, 0x72, 0x6f,
		0x36, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x36, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x5f, 0x50, 0x68,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x39, 0x73, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x50, 0x68,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x39, 0x73, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x5f, 0x50, 0x68,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x39, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x50, 0x68, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x39, 0x4d, 0x61, 0x7a, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20,
		0x58, 0x4d, 0x61, 0x7a, 0x65, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53, 0x53, 0x42, 0x2d, 0x24,
		0x31, 0x4d, 0x65, 0x63, 0x65, 0x72, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x37, 0x38, 0x35, 0x58, 0x31, 0x30, 0x31, 0x30,
		0x4d, 0x31, 0x37, 0x51, 0x46, 0x36, 0x20, 0x24, 0x31, 0x47, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x38, 0x30, 0x30, 0x50, 0x33,
		0x31, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69,
		0x66, 0x65, 0x20, 0x38, 0x30, 0x30, 0x50, 0x33, 0x32, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x31, 0x30, 0x31, 0x50, 0x35,
		0x31, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69,
		0x66, 0x65, 0x20, 0x4d, 0x37, 0x24, 0x31, 0x51, 0x46, 0x36, 0x4d, 0x65, 0x63, 0x6f, 0x6f, 0x6c,
		0x4b, 0x4d, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x4d, 0x39, 0x20, 0x54, 0x56, 0x20, 0x42, 0x6f,
		0x78, 0x42, 0x42, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d,
		0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x57, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x44, 0x56, 0x42, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x4d,
		0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x38, 0x53, 0x20,
		0x4d, 0x61, 0x78, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x63, 0x6f, 0x6d, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x37, 0x35, 0x30, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x39, 0x37, 0x30, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x37, 0x30, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x58, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x58, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x48, 0x58, 0x20,
		0x37, 0x2e, 0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x48, 0x58, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x37, 0x2e, 0x30, 0x22, 0x20, 0x47, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x24, 0x31, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x38, 0x37, 0x35, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x4d, 0x2d, 0x53, 0x50, 0x31, 0x41,
		0x47, 0x4f, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20,
		0x47, 0x6f, 0x20, 0x33, 0x47, 0x4d, 0x2d, 0x53, 0x50, 0x37, 0x78, 0x47, 0x4f, 0x33, 0x47, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x69, 0x50,
		0x72, 0x6f, 0x20, 0x33, 0x47, 0x31, 0x41, 0x45, 0x43, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61,
		0x64, 0x20, 0x31, 0x30, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x32, 0x20, 0x33,
		0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x53,
		0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x53,
		0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x2e, 0x37,
		0x22, 0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x34, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20, 0x53, 0x34, 0x20,
		0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x58, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4d, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4d, 0x58, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x48,
		0x44, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x48, 0x44, 0x20, 0x69, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x20, 0x33, 0x47, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x41, 0x7a,
		0x69, 0x6d, 0x75, 0x74, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x42, 0x34,
		0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47,
		0x35, 0x35, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20,
		0x42, 0x35, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f,
		0x20, 0x47, 0x35, 0x33, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75,
		0x6f, 0x20, 0x47, 0x37, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44,
		0x75, 0x6f, 0x20, 0x53, 0x35, 0x33, 0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x35, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64,
		0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x36, 0x35, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61,
		0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x35, 0x31, 0x55, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x34, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x35, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x58, 0x24, 0x31, 0x55, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x24, 0x31, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x65, 0x64, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
		0x66, 0x65, 0x74, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x24, 0x31, 0x4d,
		0x65, 0x67, 0x61, 0x46, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x2b, 0x4d, 0x46, 0x4c, 0x6f,
		0x67, 0x69, 0x6e, 0x34, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x4c,
		0x6f, 0x67, 0x69, 0x6e, 0x20, 0x33, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x53, 0x50, 0x2d, 0x41,
		0x32, 0x30, 0x69, 0x4d, 0x69, 0x6e, 0x74, 0x56, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x65,
		0x69, 0x74, 0x75, 0x54, 0x38, 0x54, 0x38, 0x73, 0x54, 0x39, 0x4d, 0x38, 0x73, 0x32, 0x4d, 0x65,
		0x69, 0x7a, 0x75, 0x4d, 0x32, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x24, 0x31, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x4d, 0x31, 0x45, 0x4d, 0x32, 0x45, 0x4d, 0x32, 0x4d, 0x33, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x4d, 0x35, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d,
		0x33, 0x73, 0x4d, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x58, 0x32, 0x4d, 0x58, 0x33, 0x4d, 0x58,
		0x34, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x58, 0x34, 0x4d, 0x58, 0x35, 0x6d, 0x31, 0x20, 0x6d, 0x65,
		0x74, 0x61, 0x6c, 0x4d, 0x31, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x4d, 0x38, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4d, 0x38, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x52, 0x4f, 0x20, 0x37, 0x50, 0x52,
		0x4f, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x52, 0x4f, 0x20, 0x24, 0x31, 0x4d,
		0x58, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x31, 0x36, 0x54, 0x31, 0x36,
		0x74, 0x68, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x35,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x31, 0x36, 0x74, 0x68, 0x31, 0x36, 0x58, 0x31, 0x36, 0x73, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x33, 0x4d, 0x65, 0x6c, 0x72, 0x6f, 0x73, 0x65, 0x53, 0x39, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x32, 0x30, 0x31, 0x39, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x53, 0x6c,
		0x69, 0x6d, 0x20, 0x33, 0x2e, 0x34, 0x22, 0x4d, 0x65, 0x6d, 0x75, 0x70, 0x53, 0x6c, 0x69, 0x64,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x4e, 0x47, 0x24, 0x31, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x50, 0x61, 0x64, 0x20, 0x4e, 0x47, 0x24,
		0x31, 0x20, 0x33, 0x47, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x50, 0x61, 0x64, 0x20, 0x37, 0x30, 0x34,
		0x24, 0x31, 0x4d, 0x69, 0x58, 0x7a, 0x6f, 0x4d, 0x45, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x4d,
		0x58, 0x31, 0x30, 0x32, 0x31, 0x20, 0x33, 0x47, 0x4d, 0x58, 0x24, 0x31, 0x20, 0x34, 0x47, 0x4d,
		0x45, 0x31, 0x30, 0x32, 0x35, 0x20, 0x33, 0x47, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x4d, 0x61, 0x78,
		0x41, 0x51, 0x35, 0x30, 0x30, 0x31, 0x20, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x41,
		0x51, 0x35, 0x30, 0x30, 0x31, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x4a, 0x75, 0x69, 0x63,
		0x65, 0x20, 0x32, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x4a, 0x75, 0x69, 0x63, 0x65, 0x20,
		0x34, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x34, 0x35, 0x36,
		0x30, 0x4d, 0x4d, 0x58, 0x49, 0x4e, 0x20, 0x32, 0x42, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20,
		0x35, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43, 0x61,
		0x6e, 0x76, 0x61, 0x73, 0x20, 0x54, 0x61, 0x62, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x51, 0x24, 0x31,
		0x51, 0x34, 0x31, 0x37, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x42,
		0x6f, 0x6c, 0x74, 0x20, 0x50, 0x61, 0x63, 0x65, 0x59, 0x55, 0x20, 0x59, 0x75, 0x72, 0x65, 0x6b,
		0x61, 0x20, 0x59, 0x55, 0x35, 0x30, 0x34, 0x30, 0x59, 0x55, 0x20, 0x59, 0x75, 0x72, 0x65, 0x6b,
		0x61, 0x20, 0x53, 0x20, 0x59, 0x55, 0x35, 0x35, 0x33, 0x30, 0x51, 0x34, 0x32, 0x34, 0x42, 0x6f,
		0x6c, 0x74, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74, 0x20,
		0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x34, 0x32, 0x36, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
		0x20, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x32, 0x4e, 0x38, 0x32, 0x31, 0x36, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x4e, 0x31, 0x31, 0x4e, 0x38, 0x33, 0x30, 0x31, 0x49, 0x6e, 0x66,
		0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x4e, 0x31, 0x32, 0x51, 0x34, 0x34, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x51, 0x33, 0x35, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20,
		0x32, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x4d, 0x61, 0x67,
		0x6e, 0x75, 0x73, 0x20, 0x48, 0x44, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x58, 0x70, 0x72,
		0x65, 0x73, 0x73, 0x20, 0x32, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x58, 0x70, 0x72, 0x65,
		0x73, 0x73, 0x56, 0x64, 0x65, 0x6f, 0x20, 0x34, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x31,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74, 0x20, 0x24, 0x31, 0x69, 0x4f, 0x6e,
		0x65, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x4e, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x49,
		0x4e, 0x20, 0x31, 0x62, 0x4b, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x34, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x34, 0x33, 0x35, 0x4c, 0x75, 0x6d, 0x69,
		0x61, 0x20, 0x35, 0x33, 0x32, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x33, 0x35, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x33, 0x35,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x34, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35,
		0x35, 0x30, 0x52, 0x4d, 0x2d, 0x31, 0x30, 0x31, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36,
		0x33, 0x38, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x58, 0x4c, 0x20, 0x4c,
		0x54, 0x45, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x58, 0x4c, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x4c, 0x54,
		0x45, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20,
		0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x4c, 0x75, 0x6d, 0x69,
		0x61, 0x20, 0x36, 0x35, 0x30, 0x52, 0x4d, 0x2d, 0x31, 0x31, 0x35, 0x32, 0x4c, 0x75, 0x6d, 0x69,
		0x61, 0x20, 0x36, 0x35, 0x30, 0x20, 0x53, 0x53, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x35,
		0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x20, 0x58, 0x4c, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x20,
		0x58, 0x4c, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x31, 0x33, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x31, 0x35, 0x33,
		0x30, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x33, 0x53,
		0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x53, 0x75, 0x72, 0x66,
		0x61, 0x63, 0x65, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x32, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65,
		0x20, 0x44, 0x75, 0x6f, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x63, 0x72,
		0x6f, 0x74, 0x65, 0x63, 0x68, 0x45, 0x2d, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x69,
		0x6e, 0x69, 0x78, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x38, 0x48, 0x4e, 0x45, 0x4f, 0x20, 0x55, 0x32,
		0x32, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x45, 0x4f,
		0x20, 0x58, 0x38, 0x48, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x38, 0x38,
		0x69, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x37, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x35, 0x4e, 0x45, 0x4f,
		0x20, 0x58, 0x24, 0x31, 0x4e, 0x45, 0x4f, 0x20, 0x55, 0x31, 0x4e, 0x45, 0x4f, 0x20, 0x5a, 0x36,
		0x34, 0x4e, 0x45, 0x4f, 0x20, 0x55, 0x39, 0x48, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x43, 0x6f, 0x6f,
		0x6c, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x20, 0x24, 0x31, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x69,
		0x6e, 0x74, 0x74, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x73, 0x68, 0x4d, 0x69, 0x6e, 0x74, 0x74,
		0x20, 0x24, 0x31, 0x4d, 0x69, 0x6f, 0x4d, 0x6f, 0x62, 0x69, 0x78, 0x20, 0x4d, 0x36, 0x4d, 0x69,
		0x6f, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x51, 0x75, 0x61,
		0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x20, 0x37,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6f, 0x6e, 0x65, 0x48,
		0x65, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x72, 0x61, 0x79, 0x4d, 0x49, 0x44, 0x4d, 0x20,
		0x24, 0x31, 0x4d, 0x50, 0x4d, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x74, 0x6f, 0x33, 0x32, 0x35, 0x35,
		0x41, 0x33, 0x37, 0x20, 0x5a, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x69, 0x74, 0x73, 0x75,
		0x62, 0x69, 0x73, 0x68, 0x69, 0x4d, 0x69, 0x74, 0x73, 0x75, 0x69, 0x4d, 0x6f, 0x62, 0x69, 0x49,
		0x6f, 0x54, 0x4d, 0x6f, 0x62, 0x69, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x6f, 0x62, 0x69, 0x57, 0x69, 0x72, 0x65, 0x4b, 0x41, 0x4e, 0x55, 0x4e, 0x41,
		0x4b, 0x61, 0x6e, 0x75, 0x6e, 0x61, 0x4b, 0x57, 0x41, 0x4e, 0x49, 0x54, 0x41, 0x4b, 0x77, 0x61,
		0x6e, 0x69, 0x74, 0x61, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x45, 0x31, 0x31, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x45, 0x31, 0x31, 0x4d, 0x6f, 0x62, 0x69, 0x63, 0x65, 0x6c, 0x4c, 0x45, 0x47, 0x45,
		0x4e, 0x44, 0x20, 0x4d, 0x41, 0x58, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x78,
		0x42, 0x4c, 0x49, 0x4e, 0x4b, 0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x42, 0x45, 0x52, 0x52, 0x59, 0x31,
		0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x31, 0x42, 0x45, 0x52, 0x52, 0x59, 0x20, 0x32, 0x42, 0x65,
		0x72, 0x72, 0x79, 0x20, 0x32, 0x54, 0x52, 0x45, 0x4e, 0x44, 0x59, 0x20, 0x32, 0x54, 0x72, 0x65,
		0x6e, 0x64, 0x79, 0x20, 0x32, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42,
		0x45, 0x52, 0x52, 0x59, 0x42, 0x65, 0x72, 0x72, 0x79, 0x54, 0x52, 0x45, 0x4e, 0x44, 0x59, 0x20,
		0x50, 0x4c, 0x55, 0x53, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54,
		0x52, 0x45, 0x4e, 0x44, 0x59, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x59, 0x50, 0x45, 0x5f,
		0x58, 0x48, 0x79, 0x70, 0x65, 0x20, 0x58, 0x48, 0x59, 0x50, 0x45, 0x48, 0x79, 0x70, 0x65, 0x44,
		0x41, 0x4e, 0x44, 0x59, 0x5f, 0x5a, 0x41, 0x4d, 0x44, 0x61, 0x6e, 0x64, 0x79, 0x20, 0x5a, 0x61,
		0x6d, 0x44, 0x41, 0x4e, 0x44, 0x59, 0x44, 0x61, 0x6e, 0x64, 0x79, 0x41, 0x53, 0x54, 0x52, 0x4f,
		0x56, 0x45, 0x4e, 0x55, 0x53, 0x5f, 0x47, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x47, 0x6f, 0x54,
		0x41, 0x4e, 0x47, 0x4f, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x46, 0x45, 0x4e, 0x44, 0x59, 0x5f, 0x44, 0x53, 0x46, 0x65, 0x6e, 0x64, 0x79,
		0x20, 0x44, 0x53, 0x52, 0x45, 0x42, 0x45, 0x4c, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x52, 0x37, 0x5f,
		0x31, 0x52, 0x37, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x5f, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20,
		0x31, 0x5a, 0x4f, 0x4f, 0x4d, 0x5f, 0x31, 0x5a, 0x6f, 0x6f, 0x6d, 0x20, 0x31, 0x48, 0x45, 0x52,
		0x4f, 0x5f, 0x44, 0x53, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x44, 0x53, 0x46, 0x41, 0x4d, 0x45, 0x5f,
		0x44, 0x53, 0x46, 0x61, 0x6d, 0x65, 0x20, 0x44, 0x53, 0x46, 0x41, 0x4d, 0x45, 0x46, 0x61, 0x6d,
		0x65, 0x42, 0x45, 0x41, 0x4d, 0x4e, 0x65, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4e, 0x45, 0x4f, 0x5f,
		0x31, 0x4e, 0x65, 0x6f, 0x52, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
		0x20, 0x47, 0x6f, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x31, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
		0x52, 0x31, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x31, 0x52, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43,
		0x6c, 0x69, 0x6b, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x43, 0x6c, 0x69, 0x6b, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x43, 0x4c, 0x49, 0x4b, 0x43, 0x6c, 0x69, 0x6b, 0x50, 0x55, 0x4c, 0x53, 0x45, 0x5f, 0x31,
		0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x31, 0x50, 0x55, 0x52, 0x45, 0x20, 0x50, 0x4c, 0x55, 0x53,
		0x50, 0x75, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x70,
		0x6c, 0x75, 0x73, 0x46, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x4f, 0x4f,
		0x4d, 0x2d, 0x48, 0x5a, 0x6f, 0x6f, 0x6d, 0x20, 0x48, 0x46, 0x65, 0x76, 0x65, 0x72, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x4d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x58,
		0x31, 0x20, 0x24, 0x31, 0x45, 0x31, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x58, 0x51, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d,
		0x62, 0x6f, 0x20, 0x53, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29,
		0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x53, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x37, 0x29, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x53, 0x32, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75,
		0x6d, 0x62, 0x6f, 0x20, 0x4a, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4c, 0x61, 0x69, 0x20,
		0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x4a, 0x4d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72,
		0x5f, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x5f, 0x4a, 0x32, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d,
		0x62, 0x6f, 0x20, 0x4a, 0x32, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x5a,
		0x55, 0x4d, 0x42, 0x4f, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x75, 0x6e, 0x61, 0x20, 0x24, 0x31,
		0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x4c, 0x41, 0x49, 0x20, 0x59, 0x75,
		0x6b, 0x69, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x75, 0x6b, 0x69, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x6f,
		0x72, 0x6f, 0x20, 0x24, 0x31, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x65, 0x6e, 0x61, 0x4c, 0x61, 0x69,
		0x20, 0x5a, 0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x5a, 0x4f,
		0x52, 0x4f, 0x5f, 0x34, 0x47, 0x5a, 0x6f, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x6d, 0x6f, 0x62, 0x69,
		0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x4c, 0x41, 0x49, 0x20,
		0x35, 0x31, 0x32, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x4c, 0x61, 0x69, 0x20, 0x35, 0x31, 0x32,
		0x4c, 0x61, 0x69, 0x20, 0x35, 0x30, 0x34, 0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74,
		0x61, 0x72, 0x20, 0x4c, 0x41, 0x49, 0x20, 0x59, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x6d, 0x6f, 0x62,
		0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x20, 0x58, 0x20, 0x32,
		0x30, 0x31, 0x37, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x58, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x20,
		0x58, 0x20, 0x4d, 0x41, 0x58, 0x20, 0x32, 0x30, 0x31, 0x38, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20,
		0x58, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x6f, 0x6f, 0x6c, 0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69,
		0x73, 0x74, 0x61, 0x72, 0x20, 0x4b, 0x41, 0x54, 0x20, 0x34, 0x35, 0x32, 0x20, 0x42, 0x75, 0x69,
		0x6c, 0x64, 0x4b, 0x61, 0x74, 0x20, 0x34, 0x35, 0x32, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74,
		0x61, 0x72, 0x5f, 0x4c, 0x41, 0x49, 0x5f, 0x59, 0x4f, 0x4c, 0x4c, 0x4f, 0x20, 0x42, 0x75, 0x69,
		0x6c, 0x64, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x6f, 0x6c, 0x6c, 0x6f, 0x4d, 0x6f, 0x62, 0x69, 0x6f,
		0x6c, 0x61, 0x4d, 0x53, 0x35, 0x30, 0x58, 0x36, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x20, 0x49, 0x49,
		0x50, 0x6f, 0x6c, 0x79, 0x73, 0x20, 0x4d, 0x53, 0x34, 0x35, 0x4c, 0x31, 0x4d, 0x53, 0x35, 0x35,
		0x58, 0x36, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x4d, 0x53,
		0x35, 0x35, 0x58, 0x35, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x53, 0x35,
		0x35, 0x4c, 0x31, 0x47, 0x41, 0x49, 0x41, 0x4d, 0x53, 0x35, 0x30, 0x4c, 0x31, 0x49, 0x6e, 0x74,
		0x69, 0x4d, 0x42, 0x2d, 0x32, 0x39, 0x30, 0x30, 0x20, 0x51, 0x55, 0x41, 0x54, 0x54, 0x52, 0x4f,
		0x4d, 0x42, 0x2d, 0x32, 0x39, 0x30, 0x30, 0x20, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x4d,
		0x53, 0x34, 0x33, 0x41, 0x33, 0x30, 0x30, 0x30, 0x4d, 0x53, 0x34, 0x35, 0x41, 0x34, 0x30, 0x30,
		0x30, 0x65, 0x4f, 0x6e, 0x20, 0x34, 0x35, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x34, 0x30, 0x30, 0x30,
		0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x34, 0x35, 0x30, 0x30, 0x65,
		0x4f, 0x6e, 0x20, 0x35, 0x30, 0x20, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x53,
		0x35, 0x30, 0x41, 0x35, 0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x20, 0x38, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x36, 0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e,
		0x20, 0x35, 0x30, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x31, 0x36, 0x4d, 0x53, 0x35, 0x30, 0x42,
		0x31, 0x31, 0x30, 0x30, 0x30, 0x57, 0x61, 0x76, 0x65, 0x35, 0x57, 0x61, 0x76, 0x65, 0x20, 0x35,
		0x4d, 0x6f, 0x62, 0x69, 0x73, 0x74, 0x65, 0x6c, 0x4d, 0x6f, 0x62, 0x6f, 0x4d, 0x6f, 0x64, 0x65,
		0x63, 0x6f, 0x6d, 0x58, 0x69, 0x6e, 0x6f, 0x20, 0x5a, 0x24, 0x31, 0x20, 0x58, 0x24, 0x32, 0x46,
		0x72, 0x65, 0x65, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x57, 0x61, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4d, 0x6f, 0x66, 0x75, 0x74, 0x4d, 0x6f, 0x74, 0x6f,
		0x72, 0x6f, 0x6c, 0x61, 0x4d, 0x4f, 0x54, 0x2d, 0x56, 0x33, 0x36, 0x30, 0x56, 0x33, 0x36, 0x30,
		0x53, 0x70, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d,
		0x45, 0x46, 0x69, 0x72, 0x65, 0x45, 0x64, 0x67, 0x65, 0x20, 0x53, 0x45, 0x64, 0x67, 0x65, 0x20,
		0x53, 0x33, 0x30, 0x45, 0x64, 0x67, 0x65, 0x20, 0x32, 0x30, 0x45, 0x64, 0x67, 0x65, 0x20, 0x53,
		0x20, 0x50, 0x72, 0x6f, 0x44, 0x65, 0x66, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x6f, 0x74,
		0x6f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x51, 0x75, 0x65, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x58, 0x54, 0x44, 0x65, 0x66, 0x79, 0x44, 0x65, 0x66, 0x79, 0x20, 0x58, 0x54, 0x41, 0x64,
		0x6d, 0x69, 0x72, 0x61, 0x6c, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x6f,
		0x74, 0x6f, 0x6c, 0x75, 0x78, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x75, 0x73, 0x49, 0x72, 0x6f, 0x6e,
		0x52, 0x6f, 0x63, 0x6b, 0x41, 0x74, 0x72, 0x69, 0x78, 0x4d, 0x6f, 0x74, 0x6f, 0x6c, 0x75, 0x78,
		0x65, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x2d, 0x53, 0x49, 0x4d, 0x41, 0x74, 0x72, 0x69, 0x78, 0x20,
		0x54, 0x56, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x47, 0x6c, 0x61, 0x6d, 0x4d,
		0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72,
		0x69, 0x66, 0x79, 0x20, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x54, 0x38, 0x38, 0x32, 0x44,
		0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x56, 0x44, 0x72, 0x6f, 0x69, 0x64,
		0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x69, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x34, 0x50, 0x68,
		0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x51, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x66, 0x79, 0x20,
		0x4d, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x4d, 0x44, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a,
		0x52, 0x20, 0x44, 0x31, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x44,
		0x33, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x48, 0x44, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x45, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x20, 0x28, 0x58, 0x54, 0x32, 0x30,
		0x35, 0x32, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x33, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x32, 0x20, 0x28, 0x34, 0x47, 0x2d, 0x4c, 0x54,
		0x45, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x45, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x36, 0x20,
		0x28, 0x58, 0x54, 0x32, 0x30, 0x30, 0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45,
		0x35, 0x20, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x35, 0x20,
		0x53, 0x75, 0x70, 0x72, 0x61, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x35, 0x20, 0x47, 0x6f, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x45, 0x24, 0x31, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x73, 0x44, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4d, 0x61,
		0x78, 0x78, 0x20, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x32, 0x44, 0x72, 0x6f, 0x69, 0x64,
		0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x24, 0x31, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x34, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x36, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x54,
		0x32, 0x31, 0x33, 0x37, 0x2d, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x30, 0x58, 0x54,
		0x32, 0x31, 0x37, 0x31, 0x2d, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x31, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x58, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x58, 0x20, 0x50, 0x75, 0x72, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x58, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f,
		0x20, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x34, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x33, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x5a, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x32, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x32, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x4d, 0x50, 0x33, 0x30, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x50, 0x33, 0x30, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x54, 0x32, 0x32, 0x30, 0x31, 0x2d, 0x32, 0x45, 0x64, 0x67,
		0x65, 0x20, 0x58, 0x33, 0x30, 0x45, 0x64, 0x67, 0x65, 0x20, 0x32, 0x30, 0x20, 0x46, 0x75, 0x73,
		0x69, 0x6f, 0x6e, 0x45, 0x64, 0x67, 0x65, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x45,
		0x64, 0x67, 0x65, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x64, 0x67, 0x65, 0x20, 0x35,
		0x47, 0x20, 0x55, 0x57, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x45, 0x64, 0x67, 0x65, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x45, 0x64, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x20,
		0x48, 0x79, 0x70, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x4f, 0x6e, 0x65,
		0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20,
		0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f,
		0x6e, 0x65, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x41, 0x63, 0x74,
		0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20,
		0x6d, 0x61, 0x63, 0x72, 0x6f, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d, 0x6f,
		0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57,
		0x20, 0x61, 0x63, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x20, 0x41, 0x63,
		0x65, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x47,
		0x20, 0x55, 0x57, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x6d, 0x6f, 0x74, 0x6f,
		0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x61, 0x63, 0x65, 0x4f,
		0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x41, 0x63, 0x65, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c,
		0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x58, 0x54, 0x32, 0x31, 0x31,
		0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75,
		0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x73,
		0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53,
		0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x73,
		0x74, 0x79, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c,
		0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x58,
		0x54, 0x32, 0x30, 0x39, 0x33, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x6d, 0x6f, 0x74, 0x6f,
		0x20, 0x67, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x70,
		0x72, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x6f,
		0x20, 0x67, 0x20, 0x70, 0x75, 0x72, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x75,
		0x72, 0x65, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x66, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x47, 0x20, 0x46, 0x61, 0x73, 0x74, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x35,
		0x47, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x35, 0x47, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x47, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x34, 0x30, 0x20, 0x46,
		0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x47, 0x36, 0x30, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x28,
		0x58, 0x54, 0x31, 0x39, 0x32, 0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24,
		0x31, 0x20, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x6f, 0x20, 0x28, 0x58, 0x54, 0x31, 0x39, 0x35, 0x32, 0x44, 0x4c,
		0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x6f,
		0x20, 0x4d, 0x61, 0x78, 0x78, 0x20, 0x28, 0x58, 0x54, 0x31, 0x39, 0x35, 0x35, 0x44, 0x4c, 0x29,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x53, 0x75, 0x70, 0x72, 0x61, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x24,
		0x31, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x4d, 0x41, 0x58, 0x58,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x24, 0x31,
		0x24, 0x32, 0x24, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x24, 0x31, 0x24, 0x32, 0x4d, 0x6f, 0x74,
		0x6f, 0x72, 0x6f, 0x69, 0x58, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x33, 0x36, 0x30, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x41, 0x43, 0x54, 0x56, 0x58, 0x54, 0x32, 0x30, 0x37, 0x31, 0x2d, 0x34, 0x52, 0x41,
		0x5a, 0x52, 0x20, 0x35, 0x47, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29,
		0x52, 0x41, 0x5a, 0x52, 0x20, 0x24, 0x31, 0x52, 0x49, 0x5a, 0x52, 0x20, 0x24, 0x31, 0x44, 0x52,
		0x4f, 0x49, 0x44, 0x20, 0x24, 0x31, 0x4d, 0x6f, 0x76, 0x69, 0x63, 0x46, 0x34, 0x35, 0x30, 0x32,
		0x4d, 0x70, 0x6d, 0x61, 0x6e, 0x4d, 0x50, 0x31, 0x30, 0x30, 0x69, 0x20, 0x4f, 0x43, 0x54, 0x41,
		0x4d, 0x50, 0x51, 0x43, 0x47, 0x31, 0x30, 0x20, 0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6c,
		0x61, 0x73, 0x65, 0x72, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x20,
		0x4d, 0x61, 0x78, 0x47, 0x45, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x53, 0x36, 0x30, 0x46, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x31,
		0x30, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x37, 0x53, 0x51, 0x43, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x20, 0x33, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f,
		0x72, 0x65, 0x4d, 0x4c, 0x24, 0x31, 0x2d, 0x4d, 0x37, 0x73, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x4d, 0x37, 0x73, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x4c, 0x30, 0x31,
		0x2d, 0x4d, 0x37, 0x20, 0x53, 0x44, 0x4d, 0x39, 0x20, 0x33, 0x47, 0x4d, 0x37, 0x20, 0x33, 0x47,
		0x20, 0x41, 0x31, 0x30, 0x4d, 0x79, 0x47, 0x69, 0x63, 0x61, 0x48, 0x44, 0x52, 0x20, 0x24, 0x31,
		0x20, 0x42, 0x6f, 0x78, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x45, 0x6e,
		0x6a, 0x6f, 0x79, 0x20, 0x74, 0x76, 0x20, 0x62, 0x6f, 0x78, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x20, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x54, 0x56, 0x20, 0x42, 0x6f, 0x78,
		0x41, 0x54, 0x56, 0x24, 0x31, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x79, 0x50, 0x61,
		0x64, 0x20, 0x24, 0x31, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x6d, 0x79, 0x54, 0x61,
		0x62, 0x5f, 0x31, 0x30, 0x49, 0x49, 0x49, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20,
		0x49, 0x49, 0x49, 0x6d, 0x79, 0x54, 0x61, 0x62, 0x31, 0x30, 0x49, 0x49, 0x4d, 0x79, 0x54, 0x61,
		0x62, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x6d, 0x79, 0x54, 0x36, 0x20, 0x44, 0x54, 0x56, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x5f, 0x37, 0x5f, 0x33, 0x47, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x37, 0x22, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x56, 0x69, 0x65, 0x77, 0x5f, 0x38, 0x5f, 0x4c, 0x54, 0x45, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x56, 0x69, 0x65, 0x77, 0x20, 0x38, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x56, 0x69, 0x65, 0x77, 0x5f, 0x39, 0x5f, 0x36, 0x5f, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x56, 0x69, 0x65, 0x77, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x33, 0x47, 0x43, 0x75, 0x62, 0x65,
		0x5f, 0x4c, 0x54, 0x45, 0x43, 0x75, 0x62, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x5f, 0x34, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x34, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67,
		0x79, 0x20, 0x24, 0x31, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67,
		0x79, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x78, 0x65, 0x20, 0x4d, 0x20, 0x4c, 0x54,
		0x45, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x32, 0x48,
		0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x48, 0x61, 0x6d, 0x6d, 0x65,
		0x72, 0x20, 0x49, 0x72, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20,
		0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41,
		0x63, 0x74, 0x69, 0x76, 0x65, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x63, 0x74, 0x69,
		0x76, 0x65, 0x20, 0x32, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76,
		0x65, 0x20, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x58,
		0x45, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x78, 0x65, 0x20,
		0x50, 0x72, 0x6f, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x32,
		0x5f, 0x50, 0x52, 0x4f, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x5f, 0x33, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x33, 0x41, 0x58, 0x45, 0x5f, 0x4d, 0x5f, 0x4c, 0x54, 0x45, 0x43, 0x2d, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x5f, 0x70, 0x69, 0x78, 0x43, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x69,
		0x78, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x32, 0x6d, 0x79, 0x41, 0x31, 0x37, 0x46, 0x55,
		0x4e, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x55, 0x4e, 0x20, 0x24, 0x31, 0x20,
		0x4c, 0x54, 0x45, 0x46, 0x55, 0x4e, 0x20, 0x24, 0x31, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x4d, 0x59, 0x32, 0x37, 0x6d, 0x79, 0x32, 0x37, 0x6d, 0x79, 0x58, 0x31, 0x32, 0x6d, 0x79, 0x58,
		0x49, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6d, 0x79, 0x58, 0x49, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x6d, 0x79, 0x58, 0x49, 0x33, 0x51, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x42, 0x45, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x20, 0x31, 0x38, 0x78, 0x39, 0x24, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x72, 0x6f, 0x77, 0x6e, 0x20, 0x31, 0x50, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f,
		0x49, 0x49, 0x49, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x49, 0x49, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x55, 0x4e, 0x41, 0x5f, 0x49, 0x49, 0x4c,
		0x75, 0x6e, 0x61, 0x20, 0x49, 0x49, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x38, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x79, 0x57, 0x69, 0x67,
		0x6f, 0x4d, 0x79, 0x57, 0x69, 0x67, 0x6f, 0x20, 0x43, 0x69, 0x74, 0x79, 0x33, 0x43, 0x69, 0x74,
		0x79, 0x20, 0x33, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x47, 0x49, 0x49, 0x49, 0x45, 0x78,
		0x63, 0x69, 0x74, 0x65, 0x20, 0x47, 0x33, 0x4d, 0x79, 0x6d, 0x61, 0x67, 0x61, 0x4d, 0x79, 0x72,
		0x69, 0x61, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x46, 0x49, 0x56, 0x45, 0x46, 0x69, 0x76, 0x65,
		0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x34, 0x47, 0x47, 0x72,
		0x61, 0x6e, 0x64, 0x20, 0x34, 0x47, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x57, 0x69, 0x64, 0x65,
		0x5f, 0x34, 0x47, 0x57, 0x69, 0x64, 0x65, 0x20, 0x34, 0x47, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f,
		0x57, 0x69, 0x64, 0x65, 0x5f, 0x32, 0x57, 0x69, 0x64, 0x65, 0x20, 0x32, 0x4d, 0x79, 0x72, 0x6f,
		0x73, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x4d, 0x49, 0x44, 0x2d, 0x24, 0x31, 0x4e, 0x45,
		0x43, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x20, 0x41, 0x6d, 0x61, 0x64, 0x61, 0x6e, 0x61, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x73, 0x20, 0x55, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x45, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45,
		0x20, 0x54, 0x45, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x20, 0x54, 0x53, 0x24, 0x31, 0x4e, 0x45, 0x58, 0x42, 0x4f, 0x58, 0x4d, 0x58, 0x51, 0x2d, 0x50,
		0x72, 0x6f, 0x2d, 0x4e, 0x45, 0x58, 0x42, 0x4f, 0x58, 0x4d, 0x58, 0x51, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x58, 0x51, 0x2d, 0x4e, 0x45, 0x58, 0x42, 0x4f, 0x58, 0x4d, 0x58, 0x51, 0x4e, 0x45, 0x58,
		0x4f, 0x4e, 0x4e, 0x47, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x63, 0x73, 0x4e, 0x47, 0x4d, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x35, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x32, 0x47, 0x42, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x4f, 0x41, 0x43, 0x6f, 0x72, 0x65, 0x20,
		0x46, 0x6f, 0x72, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x4c, 0x45, 0x48, 0x75, 0x6d,
		0x6d, 0x65, 0x72, 0x20, 0x4c, 0x45, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x32, 0x30, 0x31,
		0x39, 0x5f, 0x52, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x52, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x39, 0x29, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x6f, 0x76,
		0x65, 0x20, 0x53, 0x45, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x45, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x53,
		0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x48, 0x33, 0x53, 0x45, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x20, 0x48, 0x33, 0x4c, 0x6f, 0x6f, 0x70, 0x48, 0x34, 0x53, 0x45, 0x4d, 0x47, 0x31,
		0x32, 0x48, 0x34, 0x34, 0x53, 0x45, 0x48, 0x31, 0x30, 0x4c, 0x45, 0x53, 0x50, 0x52, 0x49, 0x4e,
		0x54, 0x34, 0x47, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34, 0x47, 0x56, 0x69, 0x76, 0x6f,
		0x20, 0x34, 0x47, 0x4e, 0x4f, 0x42, 0x55, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x56, 0x6f,
		0x6c, 0x74, 0x20, 0x4e, 0x58, 0x35, 0x4e, 0x4f, 0x47, 0x41, 0x4e, 0x4f, 0x47, 0x41, 0x50, 0x41,
		0x44, 0x20, 0x37, 0x47, 0x4e, 0x55, 0x55, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x36,
		0x30, 0x30, 0x31, 0x4c, 0x53, 0x35, 0x35, 0x30, 0x31, 0x4c, 0x4d, 0x31, 0x39, 0x4e, 0x35, 0x37,
		0x30, 0x32, 0x4c, 0x4e, 0x35, 0x35, 0x30, 0x31, 0x4c, 0x41, 0x35, 0x4c, 0x4e, 0x35, 0x30, 0x30,
		0x32, 0x4c, 0x41, 0x37, 0x4c, 0x4e, 0x35, 0x35, 0x30, 0x32, 0x4c, 0x41, 0x31, 0x30, 0x4c, 0x4e,
		0x59, 0x58, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x59, 0x58, 0x5f, 0x41, 0x31, 0x4e,
		0x59, 0x58, 0x5f, 0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x4e, 0x59, 0x58, 0x5f, 0x45, 0x47, 0x4f, 0x45,
		0x67, 0x6f, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x45, 0x4e, 0x49, 0x58, 0x46, 0x65, 0x6e, 0x69, 0x78,
		0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c, 0x59, 0x5f, 0x49, 0x49, 0x46, 0x6c, 0x79, 0x20, 0x49, 0x49,
		0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c, 0x59, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x46, 0x6c, 0x79, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c, 0x59, 0x4e, 0x59, 0x58, 0x5f, 0x48,
		0x49, 0x54, 0x48, 0x69, 0x74, 0x4e, 0x59, 0x58, 0x5f, 0x4a, 0x41, 0x4b, 0x4a, 0x61, 0x6b, 0x4e,
		0x59, 0x58, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x4a, 0x6f, 0x69, 0x6e, 0x4e, 0x59, 0x58, 0x5f, 0x4e,
		0x4f, 0x42, 0x41, 0x5f, 0x49, 0x49, 0x4e, 0x6f, 0x62, 0x61, 0x20, 0x49, 0x49, 0x4e, 0x59, 0x58,
		0x5f, 0x4e, 0x4f, 0x42, 0x41, 0x4e, 0x6f, 0x62, 0x61, 0x4e, 0x59, 0x58, 0x5f, 0x4f, 0x52, 0x42,
		0x49, 0x53, 0x4f, 0x72, 0x62, 0x69, 0x73, 0x52, 0x65, 0x78, 0x4e, 0x59, 0x58, 0x5f, 0x53, 0x48,
		0x41, 0x44, 0x45, 0x53, 0x68, 0x61, 0x64, 0x65, 0x4e, 0x59, 0x58, 0x5f, 0x53, 0x4b, 0x59, 0x53,
		0x6b, 0x79, 0x4e, 0x59, 0x58, 0x5f, 0x53, 0x50, 0x41, 0x52, 0x4b, 0x4e, 0x59, 0x58, 0x5f, 0x56,
		0x4f, 0x58, 0x4e, 0x59, 0x58, 0x5f, 0x5a, 0x45, 0x55, 0x5a, 0x5f, 0x48, 0x44, 0x5a, 0x65, 0x75,
		0x73, 0x20, 0x48, 0x44, 0x47, 0x4c, 0x41, 0x4d, 0x41, 0x52, 0x47, 0x4f, 0x4e, 0x4e, 0x61, 0x62,
		0x69, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x54, 0x61, 0x62, 0x20, 0x48, 0x44, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x42, 0x69, 0x67, 0x20, 0x54, 0x61, 0x62, 0x20, 0x48, 0x44, 0x20, 0x24, 0x31, 0x2e,
		0x30, 0x22, 0x4e, 0x42, 0x54, 0x59, 0x30, 0x37, 0x53, 0x4d, 0x4b, 0x47, 0x42, 0x61, 0x72, 0x62,
		0x69, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4e, 0x42, 0x46, 0x50, 0x30,
		0x37, 0x50, 0x4d, 0x4b, 0x47, 0x46, 0x69, 0x73, 0x68, 0x65, 0x72, 0x20, 0x50, 0x72, 0x69, 0x63,
		0x65, 0x20, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x53, 0x4e, 0x42, 0x30, 0x32, 0x2d, 0x4e, 0x56, 0x37, 0x41, 0x32, 0x53, 0x20,
		0x54, 0x61, 0x62, 0x4e, 0x41, 0x42, 0x49, 0x32, 0x2d, 0x4e, 0x56, 0x37, 0x41, 0x32, 0x20, 0x54,
		0x61, 0x62, 0x4e, 0x61, 0x6f, 0x6d, 0x69, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x6d, 0x62,
		0x61, 0x72, 0x44, 0x61, 0x6d, 0x6d, 0x61, 0x72, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
		0x4e, 0x61, 0x76, 0x52, 0x6f, 0x61, 0x64, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x79, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x68, 0x61, 0x6e, 0x64, 0x79, 0x4e, 0x65, 0x78, 0x6f,
		0x20, 0x48, 0x61, 0x6e, 0x64, 0x79, 0x4e, 0x45, 0x58, 0x4f, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54,
		0x20, 0x44, 0x55, 0x4f, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x44,
		0x75, 0x6f, 0x4e, 0x45, 0x58, 0x4f, 0x20, 0x45, 0x56, 0x4f, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x45,
		0x76, 0x6f, 0x4d, 0x4f, 0x56, 0x49, 0x4f, 0x20, 0x32, 0x4d, 0x6f, 0x76, 0x69, 0x6f, 0x20, 0x32,
		0x4e, 0x61, 0x76, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x50, 0x2d, 0x37, 0x35, 0x32, 0x47, 0x6f, 0x4e,
		0x50, 0x2d, 0x37, 0x35, 0x32, 0x20, 0x47, 0x6f, 0x4e, 0x61, 0x76, 0x69, 0x74, 0x65, 0x63, 0x68,
		0x4e, 0x61, 0x76, 0x69, 0x74, 0x65, 0x6c, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x24, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x45, 0x39, 0x30, 0x30, 0x20, 0x46, 0x75, 0x6c, 0x6c, 0x20, 0x48,
		0x44, 0x4e, 0x61, 0x76, 0x6f, 0x6e, 0x4d, 0x69, 0x7a, 0x75, 0x20, 0x4d, 0x35, 0x30, 0x35, 0x20,
		0x4c, 0x54, 0x45, 0x4d, 0x69, 0x7a, 0x75, 0x20, 0x24, 0x31, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d,
		0x65, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x46, 0x69, 0x6e,
		0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x46, 0x69,
		0x6e, 0x65, 0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20,
		0x46, 0x69, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65,
		0x20, 0x46, 0x69, 0x6e, 0x65, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x43, 0x68, 0x69,
		0x65, 0x66, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x75, 0x72, 0x65, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x75, 0x72, 0x65, 0x53,
		0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x75, 0x72, 0x65, 0x20, 0x4d,
		0x69, 0x63, 0x72, 0x6f, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x6c, 0x61, 0x74,
		0x69, 0x6e, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x24, 0x31, 0x4f,
		0x72, 0x70, 0x68, 0x65, 0x75, 0x73, 0x20, 0x33, 0x47, 0x50, 0x72, 0x65, 0x64, 0x61, 0x74, 0x6f,
		0x72, 0x20, 0x24, 0x31, 0x52, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x20, 0x33, 0x47, 0x20, 0x38, 0x47,
		0x42, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4e, 0x65,
		0x63, 0x6e, 0x6f, 0x74, 0x4e, 0x65, 0x66, 0x66, 0x6f, 0x73, 0x43, 0x35, 0x4c, 0x59, 0x35, 0x30,
		0x4e, 0x65, 0x66, 0x66, 0x6f, 0x73, 0x20, 0x58, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x32,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x6f, 0x6d, 0x69, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x49,
		0x51, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x24, 0x31, 0x47, 0x54, 0x61,
		0x62, 0x20, 0x37, 0x22, 0x20, 0x24, 0x31, 0x47, 0x4e, 0x51, 0x54, 0x2d, 0x37, 0x57, 0x54, 0x61,
		0x62, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4e, 0x65, 0x74, 0x67, 0x65, 0x61, 0x72,
		0x47, 0x54, 0x56, 0x31, 0x30, 0x30, 0x4e, 0x65, 0x6f, 0x54, 0x56, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x4e, 0x65, 0x75, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x49, 0x4d, 0x2d, 0x4e, 0x65, 0x77,
		0x20, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x65, 0x77, 0x67, 0x65, 0x6e, 0x4e, 0x65,
		0x77, 0x6c, 0x61, 0x6e, 0x64, 0x4d, 0x54, 0x39, 0x30, 0x20, 0x4f, 0x72, 0x63, 0x61, 0x4e, 0x65,
		0x77, 0x6d, 0x61, 0x6e, 0x4e, 0x65, 0x77, 0x73, 0x4d, 0x79, 0x4e, 0x65, 0x77, 0x73, 0x64, 0x61,
		0x79, 0x4e, 0x65, 0x78, 0x61, 0x4e, 0x65, 0x78, 0x69, 0x61, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x42,
		0x6f, 0x6f, 0x6b, 0x4e, 0x58, 0x30, 0x30, 0x38, 0x48, 0x44, 0x38, 0x47, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x75, 0x6d, 0x20, 0x38, 0x20, 0x48, 0x44, 0x4e, 0x58, 0x41, 0x38, 0x51, 0x43, 0x31, 0x31,
		0x36, 0x41, 0x72, 0x65, 0x73, 0x20, 0x38, 0x4e, 0x58, 0x31, 0x36, 0x41, 0x38, 0x31, 0x31, 0x36,
		0x4b, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x38, 0x4e, 0x58, 0x31, 0x36, 0x41, 0x31, 0x30, 0x31,
		0x33, 0x32, 0x53, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x31, 0x30, 0x4e, 0x58, 0x31, 0x36, 0x41,
		0x31, 0x31, 0x32, 0x36, 0x34, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x31, 0x31, 0x4e, 0x45, 0x58,
		0x54, 0x31, 0x30, 0x31, 0x35, 0x42, 0x41, 0x50, 0x41, 0x72, 0x65, 0x73, 0x20, 0x31, 0x30, 0x4e,
		0x58, 0x4d, 0x39, 0x30, 0x38, 0x48, 0x43, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x39,
		0x4e, 0x58, 0x30, 0x31, 0x30, 0x48, 0x49, 0x38, 0x47, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d,
		0x20, 0x31, 0x30, 0x20, 0x48, 0x69, 0x4e, 0x58, 0x37, 0x38, 0x35, 0x51, 0x43, 0x38, 0x47, 0x4e,
		0x58, 0x4d, 0x39, 0x30, 0x30, 0x4d, 0x43, 0x38, 0x20, 0x48, 0x44, 0x4e, 0x58, 0x4d, 0x37, 0x32,
		0x36, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x37, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x24,
		0x31, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x61, 0x62, 0x4e, 0x65, 0x78, 0x74, 0x62, 0x69, 0x74, 0x4e,
		0x6f, 0x61, 0x69, 0x6e, 0x4e, 0x4f, 0x41, 0x49, 0x4e, 0x4e, 0x6f, 0x62, 0x62, 0x79, 0x4e, 0x6f,
		0x62, 0x6c, 0x65, 0x78, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x36, 0x54, 0x41, 0x2d, 0x31, 0x30, 0x34,
		0x31, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x38, 0x20, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x63, 0x6f,
		0x38, 0x20, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x63, 0x6f, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x37,
		0x20, 0x70, 0x6c, 0x75, 0x73, 0x37, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x36, 0x2e, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x35, 0x2e, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x2e, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x20, 0x56, 0x20, 0x54, 0x65, 0x6c, 0x6c, 0x61, 0x58, 0x32,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x52, 0x58, 0x2d, 0x35, 0x31, 0x20, 0x4e, 0x39, 0x30, 0x30, 0x4e,
		0x39, 0x30, 0x30, 0x41, 0x73, 0x68, 0x61, 0x20, 0x35, 0x30, 0x30, 0x35, 0x31, 0x33, 0x30, 0x20,
		0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4e, 0x6f, 0x6b, 0x69, 0x61,
		0x35, 0x32, 0x33, 0x30, 0x4e, 0x75, 0x72, 0x6f, 0x6e, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x35, 0x32,
		0x33, 0x33, 0x35, 0x32, 0x33, 0x33, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x35, 0x38, 0x30, 0x30, 0x64,
		0x2d, 0x31, 0x35, 0x38, 0x30, 0x30, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x73,
		0x69, 0x63, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x36, 0x32, 0x31, 0x30, 0x4e, 0x61, 0x76, 0x69, 0x67,
		0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x61, 0x70,
		0x70, 0x68, 0x69, 0x72, 0x65, 0x20, 0x41, 0x72, 0x74, 0x65, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d,
		0x52, 0x48, 0x2d, 0x31, 0x37, 0x32, 0x32, 0x38, 0x30, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d, 0x52,
		0x48, 0x2d, 0x32, 0x37, 0x36, 0x32, 0x32, 0x35, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d, 0x52, 0x48,
		0x2d, 0x33, 0x34, 0x36, 0x35, 0x38, 0x35, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d, 0x52, 0x48, 0x2d,
		0x34, 0x38, 0x33, 0x31, 0x30, 0x35, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d, 0x52, 0x4d, 0x2d, 0x31,
		0x31, 0x33, 0x32, 0x30, 0x35, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x38, 0x30, 0x38, 0x20, 0x50, 0x75,
		0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x38, 0x30, 0x38, 0x20, 0x50, 0x75, 0x72, 0x65, 0x56, 0x69,
		0x65, 0x77, 0x24, 0x31, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x24, 0x31, 0x20, 0x53,
		0x6c, 0x69, 0x64, 0x65, 0x41, 0x73, 0x68, 0x61, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x35, 0x32, 0x30, 0x54, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x32, 0x30, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x35, 0x32, 0x36, 0x52, 0x4d, 0x2d, 0x38, 0x34, 0x36, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x36, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x30, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x35, 0x52, 0x4d, 0x2d, 0x31, 0x30, 0x32, 0x37, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x36, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x31,
		0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x32, 0x30, 0x54, 0x52, 0x4d, 0x2d, 0x38, 0x38,
		0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x37, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x33, 0x35, 0x4c, 0x75, 0x6d, 0x69,
		0x61, 0x20, 0x38, 0x30, 0x30, 0x43, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x30, 0x30, 0x4e,
		0x6f, 0x6b, 0x69, 0x61, 0x20, 0x38, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x32,
		0x30, 0x52, 0x4d, 0x2d, 0x39, 0x38, 0x34, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x33, 0x30,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x30, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39,
		0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x32, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x39, 0x32, 0x39, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x4d,
		0x2d, 0x31, 0x30, 0x34, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x33, 0x30, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x31, 0x30, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x31, 0x35,
		0x32, 0x30, 0x2e, 0x31, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x54, 0x32, 0x30, 0x54, 0x32, 0x30,
		0x4d, 0x61, 0x65, 0x6d, 0x6f, 0x20, 0x52, 0x58, 0x2d, 0x33, 0x34, 0x4e, 0x38, 0x30, 0x30, 0x4e,
		0x6f, 0x6d, 0x69, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x32, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x45, 0x76,
		0x6f, 0x20, 0x4d, 0x33, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x31, 0x69, 0x35, 0x30, 0x36, 0x20, 0x53,
		0x68, 0x69, 0x6e, 0x65, 0x69, 0x35, 0x37, 0x33, 0x30, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x2d, 0x58, 0x49, 0x72, 0x6f, 0x6e, 0x2d, 0x58, 0x49, 0x72,
		0x6f, 0x6e, 0x2d, 0x58, 0x31, 0x49, 0x72, 0x6f, 0x6e, 0x2d, 0x4d, 0x45, 0x76, 0x6f, 0x20, 0x4d,
		0x34, 0x45, 0x76, 0x6f, 0x20, 0x58, 0x32, 0x45, 0x76, 0x6f, 0x20, 0x58, 0x45, 0x76, 0x6f, 0x20,
		0x58, 0x31, 0x45, 0x76, 0x6f, 0x20, 0x5a, 0x42, 0x65, 0x61, 0x74, 0x20, 0x4d, 0x42, 0x65, 0x61,
		0x74, 0x20, 0x4d, 0x31, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x58, 0x32, 0x53, 0x70, 0x61, 0x63,
		0x65, 0x20, 0x4d, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x58, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20,
		0x4d, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x58, 0x31, 0x69, 0x24, 0x31,
		0x43, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x32, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x32, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x33, 0x20, 0x33, 0x47, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x20, 0x33, 0x47, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x43, 0x6f,
		0x72, 0x73, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x32, 0x43, 0x6f,
		0x72, 0x73, 0x61, 0x20, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x33,
		0x20, 0x33, 0x47, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74,
		0x20, 0x33, 0x47, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x6f,
		0x72, 0x73, 0x61, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69, 0x62,
		0x72, 0x61, 0x20, 0x33, 0x20, 0x33, 0x47, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x34, 0x20, 0x4c,
		0x54, 0x45, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x34, 0x20, 0x33, 0x47, 0x53, 0x74, 0x65, 0x6c,
		0x6c, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x6d, 0x75, 0x54, 0x31, 0x38, 0x53, 0x31,
		0x30, 0x53, 0x33, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x6f, 0x6f, 0x6e, 0x74, 0x65, 0x63,
		0x4e, 0x6f, 0x6f, 0x6e, 0x74, 0x65, 0x63, 0x20, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x54, 0x65, 0x63,
		0x68, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x4e,
		0x6f, 0x73, 0x4e, 0x6f, 0x76, 0x75, 0x20, 0x49, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x75, 0x20, 0x49,
		0x49, 0x4e, 0x6f, 0x76, 0x75, 0x4e, 0x65, 0x76, 0x61, 0x20, 0x38, 0x30, 0x52, 0x6f, 0x79, 0x61,
		0x4e, 0x6f, 0x75, 0x73, 0x4e, 0x53, 0x35, 0x35, 0x31, 0x31, 0x4e, 0x6f, 0x76, 0x65, 0x78, 0x4e,
		0x75, 0x41, 0x6e, 0x73, 0x4e, 0x45, 0x4f, 0x20, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64,
		0x4e, 0x75, 0x62, 0x69, 0x61, 0x4e, 0x58, 0x36, 0x36, 0x37, 0x4a, 0x5a, 0x33, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x4e, 0x58, 0x36, 0x36, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69,
		0x63, 0x20, 0x36, 0x4e, 0x58, 0x36, 0x36, 0x36, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x20, 0x36, 0x52, 0x4e, 0x58, 0x36, 0x31, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x20, 0x4d, 0x61, 0x72, 0x73, 0x4e, 0x58, 0x36, 0x32, 0x39, 0x4a, 0x52,
		0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x33, 0x5a, 0x35, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x5a, 0x35, 0x53, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35, 0x30, 0x33, 0x41, 0x5a,
		0x35, 0x53, 0x4e, 0x58, 0x35, 0x30, 0x36, 0x4a, 0x5a, 0x37, 0x4e, 0x58, 0x35, 0x30, 0x37, 0x4a,
		0x5a, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35, 0x30, 0x35, 0x4a, 0x5a, 0x37, 0x20,
		0x4d, 0x61, 0x78, 0x4e, 0x58, 0x35, 0x30, 0x38, 0x4a, 0x5a, 0x39, 0x5a, 0x39, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x5a, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x58, 0x35, 0x31, 0x32, 0x4a, 0x5a, 0x39,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4e, 0x58, 0x35, 0x33, 0x31, 0x4a, 0x5a,
		0x31, 0x31, 0x4e, 0x58, 0x35, 0x32, 0x33, 0x4a, 0x5f, 0x56, 0x31, 0x5a, 0x31, 0x31, 0x20, 0x4d,
		0x61, 0x78, 0x5a, 0x31, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x5a, 0x31, 0x31, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x36, 0x30, 0x36, 0x4a, 0x5a, 0x31, 0x38, 0x4e, 0x58, 0x36,
		0x31, 0x36, 0x4a, 0x5a, 0x31, 0x38, 0x53, 0x4e, 0x58, 0x36, 0x31, 0x31, 0x4a, 0x5a, 0x31, 0x38,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35, 0x35, 0x31, 0x4a, 0x4e, 0x58, 0x35, 0x36, 0x33,
		0x4a, 0x5a, 0x31, 0x37, 0x5a, 0x31, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35, 0x38,
		0x39, 0x4a, 0x5a, 0x31, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x4e, 0x58, 0x35, 0x39,
		0x31, 0x4a, 0x5a, 0x31, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x58, 0x35, 0x39, 0x35, 0x4a,
		0x5a, 0x31, 0x37, 0x53, 0x4e, 0x58, 0x36, 0x31, 0x32, 0x4a, 0x56, 0x31, 0x38, 0x4e, 0x58, 0x36,
		0x32, 0x37, 0x4a, 0x5a, 0x32, 0x30, 0x4e, 0x58, 0x35, 0x31, 0x33, 0x4a, 0x4d, 0x79, 0x20, 0x50,
		0x72, 0x61, 0x67, 0x75, 0x65, 0x4e, 0x58, 0x36, 0x30, 0x31, 0x4a, 0x4e, 0x58, 0x36, 0x30, 0x39,
		0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4e, 0x58, 0x36, 0x35, 0x39, 0x4a,
		0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x47, 0x4e, 0x58, 0x36, 0x35,
		0x31, 0x4a, 0x4e, 0x58, 0x35, 0x37, 0x33, 0x4a, 0x4d, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e,
		0x58, 0x39, 0x30, 0x37, 0x4a, 0x4d, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4e, 0x58, 0x35, 0x34,
		0x31, 0x4a, 0x4e, 0x31, 0x4e, 0x58, 0x35, 0x39, 0x37, 0x4a, 0x4e, 0x31, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x4e, 0x58, 0x35, 0x37, 0x35, 0x4a, 0x4e, 0x32, 0x4e, 0x33, 0x4e, 0x75, 0x62, 0x69, 0x61,
		0x20, 0x38, 0x30, 0x31, 0x31, 0x4e, 0x38, 0x30, 0x4e, 0x75, 0x76, 0x6f, 0x4e, 0x44, 0x34, 0x35,
		0x4e, 0x76, 0x69, 0x64, 0x69, 0x61, 0x54, 0x65, 0x67, 0x72, 0x61, 0x4e, 0x6f, 0x74, 0x65, 0x2d,
		0x50, 0x31, 0x36, 0x34, 0x30, 0x54, 0x65, 0x67, 0x72, 0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x50, 0x31, 0x36, 0x34, 0x30, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x4e, 0x56, 0x49, 0x44, 0x49, 0x41, 0x5f, 0x53, 0x48, 0x49,
		0x45, 0x4c, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x53, 0x48, 0x49, 0x45,
		0x4c, 0x44, 0x20, 0x54, 0x56, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x56, 0x49, 0x44, 0x49, 0x41, 0x20,
		0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x54, 0x56, 0x53,
		0x48, 0x49, 0x45, 0x4c, 0x44, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x50, 0x6f, 0x72, 0x74,
		0x61, 0x62, 0x6c, 0x65, 0x4f, 0x2b, 0x41, 0x69, 0x72, 0x33, 0x36, 0x30, 0x20, 0x41, 0x6c, 0x70,
		0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x2e, 0x30, 0x4f, 0x32, 0x4f, 0x41, 0x53,
		0x59, 0x53, 0x4f, 0x49, 0x4e, 0x4f, 0x4d, 0x4f, 0x4b, 0x53, 0x49, 0x4f, 0x4b, 0x57, 0x55, 0x4f,
		0x4d, 0x49, 0x58, 0x4f, 0x4e, 0x4e, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x42, 0x4f, 0x4f, 0x58, 0x4e,
		0x6f, 0x76, 0x61, 0x33, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33, 0x20,
		0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4b, 0x6f, 0x6e, 0x20, 0x54, 0x69, 0x6b, 0x69, 0x20, 0x24, 0x31,
		0x4f, 0x50, 0x50, 0x4f, 0x41, 0x31, 0x31, 0x41, 0x31, 0x31, 0x78, 0x41, 0x31, 0x32, 0x41, 0x31,
		0x35, 0x73, 0x41, 0x31, 0x36, 0x73, 0x41, 0x31, 0x35, 0x41, 0x31, 0x6b, 0x41, 0x31, 0x31, 0x6b,
		0x41, 0x31, 0x73, 0x41, 0x31, 0x36, 0x41, 0x33, 0x37, 0x66, 0x24, 0x31, 0x41, 0x33, 0x37, 0x66,
		0x41, 0x33, 0x39, 0x41, 0x33, 0x31, 0x41, 0x33, 0x33, 0x41, 0x33, 0x73, 0x41, 0x35, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x35, 0x33, 0x20, 0x35, 0x47, 0x41, 0x33, 0x32, 0x41, 0x33,
		0x35, 0x41, 0x35, 0x32, 0x41, 0x35, 0x33, 0x41, 0x35, 0x33, 0x73, 0x41, 0x35, 0x33, 0x73, 0x20,
		0x35, 0x47, 0x41, 0x35, 0x34, 0x20, 0x35, 0x47, 0x41, 0x35, 0x34, 0x41, 0x35, 0x34, 0x73, 0x41,
		0x35, 0x35, 0x20, 0x35, 0x47, 0x41, 0x35, 0x35, 0x41, 0x35, 0x35, 0x73, 0x20, 0x35, 0x47, 0x50,
		0x46, 0x56, 0x4d, 0x31, 0x30, 0x41, 0x35, 0x36, 0x20, 0x35, 0x47, 0x41, 0x35, 0x37, 0x41, 0x35,
		0x53, 0x41, 0x37, 0x31, 0x41, 0x37, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x41, 0x37,
		0x32, 0x41, 0x37, 0x33, 0x20, 0x35, 0x47, 0x41, 0x37, 0x34, 0x41, 0x37, 0x34, 0x20, 0x35, 0x47,
		0x41, 0x37, 0x32, 0x6e, 0x20, 0x35, 0x47, 0x41, 0x37, 0x37, 0x41, 0x37, 0x39, 0x41, 0x37, 0x6e,
		0x41, 0x37, 0x78, 0x41, 0x38, 0x33, 0x41, 0x38, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x41, 0x39, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x39, 0x31, 0x41, 0x39, 0x32, 0x41,
		0x39, 0x32, 0x73, 0x41, 0x39, 0x33, 0x41, 0x39, 0x33, 0x73, 0x50, 0x46, 0x55, 0x4d, 0x31, 0x30,
		0x41, 0x39, 0x36, 0x20, 0x35, 0x47, 0x41, 0x39, 0x34, 0x41, 0x39, 0x35, 0x41, 0x39, 0x78, 0x41,
		0x58, 0x35, 0x41, 0x58, 0x35, 0x73, 0x41, 0x58, 0x37, 0x46, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x46, 0x31, 0x31, 0x46, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x37, 0x46, 0x31, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x73, 0x46, 0x33, 0x46, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x46, 0x35, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x46, 0x37, 0x46, 0x39, 0x46, 0x39, 0x20, 0x50,
		0x72, 0x6f, 0x46, 0x31, 0x39, 0x73, 0x46, 0x31, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x39,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x46,
		0x69, 0x6e, 0x64, 0x20, 0x35, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x37,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x37, 0x61, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4e, 0x20, 0x35, 0x47,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x43, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x20,
		0x47, 0x75, 0x69, 0x74, 0x61, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4d, 0x65, 0x6c, 0x6f, 0x64,
		0x79, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4d, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x57,
		0x61, 0x79, 0x20, 0x53, 0x55, 0x6c, 0x69, 0x6b, 0x65, 0x20, 0x32, 0x46, 0x69, 0x6e, 0x64, 0x20,
		0x58, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x4c, 0x61, 0x6d, 0x62, 0x6f, 0x72, 0x67, 0x68,
		0x69, 0x6e, 0x69, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x32, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58,
		0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x4a, 0x6f, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x37, 0x78, 0x4b, 0x39,
		0x78, 0x4b, 0x39, 0x73, 0x4e, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x65, 0x6f, 0x20, 0x33,
		0x4e, 0x65, 0x6f, 0x20, 0x35, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x73,
		0x50, 0x69, 0x61, 0x6e, 0x6f, 0x52, 0x31, 0x31, 0x52, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x52, 0x31, 0x4b, 0x52, 0x31, 0x31, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x31, 0x31, 0x73,
		0x52, 0x31, 0x35, 0x52, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x31, 0x35, 0x78, 0x52, 0x31,
		0x37, 0x52, 0x31, 0x37, 0x20, 0x4e, 0x65, 0x6f, 0x52, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x52,
		0x31, 0x4c, 0x52, 0x31, 0x53, 0x52, 0x35, 0x52, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x37,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x46, 0x52, 0x39,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x39, 0x73, 0x52, 0x39, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x52, 0x65, 0x6e, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x41, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31,
		0x30, 0x58, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x32, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x32, 0x46, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x32, 0x5a, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x33, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x41, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x20, 0x35,
		0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x34, 0x47, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x20, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34,
		0x5a, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x46, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x35, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x41, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x35, 0x4b, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x46, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35,
		0x5a, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x36, 0x20, 0x5a, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20, 0x50,
		0x72, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x46,
		0x4a, 0x4d, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x50, 0x46, 0x43, 0x4d, 0x30, 0x30,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x20, 0x53, 0x45, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x20,
		0x50, 0x72, 0x6f, 0x4b, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4b, 0x39, 0x20, 0x35,
		0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x41, 0x63, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x41, 0x63,
		0x65, 0x20, 0x32, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x4b, 0x33, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x5a,
		0x41, 0x35, 0x39, 0x73, 0x4e, 0x31, 0x54, 0x4f, 0x59, 0x53, 0x49, 0x4e, 0x4f, 0x61, 0x6c, 0x65,
		0x41, 0x70, 0x65, 0x78, 0x20, 0x24, 0x31, 0x4f, 0x62, 0x61, 0x62, 0x6f, 0x78, 0x4f, 0x42, 0x41,
		0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x33, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x4f, 0x62,
		0x69, 0x53, 0x4a, 0x32, 0x2e, 0x36, 0x53, 0x4a, 0x31, 0x2e, 0x35, 0x53, 0x6b, 0x69, 0x70, 0x70,
		0x65, 0x72, 0x46, 0x6c, 0x61, 0x63, 0x6f, 0x6e, 0x50, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x46, 0x6f,
		0x78, 0x57, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x65, 0x4c, 0x65, 0x6f, 0x70, 0x61, 0x72,
		0x64, 0x42, 0x6f, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6f, 0x61, 0x50, 0x65, 0x6c, 0x69,
		0x63, 0x61, 0x6e, 0x4f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x43, 0x72, 0x61, 0x6e, 0x65, 0x48,
		0x6f, 0x72, 0x6e, 0x62, 0x69, 0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72,
		0x4f, 0x63, 0x75, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x47, 0x6f, 0x51,
		0x75, 0x65, 0x73, 0x74, 0x20, 0x32, 0x4f, 0x64, 0x79, 0x73, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20,
		0x41, 0x31, 0x30, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x54, 0x41, 0x42,
		0x33, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x62, 0x20,
		0x33, 0x54, 0x48, 0x41, 0x4e, 0x4f, 0x53, 0x5f, 0x31, 0x30, 0x54, 0x68, 0x61, 0x6e, 0x6f, 0x73,
		0x20, 0x31, 0x30, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x31, 0x30,
		0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x4e, 0x65,
		0x78, 0x74, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x58, 0x45, 0x4c,
		0x49, 0x4f, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x37, 0x5f, 0x33, 0x47,
		0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x62, 0x20, 0x37,
		0x20, 0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30, 0x45, 0x58, 0x54, 0x52, 0x45, 0x4d,
		0x45, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65,
		0x58, 0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x58,
		0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x58,
		0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33,
		0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x58,
		0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f,
		0x50, 0x52, 0x4f, 0x5f, 0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e,
		0x54, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x45, 0x6c, 0x65, 0x6d, 0x65,
		0x6e, 0x74, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x43, 0x4f, 0x4e,
		0x4e, 0x45, 0x43, 0x54, 0x38, 0x50, 0x4c, 0x55, 0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
		0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x37, 0x50,
		0x52, 0x4f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x41, 0x56, 0x45, 0x4e, 0x5f, 0x58, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x5f, 0x4c, 0x54, 0x45, 0x4d,
		0x61, 0x76, 0x65, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x20, 0x48, 0x44, 0x20, 0x4c, 0x54, 0x45, 0x4d,
		0x41, 0x56, 0x45, 0x4e, 0x5f, 0x58, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x4d, 0x61, 0x76, 0x65, 0x6e,
		0x20, 0x58, 0x31, 0x30, 0x20, 0x48, 0x44, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4d, 0x61, 0x76, 0x65, 0x6e,
		0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x52,
		0x61, 0x70, 0x69, 0x64, 0x20, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x52, 0x61, 0x70, 0x69, 0x64, 0x20,
		0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x41, 0x4f, 0x5f, 0x58, 0x31, 0x30, 0x54, 0x61, 0x6f,
		0x20, 0x58, 0x31, 0x30, 0x53, 0x50, 0x41, 0x43, 0x45, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53,
		0x5f, 0x33, 0x47, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x33, 0x47, 0x53, 0x50, 0x41, 0x43, 0x45, 0x31, 0x30, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x33,
		0x47, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47,
		0x54, 0x68, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x54, 0x38, 0x50,
		0x72, 0x6f, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x54, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x4a,
		0x55, 0x4e, 0x49, 0x4f, 0x52, 0x5f, 0x38, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x75, 0x6e, 0x69, 0x6f,
		0x72, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x44, 0x4d, 0x38, 0x31, 0x36, 0x48, 0x43, 0x4e,
		0x65, 0x6f, 0x20, 0x58, 0x45, 0x4f, 0x53, 0x31, 0x30, 0x45, 0x4f, 0x53, 0x20, 0x31, 0x30, 0x50,
		0x41, 0x43, 0x45, 0x5f, 0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x56, 0x32, 0x50, 0x61, 0x63,
		0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x56, 0x32, 0x50, 0x61, 0x63, 0x65, 0x20,
		0x31, 0x30, 0x41, 0x45, 0x4f, 0x4e, 0x41, 0x65, 0x6f, 0x6e, 0x46, 0x41, 0x4c, 0x43, 0x4f, 0x4e,
		0x5f, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x46, 0x61, 0x6c, 0x63, 0x6f,
		0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x46, 0x55, 0x53, 0x49,
		0x4f, 0x4e, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x37, 0x55, 0x4e, 0x4f, 0x5f, 0x58, 0x38,
		0x55, 0x6e, 0x6f, 0x20, 0x58, 0x38, 0x41, 0x44, 0x4d, 0x38, 0x30, 0x30, 0x30, 0x4b, 0x50, 0x54,
		0x69, 0x74, 0x61, 0x6e, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x5f, 0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45,
		0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x59, 0x52, 0x4f,
		0x5f, 0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x50, 0x79, 0x72, 0x6f, 0x20, 0x37,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4e, 0x4f, 0x56, 0x41, 0x5f, 0x58, 0x37, 0x5f,
		0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x58, 0x37, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4f, 0x44, 0x59, 0x53, 0x5f, 0x4e, 0x4f, 0x56, 0x41, 0x5f,
		0x58, 0x37, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x58, 0x37, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x31, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4e, 0x4f, 0x54, 0x4f, 0x53, 0x70, 0x6c, 0x75,
		0x73, 0x33, 0x47, 0x4e, 0x6f, 0x74, 0x6f, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47,
		0x4d, 0x41, 0x56, 0x45, 0x4e, 0x5f, 0x47, 0x31, 0x30, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x47,
		0x31, 0x30, 0x50, 0x45, 0x44, 0x49, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x57, 0x50, 0x65, 0x64,
		0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x57, 0x4e, 0x65, 0x6f, 0x20, 0x36, 0x20, 0x4c, 0x54,
		0x45, 0x53, 0x4c, 0x41, 0x44, 0x45, 0x5f, 0x58, 0x35, 0x35, 0x53, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x58, 0x35, 0x35, 0x49, 0x65, 0x6f, 0x73, 0x20, 0x24, 0x31, 0x4e, 0x6f, 0x6f, 0x6e, 0x4e, 0x6f,
		0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x6b, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x4f, 0x6b, 0x61, 0x70, 0x69, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
		0x20, 0x24, 0x31, 0x4f, 0x6e, 0x64, 0x61, 0x54, 0x39, 0x20, 0x53, 0x4d, 0x49, 0x44, 0x56, 0x38,
		0x32, 0x30, 0x57, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x38, 0x39, 0x31, 0x57,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x38, 0x39, 0x31, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x33, 0x47, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x43, 0x48, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x41, 0x69,
		0x72, 0x20, 0x43, 0x48, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39,
		0x20, 0x34, 0x47, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x38, 0x56, 0x39, 0x31,
		0x39, 0x20, 0x34, 0x47, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x38, 0x56,
		0x39, 0x37, 0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x34, 0x56, 0x39, 0x31, 0x39, 0x20, 0x43, 0x6f,
		0x72, 0x65, 0x20, 0x34, 0x56, 0x39, 0x38, 0x39, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x38, 0x56, 0x39, 0x38, 0x39, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20,
		0x38, 0x4f, 0x4e, 0x44, 0x41, 0x20, 0x56, 0x39, 0x38, 0x39, 0x56, 0x39, 0x38, 0x39, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x20, 0x38, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x32, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x31, 0x30, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x34, 0x47, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x32, 0x30, 0x20, 0x53,
		0x45, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x53, 0x45, 0x4f, 0x6e, 0x65, 0x50,
		0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43,
		0x45, 0x20, 0x35, 0x47, 0x43, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e,
		0x31, 0x30, 0x30, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x32, 0x30, 0x30, 0x20, 0x35, 0x47, 0x4e,
		0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31, 0x30, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31, 0x30, 0x20,
		0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e,
		0x6f, 0x72, 0x64, 0x20, 0x32, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20,
		0x32, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x38, 0x54, 0x38, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x39,
		0x52, 0x54, 0x20, 0x35, 0x47, 0x39, 0x52, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x45, 0x78,
		0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x37, 0x54, 0x37, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x37, 0x54, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x33, 0x54, 0x35, 0x54, 0x36, 0x54, 0x4f, 0x6e, 0x69, 0x78, 0x38, 0x22, 0x20,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x33, 0x47, 0x4f, 0x6e, 0x6b, 0x79, 0x6f, 0x4f, 0x6f,
		0x6b, 0x65, 0x65, 0x4f, 0x6f, 0x6b, 0x65, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x70, 0x65, 0x6c, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x45, 0x61, 0x73, 0x79, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f,
		0x32, 0x45, 0x61, 0x73, 0x79, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x4f, 0x70, 0x65,
		0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4a, 0x58, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x4a, 0x58, 0x4f, 0x70, 0x65, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x31, 0x20,
		0x34, 0x47, 0x4f, 0x70, 0x65, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x58, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x36, 0x4f, 0x70, 0x65, 0x6e,
		0x62, 0x6f, 0x78, 0x41, 0x53, 0x5f, 0x34, 0x4b, 0x5f, 0x43, 0x49, 0x5f, 0x50, 0x52, 0x4f, 0x41,
		0x53, 0x20, 0x34, 0x4b, 0x20, 0x43, 0x49, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x53, 0x5f, 0x34, 0x4b,
		0x5f, 0x43, 0x49, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x43, 0x49, 0x4f, 0x70, 0x73, 0x73, 0x6f,
		0x6e, 0x49, 0x75, 0x73, 0x61, 0x69, 0x20, 0x24, 0x31, 0x4f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x53,
		0x43, 0x2f, 0x49, 0x48, 0x44, 0x39, 0x32, 0x4c, 0x69, 0x76, 0x65, 0x62, 0x6f, 0x78, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x4e, 0x6f, 0x6c, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x6f, 0x6c, 0x61,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x4e, 0x75, 0x72, 0x61, 0x20, 0x32, 0x53, 0x65, 0x67, 0x6f, 0x46,
		0x75, 0x6e, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x44, 0x69, 0x76, 0x65, 0x20, 0x24, 0x31, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x44, 0x69, 0x76, 0x65, 0x20, 0x24, 0x31, 0x53, 0x50, 0x56, 0x20, 0x24,
		0x31, 0x4f, 0x72, 0x62, 0x69, 0x63, 0x53, 0x6c, 0x69, 0x6d, 0x4d, 0x61, 0x75, 0x69, 0x57, 0x6f,
		0x6e, 0x64, 0x65, 0x72, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x61, 0x4f, 0x72, 0x64, 0x69, 0x73, 0x73,
		0x69, 0x6d, 0x6f, 0x4f, 0x72, 0x69, 0x6f, 0x6e, 0x43, 0x52, 0x41, 0x4e, 0x45, 0x2d, 0x45, 0x56,
		0x42, 0x4f, 0x75, 0x6b, 0x69, 0x4f, 0x75, 0x6b, 0x69, 0x74, 0x65, 0x6c, 0x24, 0x31, 0x20, 0x4d,
		0x61, 0x78, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x78, 0x4b, 0x37, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x4f, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x78, 0x4f, 0x56, 0x2d, 0x56, 0x31, 0x30, 0x56, 0x65, 0x72,
		0x74, 0x69, 0x73, 0x20, 0x59, 0x61, 0x72, 0x64, 0x56, 0x65, 0x72, 0x74, 0x69, 0x73, 0x20, 0x35,
		0x30, 0x32, 0x31, 0x20, 0x41, 0x69, 0x6d, 0x56, 0x65, 0x72, 0x74, 0x69, 0x73, 0x20, 0x34, 0x30,
		0x30, 0x34, 0x20, 0x59, 0x6f, 0x75, 0x56, 0x65, 0x72, 0x74, 0x69, 0x73, 0x20, 0x24, 0x31, 0x4c,
		0x69, 0x76, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x37, 0x30, 0x33, 0x32, 0x4c, 0x69, 0x76, 0x65, 0x63,
		0x6f, 0x72, 0x65, 0x20, 0x37, 0x30, 0x33, 0x32, 0x51, 0x75, 0x61, 0x6c, 0x63, 0x6f, 0x72, 0x65,
		0x20, 0x31, 0x30, 0x31, 0x30, 0x51, 0x75, 0x61, 0x6c, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x31, 0x30,
		0x32, 0x37, 0x20, 0x34, 0x47, 0x51, 0x75, 0x61, 0x6c, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x31, 0x30,
		0x32, 0x37, 0x20, 0x24, 0x31, 0x47, 0x4f, 0x76, 0x76, 0x69, 0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x20,
		0x58, 0x31, 0x4f, 0x77, 0x77, 0x6f, 0x43, 0x61, 0x72, 0x6e, 0x69, 0x76, 0x61, 0x6c, 0x20, 0x42,
		0x35, 0x4f, 0x79, 0x73, 0x74, 0x65, 0x72, 0x73, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20,
		0x38, 0x30, 0x30, 0x69, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x50, 0x61, 0x63, 0x69,
		0x66, 0x69, 0x63, 0x20, 0x45, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x34, 0x47, 0x41,
		0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x20, 0x34, 0x47, 0x41, 0x6e, 0x74, 0x61, 0x72, 0x63,
		0x74, 0x69, 0x63, 0x45, 0x41, 0x6e, 0x74, 0x61, 0x72, 0x63, 0x74, 0x69, 0x63, 0x20, 0x45, 0x49,
		0x6e, 0x64, 0x69, 0x61, 0x6e, 0x56, 0x49, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x20, 0x56, 0x50, 0x61,
		0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x24, 0x31, 0x54, 0x37, 0x34, 0x4d, 0x61, 0x69, 0x5f, 0x33,
		0x47, 0x54, 0x37, 0x34, 0x4d, 0x41, 0x69, 0x20, 0x33, 0x47, 0x4f, 0x79, 0x79, 0x75, 0x54, 0x31,
		0x31, 0x20, 0x33, 0x47, 0x4f, 0x7a, 0x6f, 0x6e, 0x65, 0x48, 0x44, 0x50, 0x2d, 0x55, 0x50, 0x4d,
		0x6f, 0x64, 0x65, 0x20, 0x31, 0x20, 0x52, 0x52, 0x4d, 0x6f, 0x64, 0x65, 0x20, 0x31, 0x20, 0x52,
		0x53, 0x4d, 0x6f, 0x64, 0x65, 0x20, 0x31, 0x20, 0x4d, 0x44, 0x2d, 0x30, 0x31, 0x50, 0x50, 0x43,
		0x42, 0x4f, 0x58, 0x41, 0x72, 0x74, 0x2d, 0x50, 0x43, 0x42, 0x2d, 0x56, 0x31, 0x31, 0x36, 0x41,
		0x72, 0x74, 0x42, 0x65, 0x65, 0x2d, 0x50, 0x43, 0x42, 0x2d, 0x56, 0x32, 0x31, 0x36, 0x42, 0x65,
		0x65, 0x43, 0x6c, 0x61, 0x70, 0x2d, 0x50, 0x43, 0x42, 0x2d, 0x49, 0x33, 0x31, 0x36, 0x43, 0x6c,
		0x61, 0x70, 0x50, 0x43, 0x42, 0x2d, 0x54, 0x31, 0x30, 0x33, 0x43, 0x75, 0x72, 0x69, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x50, 0x43, 0x42, 0x2d, 0x54, 0x37, 0x31, 0x35, 0x54, 0x37, 0x31, 0x35, 0x50,
		0x43, 0x44, 0x50, 0x48, 0x34, 0x30, 0x30, 0x31, 0x50, 0x43, 0x44, 0x20, 0x41, 0x72, 0x67, 0x65,
		0x6e, 0x74, 0x69, 0x6e, 0x61, 0x50, 0x4f, 0x43, 0x4f, 0x4d, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x32, 0x31, 0x30, 0x39, 0x31, 0x31, 0x31, 0x36, 0x41, 0x47, 0x4d, 0x34, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x32, 0x32, 0x30, 0x31, 0x31, 0x31, 0x37, 0x50, 0x47, 0x4d, 0x34,
		0x20, 0x50, 0x72, 0x6f, 0x58, 0x33, 0x20, 0x4e, 0x46, 0x43, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x58, 0x33, 0x20, 0x47, 0x54, 0x46, 0x33, 0x20, 0x47, 0x54, 0x43, 0x33, 0x43, 0x33, 0x31, 0x46,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x4f, 0x50, 0x54, 0x45, 0x4c, 0x50, 0x39, 0x30, 0x30, 0x30,
		0x20, 0x4d, 0x61, 0x78, 0x50, 0x50, 0x54, 0x56, 0x50, 0x55, 0x4c, 0x49, 0x44, 0x50, 0x61, 0x63,
		0x6b, 0x61, 0x72, 0x64, 0x20, 0x42, 0x65, 0x6c, 0x6c, 0x44, 0x41, 0x59, 0x54, 0x4f, 0x4e, 0x41,
		0x2d, 0x47, 0x31, 0x32, 0x44, 0x61, 0x79, 0x74, 0x6f, 0x6e, 0x61, 0x20, 0x47, 0x31, 0x32, 0x4d,
		0x4f, 0x4e, 0x5a, 0x41, 0x2d, 0x54, 0x37, 0x4d, 0x6f, 0x6e, 0x7a, 0x61, 0x20, 0x54, 0x37, 0x50,
		0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x50, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x20, 0x54, 0x56,
		0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x50, 0x61, 0x6c, 0x6d, 0x54, 0x72, 0x65, 0x6f, 0x20, 0x24,
		0x31, 0x54, 0x75, 0x6e, 0x67, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x56, 0x47, 0x31, 0x30, 0x30, 0x50,
		0x65, 0x70, 0x69, 0x74, 0x6f, 0x50, 0x61, 0x6e, 0x61, 0x63, 0x6f, 0x6d, 0x54, 0x2d, 0x69, 0x37,
		0x30, 0x38, 0x44, 0x50, 0x61, 0x6e, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x50, 0x2d, 0x73, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20,
		0x50, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x58, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x49, 0x37,
		0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x78, 0x20, 0x24, 0x31,
		0x4c, 0x75, 0x6d, 0x69, 0x78, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x2d, 0x30, 0x32,
		0x44, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x54, 0x6f, 0x75, 0x67,
		0x68, 0x70, 0x61, 0x64, 0x20, 0x46, 0x5a, 0x2d, 0x42, 0x32, 0x44, 0x50, 0x35, 0x35, 0x20, 0x4e,
		0x6f, 0x76, 0x6f, 0x20, 0x34, 0x47, 0x50, 0x35, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x39, 0x30,
		0x32, 0x69, 0x50, 0x61, 0x6e, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x20, 0x4d, 0x49, 0x4c, 0x20,
		0x44, 0x4c, 0x4e, 0x41, 0x56, 0x69, 0x65, 0x72, 0x61, 0x20, 0x43, 0x61, 0x73, 0x74, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x4c, 0x69, 0x76, 0x65,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x50, 0x61, 0x6e, 0x74, 0x65, 0x63, 0x68, 0x41, 0x44, 0x52,
		0x39, 0x31, 0x30, 0x4c, 0x53, 0x74, 0x61, 0x72, 0x20, 0x51, 0x49, 0x4d, 0x2d, 0x41, 0x38, 0x37,
		0x30, 0x4b, 0x56, 0x65, 0x67, 0x61, 0x20, 0x49, 0x72, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x72, 0x6f,
		0x74, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x65, 0x6c, 0x69, 0x74, 0x74, 0x50, 0x65,
		0x6c, 0x69, 0x74, 0x74, 0x20, 0x54, 0x31, 0x20, 0x4d, 0x41, 0x58, 0x54, 0x31, 0x20, 0x4d, 0x61,
		0x78, 0x50, 0x65, 0x6c, 0x69, 0x74, 0x74, 0x20, 0x54, 0x31, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x54,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x6f, 0x6f, 0x58, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x2b, 0x70, 0x65, 0x6e, 0x64, 0x6f, 0x6f, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x69,
		0x6e, 0x69, 0x41, 0x35, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x72,
		0x61, 0x6d, 0x45, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x69, 0x78, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61,
		0x20, 0x37, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x6c, 0x69, 0x6d, 0x4d, 0x6f, 0x6e, 0x73,
		0x74, 0x65, 0x72, 0x20, 0x58, 0x35, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x24, 0x31, 0x50,
		0x65, 0x72, 0x66, 0x65, 0x6f, 0x50, 0x65, 0x72, 0x66, 0x65, 0x6f, 0x5f, 0x50, 0x46, 0x5f, 0x41,
		0x34, 0x35, 0x35, 0x31, 0x43, 0x48, 0x52, 0x4f, 0x4e, 0x4f, 0x50, 0x65, 0x72, 0x66, 0x65, 0x6f,
		0x5f, 0x50, 0x46, 0x5f, 0x41, 0x34, 0x35, 0x35, 0x32, 0x52, 0x41, 0x54, 0x45, 0x50, 0x68, 0x69,
		0x63, 0x6f, 0x6d, 0x6d, 0x43, 0x6c, 0x75, 0x65, 0x20, 0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
		0x20, 0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x33, 0x2b, 0x43, 0x6c, 0x75, 0x65, 0x20,
		0x24, 0x31, 0x50, 0x68, 0x69, 0x6c, 0x63, 0x6f, 0x50, 0x54, 0x42, 0x37, 0x50, 0x41, 0x50, 0x68,
		0x69, 0x6c, 0x69, 0x70, 0x73, 0x58, 0x65, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x24, 0x31,
		0x2f, 0x39, 0x36, 0x20, 0x34, 0x4b, 0x20, 0x55, 0x48, 0x44, 0x24, 0x31, 0x20, 0x34, 0x47, 0x20,
		0x4c, 0x54, 0x45, 0x4d, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x75, 0x2d, 0x72, 0x61, 0x79,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x28, 0x42, 0x44, 0x50, 0x24, 0x31, 0x29, 0x4e,
		0x65, 0x74, 0x54, 0x56, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x69, 0x73, 0x69, 0x6f,
		0x20, 0x24, 0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6d, 0x61, 0x78, 0x53, 0x61, 0x74, 0x75, 0x72,
		0x6e, 0x20, 0x58, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x61, 0x72, 0x73, 0x56, 0x65, 0x6e,
		0x75, 0x73, 0x20, 0x58, 0x50, 0x69, 0x50, 0x4f, 0x50, 0x69, 0x70, 0x6f, 0x4d, 0x39, 0x50, 0x72,
		0x6f, 0x50, 0x69, 0x63, 0x6f, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x64, 0x76, 0x72, 0x37,
		0x30, 0x30, 0x70, 0x69, 0x44, 0x56, 0x52, 0x37, 0x30, 0x30, 0x50, 0x49, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x42, 0x44, 0x50, 0x2d, 0x31, 0x36, 0x30, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x61, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x65, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x70, 0x68,
		0x6f, 0x6e, 0x65, 0x50, 0x69, 0x78, 0x75, 0x73, 0x52, 0x69, 0x64, 0x65, 0x20, 0x24, 0x31, 0x47,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x54, 0x68, 0x72, 0x65, 0x65, 0x20, 0x76, 0x24, 0x31, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x54, 0x77, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x46, 0x69, 0x76, 0x65, 0x68,
		0x69, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x37, 0x20, 0x33, 0x47, 0x48, 0x69, 0x4d, 0x61, 0x78, 0x20, 0x39, 0x2e, 0x36, 0x22,
		0x42, 0x6c, 0x61, 0x73, 0x74, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4a, 0x6f, 0x6b, 0x65, 0x72,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x33, 0x47, 0x52, 0x61, 0x7a, 0x65, 0x50, 0x69, 0x78, 0x75, 0x73, 0x5f, 0x4a, 0x65,
		0x74, 0x4a, 0x65, 0x74, 0x70, 0x69, 0x78, 0x75, 0x73, 0x20, 0x68, 0x69, 0x74, 0x20, 0x32, 0x48,
		0x69, 0x74, 0x20, 0x32, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x75,
		0x74, 0x65, 0x72, 0x73, 0x50, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x4d, 0x4f, 0x4d, 0x4f, 0x6d, 0x69,
		0x6e, 0x69, 0x53, 0x4d, 0x4f, 0x4d, 0x4f, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x6d, 0x6f,
		0x6d, 0x6f, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x47, 0x53, 0x4d, 0x4f, 0x4d, 0x4f, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x47, 0x53, 0x4d, 0x4f, 0x4d, 0x4f, 0x20, 0x24, 0x31, 0x50,
		0x6c, 0x75, 0x6d, 0x5a, 0x34, 0x30, 0x35, 0x47, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x33, 0x5a, 0x34,
		0x30, 0x37, 0x41, 0x78, 0x65, 0x20, 0x34, 0x5a, 0x35, 0x31, 0x36, 0x43, 0x6f, 0x6d, 0x70, 0x61,
		0x73, 0x73, 0x5a, 0x38, 0x31, 0x31, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x78, 0x20, 0x31, 0x31,
		0x5a, 0x37, 0x30, 0x39, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x78, 0x20, 0x37, 0x5a, 0x37, 0x31,
		0x32, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x78, 0x20, 0x31, 0x32, 0x50, 0x6c, 0x75, 0x7a, 0x7a,
		0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x31, 0x30, 0x20, 0x33, 0x47,
		0x41, 0x31, 0x30, 0x53, 0x55, 0x52, 0x46, 0x70, 0x61, 0x64, 0x20, 0x32, 0x53, 0x55, 0x52, 0x46,
		0x70, 0x61, 0x64, 0x20, 0x33, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x22, 0x53, 0x55, 0x52, 0x46,
		0x70, 0x61, 0x64, 0x20, 0x34, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x50, 0x4d, 0x38, 0x30, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x6f, 0x66,
		0x20, 0x56, 0x69, 0x65, 0x77, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x56, 0x2d, 0x48, 0x44, 0x4d, 0x49,
		0x2d, 0x4b, 0x42, 0x2d, 0x30, 0x31, 0x48, 0x44, 0x4d, 0x49, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x54, 0x56, 0x20, 0x44, 0x6f, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x56,
		0x2d, 0x48, 0x44, 0x4d, 0x49, 0x2d, 0x32, 0x30, 0x30, 0x42, 0x54, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x50, 0x43, 0x20, 0x48, 0x44, 0x4d, 0x49, 0x20, 0x44, 0x6f, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x4f,
		0x42, 0x2d, 0x35, 0x30, 0x34, 0x35, 0x4d, 0x6f, 0x62, 0x69, 0x69, 0x20, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x35, 0x30, 0x34, 0x35, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x35,
		0x30, 0x36, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35, 0x30, 0x36, 0x20, 0x4e, 0x61, 0x76, 0x69, 0x4f,
		0x4e, 0x59, 0x58, 0x20, 0x35, 0x30, 0x37, 0x20, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x4f, 0x56, 0x5f,
		0x54, 0x41, 0x42, 0x2d, 0x50, 0x35, 0x32, 0x37, 0x53, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35, 0x32,
		0x37, 0x53, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x35, 0x34, 0x37, 0x4f, 0x4e,
		0x59, 0x58, 0x20, 0x35, 0x34, 0x37, 0x20, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x4f, 0x56, 0x5f, 0x54,
		0x41, 0x42, 0x2d, 0x50, 0x52, 0x4f, 0x54, 0x41, 0x42, 0x32, 0x36, 0x50, 0x72, 0x6f, 0x54, 0x61,
		0x62, 0x20, 0x32, 0x36, 0x20, 0x58, 0x58, 0x4c, 0x20, 0x49, 0x50, 0x53, 0x50, 0x72, 0x6f, 0x54,
		0x61, 0x62, 0x20, 0x32, 0x35, 0x58, 0x58, 0x4c, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d,
		0x50, 0x4c, 0x31, 0x30, 0x31, 0x35, 0x4d, 0x6f, 0x62, 0x69, 0x69, 0x20, 0x31, 0x30, 0x31, 0x35,
		0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4d, 0x6f, 0x62, 0x69, 0x69, 0x20, 0x24,
		0x31, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x50,
		0x6f, 0x6c, 0x61, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x34, 0x30, 0x30, 0x35, 0x41, 0x54, 0x75, 0x72,
		0x62, 0x6f, 0x20, 0x43, 0x34, 0x50, 0x35, 0x30, 0x30, 0x35, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f,
		0x20, 0x43, 0x35, 0x50, 0x34, 0x30, 0x30, 0x36, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x44,
		0x34, 0x50, 0x53, 0x50, 0x54, 0x44, 0x32, 0x31, 0x4e, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20,
		0x44, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x34, 0x35, 0x32, 0x36, 0x41, 0x54, 0x75, 0x72,
		0x62, 0x6f, 0x20, 0x45, 0x50, 0x53, 0x50, 0x43, 0x4c, 0x33, 0x30, 0x41, 0x30, 0x43, 0x6f, 0x73,
		0x6d, 0x6f, 0x20, 0x43, 0x36, 0x50, 0x35, 0x30, 0x30, 0x36, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f,
		0x20, 0x4b, 0x50, 0x35, 0x35, 0x32, 0x36, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x50, 0x53, 0x50, 0x43, 0x4b, 0x32, 0x30, 0x4e, 0x41, 0x43, 0x6f, 0x73,
		0x6d, 0x6f, 0x20, 0x4b, 0x32, 0x50, 0x53, 0x50, 0x43, 0x4b, 0x32, 0x31, 0x4e, 0x41, 0x43, 0x6f,
		0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x35, 0x30, 0x32, 0x36,
		0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4c, 0x50, 0x53, 0x50, 0x43, 0x4c, 0x32, 0x30, 0x41,
		0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4c, 0x32, 0x50, 0x53, 0x50, 0x43, 0x4d, 0x32, 0x30,
		0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4d, 0x32, 0x50, 0x35, 0x30, 0x34, 0x36, 0x41,
		0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x50, 0x35, 0x73, 0x50, 0x35, 0x35, 0x32, 0x35, 0x41, 0x43,
		0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x51, 0x35, 0x73, 0x50, 0x35, 0x30, 0x34, 0x37, 0x41, 0x43, 0x6f,
		0x73, 0x6d, 0x6f, 0x20, 0x5a, 0x50, 0x53, 0x50, 0x43, 0x5a, 0x32, 0x30, 0x41, 0x30, 0x43, 0x6f,
		0x73, 0x6d, 0x6f, 0x20, 0x5a, 0x32, 0x50, 0x35, 0x30, 0x32, 0x35, 0x41, 0x4c, 0x35, 0x73, 0x50,
		0x72, 0x6f, 0x34, 0x36, 0x31, 0x31, 0x50, 0x52, 0x4f, 0x35, 0x30, 0x32, 0x33, 0x50, 0x68, 0x61,
		0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x35, 0x50, 0x52, 0x4f, 0x56, 0x34, 0x30, 0x30, 0x41, 0x67, 0x61,
		0x74, 0x65, 0x50, 0x52, 0x4f, 0x56, 0x33, 0x35, 0x30, 0x50, 0x72, 0x6f, 0x56, 0x33, 0x35, 0x30,
		0x53, 0x69, 0x67, 0x6d, 0x61, 0x20, 0x35, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x50, 0x53, 0x50, 0x54,
		0x33, 0x35, 0x30, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x33, 0x35, 0x30, 0x20, 0x47, 0x72, 0x69,
		0x73, 0x50, 0x53, 0x4e, 0x2d, 0x48, 0x31, 0x31, 0x36, 0x53, 0x6e, 0x61, 0x70, 0x4d, 0x49, 0x44,
		0x53, 0x31, 0x38, 0x35, 0x50, 0x52, 0x50, 0x75, 0x72, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x50, 0x6f, 0x6c, 0x65, 0x73, 0x74, 0x61, 0x72, 0x50, 0x6f, 0x6c, 0x79, 0x50, 0x61, 0x64, 0x50,
		0x6f, 0x6c, 0x79, 0x74, 0x72, 0x6f, 0x6e, 0x52, 0x32, 0x35, 0x30, 0x38, 0x52, 0x6f, 0x63, 0x6b,
		0x65, 0x74, 0x20, 0x51, 0x2d, 0x46, 0x69, 0x76, 0x65, 0x52, 0x32, 0x34, 0x30, 0x31, 0x52, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x20, 0x32, 0x58, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x52, 0x32,
		0x34, 0x30, 0x32, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x52, 0x31, 0x52, 0x6f, 0x63, 0x6b,
		0x65, 0x74, 0x20, 0x52, 0x32, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x52, 0x33, 0x52, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x20, 0x53, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x53, 0x32,
		0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20,
		0x54, 0x33, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x36, 0x20, 0x53, 0x45, 0x52, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x36, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x37,
		0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x34, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20,
		0x4a, 0x65, 0x74, 0x7a, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x4a, 0x65, 0x74, 0x7a, 0x20,
		0x35, 0x2e, 0x30, 0x34, 0x47, 0x34, 0x35, 0x30, 0x5a, 0x61, 0x70, 0x20, 0x35, 0x57, 0x36, 0x35,
		0x30, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x57,
		0x37, 0x34, 0x35, 0x32, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x53, 0x32, 0x57, 0x37, 0x35,
		0x35, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x56, 0x35, 0x57, 0x38, 0x35, 0x37, 0x30,
		0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x56, 0x37, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20,
		0x4c, 0x35, 0x30, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x53, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x34, 0x47, 0x35, 0x30, 0x30, 0x5a, 0x61, 0x70, 0x20,
		0x36, 0x20, 0x43, 0x6c, 0x65, 0x6f, 0x57, 0x38, 0x34, 0x38, 0x30, 0x43, 0x72, 0x79, 0x73, 0x74,
		0x61, 0x6c, 0x20, 0x34, 0x20, 0x57, 0x38, 0x34, 0x38, 0x30, 0x57, 0x37, 0x35, 0x33, 0x31, 0x57,
		0x69, 0x7a, 0x61, 0x72, 0x64, 0x20, 0x56, 0x57, 0x37, 0x34, 0x33, 0x30, 0x51, 0x75, 0x61, 0x64,
		0x72, 0x61, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x57, 0x37, 0x34, 0x33, 0x30, 0x5a, 0x61, 0x70,
		0x20, 0x36, 0x20, 0x50, 0x6f, 0x73, 0x68, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x46, 0x6c, 0x61, 0x7a, 0x5a, 0x61, 0x70, 0x20,
		0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x50, 0x6f, 0x73, 0x68,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x57, 0x31, 0x31, 0x30, 0x30, 0x53, 0x51, 0x32, 0x33, 0x35,
		0x32, 0x43, 0x6f, 0x73, 0x6d, 0x69, 0x63, 0x61, 0x20, 0x54, 0x37, 0x38, 0x30, 0x30, 0x52, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x20, 0x50, 0x61, 0x64, 0x50, 0x6f, 0x6d, 0x70, 0x50, 0x6f, 0x70, 0x70,
		0x6f, 0x78, 0x50, 0x6f, 0x70, 0x70, 0x6f, 0x78, 0x20, 0x50, 0x33, 0x50, 0x6f, 0x72, 0x73, 0x63,
		0x68, 0x65, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65, 0x20, 0x52, 0x65, 0x61, 0x72, 0x20, 0x53,
		0x65, 0x61, 0x74, 0x20, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e,
		0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x59, 0x50, 0x59, 0x5f, 0x53, 0x34, 0x35,
		0x30, 0x59, 0x50, 0x59, 0x20, 0x53, 0x34, 0x35, 0x30, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x34,
		0x20, 0x24, 0x31, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x34, 0x54, 0x31, 0x30, 0x38, 0x35, 0x4d,
		0x31, 0x30, 0x20, 0x34, 0x47, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x58, 0x4d, 0x31, 0x30, 0x20, 0x34,
		0x47, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x58, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x20,
		0x42, 0x47, 0x48, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c,
		0x20, 0x33, 0x32, 0x47, 0x42, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c,
		0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x32, 0x20, 0x46, 0x69, 0x74, 0x54, 0x77,
		0x69, 0x73, 0x74, 0x20, 0x32, 0x20, 0x47, 0x6f, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x58, 0x4c, 0x54, 0x77, 0x69, 0x73, 0x74,
		0x20, 0x53, 0x45, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x49, 0x54, 0x31, 0x30, 0x36, 0x30, 0x42, 0x59, 0x70, 0x79, 0x20, 0x24, 0x31, 0x54, 0x77, 0x69,
		0x73, 0x74, 0x20, 0x54, 0x61, 0x62, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x6f, 0x31, 0x38, 0x36, 0x48,
		0x53, 0x32, 0x30, 0x38, 0x30, 0x35, 0x33, 0x31, 0x58, 0x31, 0x41, 0x58, 0x45, 0x5f, 0x49, 0x49,
		0x41, 0x78, 0x65, 0x20, 0x49, 0x49, 0x31, 0x38, 0x36, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x35,
		0x33, 0x31, 0x50, 0x35, 0x34, 0x31, 0x31, 0x38, 0x35, 0x46, 0x54, 0x35, 0x30, 0x35, 0x30, 0x32,
		0x33, 0x31, 0x50, 0x35, 0x31, 0x31, 0x31, 0x38, 0x36, 0x46, 0x54, 0x31, 0x30, 0x38, 0x30, 0x32,
		0x33, 0x31, 0x50, 0x35, 0x37, 0x31, 0x31, 0x38, 0x36, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x32,
		0x33, 0x32, 0x50, 0x36, 0x33, 0x30, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x69, 0x6f, 0x50,
		0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x69, 0x6f, 0x20, 0x35, 0x35, 0x30, 0x30, 0x20, 0x44, 0x55,
		0x4f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x35, 0x30, 0x30,
		0x20, 0x44, 0x75, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24,
		0x31, 0x20, 0x44, 0x75, 0x6f, 0x50, 0x53, 0x50, 0x35, 0x35, 0x35, 0x31, 0x44, 0x55, 0x4f, 0x47,
		0x72, 0x61, 0x63, 0x65, 0x20, 0x53, 0x35, 0x50, 0x53, 0x50, 0x37, 0x35, 0x39, 0x30, 0x44, 0x55,
		0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x56, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50,
		0x37, 0x35, 0x35, 0x31, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x53, 0x37, 0x20,
		0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x34, 0x37, 0x30, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61,
		0x63, 0x65, 0x20, 0x58, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x33, 0x30, 0x44, 0x55, 0x4f, 0x47,
		0x72, 0x61, 0x63, 0x65, 0x20, 0x5a, 0x35, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33, 0x33, 0x44, 0x55,
		0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x5a, 0x33, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x35,
		0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x50, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35,
		0x35, 0x32, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x52, 0x35, 0x20, 0x4c, 0x54,
		0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x30, 0x36, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65,
		0x20, 0x51, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x31, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61,
		0x63, 0x65, 0x20, 0x4d, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x30, 0x31,
		0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x52, 0x37, 0x50, 0x53, 0x50, 0x37, 0x35,
		0x37, 0x30, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x50, 0x37, 0x20, 0x4c, 0x54,
		0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x37, 0x32, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65,
		0x20, 0x42, 0x37, 0x50, 0x53, 0x50, 0x33, 0x35, 0x35, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a,
		0x65, 0x20, 0x48, 0x33, 0x50, 0x53, 0x50, 0x35, 0x35, 0x32, 0x33, 0x44, 0x55, 0x4f, 0x4d, 0x75,
		0x7a, 0x65, 0x20, 0x48, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x35,
		0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x4d, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53,
		0x50, 0x33, 0x34, 0x39, 0x35, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x56, 0x33, 0x20,
		0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x33, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a,
		0x65, 0x20, 0x44, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x32, 0x30, 0x44,
		0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x42, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x38,
		0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x58, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53,
		0x50, 0x35, 0x35, 0x35, 0x33, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x46, 0x35, 0x20,
		0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x30, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a,
		0x65, 0x20, 0x41, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x34, 0x35, 0x44, 0x55, 0x4f, 0x4d, 0x75,
		0x7a, 0x65, 0x20, 0x45, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x31, 0x32,
		0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x45, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53,
		0x50, 0x33, 0x35, 0x31, 0x31, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x47, 0x33, 0x20,
		0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x32, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a,
		0x65, 0x20, 0x47, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x35, 0x30, 0x44,
		0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x47, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50,
		0x37, 0x35, 0x31, 0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x43, 0x37, 0x20, 0x4c,
		0x54, 0x45, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x43, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x32,
		0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x42, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33,
		0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x46, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34,
		0x37, 0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x4a, 0x33, 0x50, 0x53, 0x50, 0x35,
		0x35, 0x32, 0x34, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x4a, 0x35, 0x50, 0x53, 0x50,
		0x37, 0x35, 0x31, 0x31, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x42, 0x37, 0x50, 0x53,
		0x50, 0x33, 0x35, 0x31, 0x34, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x55, 0x33, 0x50,
		0x53, 0x50, 0x33, 0x35, 0x31, 0x33, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x56, 0x33,
		0x50, 0x53, 0x50, 0x33, 0x34, 0x31, 0x36, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x59,
		0x41, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x30, 0x36, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65,
		0x20, 0x59, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x32, 0x33, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a,
		0x65, 0x20, 0x52, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x37, 0x31, 0x44, 0x55, 0x4f, 0x57, 0x69,
		0x7a, 0x65, 0x20, 0x51, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x30,
		0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x47, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33,
		0x37, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x4e, 0x56, 0x33, 0x50, 0x53, 0x50, 0x33,
		0x35, 0x32, 0x38, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x50, 0x58, 0x33, 0x50, 0x53,
		0x50, 0x33, 0x35, 0x32, 0x37, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x4e, 0x4b, 0x33,
		0x50, 0x53, 0x50, 0x33, 0x34, 0x36, 0x38, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x4f,
		0x4b, 0x33, 0x50, 0x4d, 0x54, 0x33, 0x32, 0x37, 0x37, 0x5f, 0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74,
		0x69, 0x50, 0x61, 0x64, 0x20, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x20, 0x37, 0x2e, 0x30, 0x22,
		0x20, 0x33, 0x47, 0x50, 0x4d, 0x54, 0x34, 0x32, 0x30, 0x38, 0x4e, 0x6f, 0x64, 0x65, 0x20, 0x41,
		0x38, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x54, 0x34, 0x37, 0x37, 0x31, 0x52, 0x6f, 0x6f, 0x74, 0x20,
		0x41, 0x31, 0x30, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x50, 0x37, 0x30, 0x37, 0x30, 0x43, 0x33, 0x47,
		0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64, 0x20, 0x34, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f,
		0x6e, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x47, 0x65, 0x6f, 0x20, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x72, 0x20, 0x33, 0x47, 0x65, 0x6f, 0x20, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x72, 0x20, 0x32, 0x47, 0x72, 0x61, 0x63,
		0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x50, 0x4d, 0x54, 0x33, 0x32, 0x38, 0x37, 0x5f,
		0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64, 0x20, 0x52, 0x61, 0x6e, 0x67, 0x65,
		0x72, 0x20, 0x38, 0x2e, 0x30, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x54, 0x34, 0x32, 0x33, 0x38, 0x5f,
		0x34, 0x47, 0x51, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x57, 0x69, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x57, 0x69, 0x7a, 0x65, 0x20,
		0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32,
		0x47, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x70, 0x61, 0x64, 0x50, 0x44, 0x2d, 0x33, 0x31, 0x32, 0x37, 0x4e, 0x43, 0x50, 0x44, 0x2d, 0x33,
		0x31, 0x32, 0x37, 0x50, 0x72, 0x69, 0x6d, 0x75, 0x78, 0x49, 0x4f, 0x58, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x20, 0x36, 0x4b, 0x61, 0x70, 0x70, 0x61, 0x20, 0x24,
		0x31, 0x4b, 0x61, 0x70, 0x70, 0x61, 0x42, 0x65, 0x74, 0x61, 0x20, 0x32, 0x55, 0x50, 0x5a, 0x6f,
		0x6e, 0x64, 0x61, 0x20, 0x34, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x6f, 0x20, 0x36, 0x53, 0x69, 0x72,
		0x6f, 0x63, 0x6f, 0x20, 0x59, 0x50, 0x72, 0x69, 0x78, 0x74, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x53,
		0x63, 0x61, 0x6e, 0x50, 0x4c, 0x54, 0x24, 0x31, 0x50, 0x4c, 0x54, 0x24, 0x31, 0x47, 0x50, 0x72,
		0x6f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x61,
		0x6c, 0x63, 0x6f, 0x6e, 0x20, 0x58, 0x4c, 0x50, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x50, 0x72,
		0x6f, 0x74, 0x72, 0x75, 0x6c, 0x79, 0x50, 0x75, 0x72, 0x69, 0x73, 0x6d, 0x4c, 0x69, 0x62, 0x72,
		0x65, 0x6d, 0x20, 0x35, 0x51, 0x2d, 0x42, 0x6f, 0x78, 0x51, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x51, 0x2e, 0x42, 0x65, 0x6c, 0x6c, 0x51, 0x54, 0x41, 0x42, 0x31, 0x30, 0x45, 0x57, 0x51, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4a, 0x61, 0x7a, 0x7a, 0x58, 0x20, 0x4a, 0x53, 0x37, 0x20, 0x50,
		0x52, 0x4f, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x58, 0x20, 0x4a, 0x53, 0x37, 0x20, 0x50, 0x72, 0x6f,
		0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x58, 0x20, 0x4a, 0x53, 0x24, 0x31, 0x4e, 0x6f, 0x69, 0x72, 0x20,
		0x58, 0x31, 0x53, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x41, 0x36, 0x30, 0x30, 0x5a, 0x31, 0x32, 0x20,
		0x50, 0x52, 0x4f, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x5a, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x45,
		0x32, 0x20, 0x4e, 0x6f, 0x69, 0x72, 0x48, 0x6f, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x4e,
		0x6f, 0x69, 0x72, 0x20, 0x4c, 0x54, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x55, 0x4e, 0x41,
		0x20, 0x50, 0x52, 0x4f, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x49, 0x54, 0x41,
		0x20, 0x53, 0x56, 0x69, 0x74, 0x61, 0x20, 0x53, 0x4e, 0x49, 0x43, 0x45, 0x20, 0x53, 0x4e, 0x69,
		0x63, 0x65, 0x20, 0x53, 0x69, 0x24, 0x31, 0x69, 0x20, 0x28, 0x32, 0x30, 0x24, 0x32, 0x29, 0x69,
		0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x24, 0x31, 0x29, 0x69, 0x38, 0x69, 0x20, 0x50, 0x52, 0x4f,
		0x69, 0x38, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
		0x79, 0x20, 0x50, 0x52, 0x4f, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x50, 0x72, 0x6f, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x24,
		0x31, 0x47, 0x4c, 0x69, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x4c, 0x69, 0x24, 0x31, 0x20, 0x54,
		0x61, 0x62, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x51, 0x54, 0x45, 0x43,
		0x48, 0x51, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x51, 0x37, 0x53, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51,
		0x37, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x37, 0x53, 0x35, 0x35, 0x49, 0x4e,
		0x34, 0x47, 0x51, 0x37, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x20, 0x34, 0x47, 0x51, 0x38, 0x53, 0x35,
		0x35, 0x49, 0x4e, 0x34, 0x47, 0x32, 0x51, 0x38, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x20, 0x34, 0x47,
		0x51, 0x38, 0x53, 0x36, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x38, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x20,
		0x34, 0x47, 0x51, 0x38, 0x53, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x50, 0x51, 0x38, 0x20, 0x35, 0x2e,
		0x31, 0x22, 0x20, 0x34, 0x47, 0x51, 0x39, 0x53, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20,
		0x35, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x39, 0x53, 0x35, 0x35, 0x49, 0x4e, 0x34, 0x47,
		0x51, 0x39, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x53, 0x35, 0x33,
		0x49, 0x4e, 0x34, 0x47, 0x51, 0x31, 0x30, 0x20, 0x35, 0x2e, 0x33, 0x22, 0x20, 0x34, 0x47, 0x51,
		0x31, 0x30, 0x53, 0x35, 0x37, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x31, 0x30, 0x20, 0x35, 0x2e, 0x37,
		0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51,
		0x31, 0x30, 0x53, 0x36, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x31, 0x30, 0x20, 0x36, 0x2e, 0x30, 0x22,
		0x20, 0x34, 0x47, 0x51, 0x36, 0x54, 0x37, 0x49, 0x4e, 0x51, 0x37, 0x54, 0x31, 0x30, 0x49, 0x4e,
		0x50, 0x51, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x51, 0x38, 0x54, 0x31, 0x30, 0x49, 0x4e,
		0x51, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x51, 0x39, 0x54, 0x37, 0x49, 0x4e, 0x34, 0x47,
		0x51, 0x39, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x39, 0x54, 0x39, 0x49, 0x4e,
		0x51, 0x39, 0x20, 0x39, 0x2e, 0x30, 0x22, 0x51, 0x39, 0x54, 0x31, 0x30, 0x49, 0x4e, 0x34, 0x47,
		0x51, 0x39, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x34, 0x47, 0x39, 0x37, 0x52, 0x2d, 0x32,
		0x39, 0x37, 0x52, 0x32, 0x51, 0x6e, 0x65, 0x74, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50,
		0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x48, 0x79, 0x6e, 0x65, 0x78, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x6b, 0x20, 0x4b, 0x31, 0x48, 0x79, 0x6e,
		0x65, 0x78, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x79, 0x6e, 0x65, 0x78, 0x20,
		0x24, 0x31, 0x4c, 0x65, 0x76, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x51, 0x74, 0x65, 0x6b, 0x51, 0x75,
		0x61, 0x6e, 0x74, 0x75, 0x6d, 0x4c, 0x69, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x55, 0x56,
		0x20, 0x50, 0x72, 0x6f, 0x4d, 0x55, 0x56, 0x20, 0x55, 0x70, 0x55, 0x70, 0x51, 0x2d, 0x54, 0x69,
		0x74, 0x61, 0x6e, 0x6f, 0x20, 0x24, 0x31, 0x51, 0x2d, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x37,
		0x30, 0x4d, 0x51, 0x2d, 0x57, 0x61, 0x76, 0x65, 0x20, 0x24, 0x31, 0x51, 0x75, 0x62, 0x6f, 0x51,
		0x75, 0x65, 0x63, 0x68, 0x75, 0x61, 0x51, 0x75, 0x65, 0x63, 0x68, 0x75, 0x61, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x35, 0x51, 0x75, 0x6d, 0x6f, 0x56, 0x65, 0x67, 0x61, 0x20, 0x24, 0x31,
		0x59, 0x6f, 0x6f, 0x64, 0x61, 0x53, 0x69, 0x72, 0x69, 0x75, 0x73, 0x20, 0x24, 0x31, 0x51, 0x75,
		0x65, 0x73, 0x74, 0x20, 0x24, 0x31, 0x52, 0x2d, 0x54, 0x56, 0x42, 0x6f, 0x78, 0x20, 0x24, 0x31,
		0x52, 0x43, 0x41, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x43, 0x41, 0x20, 0x52,
		0x4c, 0x54, 0x50, 0x34, 0x30, 0x32, 0x38, 0x52, 0x4c, 0x54, 0x50, 0x34, 0x30, 0x32, 0x38, 0x52,
		0x43, 0x54, 0x36, 0x35, 0x31, 0x33, 0x57, 0x38, 0x37, 0x47, 0x61, 0x6c, 0x69, 0x6c, 0x65, 0x6f,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65,
		0x72, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x72, 0x20, 0x49, 0x49,
		0x49, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x37, 0x37, 0x33, 0x57, 0x32, 0x32,
		0x42, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x72, 0x20, 0x49, 0x49, 0x20, 0x37, 0x2e, 0x30, 0x22,
		0x41, 0x74, 0x6c, 0x61, 0x73, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x32,
		0x30, 0x33, 0x57, 0x34, 0x36, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x20, 0x49, 0x49, 0x52, 0x43, 0x54, 0x36, 0x41, 0x30, 0x36, 0x50, 0x32,
		0x32, 0x45, 0x6e, 0x64, 0x65, 0x61, 0x76, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20,
		0x48, 0x44, 0x56, 0x69, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e,
		0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x36, 0x30, 0x33, 0x57, 0x34, 0x37, 0x4d, 0x37, 0x56, 0x69,
		0x6b, 0x69, 0x6e, 0x67, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x52, 0x43, 0x54,
		0x36, 0x36, 0x31, 0x33, 0x57, 0x32, 0x33, 0x50, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x31, 0x2e, 0x36, 0x22, 0x52, 0x43, 0x54, 0x24, 0x31, 0x52, 0x43, 0x24, 0x31,
		0x52, 0x45, 0x44, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x67, 0x65, 0x6e, 0x20, 0x4f, 0x6e, 0x65, 0x52,
		0x49, 0x4d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x44, 0x54, 0x45,
		0x4b, 0x36, 0x30, 0x4b, 0x45, 0x59, 0x6f, 0x6e, 0x65, 0x42, 0x42, 0x43, 0x31, 0x30, 0x30, 0x2d,
		0x31, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x45, 0x59,
		0x32, 0x20, 0x4c, 0x45, 0x4b, 0x45, 0x59, 0x32, 0x42, 0x42, 0x46, 0x31, 0x30, 0x30, 0x2d, 0x38,
		0x4b, 0x45, 0x59, 0x32, 0x20, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x42, 0x42, 0x46, 0x31, 0x30,
		0x30, 0x2d, 0x39, 0x4b, 0x45, 0x59, 0x32, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x42, 0x47,
		0x31, 0x30, 0x30, 0x2d, 0x31, 0x42, 0x42, 0x48, 0x31, 0x30, 0x30, 0x2d, 0x31, 0x45, 0x76, 0x6f,
		0x6c, 0x76, 0x65, 0x20, 0x58, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20,
		0x50, 0x72, 0x69, 0x76, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x44,
		0x54, 0x45, 0x4b, 0x35, 0x30, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20,
		0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x62, 0x6f, 0x6f, 0x6b, 0x39, 0x33, 0x30, 0x30, 0x43, 0x75, 0x72, 0x76, 0x65, 0x20, 0x33,
		0x47, 0x20, 0x39, 0x33, 0x30, 0x30, 0x43, 0x75, 0x72, 0x76, 0x65, 0x20, 0x24, 0x31, 0x39, 0x36,
		0x33, 0x30, 0x54, 0x6f, 0x75, 0x72, 0x20, 0x39, 0x36, 0x33, 0x30, 0x39, 0x37, 0x32, 0x30, 0x54,
		0x6f, 0x72, 0x63, 0x68, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72,
		0x79, 0x52, 0x4f, 0x41, 0x44, 0x4d, 0x41, 0x58, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x75, 0x73, 0x20,
		0x51, 0x75, 0x61, 0x64, 0x20, 0x37, 0x52, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
		0x53, 0x68, 0x6f, 0x63, 0x6b, 0x20, 0x24, 0x31, 0x52, 0x61, 0x6b, 0x75, 0x74, 0x65, 0x6e, 0x5a,
		0x52, 0x30, 0x31, 0x42, 0x69, 0x67, 0x33, 0x39, 0x31, 0x37, 0x4a, 0x52, 0x42, 0x69, 0x67, 0x20,
		0x53, 0x50, 0x37, 0x31, 0x30, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x33, 0x33, 0x30, 0x43, 0x33, 0x33,
		0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x52, 0x61, 0x6d, 0x6f, 0x73, 0x4d, 0x4f, 0x53, 0x31, 0x6d,
		0x61, 0x78, 0x4d, 0x4f, 0x53, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x57, 0x32, 0x32, 0x50, 0x52, 0x4f,
		0x20, 0x33, 0x47, 0x57, 0x32, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x52, 0x61, 0x73,
		0x70, 0x62, 0x65, 0x72, 0x72, 0x79, 0x52, 0x61, 0x76, 0x6f, 0x7a, 0x52, 0x61, 0x7a, 0x65, 0x72,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x52, 0x65, 0x61, 0x63, 0x68, 0x52, 0x65, 0x61, 0x64,
		0x62, 0x6f, 0x79, 0x43, 0x31, 0x38, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x24, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x65, 0x51, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x31, 0x38, 0x32, 0x37, 0x33, 0x69,
		0x33, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x31, 0x39, 0x39, 0x33, 0x58, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x31, 0x37, 0x51, 0x32, 0x20, 0x35, 0x47, 0x52, 0x4d,
		0x58, 0x32, 0x31, 0x37, 0x33, 0x51, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32, 0x32,
		0x30, 0x35, 0x51, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x31,
		0x36, 0x31, 0x51, 0x33, 0x20, 0x35, 0x47, 0x58, 0x37, 0x20, 0x35, 0x47, 0x58, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x58, 0x54, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x35, 0x69, 0x52, 0x4d,
		0x58, 0x31, 0x39, 0x32, 0x39, 0x35, 0x73, 0x36, 0x69, 0x52, 0x4d, 0x58, 0x32, 0x30, 0x30, 0x32,
		0x36, 0x53, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x30, 0x33, 0x37, 0x49,
		0x52, 0x4d, 0x58, 0x32, 0x31, 0x37, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x31, 0x31, 0x35, 0x58, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x52, 0x4d, 0x58, 0x33, 0x30, 0x38, 0x31, 0x52, 0x4d, 0x58, 0x33, 0x30,
		0x38, 0x35, 0x52, 0x4d, 0x58, 0x33, 0x31, 0x35, 0x31, 0x38, 0x69, 0x52, 0x4d, 0x58, 0x33, 0x33,
		0x38, 0x31, 0x38, 0x73, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x34, 0x31, 0x38, 0x20, 0x35, 0x47, 0x52,
		0x4d, 0x58, 0x33, 0x34, 0x39, 0x31, 0x39, 0x69, 0x52, 0x4d, 0x58, 0x33, 0x33, 0x39, 0x33, 0x39,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x34, 0x37, 0x32, 0x39,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x35, 0x53, 0x43, 0x31, 0x31, 0x43, 0x31, 0x32, 0x43,
		0x31, 0x35, 0x43, 0x31, 0x35, 0x20, 0x51, 0x75, 0x61, 0x6c, 0x63, 0x6f, 0x6d, 0x6d, 0x20, 0x45,
		0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x31, 0x37, 0x43, 0x32, 0x30, 0x43, 0x32, 0x31, 0x43,
		0x32, 0x31, 0x59, 0x43, 0x32, 0x35, 0x43, 0x32, 0x35, 0x73, 0x43, 0x32, 0x35, 0x59, 0x52, 0x4d,
		0x58, 0x33, 0x32, 0x33, 0x31, 0x43, 0x31, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x47,
		0x54, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x54, 0x20,
		0x4e, 0x65, 0x6f, 0x20, 0x32, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x32, 0x54, 0x47, 0x54,
		0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47,
		0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x4e, 0x61, 0x72, 0x7a, 0x6f,
		0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x32, 0x30, 0x4e,
		0x61, 0x72, 0x7a, 0x6f, 0x20, 0x32, 0x30, 0x41, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x33, 0x30,
		0x41, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x33, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x34, 0x32,
		0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x33, 0x30, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x34,
		0x33, 0x30, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x41, 0x52, 0x4d, 0x58, 0x33, 0x32,
		0x33, 0x35, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x69, 0x58, 0x35, 0x30, 0x20, 0x35,
		0x47, 0x58, 0x35, 0x30, 0x74, 0x20, 0x35, 0x47, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58,
		0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x58, 0x33, 0x20, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20,
		0x5a, 0x6f, 0x6f, 0x6d, 0x52, 0x4d, 0x58, 0x32, 0x30, 0x38, 0x33, 0x51, 0x33, 0x73, 0x56, 0x35,
		0x20, 0x35, 0x47, 0x56, 0x33, 0x20, 0x35, 0x47, 0x56, 0x31, 0x31, 0x20, 0x35, 0x47, 0x52, 0x4d,
		0x58, 0x33, 0x31, 0x32, 0x35, 0x56, 0x31, 0x31, 0x73, 0x20, 0x35, 0x47, 0x56, 0x31, 0x33, 0x20,
		0x35, 0x47, 0x56, 0x31, 0x35, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x32, 0x32, 0x30, 0x32, 0x47,
		0x54, 0x20, 0x35, 0x47, 0x50, 0x61, 0x64, 0x52, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x57, 0x69, 0x7a,
		0x70, 0x61, 0x64, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x72, 0x20, 0x56, 0x38, 0x52, 0x65, 0x65,
		0x64, 0x65, 0x72, 0x4d, 0x31, 0x30, 0x53, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x31, 0x30, 0x53, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x31, 0x32, 0x43, 0x75, 0x72, 0x76, 0x65, 0x50, 0x31, 0x32, 0x20, 0x43, 0x75, 0x72,
		0x76, 0x65, 0x50, 0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75, 0x65, 0x5f, 0x4d, 0x61, 0x6b, 0x73, 0x50,
		0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x6b, 0x73, 0x50, 0x31, 0x33, 0x5f,
		0x42, 0x6c, 0x75, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75,
		0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x32,
		0x30, 0x32, 0x31, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32,
		0x30, 0x32, 0x30, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d,
		0x61, 0x78, 0x50, 0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75, 0x65, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c,
		0x75, 0x65, 0x52, 0x65, 0x6d, 0x64, 0x75, 0x6e, 0x52, 0x44, 0x38, 0x36, 0x45, 0x52, 0x65, 0x76,
		0x6f, 0x52, 0x65, 0x76, 0x6f, 0x5f, 0x59, 0x6f, 0x75, 0x70, 0x6c, 0x75, 0x73, 0x59, 0x6f, 0x75,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x69, 0x6b, 0x6f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x4d, 0x4b,
		0x24, 0x31, 0x52, 0x69, 0x6e, 0x6e, 0x6f, 0x52, 0x69, 0x74, 0x6d, 0x69, 0x78, 0x52, 0x4d, 0x44,
		0x2d, 0x24, 0x31, 0x52, 0x4d, 0x50, 0x2d, 0x24, 0x31, 0x52, 0x69, 0x74, 0x7a, 0x76, 0x69, 0x76,
		0x61, 0x53, 0x35, 0x30, 0x30, 0x43, 0x52, 0x69, 0x76, 0x69, 0x65, 0x72, 0x61, 0x52, 0x69, 0x76,
		0x6f, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x50, 0x5a, 0x24, 0x31, 0x50, 0x68, 0x61,
		0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x52, 0x58, 0x24, 0x31, 0x52, 0x68, 0x79, 0x74, 0x68, 0x6d, 0x20,
		0x52, 0x58, 0x24, 0x31, 0x52, 0x6f, 0x61, 0x64, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x61,
		0x64, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x41, 0x6e, 0x20, 0x53,
		0x43, 0x68, 0x61, 0x6e, 0x67, 0x41, 0x6e, 0x20, 0x53, 0x52, 0x6f, 0x6b, 0x69, 0x74, 0x49, 0x4f,
		0x20, 0x50, 0x72, 0x6f, 0x49, 0x4f, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x4f, 0x20, 0x33,
		0x44, 0x52, 0x6f, 0x6b, 0x75, 0x33, 0x39, 0x33, 0x30, 0x58, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
		0x73, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x20, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6d, 0x62, 0x69, 0x63, 0x61, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61,
		0x20, 0x34, 0x4b, 0x20, 0x76, 0x30, 0x31, 0x52, 0x6f, 0x73, 0x73, 0x26, 0x4d, 0x6f, 0x6f, 0x72,
		0x52, 0x4d, 0x24, 0x31, 0x2d, 0x24, 0x32, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x76, 0x65,
		0x72, 0x50, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x20, 0x51, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x53,
		0x6b, 0x79, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x20, 0x33, 0x47, 0x52, 0x6f, 0x79, 0x51, 0x75,
		0x65, 0x65, 0x6e, 0x52, 0x6f, 0x79, 0x6f, 0x6c, 0x65, 0x46, 0x6c, 0x65, 0x78, 0x50, 0x61, 0x69,
		0x20, 0x32, 0x46, 0x6c, 0x65, 0x78, 0x50, 0x61, 0x69, 0x52, 0x75, 0x67, 0x47, 0x65, 0x61, 0x72,
		0x52, 0x75, 0x69, 0x6f, 0x4d, 0x36, 0x37, 0x31, 0x4d, 0x34, 0x43, 0x6f, 0x6c, 0x61, 0x20, 0x34,
		0x47, 0x52, 0x75, 0x6e, 0x62, 0x6f, 0x46, 0x31, 0x2d, 0x54, 0x54, 0x52, 0x75, 0x6e, 0x62, 0x6f,
		0x50, 0x32, 0x52, 0x79, 0x74, 0x65, 0x53, 0x2d, 0x54, 0x45, 0x4c, 0x4c, 0x53, 0x32, 0x54, 0x65,
		0x6c, 0x53, 0x45, 0x4d, 0x50, 0x20, 0x54, 0x43, 0x4c, 0x4c, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x47, 0x4f, 0x21, 0x20, 0x33, 0x43, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x4f, 0x21, 0x20, 0x33,
		0x43, 0x53, 0x46, 0x52, 0x53, 0x74, 0x61, 0x72, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x20, 0x32, 0x53,
		0x74, 0x61, 0x72, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x58,
		0x74, 0x72, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x33, 0x53,
		0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72,
		0x61, 0x69, 0x6c, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72,
		0x61, 0x69, 0x6c, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x53,
		0x74, 0x61, 0x72, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x53, 0x68,
		0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x61, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x34, 0x53,
		0x74, 0x61, 0x72, 0x61, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x33, 0x53, 0x74, 0x61, 0x72, 0x61,
		0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x61, 0x72,
		0x61, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x61, 0x64, 0x64, 0x69,
		0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x54, 0x65, 0x78, 0x74, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72,
		0x54, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x61, 0x75, 0x74, 0x65, 0x20, 0x32, 0x53,
		0x74, 0x61, 0x72, 0x4e, 0x61, 0x75, 0x74, 0x65, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x4e,
		0x61, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x54, 0x61, 0x62, 0x53, 0x4b, 0x20, 0x42, 0x72,
		0x6f, 0x61, 0x64, 0x62, 0x61, 0x6e, 0x64, 0x42, 0x48, 0x58, 0x2d, 0x55, 0x48, 0x32, 0x30, 0x30,
		0x53, 0x4b, 0x47, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x45, 0x43, 0x53, 0x4f, 0x4c, 0x45, 0x50, 0x6f,
		0x70, 0x20, 0x53, 0x24, 0x31, 0x53, 0x4f, 0x4c, 0x4f, 0x53, 0x50, 0x43, 0x47, 0x52, 0x41, 0x56,
		0x49, 0x54, 0x59, 0x5f, 0x4f, 0x43, 0x54, 0x41, 0x43, 0x4f, 0x52, 0x45, 0x47, 0x72, 0x61, 0x76,
		0x69, 0x74, 0x79, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x52, 0x41, 0x56,
		0x49, 0x54, 0x59, 0x20, 0x34, 0x47, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x47, 0x72, 0x61, 0x76, 0x69,
		0x74, 0x79, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x34, 0x47, 0x47, 0x72, 0x61, 0x76,
		0x69, 0x74, 0x79, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x20, 0x32,
		0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x32, 0x47, 0x6c, 0x6f, 0x77, 0x20, 0x39, 0x2e,
		0x37, 0x22, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x79, 0x65, 0x61, 0x72, 0x53, 0x50, 0x43, 0x20, 0x53,
		0x4d, 0x41, 0x52, 0x54, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x4c, 0x49, 0x54,
		0x45, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x50, 0x43, 0x20, 0x53,
		0x4d, 0x41, 0x52, 0x54, 0x20, 0x4d, 0x41, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x61,
		0x78, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x53, 0x50, 0x43, 0x20, 0x47, 0x45,
		0x4e, 0x20, 0x4d, 0x41, 0x58, 0x47, 0x65, 0x6e, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x50, 0x43, 0x20,
		0x47, 0x45, 0x4e, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x47, 0x65, 0x6e, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x53, 0x50, 0x43, 0x20, 0x47, 0x45, 0x4e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x65, 0x6e, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x50, 0x43, 0x20, 0x47, 0x45, 0x4e, 0x47, 0x65, 0x6e, 0x53, 0x50,
		0x43, 0x5f, 0x41, 0x4c, 0x49, 0x45, 0x4e, 0x5f, 0x53, 0x54, 0x49, 0x43, 0x4b, 0x41, 0x6c, 0x69,
		0x65, 0x6e, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x53, 0x50, 0x43, 0x5f, 0x41, 0x4c, 0x49, 0x45,
		0x4e, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x53, 0x51, 0x4f, 0x4f, 0x4c, 0x56, 0x24, 0x31, 0x53, 0x54,
		0x46, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x46, 0x72, 0x61, 0x63, 0x74, 0x61, 0x6c, 0x4f,
		0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x45, 0x52, 0x49, 0x41, 0x4c,
		0x20, 0x50, 0x4c, 0x55, 0x53, 0x41, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x20, 0x33, 0x20, 0x6d, 0x69, 0x6e, 0x69,
		0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x4c, 0x4f, 0x43,
		0x4b, 0x20, 0x33, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x33, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x20,
		0x47, 0x4f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x47, 0x6f, 0x53, 0x4c, 0x41, 0x59, 0x20, 0x49,
		0x49, 0x53, 0x6c, 0x61, 0x79, 0x20, 0x49, 0x49, 0x4a, 0x6f, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x53,
		0x54, 0x47, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x53, 0x54, 0x4b, 0x4c, 0x69, 0x66,
		0x65, 0x20, 0x38, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x32, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x7a,
		0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x32, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x54, 0x52,
		0x4f, 0x4e, 0x47, 0x4c, 0x45, 0x41, 0x50, 0x2d, 0x53, 0x31, 0x53, 0x55, 0x4e, 0x57, 0x49, 0x4e,
		0x44, 0x53, 0x6b, 0x79, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x20, 0x33, 0x47, 0x53, 0x55, 0x4e,
		0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31, 0x53, 0x57, 0x49, 0x53, 0x53, 0x4d, 0x4f, 0x42, 0x49, 0x4c,
		0x49, 0x54, 0x59, 0x53, 0x43, 0x48, 0x4f, 0x4e, 0x20, 0x52, 0x39, 0x50, 0x52, 0x41, 0x24, 0x31,
		0x5a, 0x55, 0x52, 0x37, 0x32, 0x32, 0x4d, 0x5a, 0x37, 0x32, 0x20, 0x67, 0x6f, 0x5a, 0x55, 0x52,
		0x24, 0x31, 0x53, 0x61, 0x66, 0x61, 0x72, 0x69, 0x63, 0x6f, 0x6d, 0x4e, 0x45, 0x4f, 0x4e, 0x5f,
		0x52, 0x41, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x52, 0x61, 0x79, 0x20,
		0x50, 0x72, 0x6f, 0x4e, 0x45, 0x4f, 0x4e, 0x5f, 0x52, 0x41, 0x59, 0x4e, 0x65, 0x6f, 0x6e, 0x20,
		0x52, 0x61, 0x79, 0x4e, 0x45, 0x4f, 0x4e, 0x20, 0x52, 0x41, 0x59, 0x20, 0x32, 0x4e, 0x65, 0x6f,
		0x6e, 0x20, 0x52, 0x61, 0x79, 0x20, 0x32, 0x53, 0x61, 0x67, 0x65, 0x6d, 0x44, 0x49, 0x33, 0x38,
		0x34, 0x5f, 0x55, 0x48, 0x44, 0x5f, 0x54, 0x4b, 0x43, 0x44, 0x49, 0x33, 0x38, 0x34, 0x44, 0x49,
		0x57, 0x33, 0x35, 0x30, 0x5f, 0x54, 0x50, 0x44, 0x49, 0x57, 0x33, 0x35, 0x30, 0x53, 0x61, 0x69,
		0x65, 0x74, 0x53, 0x69, 0x63, 0x75, 0x72, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24,
		0x31, 0x47, 0x54, 0x2d, 0x42, 0x39, 0x31, 0x35, 0x30, 0x48, 0x6f, 0x6d, 0x65, 0x20, 0x53, 0x79,
		0x6e, 0x63, 0x53, 0x4d, 0x54, 0x2d, 0x45, 0x35, 0x30, 0x31, 0x35, 0x4d, 0x61, 0x70, 0x6c, 0x65,
		0x20, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x31, 0x38, 0x2e,
		0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x56, 0x69, 0x65,
		0x77, 0x20, 0x31, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x37, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4e,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x37, 0x22, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x76, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x32, 0x30, 0x31, 0x34, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x32, 0x30, 0x31, 0x34, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x32, 0x30, 0x31, 0x34, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x4c,
		0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x52, 0x4f,
		0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x32,
		0x2e, 0x32, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53,
		0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x36, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53,
		0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22,
		0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x39, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x31, 0x30, 0x2e,
		0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x38,
		0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x38, 0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x38,
		0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x34,
		0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65,
		0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x34, 0x20, 0x31,
		0x30, 0x2e, 0x35, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x31,
		0x30, 0x2e, 0x35, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x36, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x30,
		0x2e, 0x34, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x31, 0x30,
		0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x20, 0x31, 0x31, 0x2e, 0x30,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x56, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4b, 0x69, 0x64, 0x73,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20, 0x2b, 0x20, 0x33,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x34, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x41, 0x64, 0x76,
		0x61, 0x6e, 0x63, 0x65, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x50, 0x52, 0x4f, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x38, 0x2e, 0x34, 0x22,
		0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52,
		0x4f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x38,
		0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x32, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x32, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x32, 0x20, 0x39, 0x2e, 0x37, 0x22,
		0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x33, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x33, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x2b, 0x20,
		0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x2b,
		0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x31,
		0x31, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x46, 0x45, 0x20, 0x31,
		0x32, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x46, 0x45, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x35,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x46,
		0x45, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x31, 0x34, 0x2e, 0x36, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x38, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x2b, 0x20, 0x31, 0x32,
		0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x38, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54,
		0x45, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41,
		0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x39, 0x2e,
		0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45,
		0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x45, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x34, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74,
		0x69, 0x76, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32,
		0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74,
		0x69, 0x76, 0x65, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x33, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74,
		0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x51, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20,
		0x34, 0x34, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x56, 0x37, 0x30, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x53, 0x4d, 0x2d, 0x52, 0x33, 0x35, 0x30, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x46, 0x69, 0x74, 0x53, 0x4d,
		0x2d, 0x52, 0x33, 0x38, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61,
		0x72, 0x20, 0x32, 0x53, 0x53, 0x4d, 0x2d, 0x52, 0x33, 0x38, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x32, 0x20, 0x4e, 0x65, 0x6f, 0x53, 0x4d, 0x2d,
		0x52, 0x38, 0x32, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x20, 0x4c,
		0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x33, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34,
		0x30, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x33, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20,
		0x34, 0x30, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x30, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x36, 0x6d, 0x6d,
		0x53, 0x4d, 0x2d, 0x52, 0x38, 0x30, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x20, 0x34, 0x36, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52,
		0x38, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x34, 0x32, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x31, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45,
		0x53, 0x4d, 0x2d, 0x52, 0x35, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x2d, 0x52, 0x36, 0x30,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x70, 0x6f,
		0x72, 0x74, 0x20, 0x34, 0x33, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x36, 0x30, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x33, 0x20, 0x46, 0x72, 0x6f,
		0x6e, 0x74, 0x69, 0x65, 0x72, 0x20, 0x34, 0x36, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x35,
		0x30, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52,
		0x37, 0x33, 0x32, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x32, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x53,
		0x4d, 0x2d, 0x52, 0x37, 0x36, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61,
		0x72, 0x20, 0x53, 0x33, 0x20, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x20, 0x33, 0x33,
		0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x37, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x33, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x20,
		0x34, 0x31, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x34, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x20, 0x4c,
		0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x34, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52,
		0x38, 0x35, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x33, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x35, 0x35, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x20, 0x34, 0x31, 0x6d, 0x6d,
		0x20, 0x34, 0x47, 0x47, 0x65, 0x61, 0x72, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x46, 0x61, 0x6d, 0x69,
		0x6c, 0x79, 0x20, 0x48, 0x75, 0x62, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x6c, 0x70,
		0x68, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x68, 0x61, 0x74, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x65, 0x61, 0x6e, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x20, 0x50, 0x72,
		0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x44, 0x75,
		0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x70, 0x69, 0x63, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x33, 0x4f, 0x6d, 0x6e,
		0x69, 0x61, 0x20, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x63, 0x65, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x63, 0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x20, 0x44, 0x75, 0x6f,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x20, 0x4e,
		0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x20, 0x48, 0x44, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x6d, 0x69, 0x6e, 0x69,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x6d, 0x69, 0x6e,
		0x69, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x31, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x42, 0x65, 0x61, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x42, 0x65, 0x61, 0x6d, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x69,
		0x64, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x69, 0x6e, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x57, 0x69, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x45, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x45, 0x37, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x4c, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x20, 0x47, 0x69, 0x6f, 0x72, 0x67, 0x69, 0x6f, 0x20, 0x41, 0x72, 0x6d, 0x61,
		0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e,
		0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x20, 0x57, 0x69,
		0x4d, 0x41, 0x58, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x52, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x33, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x34, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34,
		0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x77, 0x69, 0x74,
		0x68, 0x20, 0x4c, 0x54, 0x45, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x54, 0x41, 0x52, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x20, 0x4e, 0x65,
		0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x20, 0x32,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x20, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x4b,
		0x69, 0x74, 0x74, 0x79, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x44, 0x55, 0x4f,
		0x53, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x32, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x41, 0x4d, 0x45, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x4e, 0x46, 0x43, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x46, 0x41, 0x4d, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x41, 0x4d, 0x45,
		0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x65, 0x65, 0x6c,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x43, 0x45, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x43, 0x45, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x72, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e,
		0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65,
		0x6e, 0x64, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x44, 0x55, 0x4f,
		0x53, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x20, 0x32,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x20, 0x33, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x32, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x33, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x33, 0x20, 0x56, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x34, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x34, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x46, 0x69, 0x65,
		0x6c, 0x64, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76,
		0x65, 0x72, 0x20, 0x35, 0x57, 0x61, 0x76, 0x65, 0x20, 0x49, 0x49, 0x57, 0x61, 0x76, 0x65, 0x20,
		0x33, 0x57, 0x61, 0x76, 0x65, 0x20, 0x59, 0x57, 0x61, 0x76, 0x65, 0x20, 0x4d, 0x57, 0x61, 0x76,
		0x65, 0x20, 0x35, 0x32, 0x35, 0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x33, 0x33, 0x57, 0x61, 0x76,
		0x65, 0x20, 0x35, 0x37, 0x38, 0x57, 0x61, 0x76, 0x65, 0x20, 0x37, 0x32, 0x33, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x7a, 0x6f, 0x6f, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4b, 0x20, 0x7a, 0x6f, 0x6f, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x56,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69,
		0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x34, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x20, 0x4d, 0x61, 0x78, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x45, 0x58, 0x50, 0x52, 0x45,
		0x53, 0x53, 0x20, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x6d,
		0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x2d, 0x53, 0x49, 0x4d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x44,
		0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x35, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x35, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35,
		0x20, 0x4b, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x36, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x36, 0x20, 0x45, 0x64, 0x67, 0x65, 0x2b, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x37,
		0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x37, 0x20, 0x41,
		0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x38, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x38, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x38, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x39, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x39, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x2b, 0x53, 0x43, 0x2d,
		0x30, 0x35, 0x4c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x2b, 0x20, 0x4f,
		0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x65, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x32, 0x30, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30,
		0x20, 0x46, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20, 0x46, 0x45,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30,
		0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x2b, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x46, 0x45, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x35, 0x47, 0x20, 0x4f, 0x6c, 0x79, 0x6d, 0x70, 0x69,
		0x63, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x2b, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x32, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x32, 0x32, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c,
		0x69, 0x70, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x44, 0x75, 0x6f,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x61, 0x56, 0x6f,
		0x6c, 0x6c, 0x6f, 0x20, 0x56, 0x69, 0x38, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x76, 0x61, 0x6e, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x20, 0x51, 0x75, 0x61,
		0x6e, 0x74, 0x75, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x31, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x31, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x32, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x30, 0x33, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x33, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x33, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x30, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x31, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x32, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35,
		0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x32, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x35, 0x32, 0x73, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x2b, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x73, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36,
		0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38,
		0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x37, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x31, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x38, 0x20, 0x53, 0x74, 0x61, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x38, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x2b, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x39, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x39, 0x20, 0x53, 0x74, 0x61, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x30, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x31, 0x30, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x31, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x31, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x32, 0x30, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x30, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x33, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x31, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x33, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x34, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x32, 0x20, 0x35,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x35, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x31,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x31, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37,
		0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x30, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x39, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x30,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x31, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x46, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x34,
		0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x35, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x36, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x20, 0x49, 0x49, 0x49, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4c,
		0x75, 0x6e, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x31, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x20, 0x41, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x44, 0x75,
		0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x50, 0x75, 0x72, 0x65,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x33, 0x20, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33,
		0x20, 0x53, 0x6b, 0x79, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x4c, 0x75,
		0x6e, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x45,
		0x6d, 0x65, 0x72, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x41,
		0x75, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x53, 0x74, 0x61,
		0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70,
		0x73, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x35, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x36, 0x2b, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x34, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x34, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x2b, 0x20, 0x28, 0x43, 0x37, 0x29, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x37, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x37, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20,
		0x44, 0x75, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x43, 0x72, 0x6f,
		0x77, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x56, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x38, 0x53, 0x4d, 0x2d, 0x4a, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x2d, 0x4a, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x39, 0x20, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x39, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4d, 0x30, 0x31, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x30, 0x31, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x32, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x30, 0x73, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31,
		0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4d, 0x32, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x31, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x32,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4d, 0x33, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x31, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4d, 0x33, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x31,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x34, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4d, 0x34, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x35, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x35, 0x32, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x36, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x57, 0x32, 0x30, 0x31, 0x24, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x32,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x20, 0x32, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4f, 0x6e, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x35, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x37,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36,
		0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x43, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x37,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x43, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x31, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x5a, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x33, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x6f,
		0x6c, 0x64, 0x65, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x65,
		0x72, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x6f, 0x6c, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x6f, 0x6c, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x6f, 0x6c, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x48, 0x61, 0x6c, 0x6f,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x6d, 0x70, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x6d, 0x70, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46,
		0x6c, 0x69, 0x70, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6f,
		0x6c, 0x64, 0x20, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20,
		0x46, 0x6f, 0x6c, 0x64, 0x20, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x46, 0x61, 0x6e, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x49, 0x49, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x56, 0x45, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47,
		0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28,
		0x54, 0x56, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20,
		0x4e, 0x65, 0x6f, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x34, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x65, 0x67, 0x61, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x65, 0x67, 0x61,
		0x20, 0x35, 0x2e, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x20,
		0x36, 0x2e, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x20, 0x35, 0x47, 0x41, 0x74, 0x69, 0x76, 0x20, 0x53, 0x45, 0x47, 0x72, 0x65, 0x61, 0x74,
		0x43, 0x61, 0x6c, 0x6c, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x33, 0x45, 0x32, 0x31, 0x35,
		0x32, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x33, 0x53, 0x43, 0x2d,
		0x30, 0x32, 0x43, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x2d, 0x54, 0x56, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x24, 0x31, 0x53, 0x43, 0x2d, 0x24, 0x31, 0x53, 0x43, 0x48, 0x2d, 0x24, 0x31, 0x53,
		0x61, 0x6e, 0x65, 0x69, 0x4e, 0x38, 0x33, 0x4e, 0x39, 0x31, 0x38, 0x33, 0x31, 0x32, 0x44, 0x47,
		0x31, 0x30, 0x31, 0x53, 0x61, 0x6e, 0x73, 0x75, 0x69, 0x53, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x42,
		0x69, 0x54, 0x42, 0x69, 0x5a, 0x20, 0x56, 0x35, 0x38, 0x47, 0x41, 0x41, 0x4d, 0x49, 0x49, 0x20,
		0x47, 0x31, 0x47, 0x41, 0x41, 0x4d, 0x49, 0x49, 0x43, 0x61, 0x6e, 0x64, 0x79, 0x20, 0x55, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x30,
		0x33, 0x41, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x4f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6c,
		0x61, 0x73, 0x73, 0x20, 0x4f, 0x6e, 0x65, 0x48, 0x61, 0x6c, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x74,
		0x6f, 0x6d, 0x61, 0x20, 0x41, 0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x47, 0x61, 0x6c,
		0x61, 0x7a, 0x4e, 0x65, 0x77, 0x64, 0x75, 0x6e, 0x53, 0x61, 0x6e, 0x79, 0x6f, 0x4b, 0x61, 0x74,
		0x61, 0x6e, 0x61, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x20, 0x58, 0x49, 0x6e, 0x63,
		0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x49, 0x6e, 0x6e, 0x75, 0x65, 0x6e, 0x64, 0x6f, 0x53, 0x61,
		0x76, 0x69, 0x6f, 0x53, 0x63, 0x68, 0x6f, 0x6b, 0x53, 0x63, 0x68, 0x6f, 0x6b, 0x20, 0x53, 0x63,
		0x68, 0x6f, 0x6b, 0x20, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x56, 0x35, 0x35, 0x56, 0x6f, 0x6c,
		0x74, 0x20, 0x53, 0x56, 0x35, 0x35, 0x53, 0x65, 0x61, 0x74, 0x65, 0x6c, 0x53, 0x65, 0x65, 0x6b,
		0x65, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x34, 0x54, 0x37, 0x49,
		0x4e, 0x53, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x61, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x78, 0x53, 0x45,
		0x4c, 0x46, 0x49, 0x58, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x53, 0x4c, 0x41, 0x53, 0x48,
		0x36, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x36, 0x56, 0x4f, 0x59, 0x41, 0x47, 0x45, 0x52, 0x2d,
		0x56, 0x34, 0x35, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x72, 0x20, 0x56, 0x34, 0x35, 0x53, 0x45,
		0x4c, 0x46, 0x49, 0x58, 0x5f, 0x51, 0x35, 0x5f, 0x55, 0x52, 0x42, 0x41, 0x4e, 0x51, 0x35, 0x20,
		0x55, 0x72, 0x62, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x63, 0x6f, 0x72, 0x45, 0x6c, 0x65, 0x6d, 0x65,
		0x6e, 0x74, 0x20, 0x24, 0x31, 0x22, 0x20, 0x24, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
		0x20, 0x37, 0x20, 0x56, 0x33, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x37, 0x20, 0x56,
		0x32, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x37,
		0x20, 0x56, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x38, 0x20, 0x56, 0x33, 0x45,
		0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x38, 0x20, 0x56, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65,
		0x6e, 0x74, 0x20, 0x38, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x39, 0x2e, 0x37, 0x20,
		0x56, 0x33, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x39, 0x2e, 0x37, 0x20, 0x56, 0x32,
		0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x39, 0x2e, 0x37, 0x45, 0x6c, 0x65, 0x6d, 0x65,
		0x6e, 0x74, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x45, 0x6c, 0x65, 0x6d,
		0x65, 0x6e, 0x74, 0x20, 0x50, 0x24, 0x31, 0x53, 0x65, 0x6e, 0x64, 0x6f, 0x53, 0x65, 0x6e, 0x6b,
		0x61, 0x74, 0x65, 0x6c, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x54, 0x31, 0x30, 0x30, 0x31,
		0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x54, 0x31, 0x30, 0x30, 0x31, 0x53, 0x65, 0x6e,
		0x73, 0x65, 0x69, 0x74, 0x53, 0x65, 0x6e, 0x77, 0x61, 0x4f, 0x64, 0x69, 0x6e, 0x49, 0x6e, 0x69,
		0x7a, 0x69, 0x6f, 0x49, 0x6e, 0x69, 0x7a, 0x69, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x37, 0x30,
		0x35, 0x42, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x54, 0x68, 0x6f, 0x72, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x6c, 0x79, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x53, 0x65, 0x75, 0x69, 0x63,
		0x53, 0x68, 0x61, 0x72, 0x70, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x58, 0x78, 0x33, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x58, 0x78, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x58, 0x78, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x58, 0x78, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x65, 0x61, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65,
		0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x33, 0x41, 0x6e,
		0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x35, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x37, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
		0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x34, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x57, 0x69,
		0x73, 0x68, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x48, 0x2d, 0x4d, 0x30, 0x34, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x34, 0x20, 0x42, 0x61, 0x73, 0x69,
		0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x34, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x35, 0x47, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x44,
		0x31, 0x30, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20,
		0x53, 0x49, 0x4d, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x74, 0x61, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72,
		0x6f, 0x20, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x36, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x20, 0x42, 0x61, 0x73,
		0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x32, 0x20, 0x28, 0x43, 0x31, 0x30, 0x29,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x5a, 0x65, 0x74, 0x61,
		0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x20, 0x51, 0x75, 0x65, 0x73, 0x74, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x48, 0x2d, 0x30, 0x36, 0x44, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x58, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x4c, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x52, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x52, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x32, 0x20, 0x43, 0x6f, 0x6d, 0x70,
		0x61, 0x63, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x35, 0x47, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x53, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53,
		0x34, 0x20, 0x53, 0x49, 0x4d, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x56, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x4b, 0x20, 0x24, 0x31, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x45,
		0x76, 0x65, 0x72, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x58, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x33, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x53, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53,
		0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x52, 0x33, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x53, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33,
		0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x55, 0x4c,
		0x75, 0x6e, 0x61, 0x20, 0x53, 0x42, 0x31, 0x30, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x20, 0x32, 0x53,
		0x74, 0x61, 0x72, 0x20, 0x57, 0x61, 0x72, 0x73, 0x53, 0x48, 0x2d, 0x52, 0x4d, 0x30, 0x32, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x48, 0x2d, 0x52, 0x4d, 0x30, 0x32, 0x34, 0x30, 0x31, 0x53,
		0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x34, 0x30, 0x31, 0x53, 0x48, 0x44, 0x69, 0x73, 0x6e,
		0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x41, 0x30, 0x30, 0x31,
		0x53, 0x48, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f, 0x20,
		0x35, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x20, 0x33, 0x4e,
		0x50, 0x38, 0x30, 0x37, 0x53, 0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69, 0x74,
		0x61, 0x69, 0x20, 0x31, 0x30, 0x4e, 0x50, 0x35, 0x30, 0x31, 0x53, 0x48, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x4c, 0x65, 0x69, 0x63, 0x61, 0x20, 0x4c, 0x65,
		0x69, 0x74, 0x7a, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x70,
		0x61, 0x67, 0x6f, 0x73, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x2d, 0x74,
		0x61, 0x69, 0x50, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x53, 0x68, 0x61, 0x72, 0x70,
		0x20, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x61, 0x64, 0x64, 0x74, 0x61, 0x62, 0x20, 0x64,
		0x2d, 0x34, 0x31, 0x41, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4e, 0x65, 0x74, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x54, 0x56, 0x24, 0x31, 0x53, 0x68, 0x69, 0x66,
		0x74, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x53, 0x68, 0x69, 0x76, 0x61, 0x6b, 0x69, 0x53,
		0x54, 0x56, 0x2d, 0x24, 0x31, 0x53, 0x68, 0x74, 0x72, 0x69, 0x6b, 0x68, 0x2d, 0x4d, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x70, 0x6f, 0x73, 0x20, 0x46, 0x32, 0x53, 0x68, 0x75, 0x74, 0x74, 0x6c, 0x65,
		0x53, 0x69, 0x63, 0x6f, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x4d, 0x65, 0x67, 0x61, 0x32, 0x4d,
		0x65, 0x67, 0x61, 0x20, 0x32, 0x53, 0x53, 0x52, 0x33, 0x2d, 0x31, 0x2d, 0x35, 0x31, 0x2d, 0x35,
		0x4d, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x53, 0x53, 0x44, 0x2d, 0x31, 0x2d, 0x35, 0x33, 0x2d, 0x31,
		0x33, 0x4d, 0x45, 0x31, 0x30, 0x30, 0x32, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x33, 0x2d,
		0x4d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x33, 0x20, 0x4d, 0x61, 0x78,
		0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x33, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20,
		0x33, 0x53, 0x69, 0x65, 0x6d, 0x65, 0x6e, 0x73, 0x58, 0x2d, 0x54, 0x72, 0x65, 0x6d, 0x65, 0x20,
		0x50, 0x51, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x2d, 0x54, 0x72, 0x65, 0x6d, 0x65, 0x20,
		0x50, 0x51, 0x24, 0x31, 0x58, 0x2d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x41, 0x24, 0x31, 0x58, 0x2d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x53, 0x24, 0x31, 0x53, 0x69,
		0x6c, 0x65, 0x6c, 0x69, 0x73, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x20, 0x43, 0x69, 0x72, 0x63,
		0x6c, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x53, 0x69,
		0x6d, 0x62, 0x61, 0x6e, 0x73, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31,
		0x54, 0x61, 0x6e, 0x67, 0x6f, 0x54, 0x61, 0x62, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x78, 0x56,
		0x61, 0x6c, 0x75, 0x6d, 0x61, 0x78, 0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x54, 0x61, 0x62,
		0x5f, 0x58, 0x50, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x58, 0x50, 0x72,
		0x65, 0x73, 0x74, 0x6f, 0x53, 0x37, 0x32, 0x2d, 0x42, 0x53, 0x58, 0x32, 0x57, 0x53, 0x69, 0x6d,
		0x70, 0x6c, 0x79, 0x53, 0x69, 0x6e, 0x67, 0x74, 0x65, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x20, 0x49, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x49,
		0x20, 0x4d, 0x69, 0x78, 0x53, 0x69, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x53, 0x69, 0x72, 0x69, 0x6e,
		0x20, 0x6c, 0x61, 0x62, 0x73, 0x46, 0x69, 0x6e, 0x6e, 0x65, 0x79, 0x20, 0x55, 0x31, 0x50, 0x6c,
		0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x35, 0x2e, 0x30, 0x4d, 0x50, 0x6c, 0x61, 0x74, 0x69,
		0x6e, 0x75, 0x6d, 0x20, 0x35, 0x2e, 0x35, 0x43, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d,
		0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x69,
		0x6e, 0x75, 0x6d, 0x5f, 0x34, 0x5f, 0x30, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x69,
		0x6e, 0x75, 0x6d, 0x20, 0x34, 0x2e, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x61, 0x74,
		0x69, 0x6e, 0x75, 0x6d, 0x20, 0x34, 0x2e, 0x30, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d,
		0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20,
		0x24, 0x31, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x56, 0x69, 0x65, 0x77, 0x24,
		0x31, 0x53, 0x4b, 0x59, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x5f,
		0x35, 0x5f, 0x35, 0x5f, 0x4f, 0x63, 0x74, 0x61, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x2e,
		0x35, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x35, 0x50, 0x6c,
		0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45,
		0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x46, 0x75, 0x65, 0x67, 0x6f, 0x20,
		0x24, 0x31, 0x53, 0x4b, 0x59, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x53, 0x4b, 0x59, 0x5f, 0x50, 0x72, 0x6f, 0x5f, 0x49, 0x49, 0x49, 0x50, 0x72, 0x6f, 0x20, 0x49,
		0x49, 0x49, 0x53, 0x4b, 0x59, 0x20, 0x35, 0x35, 0x4d, 0x35, 0x35, 0x4d, 0x50, 0x72, 0x65, 0x73,
		0x74, 0x69, 0x67, 0x65, 0x20, 0x58, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x53, 0x6b,
		0x79, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x53, 0x6d, 0x61, 0x64, 0x6c, 0x53, 0x61, 0x66, 0x61, 0x72,
		0x69, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x69, 0x6c, 0x6f, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x42, 0x4f, 0x4f,
		0x4b, 0x20, 0x53, 0x53, 0x42, 0x31, 0x33, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x61, 0x62, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e, 0x53, 0x37, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x30, 0x50,
		0x44, 0x36, 0x44, 0x31, 0x4a, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x56, 0x33,
		0x73, 0x41, 0x44, 0x36, 0x38, 0x32, 0x4a, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20,
		0x54, 0x41, 0x44, 0x36, 0x38, 0x38, 0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20,
		0x43, 0x32, 0x41, 0x44, 0x36, 0x38, 0x39, 0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78,
		0x20, 0x69, 0x33, 0x41, 0x44, 0x36, 0x38, 0x32, 0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61,
		0x78, 0x20, 0x69, 0x33, 0x73, 0x41, 0x44, 0x36, 0x42, 0x31, 0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x6d, 0x61, 0x78, 0x20, 0x47, 0x32, 0x20, 0x48, 0x6f, 0x74, 0x41, 0x44, 0x39, 0x41, 0x31, 0x48,
		0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x47, 0x32, 0x41, 0x44, 0x36, 0x38, 0x33,
		0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x49, 0x4e, 0x65, 0x77, 0x20, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x2d, 0x69, 0x4e, 0x65, 0x77, 0x20, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x49, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20,
		0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x69, 0x73, 0x61, 0x6e, 0x54, 0x31, 0x53, 0x4d, 0x38,
		0x30, 0x31, 0x54, 0x32, 0x53, 0x4d, 0x39, 0x30, 0x31, 0x4d, 0x31, 0x53, 0x4d, 0x39, 0x31, 0x39,
		0x4d, 0x31, 0x4c, 0x4e, 0x75, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x73, 0x4e, 0x75, 0x74,
		0x20, 0x33, 0x4e, 0x75, 0x74, 0x20, 0x32, 0x4e, 0x75, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33,
		0x4a, 0x69, 0x61, 0x6e, 0x47, 0x75, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x69, 0x73, 0x61, 0x6e, 0x20, 0x55, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x24, 0x31,
		0x4d, 0x61, 0x78, 0x69, 0x20, 0x31, 0x30, 0x4c, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x24, 0x31, 0x53, 0x6d,
		0x6f, 0x6f, 0x74, 0x68, 0x20, 0x36, 0x2e, 0x32, 0x36, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20,
		0x36, 0x2e, 0x32, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x6f, 0x74, 0x72, 0x65, 0x73,
		0x68, 0x6b, 0x61, 0x53, 0x6f, 0x66, 0x74, 0x62, 0x61, 0x6e, 0x6b, 0x53, 0x6f, 0x68, 0x6f, 0x20,
		0x53, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x6f, 0x6c, 0x6f, 0x6e, 0x65, 0x45, 0x31, 0x34, 0x35, 0x37,
		0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x49, 0x72, 0x6f, 0x6e, 0x20, 0x45, 0x31, 0x34, 0x35, 0x37,
		0x57, 0x31, 0x34, 0x35, 0x30, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x42, 0x72, 0x65, 0x65, 0x7a, 0x65,
		0x20, 0x57, 0x31, 0x34, 0x35, 0x30, 0x57, 0x31, 0x34, 0x35, 0x32, 0x57, 0x69, 0x6e, 0x64, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x57, 0x31, 0x34, 0x35, 0x32, 0x53, 0x4f, 0x4c, 0x4f, 0x4e, 0x45, 0x20,
		0x41, 0x34, 0x37, 0x53, 0x4c, 0x2d, 0x41, 0x34, 0x37, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4c,
		0x35, 0x35, 0x30, 0x31, 0x53, 0x75, 0x6d, 0x6f, 0x20, 0x53, 0x35, 0x30, 0x30, 0x31, 0x53, 0x6f,
		0x6e, 0x69, 0x6d, 0x53, 0x6f, 0x6e, 0x69, 0x6d, 0x2d, 0x58, 0x50, 0x33, 0x34, 0x30, 0x30, 0x58,
		0x50, 0x33, 0x34, 0x30, 0x30, 0x58, 0x50, 0x36, 0x37, 0x30, 0x30, 0x58, 0x50, 0x37, 0x37, 0x30,
		0x30, 0x58, 0x50, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x31, 0x30, 0x20, 0x6d,
		0x69, 0x6e, 0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x31, 0x30, 0x20, 0x6d, 0x69,
		0x6e, 0x69, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x38, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x61, 0x72, 0x63, 0x20, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6e, 0x65, 0x6f, 0x20,
		0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6e, 0x65, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x53, 0x6f, 0x6c, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x70, 0x72, 0x6f,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41,
		0x63, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x72, 0x61, 0x79, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x58, 0x31, 0x30, 0x41, 0x73, 0x70, 0x65, 0x6e, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x50, 0x4c, 0x41, 0x59, 0x4c, 0x69, 0x76, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x57,
		0x61, 0x6c, 0x6b, 0x6d, 0x61, 0x6e, 0x74, 0x78, 0x74, 0x74, 0x78, 0x74, 0x20, 0x70, 0x72, 0x6f,
		0x4a, 0x61, 0x6c, 0x6f, 0x75, 0x4e, 0x61, 0x69, 0x74, 0x65, 0x43, 0x65, 0x64, 0x61, 0x72, 0x45,
		0x6c, 0x6d, 0x48, 0x61, 0x7a, 0x65, 0x6c, 0x41, 0x69, 0x6e, 0x6f, 0x59, 0x61, 0x72, 0x69, 0x53,
		0x61, 0x74, 0x69, 0x6f, 0x56, 0x69, 0x76, 0x61, 0x7a, 0x56, 0x69, 0x76, 0x61, 0x7a, 0x20, 0x70,
		0x72, 0x6f, 0x5a, 0x79, 0x6c, 0x6f, 0x53, 0x70, 0x69, 0x72, 0x6f, 0x59, 0x65, 0x6e, 0x64, 0x6f,
		0x57, 0x39, 0x36, 0x30, 0x4d, 0x69, 0x78, 0x20, 0x57, 0x61, 0x6c, 0x6b, 0x6d, 0x61, 0x6e, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x58, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x49, 0x53, 0x4f, 0x2d, 0x30, 0x34, 0x46, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x41, 0x32, 0x53, 0x4f, 0x2d, 0x30, 0x32, 0x44, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x4e, 0x58, 0x47, 0x32, 0x32, 0x39, 0x39, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x52, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4f, 0x2d, 0x30, 0x34, 0x47, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x41, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x41, 0x63, 0x65, 0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20,
		0x49, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x49,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x45,
		0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20, 0x49,
		0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20, 0x49, 0x49, 0x49, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x50, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x56, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x49, 0x49, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x49, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x61, 0x72, 0x63, 0x6f, 0x20, 0x48, 0x44, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61,
		0x72, 0x63, 0x6f, 0x20, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x69, 0x6f, 0x6e, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x58, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54,
		0x20, 0x4c, 0x54, 0x45, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x74, 0x69, 0x70, 0x6f, 0x20, 0x64, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x74, 0x69, 0x70, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6d, 0x69,
		0x72, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x55, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x55, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x56, 0x4c, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x4a, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x67, 0x6f, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x45, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x45, 0x34, 0x47, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x4d, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x53, 0x50, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x52, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x5a, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x4c, 0x32, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x31, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x45, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x33, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x34, 0x67, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x4c, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x49, 0x33, 0x33, 0x31, 0x32, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x33,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x34, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x4d, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x32, 0x20, 0x41,
		0x71, 0x75, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x34, 0x20, 0x41, 0x71, 0x75,
		0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x34, 0x20, 0x41, 0x71, 0x75, 0x61, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x35, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x4d, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x43, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x43, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x43, 0x34, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x43, 0x35, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43,
		0x35, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x54, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x32, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x32, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a,
		0x31, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x5a, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x20, 0x43, 0x6f, 0x6d, 0x70,
		0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x20, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x57, 0x69, 0x66, 0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a,
		0x32, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x57, 0x69, 0x46, 0x69, 0x53, 0x47, 0x50,
		0x35, 0x36, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x20, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x44, 0x36, 0x35, 0x36,
		0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x5a, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x2b, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x5a, 0x33, 0x76, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x34, 0x45,
		0x36, 0x35, 0x30, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x34, 0x76, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a,
		0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x20,
		0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35,
		0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x58, 0x5a, 0x31, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x45, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x48,
		0x34, 0x34, 0x33, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x73, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x48, 0x38, 0x32, 0x36, 0x36, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x53, 0x4f, 0x2d,
		0x30, 0x35, 0x4b, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x20, 0x43, 0x6f,
		0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x20,
		0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x5a, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x31, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x41, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x47, 0x58, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x58, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x20, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x20, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
		0x61, 0x6e, 0x63, 0x65, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x33, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x53, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x42, 0x72, 0x61, 0x76, 0x69,
		0x61, 0x20, 0x24, 0x31, 0x42, 0x72, 0x61, 0x76, 0x69, 0x61, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x35, 0x29, 0x42, 0x72, 0x61, 0x76, 0x69, 0x61, 0x20, 0x56, 0x48, 0x31, 0x4e, 0x57,
		0x2d, 0x41, 0x31, 0x30, 0x30, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x57, 0x61, 0x6c, 0x6b, 0x6d,
		0x61, 0x6e, 0x20, 0x41, 0x31, 0x30, 0x30, 0x4e, 0x57, 0x2d, 0x5a, 0x31, 0x30, 0x30, 0x30, 0x53,
		0x65, 0x72, 0x69, 0x65, 0x73, 0x57, 0x61, 0x6c, 0x6b, 0x6d, 0x61, 0x6e, 0x20, 0x5a, 0x31, 0x30,
		0x30, 0x30, 0x42, 0x6c, 0x75, 0x2d, 0x72, 0x61, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
		0x42, 0x44, 0x50, 0x32, 0x30, 0x31, 0x35, 0x42, 0x6c, 0x75, 0x2d, 0x72, 0x61, 0x79, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x61, 0x72, 0x63, 0x6f,
		0x20, 0x49, 0x53, 0x31, 0x31, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x24, 0x31, 0x53,
		0x6f, 0x75, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x53, 0x6f, 0x79, 0x65, 0x73, 0x53, 0x31, 0x30, 0x2d,
		0x48, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x61, 0x6c, 0x69,
		0x6e, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x56, 0x75, 0x6c, 0x63, 0x61, 0x6e,
		0x6f, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x6f, 0x20, 0x35, 0x2e,
		0x30, 0x22, 0x43, 0x75, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x44, 0x69, 0x61,
		0x6d, 0x61, 0x6e, 0x74, 0x65, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20,
		0x24, 0x31, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x35, 0x51, 0x2b, 0x58, 0x6c, 0x69, 0x66,
		0x65, 0x2d, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72,
		0x35, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x35, 0x58,
		0x6c, 0x69, 0x66, 0x65, 0x2d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x35,
		0x35, 0x48, 0x44, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f,
		0x20, 0x35, 0x35, 0x20, 0x48, 0x44, 0x41, 0x51, 0x54, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x4e,
		0x39, 0x30, 0x30, 0x30, 0x53, 0x74, 0x61, 0x72, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x79, 0x5f,
		0x53, 0x74, 0x61, 0x72, 0x5f, 0x58, 0x4d, 0x79, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x58, 0x52,
		0x49, 0x4f, 0x20, 0x53, 0x54, 0x41, 0x52, 0x52, 0x69, 0x6f, 0x20, 0x53, 0x74, 0x61, 0x72, 0x43,
		0x5f, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x43, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x5f, 0x4d, 0x69, 0x78, 0x5f, 0x32, 0x53, 0x74, 0x61,
		0x72, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x32, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x50, 0x4c,
		0x55, 0x53, 0x49, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x61,
		0x72, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x52, 0x4f, 0x4d, 0x45, 0x5f, 0x58, 0x52, 0x6f, 0x6d,
		0x65, 0x20, 0x58, 0x53, 0x74, 0x61, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x47, 0x6f, 0x41, 0x73, 0x74, 0x72, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31,
		0x55, 0x50, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x77, 0x61, 0x79, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x6d, 0x65, 0x64, 0x61, 0x20, 0x53, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x77, 0x69, 0x6e,
		0x64, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x77, 0x69, 0x6e, 0x64, 0x53,
		0x74, 0x6f, 0x6e, 0x65, 0x78, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x78, 0x65, 0x5a, 0x65, 0x65, 0x27,
		0x54, 0x61, 0x62, 0x24, 0x31, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x58, 0x20, 0x4c, 0x69, 0x6e, 0x6b,
		0x42, 0x6f, 0x78, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x6f, 0x78, 0x53, 0x74, 0x72, 0x61, 0x77, 0x42,
		0x65, 0x72, 0x72, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x53, 0x39, 0x20, 0x54, 0x6f, 0x70, 0x61,
		0x7a, 0x53, 0x56, 0x36, 0x31, 0x20, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x4d, 0x36, 0x31, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x53, 0x35, 0x37, 0x5f, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x53, 0x35, 0x37, 0x20, 0x41, 0x7a, 0x75,
		0x72, 0x65, 0x53, 0x35, 0x37, 0x5f, 0x41, 0x4c, 0x55, 0x52, 0x45, 0x53, 0x35, 0x37, 0x20, 0x41,
		0x6c, 0x75, 0x72, 0x65, 0x53, 0x35, 0x36, 0x20, 0x4d, 0x49, 0x53, 0x54, 0x53, 0x35, 0x36, 0x20,
		0x4d, 0x69, 0x73, 0x74, 0x43, 0x50, 0x45, 0x39, 0x31, 0x53, 0x35, 0x34, 0x20, 0x5a, 0x65, 0x6e,
		0x53, 0x35, 0x35, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x53, 0x34, 0x30, 0x5f, 0x56, 0x49, 0x53, 0x54,
		0x41, 0x53, 0x34, 0x30, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x53, 0x35, 0x30, 0x5f, 0x4a, 0x41,
		0x44, 0x45, 0x53, 0x35, 0x30, 0x20, 0x4a, 0x61, 0x64, 0x65, 0x49, 0x74, 0x68, 0x65, 0x6d, 0x62,
		0x61, 0x53, 0x35, 0x33, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x4b, 0x53, 0x35, 0x33, 0x20, 0x53, 0x74,
		0x61, 0x72, 0x6b, 0x53, 0x34, 0x30, 0x5f, 0x4c, 0x49, 0x46, 0x45, 0x53, 0x34, 0x30, 0x20, 0x4c,
		0x69, 0x66, 0x65, 0x4c, 0x49, 0x46, 0x45, 0x5f, 0x32, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x32, 0x53,
		0x34, 0x39, 0x20, 0x50, 0x6f, 0x69, 0x73, 0x65, 0x53, 0x34, 0x39, 0x20, 0x4d, 0x6f, 0x6e, 0x6f,
		0x53, 0x34, 0x39, 0x20, 0x45, 0x63, 0x6f, 0x53, 0x36, 0x34, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41,
		0x53, 0x36, 0x34, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x49, 0x4e, 0x4b, 0x4f, 0x53, 0x49, 0x49,
		0x6e, 0x6b, 0x6f, 0x73, 0x69, 0x54, 0x61, 0x72, 0x69, 0x73, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x53, 0x75, 0x67, 0x61, 0x72, 0x59, 0x24, 0x31, 0x20, 0x4d,
		0x61, 0x78, 0x46, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x75, 0x6d, 0x76, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x53, 0x75, 0x6e, 0x56, 0x61, 0x6e, 0x53, 0x75, 0x6e, 0x6d, 0x69, 0x54, 0x32, 0x73,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x53, 0x75, 0x6e, 0x73, 0x74, 0x65,
		0x63, 0x68, 0x53, 0x75, 0x6e, 0x76, 0x65, 0x6c, 0x6c, 0x54, 0x39, 0x35, 0x5a, 0x50, 0x4c, 0x55,
		0x53, 0x54, 0x39, 0x35, 0x5a, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x53,
		0x6f, 0x6e, 0x69, 0x63, 0x53, 0x75, 0x70, 0x65, 0x72, 0x54, 0x61, 0x62, 0x53, 0x75, 0x70, 0x72,
		0x61, 0x53, 0x75, 0x7a, 0x75, 0x6b, 0x69, 0x53, 0x75, 0x6d, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x24,
		0x31, 0x45, 0x43, 0x4f, 0x50, 0x41, 0x44, 0x37, 0x45, 0x43, 0x4f, 0x50, 0x61, 0x64, 0x20, 0x37,
		0x53, 0x77, 0x69, 0x70, 0x65, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x32, 0x53, 0x77, 0x69, 0x73,
		0x73, 0x74, 0x6f, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x70, 0x68, 0x6f, 0x6e, 0x79, 0x5a, 0x56, 0x49,
		0x49, 0x49, 0x53, 0x79, 0x6d, 0x70, 0x68, 0x6f, 0x6e, 0x79, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20,
		0x69, 0x69, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x49, 0x49, 0x52, 0x6f, 0x61, 0x72, 0x20, 0x24, 0x31,
		0x53, 0x79, 0x72, 0x6f, 0x78, 0x54, 0x2d, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x54, 0x4d, 0x52,
		0x56, 0x4c, 0x34, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x56, 0x52, 0x45, 0x56, 0x56, 0x4c,
		0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x34, 0x52, 0x45,
		0x56, 0x56, 0x4c, 0x20, 0x35, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x32, 0x20, 0x50, 0x4c,
		0x55, 0x53, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x45,
		0x56, 0x56, 0x4c, 0x20, 0x56, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x52, 0x59,
		0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x32, 0x54, 0x65, 0x6c, 0x65, 0x6b, 0x6f, 0x6d, 0x20, 0x50,
		0x75, 0x6c, 0x73, 0x54, 0x41, 0x47, 0x20, 0x54, 0x65, 0x63, 0x68, 0x54, 0x42, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x49, 0x67, 0x6e, 0x69, 0x73, 0x20, 0x24, 0x31, 0x54, 0x43, 0x4c, 0x47, 0x61,
		0x6c, 0x61, 0x20, 0x47, 0x36, 0x30, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x32, 0x30, 0x35, 0x32, 0x30,
		0x4c, 0x32, 0x30, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75,
		0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x30, 0x4c, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x32, 0x30, 0x45, 0x36, 0x31, 0x35, 0x36, 0x48, 0x32, 0x30, 0x59, 0x43, 0x39, 0x41, 0x33,
		0x58, 0x4c, 0x35, 0x4c, 0x39, 0x4c, 0x39, 0x53, 0x4c, 0x31, 0x30, 0x2b, 0x4c, 0x31, 0x30, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x65, 0x78, 0x31, 0x30, 0x20,
		0x35, 0x47, 0x4c, 0x58, 0x31, 0x30, 0x4c, 0x31, 0x30, 0x20, 0x53, 0x45, 0x32, 0x30, 0x20, 0x53,
		0x45, 0x32, 0x30, 0x52, 0x20, 0x35, 0x47, 0x32, 0x30, 0x53, 0x32, 0x30, 0x20, 0x58, 0x45, 0x32,
		0x30, 0x20, 0x35, 0x47, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x54, 0x37, 0x36, 0x36, 0x48, 0x54, 0x61, 0x62, 0x20, 0x38, 0x22, 0x20, 0x34,
		0x47, 0x39, 0x32, 0x39, 0x35, 0x47, 0x31, 0x30, 0x20, 0x54, 0x61, 0x62, 0x4d, 0x61, 0x78, 0x20,
		0x34, 0x47, 0x42, 0x65, 0x79, 0x6f, 0x6e, 0x64, 0x20, 0x54, 0x56, 0x20, 0x24, 0x31, 0x54, 0x44,
		0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x44, 0x20, 0x54, 0x65, 0x63, 0x68, 0x4e,
		0x41, 0x54, 0x2d, 0x54, 0x4e, 0x37, 0x30, 0x4e, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x45, 0x45,
		0x4e, 0x4f, 0x54, 0x45, 0x4e, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x49, 0x41, 0x4e, 0x59, 0x55, 0x54,
		0x4f, 0x53, 0x43, 0x49, 0x44, 0x4f, 0x54, 0x54, 0x45, 0x43, 0x54, 0x56, 0x43, 0x4e, 0x75, 0x63,
		0x6c, 0x65, 0x61, 0x72, 0x20, 0x53, 0x58, 0x2d, 0x53, 0x50, 0x35, 0x54, 0x57, 0x4d, 0x41, 0x6d,
		0x61, 0x7a, 0x69, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x53, 0x41, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67,
		0x20, 0x24, 0x31, 0x54, 0x57, 0x5a, 0x54, 0x61, 0x62, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31,
		0x54, 0x61, 0x69, 0x67, 0x61, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x69, 0x67,
		0x61, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x54, 0x61, 0x6b, 0x61, 0x72, 0x61, 0x54, 0x61,
		0x6d, 0x62, 0x6f, 0x54, 0x61, 0x6e, 0x69, 0x78, 0x54, 0x58, 0x24, 0x31, 0x73, 0x54, 0x58, 0x35,
		0x20, 0x4d, 0x41, 0x58, 0x54, 0x58, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x54, 0x58, 0x33, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x54, 0x65, 0x63, 0x68, 0x50, 0x61, 0x64, 0x53, 0x38, 0x31, 0x33, 0x47, 0x54,
		0x65, 0x63, 0x68, 0x50, 0x61, 0x64, 0x31, 0x30, 0x51, 0x43, 0x31, 0x30, 0x51, 0x43, 0x54, 0x65,
		0x63, 0x68, 0x50, 0x61, 0x64, 0x5f, 0x31, 0x30, 0x78, 0x78, 0x31, 0x30, 0x58, 0x58, 0x54, 0x65,
		0x63, 0x68, 0x50, 0x61, 0x64, 0x37, 0x30, 0x33, 0x37, 0x30, 0x33, 0x33, 0x47, 0x78, 0x33, 0x47,
		0x5f, 0x31, 0x36, 0x33, 0x47, 0x2d, 0x31, 0x36, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x43, 0x31, 0x30,
		0x38, 0x31, 0x48, 0x44, 0x58, 0x54, 0x41, 0x42, 0x20, 0x43, 0x31, 0x30, 0x38, 0x31, 0x48, 0x44,
		0x58, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x4d, 0x35, 0x20, 0x24, 0x31, 0x4d, 0x36, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x20,
		0x43, 0x61, 0x6d, 0x54, 0x65, 0x63, 0x68, 0x5f, 0x50, 0x61, 0x64, 0x5f, 0x4b, 0x61, 0x69, 0x6f,
		0x73, 0x5f, 0x4f, 0x6e, 0x65, 0x5f, 0x33, 0x47, 0x4b, 0x61, 0x69, 0x6f, 0x73, 0x20, 0x4f, 0x6e,
		0x65, 0x20, 0x33, 0x47, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x70, 0x63, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x54, 0x65, 0x63, 0x68, 0x77, 0x6f, 0x6f, 0x64, 0x54,
		0x65, 0x63, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x54, 0x31,
		0x30, 0x58, 0x31, 0x30, 0x50, 0x31, 0x30, 0x53, 0x50, 0x32, 0x30, 0x48, 0x44, 0x50, 0x31, 0x30,
		0x48, 0x44, 0x50, 0x38, 0x30, 0x4d, 0x32, 0x30, 0x5f, 0x34, 0x47, 0x4d, 0x32, 0x30, 0x20, 0x34,
		0x47, 0x4d, 0x38, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x4c, 0x41, 0x30, 0x30, 0x32, 0x4d, 0x33,
		0x30, 0x20, 0x34, 0x47, 0x54, 0x4c, 0x41, 0x30, 0x31, 0x36, 0x4d, 0x31, 0x36, 0x4d, 0x34, 0x30,
		0x4d, 0x34, 0x30, 0x53, 0x45, 0x4d, 0x34, 0x30, 0x20, 0x53, 0x45, 0x54, 0x34, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x54, 0x34, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x50, 0x61, 0x64, 0x20, 0x39,
		0x38, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x34, 0x47, 0x58, 0x39, 0x38, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x58, 0x39, 0x38, 0x20, 0x41, 0x69, 0x72, 0x20, 0x49, 0x49, 0x49, 0x58, 0x39,
		0x38, 0x20, 0x41, 0x69, 0x72, 0x20, 0x49, 0x49, 0x54, 0x65, 0x63, 0x6e, 0x6f, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x36, 0x2d, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x36, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x36,
		0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x58, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d,
		0x20, 0x39, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x38, 0x54, 0x45, 0x43, 0x4e, 0x4f,
		0x2d, 0x57, 0x33, 0x57, 0x33, 0x46, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e,
		0x20, 0x69, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x54, 0x77, 0x69, 0x6e, 0x43, 0x61, 0x6d,
		0x6f, 0x6e, 0x20, 0x69, 0x41, 0x69, 0x72, 0x20, 0x32, 0x2b, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x69, 0x41, 0x63, 0x65, 0x20, 0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x32, 0x58, 0x43,
		0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x43, 0x6c,
		0x69, 0x63, 0x6b, 0x20, 0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x53, 0x6b, 0x79, 0x43,
		0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x53, 0x6b, 0x79, 0x20, 0x33, 0x44, 0x72, 0x6f, 0x69, 0x64,
		0x50, 0x61, 0x64, 0x20, 0x37, 0x43, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37,
		0x44, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x43, 0x20, 0x50, 0x72, 0x6f,
		0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x46, 0x44, 0x72, 0x6f, 0x69, 0x64,
		0x50, 0x61, 0x64, 0x20, 0x37, 0x47, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x31,
		0x30, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x31,
		0x30, 0x44, 0x20, 0x34, 0x47, 0x52, 0x37, 0x2b, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x34,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x39, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x31,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f,
		0x6e, 0x20, 0x31, 0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x32, 0x20, 0x41, 0x69, 0x72, 0x43, 0x61, 0x6d, 0x6f,
		0x6e, 0x20, 0x31, 0x35, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20, 0x41, 0x69, 0x72,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f,
		0x6e, 0x20, 0x31, 0x36, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20, 0x50, 0x72, 0x65,
		0x6d, 0x69, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20, 0x50, 0x72, 0x6f,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20, 0x53, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x31, 0x36, 0x20, 0x53, 0x45, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x37, 0x43, 0x61, 0x6d,
		0x6f, 0x6e, 0x20, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31,
		0x37, 0x50, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x38, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69,
		0x65, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x38, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x31, 0x38, 0x50, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x4d, 0x43, 0x61, 0x6d, 0x6f, 0x6e,
		0x20, 0x58, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d,
		0x6f, 0x6e, 0x20, 0x43, 0x58, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x58, 0x20, 0x41, 0x69,
		0x72, 0x50, 0x6f, 0x70, 0x20, 0x31, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x50, 0x6f, 0x70, 0x20, 0x32,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x46, 0x50, 0x6f, 0x70, 0x20, 0x32,
		0x53, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x50, 0x6f, 0x70, 0x20, 0x32, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x70, 0x20, 0x32,
		0x58, 0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x58, 0x50, 0x6f, 0x70, 0x20, 0x32,
		0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20,
		0x4c, 0x54, 0x45, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x20, 0x47, 0x6f,
		0x50, 0x6f, 0x70, 0x20, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x50, 0x53, 0x41, 0x31, 0x73, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x33, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x34, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x20, 0x41, 0x69, 0x72,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x35, 0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x36,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x36, 0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x36, 0x20, 0x47, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x37, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x37, 0x50, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x37, 0x54, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x38, 0x43, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x50, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x38, 0x54, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x20, 0x50, 0x72,
		0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x41,
		0x69, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x43, 0x4d, 0x44,
		0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x38, 0x44, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69,
		0x72, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x32,
		0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x31, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72,
		0x20, 0x33, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x33, 0x20, 0x41, 0x69, 0x72, 0x50,
		0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x75,
		0x76, 0x6f, 0x69, 0x72, 0x20, 0x34, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x34, 0x20,
		0x50, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6d, 0x20, 0x4a, 0x38, 0x52, 0x37, 0x20, 0x34, 0x47, 0x57,
		0x33, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x45, 0x43, 0x4e,
		0x4f, 0x20, 0x53, 0x39, 0x50, 0x6f, 0x76, 0x61, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x4e, 0x65, 0x6f,
		0x50, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x54, 0x65, 0x6b, 0x6e, 0x6f, 0x73, 0x61, 0x50, 0x72, 0x65,
		0x6f, 0x20, 0x54, 0x65, 0x6b, 0x6e, 0x6f, 0x73, 0x61, 0x20, 0x50, 0x31, 0x50, 0x72, 0x65, 0x6f,
		0x20, 0x50, 0x31, 0x50, 0x72, 0x65, 0x6f, 0x20, 0x50, 0x24, 0x31, 0x54, 0x65, 0x6c, 0x65, 0x32,
		0x24, 0x31, 0x20, 0x31, 0x2e, 0x31, 0x4d, 0x69, 0x64, 0x69, 0x20, 0x32, 0x2e, 0x30, 0x54, 0x65,
		0x6c, 0x65, 0x66, 0x75, 0x6e, 0x6b, 0x65, 0x6e, 0x54, 0x45, 0x4c, 0x2d, 0x31, 0x30, 0x31, 0x33,
		0x47, 0x49, 0x51, 0x41, 0x47, 0x69, 0x71, 0x61, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x20, 0x33, 0x47,
		0x54, 0x45, 0x4c, 0x2d, 0x24, 0x31, 0x46, 0x6f, 0x78, 0x74, 0x72, 0x6f, 0x74, 0x32, 0x46, 0x6f,
		0x78, 0x74, 0x72, 0x6f, 0x74, 0x20, 0x32, 0x4c, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x41, 0x4c,
		0x69, 0x6d, 0x61, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x54, 0x45, 0x20, 0x4d, 0x69, 0x6b, 0x65, 0x4d,
		0x69, 0x6b, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x6f, 0x54, 0x45, 0x4c,
		0x45, 0x47, 0x4f, 0x54, 0x45, 0x4c, 0x45, 0x47, 0x4f, 0x2d, 0x57, 0x35, 0x30, 0x33, 0x57, 0x35,
		0x30, 0x33, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x6f, 0x5f, 0x4a, 0x4f, 0x59, 0x32, 0x4a, 0x6f, 0x79,
		0x20, 0x32, 0x4d, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6e, 0x6f, 0x72, 0x54, 0x65, 0x6c,
		0x69, 0x61, 0x54, 0x65, 0x6c, 0x69, 0x61, 0x20, 0x62, 0x6f, 0x78, 0x42, 0x6f, 0x78, 0x54, 0x65,
		0x6c, 0x69, 0x74, 0x54, 0x65, 0x6c, 0x70, 0x6f, 0x54, 0x50, 0x53, 0x33, 0x32, 0x30, 0x54, 0x65,
		0x73, 0x63, 0x6f, 0x48, 0x75, 0x64, 0x6c, 0x20, 0x24, 0x31, 0x4f, 0x70, 0x33, 0x6e, 0x20, 0x44,
		0x6f, 0x74, 0x74, 0x54, 0x65, 0x74, 0x72, 0x61, 0x74, 0x61, 0x62, 0x43, 0x61, 0x73, 0x65, 0x62,
		0x6f, 0x6f, 0x6b, 0x20, 0x33, 0x54, 0x68, 0x4c, 0x4b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x32,
		0x54, 0x68, 0x6f, 0x6d, 0x73, 0x6f, 0x6e, 0x51, 0x4d, 0x37, 0x33, 0x34, 0x2d, 0x32, 0x51, 0x4d,
		0x37, 0x33, 0x34, 0x2d, 0x38, 0x47, 0x51, 0x4d, 0x37, 0x33, 0x35, 0x2d, 0x38, 0x47, 0x51, 0x4d,
		0x37, 0x33, 0x36, 0x2d, 0x38, 0x47, 0x20, 0x28, 0x48, 0x44, 0x29, 0x33, 0x47, 0x20, 0x38, 0x39,
		0x35, 0x30, 0x54, 0x45, 0x4f, 0x24, 0x31, 0x35, 0x30, 0x31, 0x34, 0x47, 0x54, 0x6c, 0x69, 0x6e,
		0x6b, 0x24, 0x31, 0x45, 0x76, 0x65, 0x72, 0x79, 0x24, 0x31, 0x44, 0x65, 0x6c, 0x69, 0x67, 0x68,
		0x74, 0x20, 0x54, 0x48, 0x32, 0x30, 0x31, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x5f,
		0x54, 0x48, 0x31, 0x30, 0x31, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x20, 0x54, 0x48,
		0x31, 0x30, 0x31, 0x54, 0x68, 0x75, 0x72, 0x61, 0x79, 0x61, 0x54, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x54, 0x69, 0x56, 0x6f, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x20, 0x34, 0x4b, 0x53, 0x74,
		0x72, 0x65, 0x61, 0x6d, 0x20, 0x34, 0x4b, 0x54, 0x43, 0x44, 0x38, 0x46, 0x36, 0x30, 0x30, 0x30,
		0x54, 0x69, 0x67, 0x65, 0x72, 0x73, 0x54, 0x49, 0x53, 0x30, 0x30, 0x31, 0x20, 0x53, 0x24, 0x31,
		0x54, 0x49, 0x53, 0x30, 0x30, 0x31, 0x20, 0x54, 0x32, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x24, 0x31,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x69, 0x6d, 0x6f, 0x76, 0x69, 0x54, 0x4d, 0x4f, 0x56,
		0x49, 0x5f, 0x59, 0x45, 0x41, 0x48, 0x5f, 0x42, 0x45, 0x41, 0x54, 0x59, 0x65, 0x61, 0x68, 0x20,
		0x42, 0x65, 0x61, 0x74, 0x59, 0x65, 0x61, 0x68, 0x4c, 0x49, 0x56, 0x45, 0x59, 0x65, 0x61, 0x68,
		0x20, 0x4c, 0x49, 0x56, 0x45, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x58, 0x20, 0x43,
		0x61, 0x6d, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x4d, 0x58, 0x20, 0x50, 0x72, 0x6f,
		0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x4d, 0x58, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x24, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x50,
		0x52, 0x4f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x49, 0x53, 0x49,
		0x4f, 0x4e, 0x20, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x45, 0x70, 0x69, 0x78, 0x59, 0x65, 0x61, 0x68, 0x5f, 0x47, 0x6f, 0x59,
		0x65, 0x61, 0x68, 0x20, 0x47, 0x6f, 0x54, 0x69, 0x6e, 0x61, 0x69, 0x54, 0x69, 0x6e, 0x6d, 0x6f,
		0x54, 0x6f, 0x6c, 0x69, 0x6e, 0x6f, 0x54, 0x6f, 0x6c, 0x69, 0x6e, 0x6f, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x54, 0x6f, 0x6e, 0x65, 0x54, 0x6f, 0x6f, 0x6b, 0x79, 0x54, 0x4f, 0x4f, 0x4b,
		0x59, 0x41, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x20, 0x48, 0x6f, 0x75, 0x73,
		0x65, 0x43, 0x6f, 0x74, 0x6f, 0x20, 0x57, 0x34, 0x31, 0x38, 0x43, 0x4f, 0x54, 0x4f, 0x5f, 0x54,
		0x31, 0x31, 0x37, 0x43, 0x6f, 0x74, 0x6f, 0x20, 0x54, 0x31, 0x31, 0x37, 0x58, 0x31, 0x30, 0x31,
		0x33, 0x43, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x34, 0x30, 0x30, 0x31, 0x37, 0x54, 0x34, 0x30, 0x30,
		0x31, 0x37, 0x54, 0x6f, 0x70, 0x65, 0x6c, 0x6f, 0x74, 0x65, 0x6b, 0x4b, 0x49, 0x44, 0x53, 0x30,
		0x39, 0x4b, 0x49, 0x44, 0x53, 0x30, 0x39, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x6c, 0x75, 0x78, 0x54, 0x6f, 0x72, 0x65, 0x78, 0x54, 0x6f,
		0x73, 0x68, 0x69, 0x62, 0x61, 0x54, 0x2d, 0x30, 0x31, 0x43, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20,
		0x54, 0x2d, 0x30, 0x31, 0x43, 0x54, 0x2d, 0x30, 0x31, 0x44, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20,
		0x54, 0x2d, 0x30, 0x31, 0x44, 0x54, 0x2d, 0x30, 0x32, 0x44, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20,
		0x54, 0x2d, 0x30, 0x32, 0x44, 0x49, 0x53, 0x30, 0x34, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x49,
		0x53, 0x30, 0x34, 0x49, 0x53, 0x31, 0x31, 0x54, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x49, 0x53,
		0x31, 0x31, 0x54, 0x41, 0x54, 0x37, 0x2d, 0x43, 0x41, 0x54, 0x31, 0x53, 0x30, 0x52, 0x65, 0x67,
		0x7a, 0x61, 0x20, 0x41, 0x54, 0x31, 0x53, 0x30, 0x41, 0x54, 0x33, 0x30, 0x30, 0x53, 0x45, 0x52,
		0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54, 0x33, 0x30, 0x30, 0x53, 0x45, 0x41, 0x54, 0x35, 0x30,
		0x30, 0x61, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54, 0x35, 0x30, 0x30, 0x61, 0x52, 0x65,
		0x67, 0x7a, 0x61, 0x20, 0x41, 0x54, 0x24, 0x31, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x41,
		0x54, 0x31, 0x30, 0x24, 0x31, 0x2d, 0x41, 0x41, 0x54, 0x31, 0x30, 0x2d, 0x41, 0x45, 0x78, 0x63,
		0x69, 0x74, 0x65, 0x20, 0x41, 0x54, 0x31, 0x30, 0x2d, 0x41, 0x41, 0x46, 0x54, 0x4b, 0x4d, 0x53,
		0x54, 0x31, 0x32, 0x34, 0x33, 0x4c, 0x46, 0x37, 0x31, 0x31, 0x55, 0x32, 0x30, 0x41, 0x46, 0x54,
		0x42, 0x41, 0x4d, 0x52, 0x33, 0x31, 0x31, 0x34, 0x33, 0x4c, 0x46, 0x34, 0x32, 0x31, 0x55, 0x31,
		0x39, 0x54, 0x53, 0x42, 0x4e, 0x65, 0x74, 0x54, 0x56, 0x2f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x6d,
		0x61, 0x74, 0x65, 0x54, 0x4d, 0x2d, 0x4d, 0x49, 0x44, 0x31, 0x30, 0x35, 0x30, 0x57, 0x4b, 0x44,
		0x4d, 0x65, 0x67, 0x61, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x33, 0x47, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x65, 0x65, 0x64, 0x54, 0x52, 0x39,
		0x39, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x72, 0x65, 0x6b, 0x53,
		0x74, 0x6f, 0x72, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x53,
		0x54, 0x31, 0x33, 0x34, 0x31, 0x36, 0x2d, 0x31, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20,
		0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x20, 0x31, 0x33, 0x2e, 0x34, 0x22, 0x53, 0x75, 0x72,
		0x66, 0x74, 0x61, 0x62, 0x20, 0x74, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x20, 0x53, 0x31, 0x31,
		0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x20,
		0x53, 0x31, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x30, 0x53,
		0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x46, 0x4d, 0x54, 0x4b, 0x41, 0x57,
		0x30, 0x31, 0x32, 0x33, 0x32, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x31, 0x35,
		0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x58, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x6e, 0x20,
		0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x72, 0x65, 0x76, 0x69, 0x54, 0x41, 0x42, 0x20,
		0x24, 0x31, 0x20, 0x33, 0x47, 0x20, 0x56, 0x38, 0x54, 0x41, 0x42, 0x20, 0x39, 0x20, 0x33, 0x47,
		0x20, 0x56, 0x38, 0x54, 0x41, 0x42, 0x20, 0x39, 0x20, 0x33, 0x47, 0x54, 0x41, 0x42, 0x20, 0x31,
		0x30, 0x20, 0x33, 0x47, 0x20, 0x56, 0x31, 0x36, 0x4d, 0x49, 0x4e, 0x49, 0x54, 0x41, 0x42, 0x20,
		0x33, 0x47, 0x56, 0x4d, 0x49, 0x4e, 0x49, 0x54, 0x41, 0x42, 0x20, 0x33, 0x47, 0x20, 0x56, 0x50,
		0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x34, 0x20, 0x43, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x34, 0x20, 0x53, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x34, 0x2e, 0x35,
		0x51, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x35, 0x20, 0x53, 0x50, 0x68, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x35, 0x2e, 0x33, 0x20, 0x51, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x35, 0x2e, 0x35, 0x20, 0x51, 0x20, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x45, 0x50, 0x68,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x36, 0x20, 0x53, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74,
		0x54, 0x72, 0x69, 0x66, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x31,
		0x53, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x53, 0x50, 0x61, 0x73, 0x73, 0x69,
		0x6f, 0x6e, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x72, 0x6f, 0x50, 0x61,
		0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x72, 0x69, 0x6f, 0x56, 0x35, 0x31,
		0x44, 0x54, 0x54, 0x72, 0x6f, 0x6e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x54, 0x72, 0x75, 0x65, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x34, 0x2e, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x47, 0x65, 0x6e, 0x20, 0x43, 0x20,
		0x24, 0x31, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x53, 0x70, 0x65, 0x65,
		0x64, 0x79, 0x20, 0x35, 0x2e, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x34, 0x47, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x79, 0x20, 0x35, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x34, 0x47, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x50, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x50, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34,
		0x47, 0x20, 0x4d, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x52, 0x55, 0x45, 0x20, 0x42, 0x45,
		0x59, 0x4f, 0x4e, 0x44, 0x20, 0x54, 0x41, 0x42, 0x20, 0x33, 0x47, 0x42, 0x65, 0x79, 0x6f, 0x6e,
		0x64, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x47, 0x54, 0x72, 0x75, 0x65, 0x20, 0x53, 0x6c, 0x69,
		0x6d, 0x54, 0x75, 0x43, 0x45, 0x4c, 0x54, 0x75, 0x6e, 0x69, 0x73, 0x69, 0x65, 0x20, 0x54, 0x65,
		0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x62,
		0x79, 0x20, 0x54, 0x54, 0x58, 0x35, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x35, 0x20, 0x48,
		0x65, 0x72, 0x6f, 0x58, 0x20, 0x52, 0x61, 0x79, 0x58, 0x35, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x58, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x36, 0x20, 0x5a, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x2d,
		0x58, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x78, 0x5f, 0x53, 0x33, 0x53, 0x33, 0x45, 0x33, 0x4d, 0x65,
		0x72, 0x63, 0x75, 0x72, 0x79, 0x49, 0x63, 0x65, 0x48, 0x69, 0x76, 0x65, 0x20, 0x56, 0x20, 0x33,
		0x47, 0x46, 0x69, 0x72, 0x65, 0x20, 0x49, 0x49, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x75, 0x72,
		0x62, 0x6f, 0x4b, 0x69, 0x64, 0x73, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x50, 0x61, 0x64, 0x54, 0x75,
		0x72, 0x6b, 0x63, 0x65, 0x6c, 0x6c, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x54, 0x35, 0x30, 0x54,
		0x24, 0x31, 0x30, 0x54, 0x32, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x35, 0x54, 0x32, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x54, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x54, 0x77, 0x6f, 0x65, 0x54, 0x79, 0x6d, 0x65,
		0x73, 0x54, 0xc3, 0xbc, 0x72, 0x6b, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x6b, 0x6f, 0x6d, 0x54, 0x75,
		0x72, 0x6b, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x6b, 0x6f, 0x6d, 0x54, 0x54, 0x31, 0x37, 0x35, 0x55,
		0x2d, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x33, 0x30, 0x65, 0x20,
		0x35, 0x47, 0x55, 0x2e, 0x53, 0x2e, 0x20, 0x43, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x55,
		0x53, 0x43, 0x43, 0x2d, 0x55, 0x53, 0x43, 0x43, 0x2d, 0x45, 0x36, 0x37, 0x36, 0x32, 0x4b, 0x79,
		0x6f, 0x63, 0x65, 0x72, 0x61, 0x20, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x55,
		0x4d, 0x49, 0x44, 0x49, 0x47, 0x49, 0x41, 0x31, 0x31, 0x20, 0x54, 0x61, 0x62, 0x41, 0x31, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x31, 0x31, 0x53, 0x55, 0x4d, 0x49, 0x20,
		0x54, 0x4f, 0x55, 0x43, 0x48, 0x20, 0x58, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x58, 0x55, 0x4d,
		0x49, 0x20, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x42, 0x49, 0x53, 0x4f,
		0x4e, 0x20, 0x47, 0x54, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x47, 0x54, 0x42, 0x69, 0x73, 0x6f,
		0x6e, 0x20, 0x4e, 0x31, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x42, 0x49, 0x53,
		0x4f, 0x4e, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x42,
		0x49, 0x53, 0x4f, 0x4e, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x68, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f,
		0x53, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x53, 0x43, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x20,
		0x32, 0x43, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65, 0x72, 0x53, 0x32,
		0x20, 0x4c, 0x49, 0x54, 0x45, 0x53, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x33, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x35, 0x53, 0x55, 0x4e, 0x49, 0x57, 0x41,
		0x55, 0x4e, 0x4e, 0x4f, 0x55, 0x54, 0x4f, 0x4b, 0x55, 0x54, 0x53, 0x74, 0x61, 0x72, 0x63, 0x6f,
		0x6d, 0x55, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x5a, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55,
		0x7a, 0x62, 0x65, 0x6b, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x55, 0x67, 0x6f, 0x6f, 0x73, 0x55, 0x68,
		0x61, 0x6e, 0x73, 0x55, 0x68, 0x61, 0x70, 0x70, 0x79, 0x55, 0x50, 0x24, 0x31, 0x55, 0x50, 0x33,
		0x35, 0x30, 0x55, 0x50, 0x35, 0x38, 0x30, 0x55, 0x35, 0x38, 0x30, 0x55, 0x6c, 0x65, 0x66, 0x6f,
		0x6e, 0x65, 0x42, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x24, 0x31, 0x42, 0x65, 0x20, 0x50,
		0x75, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x65, 0x20, 0x50, 0x75, 0x72, 0x65, 0x42,
		0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x65, 0x20, 0x4f, 0x6e, 0x65,
		0x42, 0x65, 0x20, 0x58, 0x55, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x36, 0x30, 0x30, 0x30,
		0x5f, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x72, 0x69, 0x73, 0x5f, 0x58, 0x50, 0x61, 0x72, 0x69,
		0x73, 0x20, 0x58, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24,
		0x31, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x36, 0x53, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24,
		0x31, 0x45, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41,
		0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x24, 0x31, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31,
		0x53, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x33, 0x57,
		0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x33, 0x57, 0x54, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24,
		0x31, 0x20, 0x35, 0x47, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x47, 0x65, 0x6d,
		0x69, 0x6e, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x50, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x37, 0x54, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x50, 0x55, 0x6d, 0x61,
		0x78, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x51, 0x61,
		0x20, 0x33, 0x47, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30,
		0x51, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x31, 0x30, 0x51, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x31, 0x30, 0x41, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x51, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x35, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x4c, 0x54, 0x45, 0x55, 0x6e, 0x69, 0x68, 0x65, 0x72, 0x74, 0x7a, 0x4a, 0x65, 0x6c, 0x6c, 0x79,
		0x20, 0x32, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x5f, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69,
		0x74, 0x61, 0x6e, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x6d, 0x61, 0x78,
		0x55, 0x6e, 0x69, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x57,
		0x65, 0x62, 0x20, 0x54, 0x56, 0x4d, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x46, 0x4f,
		0x2d, 0x52, 0x31, 0x35, 0x4d, 0x38, 0x53, 0x2b, 0x20, 0x34, 0x4b, 0x48, 0x31, 0x30, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x69, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x75,
		0x64, 0x69, 0x20, 0x4b, 0x53, 0x55, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x55, 0x35, 0x31, 0x33,
		0x44, 0x72, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x54, 0x55, 0x35, 0x31, 0x35, 0x31, 0x55, 0x36, 0x31,
		0x31, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x58, 0x55, 0x36, 0x31, 0x33, 0x51, 0x75,
		0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x53, 0x55, 0x36, 0x31, 0x35, 0x51, 0x75, 0x61, 0x74, 0x74,
		0x72, 0x6f, 0x20, 0x4d, 0x55, 0x36, 0x31, 0x36, 0x55, 0x37, 0x31, 0x30, 0x51, 0x75, 0x61, 0x74,
		0x74, 0x72, 0x6f, 0x20, 0x55, 0x37, 0x31, 0x30, 0x55, 0x37, 0x32, 0x30, 0x51, 0x75, 0x61, 0x74,
		0x74, 0x72, 0x6f, 0x20, 0x5a, 0x55, 0x2d, 0x38, 0x33, 0x30, 0x52, 0x75, 0x73, 0x68, 0x55, 0x39,
		0x30, 0x33, 0x55, 0x39, 0x30, 0x35, 0x41, 0x69, 0x72, 0x20, 0x35, 0x2e, 0x35, 0x55, 0x6e, 0x6f,
		0x6e, 0x75, 0x55, 0x6e, 0x6f, 0x77, 0x68, 0x79, 0x51, 0x4f, 0x4f, 0x51, 0x20, 0x51, 0x4f, 0x4f,
		0x51, 0x55, 0x72, 0x6f, 0x76, 0x6f, 0x56, 0x41, 0x49, 0x4f, 0x56, 0x50, 0x41, 0x30, 0x35, 0x31,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x41, 0x56, 0x41, 0x56, 0x41, 0x56, 0x43, 0x43, 0x61, 0x63,
		0x74, 0x75, 0x73, 0x2d, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x63, 0x74, 0x75, 0x73, 0x20, 0x50, 0x72,
		0x6f, 0x24, 0x31, 0x20, 0x49, 0x49, 0x56, 0x44, 0x56, 0x44, 0x56, 0x45, 0x4f, 0x4e, 0x56, 0x47,
		0x4f, 0x20, 0x54, 0x45, 0x4c, 0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x20, 0x56, 0x24, 0x31,
		0x4f, 0x63, 0x65, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x56, 0x49, 0x57, 0x41, 0x4c, 0x49, 0x47, 0x48,
		0x54, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x4c, 0x49, 0x47, 0x48, 0x54, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x41, 0x35, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x4b, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x56, 0x4b, 0x24, 0x31, 0x56, 0x4b,
		0x77, 0x6f, 0x72, 0x6c, 0x64, 0x54, 0x35, 0x20, 0x53, 0x45, 0x56, 0x4f, 0x47, 0x41, 0x56, 0x4f,
		0x47, 0x41, 0x20, 0x35, 0x35, 0x39, 0x30, 0x39, 0x56, 0x56, 0x56, 0x45, 0x54, 0x49, 0x4d, 0x45,
		0x56, 0x31, 0x56, 0x61, 0x6e, 0x6b, 0x79, 0x6f, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x50, 0x61,
		0x64, 0x20, 0x53, 0x24, 0x31, 0x51, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x56, 0x61, 0x72, 0x67,
		0x6f, 0x56, 0x61, 0x73, 0x74, 0x6b, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x64,
		0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x56, 0x65, 0x6e, 0x73, 0x6f, 0x49, 0x73, 0x70, 0x72, 0x69,
		0x74, 0x20, 0x55, 0x35, 0x30, 0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x72, 0x43, 0x68, 0x61,
		0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x56, 0x43, 0x54, 0x24, 0x31, 0x56, 0x65, 0x72, 0x69, 0x63, 0x6f, 0x55, 0x6e, 0x69, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x56, 0x65, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x45, 0x6c, 0x6c,
		0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x31, 0x30, 0x51, 0x54, 0x41, 0x53, 0x55, 0x4e, 0x31, 0x45,
		0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x38, 0x20, 0x48, 0x44, 0x51, 0x54, 0x41, 0x53,
		0x55, 0x4e, 0x32, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x38, 0x20, 0x48, 0x44,
		0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x51, 0x54, 0x41, 0x51, 0x5a, 0x33, 0x4b, 0x49, 0x44,
		0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x4c, 0x54,
		0x45, 0x51, 0x54, 0x41, 0x51, 0x5a, 0x33, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20,
		0x38, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x37, 0x56, 0x65, 0x72, 0x6e, 0x65,
		0x65, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x70, 0x6f, 0x6c,
		0x6c, 0x6f, 0x20, 0x58, 0x4d, 0x61, 0x72, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x68, 0x6f, 0x72,
		0x20, 0x45, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x65, 0x72, 0x6e, 0x65,
		0x65, 0x5f, 0x4d, 0x35, 0x4d, 0x37, 0x5f, 0x45, 0x45, 0x41, 0x58, 0x32, 0x5f, 0x65, 0x75, 0x72,
		0x6f, 0x56, 0x65, 0x72, 0x73, 0x73, 0x65, 0x64, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x45,
		0x31, 0x2e, 0x31, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
		0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x45, 0x63, 0x6c, 0x69,
		0x70, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x24, 0x31, 0x20, 0x34, 0x47, 0x49, 0x6d, 0x70,
		0x72, 0x65, 0x73, 0x73, 0x20, 0x4c, 0x75, 0x63, 0x6b, 0x20, 0x34, 0x47, 0x20, 0x4e, 0x46, 0x43,
		0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x54, 0x61, 0x62, 0x20, 0x58, 0x24, 0x31, 0x54, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x47, 0x20, 0x24, 0x32, 0x2e, 0x24, 0x33, 0x22, 0x56, 0x65, 0x72, 0x74, 0x75,
		0x41, 0x73, 0x74, 0x65, 0x72, 0x20, 0x50, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61,
		0x74, 0x69, 0x6f, 0x6e, 0x20, 0x58, 0x56, 0x65, 0x72, 0x79, 0x6b, 0x6f, 0x6f, 0x6c, 0x76, 0x65,
		0x72, 0x79, 0x6b, 0x6f, 0x6f, 0x6c, 0x4c, 0x6f, 0x74, 0x75, 0x73, 0x4c, 0x6f, 0x74, 0x75, 0x73,
		0x20, 0x4a, 0x72, 0x4c, 0x6f, 0x74, 0x75, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x49, 0x49, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x6f,
		0x74, 0x75, 0x73, 0x20, 0x49, 0x49, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d,
		0x48, 0x65, 0x6c, 0x69, 0x78, 0x20, 0x49, 0x49, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x49, 0x49, 0x4d, 0x61, 0x76, 0x65,
		0x72, 0x69, 0x63, 0x6b, 0x20, 0x49, 0x49, 0x49, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b,
		0x20, 0x49, 0x49, 0x49, 0x20, 0x4a, 0x72, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20,
		0x4a, 0x72, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x70,
		0x65, 0x61, 0x72, 0x53, 0x70, 0x65, 0x61, 0x72, 0x20, 0x4a, 0x72, 0x41, 0x70, 0x6f, 0x6c, 0x6c,
		0x6f, 0x20, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x53,
		0x6f, 0x6c, 0x20, 0x51, 0x75, 0x61, 0x74, 0x72, 0x6f, 0x20, 0x4a, 0x72, 0x43, 0x79, 0x70, 0x72,
		0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x79, 0x70, 0x72, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45,
		0x4c, 0x65, 0x6f, 0x20, 0x33, 0x47, 0x4c, 0x65, 0x6f, 0x20, 0x49, 0x56, 0x4c, 0x65, 0x6f, 0x20,
		0x56, 0x44, 0x6f, 0x72, 0x61, 0x64, 0x6f, 0x4f, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f,
		0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4a, 0x72, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x52, 0x6f, 0x79,
		0x61, 0x6c, 0x65, 0x20, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x4b, 0x6f, 0x6c, 0x6f, 0x72,
		0x50, 0x61, 0x64, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x61, 0x64, 0x20,
		0x49, 0x49, 0x4b, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x61, 0x64, 0x20, 0x49, 0x56, 0x56, 0x65, 0x73,
		0x74, 0x61, 0x56, 0x45, 0x53, 0x54, 0x41, 0x33, 0x32, 0x4c, 0x44, 0x38, 0x36, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x54, 0x56, 0x20, 0x33, 0x32, 0x4c, 0x44, 0x38, 0x36, 0x53, 0x56, 0x45, 0x53, 0x54,
		0x41, 0x5f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x54, 0x56, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x54,
		0x56, 0x56, 0x65, 0x73, 0x74, 0x65, 0x6c, 0x56, 0x54, 0x39, 0x37, 0x50, 0x52, 0x4f, 0x56, 0x54,
		0x61, 0x62, 0x20, 0x39, 0x2e, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x50, 0x37, 0x34, 0x56, 0x54,
		0x61, 0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x49, 0x49, 0x56, 0x54, 0x41, 0x42, 0x31, 0x30,
		0x56, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x37, 0x5f, 0x45,
		0x43, 0x4f, 0x5f, 0x49, 0x49, 0x49, 0x56, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x45, 0x63, 0x6f,
		0x20, 0x33, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x37, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x5f, 0x49,
		0x49, 0x49, 0x56, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x33, 0x56,
		0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x56, 0x33, 0x5f, 0x35, 0x35, 0x38, 0x30, 0x5f, 0x44, 0x75,
		0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x56, 0x33, 0x20, 0x35, 0x35, 0x38, 0x30, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x56, 0x53, 0x50, 0x31, 0x34, 0x35, 0x4d, 0x56, 0x65, 0x6e, 0x75, 0x73,
		0x20, 0x34, 0x2e, 0x35, 0x56, 0x53, 0x50, 0x32, 0x35, 0x30, 0x47, 0x56, 0x65, 0x6e, 0x75, 0x73,
		0x20, 0x35, 0x2e, 0x30, 0x56, 0x56, 0x53, 0x50, 0x32, 0x35, 0x30, 0x53, 0x56, 0x65, 0x6e, 0x75,
		0x73, 0x20, 0x35, 0x2e, 0x30, 0x58, 0x56, 0x53, 0x50, 0x33, 0x35, 0x35, 0x47, 0x56, 0x65, 0x6e,
		0x75, 0x73, 0x20, 0x35, 0x2e, 0x35, 0x56, 0x56, 0x53, 0x50, 0x33, 0x35, 0x35, 0x53, 0x56, 0x65,
		0x6e, 0x75, 0x73, 0x20, 0x35, 0x2e, 0x35, 0x58, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x56, 0x24,
		0x31, 0x24, 0x32, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x5a, 0x24, 0x31, 0x56, 0x65, 0x6e, 0x75,
		0x73, 0x20, 0x45, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x56, 0x65,
		0x6e, 0x75, 0x73, 0x20, 0x45, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x65, 0x6e, 0x75, 0x73,
		0x20, 0x45, 0x24, 0x31, 0x56, 0x65, 0x73, 0x74, 0x65, 0x6c, 0x5f, 0x35, 0x30, 0x30, 0x30, 0x5f,
		0x44, 0x75, 0x61, 0x6c, 0x35, 0x30, 0x30, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x73,
		0x74, 0x65, 0x6c, 0x5f, 0x35, 0x30, 0x30, 0x30, 0x5f, 0x32, 0x67, 0x62, 0x35, 0x30, 0x30, 0x30,
		0x20, 0x32, 0x47, 0x42, 0x56, 0x65, 0x78, 0x69, 0x61, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f,
		0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x5f, 0x56, 0x31, 0x35, 0x38, 0x35, 0x56,
		0x31, 0x35, 0x38, 0x35, 0x56, 0x54, 0x37, 0x35, 0x43, 0x4b, 0x72, 0x79, 0x74, 0x6f, 0x6e, 0x20,
		0x33, 0x4b, 0x72, 0x79, 0x74, 0x6f, 0x6e, 0x20, 0x32, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44,
		0x65, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x31, 0x44, 0x65, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x32,
		0x31, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x4d, 0x65, 0x74, 0x61,
		0x6c, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x53, 0x74, 0x61, 0x72, 0x72, 0x20, 0x31, 0x30, 0x30,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x30, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x75, 0x6d,
		0x20, 0x5a, 0x34, 0x35, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x75, 0x6d, 0x20,
		0x5a, 0x34, 0x35, 0x51, 0x20, 0x53, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x75,
		0x6d, 0x20, 0x5a, 0x35, 0x30, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x56, 0x69, 0x65, 0x77, 0x53, 0x6f,
		0x6e, 0x69, 0x63, 0x56, 0x35, 0x30, 0x30, 0x41, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69,
		0x65, 0x77, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x56, 0x69, 0x65, 0x77, 0x50, 0x61,
		0x64, 0x20, 0x24, 0x31, 0x56, 0x69, 0x65, 0x77, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x49, 0x46,
		0x50, 0x24, 0x31, 0x35, 0x30, 0x2d, 0x33, 0x20, 0x24, 0x31, 0x22, 0x20, 0x34, 0x4b, 0x56, 0x69,
		0x6e, 0x61, 0x62, 0x6f, 0x78, 0x56, 0x69, 0x6e, 0x67, 0x61, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x32,
		0x31, 0x2d, 0x38, 0x32, 0x30, 0x32, 0x31, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x32, 0x35, 0x2d, 0x33,
		0x32, 0x34, 0x30, 0x32, 0x35, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x31, 0x35, 0x2d, 0x31, 0x36, 0x32,
		0x30, 0x31, 0x35, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x34, 0x31, 0x2d, 0x31, 0x36, 0x32, 0x30, 0x34,
		0x31, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x34, 0x35, 0x2d, 0x36, 0x36, 0x34, 0x30, 0x34, 0x35, 0x56,
		0x4d, 0x50, 0x2d, 0x30, 0x31, 0x31, 0x2d, 0x38, 0x31, 0x30, 0x31, 0x31, 0x30, 0x32, 0x33, 0x56,
		0x69, 0x6e, 0x73, 0x6f, 0x63, 0x56, 0x69, 0x6f, 0x73, 0x56, 0x4d, 0x50, 0x30, 0x36, 0x31, 0x37,
		0x56, 0x69, 0x70, 0x72, 0x6f, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x58, 0x56, 0x69, 0x72, 0x7a, 0x6f,
		0x56, 0x36, 0x30, 0x38, 0x63, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4c, 0x69, 0x66, 0x65,
		0x4c, 0x69, 0x66, 0x65, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x56, 0x69, 0x74, 0x65, 0x6c,
		0x63, 0x6f, 0x6d, 0x56, 0x69, 0x75, 0x6d, 0x65, 0x65, 0x56, 0x69, 0x76, 0x61, 0x78, 0x46, 0x6c,
		0x79, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x58, 0x24,
		0x31, 0x46, 0x75, 0x6e, 0x20, 0x53, 0x35, 0x30, 0x30, 0x46, 0x75, 0x6e, 0x20, 0x53, 0x24, 0x31,
		0x46, 0x6c, 0x79, 0x20, 0x24, 0x31, 0x46, 0x6c, 0x79, 0x20, 0x56, 0x24, 0x31, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x58, 0x35, 0x30, 0x31, 0x30, 0x54, 0x50,
		0x43, 0x2d, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x56, 0x69, 0x76, 0x6f, 0x69, 0x51, 0x4f, 0x4f,
		0x69, 0x51, 0x4f, 0x4f, 0x20, 0x33, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x39, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x33, 0x20, 0x35, 0x47, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x55, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x37, 0x56, 0x32, 0x31, 0x35,
		0x37, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x20, 0x53, 0x45, 0x56,
		0x32, 0x31, 0x35, 0x34, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x53,
		0x69, 0x51, 0x4f, 0x4f, 0x20, 0x37, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x50, 0x72,
		0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x4e, 0x65, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x38, 0x35, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e,
		0x65, 0x6f, 0x20, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x31, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a,
		0x31, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x33, 0x56, 0x31, 0x39, 0x31, 0x39, 0x41, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x35, 0x78, 0x56, 0x32, 0x31, 0x33, 0x31, 0x41, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x5a, 0x35, 0x78, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x34, 0x38, 0x41, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x5a, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x35, 0x20, 0x35, 0x47, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x55, 0x31, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x31, 0x78, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x55, 0x33, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x33, 0x78, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x55, 0x33, 0x78, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x35, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x38, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x31, 0x56, 0x32, 0x31, 0x20, 0x35,
		0x47, 0x56, 0x32, 0x31, 0x65, 0x56, 0x32, 0x31, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x30, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x55, 0x32, 0x30, 0x55, 0x31, 0x30, 0x4e, 0x65, 0x78, 0x4e,
		0x65, 0x78, 0x20, 0x33, 0x4e, 0x65, 0x78, 0x20, 0x33, 0x20, 0x35, 0x47, 0x4e, 0x65, 0x78, 0x20,
		0x33, 0x53, 0x4e, 0x65, 0x78, 0x20, 0x53, 0x4e, 0x65, 0x78, 0x20, 0x41, 0x4e, 0x65, 0x78, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x56, 0x32, 0x31, 0x31,
		0x35, 0x41, 0x54, 0x31, 0x20, 0x35, 0x47, 0x56, 0x31, 0x39, 0x36, 0x32, 0x42, 0x41, 0x47, 0x31,
		0x20, 0x35, 0x47, 0x53, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x31, 0x33, 0x30, 0x41, 0x53,
		0x31, 0x30, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x33, 0x30, 0x56, 0x32, 0x33, 0x20, 0x35,
		0x47, 0x53, 0x36, 0x20, 0x35, 0x47, 0x53, 0x31, 0x32, 0x20, 0x35, 0x47, 0x53, 0x37, 0x53, 0x37,
		0x65, 0x53, 0x37, 0x74, 0x53, 0x39, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x39, 0x65,
		0x55, 0x33, 0x58, 0x56, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x31, 0x31, 0x69, 0x56, 0x31,
		0x35, 0x56, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x56,
		0x31, 0x37, 0x20, 0x4e, 0x65, 0x6f, 0x56, 0x31, 0x37, 0x56, 0x31, 0x39, 0x56, 0x32, 0x30, 0x20,
		0x53, 0x45, 0x56, 0x35, 0x56, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x35, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x56, 0x35, 0x73, 0x56, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x39, 0x56, 0x39,
		0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x56, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x33, 0x20, 0x4d,
		0x61, 0x78, 0x58, 0x39, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x39, 0x73, 0x58, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x55, 0x44, 0x58, 0x32,
		0x30, 0x58, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x32, 0x31, 0x69, 0x58, 0x32, 0x31,
		0x20, 0x55, 0x44, 0x58, 0x32, 0x31, 0x58, 0x32, 0x31, 0x53, 0x58, 0x32, 0x33, 0x58, 0x32, 0x37,
		0x58, 0x32, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x33, 0x30, 0x58, 0x33, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x58, 0x35, 0x30, 0x58, 0x35, 0x30, 0x65, 0x58, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x36, 0x30, 0x58,
		0x36, 0x30, 0x74, 0x58, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x36, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x37, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x58, 0x37, 0x30, 0x58, 0x37, 0x30, 0x20, 0x35, 0x47, 0x58, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x59, 0x31,
		0x73, 0x59, 0x31, 0x37, 0x59, 0x31, 0x31, 0x59, 0x31, 0x32, 0x56, 0x32, 0x31, 0x36, 0x33, 0x41,
		0x59, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x31, 0x32, 0x61, 0x59, 0x31, 0x32, 0x69, 0x59,
		0x31, 0x35, 0x59, 0x31, 0x35, 0x73, 0x59, 0x31, 0x39, 0x59, 0x32, 0x30, 0x59, 0x32, 0x35, 0x59,
		0x32, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x32, 0x30, 0x41, 0x59, 0x32, 0x30,
		0x47, 0x59, 0x32, 0x30, 0x54, 0x59, 0x32, 0x30, 0x47, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x59, 0x31, 0x31, 0x73, 0x59, 0x32, 0x30, 0x73, 0x59, 0x37, 0x32, 0x20, 0x35, 0x47, 0x56, 0x32,
		0x31, 0x30, 0x32, 0x41, 0x59, 0x37, 0x32, 0x54, 0x20, 0x35, 0x47, 0x59, 0x32, 0x30, 0x69, 0x59,
		0x32, 0x31, 0x73, 0x59, 0x32, 0x31, 0x59, 0x33, 0x59, 0x33, 0x20, 0x53, 0x74, 0x61, 0x6e, 0x64,
		0x61, 0x72, 0x64, 0x59, 0x33, 0x30, 0x59, 0x33, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x59, 0x33, 0x30, 0x67, 0x59, 0x33, 0x31, 0x59, 0x33, 0x31, 0x73, 0x56, 0x32, 0x31, 0x35, 0x38,
		0x41, 0x59, 0x33, 0x32, 0x59, 0x33, 0x33, 0x59, 0x33, 0x33, 0x73, 0x59, 0x35, 0x73, 0x56, 0x32,
		0x30, 0x32, 0x33, 0x45, 0x41, 0x59, 0x35, 0x30, 0x74, 0x59, 0x35, 0x31, 0x59, 0x35, 0x31, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x59, 0x35, 0x31, 0x73, 0x59, 0x35, 0x32, 0x73, 0x59, 0x35,
		0x32, 0x59, 0x35, 0x33, 0x69, 0x59, 0x35, 0x33, 0x59, 0x35, 0x33, 0x73, 0x56, 0x32, 0x30, 0x36,
		0x39, 0x41, 0x59, 0x35, 0x33, 0x73, 0x20, 0x54, 0x31, 0x59, 0x35, 0x35, 0x6c, 0x59, 0x35, 0x35,
		0x73, 0x56, 0x32, 0x31, 0x36, 0x34, 0x41, 0x59, 0x35, 0x35, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x56, 0x32, 0x30, 0x34, 0x35, 0x41, 0x59, 0x35, 0x34, 0x73, 0x59, 0x36, 0x35, 0x59,
		0x36, 0x39, 0x59, 0x37, 0x30, 0x73, 0x59, 0x36, 0x30, 0x73, 0x59, 0x37, 0x31, 0x59, 0x37, 0x31,
		0x69, 0x59, 0x37, 0x33, 0x59, 0x37, 0x33, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x37,
		0x33, 0x73, 0x59, 0x37, 0x36, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x35, 0x36, 0x41, 0x59, 0x37,
		0x36, 0x73, 0x59, 0x37, 0x73, 0x59, 0x38, 0x31, 0x59, 0x38, 0x31, 0x69, 0x59, 0x38, 0x31, 0x73,
		0x59, 0x38, 0x33, 0x59, 0x38, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x38, 0x39, 0x59, 0x39, 0x30,
		0x59, 0x39, 0x31, 0x59, 0x39, 0x31, 0x69, 0x59, 0x39, 0x73, 0x59, 0x31, 0x32, 0x73, 0x59, 0x31,
		0x32, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x39, 0x33, 0x59, 0x39, 0x33, 0x73,
		0x59, 0x39, 0x35, 0x59, 0x39, 0x37, 0x5a, 0x31, 0x5a, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x31,
		0x69, 0x5a, 0x31, 0x78, 0x5a, 0x33, 0x78, 0x5a, 0x35, 0x78, 0x5a, 0x35, 0x78, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x30, 0x29, 0x59, 0x37, 0x35, 0x20, 0x35, 0x47, 0x59, 0x37, 0x35, 0x73, 0x58, 0x20,
		0x53, 0x68, 0x6f, 0x74, 0x58, 0x36, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x36, 0x53, 0x59,
		0x36, 0x36, 0x69, 0x58, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x53, 0x58, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x56, 0x69, 0x7a, 0x69, 0x6f, 0x56, 0x41, 0x50, 0x34, 0x33,
		0x30, 0x49, 0x53, 0x56, 0x2d, 0x42, 0x31, 0x31, 0x44, 0x35, 0x30, 0x75, 0x2d, 0x44, 0x31, 0x56,
		0x6f, 0x64, 0x61, 0x63, 0x6f, 0x6d, 0x4b, 0x69, 0x63, 0x6b, 0x61, 0x20, 0x35, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x34, 0x47, 0x56, 0x6f, 0x64, 0x61, 0x66, 0x6f, 0x6e, 0x65, 0x56, 0x46, 0x44,
		0x20, 0x31, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x56, 0x46,
		0x36, 0x38, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4b, 0x69, 0x63, 0x6b, 0x61, 0x56, 0x46,
		0x36, 0x39, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x46, 0x69, 0x72, 0x73, 0x74, 0x20, 0x36,
		0x56, 0x46, 0x44, 0x20, 0x32, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x46, 0x69, 0x72,
		0x73, 0x74, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20, 0x33, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x75, 0x72,
		0x62, 0x6f, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x45, 0x38, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x45, 0x39, 0x56, 0x46, 0x44, 0x20, 0x36, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x56, 0x46, 0x44, 0x33, 0x32, 0x30, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x43, 0x39, 0x56, 0x46, 0x44, 0x20, 0x38, 0x32, 0x30, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x58, 0x39, 0x56, 0x46, 0x44, 0x20, 0x36, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x4e, 0x38, 0x56, 0x46, 0x44, 0x20, 0x36, 0x33, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x4e, 0x31, 0x30, 0x56, 0x46, 0x44, 0x20, 0x36, 0x32, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x4e, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x75, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x36, 0x56, 0x46, 0x44, 0x20, 0x37, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20, 0x37, 0x32, 0x30, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x4e, 0x39, 0x56, 0x46, 0x44, 0x20, 0x37, 0x33, 0x30, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x56, 0x31, 0x30, 0x56, 0x46, 0x44, 0x20, 0x39, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x34, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x6f, 0x64, 0x61, 0x66, 0x6f,
		0x6e, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x43, 0x68, 0x61, 0x74, 0x56, 0x46, 0x2d, 0x36, 0x39, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x36, 0x56, 0x46, 0x2d, 0x37, 0x39, 0x35, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x36, 0x56, 0x46, 0x2d, 0x38, 0x39,
		0x35, 0x4e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x36, 0x56,
		0x46, 0x2d, 0x31, 0x33, 0x39, 0x37, 0x54, 0x61, 0x62, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20,
		0x36, 0x56, 0x46, 0x2d, 0x31, 0x34, 0x39, 0x37, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x36, 0x56, 0x46, 0x44, 0x20, 0x31, 0x31, 0x30, 0x30, 0x54, 0x61, 0x62, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20, 0x31, 0x33, 0x30, 0x30, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x4e, 0x38, 0x56, 0x46, 0x44, 0x20, 0x31, 0x34, 0x30,
		0x30, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x49, 0x49, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49,
		0x20, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x49,
		0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x49, 0x20,
		0x31, 0x30, 0x56, 0x46, 0x44, 0x20, 0x24, 0x31, 0x56, 0x6f, 0x6e, 0x69, 0x6e, 0x6f, 0x5a, 0x75,
		0x6e, 0x20, 0x58, 0x4f, 0x5a, 0x75, 0x6e, 0x20, 0x58, 0x53, 0x5a, 0x75, 0x6e, 0x20, 0x58, 0x58,
		0x79, 0x6c, 0x6f, 0x20, 0x24, 0x31, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x20, 0x41, 0x37, 0x56,
		0x6f, 0x6c, 0x74, 0x20, 0x53, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x58, 0x47, 0x79, 0x67, 0x61, 0x20,
		0x51, 0x53, 0x47, 0x79, 0x67, 0x61, 0x20, 0x58, 0x53, 0x47, 0x79, 0x67, 0x61, 0x20, 0x24, 0x31,
		0x4a, 0x61, 0x78, 0x20, 0x51, 0x53, 0x4a, 0x61, 0x78, 0x20, 0x53, 0x20, 0x41, 0x37, 0x4a, 0x61,
		0x78, 0x20, 0x24, 0x31, 0x4a, 0x61, 0x78, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x4d, 0x61, 0x72,
		0x74, 0x5f, 0x50, 0x72, 0x6f, 0x49, 0x4d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x70,
		0x69, 0x63, 0x20, 0x24, 0x31, 0x50, 0x6c, 0x75, 0x72, 0x69, 0x20, 0x24, 0x31, 0x37, 0x50, 0x6c,
		0x75, 0x72, 0x69, 0x20, 0x24, 0x31, 0x38, 0x44, 0x72, 0x75, 0x69, 0x64, 0x20, 0x24, 0x31, 0x4d,
		0x61, 0x67, 0x6e, 0x65, 0x74, 0x20, 0x24, 0x31, 0x4e, 0x61, 0x76, 0x6f, 0x5f, 0x51, 0x53, 0x4e,
		0x61, 0x76, 0x6f, 0x20, 0x51, 0x53, 0x4f, 0x72, 0x69, 0x6e, 0x5f, 0x51, 0x53, 0x4f, 0x72, 0x69,
		0x6e, 0x20, 0x51, 0x53, 0x53, 0x69, 0x72, 0x69, 0x75, 0x73, 0x5f, 0x51, 0x53, 0x53, 0x69, 0x72,
		0x69, 0x75, 0x73, 0x20, 0x51, 0x53, 0x58, 0x61, 0x76, 0x79, 0x5f, 0x54, 0x37, 0x58, 0x61, 0x76,
		0x79, 0x20, 0x54, 0x37, 0x58, 0x61, 0x76, 0x79, 0x5f, 0x4c, 0x38, 0x58, 0x61, 0x76, 0x79, 0x20,
		0x4c, 0x38, 0x56, 0x6f, 0x6e, 0x74, 0x61, 0x72, 0x48, 0x4b, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x48,
		0x4b, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x48, 0x4b, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48,
		0x4b, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x6f, 0x72, 0x61, 0x67, 0x6f, 0x56, 0x4f, 0x52, 0x41,
		0x47, 0x4f, 0x43, 0x45, 0x4c, 0x4c, 0x2d, 0x35, 0x30, 0x30, 0x56, 0x6f, 0x72, 0x63, 0x6f, 0x6d,
		0x53, 0x58, 0x50, 0x72, 0x6f, 0x53, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x6f, 0x72, 0x6b, 0x65,
		0x56, 0x6f, 0x74, 0x6f, 0x56, 0x6f, 0x78, 0x74, 0x65, 0x6c, 0x56, 0x6f, 0x79, 0x6f, 0x69, 0x38,
		0x20, 0x4d, 0x61, 0x78, 0x56, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x79, 0x20, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4a, 0x6f, 0x79, 0x20, 0x24, 0x31, 0x41, 0x63, 0x74, 0x69, 0x76,
		0x65, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x65, 0x65, 0x20, 0x33, 0x41, 0x63, 0x74,
		0x69, 0x76, 0x65, 0x20, 0x33, 0x48, 0x6f, 0x62, 0x73, 0x6f, 0x6e, 0x42, 0x65, 0x65, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x56, 0x73, 0x75, 0x6e, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
		0x61, 0x72, 0x73, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4d, 0x61, 0x72, 0x73, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x4d, 0x61, 0x72, 0x73, 0x20, 0x4e, 0x6f, 0x63, 0x61, 0x6d, 0x53, 0x61, 0x74, 0x75,
		0x72, 0x6e, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x20, 0x53,
		0x31, 0x33, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x20, 0x53, 0x31, 0x31, 0x48, 0x54, 0x30, 0x37, 0x30,
		0x34, 0x57, 0x30, 0x38, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x57, 0x34, 0x57, 0x45, 0x57,
		0x49, 0x57, 0x41, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20,
		0x54, 0x56, 0x57, 0x61, 0x6c, 0x74, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x57, 0x61,
		0x6c, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x53, 0x36, 0x20,
		0x69, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x53, 0x36,
		0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x48,
		0x38, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x48, 0x38, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f,
		0x52, 0x58, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x57, 0x65, 0x69, 0x6d, 0x65, 0x69, 0x77, 0x65,
		0x70, 0x6c, 0x75, 0x73, 0x5f, 0x33, 0x57, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x57, 0x65,
		0x6c, 0x6c, 0x63, 0x6f, 0x4d, 0x57, 0x65, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x20, 0x44, 0x69, 0x67,
		0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x32, 0x30, 0x31, 0x30,
		0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x57,
		0x65, 0x73, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x65, 0x78, 0x6c, 0x65, 0x72, 0x5a, 0x45,
		0x4e, 0x20, 0x34, 0x2e, 0x35, 0x5a, 0x45, 0x4e, 0x20, 0x34, 0x2e, 0x37, 0x5a, 0x45, 0x4e, 0x20,
		0x35, 0x5a, 0x45, 0x4e, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x41, 0x42, 0x20, 0x31,
		0x30, 0x51, 0x54, 0x41, 0x42, 0x20, 0x31, 0x30, 0x69, 0x51, 0x20, 0x33, 0x47, 0x57, 0x69, 0x65,
		0x70, 0x70, 0x6f, 0x57, 0x69, 0x67, 0x6f, 0x72, 0x57, 0x69, 0x6b, 0x6f, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x55, 0x31, 0x30, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x55, 0x32, 0x30, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x55, 0x33, 0x30, 0x43, 0x69, 0x6e, 0x6b, 0x20, 0x50, 0x65, 0x61, 0x78,
		0x20, 0x32, 0x43, 0x69, 0x6e, 0x6b, 0x24, 0x31, 0x43, 0x69, 0x6e, 0x6b, 0x20, 0x24, 0x31, 0x48,
		0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x20, 0x50, 0x75, 0x72, 0x65, 0x48, 0x69, 0x67, 0x68, 0x77,
		0x61, 0x79, 0x20, 0x53, 0x74, 0x61, 0x72, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x24, 0x31,
		0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x20, 0x24, 0x31, 0x49, 0x67, 0x67, 0x79, 0x46, 0x65,
		0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x69, 0x72, 0x77, 0x61, 0x79, 0x52, 0x69, 0x64, 0x67, 0x65,
		0x20, 0x46, 0x61, 0x62, 0x20, 0x34, 0x47, 0x52, 0x69, 0x64, 0x67, 0x65, 0x20, 0x34, 0x47, 0x52,
		0x69, 0x64, 0x67, 0x65, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x20, 0x24, 0x31, 0x44, 0x61,
		0x72, 0x6b, 0x73, 0x69, 0x64, 0x65, 0x44, 0x61, 0x72, 0x6b, 0x6d, 0x6f, 0x6f, 0x6e, 0x44, 0x61,
		0x72, 0x6b, 0x66, 0x75, 0x6c, 0x6c, 0x44, 0x61, 0x72, 0x6b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x53,
		0x75, 0x62, 0x6c, 0x69, 0x6d, 0x4f, 0x7a, 0x7a, 0x79, 0x42, 0x61, 0x72, 0x72, 0x79, 0x42, 0x69,
		0x72, 0x64, 0x79, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x4a, 0x69, 0x6d, 0x6d, 0x79, 0x4a, 0x45, 0x52,
		0x52, 0x59, 0x20, 0x4d, 0x41, 0x58, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x4d, 0x61, 0x78, 0x57,
		0x5f, 0x4b, 0x33, 0x30, 0x30, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x33, 0x57, 0x2d, 0x4b, 0x34,
		0x32, 0x30, 0x2d, 0x54, 0x56, 0x4d, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x34, 0x4a, 0x65, 0x72,
		0x72, 0x79, 0x20, 0x32, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x47, 0x65, 0x74, 0x61, 0x77, 0x61, 0x79,
		0x47, 0x6f, 0x61, 0x46, 0x72, 0x65, 0x64, 0x64, 0x79, 0x4b, 0x69, 0x74, 0x65, 0x57, 0x5f, 0x4b,
		0x34, 0x30, 0x30, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x35, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x33,
		0x4b, 0x65, 0x6e, 0x6e, 0x79, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x33, 0x20, 0x4d, 0x61, 0x78,
		0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x65, 0x6e, 0x6e,
		0x79, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x53, 0x75,
		0x6e, 0x73, 0x65, 0x74, 0x20, 0x32, 0x53, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x53, 0x75, 0x6e, 0x6e,
		0x79, 0x20, 0x33, 0x57, 0x2d, 0x4b, 0x32, 0x30, 0x30, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x33,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x32, 0x57, 0x2d, 0x4b, 0x33, 0x36, 0x30, 0x2d, 0x54,
		0x56, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x2d, 0x4b,
		0x31, 0x33, 0x30, 0x2d, 0x54, 0x4d, 0x56, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x34, 0x57, 0x2d,
		0x4b, 0x33, 0x38, 0x30, 0x2d, 0x54, 0x56, 0x4d, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x35, 0x54,
		0x6f, 0x6d, 0x6d, 0x79, 0x20, 0x33, 0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x20, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x20, 0x32, 0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x57, 0x61,
		0x78, 0x48, 0x61, 0x72, 0x72, 0x79, 0x57, 0x2d, 0x56, 0x36, 0x30, 0x30, 0x48, 0x61, 0x72, 0x72,
		0x79, 0x20, 0x32, 0x57, 0x49, 0x4d, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x70, 0x20,
		0x46, 0x61, 0x62, 0x20, 0x34, 0x47, 0x50, 0x75, 0x6c, 0x70, 0x20, 0x46, 0x61, 0x62, 0x50, 0x75,
		0x6c, 0x70, 0x20, 0x34, 0x47, 0x50, 0x75, 0x6c, 0x70, 0x52, 0x6f, 0x62, 0x62, 0x79, 0x24, 0x31,
		0x55, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x55, 0x20, 0x50, 0x75,
		0x6c, 0x73, 0x65, 0x55, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x55, 0x20,
		0x46, 0x65, 0x65, 0x6c, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x55, 0x20, 0x46, 0x65, 0x65, 0x6c,
		0x56, 0x33, 0x39, 0x39, 0x31, 0x41, 0x4e, 0x55, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x46, 0x61,
		0x62, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x20, 0x47, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x20, 0x58, 0x4c, 0x56, 0x69, 0x65, 0x77,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x57, 0x43, 0x33, 0x30, 0x30, 0x56, 0x69, 0x65, 0x77, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x57, 0x5f, 0x43, 0x38, 0x30, 0x30, 0x57, 0x5f, 0x43, 0x38, 0x36, 0x30,
		0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x5f, 0x50, 0x32, 0x30, 0x30,
		0x56, 0x69, 0x65, 0x77, 0x20, 0x4d, 0x61, 0x78, 0x57, 0x5f, 0x50, 0x31, 0x33, 0x30, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x47, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x57, 0x2d, 0x56, 0x38, 0x35, 0x31, 0x56, 0x69, 0x65, 0x77, 0x20, 0x35, 0x57, 0x2d, 0x56, 0x38,
		0x35, 0x30, 0x2d, 0x45, 0x45, 0x41, 0x56, 0x69, 0x65, 0x77, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x57, 0x2d, 0x4b, 0x34, 0x32, 0x30, 0x2d, 0x45, 0x45, 0x41, 0x57, 0x2d, 0x4b, 0x32, 0x31,
		0x31, 0x59, 0x36, 0x30, 0x59, 0x36, 0x31, 0x57, 0x2d, 0x4b, 0x36, 0x31, 0x30, 0x59, 0x36, 0x32,
		0x59, 0x38, 0x30, 0x57, 0x2d, 0x56, 0x36, 0x38, 0x30, 0x57, 0x2d, 0x4b, 0x36, 0x33, 0x30, 0x59,
		0x38, 0x32, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x65, 0x77,
		0x20, 0x34, 0x56, 0x69, 0x65, 0x77, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x2d, 0x56,
		0x37, 0x34, 0x35, 0x2d, 0x54, 0x56, 0x4d, 0x52, 0x69, 0x64, 0x65, 0x52, 0x69, 0x64, 0x65, 0x20,
		0x32, 0x52, 0x69, 0x64, 0x65, 0x20, 0x33, 0x57, 0x69, 0x6c, 0x65, 0x79, 0x66, 0x6f, 0x78, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x2b, 0x57, 0x69, 0x6c, 0x65, 0x79, 0x66, 0x6f, 0x78, 0x20, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x58, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x58, 0x53, 0x77, 0x69,
		0x66, 0x74, 0x20, 0x32, 0x20, 0x24, 0x31, 0x53, 0x77, 0x69, 0x66, 0x74, 0x20, 0x32, 0x63, 0x72,
		0x61, 0x63, 0x6b, 0x6c, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x56, 0x57, 0x69, 0x6e, 0x6b, 0x57, 0x69, 0x6e, 0x6d,
		0x61, 0x78, 0x57, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x6f, 0x54, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45,
		0x57, 0x69, 0x6e, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x51, 0x39, 0x33, 0x53, 0x57, 0x69, 0x73, 0x65,
		0x61, 0x73, 0x79, 0x57, 0x49, 0x53, 0x45, 0x4e, 0x45, 0x54, 0x35, 0x57, 0x6f, 0x6c, 0x64, 0x65,
		0x72, 0x57, 0x69, 0x61, 0x6d, 0x20, 0x23, 0x32, 0x34, 0x57, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x5f,
		0x57, 0x49, 0x41, 0x4d, 0x5f, 0x36, 0x35, 0x57, 0x69, 0x61, 0x6d, 0x20, 0x23, 0x36, 0x35, 0x6d,
		0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x6d, 0x69, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x57, 0x6f, 0x6c, 0x66, 0x67, 0x61, 0x6e, 0x67, 0x41, 0x54, 0x2d, 0x41, 0x53, 0x24, 0x31,
		0x57, 0x6f, 0x6c, 0x6b, 0x69, 0x57, 0x35, 0x35, 0x53, 0x45, 0x57, 0x35, 0x2e, 0x35, 0x20, 0x53,
		0x45, 0x57, 0x53, 0x30, 0x36, 0x37, 0x57, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x6f, 0x6e, 0x75,
		0x57, 0x6f, 0x6f, 0x53, 0x50, 0x35, 0x30, 0x32, 0x36, 0x69, 0x2d, 0x53, 0x63, 0x6f, 0x72, 0x70,
		0x69, 0x6f, 0x53, 0x63, 0x6f, 0x72, 0x70, 0x69, 0x6f, 0x57, 0x6f, 0x72, 0x74, 0x6d, 0x61, 0x6e,
		0x6e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x20, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x57, 0x6f, 0x78,
		0x74, 0x65, 0x72, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x24, 0x31, 0x69, 0x2d, 0x31, 0x30,
		0x31, 0x5a, 0x69, 0x65, 0x6c, 0x6f, 0x20, 0x24, 0x31, 0x58, 0x2d, 0x42, 0x4f, 0x58, 0x2d, 0x54,
		0x49, 0x47, 0x49, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x5f, 0x4a, 0x4f, 0x59, 0x31, 0x30, 0x5f,
		0x50, 0x52, 0x4f, 0x4a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x4f, 0x59,
		0x31, 0x30, 0x20, 0x4d, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x20, 0x4d, 0x61,
		0x74, 0x65, 0x48, 0x6f, 0x70, 0x65, 0x20, 0x37, 0x20, 0x24, 0x31, 0x58, 0x2d, 0x54, 0x49, 0x47,
		0x49, 0x5f, 0x4a, 0x4f, 0x59, 0x37, 0x5f, 0x4d, 0x41, 0x58, 0x4a, 0x6f, 0x79, 0x20, 0x37, 0x20,
		0x4d, 0x61, 0x78, 0x56, 0x32, 0x38, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20,
		0x50, 0x31, 0x31, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x50, 0x31, 0x35, 0x5f, 0x4c, 0x69, 0x74,
		0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x31, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53,
		0x48, 0x41, 0x52, 0x50, 0x5f, 0x32, 0x53, 0x68, 0x61, 0x72, 0x70, 0x20, 0x32, 0x58, 0x2d, 0x56,
		0x69, 0x65, 0x77, 0x5a, 0x45, 0x4e, 0x20, 0x55, 0x35, 0x2b, 0x41, 0x4d, 0x42, 0x45, 0x52, 0x5f,
		0x4b, 0x49, 0x44, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x50, 0x72,
		0x6f, 0x74, 0x6f, 0x6e, 0x5f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x48, 0x44, 0x50, 0x72, 0x6f,
		0x74, 0x6f, 0x6e, 0x20, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x48, 0x44, 0x50, 0x52, 0x4f, 0x54,
		0x4f, 0x4e, 0x5f, 0x4a, 0x41, 0x44, 0x45, 0x5f, 0x32, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x72, 0x6f,
		0x74, 0x6f, 0x6e, 0x20, 0x4a, 0x61, 0x64, 0x65, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x2d,
		0x56, 0x69, 0x65, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x58, 0x47, 0x49, 0x4d, 0x49, 0x58,
		0x67, 0x6f, 0x64, 0x79, 0x58, 0x39, 0x36, 0x58, 0x69, 0x61, 0x6f, 0x6c, 0x61, 0x6a, 0x69, 0x61,
		0x6f, 0x52, 0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x33, 0x52, 0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x45, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x64, 0x20, 0x50, 0x65, 0x70,
		0x70, 0x65, 0x72, 0x20, 0x38, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x20, 0x50, 0x65,
		0x70, 0x70, 0x65, 0x72, 0x20, 0x39, 0x58, 0x58, 0x69, 0x61, 0x6f, 0x6d, 0x69, 0x42, 0x6c, 0x61,
		0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x41, 0x57, 0x4d, 0x2d, 0x41, 0x30, 0x42, 0x6c,
		0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x48, 0x65, 0x6c, 0x6f, 0x42, 0x6c,
		0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63,
		0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53,
		0x68, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20,
		0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x20, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20,
		0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x42, 0x6c,
		0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x42,
		0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x48, 0x6f, 0x6e, 0x67,
		0x6d, 0x69, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x31, 0x53, 0x48, 0x6f,
		0x6e, 0x67, 0x6d, 0x69, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x32, 0x20, 0x33, 0x47, 0x48,
		0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x32, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x32, 0x20,
		0x34, 0x47, 0x4d, 0x69, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x69, 0x20, 0x39, 0x20, 0x53, 0x45,
		0x4d, 0x49, 0x20, 0x43, 0x43, 0x20, 0x39, 0x65, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x65,
		0x4d, 0x49, 0x20, 0x43, 0x43, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69,
		0x75, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x45, 0x64,
		0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x49, 0x20, 0x43, 0x43, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20,
		0x39, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x69, 0x20, 0x31, 0x31, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x58, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x58,
		0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x54, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x4d,
		0x69, 0x20, 0x31, 0x30, 0x54, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x53, 0x4d, 0x69, 0x20, 0x31,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x69, 0x4d,
		0x69, 0x20, 0x31, 0x31, 0x69, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x69, 0x20, 0x31, 0x31, 0x54, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x20,
		0x4e, 0x45, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x31,
		0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x32, 0x31, 0x32, 0x58, 0x4d, 0x69, 0x20, 0x38, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x38, 0x20, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65,
		0x72, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x38, 0x20, 0x24, 0x31,
		0x4d, 0x69, 0x20, 0x39, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x39, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x39, 0x20, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61,
		0x72, 0x65, 0x6e, 0x74, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x24,
		0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x35, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x58, 0x69, 0x61, 0x6f, 0x6d, 0x69, 0x5f, 0x4d, 0x44, 0x54, 0x32, 0x4d, 0x69, 0x20, 0x35, 0x58,
		0x4d, 0x69, 0x20, 0x33, 0x4d, 0x69, 0x20, 0x24, 0x31, 0x43, 0x4d, 0x69, 0x20, 0x34, 0x57, 0x4d,
		0x69, 0x20, 0x34, 0x69, 0x4d, 0x69, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x69, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x69, 0x20, 0x41, 0x32,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x34, 0x4d, 0x69, 0x20,
		0x4d, 0x69, 0x78, 0x20, 0x33, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x24,
		0x31, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x32, 0x53, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78,
		0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x50, 0x6f, 0x63, 0x6f, 0x70, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x46, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x35, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x32, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x32, 0x41, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x38, 0x41, 0x20, 0x24, 0x31, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x31, 0x30, 0x58, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x39, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39,
		0x41, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x69, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39,
		0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x41, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x39, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x43, 0x20, 0x4e, 0x46, 0x43, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x32, 0x29, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30,
		0x58, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x32, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69,
		0x6f, 0x6e, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x5a, 0x6f, 0x6f, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4b, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b,
		0x33, 0x30, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x20, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4b, 0x33, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x59, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x36, 0x20, 0x50,
		0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x34, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x51,
		0x69, 0x6e, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x69, 0x6e, 0x20, 0x32, 0x43, 0x43, 0x31,
		0x31, 0x43, 0x69, 0x76, 0x69, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x35, 0x4d, 0x69, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x34,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x34, 0x4d, 0x69, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x33, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x32, 0x4d, 0x69, 0x20,
		0x50, 0x61, 0x64, 0x4d, 0x69, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x69, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x31,
		0x53, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x34, 0x53, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x51, 0x31, 0x4d,
		0x69, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x53, 0x74,
		0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x50, 0x31, 0x4d, 0x69, 0x54,
		0x56, 0x20, 0x34, 0x41, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x34, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x69, 0x54, 0x56, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x46, 0x6f, 0x6c,
		0x64, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x67, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x54, 0x44, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x32, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x41,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x35, 0x41, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x39, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x30, 0x58, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x53,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x54, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x20, 0x35, 0x47, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x20, 0x50,
		0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x30, 0x4d, 0x32, 0x31, 0x30, 0x33, 0x4b, 0x31, 0x39, 0x59, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x4d, 0x32, 0x31, 0x30, 0x33, 0x4b, 0x31, 0x39,
		0x49, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x54, 0x20,
		0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20,
		0x4a, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x34, 0x47, 0x32, 0x32, 0x30, 0x31, 0x31, 0x31,
		0x37, 0x53, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31,
		0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x54, 0x20,
		0x35, 0x47, 0x32, 0x32, 0x30, 0x31, 0x31, 0x31, 0x37, 0x53, 0x59, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x24, 0x31, 0x4d, 0x49, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x5f, 0x50, 0x72,
		0x6f, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x30, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x51, 0x69, 0x6e,
		0x20, 0x31, 0x73, 0x2b, 0x4d, 0x69, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d,
		0x69, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x24, 0x31, 0x48, 0x4d, 0x20,
		0x24, 0x31, 0x58, 0x69, 0x6f, 0x6e, 0x43, 0x45, 0x24, 0x31, 0x58, 0x6f, 0x6c, 0x6f, 0x42, 0x4c,
		0x41, 0x43, 0x4b, 0x2d, 0x31, 0x58, 0x4d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x31, 0x58, 0x45,
		0x72, 0x61, 0x20, 0x24, 0x31, 0x58, 0x45, 0x72, 0x61, 0x20, 0x34, 0x58, 0x20, 0x32, 0x47, 0x42,
		0x45, 0x72, 0x61, 0x20, 0x32, 0x56, 0x58, 0x6f, 0x72, 0x6f, 0x54, 0x65, 0x6c, 0x65, 0x50, 0x61,
		0x64, 0x20, 0x24, 0x31, 0x20, 0x41, 0x33, 0x20, 0x34, 0x47, 0x54, 0x65, 0x6c, 0x65, 0x50, 0x61,
		0x64, 0x20, 0x24, 0x31, 0x48, 0x4d, 0x54, 0x20, 0x24, 0x31, 0x48, 0x53, 0x54, 0x20, 0x32, 0x36,
		0x30, 0x58, 0x73, 0x68, 0x69, 0x74, 0x6f, 0x75, 0x58, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x58, 0x39,
		0x58, 0x42, 0x6f, 0x74, 0x20, 0x24, 0x31, 0x58, 0x74, 0x72, 0x61, 0x74, 0x65, 0x63, 0x68, 0x59,
		0x41, 0x53, 0x49, 0x4e, 0x59, 0x4f, 0x54, 0x4f, 0x50, 0x54, 0x59, 0x55, 0x20, 0x46, 0x6c, 0x79,
		0x59, 0x55, 0x48, 0x4f, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x56, 0x61, 0x73, 0x74, 0x5f, 0x50, 0x6c,
		0x75, 0x73, 0x56, 0x61, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x55, 0x48, 0x4f, 0x5f,
		0x59, 0x31, 0x5f, 0x41, 0x43, 0x45, 0x59, 0x31, 0x20, 0x41, 0x63, 0x65, 0x59, 0x55, 0x48, 0x4f,
		0x5f, 0x59, 0x31, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x59, 0x31, 0x20, 0x53, 0x74, 0x61, 0x72, 0x59,
		0x55, 0x48, 0x4f, 0x5f, 0x4f, 0x31, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x4f, 0x31, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x59, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x59, 0x4e, 0x44, 0x58, 0x2d, 0x30, 0x30, 0x30,
		0x53, 0x42, 0x59, 0x61, 0x72, 0x76, 0x69, 0x6b, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42,
		0x30, 0x37, 0x2d, 0x39, 0x32, 0x30, 0x4e, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x37, 0x4c, 0x75, 0x6e,
		0x61, 0x20, 0x37, 0x63, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42, 0x32, 0x37, 0x34, 0x4c,
		0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42, 0x34, 0x37, 0x34, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x31,
		0x30, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42, 0x31, 0x30, 0x2d, 0x31, 0x35, 0x30, 0x4c,
		0x75, 0x6e, 0x61, 0x20, 0x31, 0x30, 0x63, 0x54, 0x41, 0x42, 0x30, 0x39, 0x2d, 0x34, 0x31, 0x30,
		0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x39, 0x2e, 0x37, 0x54, 0x41, 0x42, 0x31, 0x30, 0x2d, 0x34,
		0x31, 0x30, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x54, 0x41, 0x42, 0x30,
		0x37, 0x2d, 0x34, 0x38, 0x35, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x58,
		0x65, 0x6e, 0x74, 0x61, 0x20, 0x37, 0x63, 0x54, 0x41, 0x42, 0x30, 0x37, 0x2d, 0x32, 0x30, 0x30,
		0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x37, 0x69, 0x63, 0x54, 0x41, 0x42, 0x30, 0x38, 0x2d, 0x32,
		0x30, 0x30, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x38, 0x69, 0x63, 0x54, 0x41, 0x42, 0x30, 0x38,
		0x2d, 0x32, 0x30, 0x31, 0x2d, 0x33, 0x47, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x38, 0x63, 0x54,
		0x41, 0x42, 0x39, 0x2d, 0x32, 0x30, 0x30, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x39, 0x2e, 0x37,
		0x69, 0x63, 0x54, 0x41, 0x42, 0x30, 0x39, 0x2d, 0x32, 0x31, 0x31, 0x58, 0x65, 0x6e, 0x74, 0x61,
		0x20, 0x39, 0x2e, 0x37, 0x69, 0x63, 0x2b, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x31, 0x30, 0x69,
		0x63, 0x54, 0x41, 0x42, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20,
		0x31, 0x33, 0x63, 0x59, 0x65, 0x73, 0x4d, 0x36, 0x33, 0x31, 0x59, 0x41, 0x6c, 0x74, 0x69, 0x74,
		0x75, 0x64, 0x65, 0x4d, 0x36, 0x35, 0x31, 0x47, 0x5f, 0x4d, 0x59, 0x41, 0x6c, 0x74, 0x69, 0x74,
		0x75, 0x64, 0x65, 0x20, 0x32, 0x4d, 0x36, 0x38, 0x35, 0x59, 0x34, 0x41, 0x6c, 0x74, 0x69, 0x74,
		0x75, 0x64, 0x65, 0x20, 0x33, 0x59, 0x65, 0x7a, 0x7a, 0x34, 0x45, 0x34, 0x41, 0x6e, 0x64, 0x79,
		0x20, 0x34, 0x45, 0x34, 0x59, 0x65, 0x7a, 0x7a, 0x2d, 0x41, 0x43, 0x34, 0x45, 0x49, 0x41, 0x6e,
		0x64, 0x79, 0x20, 0x34, 0x45, 0x49, 0x59, 0x45, 0x5a, 0x5a, 0x2d, 0x41, 0x34, 0x4d, 0x41, 0x6e,
		0x64, 0x79, 0x20, 0x41, 0x34, 0x4d, 0x41, 0x35, 0x45, 0x49, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x41,
		0x35, 0x45, 0x49, 0x41, 0x52, 0x54, 0x32, 0x50, 0x52, 0x4f, 0x41, 0x72, 0x74, 0x20, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x4c, 0x49, 0x56, 0x31, 0x4c, 0x49, 0x56, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x41,
		0x6e, 0x64, 0x79, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x24, 0x31,
		0x2e, 0x24, 0x32, 0x20, 0x24, 0x33, 0x59, 0x6f, 0x6b, 0x61, 0x20, 0x54, 0x56, 0x4b, 0x42, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x59, 0x6f, 0x74, 0x61, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x59, 0x74, 0x6f, 0x6e, 0x65, 0x59, 0x75, 0x59, 0x75, 0x70, 0x68, 0x6f,
		0x72, 0x69, 0x61, 0x59, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x32, 0x59, 0x75, 0x74, 0x6f,
		0x70, 0x69, 0x61, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20,
		0x32, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x75, 0x6e, 0x69,
		0x71, 0x75, 0x65, 0x59, 0x75, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x4e, 0x31, 0x30, 0x31, 0x59, 0x75,
		0x73, 0x75, 0x6e, 0x4c, 0x41, 0x32, 0x2d, 0x54, 0x59, 0x78, 0x74, 0x65, 0x6c, 0x5a, 0x48, 0x26,
		0x4b, 0x4f, 0x44, 0x59, 0x53, 0x53, 0x45, 0x59, 0x20, 0x4f, 0x32, 0x4f, 0x64, 0x79, 0x73, 0x73,
		0x65, 0x79, 0x20, 0x4f, 0x32, 0x4f, 0x44, 0x59, 0x53, 0x53, 0x45, 0x59, 0x20, 0x52, 0x41, 0x4e,
		0x47, 0x45, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x5a,
		0x49, 0x46, 0x52, 0x4f, 0x5a, 0x54, 0x45, 0x50, 0x36, 0x35, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x20, 0x31, 0x30, 0x56, 0x6f, 0x79, 0x61, 0x67,
		0x65, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f,
		0x20, 0x33, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4c, 0x69, 0x62, 0x65, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x20, 0x49, 0x49, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x53, 0x31,
		0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x46, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x41, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x30, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x41, 0x37, 0x30, 0x33, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x31, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x20, 0x56, 0x69, 0x74, 0x61, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x31, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x32,
		0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x37, 0x41, 0x78, 0x6f,
		0x6e, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x73, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x20, 0x35, 0x47, 0x41, 0x78,
		0x6f, 0x6e, 0x20, 0x31, 0x31, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x20, 0x53, 0x45, 0x20,
		0x35, 0x47, 0x41, 0x32, 0x30, 0x32, 0x32, 0x48, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x32, 0x30, 0x32, 0x32, 0x50, 0x47, 0x41, 0x78, 0x6f,
		0x6e, 0x20, 0x33, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x41, 0x32, 0x30, 0x32, 0x32, 0x50,
		0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x32,
		0x30, 0x32, 0x32, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x32,
		0x33, 0x32, 0x32, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x35, 0x47, 0x41, 0x32,
		0x33, 0x32, 0x32, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x45, 0x67, 0x41, 0x6c, 0x6c, 0x73, 0x74, 0x61, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x35, 0x43, 0x74, 0x79, 0x6f, 0x6e, 0x20,
		0x41, 0x39, 0x56, 0x35, 0x47, 0x56, 0x35, 0x53, 0x56, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x20, 0x4d,
		0x61, 0x78, 0x41, 0x76, 0x69, 0x64, 0x41, 0x76, 0x69, 0x64, 0x20, 0x35, 0x37, 0x39, 0x50, 0x72,
		0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20, 0x32, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x20, 0x58, 0x57,
		0x61, 0x72, 0x70, 0x20, 0x34, 0x47, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x52, 0x32,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x54, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x51, 0x2b, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x51, 0x20, 0x4c, 0x75, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x47, 0x46, 0x33, 0x57,
		0x61, 0x72, 0x70, 0x20, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x61, 0x72, 0x70, 0x20, 0x37, 0x42, 0x6f,
		0x6f, 0x73, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x4d, 0x61, 0x78,
		0x2b, 0x4d, 0x61, 0x78, 0x20, 0x58, 0x4c, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x56, 0x35, 0x20, 0x52,
		0x65, 0x64, 0x20, 0x42, 0x75, 0x6c, 0x6c, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x65, 0x6d,
		0x6f, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x37, 0x37, 0x39, 0x4d, 0x4a, 0x6f, 0x65, 0x79, 0x20, 0x4a,
		0x75, 0x6d, 0x70, 0x20, 0x32, 0x56, 0x38, 0x30, 0x37, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x43,
		0x56, 0x38, 0x30, 0x39, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x43, 0x32, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x47,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x54, 0x45, 0x5f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x5f, 0x49,
		0x49, 0x49, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x49, 0x49, 0x49, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x38, 0x38, 0x32, 0x4c, 0x6f, 0x72, 0x64, 0x56, 0x39,
		0x36, 0x37, 0x53, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x32, 0x47, 0x72, 0x61, 0x6e, 0x64,
		0x20, 0x58, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x56, 0x38, 0x30, 0x30, 0x30, 0x47,
		0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x34, 0x5a, 0x39, 0x38, 0x37, 0x47, 0x72, 0x61, 0x6e, 0x64,
		0x20, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x2b, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x45, 0x72, 0x61,
		0x55, 0x5a, 0x54, 0x45, 0x20, 0x47, 0x52, 0x41, 0x4e, 0x44, 0x20, 0x56, 0x37, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x56, 0x37, 0x56, 0x37, 0x38, 0x38, 0x44, 0x4b, 0x69, 0x73, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x5a, 0x33, 0x33, 0x31, 0x4e, 0x38, 0x31, 0x38, 0x53, 0x4f, 0x70, 0x74, 0x75, 0x73,
		0x20, 0x58, 0x20, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x20, 0x32, 0x4f, 0x70, 0x74, 0x75, 0x73,
		0x20, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x32, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20,
		0x58, 0x20, 0x57, 0x61, 0x76, 0x65, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x53, 0x74,
		0x61, 0x72, 0x74, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x32, 0x30, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x4c, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x4c, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x33, 0x20, 0x41, 0x70, 0x65, 0x78, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x4c, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x34, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x4c, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x36, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x4c, 0x37, 0x41, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x24, 0x31, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x28, 0x24, 0x32, 0x29, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x41, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x31, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x41, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x53, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x37, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x44, 0x20,
		0x4c, 0x75, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x32, 0x31, 0x30, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x56, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x36, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x37, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x24,
		0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56,
		0x31, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x58, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x56, 0x38, 0x51, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x53, 0x45, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x4c, 0x41, 0x44,
		0x45, 0x20, 0x56, 0x30, 0x39, 0x32, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x39, 0x20,
		0x56, 0x69, 0x74, 0x61, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x33, 0x30, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x56, 0x33, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30,
		0x33, 0x30, 0x4e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x33, 0x30, 0x5a, 0x54, 0x45, 0x20,
		0x39, 0x30, 0x33, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x33, 0x30, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x24, 0x31, 0x20, 0x56, 0x69, 0x74, 0x61, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x56, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x24, 0x31,
		0x4d, 0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5a, 0x38, 0x32, 0x30, 0x4f, 0x62, 0x73, 0x69,
		0x64, 0x69, 0x61, 0x6e, 0x5a, 0x39, 0x38, 0x36, 0x55, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x33, 0x5a, 0x36, 0x34, 0x31, 0x30, 0x53, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x4d, 0x61, 0x78, 0x20, 0x32, 0x73, 0x5a, 0x36, 0x31, 0x30, 0x44, 0x4c, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x56, 0x69, 0x65, 0x77, 0x5a, 0x39, 0x37, 0x31, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x5a, 0x39, 0x37, 0x38, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x38, 0x33, 0x39, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5a, 0x33, 0x31, 0x35, 0x33, 0x56,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x32, 0x5a,
		0x39, 0x33, 0x30, 0x4c, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x39, 0x36,
		0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x5a, 0x36, 0x34, 0x30, 0x30, 0x43, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x58, 0x32, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x39, 0x38, 0x31, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x5a, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x39, 0x38,
		0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x5a, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x39, 0x38, 0x33,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x69, 0x74, 0x72, 0x69,
		0x6e, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x79, 0x6d, 0x62, 0x61, 0x6c, 0x2d, 0x43, 0x20, 0x4c,
		0x54, 0x45, 0x5a, 0x32, 0x33, 0x33, 0x56, 0x43, 0x79, 0x6d, 0x62, 0x61, 0x6c, 0x20, 0x4c, 0x54,
		0x45, 0x5a, 0x32, 0x33, 0x32, 0x54, 0x4c, 0x43, 0x79, 0x6d, 0x62, 0x61, 0x6c, 0x2d, 0x47, 0x20,
		0x4c, 0x54, 0x45, 0x5a, 0x33, 0x35, 0x33, 0x56, 0x4c, 0x43, 0x79, 0x6d, 0x62, 0x61, 0x6c, 0x2d,
		0x54, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x37, 0x31, 0x38, 0x54, 0x4c, 0x4a, 0x61, 0x73, 0x70, 0x65,
		0x72, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x49, 0x53, 0x20, 0x49, 0x49, 0x20, 0x4d, 0x61, 0x78, 0x4b,
		0x69, 0x73, 0x20, 0x49, 0x49, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x69, 0x73, 0x20, 0x33, 0x4d, 0x61,
		0x6a, 0x65, 0x73, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x38, 0x39,
		0x39, 0x56, 0x4c, 0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x38, 0x32, 0x38, 0x54, 0x4c, 0x4d, 0x69, 0x64,
		0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x61, 0x6e,
		0x66, 0x61, 0x72, 0x65, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x5a, 0x38, 0x31, 0x35, 0x46, 0x61, 0x6e,
		0x66, 0x61, 0x72, 0x65, 0x20, 0x32, 0x5a, 0x38, 0x33, 0x31, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20,
		0x32, 0x5a, 0x38, 0x33, 0x32, 0x53, 0x6f, 0x6e, 0x61, 0x74, 0x61, 0x20, 0x33, 0x5a, 0x38, 0x33,
		0x35, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x33, 0x50, 0x72, 0x65, 0x6c, 0x75, 0x64, 0x65, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x5a, 0x38, 0x35, 0x31, 0x4d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x75, 0x72,
		0x65, 0x20, 0x33, 0x5a, 0x38, 0x35, 0x32, 0x46, 0x61, 0x6e, 0x66, 0x61, 0x72, 0x65, 0x20, 0x33,
		0x5a, 0x38, 0x32, 0x38, 0x41, 0x76, 0x69, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x38, 0x35,
		0x35, 0x41, 0x76, 0x69, 0x64, 0x20, 0x34, 0x5a, 0x38, 0x33, 0x33, 0x41, 0x76, 0x69, 0x64, 0x20,
		0x54, 0x52, 0x49, 0x4f, 0x5a, 0x46, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x5a,
		0x35, 0x35, 0x38, 0x56, 0x4c, 0x5a, 0x46, 0x69, 0x76, 0x65, 0x20, 0x43, 0x20, 0x4c, 0x54, 0x45,
		0x5a, 0x35, 0x35, 0x37, 0x42, 0x4c, 0x5a, 0x46, 0x69, 0x76, 0x65, 0x20, 0x47, 0x20, 0x4c, 0x54,
		0x45, 0x5a, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4c, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x39, 0x31, 0x36,
		0x42, 0x4c, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4c, 0x54, 0x45,
		0x5a, 0x39, 0x31, 0x37, 0x56, 0x4c, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70,
		0x20, 0x4c, 0x54, 0x45, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x33,
		0x5a, 0x39, 0x36, 0x33, 0x56, 0x4c, 0x4d, 0x61, 0x78, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x4c, 0x54,
		0x45, 0x5a, 0x39, 0x37, 0x30, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x5a, 0x39, 0x37, 0x30, 0x5a, 0x39,
		0x38, 0x36, 0x44, 0x4c, 0x4d, 0x41, 0x58, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4c, 0x54, 0x45,
		0x41, 0x76, 0x61, 0x69, 0x6c, 0x20, 0x32, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x4d, 0x41, 0x78, 0x6f,
		0x6e, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x32, 0x30, 0x31, 0x35, 0x41, 0x78, 0x6f, 0x6e, 0x20,
		0x54, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x41, 0x32, 0x30, 0x31, 0x38, 0x41, 0x78, 0x6f, 0x6e, 0x20,
		0x37, 0x73, 0x42, 0x32, 0x30, 0x31, 0x37, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x37, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x36,
		0x36, 0x37, 0x54, 0x5a, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x47, 0x65, 0x65, 0x6b, 0x5a, 0x37, 0x31,
		0x36, 0x42, 0x4c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x58, 0x35, 0x30, 0x31, 0x47, 0x72, 0x6f, 0x6f,
		0x76, 0x65, 0x46, 0x2d, 0x34, 0x35, 0x30, 0x41, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x4c, 0x65,
		0x76, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x6f, 0x56, 0x38, 0x36, 0x35, 0x4d, 0x4f, 0x70, 0x74, 0x75,
		0x73, 0x20, 0x58, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x65, 0x6f, 0x20, 0x51, 0x32, 0x56, 0x65,
		0x72, 0x67, 0x61, 0x74, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x35, 0x56, 0x65, 0x72, 0x67, 0x61, 0x74,
		0x61, 0x72, 0x69, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x35, 0x20, 0x50, 0x72,
		0x6f, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x31, 0x32, 0x4e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x56, 0x32, 0x30, 0x32, 0x31, 0x20, 0x35, 0x47, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x30, 0x30,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32, 0x30, 0x5a, 0x54, 0x45, 0x20, 0x38,
		0x30, 0x30, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32, 0x30, 0x20, 0x56,
		0x69, 0x74, 0x61, 0x4b, 0x49, 0x53, 0x20, 0x43, 0x33, 0x34, 0x31, 0x4b, 0x69, 0x73, 0x20, 0x43,
		0x33, 0x34, 0x31, 0x4d, 0x45, 0x4f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x41, 0x38, 0x30,
		0x41, 0x78, 0x6f, 0x6e, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30,
		0x31, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32, 0x30, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x5a, 0x58, 0x56, 0x31, 0x30, 0x20, 0x42, 0x38, 0x36, 0x37, 0x52, 0x45, 0x47,
		0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x58, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x34, 0x41, 0x78, 0x6f, 0x6e, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x31,
		0x30, 0x5a, 0x59, 0x51, 0x51, 0x36, 0x33, 0x38, 0x51, 0x32, 0x36, 0x32, 0x34, 0x43, 0x68, 0x65,
		0x65, 0x72, 0x20, 0x33, 0x47, 0x51, 0x32, 0x36, 0x30, 0x32, 0x54, 0x56, 0x20, 0x4e, 0x65, 0x78,
		0x74, 0x51, 0x32, 0x37, 0x32, 0x38, 0x5a, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x51, 0x32, 0x37,
		0x32, 0x39, 0x51, 0x32, 0x36, 0x38, 0x38, 0x51, 0x32, 0x36, 0x32, 0x33, 0x57, 0x69, 0x6e, 0x20,
		0x33, 0x47, 0x51, 0x32, 0x36, 0x32, 0x36, 0x43, 0x61, 0x72, 0x65, 0x20, 0x33, 0x47, 0x51, 0x33,
		0x36, 0x32, 0x33, 0x42, 0x72, 0x61, 0x77, 0x20, 0x33, 0x47, 0x51, 0x33, 0x30, 0x32, 0x32, 0x51,
		0x33, 0x32, 0x38, 0x20, 0x6d, 0x39, 0x51, 0x33, 0x32, 0x38, 0x20, 0x4d, 0x39, 0x51, 0x33, 0x32,
		0x38, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x33, 0x47, 0x51, 0x36, 0x36, 0x38, 0x54, 0x56, 0x20,
		0x49, 0x34, 0x4a, 0x37, 0x37, 0x51, 0x2e, 0x44, 0x65, 0x65, 0x51, 0x2e, 0x55, 0x70, 0x20, 0x43,
		0x35, 0x51, 0x2e, 0x55, 0x70, 0x51, 0x2e, 0x42, 0x6f, 0x73, 0x73, 0x20, 0x50, 0x39, 0x39, 0x51,
		0x2e, 0x44, 0x65, 0x65, 0x20, 0x52, 0x30, 0x39, 0x51, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x20, 0x4d,
		0x39, 0x51, 0x2e, 0x48, 0x69, 0x20, 0x53, 0x31, 0x51, 0x2e, 0x48, 0x69, 0x51, 0x2e, 0x48, 0x6f,
		0x74, 0x20, 0x50, 0x37, 0x20, 0x33, 0x47, 0x51, 0x2e, 0x48, 0x6f, 0x74, 0x51, 0x2e, 0x4d, 0x65,
		0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x33, 0x47, 0x51, 0x2e, 0x4d, 0x65, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x37, 0x51, 0x2e, 0x4d, 0x65, 0x51, 0x2e, 0x4d, 0x61, 0x74, 0x65,
		0x20, 0x52, 0x39, 0x39, 0x51, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x42, 0x37, 0x51, 0x2e, 0x4e,
		0x65, 0x78, 0x74, 0x20, 0x4a, 0x32, 0x51, 0x2e, 0x54, 0x6f, 0x70, 0x20, 0x58, 0x38, 0x51, 0x2e,
		0x59, 0x6f, 0x75, 0x51, 0x54, 0x41, 0x42, 0x20, 0x54, 0x61, 0x62, 0x34, 0x51, 0x54, 0x61, 0x62,
		0x20, 0x54, 0x61, 0x62, 0x34, 0x5a, 0x59, 0x51, 0x2d, 0x51, 0x38, 0x38, 0x51, 0x38, 0x38, 0x5a,
		0x61, 0x69, 0x74, 0x68, 0x5a, 0x61, 0x74, 0x65, 0x63, 0x57, 0x69, 0x6e, 0x64, 0x5a, 0x50, 0x4c,
		0x41, 0x59, 0x31, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x5a, 0x70, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x5a,
		0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x5a, 0x70, 0x6f, 0x77,
		0x65, 0x72, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x5a, 0x65, 0x62, 0x72, 0x61, 0x5a, 0x65, 0x65, 0x6d, 0x69, 0x5a, 0x65, 0x6e, 0x41,
		0x64, 0x6d, 0x69, 0x72, 0x65, 0x47, 0x6c, 0x61, 0x6d, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20,
		0x47, 0x6c, 0x61, 0x6d, 0x5a, 0x65, 0x6e, 0x65, 0x6b, 0x5a, 0x35, 0x35, 0x31, 0x37, 0x4c, 0x65,
		0x6f, 0x70, 0x61, 0x72, 0x64, 0x6f, 0x5a, 0x36, 0x30, 0x30, 0x31, 0x4c, 0x69, 0x62, 0x65, 0x6c,
		0x75, 0x6c, 0x61, 0x5a, 0x35, 0x30, 0x30, 0x37, 0x4f, 0x73, 0x6f, 0x5a, 0x35, 0x35, 0x31, 0x39,
		0x50, 0x69, 0x6e, 0x67, 0xc3, 0xbb, 0x69, 0x6e, 0x6f, 0x5a, 0x35, 0x35, 0x31, 0x36, 0x5a, 0x65,
		0x6e, 0x74, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x2d, 0x37, 0x32, 0x33, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x5a, 0x66, 0x69, 0x6e, 0x65, 0x72, 0x59, 0x39, 0x30, 0x30, 0x5a, 0x69, 0x64, 0x6f,
		0x6f, 0x5a, 0x69, 0x6f, 0x78, 0x41, 0x73, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x20, 0x34, 0x47,
		0x41, 0x73, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x41, 0x73, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x44, 0x75, 0x6f, 0x70, 0x69, 0x78, 0x20, 0x24, 0x31, 0x5a, 0x6f, 0x6e,
		0x64, 0x61, 0x5a, 0x41, 0x34, 0x30, 0x39, 0x4d, 0x75, 0x7a, 0x69, 0x63, 0x5a, 0x6f, 0x70, 0x6f,
		0x43, 0x32, 0x20, 0x49, 0x49, 0x39, 0x58, 0x58, 0x20, 0x51, 0x75, 0x61, 0x64, 0x5a, 0x50, 0x39,
		0x38, 0x30, 0x2b, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x70, 0x65, 0x65, 0x64, 0x20, 0x37, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x38, 0x4c, 0x65, 0x61,
		0x64, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x48, 0x44,
		0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x43, 0x43, 0x6f, 0x6c,
		0x6f, 0x72, 0x20, 0x53, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x46, 0x32, 0x46, 0x35, 0x20, 0x43,
		0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x4d, 0x35, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x58, 0x43, 0x6f,
		0x6c, 0x6f, 0x72, 0x20, 0x43, 0x35, 0x69, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x68, 0x69, 0x6e,
		0x69, 0x6e, 0x67, 0x50, 0x69, 0x6c, 0x6f, 0x74, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x58, 0x32,
		0x46, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x47, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65,
		0x20, 0x24, 0x31, 0x5a, 0x75, 0x75, 0x6d, 0x41, 0x4b, 0x55, 0x53, 0x20, 0x50, 0x52, 0x4f, 0x41,
		0x6b, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x4b, 0x55, 0x53, 0x20, 0x5a, 0x31, 0x41, 0x6b,
		0x75, 0x73, 0x20, 0x5a, 0x31, 0x41, 0x6b, 0x75, 0x73, 0x20, 0x5a, 0x43, 0x4f, 0x56, 0x45, 0x54,
		0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x43, 0x6f, 0x76, 0x65, 0x74, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43, 0x4f, 0x56, 0x45, 0x54, 0x20, 0x50, 0x52, 0x4f,
		0x43, 0x6f, 0x76, 0x65, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x4f, 0x56, 0x45, 0x54, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x43, 0x6f, 0x76, 0x65, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x43, 0x6f, 0x76,
		0x65, 0x74, 0x24, 0x31, 0x4d, 0x41, 0x47, 0x4e, 0x4f, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61,
		0x67, 0x6e, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x41, 0x47, 0x4e, 0x4f, 0x2d, 0x53, 0x4d,
		0x61, 0x67, 0x6e, 0x6f, 0x20, 0x53, 0x4d, 0x61, 0x67, 0x6e, 0x6f, 0x24, 0x31, 0x4f, 0x4e, 0x49,
		0x58, 0x20, 0x53, 0x4f, 0x6e, 0x69, 0x78, 0x20, 0x53, 0x4f, 0x4e, 0x49, 0x58, 0x53, 0x54, 0x45,
		0x44, 0x49, 0x53, 0x74, 0x65, 0x64, 0x69, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x50,
		0x52, 0x4f, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x54, 0x45,
		0x4c, 0x4c, 0x41, 0x52, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x24, 0x31, 0x53,
		0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x53, 0x74, 0x65, 0x6c, 0x6c,
		0x61, 0x72, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x4d,
		0x61, 0x78, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x54, 0x45,
		0x4c, 0x4c, 0x41, 0x52, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x47, 0x72, 0x61, 0x76, 0x69,
		0x74, 0x79, 0x20, 0x24, 0x31, 0x41, 0x55, 0x52, 0x41, 0x20, 0x58, 0x41, 0x75, 0x72, 0x61, 0x20,
		0x58, 0x52, 0x4f, 0x4e, 0x49, 0x52, 0x6f, 0x6e, 0x69, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20,
		0x24, 0x31, 0x55, 0x6e, 0x69, 0x71, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x5a, 0x79, 0x6e, 0x63, 0x43,
		0x6c, 0x6f, 0x75, 0x64, 0x20, 0x24, 0x31, 0x5a, 0x79, 0x72, 0x65, 0x78, 0x5a, 0x54, 0x32, 0x31,
		0x36, 0x61, 0x6c, 0x74, 0x72, 0x6f, 0x6e, 0x41, 0x4c, 0x2d, 0x35, 0x35, 0x35, 0x4f, 0x42, 0x2d,
		0x24, 0x31, 0x47, 0x49, 0x2d, 0x36, 0x32, 0x36, 0x62, 0x32, 0x6d, 0x44, 0x65, 0x63, 0x61, 0x64,
		0x65, 0x20, 0x35, 0x33, 0x62, 0x6f, 0x67, 0x6f, 0x42, 0x4f, 0x2d, 0x4c, 0x46, 0x53, 0x50, 0x34,
		0x4c, 0x69, 0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x34, 0x44, 0x43, 0x42, 0x4f, 0x2d,
		0x4c, 0x46, 0x53, 0x50, 0x53, 0x4c, 0x34, 0x4c, 0x69, 0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65,
		0x20, 0x34, 0x53, 0x4c, 0x42, 0x4f, 0x2d, 0x4c, 0x46, 0x53, 0x50, 0x42, 0x53, 0x35, 0x4c, 0x69,
		0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x35, 0x42, 0x53, 0x42, 0x4f, 0x2d, 0x4c, 0x46,
		0x53, 0x50, 0x53, 0x4c, 0x36, 0x51, 0x43, 0x49, 0x4c, 0x69, 0x66, 0x65, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x20, 0x36, 0x51, 0x43, 0x62, 0x71, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x4c, 0x54,
		0x45, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x61,
		0x78, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x4f, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x43,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x53, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x46, 0x75, 0x6e,
		0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x20, 0x53, 0x45, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x4c,
		0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x42,
		0x51, 0x2d, 0x38, 0x30, 0x36, 0x37, 0x4c, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x42, 0x51, 0x2d, 0x38, 0x30, 0x35, 0x32, 0x47, 0x42, 0x51, 0x2d, 0x38, 0x30, 0x34,
		0x31, 0x4c, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x38, 0x34, 0x47, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
		0x42, 0x51, 0x2d, 0x37, 0x30, 0x36, 0x31, 0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x73, 0x42, 0x51,
		0x2d, 0x37, 0x30, 0x35, 0x31, 0x47, 0x45, 0x6c, 0x62, 0x61, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x33,
		0x36, 0x4c, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x42, 0x51,
		0x2d, 0x37, 0x30, 0x32, 0x31, 0x47, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x31, 0x30, 0x47, 0x42, 0x51,
		0x2d, 0x37, 0x30, 0x30, 0x36, 0x47, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x42, 0x51, 0x2d, 0x37, 0x30,
		0x30, 0x33, 0x4a, 0x61, 0x6d, 0x61, 0x69, 0x63, 0x61, 0x42, 0x51, 0x2d, 0x36, 0x36, 0x33, 0x31,
		0x47, 0x42, 0x51, 0x2d, 0x36, 0x30, 0x32, 0x32, 0x47, 0x41, 0x75, 0x72, 0x61, 0x55, 0x6e, 0x69,
		0x76, 0x65, 0x72, 0x73, 0x65, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x4a, 0x75, 0x6d, 0x62,
		0x6f, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x70, 0x72, 0x69, 0x6e,
		0x67, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x42, 0x51, 0x2d, 0x35, 0x35, 0x32, 0x32, 0x53, 0x69, 0x6c,
		0x6b, 0x46, 0x61, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x61, 0x73, 0x74, 0x20, 0x50,
		0x72, 0x6f, 0x54, 0x77, 0x69, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x77, 0x69, 0x6e, 0x57, 0x69,
		0x64, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
		0x42, 0x6c, 0x69, 0x73, 0x73, 0x41, 0x6d, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x6d, 0x53, 0x74,
		0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x34,
		0x47, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x49, 0x72, 0x6f, 0x6e, 0x20, 0x4d, 0x61,
		0x78, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x4d,
		0x61, 0x78, 0x4e, 0x69, 0x63, 0x65, 0x20, 0x32, 0x4e, 0x69, 0x63, 0x65, 0x4e, 0x69, 0x63, 0x65,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x4b, 0x61, 0x77, 0x61, 0x73,
		0x61, 0x6b, 0x69, 0x56, 0x61, 0x6e, 0x63, 0x6f, 0x75, 0x76, 0x65, 0x72, 0x56, 0x65, 0x6c, 0x76,
		0x65, 0x74, 0x20, 0x32, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x56, 0x69, 0x65, 0x77, 0x56,
		0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x56, 0x69, 0x65, 0x77, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65,
		0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x65,
		0x6e, 0x73, 0x65, 0x20, 0x32, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42,
		0x65, 0x6c, 0x69, 0x65, 0x66, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63,
		0x65, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x45, 0x61,
		0x73, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x32, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20,
		0x45, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x51, 0x2d, 0x35, 0x30,
		0x36, 0x30, 0x4c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x34, 0x47, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x53, 0x68, 0x61,
		0x72, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x52, 0x75, 0x73, 0x68, 0x48, 0x69, 0x67, 0x68,
		0x20, 0x57, 0x61, 0x79, 0x42, 0x6f, 0x6e, 0x64, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x69, 0x63,
		0x68, 0x52, 0x69, 0x63, 0x68, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x6f, 0x6e, 0x74, 0x65, 0x20, 0x43,
		0x61, 0x72, 0x6c, 0x6f, 0x53, 0x70, 0x6f, 0x74, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x45,
		0x61, 0x73, 0x79, 0x50, 0x72, 0x61, 0x67, 0x75, 0x65, 0x42, 0x51, 0x2d, 0x35, 0x35, 0x36, 0x30,
		0x4c, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x42, 0x51, 0x2d,
		0x35, 0x35, 0x36, 0x35, 0x4c, 0x53, 0x79, 0x64, 0x6e, 0x65, 0x79, 0x42, 0x72, 0x61, 0x76, 0x65,
		0x4c, 0x6f, 0x73, 0x20, 0x41, 0x6e, 0x67, 0x65, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x6e,
		0x73, 0x65, 0x50, 0x61, 0x72, 0x69, 0x73, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x6f, 0x20, 0x49,
		0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x69, 0x6c, 0x61, 0x6e, 0x54, 0x6f, 0x6b,
		0x79, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x72, 0x65, 0x61, 0x6c, 0xd0,
		0x9e, 0x73, 0x61, 0x6b, 0x61, 0x56, 0x65, 0x6e, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x78, 0x20, 0x56,
		0x69, 0x65, 0x77, 0x46, 0x6f, 0x78, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x72, 0x69, 0x76,
		0x65, 0x47, 0x6f, 0x6c, 0x66, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x6f, 0x6e, 0x64, 0x56, 0x69, 0x65,
		0x6e, 0x6e, 0x61, 0x53, 0x69, 0x6e, 0x67, 0x61, 0x70, 0x6f, 0x72, 0x65, 0x4d, 0x6f, 0x73, 0x63,
		0x6f, 0x77, 0x46, 0x6c, 0x6f, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x61, 0x6e, 0x74, 0x69, 0x61,
		0x67, 0x6f, 0x44, 0x75, 0x62, 0x61, 0x69, 0x4b, 0x69, 0x6e, 0x67, 0x73, 0x74, 0x6f, 0x6e, 0x42,
		0x51, 0x53, 0x2d, 0x34, 0x35, 0x30, 0x31, 0x20, 0x42, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x6c, 0x42,
		0x72, 0x69, 0x73, 0x74, 0x6f, 0x6c, 0x46, 0x6f, 0x78, 0x20, 0x45, 0x61, 0x73, 0x79, 0x46, 0x6f,
		0x78, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53,
		0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x55, 0x70, 0x21, 0x4f, 0x72, 0x6c,
		0x65, 0x61, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x69, 0x56, 0x61, 0x6c, 0x65,
		0x6e, 0x63, 0x69, 0x61, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x44, 0x75, 0x73, 0x73, 0x65, 0x6c, 0x64,
		0x6f, 0x72, 0x66, 0x56, 0x65, 0x72, 0x6f, 0x6e, 0x61, 0x43, 0x6f, 0x6f, 0x6c, 0x4f, 0x78, 0x66,
		0x6f, 0x72, 0x64, 0x41, 0x73, 0x70, 0x65, 0x6e, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x6f, 0x6d,
		0x62, 0x61, 0x79, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x72, 0x6d, 0x6f, 0x72,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x50,
		0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x73, 0x69, 0x6b, 0x61, 0x48, 0x61, 0x77,
		0x61, 0x69, 0x69, 0x47, 0x72, 0x61, 0x63, 0x65, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x73, 0x20,
		0x4d, 0x38, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x34, 0x2e, 0x35, 0x4a,
		0x61, 0x76, 0x61, 0x42, 0x51, 0x2d, 0x39, 0x30, 0x35, 0x35, 0x4c, 0x45, 0x78, 0x69, 0x6f, 0x6e,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x69, 0x6a, 0x69, 0x47, 0x72, 0x61,
		0x63, 0x65, 0x20, 0x33, 0x47, 0x4c, 0x75, 0x7a, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x6f,
		0x6e, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6c, 0x74, 0x61, 0xd0, 0xa1, 0x68, 0x61,
		0x72, 0x6d, 0xd0, 0xa1, 0x68, 0x61, 0x72, 0x6d, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x72, 0x6d,
		0x6f, 0x72, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x4e, 0x65,
		0x78, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x37, 0x30, 0x38, 0x33, 0x31, 0x30, 0x35, 0x36, 0x4c, 0x41, 0x72, 0x6d, 0x6f,
		0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x2b, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20,
		0x50, 0x72, 0x6f, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4f, 0x6e, 0x65, 0x45, 0x78, 0x69, 0x6f,
		0x6e, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69,
		0x73, 0x20, 0x24, 0x31, 0x65, 0x53, 0x54, 0x41, 0x52, 0x24, 0x31, 0x20, 0x24, 0x32, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x47, 0x47, 0x72, 0x61, 0x6e, 0x64,
		0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x24, 0x31, 0x65,
		0x53, 0x54, 0x41, 0x52, 0x20, 0x47, 0x52, 0x41, 0x4e, 0x44, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x65,
		0x53, 0x54, 0x41, 0x52, 0x20, 0x42, 0x45, 0x41, 0x55, 0x54, 0x59, 0x20, 0x48, 0x44, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x65, 0x61, 0x75, 0x74, 0x79, 0x20, 0x48,
		0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x65, 0x53, 0x54, 0x41, 0x52,
		0x20, 0x4d, 0x4f, 0x4f, 0x4e, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f,
		0x72, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x20, 0x33, 0x47, 0x65, 0x53, 0x54, 0x41, 0x52, 0x20, 0x42, 0x45, 0x41, 0x55,
		0x54, 0x59, 0x20, 0x32, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72,
		0x65, 0x42, 0x65, 0x61, 0x75, 0x74, 0x79, 0x20, 0x32, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61,
		0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x47, 0x65, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x65, 0x63, 0x6f, 0x6d, 0x69, 0x2d, 0x43, 0x68, 0x65, 0x72, 0x72, 0x79, 0x69,
		0x43, 0x68, 0x65, 0x72, 0x72, 0x79, 0x2d, 0x43, 0x32, 0x35, 0x36, 0x43, 0x32, 0x35, 0x36, 0x20,
		0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x33, 0x47, 0x69, 0x2d, 0x4a, 0x6f, 0x79, 0x45, 0x6c, 0x65, 0x6b,
		0x74, 0x72, 0x61, 0x20, 0x4d, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x61, 0x20, 0x4c, 0x45, 0x6c,
		0x65, 0x6b, 0x74, 0x72, 0x61, 0x20, 0x58, 0x4c, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x61, 0x20,
		0x58, 0x58, 0x4c, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x53, 0x79, 0x67, 0x6e, 0x75, 0x73,
		0x44, 0x65, 0x6f, 0x78, 0x69, 0x2d, 0x43, 0x61, 0x6c, 0x6c, 0x20, 0x24, 0x31, 0x69, 0x2d, 0x6d,
		0x61, 0x74, 0x65, 0x69, 0x2d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x69, 0x2d, 0x53, 0x74, 0x79,
		0x6c, 0x65, 0x20, 0x24, 0x31, 0x49, 0x51, 0x20, 0x24, 0x31, 0x69, 0x42, 0x61, 0x6c, 0x6c, 0x41,
		0x6e, 0x64, 0x69, 0x20, 0x57, 0x69, 0x6e, 0x6b, 0x20, 0x34, 0x47, 0x41, 0x6e, 0x64, 0x69, 0x20,
		0x35, 0x47, 0x20, 0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x34, 0x47, 0x69, 0x54, 0x41, 0x42, 0x20,
		0x42, 0x69, 0x7a, 0x6e, 0x69, 0x5a, 0x69, 0x54, 0x41, 0x42, 0x20, 0x42, 0x69, 0x7a, 0x6e, 0x69,
		0x5a, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x6f, 0x76, 0x69, 0x65,
		0x7a, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x42, 0x65, 0x72, 0x72, 0x79, 0x69, 0x42, 0x72, 0x69, 0x74,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x36, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x44, 0x61, 0x74, 0x61, 0x69,
		0x44, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70, 0x61, 0x63, 0x68, 0x65, 0x20, 0x47, 0x36, 0x69, 0x47,
		0x65, 0x74, 0x69, 0x48, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x5f, 0x48, 0x69, 0x31, 0x30,
		0x5f, 0x32, 0x30, 0x32, 0x31, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x48, 0x69, 0x31, 0x30, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x31, 0x30, 0x5f, 0x54, 0x61, 0x6e, 0x6b, 0x5f, 0x32, 0x30,
		0x31, 0x39, 0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x32, 0x30,
		0x32, 0x30, 0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x4f, 0x6e, 0x65, 0x5f, 0x20, 0x4c, 0x6f, 0x76, 0x65, 0x5f, 0x4f,
		0x6e, 0x65, 0x20, 0x4c, 0x6f, 0x76, 0x65, 0x54, 0x49, 0x54, 0x41, 0x4e, 0x5f, 0x50, 0x31, 0x31,
		0x30, 0x30, 0x30, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x31, 0x31,
		0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x49, 0x54, 0x41, 0x4e, 0x20, 0x50, 0x34, 0x30,
		0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e,
		0x20, 0x50, 0x34, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x38, 0x30, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f,
		0x20, 0x32, 0x30, 0x32, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x38, 0x30, 0x30, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4c, 0x69, 0x6b, 0x65, 0x5f,
		0x33, 0x5f, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4c,
		0x69, 0x6b, 0x65, 0x20, 0x48, 0x69, 0x35, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x69,
		0x6b, 0x65, 0x5f, 0x34, 0x55, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x34, 0x55, 0x69, 0x48, 0x75, 0x6e,
		0x74, 0x5f, 0x4c, 0x69, 0x6b, 0x65, 0x58, 0x33, 0x30, 0x30, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x53, 0x36, 0x30, 0x5f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x32, 0x30,
		0x31, 0x39, 0x53, 0x36, 0x30, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x53, 0x36, 0x30, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
		0x65, 0x72, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x32, 0x53, 0x36, 0x30, 0x20,
		0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x32, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x58, 0x4c, 0x69, 0x74, 0x65, 0x32, 0x30,
		0x32, 0x30, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x5f, 0x58, 0x5f, 0x41, 0x70, 0x65, 0x58, 0x5f, 0x32, 0x30,
		0x32, 0x30, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x41, 0x70, 0x65, 0x58, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x5f, 0x58, 0x5f, 0x41, 0x70, 0x65,
		0x58, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x41, 0x70, 0x65, 0x58, 0x41, 0x6c, 0x69,
		0x65, 0x6e, 0x5f, 0x58, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x53, 0x32, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x32, 0x30, 0x32, 0x31, 0x53, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x41, 0x70, 0x65, 0x58, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x32, 0x31, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x47, 0x20, 0x32, 0x30, 0x32, 0x31, 0x53, 0x32, 0x31,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x47, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x61, 0x6e, 0x64, 0x61, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x32, 0x30, 0x32, 0x32, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x61,
		0x6e, 0x64, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x69, 0x4b,
		0x6f, 0x4d, 0x6f, 0x69, 0x4b, 0x6f, 0x6e, 0x69, 0x4c, 0x41, 0x69, 0x4c, 0x69, 0x66, 0x65, 0x69,
		0x4d, 0x61, 0x6e, 0x69, 0x4d, 0x61, 0x72, 0x73, 0x49, 0x4d, 0x41, 0x52, 0x53, 0x20, 0x56, 0x45,
		0x47, 0x41, 0x20, 0x58, 0x37, 0x56, 0x65, 0x67, 0x61, 0x20, 0x58, 0x37, 0x56, 0x49, 0x56, 0x49,
		0x5f, 0x38, 0x56, 0x49, 0x56, 0x49, 0x20, 0x38, 0x4d, 0x49, 0x4c, 0x4b, 0x59, 0x5f, 0x57, 0x41,
		0x59, 0x5f, 0x4d, 0x32, 0x4d, 0x69, 0x6c, 0x6b, 0x79, 0x20, 0x57, 0x61, 0x79, 0x20, 0x4d, 0x32,
		0x69, 0x4e, 0x65, 0x77, 0x56, 0x33, 0x43, 0x56, 0x33, 0x2d, 0x45, 0x56, 0x33, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x56, 0x37, 0x41, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x36, 0x69,
		0x4f, 0x63, 0x65, 0x61, 0x6e, 0x58, 0x37, 0x53, 0x2d, 0x54, 0x58, 0x38, 0x20, 0x6d, 0x69, 0x6e,
		0x69, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x72, 0x6f,
		0x58, 0x38, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x58, 0x37,
		0x53, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x69, 0x4f, 0x75, 0x74, 0x64, 0x6f, 0x6f, 0x72, 0x69,
		0x50, 0x45, 0x47, 0x54, 0x4f, 0x50, 0x49, 0x50, 0x45, 0x47, 0x54, 0x4f, 0x50, 0x69, 0x50, 0x72,
		0x6f, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x35, 0x2e, 0x30, 0x53, 0x4b, 0x79, 0x6c, 0x69, 0x6e,
		0x20, 0x24, 0x31, 0x4b, 0x59, 0x4c, 0x49, 0x4e, 0x34, 0x30, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20,
		0x34, 0x30, 0x4f, 0x70, 0x61, 0x6c, 0x20, 0x34, 0x53, 0x4a, 0x61, 0x64, 0x65, 0x20, 0x24, 0x31,
		0x73, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x35, 0x53, 0x5f, 0x50, 0x72, 0x6f, 0x41, 0x6d, 0x62, 0x65,
		0x72, 0x20, 0x35, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x36, 0x41, 0x6d,
		0x62, 0x65, 0x72, 0x20, 0x36, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x37, 0x53, 0x41, 0x6d, 0x62, 0x65,
		0x72, 0x20, 0x37, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x38, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x41,
		0x6d, 0x62, 0x65, 0x72, 0x20, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x6e, 0x69, 0x78, 0x35, 0x30, 0x53, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x35,
		0x30, 0x53, 0x52, 0x75, 0x62, 0x79, 0x35, 0x53, 0x52, 0x75, 0x62, 0x79, 0x20, 0x35, 0x53, 0x5a,
		0x61, 0x66, 0x69, 0x72, 0x6f, 0x69, 0x51, 0x26, 0x54, 0x69, 0x52, 0x6f, 0x6c, 0x61, 0x44, 0x58,
		0x37, 0x35, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x52, 0x75, 0x6c, 0x75, 0x69, 0x53, 0x57, 0x41,
		0x47, 0x4b, 0x72, 0x6f, 0x6e, 0x6f, 0x73, 0x4c, 0x79, 0x6e, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x4e,
		0x65, 0x6d, 0x65, 0x73, 0x69, 0x73, 0x69, 0x53, 0x61, 0x66, 0x65, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x24, 0x31, 0x2e, 0x52, 0x47, 0x69, 0x54, 0x65, 0x6c, 0x57, 0x36, 0x35, 0x30, 0x32,
		0x53, 0x31, 0x36, 0x4c, 0x36, 0x35, 0x30, 0x33, 0x53, 0x31, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x57,
		0x35, 0x35, 0x30, 0x35, 0x41, 0x33, 0x36, 0x41, 0x35, 0x37, 0x31, 0x57, 0x41, 0x33, 0x37, 0x53,
		0x31, 0x35, 0x57, 0x35, 0x30, 0x30, 0x35, 0x50, 0x31, 0x35, 0x4c, 0x35, 0x35, 0x30, 0x32, 0x41,
		0x34, 0x34, 0x20, 0x41, 0x69, 0x72, 0x4c, 0x35, 0x35, 0x30, 0x35, 0x41, 0x34, 0x37, 0x57, 0x35,
		0x30, 0x30, 0x36, 0x58, 0x41, 0x31, 0x37, 0x4c, 0x36, 0x30, 0x30, 0x36, 0x41, 0x34, 0x38, 0x50,
		0x36, 0x35, 0x31, 0x57, 0x50, 0x33, 0x37, 0x50, 0x36, 0x38, 0x31, 0x4c, 0x50, 0x33, 0x37, 0x20,
		0x50, 0x72, 0x6f, 0x4c, 0x35, 0x30, 0x30, 0x37, 0x41, 0x32, 0x34, 0x4c, 0x36, 0x30, 0x30, 0x33,
		0x50, 0x41, 0x35, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x36, 0x30, 0x30, 0x32, 0x50, 0x53, 0x31,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x35, 0x30, 0x30, 0x36, 0x43, 0x41, 0x32, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x4c, 0x35, 0x30, 0x30, 0x32, 0x50, 0x41, 0x32, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4c,
		0x35, 0x30, 0x30, 0x32, 0x41, 0x32, 0x35, 0x4c, 0x35, 0x35, 0x30, 0x33, 0x41, 0x34, 0x36, 0x57,
		0x36, 0x30, 0x30, 0x34, 0x50, 0x41, 0x35, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x36, 0x30, 0x30,
		0x34, 0x4c, 0x41, 0x43, 0x36, 0x30, 0x57, 0x34, 0x30, 0x30, 0x31, 0x41, 0x43, 0x31, 0x33, 0x41,
		0x35, 0x36, 0x20, 0x4c, 0x54, 0x45, 0x57, 0x36, 0x30, 0x30, 0x31, 0x50, 0x33, 0x33, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x57, 0x35, 0x30, 0x30, 0x31, 0x50, 0x57, 0x36, 0x30, 0x30, 0x33, 0x41, 0x36,
		0x31, 0x31, 0x57, 0x4c, 0x36, 0x30, 0x30, 0x35, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31,
		0x50, 0x36, 0x35, 0x31, 0x4c, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x53, 0x4c, 0x36,
		0x35, 0x30, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4c, 0x36, 0x35, 0x30, 0x32, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x47, 0x50, 0x31, 0x30, 0x58, 0x32, 0x30, 0x31, 0x39, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x24, 0x31, 0x69, 0x74, 0x24, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x69,
		0x74, 0x65, 0x6c, 0x20, 0x69, 0x74, 0x31, 0x37, 0x30, 0x31, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x24, 0x31, 0x69, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47,
		0x69, 0x56, 0x41, 0x4c, 0x61, 0x6d, 0x63, 0x79, 0x20, 0x24, 0x31, 0x69, 0x56, 0x69, 0x65, 0x77,
		0x37, 0x34, 0x34, 0x54, 0x50, 0x43, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x37, 0x34, 0x34, 0x54, 0x50,
		0x43, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x56, 0x6f, 0x6f, 0x4d, 0x69, 0x49, 0x6e, 0x6e, 0x65,
		0x6c, 0x6f, 0x5f, 0x31, 0x49, 0x6e, 0x6e, 0x65, 0x6c, 0x6f, 0x20, 0x31, 0x69, 0x56, 0x20, 0x35,
		0x30, 0x35, 0x4d, 0x65, 0x20, 0x31, 0x4d, 0x65, 0x20, 0x31, 0x2b, 0x69, 0x57, 0x61, 0x79, 0x6c,
		0x69, 0x6e, 0x6b, 0x69, 0x5a, 0x6f, 0x74, 0x72, 0x6f, 0x6e, 0x4d, 0x49, 0x37, 0x20, 0x48, 0x65,
		0x72, 0x6f, 0x20, 0x42, 0x65, 0x74, 0x61, 0x4d, 0x49, 0x37, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20,
		0x54, 0x61, 0x62, 0x69, 0x76, 0x76, 0x69, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x61,
		0x6e, 0x49, 0x54, 0x51, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4f,
		0x6e, 0x65, 0x74, 0x65, 0x58, 0x65, 0x74, 0x54, 0x4d, 0x2d, 0x39, 0x37, 0x34, 0x39, 0x58, 0x2d,
		0x70, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x37, 0x2e, 0x31, 0x20, 0x33, 0x47, 0x54,
		0x4d, 0x2d, 0x39, 0x37, 0x34, 0x36, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x37, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x38, 0x30, 0x35, 0x31, 0x58, 0x2d, 0x70, 0x61,
		0x64, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x38, 0x69, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d,
		0x31, 0x30, 0x35, 0x38, 0x58, 0x2d, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x31, 0x30, 0x20, 0x33,
		0x47, 0x54, 0x4d, 0x2d, 0x38, 0x30, 0x34, 0x38, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x46, 0x6f,
		0x72, 0x63, 0x65, 0x20, 0x38, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x30, 0x35, 0x35, 0x48,
		0x44, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x39, 0x37,
		0x35, 0x38, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x31, 0x30,
		0x2e, 0x30, 0x22, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x38,
		0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x51, 0x55, 0x41, 0x44,
		0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x51,
		0x55, 0x41, 0x44, 0x20, 0x37, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20,
		0x51, 0x75, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x32, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61,
		0x64, 0x20, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x20, 0x38, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61,
		0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x58,
		0x2d, 0x70, 0x61, 0x64, 0x20, 0x48, 0x49, 0x54, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64,
		0x20, 0x48, 0x69, 0x74, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x24, 0x31, 0x22, 0x54, 0x4d, 0x2d, 0x39, 0x37, 0x36, 0x37, 0x58, 0x2d, 0x70, 0x61,
		0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47,
		0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x37,
		0x2e, 0x33, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x30, 0x39, 0x39, 0x58, 0x2d, 0x70,
		0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x37, 0x2e, 0x34, 0x22, 0x20, 0x33, 0x47, 0x58,
		0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x37, 0x2e, 0x35, 0x22, 0x20, 0x33,
		0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x38, 0x2e, 0x31, 0x22, 0x20,
		0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x31, 0x30, 0x2e,
		0x30, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x38, 0x35, 0x39, 0x58, 0x2d, 0x70, 0x61,
		0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x38, 0x2e, 0x32, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d,
		0x2d, 0x37, 0x30, 0x34, 0x39, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x61, 0x64, 0x20, 0x54, 0x4d, 0x2d,
		0x37, 0x30, 0x34, 0x39, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x38, 0x38, 0x37, 0x4e, 0x61,
		0x76, 0x69, 0x50, 0x61, 0x64, 0x20, 0x54, 0x4d, 0x2d, 0x37, 0x38, 0x38, 0x37, 0x20, 0x33, 0x47,
		0x54, 0x4d, 0x2d, 0x38, 0x30, 0x36, 0x36, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x52, 0x61, 0x70,
		0x69, 0x64, 0x20, 0x38, 0x2e, 0x32, 0x22, 0x20, 0x34, 0x47, 0x54, 0x4d, 0x2d, 0x34, 0x35, 0x30,
		0x33, 0x58, 0x2d, 0x51, 0x75, 0x61, 0x64, 0x54, 0x4d, 0x2d, 0x35, 0x30, 0x30, 0x36, 0x58, 0x2d,
		0x4c, 0x69, 0x6e, 0x65, 0x54, 0x4d, 0x2d, 0x35, 0x30, 0x30, 0x37, 0x58, 0x2d, 0x53, 0x68, 0x69,
		0x6e, 0x65, 0x54, 0x4d, 0x5f, 0x35, 0x30, 0x31, 0x31, 0x58, 0x2d, 0x4f, 0x6d, 0x65, 0x67, 0x61,
		0x50, 0x61, 0x79, 0x20, 0x24, 0x31, 0x47, 0x50, 0x61, 0x79, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x20,
		0x24, 0x31, 0x47, 0x54, 0x4d, 0x2d, 0x35, 0x37, 0x30, 0x32, 0x50, 0x61, 0x79, 0x20, 0x35, 0x2e,
		0x37, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x35, 0x37, 0x30, 0x33, 0x50, 0x61, 0x79, 0x20,
		0x35, 0x2e, 0x37, 0x22, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x4d, 0x2d, 0x35, 0x32, 0x30, 0x31, 0x54,
		0x4d, 0x2d, 0x34, 0x35, 0x31, 0x35, 0x58, 0x2d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x2d, 0x4d,
		0x61, 0x78, 0x69, 0x20, 0x32, 0x54, 0x4d, 0x2d, 0x34, 0x30, 0x37, 0x31, 0x58, 0x2d, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x54, 0x4d, 0x2d, 0x34, 0x39, 0x38, 0x32, 0x69, 0x58, 0x2d, 0x4d, 0x61, 0x78,
		0x69, 0x69, 0x58, 0x2d, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x4d, 0x2d, 0x35, 0x30, 0x31, 0x30, 0x58,
		0x2d, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x54, 0x4d, 0x2d, 0x34, 0x30, 0x38, 0x32, 0x52, 0x58,
		0x2d, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x51, 0x75, 0x61, 0x64, 0x54, 0x4d, 0x2d, 0x35,
		0x35, 0x30, 0x33, 0x58, 0x2d, 0x4d, 0x61, 0x67, 0x65, 0x54, 0x4d, 0x2d, 0x35, 0x35, 0x30, 0x38,
		0x58, 0x2d, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x58, 0x2d, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x58, 0x2d,
		0x50, 0x6c, 0x75, 0x73, 0x58, 0x2d, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x76, 0x2d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x58, 0x53, 0x20, 0x50, 0x72, 0x6f, 0xc3,
		0xb6, 0x77, 0x6e, 0x46, 0x75, 0x6e, 0x20, 0x24, 0x31, 0x46, 0x75, 0x6e, 0x20, 0x35, 0x20, 0x34,
		0x47, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x39,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x39, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x38, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x70, 0x69,
		0x72, 0x65, 0x20, 0x45, 0x35, 0x2d, 0x34, 0x32, 0x31, 0x47, 0x41, 0x73, 0x70, 0x69, 0x72, 0x65,
		0x20, 0x45, 0x35, 0x2d, 0x35, 0x31, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x4b, 0x35, 0x30,
		0x49, 0x4e, 0x4b, 0x35, 0x34, 0x4c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65,
		0x72, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65,
		0x72, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x5a, 0x65, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x6c,
		0x69, 0x70, 0x58, 0x35, 0x35, 0x30, 0x4c, 0x42, 0x58, 0x35, 0x35, 0x33, 0x4d, 0x41, 0x58, 0x35,
		0x35, 0x35, 0x4c, 0x4e, 0x58, 0x35, 0x35, 0x36, 0x55, 0x51, 0x4b, 0x4c, 0x61, 0x74, 0x69, 0x74,
		0x75, 0x64, 0x65, 0x20, 0x45, 0x34, 0x33, 0x30, 0x30, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x6f,
		0x6e, 0x20, 0x33, 0x35, 0x34, 0x31, 0x58, 0x50, 0x53, 0x20, 0x31, 0x35, 0x20, 0x39, 0x35, 0x33,
		0x30, 0x58, 0x50, 0x53, 0x20, 0x31, 0x35, 0x20, 0x39, 0x35, 0x35, 0x30, 0x43, 0x6f, 0x6d, 0x70,
		0x61, 0x71, 0x20, 0x50, 0x72, 0x65, 0x73, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x43, 0x51, 0x36, 0x31,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x43, 0x43, 0x6f, 0x6d, 0x70,
		0x61, 0x71, 0x20, 0x50, 0x72, 0x65, 0x73, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x43, 0x51, 0x36, 0x31,
		0x48, 0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x78, 0x32, 0x20, 0x44,
		0x65, 0x74, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f,
		0x6e, 0x20, 0x78, 0x32, 0x48, 0x50, 0x20, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x20, 0x31, 0x35,
		0x2d, 0x62, 0x73, 0x30, 0x78, 0x78, 0x31, 0x35, 0x20, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x20,
		0x50, 0x43, 0x48, 0x50, 0x20, 0x45, 0x4e, 0x56, 0x59, 0x20, 0x78, 0x33, 0x36, 0x30, 0x20, 0x43,
		0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x31, 0x35, 0x2d, 0x62, 0x70,
		0x30, 0x78, 0x78, 0x45, 0x4e, 0x56, 0x59, 0x20, 0x78, 0x33, 0x36, 0x30, 0x20, 0x43, 0x6f, 0x6e,
		0x76, 0x65, 0x72, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x50, 0x43, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x48, 0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69,
		0x6f, 0x6e, 0x20, 0x64, 0x76, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20,
		0x50, 0x43, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x64, 0x76, 0x36, 0x48, 0x50,
		0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f,
		0x6f, 0x6b, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x48, 0x50, 0x20, 0x53, 0x70, 0x65,
		0x63, 0x74, 0x72, 0x65, 0x20, 0x78, 0x33, 0x36, 0x30, 0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
		0x74, 0x69, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x65, 0x20, 0x78, 0x33, 0x36,
		0x30, 0x48, 0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x6c, 0x6c,
		0x2d, 0x69, 0x6e, 0x2d, 0x4f, 0x6e, 0x65, 0x20, 0x32, 0x34, 0x2d, 0x72, 0x30, 0x78, 0x78, 0x50,
		0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x34, 0x2d, 0x72, 0x30, 0x78, 0x78, 0x20,
		0x41, 0x6c, 0x6c, 0x2d, 0x69, 0x6e, 0x2d, 0x4f, 0x6e, 0x65, 0x20, 0x44, 0x65, 0x73, 0x6b, 0x74,
		0x6f, 0x70, 0x20, 0x50, 0x43, 0x32, 0x33, 0x2d, 0x66, 0x33, 0x36, 0x34, 0x50, 0x61, 0x76, 0x69,
		0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x32, 0x33, 0x2d, 0x66, 0x33, 0x36, 0x34, 0x20, 0x41, 0x6c, 0x6c, 0x2d, 0x69, 0x6e, 0x2d, 0x4f,
		0x6e, 0x65, 0x20, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x20, 0x50, 0x43, 0x54, 0x68, 0x69,
		0x6e, 0x6b, 0x50, 0x61, 0x64, 0x20, 0x48, 0x65, 0x6c, 0x69, 0x78, 0x20, 0x33, 0x37, 0x30, 0x32,
		0x47, 0x35, 0x30, 0x2d, 0x38, 0x30, 0x49, 0x64, 0x65, 0x61, 0x70, 0x61, 0x64, 0x20, 0x33, 0x31,
		0x30, 0x2d, 0x31, 0x35, 0x49, 0x53, 0x4b, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x59, 0x37,
		0x32, 0x30, 0x53, 0x63, 0x68, 0x6e, 0x65, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x62,
		0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x34, 0x22, 0x20, 0x43, 0x68, 0x65, 0x72, 0x72, 0x79, 0x20, 0x54,
		0x72, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20, 0x54, 0x48, 0x2d,
		0x33, 0x36, 0x30, 0x52, 0x31, 0x32, 0x2e, 0x33, 0x32, 0x43, 0x54, 0x57, 0x46, 0x42, 0x4d, 0x44,
		0x2f, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x53, 0x61, 0x74, 0x65, 0x6c,
		0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x31, 0x47, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x32,
		0x47, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x33, 0x69, 0x50, 0x6f,
		0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x34, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x35, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x36, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x37, 0x69, 0x50, 0x6f,
		0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x43, 0x6f, 0x77, 0x6f, 0x6e, 0x46, 0x69, 0x69, 0x4f,
		0x4d, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x44, 0x4d, 0x69, 0x63, 0x72,
		0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x5a, 0x75, 0x6e, 0x65, 0x48, 0x44, 0x5a, 0x75, 0x6e, 0x65,
		0x20, 0x48, 0x44, 0x53, 0x4f, 0x4e, 0x4f, 0x53, 0x50, 0x6c, 0x61, 0x79, 0x3a, 0x35, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x34, 0x2e, 0x30, 0x59,
		0x50, 0x2d, 0x47, 0x37, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x65, 0x72, 0x20, 0x35, 0x2e, 0x30, 0x59, 0x50, 0x2d, 0x47, 0x53, 0x31, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x33, 0x2e, 0x36, 0x59, 0x50, 0x2d,
		0x47, 0x49, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
		0x20, 0x34, 0x2e, 0x32, 0x59, 0x50, 0x2d, 0x47, 0x50, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x35, 0x2e, 0x38, 0x59, 0x50, 0x2d, 0x47, 0x35,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x35,
		0x30, 0x59, 0x50, 0x2d, 0x47, 0x42, 0x37, 0x30, 0x44, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x37, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x68,
		0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x68, 0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x4d,
		0x36, 0x57, 0x69, 0x7a, 0x7a, 0x41, 0x4b, 0x49, 0x52, 0x41, 0x41, 0x4b, 0x49, 0x52, 0x41, 0x20,
		0x53, 0x68, 0x65, 0x6c, 0x6c, 0x41, 0x4d, 0x43, 0x56, 0x41, 0x4d, 0x43, 0x56, 0x20, 0x53, 0x68,
		0x65, 0x6c, 0x6c, 0x42, 0x42, 0x4b, 0x20, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x44, 0x69, 0x67, 0x6d,
		0x61, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x45, 0x43, 0x4f, 0x4e, 0x45, 0x43, 0x4f, 0x4e, 0x20,
		0x53, 0x68, 0x65, 0x6c, 0x6c, 0x48, 0x69, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4a, 0x56, 0x43,
		0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4b, 0x76, 0x61, 0x6e, 0x74, 0x4b, 0x76, 0x61, 0x6e, 0x74,
		0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x62, 0x65, 0x6e, 0x4c, 0x65, 0x62, 0x65, 0x6e,
		0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x66, 0x66, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c,
		0x4c, 0x6f, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x6f, 0x76, 0x69, 0x65, 0x77, 0x20, 0x53, 0x68, 0x65,
		0x6c, 0x6c, 0x4c, 0x55, 0x4d, 0x55, 0x53, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4d, 0x79, 0x73,
		0x74, 0x65, 0x72, 0x79, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4e, 0x6f, 0x76, 0x65, 0x78, 0x20,
		0x73, 0x68, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x77, 0x69, 0x6e, 0x64, 0x20, 0x53, 0x68,
		0x65, 0x6c, 0x6c, 0x54, 0x65, 0x6c, 0x65, 0x66, 0x75, 0x6e, 0x6b, 0x65, 0x6e, 0x20, 0x53, 0x68,
		0x65, 0x6c, 0x6c, 0x59, 0x75, 0x6e, 0x6f, 0x59, 0x75, 0x6e, 0x6f, 0x20, 0x53, 0x68, 0x65, 0x6c,
		0x6c, 0x46, 0x53, 0x2d, 0x41, 0x52, 0x53, 0x2d, 0x30, 0x31, 0x42, 0x41, 0x69, 0x72, 0x74, 0x69,
		0x65, 0x73, 0x41, 0x6c, 0x74, 0x65, 0x63, 0x68, 0x20, 0x55, 0x45, 0x43, 0x41, 0x54, 0x56, 0x49,
		0x4f, 0x35, 0x35, 0x44, 0x31, 0x36, 0x32, 0x30, 0x42, 0x61, 0x6e, 0x67, 0x4f, 0x6c, 0x75, 0x66,
		0x73, 0x65, 0x6e, 0x42, 0x61, 0x6e, 0x67, 0x6f, 0x6c, 0x75, 0x66, 0x73, 0x65, 0x6e, 0x42, 0x65,
		0x6f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x43, 0x2d, 0x36, 0x35, 0x43, 0x55, 0x47, 0x38,
		0x30, 0x35, 0x32, 0x45, 0x43, 0x72, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x43, 0x4e, 0x56, 0x30, 0x30,
		0x31, 0x44, 0x4d, 0x4d, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x62, 0x6f, 0x78, 0x45, 0x4c, 0x45, 0x43,
		0x54, 0x52, 0x4f, 0x4e, 0x49, 0x41, 0x46, 0x26, 0x55, 0x47, 0x6f, 0x47, 0x45, 0x4e, 0x47, 0x37,
		0x4c, 0x45, 0x35, 0x35, 0x58, 0x37, 0x30, 0x30, 0x30, 0x55, 0x35, 0x30, 0x41, 0x44, 0x45, 0x56,
		0x54, 0x4f, 0x4f, 0x4c, 0x35, 0x30, 0x41, 0x36, 0x38, 0x33, 0x46, 0x45, 0x56, 0x53, 0x35, 0x35,
		0x41, 0x36, 0x31, 0x30, 0x30, 0x45, 0x45, 0x35, 0x35, 0x55, 0x36, 0x32, 0x51, 0x47, 0x41, 0x56,
		0x54, 0x35, 0x30, 0x41, 0x36, 0x35, 0x30, 0x32, 0x45, 0x41, 0x4d, 0x49, 0x43, 0x41, 0x4c, 0x49,
		0x44, 0x56, 0x42, 0x36, 0x38, 0x38, 0x36, 0x34, 0x39, 0x44, 0x32, 0x39, 0x30, 0x30, 0x48, 0x6f,
		0x74, 0x65, 0x6c, 0x48, 0x75, 0x6d, 0x61, 0x78, 0x48, 0x4d, 0x53, 0x31, 0x30, 0x30, 0x30, 0x53,
		0x48, 0x4d, 0x53, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x53, 0x46, 0x56, 0x50, 0x34, 0x30, 0x30, 0x30,
		0x54, 0x46, 0x56, 0x50, 0x2d, 0x34, 0x30, 0x30, 0x30, 0x54, 0x48, 0x47, 0x53, 0x31, 0x30, 0x30,
		0x30, 0x53, 0x48, 0x47, 0x53, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x44, 0x52, 0x31, 0x30,
		0x30, 0x30, 0x53, 0x48, 0x44, 0x52, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x44, 0x52, 0x34,
		0x30, 0x30, 0x30, 0x54, 0x48, 0x44, 0x52, 0x2d, 0x34, 0x30, 0x30, 0x30, 0x54, 0x49, 0x6b, 0x65,
		0x61, 0x49, 0x6e, 0x74, 0x65, 0x6b, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x6f, 0x41, 0x46, 0x54,
		0x53, 0x4f, 0x30, 0x30, 0x31, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4b, 0x55,
		0x42, 0x4f, 0x33, 0x32, 0x44, 0x31, 0x36, 0x32, 0x30, 0x4c, 0x47, 0x45, 0x58, 0x55, 0x34, 0x33,
		0x57, 0x54, 0x31, 0x38, 0x30, 0x4e, 0x34, 0x33, 0x4c, 0x4a, 0x36, 0x31, 0x34, 0x56, 0x2d, 0x5a,
		0x41, 0x35, 0x35, 0x53, 0x4b, 0x38, 0x35, 0x30, 0x56, 0x2d, 0x5a, 0x41, 0x4b, 0x45, 0x59, 0x30,
		0x30, 0x30, 0x30, 0x32, 0x31, 0x33, 0x46, 0x31, 0x7a, 0x4b, 0x45, 0x59, 0x30, 0x30, 0x30, 0x30,
		0x32, 0x31, 0x33, 0x46, 0x4b, 0x45, 0x59, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x24, 0x31, 0x4c,
		0x4d, 0x32, 0x31, 0x55, 0x33, 0x32, 0x4c, 0x4d, 0x4c, 0x61, 0x75, 0x72, 0x75, 0x73, 0x4c, 0x69,
		0x6e, 0x73, 0x61, 0x72, 0x4c, 0x6f, 0x65, 0x77, 0x65, 0x4d, 0x53, 0x74, 0x61, 0x72, 0x24, 0x31,
		0x4b, 0x54, 0x56, 0x31, 0x38, 0x24, 0x31, 0x4b, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
		0x20, 0x54, 0x56, 0x4d, 0x61, 0x6e, 0x68, 0x61, 0x74, 0x74, 0x61, 0x6e, 0x54, 0x33, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x54, 0x65, 0x6b, 0x4d, 0x65, 0x74, 0x7a, 0x4d, 0x49, 0x52, 0x41, 0x59, 0x4c,
		0x45, 0x44, 0x4d, 0x2d, 0x33, 0x32, 0x32, 0x4e, 0x49, 0x50, 0x4e, 0x6f, 0x72, 0x64, 0x6d, 0x65,
		0x6e, 0x64, 0x65, 0x50, 0x45, 0x41, 0x51, 0x50, 0x52, 0x4f, 0x46, 0x69, 0x4c, 0x4f, 0x56, 0x49,
		0x45, 0x52, 0x41, 0x20, 0x28, 0x24, 0x31, 0x29, 0x44, 0x49, 0x47, 0x41, 0x20, 0x24, 0x31, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x28, 0x24, 0x31, 0x29, 0x52, 0x45, 0x47, 0x41,
		0x4c, 0x53, 0x43, 0x42, 0x43, 0x53, 0x43, 0x42, 0x43, 0x35, 0x38, 0x36, 0x34, 0x33, 0x44, 0x31,
		0x38, 0x35, 0x30, 0x53, 0x45, 0x47, 0x53, 0x57, 0x54, 0x56, 0x53, 0x4b, 0x57, 0x45, 0x32, 0x30,
		0x45, 0x32, 0x31, 0x53, 0x61, 0x62, 0x61, 0x53, 0x61, 0x6c, 0x6f, 0x72, 0x61, 0x24, 0x32, 0x4d,
		0x61, 0x70, 0x6c, 0x65, 0x5f, 0x32, 0x30, 0x31, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54,
		0x56, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x53, 0x65, 0x6c, 0x65, 0x76, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x4c, 0x43, 0x2d, 0x24, 0x31, 0x42, 0x4c, 0x41, 0x2d, 0x34, 0x33, 0x53, 0x6b, 0x79,
		0x5f, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x45, 0x6c, 0x65, 0x63,
		0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x4b, 0x44, 0x4c, 0x2d, 0x47, 0x52, 0x31, 0x4b, 0x44, 0x4c,
		0x2d, 0x47, 0x4e, 0x24, 0x31, 0x42, 0x52, 0x41, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31, 0x54, 0x4f,
		0x4b, 0x59, 0x4f, 0x54, 0x4f, 0x4b, 0x54, 0x43, 0x4c, 0x45, 0x44, 0x33, 0x32, 0x53, 0x54, 0x65,
		0x63, 0x68, 0x6e, 0x69, 0x53, 0x61, 0x74, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x6f, 0x6c,
		0x6f, 0x72, 0x75, 0x7a, 0x77, 0x34, 0x30, 0x35, 0x34, 0x74, 0x74, 0x67, 0x55, 0x5a, 0x57, 0x34,
		0x30, 0x35, 0x34, 0x54, 0x54, 0x47, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x6b, 0x61, 0x54, 0x65,
		0x63, 0x68, 0x6e, 0x6f, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x24, 0x31, 0x20, 0x32, 0x38, 0x2e, 0x30,
		0x22, 0x24, 0x31, 0x20, 0x33, 0x32, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x34, 0x33, 0x2e, 0x30,
		0x22, 0x24, 0x31, 0x20, 0x34, 0x30, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x34, 0x39, 0x2e, 0x30,
		0x22, 0x24, 0x31, 0x20, 0x35, 0x35, 0x2e, 0x30, 0x22, 0x34, 0x30, 0x46, 0x42, 0x35, 0x34, 0x32,
		0x36, 0x34, 0x30, 0x4c, 0x32, 0x36, 0x30, 0x30, 0x56, 0x4f, 0x58, 0x56, 0x69, 0x64, 0x65, 0x6f,
		0x77, 0x65, 0x62, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x57, 0x65, 0x62, 0x20, 0x54, 0x56, 0x57, 0x45,
		0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x54, 0x4f, 0x4e, 0x58, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	}
)
