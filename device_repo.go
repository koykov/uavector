// Code generated by "uaxplc -module=device -input=~/dev/php/device-detector/regexes/device". DO NOT EDIT.

package uaxpl

import (
	"regexp"
)

var (
	__dr_idx = [8][]deviceTuple{
		// cameras.yml
		{
			deviceTuple{type64: 0x50000000b, brand64: 0x00000005, matchRI: -0x0001, match64: 0xb00000018, modelSI: 0x0000, models64: 0x00000000},
			deviceTuple{type64: 0x50000000b, brand64: 0x180000001f, matchRI: 0x0000, match64: 0x00000000, modelSI: -0x0001, models64: 0x100000006},
		},
		// car_browsers.yml
		{
			deviceTuple{type64: 0x940000009f, brand64: 0x8b00000094, matchRI: -0x0001, match64: 0x9f000000ad, modelSI: -0x0001, models64: 0x600000007},
			deviceTuple{type64: 0x940000009f, brand64: 0xb6000000bb, matchRI: 0x0002, match64: 0x00000000, modelSI: -0x0001, models64: 0x700000009},
			deviceTuple{type64: 0x940000009f, brand64: 0xce000000d4, matchRI: -0x0001, match64: 0xd4000000e4, modelSI: -0x0001, models64: 0x90000000a},
		},
		// consoles.yml
		{
			deviceTuple{type64: 0xed000000f4, brand64: 0xe7000000ed, matchRI: 0x0004, match64: 0x00000000, modelSI: 0x000a, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0xfe00000101, matchRI: -0x0001, match64: 0x1010000010d, modelSI: 0x000b, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0x1160000011f, matchRI: -0x0001, match64: 0x11f00000123, modelSI: -0x0001, models64: 0xc00000011},
			deviceTuple{type64: 0xed000000f4, brand64: 0x15f00000167, matchRI: 0x0005, match64: 0x00000000, modelSI: 0x0011, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0x1690000016d, matchRI: -0x0001, match64: 0x1690000016d, modelSI: 0x0012, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0x16d0000017b, matchRI: 0x0006, match64: 0x00000000, modelSI: 0x0013, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0x18100000185, matchRI: -0x0001, match64: 0x1850000018e, modelSI: 0x0014, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0x18e00000192, matchRI: 0x0007, match64: 0x00000000, modelSI: 0x0015, models64: 0x00000000},
		},
		// mobiles.yml
		{
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1a0000001a7, matchRI: 0x0008, match64: 0x00000000, modelSI: 0x0016, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a9000001ab, matchRI: 0x0009, match64: 0x00000000, modelSI: -0x0001, models64: 0x1700000019},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cc000001cf, matchRI: 0x000c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1900000025},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x20100000206, matchRI: 0x0019, match64: 0x00000000, modelSI: -0x0001, models64: 0x2500000027},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x20a0000020d, matchRI: 0x001c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2700000028},
			deviceTuple{type64: 0x20d00000213, brand64: 0x21b0000021d, matchRI: 0x001e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2800000030},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x27400000279, matchRI: 0x0026, match64: 0x00000000, modelSI: -0x0001, models64: 0x3000000037},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2a5000002a9, matchRI: 0x002d, match64: 0x00000000, modelSI: 0x0037, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2a9000002ad, matchRI: 0x002e, match64: 0x00000000, modelSI: 0x0038, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2b6000002be, matchRI: 0x002f, match64: 0x00000000, modelSI: -0x0001, models64: 0x390000003d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2e1000002e5, matchRI: 0x0030, match64: 0x00000000, modelSI: 0x003d, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x2e5000002e8, matchRI: 0x0031, match64: 0x00000000, modelSI: 0x003e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2f5000002f7, matchRI: 0x0032, match64: 0x00000000, modelSI: -0x0001, models64: 0x3f00000043},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x32100000325, matchRI: -0x0001, match64: 0x32100000325, modelSI: -0x0001, models64: 0x430000004c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x38d00000392, matchRI: 0x0037, match64: 0x00000000, modelSI: 0x004c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x39200000397, matchRI: 0x0038, match64: 0x00000000, modelSI: -0x0001, models64: 0x4d0000004e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3b3000003bc, matchRI: 0x0039, match64: 0x00000000, modelSI: 0x004e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3bc000003bf, matchRI: 0x003a, match64: 0x00000000, modelSI: -0x0001, models64: 0x4f00000055},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3d8000003de, matchRI: 0x0041, match64: 0x00000000, modelSI: -0x0001, models64: 0x5500000058},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3fe00000403, matchRI: 0x0043, match64: 0x00000000, modelSI: 0x0058, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x41100000414, matchRI: 0x0044, match64: 0x00000000, modelSI: -0x0001, models64: 0x590000005b},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x44700000450, matchRI: 0x0045, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x45000000459, matchRI: 0x0046, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x45900000464, matchRI: 0x0047, match64: 0x00000000, modelSI: 0x005b, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x4690000046c, matchRI: 0x0048, match64: 0x00000000, modelSI: 0x005c, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x46c00000470, matchRI: 0x0049, match64: 0x00000000, modelSI: 0x005d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x47000000475, matchRI: 0x004a, match64: 0x00000000, modelSI: -0x0001, models64: 0x5e0000006d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4e7000004ea, matchRI: 0x004d, match64: 0x00000000, modelSI: -0x0001, models64: 0x6d0000006f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x50200000509, matchRI: 0x004e, match64: 0x00000000, modelSI: 0x006f, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x5090000050c, matchRI: 0x004f, match64: 0x00000000, modelSI: -0x0001, models64: 0x7000000072},
			deviceTuple{type64: 0x20d00000213, brand64: 0x50c00000513, matchRI: -0x0001, match64: 0x50c00000513, modelSI: -0x0001, models64: 0x7200000073},
			deviceTuple{type64: 0x51800000525, brand64: 0x51300000518, matchRI: 0x0053, match64: 0x00000000, modelSI: 0x0073, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x52d00000532, matchRI: -0x0001, match64: 0x52d00000532, modelSI: -0x0001, models64: 0x7400000075},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x53200000536, matchRI: 0x0055, match64: 0x00000000, modelSI: 0x0075, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5360000053a, matchRI: 0x0056, match64: 0x00000000, modelSI: -0x0001, models64: 0x7600000085},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5d2000005d7, matchRI: 0x0065, match64: 0x00000000, modelSI: 0x0085, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x5d7000005db, matchRI: 0x0066, match64: 0x00000000, modelSI: -0x0001, models64: 0x8600000089},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6190000061e, matchRI: 0x0068, match64: 0x00000000, modelSI: 0x0089, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x61e00000621, matchRI: 0x0069, match64: 0x00000000, modelSI: 0x008a, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x62100000624, matchRI: 0x006a, match64: 0x00000000, modelSI: -0x0001, models64: 0x8b0000008f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x64a0000064e, matchRI: 0x006f, match64: 0x00000000, modelSI: -0x0001, models64: 0x8f00000091},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x65500000659, matchRI: 0x0072, match64: 0x00000000, modelSI: 0x0091, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6590000065f, matchRI: 0x0073, match64: 0x00000000, modelSI: -0x0001, models64: 0x920000009e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6d8000006e2, matchRI: 0x0080, match64: 0x00000000, modelSI: 0x009e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6e2000006e5, matchRI: 0x0081, match64: 0x00000000, modelSI: -0x0001, models64: 0x9f000000a5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x73200000736, matchRI: 0x0086, match64: 0x00000000, modelSI: -0x0001, models64: 0xa5000000ea},
			deviceTuple{type64: 0x20d00000213, brand64: 0xa1400000a1a, matchRI: 0x00c0, match64: 0x00000000, modelSI: -0x0001, models64: 0xea000000ec},
			deviceTuple{type64: 0x20d00000213, brand64: 0xa3600000a3d, matchRI: 0x00c1, match64: 0x00000000, modelSI: -0x0001, models64: 0xec000000ee},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa4a00000a4f, matchRI: 0x00c4, match64: 0x00000000, modelSI: -0x0001, models64: 0xee00000100},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xac000000ac7, matchRI: 0x00d2, match64: 0x00000000, modelSI: -0x0001, models64: 0x10000000106},
			deviceTuple{type64: 0x20d00000213, brand64: 0xb0300000b10, matchRI: 0x00d8, match64: 0x00000000, modelSI: 0x0106, models64: 0x00000000},
			deviceTuple{type64: 0xb1700000b1e, brand64: 0xb1000000b17, matchRI: 0x00d9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1070000010b},
			deviceTuple{type64: 0x20d00000213, brand64: 0xb4200000b47, matchRI: 0x00de, match64: 0x00000000, modelSI: -0x0001, models64: 0x10b0000011e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc8b00000c90, matchRI: 0x00e8, match64: 0x00000000, modelSI: -0x0001, models64: 0x11e00000120},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0xca200000ca9, matchRI: 0x00ea, match64: 0x00000000, modelSI: 0x0120, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xca900000caf, matchRI: 0x00eb, match64: 0x00000000, modelSI: -0x0001, models64: 0x12100000122},
			deviceTuple{type64: 0x2700000027, brand64: 0xcb900000cbf, matchRI: 0x00ed, match64: 0x00000000, modelSI: -0x0001, models64: 0x12200000123},
			deviceTuple{type64: 0x20d00000213, brand64: 0xcd200000cd7, matchRI: 0x00ee, match64: 0x00000000, modelSI: 0x0123, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcd700000cdb, matchRI: 0x00ef, match64: 0x00000000, modelSI: -0x0001, models64: 0x1240000012a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcfc00000d00, matchRI: 0x00f5, match64: 0x00000000, modelSI: -0x0001, models64: 0x12a00000135},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd5a00000d5e, matchRI: 0x00fe, match64: 0x00000000, modelSI: -0x0001, models64: 0x13500000139},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd7a00000d81, matchRI: 0x0101, match64: 0x00000000, modelSI: -0x0001, models64: 0x13900000203},
			deviceTuple{type64: 0x20d00000213, brand64: 0x191000001915, matchRI: 0x0181, match64: 0x00000000, modelSI: 0x0203, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x19150000191d, matchRI: 0x0182, match64: 0x00000000, modelSI: -0x0001, models64: 0x20400000207},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x19240000192c, matchRI: 0x0186, match64: 0x00000000, modelSI: -0x0001, models64: 0x20700000208},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x192c00001933, matchRI: 0x0188, match64: 0x00000000, modelSI: -0x0001, models64: 0x20800000212},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1997000019a0, matchRI: 0x018e, match64: 0x00000000, modelSI: -0x0001, models64: 0x21200000220},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a0900001a10, matchRI: 0x019c, match64: 0x00000000, modelSI: -0x0001, models64: 0x22000000275},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f7300001f7c, matchRI: 0x01bf, match64: 0x00000000, modelSI: -0x0001, models64: 0x2750000027f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x205500002059, matchRI: 0x01c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x27f00000281},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x20590000205f, matchRI: 0x01c5, match64: 0x00000000, modelSI: -0x0001, models64: 0x28100000283},
			deviceTuple{type64: 0x20d00000213, brand64: 0x205f00002065, matchRI: 0x01c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x283000002af},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x237e00002384, matchRI: 0x01e9, match64: 0x00000000, modelSI: 0x02af, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x238400002389, matchRI: 0x01ea, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b0000002b2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x23a5000023a9, matchRI: 0x01eb, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b2000002b9},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23e0000023e6, matchRI: 0x01f0, match64: 0x00000000, modelSI: 0x02b9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x23e6000023ef, matchRI: 0x01f1, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ba000002bc},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23f6000023fb, matchRI: 0x01f4, match64: 0x00000000, modelSI: 0x02bc, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x240a0000240e, matchRI: 0x01f5, match64: 0x00000000, modelSI: 0x02bd, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x240e00002413, matchRI: 0x01f6, match64: 0x00000000, modelSI: 0x02be, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x241300002417, matchRI: 0x01f7, match64: 0x00000000, modelSI: 0x02bf, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x24170000241c, matchRI: 0x01f8, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c0000002c5},
			deviceTuple{type64: 0x2700000027, brand64: 0x244400002449, matchRI: 0x01fe, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c5000003a1},
			deviceTuple{type64: 0x20d00000213, brand64: 0x31cc000031d4, matchRI: -0x0001, match64: 0x31cc000031d4, modelSI: -0x0001, models64: 0x3a1000003a5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xe7000000ed, matchRI: 0x02d3, match64: 0x00000000, modelSI: -0x0001, models64: 0x3a5000003c1},
			deviceTuple{type64: 0x20d00000213, brand64: 0x338e00003399, matchRI: -0x0001, match64: 0x338e00003399, modelSI: -0x0001, models64: 0x3c1000003c5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x33cf000033d2, matchRI: 0x02e8, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c5000003ce},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x34260000342e, matchRI: 0x02f2, match64: 0x00000000, modelSI: 0x03ce, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x342e00003434, matchRI: 0x02f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x3cf000003ed},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x356d00003574, matchRI: 0x02f9, match64: 0x00000000, modelSI: 0x03ed, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x357400003579, matchRI: 0x02fa, match64: 0x00000000, modelSI: -0x0001, models64: 0x3ee000003f9},
			deviceTuple{type64: 0x20d00000213, brand64: 0x35a4000035ac, matchRI: 0x0306, match64: 0x00000000, modelSI: -0x0001, models64: 0x3f9000003fc},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x35b9000035be, matchRI: 0x030a, match64: 0x00000000, modelSI: -0x0001, models64: 0x3fc000003fd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x35c8000035ce, matchRI: 0x030c, match64: 0x00000000, modelSI: -0x0001, models64: 0x3fd000003ff},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x35d5000035d8, matchRI: 0x030f, match64: 0x00000000, modelSI: -0x0001, models64: 0x3ff00000401},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x35e0000035e6, matchRI: 0x0312, match64: 0x00000000, modelSI: -0x0001, models64: 0x40100000404},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x35f0000035f9, matchRI: 0x0316, match64: 0x00000000, modelSI: -0x0001, models64: 0x4040000041a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x367a0000367f, matchRI: 0x032d, match64: 0x00000000, modelSI: 0x041a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x367f00003683, matchRI: 0x032e, match64: 0x00000000, modelSI: -0x0001, models64: 0x41b00000491},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3caa00003cb0, matchRI: 0x039a, match64: 0x00000000, modelSI: -0x0001, models64: 0x49100000492},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x3cb000003cc1, matchRI: -0x0001, match64: 0x3cc100003cc8, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x3cc800003ccc, matchRI: 0x039c, match64: 0x00000000, modelSI: 0x0492, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3ccc00003cd2, matchRI: 0x039d, match64: 0x00000000, modelSI: 0x0493, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3cd200003cd7, matchRI: 0x039e, match64: 0x00000000, modelSI: 0x0494, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3cd700003cdf, matchRI: 0x039f, match64: 0x00000000, modelSI: -0x0001, models64: 0x49500000499},
			deviceTuple{type64: 0x245f00002467, brand64: 0x3ce500003cea, matchRI: 0x03a4, match64: 0x00000000, modelSI: -0x0001, models64: 0x4990000049a},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x3cea00003cef, matchRI: 0x03a6, match64: 0x00000000, modelSI: 0x049a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3cfb00003d01, matchRI: 0x03a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x49b0000049d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3d1500003d1a, matchRI: 0x03aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x49d000004a2},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3d5d00003d61, matchRI: 0x03ad, match64: 0x00000000, modelSI: -0x0001, models64: 0x4a2000004a3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3d6100003d66, matchRI: 0x03af, match64: 0x00000000, modelSI: -0x0001, models64: 0x4a3000004a7},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3d9900003d9f, matchRI: 0x03b3, match64: 0x00000000, modelSI: -0x0001, models64: 0x4a7000004a8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3da600003db2, matchRI: 0x03b5, match64: 0x00000000, modelSI: -0x0001, models64: 0x4a8000004b2},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x3e2500003e29, matchRI: 0x03bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x4b2000004b4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3e3600003e3c, matchRI: -0x0001, match64: 0x3e3c00003e42, modelSI: -0x0001, models64: 0x4b4000004b5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3e4b00003e4f, matchRI: 0x03c0, match64: 0x00000000, modelSI: 0x04b5, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3e4f00003e58, matchRI: 0x03c1, match64: 0x00000000, modelSI: -0x0001, models64: 0x4b6000004c1},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x3f4c00003f4f, matchRI: 0x03cd, match64: 0x00000000, modelSI: -0x0001, models64: 0x4c1000004c4},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3f7100003f74, matchRI: 0x03d1, match64: 0x00000000, modelSI: -0x0001, models64: 0x4c4000004c8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3f8700003f8a, matchRI: 0x03d5, match64: 0x00000000, modelSI: -0x0001, models64: 0x4c8000004ca},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3fa300003fac, matchRI: -0x0001, match64: 0x3fac00003fb5, modelSI: 0x04ca, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3fb500003fb8, matchRI: 0x03d6, match64: 0x00000000, modelSI: -0x0001, models64: 0x4cb000004d0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3fd900003fde, matchRI: 0x03da, match64: 0x00000000, modelSI: -0x0001, models64: 0x4d0000004d1},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3fde00003fe3, matchRI: 0x03dc, match64: 0x00000000, modelSI: 0x04d1, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3fe300003fe7, matchRI: 0x03dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x4d2000004d4},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3ffe00004002, matchRI: 0x03e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x4d4000004d6},
			deviceTuple{type64: 0x20d00000213, brand64: 0x400200004007, matchRI: 0x03e3, match64: 0x00000000, modelSI: 0x04d6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x40070000400b, matchRI: 0x03e4, match64: 0x00000000, modelSI: 0x04d7, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x400b00004014, matchRI: 0x03e5, match64: 0x00000000, modelSI: -0x0001, models64: 0x4d8000004d9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x401b00004023, matchRI: 0x03e7, match64: 0x00000000, modelSI: 0x04d9, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x402300004031, matchRI: 0x03e8, match64: 0x00000000, modelSI: -0x0001, models64: 0x4da000004dd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x40380000403e, matchRI: 0x03ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x4dd000004df},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x40490000404f, matchRI: 0x03ef, match64: 0x00000000, modelSI: 0x04df, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x404f00004056, matchRI: 0x03f0, match64: 0x00000000, modelSI: -0x0001, models64: 0x4e0000004eb},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x409a000040a1, matchRI: 0x03fa, match64: 0x00000000, modelSI: -0x0001, models64: 0x4eb000004f1},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x40cb000040d1, matchRI: 0x0401, match64: 0x00000000, modelSI: 0x04f1, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x40d1000040d7, matchRI: 0x0402, match64: 0x00000000, modelSI: 0x04f2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x40d7000040e0, matchRI: 0x0403, match64: 0x00000000, modelSI: 0x04f3, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x40ed000040f1, matchRI: 0x0404, match64: 0x00000000, modelSI: -0x0001, models64: 0x4f4000004f6},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x40f1000040fd, matchRI: 0x0407, match64: 0x00000000, modelSI: 0x04f6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x40fd00004103, matchRI: 0x0408, match64: 0x00000000, modelSI: -0x0001, models64: 0x4f7000004f9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x41090000410e, matchRI: 0x040b, match64: 0x00000000, modelSI: -0x0001, models64: 0x4f9000004fc},
			deviceTuple{type64: 0x20d00000213, brand64: 0x412900004130, matchRI: 0x040c, match64: 0x00000000, modelSI: 0x04fc, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x413000004135, matchRI: 0x040d, match64: 0x00000000, modelSI: -0x0001, models64: 0x4fd000004ff},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x41470000414d, matchRI: 0x040f, match64: 0x00000000, modelSI: -0x0001, models64: 0x4ff00000502},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x416c00004172, matchRI: 0x0412, match64: 0x00000000, modelSI: 0x0502, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x417200004178, matchRI: 0x0413, match64: 0x00000000, modelSI: 0x0503, models64: 0x00000000},
			deviceTuple{type64: 0x9d7000009de, brand64: 0x41830000418c, matchRI: 0x0414, match64: 0x00000000, modelSI: 0x0504, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x419a000041a1, matchRI: 0x0415, match64: 0x00000000, modelSI: 0x0505, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x41ad000041b3, matchRI: 0x0416, match64: 0x00000000, modelSI: 0x0506, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x41b3000041bc, matchRI: 0x0417, match64: 0x00000000, modelSI: -0x0001, models64: 0x50700000509},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x41d7000041db, matchRI: 0x0419, match64: 0x00000000, modelSI: -0x0001, models64: 0x5090000050b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x41db000041e0, matchRI: 0x041c, match64: 0x00000000, modelSI: -0x0001, models64: 0x50b0000050e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x41e5000041ec, matchRI: 0x0420, match64: 0x00000000, modelSI: -0x0001, models64: 0x50e00000511},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x420b00004212, matchRI: -0x0001, match64: 0x420b00004212, modelSI: -0x0001, models64: 0x51100000512},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x422000004224, matchRI: 0x0425, match64: 0x00000000, modelSI: 0x0512, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x422d00004237, matchRI: 0x0426, match64: 0x00000000, modelSI: 0x0513, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x423700004240, matchRI: 0x0427, match64: 0x00000000, modelSI: -0x0001, models64: 0x51400000525},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x42f900004301, matchRI: 0x042c, match64: 0x00000000, modelSI: 0x0525, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x43060000430f, matchRI: 0x042d, match64: 0x00000000, modelSI: -0x0001, models64: 0x5260000053c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x438e00004397, matchRI: 0x0440, match64: 0x00000000, modelSI: -0x0001, models64: 0x53c0000054c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa3100000a36, matchRI: 0x044c, match64: 0x00000000, modelSI: -0x0001, models64: 0x54c0000054e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x447d00004482, matchRI: 0x044e, match64: 0x00000000, modelSI: 0x054e, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x448200004486, matchRI: 0x044f, match64: 0x00000000, modelSI: -0x0001, models64: 0x54f00000553},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x44e4000044e7, matchRI: 0x0451, match64: 0x00000000, modelSI: -0x0001, models64: 0x553000005a6},
			deviceTuple{type64: 0x20d00000213, brand64: 0x491800004920, matchRI: 0x0477, match64: 0x00000000, modelSI: 0x05a6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x49350000493b, matchRI: 0x0478, match64: 0x00000000, modelSI: -0x0001, models64: 0x5a7000005b3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x498c00004993, matchRI: 0x047f, match64: 0x00000000, modelSI: 0x05b3, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4998000049a0, matchRI: 0x0480, match64: 0x00000000, modelSI: 0x05b4, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x49a0000049a7, matchRI: 0x0481, match64: 0x00000000, modelSI: -0x0001, models64: 0x5b5000005b7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x49a7000049af, matchRI: -0x0001, match64: 0x49af000049b7, modelSI: -0x0001, models64: 0x5b7000005b8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x49b9000049c1, matchRI: 0x0484, match64: 0x00000000, modelSI: -0x0001, models64: 0x5b8000005bd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4a0f00004a16, matchRI: 0x0486, match64: 0x00000000, modelSI: -0x0001, models64: 0x5bd000005ca},
			deviceTuple{type64: 0x20d00000213, brand64: 0x4a7500004a7c, matchRI: 0x0490, match64: 0x00000000, modelSI: 0x05ca, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x4a8200004a87, matchRI: 0x0491, match64: 0x00000000, modelSI: 0x05cb, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x4a9000004a97, matchRI: 0x0492, match64: 0x00000000, modelSI: 0x05cc, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4a9700004a9c, matchRI: 0x0493, match64: 0x00000000, modelSI: -0x0001, models64: 0x5cd000005d0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4ab100004ab6, matchRI: 0x0496, match64: 0x00000000, modelSI: -0x0001, models64: 0x5d0000005d3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4ab600004abf, matchRI: 0x049a, match64: 0x00000000, modelSI: -0x0001, models64: 0x5d3000005d5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4ae000004ae6, matchRI: 0x049b, match64: 0x00000000, modelSI: 0x05d5, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4ae600004aec, matchRI: 0x049c, match64: 0x00000000, modelSI: -0x0001, models64: 0x5d6000005f7},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x4ca900004cb3, matchRI: -0x0001, match64: 0x4ca900004cb3, modelSI: -0x0001, models64: 0x5f7000005f8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4cb300004cbb, matchRI: -0x0001, match64: 0x4cbb00004cc0, modelSI: -0x0001, models64: 0x5f8000005f9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4cd000004cd6, matchRI: 0x04aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x5f900000605},
			deviceTuple{type64: 0x20d00000213, brand64: 0x4d7b00004d84, matchRI: 0x04b5, match64: 0x00000000, modelSI: 0x0605, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4d8400004d89, matchRI: 0x04b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x60600000609},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4dc300004dc7, matchRI: 0x04b9, match64: 0x00000000, modelSI: -0x0001, models64: 0x60900000610},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x4e0e00004e14, matchRI: 0x04bf, match64: 0x00000000, modelSI: 0x0610, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4e1400004e1d, matchRI: 0x04c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x61100000615},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4e6000004e64, matchRI: -0x0001, match64: 0x4e6400004e69, modelSI: -0x0001, models64: 0x61500000617},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4e7300004e7c, matchRI: 0x04c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x6170000061c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4eae00004eb1, matchRI: 0x04c8, match64: 0x00000000, modelSI: 0x061c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4eb100004ebb, matchRI: 0x04c9, match64: 0x00000000, modelSI: 0x061d, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x4ebb00004ec3, matchRI: 0x04ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x61e0000061f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4ed200004ed6, matchRI: 0x04cb, match64: 0x00000000, modelSI: -0x0001, models64: 0x61f00000625},
			deviceTuple{type64: 0x20d00000213, brand64: 0x4ef600004efc, matchRI: 0x04d2, match64: 0x00000000, modelSI: -0x0001, models64: 0x62500000626},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4f1000004f15, matchRI: 0x04d3, match64: 0x00000000, modelSI: -0x0001, models64: 0x6260000064a},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x50de000050e2, matchRI: 0x04e4, match64: 0x00000000, modelSI: 0x064a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x50e2000050e9, matchRI: 0x04e5, match64: 0x00000000, modelSI: -0x0001, models64: 0x64b0000064e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x50f600005103, matchRI: 0x04e8, match64: 0x00000000, modelSI: 0x064e, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x510b00005112, matchRI: 0x04e9, match64: 0x00000000, modelSI: 0x064f, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x511200005119, matchRI: 0x04ea, match64: 0x00000000, modelSI: 0x0650, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x511900005120, matchRI: 0x04eb, match64: 0x00000000, modelSI: 0x0651, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x512600005133, matchRI: -0x0001, match64: 0x513300005143, modelSI: 0x0652, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x514e00005157, matchRI: 0x04ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x65300000656},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x517100005176, matchRI: 0x04ef, match64: 0x00000000, modelSI: -0x0001, models64: 0x65600000659},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x51a8000051ae, matchRI: 0x04f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x65900000661},
			deviceTuple{type64: 0x20d00000213, brand64: 0x51e5000051e8, matchRI: 0x04fb, match64: 0x00000000, modelSI: -0x0001, models64: 0x66100000669},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x51fd00005203, matchRI: 0x0501, match64: 0x00000000, modelSI: -0x0001, models64: 0x66900000673},
			deviceTuple{type64: 0x20d00000213, brand64: 0x52b9000052bf, matchRI: 0x0508, match64: 0x00000000, modelSI: -0x0001, models64: 0x67300000678},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x530300005309, matchRI: 0x050a, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x53090000530f, matchRI: 0x050b, match64: 0x00000000, modelSI: -0x0001, models64: 0x67800000684},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x53590000535f, matchRI: 0x0515, match64: 0x00000000, modelSI: -0x0001, models64: 0x68400000688},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x537e00005388, matchRI: 0x0519, match64: 0x00000000, modelSI: -0x0001, models64: 0x6880000068b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x53b0000053b8, matchRI: 0x051b, match64: 0x00000000, modelSI: -0x0001, models64: 0x68b0000068e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x53cd000053d6, matchRI: 0x051f, match64: 0x00000000, modelSI: -0x0001, models64: 0x68e00000691},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x53ef000053f6, matchRI: 0x0521, match64: 0x00000000, modelSI: -0x0001, models64: 0x69100000697},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x54030000540b, matchRI: 0x0528, match64: 0x00000000, modelSI: -0x0001, models64: 0x69700000698},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x540b00005414, matchRI: 0x052a, match64: 0x00000000, modelSI: -0x0001, models64: 0x6980000069e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x54320000543f, matchRI: 0x052f, match64: 0x00000000, modelSI: -0x0001, models64: 0x69e000006d2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x573900005745, matchRI: 0x054c, match64: 0x00000000, modelSI: -0x0001, models64: 0x6d2000006e4},
			deviceTuple{type64: 0x2700000027, brand64: 0x589d000058a7, matchRI: 0x054f, match64: 0x00000000, modelSI: -0x0001, models64: 0x6e4000006e5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x58b1000058bd, matchRI: 0x0551, match64: 0x00000000, modelSI: -0x0001, models64: 0x6e5000006ea},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x58de000058eb, matchRI: 0x0553, match64: 0x00000000, modelSI: -0x0001, models64: 0x6ea000006ef},
			deviceTuple{type64: 0x20d00000213, brand64: 0x595300005958, matchRI: 0x0554, match64: 0x00000000, modelSI: -0x0001, models64: 0x6ef00000707},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x59f900005a02, matchRI: 0x056d, match64: 0x00000000, modelSI: 0x0707, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5a0200005a0a, matchRI: 0x056e, match64: 0x00000000, modelSI: 0x0708, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5a0a00005a12, matchRI: 0x056f, match64: 0x00000000, modelSI: -0x0001, models64: 0x7090000070c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5a1d00005a24, matchRI: 0x0573, match64: 0x00000000, modelSI: -0x0001, models64: 0x70c00000710},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5a4900005a53, matchRI: -0x0001, match64: 0x5a4900005a53, modelSI: -0x0001, models64: 0x71000000711},
			deviceTuple{type64: 0x20d00000213, brand64: 0x5a5300005a5d, matchRI: 0x0576, match64: 0x00000000, modelSI: -0x0001, models64: 0x71100000717},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5ab800005abd, matchRI: 0x057a, match64: 0x00000000, modelSI: -0x0001, models64: 0x7170000071a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5add00005ae6, matchRI: 0x057d, match64: 0x00000000, modelSI: -0x0001, models64: 0x71a0000072b},
			deviceTuple{type64: 0x20d00000213, brand64: 0x5baf00005bb7, matchRI: 0x058b, match64: 0x00000000, modelSI: -0x0001, models64: 0x72b0000072d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5bc200005bc7, matchRI: 0x058e, match64: 0x00000000, modelSI: -0x0001, models64: 0x72d00000734},
			deviceTuple{type64: 0x20d00000213, brand64: 0x5c0c00005c0f, matchRI: -0x0001, match64: 0x5c0c00005c0f, modelSI: -0x0001, models64: 0x73400000735},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5c1a00005c20, matchRI: 0x0597, match64: 0x00000000, modelSI: -0x0001, models64: 0x73500000738},
			deviceTuple{type64: 0x20d00000213, brand64: 0x5c3200005c3c, matchRI: 0x059b, match64: 0x00000000, modelSI: 0x0738, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5c3c00005c42, matchRI: 0x059c, match64: 0x00000000, modelSI: -0x0001, models64: 0x73900000740},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5c7200005c80, matchRI: 0x05a4, match64: 0x00000000, modelSI: -0x0001, models64: 0x74000000759},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5d7c00005d81, matchRI: 0x05b5, match64: 0x00000000, modelSI: -0x0001, models64: 0x7590000075d},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x5da200005da8, matchRI: 0x05b7, match64: 0x00000000, modelSI: 0x075d, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x5da800005dae, matchRI: 0x05b8, match64: 0x00000000, modelSI: -0x0001, models64: 0x75e00000760},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5dae00005db6, matchRI: 0x05bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x76000000764},
			deviceTuple{type64: 0x20d00000213, brand64: 0x5dc000005dc9, matchRI: 0x05c0, match64: 0x00000000, modelSI: 0x0764, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5dc900005dd0, matchRI: 0x05c1, match64: 0x00000000, modelSI: -0x0001, models64: 0x7650000076b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5e3000005e36, matchRI: 0x05c3, match64: 0x00000000, modelSI: -0x0001, models64: 0x76b000007a6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x60720000607b, matchRI: 0x05f2, match64: 0x00000000, modelSI: 0x07a6, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x60890000608f, matchRI: 0x05f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x7a7000007a9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x60ae000060b6, matchRI: 0x05f5, match64: 0x00000000, modelSI: -0x0001, models64: 0x7a9000007ab},
			deviceTuple{type64: 0x20d00000213, brand64: 0x60c6000060cd, matchRI: 0x05f7, match64: 0x00000000, modelSI: -0x0001, models64: 0x7ab000007b5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x614f00006156, matchRI: 0x0602, match64: 0x00000000, modelSI: -0x0001, models64: 0x7b5000007df},
			deviceTuple{type64: 0x20d00000213, brand64: 0x627b00006282, matchRI: 0x0628, match64: 0x00000000, modelSI: 0x07df, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x628200006289, matchRI: -0x0001, match64: 0x628200006289, modelSI: -0x0001, models64: 0x7e0000007e2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x62a7000062ac, matchRI: 0x062a, match64: 0x00000000, modelSI: 0x07e2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x62ac000062b4, matchRI: 0x062b, match64: 0x00000000, modelSI: -0x0001, models64: 0x7e3000007e6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x62d3000062da, matchRI: 0x062d, match64: 0x00000000, modelSI: -0x0001, models64: 0x7e6000007f3},
			deviceTuple{type64: 0x20d00000213, brand64: 0x638c00006395, matchRI: 0x062f, match64: 0x00000000, modelSI: 0x07f3, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x63950000639a, matchRI: 0x0630, match64: 0x00000000, modelSI: 0x07f4, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x639e000063a7, matchRI: 0x0631, match64: 0x00000000, modelSI: -0x0001, models64: 0x7f5000007ff},
			deviceTuple{type64: 0x20d00000213, brand64: 0x64180000641d, matchRI: 0x063a, match64: 0x00000000, modelSI: -0x0001, models64: 0x7ff00000801},
			deviceTuple{type64: 0x20d00000213, brand64: 0x64340000643b, matchRI: 0x063c, match64: 0x00000000, modelSI: -0x0001, models64: 0x80100000802},
			deviceTuple{type64: 0x20d00000213, brand64: 0x644d00006451, matchRI: 0x063d, match64: 0x00000000, modelSI: -0x0001, models64: 0x80200000818},
			deviceTuple{type64: 0x20d00000213, brand64: 0x651e00006526, matchRI: 0x064e, match64: 0x00000000, modelSI: -0x0001, models64: 0x81800000819},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x652a0000652f, matchRI: 0x0650, match64: 0x00000000, modelSI: -0x0001, models64: 0x8190000081d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x653c00006542, matchRI: 0x0655, match64: 0x00000000, modelSI: 0x081d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x654200006548, matchRI: 0x0656, match64: 0x00000000, modelSI: -0x0001, models64: 0x81e00000821},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x655d00006561, matchRI: 0x0659, match64: 0x00000000, modelSI: 0x0821, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x656100006568, matchRI: 0x065a, match64: 0x00000000, modelSI: 0x0822, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x65680000656c, matchRI: 0x065b, match64: 0x00000000, modelSI: -0x0001, models64: 0x8230000083e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x66480000664c, matchRI: 0x0674, match64: 0x00000000, modelSI: 0x083e, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x664c0000664e, matchRI: 0x0675, match64: 0x00000000, modelSI: -0x0001, models64: 0x83f00000843},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x66870000668c, matchRI: 0x0677, match64: 0x00000000, modelSI: -0x0001, models64: 0x84300000844},
			deviceTuple{type64: 0x20d00000213, brand64: 0x66960000669d, matchRI: 0x0679, match64: 0x00000000, modelSI: -0x0001, models64: 0x84400000846},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x66a1000066a9, matchRI: 0x067c, match64: 0x00000000, modelSI: 0x0846, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x66a9000066b0, matchRI: -0x0001, match64: 0x66b0000066b8, modelSI: -0x0001, models64: 0x84700000848},
			deviceTuple{type64: 0x20d00000213, brand64: 0x66c2000066c6, matchRI: 0x067e, match64: 0x00000000, modelSI: 0x0848, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x66c6000066cf, matchRI: 0x067f, match64: 0x00000000, modelSI: 0x0849, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x66cf000066d3, matchRI: 0x0680, match64: 0x00000000, modelSI: -0x0001, models64: 0x84a0000084b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x66e6000066eb, matchRI: 0x0681, match64: 0x00000000, modelSI: -0x0001, models64: 0x84b00000851},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x672100006723, matchRI: 0x0685, match64: 0x00000000, modelSI: -0x0001, models64: 0x85100000856},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x676e00006771, matchRI: 0x0689, match64: 0x00000000, modelSI: -0x0001, models64: 0x8560000085a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x677f00006786, matchRI: 0x068e, match64: 0x00000000, modelSI: 0x085a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x678600006789, matchRI: 0x068f, match64: 0x00000000, modelSI: -0x0001, models64: 0x85b0000085d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x67950000679b, matchRI: 0x0691, match64: 0x00000000, modelSI: 0x085d, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x679b000067a4, matchRI: 0x0692, match64: 0x00000000, modelSI: 0x085e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x67a4000067a8, matchRI: 0x0693, match64: 0x00000000, modelSI: 0x085f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x67a8000067b4, matchRI: 0x0694, match64: 0x00000000, modelSI: -0x0001, models64: 0x86000000861},
			deviceTuple{type64: 0x20d00000213, brand64: 0x67b4000067ba, matchRI: 0x0696, match64: 0x00000000, modelSI: -0x0001, models64: 0x86100000863},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x67c4000067c9, matchRI: 0x0699, match64: 0x00000000, modelSI: -0x0001, models64: 0x86300000867},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x67fa00006803, matchRI: -0x0001, match64: 0x67fa00006803, modelSI: -0x0001, models64: 0x86700000868},
			deviceTuple{type64: 0x20d00000213, brand64: 0x68090000680d, matchRI: 0x069d, match64: 0x00000000, modelSI: -0x0001, models64: 0x8680000086a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x68230000682c, matchRI: 0x069f, match64: 0x00000000, modelSI: 0x086a, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x68340000683c, matchRI: 0x06a0, match64: 0x00000000, modelSI: 0x086b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x683c00006842, matchRI: -0x0001, match64: 0x684200006848, modelSI: -0x0001, models64: 0x86c0000086e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x684800006850, matchRI: 0x06a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x86e00000870},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x68740000687a, matchRI: -0x0001, match64: 0x687a00006880, modelSI: -0x0001, models64: 0x87000000872},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x68a2000068a7, matchRI: -0x0001, match64: 0x68a7000068ac, modelSI: -0x0001, models64: 0x87200000873},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x68ae000068b5, matchRI: -0x0001, match64: 0x68b5000068bc, modelSI: 0x0873, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x68c4000068c9, matchRI: 0x06a5, match64: 0x00000000, modelSI: 0x0874, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x68c9000068ce, matchRI: 0x06a6, match64: 0x00000000, modelSI: -0x0001, models64: 0x87500000879},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x68fa00006900, matchRI: 0x06a8, match64: 0x00000000, modelSI: 0x0879, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x690000006904, matchRI: 0x06a9, match64: 0x00000000, modelSI: -0x0001, models64: 0x87a00000886},
			deviceTuple{type64: 0x20d00000213, brand64: 0x69350000693b, matchRI: 0x06b5, match64: 0x00000000, modelSI: 0x0886, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x694300006949, matchRI: 0x06b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x8870000088b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x69550000695a, matchRI: -0x0001, match64: 0x69550000695a, modelSI: -0x0001, models64: 0x88b0000088d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x695a00006960, matchRI: 0x06bd, match64: 0x00000000, modelSI: -0x0001, models64: 0x88d0000088f},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x696000006965, matchRI: 0x06c0, match64: 0x00000000, modelSI: 0x088f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x696500006969, matchRI: 0x06c1, match64: 0x00000000, modelSI: 0x0890, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x696900006970, matchRI: 0x06c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x89100000896},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x69920000699c, matchRI: 0x06c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x89600000897},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x699c000069a4, matchRI: 0x06c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x69a4000069ac, matchRI: 0x06c9, match64: 0x00000000, modelSI: -0x0001, models64: 0x8970000089a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x69b3000069ba, matchRI: 0x06cc, match64: 0x00000000, modelSI: -0x0001, models64: 0x89a0000089c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x69bf000069c4, matchRI: 0x06cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x89c000008da},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6d1f00006d24, matchRI: 0x06e8, match64: 0x00000000, modelSI: 0x08da, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6d2c00006d32, matchRI: 0x06e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x8db000008dd},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6d4400006d4b, matchRI: 0x06eb, match64: 0x00000000, modelSI: 0x08dd, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6d4b00006d4f, matchRI: 0x06ec, match64: 0x00000000, modelSI: 0x08de, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6d4f00006d57, matchRI: -0x0001, match64: 0x6d4f00006d57, modelSI: -0x0001, models64: 0x8df000008e0},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6d6100006d68, matchRI: 0x06ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x8e0000008e3},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x6d7a00006d80, matchRI: 0x06f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x8e3000008e7},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6d8000006d87, matchRI: 0x06f7, match64: 0x00000000, modelSI: 0x08e7, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6d8700006d8e, matchRI: 0x06f8, match64: 0x00000000, modelSI: 0x08e8, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6d8e00006d94, matchRI: 0x06f9, match64: 0x00000000, modelSI: 0x08e9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6d9400006d9a, matchRI: 0x06fa, match64: 0x00000000, modelSI: -0x0001, models64: 0x8ea00000914},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6f4f00006f55, matchRI: 0x0711, match64: 0x00000000, modelSI: 0x0914, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6f5700006f5b, matchRI: 0x0712, match64: 0x00000000, modelSI: -0x0001, models64: 0x91500000919},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x6f6d00006f72, matchRI: 0x0717, match64: 0x00000000, modelSI: 0x0919, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6f7200006f78, matchRI: -0x0001, match64: 0x6f7800006f7f, modelSI: -0x0001, models64: 0x91a0000091c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6f8400006f88, matchRI: 0x071a, match64: 0x00000000, modelSI: -0x0001, models64: 0x91c00000920},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6f9000006f9c, matchRI: 0x071f, match64: 0x00000000, modelSI: -0x0001, models64: 0x92000000923},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6fb600006fbf, matchRI: 0x0721, match64: 0x00000000, modelSI: 0x0923, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6fbf00006fc7, matchRI: 0x0722, match64: 0x00000000, modelSI: 0x0924, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6fc700006fd0, matchRI: 0x0723, match64: 0x00000000, modelSI: -0x0001, models64: 0x92500000926},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6fd600006fdc, matchRI: 0x0725, match64: 0x00000000, modelSI: 0x0926, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6fdc00006fe0, matchRI: 0x0726, match64: 0x00000000, modelSI: 0x0927, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6fe800006fef, matchRI: 0x0727, match64: 0x00000000, modelSI: -0x0001, models64: 0x9280000092b},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6ff600006ffe, matchRI: 0x072b, match64: 0x00000000, modelSI: 0x092b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6ffe00007004, matchRI: 0x072c, match64: 0x00000000, modelSI: 0x092c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x70040000700a, matchRI: 0x072d, match64: 0x00000000, modelSI: -0x0001, models64: 0x92d00000931},
			deviceTuple{type64: 0x20d00000213, brand64: 0x702000007027, matchRI: 0x0731, match64: 0x00000000, modelSI: -0x0001, models64: 0x93100000933},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x703e00007043, matchRI: 0x0734, match64: 0x00000000, modelSI: -0x0001, models64: 0x93300000937},
			deviceTuple{type64: 0x20d00000213, brand64: 0x70570000705b, matchRI: 0x0739, match64: 0x00000000, modelSI: 0x0937, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x705b00007060, matchRI: -0x0001, match64: 0x705b00007060, modelSI: -0x0001, models64: 0x9380000093a},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x706000007064, matchRI: 0x073c, match64: 0x00000000, modelSI: 0x093a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x706400007068, matchRI: 0x073d, match64: 0x00000000, modelSI: -0x0001, models64: 0x93b0000093e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x70790000707c, matchRI: 0x0741, match64: 0x00000000, modelSI: -0x0001, models64: 0x93e00000942},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x708e00007090, matchRI: 0x0746, match64: 0x00000000, modelSI: -0x0001, models64: 0x94200000945},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x709400007097, matchRI: 0x074a, match64: 0x00000000, modelSI: 0x0945, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x70970000709a, matchRI: -0x0001, match64: 0x709a000070a2, modelSI: -0x0001, models64: 0x94600000947},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x70a7000070ad, matchRI: 0x074b, match64: 0x00000000, modelSI: -0x0001, models64: 0x94700000948},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x70bd000070c0, matchRI: 0x074c, match64: 0x00000000, modelSI: -0x0001, models64: 0x9480000094c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x70e8000070eb, matchRI: 0x0750, match64: 0x00000000, modelSI: -0x0001, models64: 0x94c0000094e},
			deviceTuple{type64: 0x245f00002467, brand64: 0x70f0000070f5, matchRI: 0x0753, match64: 0x00000000, modelSI: 0x094e, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x710000007106, matchRI: 0x0754, match64: 0x00000000, modelSI: 0x094f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x71060000710a, matchRI: 0x0755, match64: 0x00000000, modelSI: 0x0950, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x711000007115, matchRI: 0x0756, match64: 0x00000000, modelSI: -0x0001, models64: 0x95100000953},
			deviceTuple{type64: 0x20d00000213, brand64: 0x711f00007123, matchRI: 0x0759, match64: 0x00000000, modelSI: -0x0001, models64: 0x95300000955},
			deviceTuple{type64: 0x20d00000213, brand64: 0x715100007157, matchRI: 0x075a, match64: 0x00000000, modelSI: 0x0955, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x71570000715a, matchRI: 0x075b, match64: 0x00000000, modelSI: 0x0956, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x715a0000715d, matchRI: 0x075c, match64: 0x00000000, modelSI: 0x0957, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x715d00007162, matchRI: 0x075d, match64: 0x00000000, modelSI: 0x0958, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x716200007169, matchRI: 0x075e, match64: 0x00000000, modelSI: -0x0001, models64: 0x9590000095b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x71730000717f, matchRI: 0x0761, match64: 0x00000000, modelSI: -0x0001, models64: 0x95b00000960},
			deviceTuple{type64: 0x20d00000213, brand64: 0x71bc000071c4, matchRI: 0x0765, match64: 0x00000000, modelSI: 0x0960, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x71c4000071d0, matchRI: 0x0766, match64: 0x00000000, modelSI: -0x0001, models64: 0x96100000963},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x71df000071e6, matchRI: 0x0768, match64: 0x00000000, modelSI: 0x0963, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x71f1000071fc, matchRI: 0x0769, match64: 0x00000000, modelSI: 0x0964, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x71fc00007202, matchRI: 0x076a, match64: 0x00000000, modelSI: -0x0001, models64: 0x96500000969},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x72580000725f, matchRI: -0x0001, match64: 0x725f00007264, modelSI: 0x0969, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x72750000727d, matchRI: 0x076f, match64: 0x00000000, modelSI: -0x0001, models64: 0x96a0000096c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x727d00007285, matchRI: 0x0772, match64: 0x00000000, modelSI: -0x0001, models64: 0x96c0000097e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x72de000072e5, matchRI: 0x0785, match64: 0x00000000, modelSI: -0x0001, models64: 0x97e00000981},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x72f800007304, matchRI: 0x0789, match64: 0x00000000, modelSI: 0x0981, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x730400007309, matchRI: 0x078a, match64: 0x00000000, modelSI: -0x0001, models64: 0x98200000985},
			deviceTuple{type64: 0x20d00000213, brand64: 0x732000007326, matchRI: 0x078e, match64: 0x00000000, modelSI: 0x0985, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x73260000732d, matchRI: 0x078f, match64: 0x00000000, modelSI: -0x0001, models64: 0x98600000988},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x733a00007343, matchRI: 0x0791, match64: 0x00000000, modelSI: -0x0001, models64: 0x9880000098f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7399000073a6, matchRI: 0x0798, match64: 0x00000000, modelSI: -0x0001, models64: 0x98f00000993},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x73dd000073e2, matchRI: 0x079c, match64: 0x00000000, modelSI: 0x0993, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x73e2000073e6, matchRI: 0x079d, match64: 0x00000000, modelSI: 0x0994, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x73e6000073ec, matchRI: 0x079e, match64: 0x00000000, modelSI: 0x0995, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x73f5000073fc, matchRI: 0x079f, match64: 0x00000000, modelSI: 0x0996, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x740a00007410, matchRI: 0x07a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x99700000999},
			deviceTuple{type64: 0x20d00000213, brand64: 0x74260000742a, matchRI: 0x07a1, match64: 0x00000000, modelSI: 0x0999, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x742a00007432, matchRI: 0x07a2, match64: 0x00000000, modelSI: -0x0001, models64: 0x99a000009b3},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x755000007555, matchRI: 0x07a3, match64: 0x00000000, modelSI: 0x09b3, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x75680000756f, matchRI: 0x07a4, match64: 0x00000000, modelSI: 0x09b4, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x757300007577, matchRI: 0x07a5, match64: 0x00000000, modelSI: -0x0001, models64: 0x9b5000009d4},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x76e8000076f0, matchRI: 0x07b5, match64: 0x00000000, modelSI: -0x0001, models64: 0x9d4000009d6},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x76f4000076f9, matchRI: 0x07b8, match64: 0x00000000, modelSI: 0x09d6, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x76f900007700, matchRI: 0x07b9, match64: 0x00000000, modelSI: 0x09d7, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x770000007709, matchRI: 0x07ba, match64: 0x00000000, modelSI: -0x0001, models64: 0x9d8000009d9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x770d00007717, matchRI: 0x07bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x9d9000009dc},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x773400007738, matchRI: -0x0001, match64: 0x773400007738, modelSI: -0x0001, models64: 0x9dc000009de},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x77380000773f, matchRI: 0x07c1, match64: 0x00000000, modelSI: -0x0001, models64: 0x9de000009e0},
			deviceTuple{type64: 0x20d00000213, brand64: 0x773f00007747, matchRI: 0x07c4, match64: 0x00000000, modelSI: -0x0001, models64: 0x9e0000009e1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x77740000777c, matchRI: 0x07c5, match64: 0x00000000, modelSI: -0x0001, models64: 0x9e1000009e5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x77950000779d, matchRI: 0x07c9, match64: 0x00000000, modelSI: -0x0001, models64: 0x9e5000009ee},
			deviceTuple{type64: 0x20d00000213, brand64: 0x77d4000077db, matchRI: 0x07d2, match64: 0x00000000, modelSI: -0x0001, models64: 0x9ee000009ef},
			deviceTuple{type64: 0x20d00000213, brand64: 0x77e8000077ee, matchRI: 0x07d4, match64: 0x00000000, modelSI: 0x09ef, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x77f5000077fc, matchRI: 0x07d5, match64: 0x00000000, modelSI: -0x0001, models64: 0x9f0000009f8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x784100007847, matchRI: 0x07dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x9f8000009fb},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x78680000786f, matchRI: 0x07df, match64: 0x00000000, modelSI: -0x0001, models64: 0x9fb00000a03},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x78fd00007901, matchRI: 0x07e5, match64: 0x00000000, modelSI: 0x0a03, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x79010000790a, matchRI: 0x07e6, match64: 0x00000000, modelSI: -0x0001, models64: 0xa0400000a0a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x79ac000079b4, matchRI: 0x07e7, match64: 0x00000000, modelSI: -0x0001, models64: 0xa0a00000a0c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x79c5000079cb, matchRI: 0x07ea, match64: 0x00000000, modelSI: 0x0a0c, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x79cb000079d1, matchRI: 0x07eb, match64: 0x00000000, modelSI: -0x0001, models64: 0xa0d00000a28},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7aa700007aad, matchRI: 0x0804, match64: 0x00000000, modelSI: -0x0001, models64: 0xa2800000a2a},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x7ac600007aca, matchRI: 0x0806, match64: 0x00000000, modelSI: 0x0a2a, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x7aca00007ace, matchRI: 0x0807, match64: 0x00000000, modelSI: -0x0001, models64: 0xa2b00000a2d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7ad200007ad4, matchRI: 0x080a, match64: 0x00000000, modelSI: 0x0a2d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7ad400007ad8, matchRI: 0x080b, match64: 0x00000000, modelSI: -0x0001, models64: 0xa2e00000a30},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7add00007ae6, matchRI: 0x080e, match64: 0x00000000, modelSI: -0x0001, models64: 0xa3000000a37},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7b4d00007b53, matchRI: 0x0810, match64: 0x00000000, modelSI: 0x0a37, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7b5300007b60, matchRI: 0x0811, match64: 0x00000000, modelSI: 0x0a38, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7b6800007b6d, matchRI: 0x0812, match64: 0x00000000, modelSI: 0x0a39, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7b7b00007b7f, matchRI: -0x0001, match64: 0x7b7f00007b84, modelSI: -0x0001, models64: 0xa3a00000a3b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7b8d00007b93, matchRI: -0x0001, match64: 0x7b8d00007b93, modelSI: -0x0001, models64: 0xa3b00000a3d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7ba600007ba9, matchRI: 0x0816, match64: 0x00000000, modelSI: -0x0001, models64: 0xa3d00000a46},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7c3100007c34, matchRI: 0x0818, match64: 0x00000000, modelSI: -0x0001, models64: 0xa4600000a4b},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7c6300007c66, matchRI: 0x0819, match64: 0x00000000, modelSI: -0x0001, models64: 0xa4b00000a50},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7cb000007cb5, matchRI: 0x081d, match64: 0x00000000, modelSI: 0x0a50, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7cb500007cba, matchRI: 0x081e, match64: 0x00000000, modelSI: -0x0001, models64: 0xa5100000a53},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7cc100007cc9, matchRI: 0x0821, match64: 0x00000000, modelSI: -0x0001, models64: 0xa5300000a54},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7ccd00007cd0, matchRI: 0x0823, match64: 0x00000000, modelSI: 0x0a54, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7cd000007cd9, matchRI: 0x0824, match64: 0x00000000, modelSI: 0x0a55, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x7cd900007ce1, matchRI: -0x0001, match64: 0x7ce100007ce9, modelSI: 0x0a56, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7cf200007cf9, matchRI: 0x0825, match64: 0x00000000, modelSI: -0x0001, models64: 0xa5700000a59},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7d0100007d07, matchRI: 0x0828, match64: 0x00000000, modelSI: 0x0a59, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7d0e00007d17, matchRI: 0x0829, match64: 0x00000000, modelSI: 0x0a5a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7d1700007d1d, matchRI: 0x082a, match64: 0x00000000, modelSI: 0x0a5b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7d1d00007d23, matchRI: 0x082b, match64: 0x00000000, modelSI: -0x0001, models64: 0xa5c00000a61},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7d5700007d5d, matchRI: 0x082e, match64: 0x00000000, modelSI: 0x0a61, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7d6200007d6c, matchRI: 0x082f, match64: 0x00000000, modelSI: 0x0a62, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7d6c00007d74, matchRI: 0x0830, match64: 0x00000000, modelSI: 0x0a63, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7d7400007d7d, matchRI: 0x0831, match64: 0x00000000, modelSI: 0x0a64, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7d7d00007d81, matchRI: 0x0832, match64: 0x00000000, modelSI: -0x0001, models64: 0xa6500000a6c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7dd800007ddc, matchRI: 0x0835, match64: 0x00000000, modelSI: -0x0001, models64: 0xa6c00000a79},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7eaa00007eae, matchRI: 0x0838, match64: 0x00000000, modelSI: -0x0001, models64: 0xa7900000a84},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7ef900007f00, matchRI: -0x0001, match64: 0x7ef900007f00, modelSI: -0x0001, models64: 0xa8400000a85},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7f0000007f09, matchRI: 0x0841, match64: 0x00000000, modelSI: -0x0001, models64: 0xa8500000a87},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x7f0900007f0f, matchRI: 0x0844, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7f0f00007f1d, matchRI: 0x0845, match64: 0x00000000, modelSI: -0x0001, models64: 0xa8700000aa4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x808e00008092, matchRI: 0x0862, match64: 0x00000000, modelSI: -0x0001, models64: 0xaa400000aa6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x80a6000080a9, matchRI: 0x0863, match64: 0x00000000, modelSI: -0x0001, models64: 0xaa600000b16},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x851000008515, matchRI: 0x08a9, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1600000b19},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x85150000851a, matchRI: 0x08ad, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1900000b1b},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x851c00008524, matchRI: 0x08b0, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1b00000b1d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x852f00008536, matchRI: 0x08b3, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1d00000b1e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x854000008546, matchRI: 0x08b5, match64: 0x00000000, modelSI: 0x0b1e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x854600008551, matchRI: 0x08b6, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1f00000b25},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x859300008599, matchRI: 0x08ba, match64: 0x00000000, modelSI: -0x0001, models64: 0xb2500000b26},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x85a7000085ae, matchRI: 0x08bc, match64: 0x00000000, modelSI: -0x0001, models64: 0xb2600000b27},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x85b9000085be, matchRI: 0x08be, match64: 0x00000000, modelSI: 0x0b27, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x85be000085c5, matchRI: 0x08bf, match64: 0x00000000, modelSI: -0x0001, models64: 0xb2800000b3d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x86e7000086ed, matchRI: 0x08c7, match64: 0x00000000, modelSI: 0x0b3d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x86ed000086f4, matchRI: 0x08c8, match64: 0x00000000, modelSI: -0x0001, models64: 0xb3e00000b70},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x89ea000089ef, matchRI: 0x08fa, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x89ef000089f6, matchRI: 0x08fb, match64: 0x00000000, modelSI: -0x0001, models64: 0xb7000000b75},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8a1600008a2e, matchRI: 0x0901, match64: 0x00000000, modelSI: 0x0b75, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8a2e00008a33, matchRI: 0x0902, match64: 0x00000000, modelSI: 0x0b76, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8a3900008a3f, matchRI: 0x0903, match64: 0x00000000, modelSI: -0x0001, models64: 0xb7700000b7d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8a7600008a7d, matchRI: 0x0906, match64: 0x00000000, modelSI: -0x0001, models64: 0xb7d00000b7f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8a8c00008a92, matchRI: 0x0909, match64: 0x00000000, modelSI: 0x0b7f, models64: 0x00000000},
			deviceTuple{type64: 0x245f00002467, brand64: 0x8a9700008a9d, matchRI: 0x090a, match64: 0x00000000, modelSI: 0x0b80, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8a9d00008aa2, matchRI: 0x090b, match64: 0x00000000, modelSI: -0x0001, models64: 0xb8100000b8d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8b6b00008b73, matchRI: 0x0914, match64: 0x00000000, modelSI: 0x0b8d, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8b7700008b7d, matchRI: 0x0915, match64: 0x00000000, modelSI: 0x0b8e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8b8600008b89, matchRI: 0x0916, match64: 0x00000000, modelSI: -0x0001, models64: 0xb8f00000b94},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8ba000008ba8, matchRI: 0x091a, match64: 0x00000000, modelSI: -0x0001, models64: 0xb9400000bac},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8cbe00008cc5, matchRI: 0x092e, match64: 0x00000000, modelSI: -0x0001, models64: 0xbac00000bae},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x8cd700008cde, matchRI: 0x092f, match64: 0x00000000, modelSI: 0x0bae, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8cde00008ce6, matchRI: 0x0930, match64: 0x00000000, modelSI: 0x0baf, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x8ce600008cf8, matchRI: 0x0931, match64: 0x00000000, modelSI: -0x0001, models64: 0xbb000000bb3},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8d2200008d27, matchRI: 0x0932, match64: 0x00000000, modelSI: 0x0bb3, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8d2700008d32, matchRI: 0x0933, match64: 0x00000000, modelSI: -0x0001, models64: 0xbb400000bb7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8d3f00008d46, matchRI: -0x0001, match64: 0x8d4600008d4d, modelSI: -0x0001, models64: 0xbb700000bb8},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x8d5600008d5b, matchRI: -0x0001, match64: 0x8d5b00008d63, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8d6300008d69, matchRI: 0x0937, match64: 0x00000000, modelSI: 0x0bb8, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8d6900008d6e, matchRI: 0x0938, match64: 0x00000000, modelSI: 0x0bb9, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8d6e00008d79, matchRI: 0x0939, match64: 0x00000000, modelSI: 0x0bba, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8d7900008d7f, matchRI: 0x093a, match64: 0x00000000, modelSI: 0x0bbb, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8d7f00008d8d, matchRI: 0x093b, match64: 0x00000000, modelSI: -0x0001, models64: 0xbbc00000bd4},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8e8f00008e96, matchRI: 0x0943, match64: 0x00000000, modelSI: 0x0bd4, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8e9600008e9c, matchRI: 0x0944, match64: 0x00000000, modelSI: -0x0001, models64: 0xbd500000bd8},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x8ea500008eab, matchRI: 0x0947, match64: 0x00000000, modelSI: 0x0bd8, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x8eab00008eb0, matchRI: 0x0948, match64: 0x00000000, modelSI: 0x0bd9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8eb000008eb4, matchRI: 0x0949, match64: 0x00000000, modelSI: -0x0001, models64: 0xbda00000bef},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8fd300008fd8, matchRI: 0x0950, match64: 0x00000000, modelSI: 0x0bef, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8fd800008fdd, matchRI: 0x0951, match64: 0x00000000, modelSI: -0x0001, models64: 0xbf000000bf1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8fe000008fe8, matchRI: 0x0953, match64: 0x00000000, modelSI: -0x0001, models64: 0xbf100000bf6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x90160000901d, matchRI: 0x0957, match64: 0x00000000, modelSI: -0x0001, models64: 0xbf600000c00},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x906500009069, matchRI: 0x095e, match64: 0x00000000, modelSI: -0x0001, models64: 0xc0000000c05},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x907b00009081, matchRI: 0x0963, match64: 0x00000000, modelSI: -0x0001, models64: 0xc0500000c09},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x908c00009092, matchRI: 0x0968, match64: 0x00000000, modelSI: -0x0001, models64: 0xc0900000c2a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x91890000918f, matchRI: 0x097b, match64: 0x00000000, modelSI: -0x0001, models64: 0xc2a00000c2d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9198000091a0, matchRI: 0x097f, match64: 0x00000000, modelSI: 0x0c2d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x91a7000091af, matchRI: 0x0980, match64: 0x00000000, modelSI: -0x0001, models64: 0xc2e00000c33},
			deviceTuple{type64: 0x245f00002467, brand64: 0x91f900009200, matchRI: -0x0001, match64: 0x92000000920c, modelSI: 0x0c33, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x920e00009218, matchRI: 0x0982, match64: 0x00000000, modelSI: -0x0001, models64: 0xc3400000c38},
			deviceTuple{type64: 0x20d00000213, brand64: 0x92540000925e, matchRI: 0x0983, match64: 0x00000000, modelSI: -0x0001, models64: 0xc3800000c3d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x92970000929b, matchRI: 0x0985, match64: 0x00000000, modelSI: -0x0001, models64: 0xc3d00000c3f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x929b0000929f, matchRI: 0x0988, match64: 0x00000000, modelSI: -0x0001, models64: 0xc3f00000c4a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x92b7000092bd, matchRI: 0x0994, match64: 0x00000000, modelSI: -0x0001, models64: 0xc4a00000c6c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x943100009439, matchRI: 0x09a0, match64: 0x00000000, modelSI: -0x0001, models64: 0xc6c00000c74},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x945d00009464, matchRI: 0x09a9, match64: 0x00000000, modelSI: -0x0001, models64: 0xc7400000c76},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x946400009469, matchRI: 0x09ab, match64: 0x00000000, modelSI: 0x0c76, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x946900009472, matchRI: -0x0001, match64: 0x94720000947b, modelSI: -0x0001, models64: 0xc7700000c79},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x947b00009480, matchRI: 0x09ae, match64: 0x00000000, modelSI: 0x0c79, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x948700009491, matchRI: 0x09af, match64: 0x00000000, modelSI: 0x0c7a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x949100009495, matchRI: 0x09b0, match64: 0x00000000, modelSI: -0x0001, models64: 0xc7b00000c7e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x94b1000094bd, matchRI: 0x09b2, match64: 0x00000000, modelSI: -0x0001, models64: 0xc7e00000c7f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x94ca000094d2, matchRI: 0x09b3, match64: 0x00000000, modelSI: -0x0001, models64: 0xc7f00000c80},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x94de000094e4, matchRI: 0x09b5, match64: 0x00000000, modelSI: -0x0001, models64: 0xc8000000c82},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x94f9000094ff, matchRI: 0x09b7, match64: 0x00000000, modelSI: -0x0001, models64: 0xc8200000c84},
			deviceTuple{type64: 0x20d00000213, brand64: 0x94ff00009509, matchRI: 0x09ba, match64: 0x00000000, modelSI: 0x0c84, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x950900009510, matchRI: 0x09bb, match64: 0x00000000, modelSI: -0x0001, models64: 0xc8500000c8b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x955f00009563, matchRI: 0x09bf, match64: 0x00000000, modelSI: -0x0001, models64: 0xc8b00000c90},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x958800009590, matchRI: 0x09c5, match64: 0x00000000, modelSI: 0x0c90, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x959000009594, matchRI: 0x09c6, match64: 0x00000000, modelSI: -0x0001, models64: 0xc9100000c92},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x959c0000959f, matchRI: 0x09c8, match64: 0x00000000, modelSI: -0x0001, models64: 0xc9200000c96},
			deviceTuple{type64: 0x20d00000213, brand64: 0x95b4000095ba, matchRI: 0x09cd, match64: 0x00000000, modelSI: 0x0c96, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x95ba000095bf, matchRI: 0x09ce, match64: 0x00000000, modelSI: 0x0c97, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x95bf000095c2, matchRI: 0x09cf, match64: 0x00000000, modelSI: -0x0001, models64: 0xc9800000c99},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x95d0000095d4, matchRI: 0x09d0, match64: 0x00000000, modelSI: -0x0001, models64: 0xc9900000c9a},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x95da000095df, matchRI: 0x09d2, match64: 0x00000000, modelSI: -0x0001, models64: 0xc9a00000c9d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x96060000960b, matchRI: 0x09d5, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x960b0000960f, matchRI: 0x09d6, match64: 0x00000000, modelSI: 0x0c9d, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x960f00009617, matchRI: -0x0001, match64: 0x960f00009617, modelSI: -0x0001, models64: 0xc9e00000c9f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x962600009628, matchRI: 0x09d8, match64: 0x00000000, modelSI: -0x0001, models64: 0xc9f00000cb0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x970100009704, matchRI: 0x09e3, match64: 0x00000000, modelSI: -0x0001, models64: 0xcb000000d08},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x99eb000099f1, matchRI: 0x0a33, match64: 0x00000000, modelSI: -0x0001, models64: 0xd0800000d0a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x99f5000099fa, matchRI: 0x0a36, match64: 0x00000000, modelSI: -0x0001, models64: 0xd0a00000d24},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9b0600009b0c, matchRI: -0x0001, match64: 0x9b0600009b0c, modelSI: -0x0001, models64: 0xd2400000d25},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9b1400009b1a, matchRI: 0x0a43, match64: 0x00000000, modelSI: -0x0001, models64: 0xd2500000d26},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9b2600009b2c, matchRI: 0x0a45, match64: 0x00000000, modelSI: -0x0001, models64: 0xd2600000d37},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9bef00009bf7, matchRI: 0x0a53, match64: 0x00000000, modelSI: -0x0001, models64: 0xd3700000d39},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9bf700009c00, matchRI: 0x0a56, match64: 0x00000000, modelSI: -0x0001, models64: 0xd3900000d40},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x9c3600009c40, matchRI: 0x0a59, match64: 0x00000000, modelSI: 0x0d40, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x9c4900009c4f, matchRI: 0x0a5a, match64: 0x00000000, modelSI: 0x0d41, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x9c4f00009c56, matchRI: 0x0a5b, match64: 0x00000000, modelSI: 0x0d42, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9c5600009c5b, matchRI: -0x0001, match64: 0x9c5600009c5b, modelSI: -0x0001, models64: 0xd4300000d45},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x9c5b00009c62, matchRI: 0x0a5e, match64: 0x00000000, modelSI: 0x0d45, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9c6200009c6a, matchRI: 0x0a5f, match64: 0x00000000, modelSI: 0x0d46, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9c7000009c75, matchRI: 0x0a60, match64: 0x00000000, modelSI: 0x0d47, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9c7500009c7d, matchRI: 0x0a61, match64: 0x00000000, modelSI: 0x0d48, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9c7f00009c85, matchRI: 0x0a62, match64: 0x00000000, modelSI: 0x0d49, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9c8500009c87, matchRI: 0x0a63, match64: 0x00000000, modelSI: -0x0001, models64: 0xd4a00000d51},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9cbb00009cc2, matchRI: 0x0a6a, match64: 0x00000000, modelSI: -0x0001, models64: 0xd5100000d56},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9cfc00009d04, matchRI: 0x0a6b, match64: 0x00000000, modelSI: 0x0d56, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9d0b00009d0f, matchRI: -0x0001, match64: 0x9d0f00009d14, modelSI: -0x0001, models64: 0xd5700000d58},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9d1f00009d25, matchRI: 0x0a6d, match64: 0x00000000, modelSI: -0x0001, models64: 0xd5800000d5b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9d2e00009d33, matchRI: 0x0a70, match64: 0x00000000, modelSI: -0x0001, models64: 0xd5b00000d5d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x9d4300009d49, matchRI: 0x0a73, match64: 0x00000000, modelSI: 0x0d5d, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9d4900009d4f, matchRI: 0x0a74, match64: 0x00000000, modelSI: 0x0d5e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9d4f00009d59, matchRI: 0x0a75, match64: 0x00000000, modelSI: -0x0001, models64: 0xd5f00000d89},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9ed400009edd, matchRI: 0x0a9c, match64: 0x00000000, modelSI: -0x0001, models64: 0xd8900000d8c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9ee200009ee9, matchRI: 0x0aa0, match64: 0x00000000, modelSI: -0x0001, models64: 0xd8c00000dc6},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xa1010000a108, matchRI: 0x0ac7, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa1080000a10e, matchRI: 0x0ac8, match64: 0x00000000, modelSI: 0x0dc6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa10e0000a116, matchRI: 0x0ac9, match64: 0x00000000, modelSI: -0x0001, models64: 0xdc700000dca},
			deviceTuple{type64: 0x20d00000213, brand64: 0xa11a0000a122, matchRI: 0x0acd, match64: 0x00000000, modelSI: -0x0001, models64: 0xdca00000dce},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa13f0000a145, matchRI: 0x0ad2, match64: 0x00000000, modelSI: -0x0001, models64: 0xdce00000dd3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa15f0000a168, matchRI: 0x0ad6, match64: 0x00000000, modelSI: -0x0001, models64: 0xdd300000dd6},
			deviceTuple{type64: 0x20d00000213, brand64: 0xa18e0000a193, matchRI: 0x0ad9, match64: 0x00000000, modelSI: -0x0001, models64: 0xdd600000dd9},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xa1930000a19b, matchRI: 0x0add, match64: 0x00000000, modelSI: 0x0dd9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa19b0000a1a0, matchRI: 0x0ade, match64: 0x00000000, modelSI: -0x0001, models64: 0xdda00000ddc},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa1a00000a1aa, matchRI: 0x0ae1, match64: 0x00000000, modelSI: -0x0001, models64: 0xddc00000ddf},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa1cb0000a1d1, matchRI: 0x0ae2, match64: 0x00000000, modelSI: -0x0001, models64: 0xddf00000def},
			deviceTuple{type64: 0x20d00000213, brand64: 0xa24b0000a24e, matchRI: 0x0aef, match64: 0x00000000, modelSI: -0x0001, models64: 0xdef00000df2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa2630000a269, matchRI: 0x0af3, match64: 0x00000000, modelSI: -0x0001, models64: 0xdf200000df4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa26d0000a273, matchRI: 0x0af6, match64: 0x00000000, modelSI: -0x0001, models64: 0xdf400000df5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa2730000a278, matchRI: 0x0af8, match64: 0x00000000, modelSI: -0x0001, models64: 0xdf500000df7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa2970000a29d, matchRI: 0x0afb, match64: 0x00000000, modelSI: -0x0001, models64: 0xdf700001007},
			deviceTuple{type64: 0x20d00000213, brand64: 0xbcb30000bcbb, matchRI: 0x0caf, match64: 0x00000000, modelSI: -0x0001, models64: 0x100700001009},
			deviceTuple{type64: 0x940000009f, brand64: 0xbccf0000bcd4, matchRI: 0x0cb1, match64: 0x00000000, modelSI: 0x1009, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbcd40000bcdd, matchRI: 0x0cb2, match64: 0x00000000, modelSI: -0x0001, models64: 0x100a0000101e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbd7c0000bd82, matchRI: 0x0cb7, match64: 0x00000000, modelSI: -0x0001, models64: 0x101e00001020},
			deviceTuple{type64: 0x20d00000213, brand64: 0xbd900000bd96, matchRI: -0x0001, match64: 0xbd960000bda4, modelSI: 0x1020, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbdab0000bdb1, matchRI: 0x0cb9, match64: 0x00000000, modelSI: -0x0001, models64: 0x102100001022},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbdb10000bdb8, matchRI: 0x0cbb, match64: 0x00000000, modelSI: -0x0001, models64: 0x102200001049},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbfbd0000bfc1, matchRI: 0x0cc9, match64: 0x00000000, modelSI: -0x0001, models64: 0x10490000104b},
			deviceTuple{type64: 0x20d00000213, brand64: 0xbfd70000bfdc, matchRI: 0x0cca, match64: 0x00000000, modelSI: 0x104b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbff00000bffa, matchRI: 0x0ccb, match64: 0x00000000, modelSI: -0x0001, models64: 0x104c00001051},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc0380000c042, matchRI: 0x0cce, match64: 0x00000000, modelSI: -0x0001, models64: 0x105100001055},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc0470000c051, matchRI: 0x0cd3, match64: 0x00000000, modelSI: -0x0001, models64: 0x105500001068},
			deviceTuple{type64: 0x940000009f, brand64: 0xc0e20000c0e7, matchRI: 0x0ce7, match64: 0x00000000, modelSI: 0x1068, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0xc0e70000c0ea, matchRI: 0x0ce8, match64: 0x00000000, modelSI: -0x0001, models64: 0x10690000106b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc0ea0000c0ef, matchRI: 0x0ceb, match64: 0x00000000, modelSI: -0x0001, models64: 0x106b0000106f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc11a0000c11d, matchRI: 0x0ced, match64: 0x00000000, modelSI: -0x0001, models64: 0x106f00001072},
			deviceTuple{type64: 0x20d00000213, brand64: 0xc12a0000c12d, matchRI: 0x0cf1, match64: 0x00000000, modelSI: -0x0001, models64: 0x107200001074},
			deviceTuple{type64: 0x20d00000213, brand64: 0xc13e0000c140, matchRI: 0x0cf3, match64: 0x00000000, modelSI: -0x0001, models64: 0x107400001076},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc1550000c159, matchRI: 0x0cf5, match64: 0x00000000, modelSI: -0x0001, models64: 0x107600001077},
			deviceTuple{type64: 0x20d00000213, brand64: 0xc1590000c160, matchRI: 0x0cf7, match64: 0x00000000, modelSI: -0x0001, models64: 0x10770000108f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc3be0000c3c3, matchRI: -0x0001, match64: 0xc3c30000c3c9, modelSI: 0x108f, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xc3c90000c3d3, matchRI: 0x0cfa, match64: 0x00000000, modelSI: -0x0001, models64: 0x109000001095},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc3e50000c3ec, matchRI: 0x0d00, match64: 0x00000000, modelSI: -0x0001, models64: 0x1095000010a0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc45b0000c461, matchRI: 0x0d04, match64: 0x00000000, modelSI: -0x0001, models64: 0x10a0000010a3},
			deviceTuple{type64: 0x20d00000213, brand64: 0xc48f0000c493, matchRI: 0x0d06, match64: 0x00000000, modelSI: -0x0001, models64: 0x10a3000010a5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc4960000c49a, matchRI: 0x0d09, match64: 0x00000000, modelSI: -0x0001, models64: 0x10a5000010ac},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc4d60000c4df, matchRI: 0x0d0e, match64: 0x00000000, modelSI: -0x0001, models64: 0x10ac000010af},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc5010000c508, matchRI: -0x0001, match64: 0xc5010000c508, modelSI: -0x0001, models64: 0x10af00001135},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xc8f70000c8fe, matchRI: 0x0d95, match64: 0x00000000, modelSI: 0x1135, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc8fe0000c903, matchRI: 0x0d96, match64: 0x00000000, modelSI: 0x1136, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc9030000c908, matchRI: 0x0d97, match64: 0x00000000, modelSI: 0x1137, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc9080000c90e, matchRI: 0x0d98, match64: 0x00000000, modelSI: -0x0001, models64: 0x11380000114f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xca390000ca3e, matchRI: 0x0da4, match64: 0x00000000, modelSI: 0x114f, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0xca3e0000ca48, matchRI: 0x0da5, match64: 0x00000000, modelSI: 0x1150, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xca4e0000ca52, matchRI: 0x0da6, match64: 0x00000000, modelSI: -0x0001, models64: 0x11510000115d},
			deviceTuple{type64: 0x20d00000213, brand64: 0xcabe0000cac6, matchRI: 0x0db0, match64: 0x00000000, modelSI: -0x0001, models64: 0x115d00001165},
			deviceTuple{type64: 0x9d7000009de, brand64: 0xcb450000cb4a, matchRI: -0x0001, match64: 0xcb4a0000cb54, modelSI: -0x0001, models64: 0x116500001166},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcb5a0000cb5f, matchRI: 0x0db3, match64: 0x00000000, modelSI: -0x0001, models64: 0x116600001188},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcce80000ccee, matchRI: 0x0dd4, match64: 0x00000000, modelSI: -0x0001, models64: 0x11880000118a},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xccee0000ccf3, matchRI: 0x0dd7, match64: 0x00000000, modelSI: -0x0001, models64: 0x118a0000118d},
			deviceTuple{type64: 0x20d00000213, brand64: 0xcd000000cd05, matchRI: 0x0dda, match64: 0x00000000, modelSI: -0x0001, models64: 0x118d00001190},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcd050000cd09, matchRI: 0x0dde, match64: 0x00000000, modelSI: -0x0001, models64: 0x1190000011a1},
			deviceTuple{type64: 0x20d00000213, brand64: 0xcdf40000cdfc, matchRI: 0x0de6, match64: 0x00000000, modelSI: -0x0001, models64: 0x11a1000011a5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xce190000ce1e, matchRI: 0x0deb, match64: 0x00000000, modelSI: 0x11a5, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xce1e0000ce21, matchRI: 0x0dec, match64: 0x00000000, modelSI: 0x11a6, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xce210000ce25, matchRI: 0x0ded, match64: 0x00000000, modelSI: 0x11a7, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xce250000ce29, matchRI: 0x0dee, match64: 0x00000000, modelSI: 0x11a8, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xce290000ce2c, matchRI: 0x0def, match64: 0x00000000, modelSI: -0x0001, models64: 0x11a9000011ad},
			deviceTuple{type64: 0x9d7000009de, brand64: 0xce450000ce49, matchRI: 0x0df3, match64: 0x00000000, modelSI: -0x0001, models64: 0x11ad000011af},
			deviceTuple{type64: 0x20d00000213, brand64: 0xce5c0000ce60, matchRI: 0x0df4, match64: 0x00000000, modelSI: -0x0001, models64: 0x11af000011b1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xce6d0000ce71, matchRI: 0x0df7, match64: 0x00000000, modelSI: -0x0001, models64: 0x11b1000011b3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xce7f0000ce84, matchRI: 0x0df9, match64: 0x00000000, modelSI: 0x11b3, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xce890000ce8e, matchRI: 0x0dfa, match64: 0x00000000, modelSI: -0x0001, models64: 0x11b4000011b7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xce980000ce9d, matchRI: 0x0dfe, match64: 0x00000000, modelSI: -0x0001, models64: 0x11b7000011ce},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcf3b0000cf3e, matchRI: 0x0e16, match64: 0x00000000, modelSI: -0x0001, models64: 0x11ce000011cf},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcf4b0000cf4f, matchRI: 0x0e18, match64: 0x00000000, modelSI: -0x0001, models64: 0x11cf000011d7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcfad0000cfb2, matchRI: -0x0001, match64: 0xcfad0000cfb2, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcfb20000cfb5, matchRI: 0x0e1f, match64: 0x00000000, modelSI: -0x0001, models64: 0x11d7000011d8},
			deviceTuple{type64: 0x20d00000213, brand64: 0xcfb50000cfbc, matchRI: 0x0e21, match64: 0x00000000, modelSI: 0x11d8, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xcfc00000cfc6, matchRI: 0x0e22, match64: 0x00000000, modelSI: 0x11d9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcfce0000cfdd, matchRI: -0x0001, match64: 0xcfdd0000cfe6, modelSI: -0x0001, models64: 0x11da000011db},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcff20000cff7, matchRI: 0x0e23, match64: 0x00000000, modelSI: -0x0001, models64: 0x11db000011e3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd0520000d058, matchRI: -0x0001, match64: 0xd0580000d069, modelSI: -0x0001, models64: 0x11e3000011e4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd07a0000d081, matchRI: 0x0e28, match64: 0x00000000, modelSI: -0x0001, models64: 0x11e4000011ee},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xd0fa0000d0ff, matchRI: 0x0e2b, match64: 0x00000000, modelSI: 0x11ee, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0xd0ff0000d103, matchRI: 0x0e2c, match64: 0x00000000, modelSI: -0x0001, models64: 0x11ef000011f3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd11d0000d125, matchRI: 0x0e31, match64: 0x00000000, modelSI: -0x0001, models64: 0x11f3000011f5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd12d0000d136, matchRI: 0x0e34, match64: 0x00000000, modelSI: 0x11f5, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd1360000d13a, matchRI: 0x0e35, match64: 0x00000000, modelSI: -0x0001, models64: 0x11f6000011f8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd13a0000d13e, matchRI: 0x0e38, match64: 0x00000000, modelSI: -0x0001, models64: 0x11f8000011fa},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd13e0000d142, matchRI: 0x0e3b, match64: 0x00000000, modelSI: -0x0001, models64: 0x11fa000011fb},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd1450000d14a, matchRI: 0x0e3d, match64: 0x00000000, modelSI: -0x0001, models64: 0x11fb00001201},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd19b0000d1a2, matchRI: 0x0e3f, match64: 0x00000000, modelSI: 0x1201, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd1a20000d1a5, matchRI: 0x0e40, match64: 0x00000000, modelSI: 0x1202, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd1a50000d1a9, matchRI: 0x0e41, match64: 0x00000000, modelSI: 0x1203, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xd1a90000d1af, matchRI: 0x0e42, match64: 0x00000000, modelSI: 0x1204, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd1ba0000d1c0, matchRI: 0x0e43, match64: 0x00000000, modelSI: -0x0001, models64: 0x120500001213},
			deviceTuple{type64: 0x20d00000213, brand64: 0xd29a0000d29f, matchRI: 0x0e49, match64: 0x00000000, modelSI: -0x0001, models64: 0x12130000121a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd2dc0000d2e2, matchRI: 0x0e4f, match64: 0x00000000, modelSI: 0x121a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd2e20000d2e9, matchRI: 0x0e50, match64: 0x00000000, modelSI: -0x0001, models64: 0x121b0000124a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd5640000d568, matchRI: 0x0e63, match64: 0x00000000, modelSI: -0x0001, models64: 0x124a0000124f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd5770000d57c, matchRI: 0x0e69, match64: 0x00000000, modelSI: -0x0001, models64: 0x124f00001254},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd5ad0000d5b3, matchRI: -0x0001, match64: 0xd5b30000d5ba, modelSI: -0x0001, models64: 0x125400001255},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd5c60000d5d7, matchRI: 0x0e6d, match64: 0x00000000, modelSI: -0x0001, models64: 0x12550000125e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd63e0000d643, matchRI: 0x0e72, match64: 0x00000000, modelSI: -0x0001, models64: 0x125e00001261},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd6580000d65f, matchRI: 0x0e74, match64: 0x00000000, modelSI: -0x0001, models64: 0x126100001268},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd66e0000d676, matchRI: 0x0e7c, match64: 0x00000000, modelSI: 0x1268, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xd6890000d68f, matchRI: 0x0e7d, match64: 0x00000000, modelSI: 0x1269, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd68f0000d694, matchRI: 0x0e7e, match64: 0x00000000, modelSI: -0x0001, models64: 0x126a00001272},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xd7030000d70a, matchRI: -0x0001, match64: 0xd7030000d70a, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd70a0000d712, matchRI: -0x0001, match64: 0xd70a0000d712, modelSI: -0x0001, models64: 0x127200001273},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd7120000d719, matchRI: 0x0e87, match64: 0x00000000, modelSI: -0x0001, models64: 0x127300001275},
			deviceTuple{type64: 0x20d00000213, brand64: 0xd7190000d721, matchRI: 0x0e8a, match64: 0x00000000, modelSI: 0x1275, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd7210000d726, matchRI: 0x0e8b, match64: 0x00000000, modelSI: -0x0001, models64: 0x127600001278},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xd7400000d744, matchRI: 0x0e8d, match64: 0x00000000, modelSI: -0x0001, models64: 0x12780000127b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd74a0000d750, matchRI: 0x0e91, match64: 0x00000000, modelSI: -0x0001, models64: 0x127b0000127f},
			deviceTuple{type64: 0x20d00000213, brand64: 0xd7690000d76f, matchRI: 0x0e95, match64: 0x00000000, modelSI: -0x0001, models64: 0x127f0000128e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd79a0000d79f, matchRI: 0x0ea5, match64: 0x00000000, modelSI: -0x0001, models64: 0x128e00001294},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd7d20000d7d7, matchRI: 0x0eab, match64: 0x00000000, modelSI: -0x0001, models64: 0x12940000129c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd8120000d816, matchRI: 0x0eb0, match64: 0x00000000, modelSI: -0x0001, models64: 0x129c0000129e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd8160000d81b, matchRI: 0x0eb3, match64: 0x00000000, modelSI: -0x0001, models64: 0x129e000012a6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd8680000d86e, matchRI: 0x0eb7, match64: 0x00000000, modelSI: -0x0001, models64: 0x12a6000012b6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd8ce0000d8d4, matchRI: 0x0ec8, match64: 0x00000000, modelSI: -0x0001, models64: 0x12b6000012b9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd8db0000d8e2, matchRI: 0x0ecc, match64: 0x00000000, modelSI: 0x12b9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd8e20000d8e8, matchRI: 0x0ecd, match64: 0x00000000, modelSI: 0x12ba, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd8f30000d8f9, matchRI: 0x0ece, match64: 0x00000000, modelSI: 0x12bb, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xd8f90000d8ff, matchRI: 0x0ecf, match64: 0x00000000, modelSI: 0x12bc, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xd8ff0000d904, matchRI: 0x0ed0, match64: 0x00000000, modelSI: 0x12bd, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd90a0000d916, matchRI: 0x0ed1, match64: 0x00000000, modelSI: -0x0001, models64: 0x12be000012d6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xda0b0000da11, matchRI: 0x0ee7, match64: 0x00000000, modelSI: 0x12d6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xda110000da15, matchRI: 0x0ee8, match64: 0x00000000, modelSI: 0x12d7, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xda150000da1a, matchRI: 0x0ee9, match64: 0x00000000, modelSI: -0x0001, models64: 0x12d8000012da},
			deviceTuple{type64: 0x20d00000213, brand64: 0xda1a0000da1f, matchRI: 0x0eec, match64: 0x00000000, modelSI: -0x0001, models64: 0x12da000012dd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xda300000da37, matchRI: 0x0ef0, match64: 0x00000000, modelSI: -0x0001, models64: 0x12dd0000132b},
			deviceTuple{type64: 0x20d00000213, brand64: 0xdd2d0000dd33, matchRI: 0x0f36, match64: 0x00000000, modelSI: 0x132b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xdd330000dd37, matchRI: 0x0f37, match64: 0x00000000, modelSI: -0x0001, models64: 0x132c00001333},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xdd8f0000dd94, matchRI: 0x0f39, match64: 0x00000000, modelSI: -0x0001, models64: 0x133300001335},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xddab0000ddaf, matchRI: 0x0f3c, match64: 0x00000000, modelSI: -0x0001, models64: 0x133500001336},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0xddaf0000ddb2, matchRI: 0x0f3e, match64: 0x00000000, modelSI: 0x1336, models64: 0x00000000},
			deviceTuple{type64: 0x245f00002467, brand64: 0xddb20000ddb7, matchRI: 0x0f3f, match64: 0x00000000, modelSI: -0x0001, models64: 0x133700001339},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xddb70000ddb9, matchRI: 0x0f42, match64: 0x00000000, modelSI: -0x0001, models64: 0x13390000147d},
			deviceTuple{type64: 0x20d00000213, brand64: 0xe9860000e98c, matchRI: 0x1025, match64: 0x00000000, modelSI: 0x147d, models64: 0x00000000},
			deviceTuple{type64: 0x245f00002467, brand64: 0xe98c0000e992, matchRI: 0x1026, match64: 0x00000000, modelSI: 0x147e, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xe9920000e997, matchRI: -0x0001, match64: 0xe9970000e9a0, modelSI: -0x0001, models64: 0x147f00001480},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xe9b40000e9bd, matchRI: 0x1027, match64: 0x00000000, modelSI: -0x0001, models64: 0x14800000148f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xe9e80000e9eb, matchRI: 0x1036, match64: 0x00000000, modelSI: -0x0001, models64: 0x148f000014b0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xeba30000ebad, matchRI: 0x103a, match64: 0x00000000, modelSI: -0x0001, models64: 0x14b0000014b4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xebcc0000ebd2, matchRI: 0x103e, match64: 0x00000000, modelSI: -0x0001, models64: 0x14b4000014b6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xebe40000ebe9, matchRI: 0x1040, match64: 0x00000000, modelSI: 0x14b6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xebe90000ebee, matchRI: 0x1041, match64: 0x00000000, modelSI: -0x0001, models64: 0x14b7000014c1},
			deviceTuple{type64: 0x20d00000213, brand64: 0xec620000ec66, matchRI: 0x1049, match64: 0x00000000, modelSI: -0x0001, models64: 0x14c1000014d1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xed580000ed5c, matchRI: 0x1055, match64: 0x00000000, modelSI: -0x0001, models64: 0x14d100001515},
			deviceTuple{type64: 0x20d00000213, brand64: 0xef320000ef38, matchRI: 0x1091, match64: 0x00000000, modelSI: -0x0001, models64: 0x151500001519},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xef5a0000ef60, matchRI: 0x1095, match64: 0x00000000, modelSI: 0x1519, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xef600000ef65, matchRI: 0x1096, match64: 0x00000000, modelSI: -0x0001, models64: 0x151a0000152c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xefd90000efe5, matchRI: 0x10a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x152c0000153a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf0c80000f0ce, matchRI: 0x10aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x153a0000154b},
			deviceTuple{type64: 0x20d00000213, brand64: 0xf1710000f178, matchRI: 0x10b8, match64: 0x00000000, modelSI: 0x154b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf1820000f189, matchRI: 0x10b9, match64: 0x00000000, modelSI: -0x0001, models64: 0x154c0000154e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xf1a50000f1ac, matchRI: 0x10bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x154e0000154f},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xf1ac0000f1b0, matchRI: 0x10be, match64: 0x00000000, modelSI: 0x154f, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xf1b00000f1b6, matchRI: 0x10bf, match64: 0x00000000, modelSI: 0x1550, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xf1b60000f1ba, matchRI: 0x10c0, match64: 0x00000000, modelSI: 0x1551, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf1c00000f1c7, matchRI: -0x0001, match64: 0xf1c00000f1c7, modelSI: -0x0001, models64: 0x155200001553},
			deviceTuple{type64: 0x20d00000213, brand64: 0xf1c70000f1cc, matchRI: 0x10c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x155300001556},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf1ee0000f1f4, matchRI: 0x10c4, match64: 0x00000000, modelSI: -0x0001, models64: 0x155600001607},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf9200000f926, matchRI: 0x1155, match64: 0x00000000, modelSI: -0x0001, models64: 0x16070000160e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf9990000f9a0, matchRI: 0x1158, match64: 0x00000000, modelSI: -0x0001, models64: 0x160e00001612},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf9ac0000f9b1, matchRI: 0x115c, match64: 0x00000000, modelSI: 0x1612, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf9b90000f9bf, matchRI: 0x115d, match64: 0x00000000, modelSI: -0x0001, models64: 0x161300001621},
			deviceTuple{type64: 0x20d00000213, brand64: 0xfa4b0000fa53, matchRI: 0x1161, match64: 0x00000000, modelSI: -0x0001, models64: 0x162100001638},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xfc340000fc3c, matchRI: 0x1164, match64: 0x00000000, modelSI: 0x1638, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xfc3c0000fc44, matchRI: 0x1165, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xfc440000fc48, matchRI: -0x0001, match64: 0xfc480000fc52, modelSI: 0x1639, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfc520000fc59, matchRI: 0x1166, match64: 0x00000000, modelSI: -0x0001, models64: 0x163a0000163c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfc590000fc5f, matchRI: 0x1169, match64: 0x00000000, modelSI: 0x163c, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xfc640000fc6a, matchRI: 0x116a, match64: 0x00000000, modelSI: -0x0001, models64: 0x163d0000163f},
			deviceTuple{type64: 0x20d00000213, brand64: 0xfc6a0000fc6f, matchRI: 0x116d, match64: 0x00000000, modelSI: 0x163f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfc780000fc7d, matchRI: 0x116e, match64: 0x00000000, modelSI: -0x0001, models64: 0x164000001646},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfc8e0000fc9e, matchRI: 0x1175, match64: 0x00000000, modelSI: -0x0001, models64: 0x164600001649},
			deviceTuple{type64: 0x20d00000213, brand64: 0xfcc50000fccc, matchRI: 0x1177, match64: 0x00000000, modelSI: -0x0001, models64: 0x164900001678},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfed60000fedb, matchRI: 0x119b, match64: 0x00000000, modelSI: 0x1678, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfedb0000fee2, matchRI: 0x119c, match64: 0x00000000, modelSI: 0x1679, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfee20000fee9, matchRI: 0x119d, match64: 0x00000000, modelSI: 0x167a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfee90000feee, matchRI: 0x119e, match64: 0x00000000, modelSI: -0x0001, models64: 0x167b0000167f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfeff0000ff03, matchRI: 0x11a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x167f00001681},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xff030000ff08, matchRI: 0x11a6, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xff080000ff0f, matchRI: 0x11a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x168100001685},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xff350000ff3b, matchRI: 0x11aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x16850000168f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xff980000ff9e, matchRI: 0x11b0, match64: 0x00000000, modelSI: -0x0001, models64: 0x168f00001692},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xffb40000ffbd, matchRI: 0x11b3, match64: 0x00000000, modelSI: -0x0001, models64: 0x169200001693},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xffca0000ffcf, matchRI: 0x11b4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1693000016ac},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x100e9000100ee, matchRI: 0x11b8, match64: 0x00000000, modelSI: -0x0001, models64: 0x16ac000016b0},
			deviceTuple{type64: 0x20d00000213, brand64: 0x101080001010c, matchRI: 0x11bc, match64: 0x00000000, modelSI: 0x16b0, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1010c0001010f, matchRI: 0x11bd, match64: 0x00000000, modelSI: 0x16b1, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1010f00010113, matchRI: 0x11be, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x101130001011c, matchRI: 0x11bf, match64: 0x00000000, modelSI: -0x0001, models64: 0x16b2000016b7},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x101390001013d, matchRI: 0x11c3, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1013d00010141, matchRI: 0x11c4, match64: 0x00000000, modelSI: -0x0001, models64: 0x16b7000016b9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1014100010144, matchRI: 0x11c7, match64: 0x00000000, modelSI: 0x16b9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1014400010148, matchRI: 0x11c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x16ba000016bc},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x101560001015c, matchRI: 0x11cb, match64: 0x00000000, modelSI: 0x16bc, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1015c00010160, matchRI: 0x11cc, match64: 0x00000000, modelSI: -0x0001, models64: 0x16bd000016bf},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1016000010164, matchRI: 0x11cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x16bf000016c0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1016c00010171, matchRI: 0x11d1, match64: 0x00000000, modelSI: -0x0001, models64: 0x16c0000016c2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1017100010174, matchRI: 0x11d4, match64: 0x00000000, modelSI: -0x0001, models64: 0x16c2000016fe},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x103c5000103c8, matchRI: 0x1211, match64: 0x00000000, modelSI: 0x16fe, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x103c8000103cf, matchRI: 0x1212, match64: 0x00000000, modelSI: 0x16ff, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x103cf000103d2, matchRI: 0x1213, match64: 0x00000000, modelSI: -0x0001, models64: 0x170000001702},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x103da000103dd, matchRI: 0x1215, match64: 0x00000000, modelSI: -0x0001, models64: 0x170200001714},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x104b6000104b9, matchRI: 0x1223, match64: 0x00000000, modelSI: -0x0001, models64: 0x17140000171a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1050300010508, matchRI: -0x0001, match64: 0x105080001050f, modelSI: 0x171a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x105180001051e, matchRI: 0x1228, match64: 0x00000000, modelSI: 0x171b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x105280001052c, matchRI: 0x1229, match64: 0x00000000, modelSI: -0x0001, models64: 0x171c0000171e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1053f00010547, matchRI: 0x122b, match64: 0x00000000, modelSI: -0x0001, models64: 0x171e00001720},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x105590001055f, matchRI: 0x122d, match64: 0x00000000, modelSI: -0x0001, models64: 0x172000001722},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x105720001057a, matchRI: 0x1230, match64: 0x00000000, modelSI: -0x0001, models64: 0x172200001730},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x105d5000105db, matchRI: 0x123d, match64: 0x00000000, modelSI: 0x1730, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x105db000105e0, matchRI: 0x123e, match64: 0x00000000, modelSI: 0x1731, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x105e0000105e4, matchRI: 0x123f, match64: 0x00000000, modelSI: -0x0001, models64: 0x173200001734},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x105e4000105f4, matchRI: 0x1242, match64: 0x00000000, modelSI: -0x0001, models64: 0x17340000173e},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x106750001067b, matchRI: 0x1245, match64: 0x00000000, modelSI: 0x173e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1067b0001067f, matchRI: 0x1246, match64: 0x00000000, modelSI: 0x173f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1067f00010686, matchRI: 0x1247, match64: 0x00000000, modelSI: -0x0001, models64: 0x174000001742},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1068b00010691, matchRI: 0x124a, match64: 0x00000000, modelSI: 0x1742, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1069100010697, matchRI: 0x124b, match64: 0x00000000, modelSI: -0x0001, models64: 0x174300001745},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1069c000106a3, matchRI: 0x124e, match64: 0x00000000, modelSI: -0x0001, models64: 0x174500001750},
			deviceTuple{type64: 0x20d00000213, brand64: 0x106f900010701, matchRI: 0x1259, match64: 0x00000000, modelSI: 0x1750, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1070f00010719, matchRI: 0x125a, match64: 0x00000000, modelSI: -0x0001, models64: 0x175100001753},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1071900010724, matchRI: 0x125d, match64: 0x00000000, modelSI: 0x1753, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x107240001072a, matchRI: 0x125e, match64: 0x00000000, modelSI: -0x0001, models64: 0x175400001757},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x107460001074c, matchRI: 0x1261, match64: 0x00000000, modelSI: -0x0001, models64: 0x17570000175c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1076b00010772, matchRI: 0x1266, match64: 0x00000000, modelSI: 0x175c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1077200010779, matchRI: 0x1267, match64: 0x00000000, modelSI: -0x0001, models64: 0x175d00001761},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x107880001078f, matchRI: 0x126b, match64: 0x00000000, modelSI: -0x0001, models64: 0x176100001764},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x107940001079b, matchRI: 0x126f, match64: 0x00000000, modelSI: -0x0001, models64: 0x176400001775},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1088c00010890, matchRI: 0x127a, match64: 0x00000000, modelSI: -0x0001, models64: 0x177500001778},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x10897000108a1, matchRI: 0x127e, match64: 0x00000000, modelSI: -0x0001, models64: 0x177800001779},
			deviceTuple{type64: 0x20d00000213, brand64: 0x108a7000108ac, matchRI: 0x1280, match64: 0x00000000, modelSI: -0x0001, models64: 0x177900001783},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x109880001098e, matchRI: 0x1287, match64: 0x00000000, modelSI: -0x0001, models64: 0x178300001791},
			deviceTuple{type64: 0x20d00000213, brand64: 0x109f1000109f9, matchRI: 0x1296, match64: 0x00000000, modelSI: -0x0001, models64: 0x1791000017d4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x10e8b00010e91, matchRI: 0x12d7, match64: 0x00000000, modelSI: -0x0001, models64: 0x17d4000017db},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x10ea200010ea9, matchRI: 0x12df, match64: 0x00000000, modelSI: -0x0001, models64: 0x17db000017e2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x10ee100010ee6, matchRI: 0x12e5, match64: 0x00000000, modelSI: -0x0001, models64: 0x17e2000017ed},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x10ef100010ef6, matchRI: 0x12f1, match64: 0x00000000, modelSI: -0x0001, models64: 0x17ed00001818},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x10fad00010fb4, matchRI: 0x131c, match64: 0x00000000, modelSI: -0x0001, models64: 0x18180000181b},
			deviceTuple{type64: 0x20d00000213, brand64: 0x10fcf00010fd4, matchRI: 0x1320, match64: 0x00000000, modelSI: -0x0001, models64: 0x181b0000181f},
			deviceTuple{type64: 0x245f00002467, brand64: 0x1100a0001100e, matchRI: 0x1325, match64: 0x00000000, modelSI: -0x0001, models64: 0x181f00001822},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1101e00011023, matchRI: 0x1327, match64: 0x00000000, modelSI: -0x0001, models64: 0x182200001826},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x110440001104c, matchRI: 0x132c, match64: 0x00000000, modelSI: -0x0001, models64: 0x182600001864},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1160000011f, matchRI: 0x1358, match64: 0x00000000, modelSI: -0x0001, models64: 0x186400001882},
			deviceTuple{type64: 0x20d00000213, brand64: 0x114f2000114fb, matchRI: 0x1367, match64: 0x00000000, modelSI: -0x0001, models64: 0x188200001884},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x115160001151b, matchRI: 0x1369, match64: 0x00000000, modelSI: -0x0001, models64: 0x18840000188f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x10ed600010eda, matchRI: 0x1375, match64: 0x00000000, modelSI: -0x0001, models64: 0x188f00001894},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1159200011597, matchRI: 0x137a, match64: 0x00000000, modelSI: -0x0001, models64: 0x189400001897},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x115bd000115c0, matchRI: 0x137e, match64: 0x00000000, modelSI: -0x0001, models64: 0x18970000189a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x115f4000115f9, matchRI: 0x1381, match64: 0x00000000, modelSI: -0x0001, models64: 0x189a000018a0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1162b00011630, matchRI: 0x1386, match64: 0x00000000, modelSI: -0x0001, models64: 0x18a0000018a3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1164f00011653, matchRI: 0x1389, match64: 0x00000000, modelSI: -0x0001, models64: 0x18a3000018a7},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x116620001166c, matchRI: 0x138e, match64: 0x00000000, modelSI: -0x0001, models64: 0x18a7000018aa},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1166c00011672, matchRI: 0x1392, match64: 0x00000000, modelSI: 0x18aa, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1167200011678, matchRI: 0x1393, match64: 0x00000000, modelSI: -0x0001, models64: 0x18ab000018ad},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x116860001168d, matchRI: 0x1395, match64: 0x00000000, modelSI: -0x0001, models64: 0x18ad000018af},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x116a5000116ad, matchRI: 0x1398, match64: 0x00000000, modelSI: -0x0001, models64: 0x18af000018b3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x116c7000116ce, matchRI: 0x139b, match64: 0x00000000, modelSI: -0x0001, models64: 0x18b3000018ed},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x119750001197e, matchRI: 0x13a8, match64: 0x00000000, modelSI: -0x0001, models64: 0x18ed0000190a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11b2f00011b3d, matchRI: 0x13bc, match64: 0x00000000, modelSI: 0x190a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11b4900011b50, matchRI: 0x13bd, match64: 0x00000000, modelSI: -0x0001, models64: 0x190b0000191a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11c3e00011c46, matchRI: 0x13bf, match64: 0x00000000, modelSI: 0x191a, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x11c4600011c4a, matchRI: 0x13c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x191b0000191c},
			deviceTuple{type64: 0x245f00002467, brand64: 0x11c4a00011c50, matchRI: 0x13c2, match64: 0x00000000, modelSI: 0x191c, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x11c5b00011c62, matchRI: 0x13c3, match64: 0x00000000, modelSI: -0x0001, models64: 0x191d00001923},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11c9a00011c9f, matchRI: -0x0001, match64: 0x11c9a00011c9f, modelSI: -0x0001, models64: 0x192300001925},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11c9f00011ca7, matchRI: 0x13cb, match64: 0x00000000, modelSI: -0x0001, models64: 0x192500001926},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11cb300011cb8, matchRI: 0x13cc, match64: 0x00000000, modelSI: 0x1926, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11cb800011cc0, matchRI: 0x13cd, match64: 0x00000000, modelSI: -0x0001, models64: 0x1927000019da},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x124f6000124fb, matchRI: 0x1466, match64: 0x00000000, modelSI: -0x0001, models64: 0x19da000019dd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1250000012507, matchRI: 0x1469, match64: 0x00000000, modelSI: -0x0001, models64: 0x19dd000019de},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x125070001250c, matchRI: 0x146b, match64: 0x00000000, modelSI: -0x0001, models64: 0x19de000019e0},
			deviceTuple{type64: 0x20d00000213, brand64: 0x125170001251c, matchRI: 0x146e, match64: 0x00000000, modelSI: -0x0001, models64: 0x19e0000019e5},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1253100012539, matchRI: 0x1474, match64: 0x00000000, modelSI: 0x19e5, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1253900012543, matchRI: 0x1475, match64: 0x00000000, modelSI: -0x0001, models64: 0x19e600001a03},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1264600012651, matchRI: 0x1490, match64: 0x00000000, modelSI: 0x1a03, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1265100012657, matchRI: 0x1491, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a0400001a07},
			deviceTuple{type64: 0x20d00000213, brand64: 0x126920001269a, matchRI: 0x1494, match64: 0x00000000, modelSI: 0x1a07, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1269a000126a1, matchRI: 0x1495, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a0800001a30},
			deviceTuple{type64: 0x20d00000213, brand64: 0x128a7000128ac, matchRI: 0x14b0, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a3000001a33},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x128bc000128c2, matchRI: -0x0001, match64: 0x128c2000128c9, modelSI: -0x0001, models64: 0x1a3300001a36},
			deviceTuple{type64: 0x20d00000213, brand64: 0x128e8000128ee, matchRI: 0x14b5, match64: 0x00000000, modelSI: 0x1a36, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x128ee000128f4, matchRI: 0x14b6, match64: 0x00000000, modelSI: 0x1a37, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x128f4000128f9, matchRI: 0x14b7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a3800001a3f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1294300012948, matchRI: 0x14bb, match64: 0x00000000, modelSI: 0x1a3f, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x129480001294f, matchRI: 0x14bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a4000001a42},
			deviceTuple{type64: 0x20d00000213, brand64: 0x129550001295a, matchRI: 0x14bf, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a4200001a44},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x129780001297b, matchRI: 0x14c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a4400001a51},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x12a1700012a1b, matchRI: 0x14ce, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a5100001a52},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x12a2000012a26, matchRI: 0x14d0, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a5200001a55},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x12a4800012a4d, matchRI: 0x14d2, match64: 0x00000000, modelSI: 0x1a55, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12a4d00012a51, matchRI: 0x14d3, match64: 0x00000000, modelSI: 0x1a56, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x12a5100012a5a, matchRI: 0x14d4, match64: 0x00000000, modelSI: 0x1a57, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12a5a00012a5d, matchRI: 0x14d5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a5800001a5f},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x12a9f00012aa4, matchRI: 0x14db, match64: 0x00000000, modelSI: 0x1a5f, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12aa400012aab, matchRI: -0x0001, match64: 0x12aa400012aab, modelSI: -0x0001, models64: 0x1a6000001a62},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12ac800012acb, matchRI: 0x14dc, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a6200001a76},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12b6f00012b74, matchRI: 0x14ec, match64: 0x00000000, modelSI: 0x1a76, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12b8200012b86, matchRI: 0x14ed, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a7700001a7b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12bae00012bb2, matchRI: 0x14f2, match64: 0x00000000, modelSI: 0x1a7b, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x12bb200012bba, matchRI: 0x14f3, match64: 0x00000000, modelSI: 0x1a7c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12bc700012bd1, matchRI: 0x14f4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a7d00001a8a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12c1e00012c28, matchRI: 0x14f9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a8a00001aa2},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12d1600012d1a, matchRI: 0x14fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x1aa200001aa8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12d9b00012da0, matchRI: 0x1500, match64: 0x00000000, modelSI: -0x0001, models64: 0x1aa800001aa9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12da000012dab, matchRI: 0x1502, match64: 0x00000000, modelSI: -0x0001, models64: 0x1aa900001aab},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x12db600012dbe, matchRI: 0x1505, match64: 0x00000000, modelSI: 0x1aab, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12dbe00012dc5, matchRI: 0x1506, match64: 0x00000000, modelSI: -0x0001, models64: 0x1aac00001ab1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12e1e00012e25, matchRI: 0x1507, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ab100001ab2},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12e3600012e3e, matchRI: 0x1508, match64: 0x00000000, modelSI: 0x1ab2, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12e3e00012e45, matchRI: 0x1509, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ab300001ab8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12e5f00012e64, matchRI: 0x150f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ab800001ace},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12f8100012f87, matchRI: 0x1525, match64: 0x00000000, modelSI: 0x1ace, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12f8700012f90, matchRI: 0x1526, match64: 0x00000000, modelSI: 0x1acf, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12f9000012f96, matchRI: 0x1527, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ad000001ad4},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1189200011895, matchRI: 0x152b, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12faa00012fb0, matchRI: 0x152c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ad400001ad7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12fb200012fb7, matchRI: 0x1530, match64: 0x00000000, modelSI: 0x1ad7, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12fb700012fbe, matchRI: 0x1531, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ad800001adb},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x12fe600012fed, matchRI: -0x0001, match64: 0x12fed00012ff3, modelSI: -0x0001, models64: 0x1adb00001adc},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12ffe00013004, matchRI: 0x1534, match64: 0x00000000, modelSI: 0x1adc, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1300c00013014, matchRI: -0x0001, match64: 0x1301400013018, modelSI: -0x0001, models64: 0x1add00001ade},
			deviceTuple{type64: 0x20d00000213, brand64: 0x130180001301e, matchRI: 0x1536, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ade00001adf},
			deviceTuple{type64: 0x245f00002467, brand64: 0x1301e00013029, matchRI: 0x1538, match64: 0x00000000, modelSI: 0x1adf, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1302900013033, matchRI: 0x1539, match64: 0x00000000, modelSI: 0x1ae0, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1303300013039, matchRI: 0x153a, match64: 0x00000000, modelSI: 0x1ae1, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1303900013040, matchRI: 0x153b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ae200001ae5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1307f00013085, matchRI: 0x153c, match64: 0x00000000, modelSI: 0x1ae5, models64: 0x00000000},
			deviceTuple{type64: 0x940000009f, brand64: 0x130850001308b, matchRI: 0x153d, match64: 0x00000000, modelSI: 0x1ae6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1308b00013092, matchRI: 0x153e, match64: 0x00000000, modelSI: 0x1ae7, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1309200013096, matchRI: 0x153f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ae800001aea},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x130960001309c, matchRI: 0x1542, match64: 0x00000000, modelSI: -0x0001, models64: 0x1aea00001aec},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1309c000130a4, matchRI: 0x1545, match64: 0x00000000, modelSI: -0x0001, models64: 0x1aec00001afb},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1319200013199, matchRI: 0x1547, match64: 0x00000000, modelSI: 0x1afb, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x13199000131a0, matchRI: 0x1548, match64: 0x00000000, modelSI: -0x0001, models64: 0x1afc00001afd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x131a0000131a5, matchRI: -0x0001, match64: 0x131a5000131aa, modelSI: -0x0001, models64: 0x1afd00001aff},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x131aa000131af, matchRI: 0x154c, match64: 0x00000000, modelSI: 0x1aff, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x131af000131b5, matchRI: 0x154d, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b0000001b04},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x131b5000131ba, matchRI: 0x1552, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b0400001b52},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x134890001348d, matchRI: 0x1584, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b5200001b87},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1360c00013610, matchRI: 0x15b9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b8700001b8e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1361e00013625, matchRI: -0x0001, match64: 0x136250001362d, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1362d00013636, matchRI: 0x15c1, match64: 0x00000000, modelSI: 0x1b8e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1364400013647, matchRI: 0x15c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b8f00001b95},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1366500013672, matchRI: 0x15c9, match64: 0x00000000, modelSI: 0x1b95, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1367200013676, matchRI: 0x15ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b9600001b98},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1367c00013681, matchRI: 0x15cd, match64: 0x00000000, modelSI: 0x1b98, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1368100013686, matchRI: -0x0001, match64: 0x1368100013686, modelSI: -0x0001, models64: 0x1b9900001b9a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x136860001368b, matchRI: 0x15cf, match64: 0x00000000, modelSI: 0x1b9a, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x136970001369f, matchRI: 0x15d0, match64: 0x00000000, modelSI: 0x1b9b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1369f000136a4, matchRI: 0x15d1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b9c00001bcf},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x138f5000138f9, matchRI: 0x15dc, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bcf00001bd2},
			deviceTuple{type64: 0x20d00000213, brand64: 0x138fd00013903, matchRI: 0x15e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bd200001bd9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1398e00013990, matchRI: 0x15e4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bd900001be3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x139dd000139df, matchRI: 0x15ef, match64: 0x00000000, modelSI: -0x0001, models64: 0x1be300001be8},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x139df000139e4, matchRI: 0x15f5, match64: 0x00000000, modelSI: 0x1be8, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x139e4000139e9, matchRI: 0x15f6, match64: 0x00000000, modelSI: 0x1be9, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x139e9000139ed, matchRI: 0x15f7, match64: 0x00000000, modelSI: 0x1bea, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x139ed000139f1, matchRI: 0x15f8, match64: 0x00000000, modelSI: -0x0001, models64: 0x1beb00001bed},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x139fd00013a01, matchRI: 0x15fa, match64: 0x00000000, modelSI: 0x1bed, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x13a0100013a05, matchRI: 0x15fb, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bee00001bf0},
			deviceTuple{type64: 0x20d00000213, brand64: 0x13a0d00013a10, matchRI: 0x15fd, match64: 0x00000000, modelSI: 0x1bf0, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x13a1000013a19, matchRI: 0x15fe, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bf100001bfe},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x13af000013af4, matchRI: 0x1602, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bfe00001cf1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x141670001416c, matchRI: 0x16d5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cf100001cf4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1417f00014183, matchRI: 0x16d7, match64: 0x00000000, modelSI: 0x1cf4, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1418300014188, matchRI: -0x0001, match64: 0x1418300014188, modelSI: -0x0001, models64: 0x1cf500001cf9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x141ad000141b2, matchRI: 0x16da, match64: 0x00000000, modelSI: 0x1cf9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x141b2000141b6, matchRI: 0x16db, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cfa00001cfc},
			deviceTuple{type64: 0x20d00000213, brand64: 0x141bd000141c3, matchRI: 0x16de, match64: 0x00000000, modelSI: 0x1cfc, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x141c3000141c9, matchRI: 0x16df, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cfd00001cff},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x141d3000141d7, matchRI: 0x16e1, match64: 0x00000000, modelSI: 0x1cff, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x141d7000141da, matchRI: 0x16e2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d0000001d11},
			deviceTuple{type64: 0x20d00000213, brand64: 0x142360001423d, matchRI: 0x16f4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d1100001d13},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1425d00014261, matchRI: 0x16f7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d1300001d4f},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1470000014702, matchRI: 0x170c, match64: 0x00000000, modelSI: 0x1d4f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1470b00014711, matchRI: 0x170d, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d5000001d53},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x147250001472a, matchRI: 0x1711, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d5300001d55},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1473c00014740, matchRI: -0x0001, match64: 0x1474000014745, modelSI: -0x0001, models64: 0x1d5500001d56},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1474d00014752, matchRI: 0x1714, match64: 0x00000000, modelSI: 0x1d56, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1475200014757, matchRI: 0x1715, match64: 0x00000000, modelSI: 0x1d57, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1475f00014766, matchRI: 0x1716, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d5800001d59},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1476a0001476e, matchRI: 0x1718, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d5900001d70},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x148c8000148d0, matchRI: 0x172a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d7000001d73},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1490100014908, matchRI: 0x172d, match64: 0x00000000, modelSI: 0x1d73, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x149080001490f, matchRI: 0x172e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d7400001daa},
			deviceTuple{type64: 0x20d00000213, brand64: 0x14a3f00014a43, matchRI: 0x1764, match64: 0x00000000, modelSI: -0x0001, models64: 0x1daa00001dad},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14a4f00014a54, matchRI: 0x1768, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dad00001daf},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14a5400014a59, matchRI: -0x0001, match64: 0x14a5900014a61, modelSI: 0x1daf, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14a6100014a6b, matchRI: 0x176b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1db000001db4},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x14ad200014ad9, matchRI: 0x176c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1db400001dbc},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14b4400014b4a, matchRI: 0x1772, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dbc00001dbf},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14b7800014b7e, matchRI: 0x1774, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dbf00001dc3},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x14b8600014b8c, matchRI: 0x1779, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dc300001dc4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14b9b00014ba1, matchRI: 0x177a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dc400001dd4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14c7500014c7a, matchRI: 0x1781, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dd400001ddb},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x14cca00014cd0, matchRI: 0x1782, match64: 0x00000000, modelSI: 0x1ddb, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x14cd000014cd8, matchRI: 0x1783, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ddc00001ddd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14cd800014ce1, matchRI: 0x1785, match64: 0x00000000, modelSI: 0x1ddd, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1158d00011592, matchRI: 0x1786, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dde00001de0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14cea00014cee, matchRI: 0x1789, match64: 0x00000000, modelSI: -0x0001, models64: 0x1de000001de5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14cf600014cfd, matchRI: 0x178e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1de500001df2},
			deviceTuple{type64: 0x20d00000213, brand64: 0x14d2400014d2b, matchRI: 0x179b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1df200001dfb},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14d9800014d9c, matchRI: -0x0001, match64: 0x14d9c00014da4, modelSI: 0x1dfb, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14da400014da8, matchRI: 0x17a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dfc00001dfe},
			deviceTuple{type64: 0x20d00000213, brand64: 0x14db300014dba, matchRI: 0x17a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dfe00001e0c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x14e2800014e2c, matchRI: 0x17af, match64: 0x00000000, modelSI: 0x1e0c, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x14e3200014e39, matchRI: 0x17b0, match64: 0x00000000, modelSI: 0x1e0d, models64: 0x00000000},
			deviceTuple{type64: 0xb1700000b1e, brand64: 0x14e3900014e3d, matchRI: 0x17b1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e0e00001e11},
			deviceTuple{type64: 0x20d00000213, brand64: 0x14e5c00014e62, matchRI: 0x17b5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e1100001e12},
			deviceTuple{type64: 0x20d00000213, brand64: 0x14e6a00014e72, matchRI: -0x0001, match64: 0x14e7200014e7f, modelSI: 0x1e12, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14e8c00014e91, matchRI: 0x17b7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e1300001e1a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14efa00014efd, matchRI: 0x17ba, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e1a00001e1b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14efd00014f0a, matchRI: 0x17bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e1b00001e1d},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x14f0a00014f0e, matchRI: 0x17bf, match64: 0x00000000, modelSI: 0x1e1d, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x14f0e00014f15, matchRI: 0x17c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e1e00001e21},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14f3a00014f3e, matchRI: 0x17c3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e2100001e42},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14fe000014fe6, matchRI: 0x17e2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e4200001e44},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14fef00014ff3, matchRI: 0x17e5, match64: 0x00000000, modelSI: 0x1e44, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14ff300014ff8, matchRI: 0x17e6, match64: 0x00000000, modelSI: 0x1e45, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14ff800014ffd, matchRI: 0x17e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e4600001e49},
			deviceTuple{type64: 0x20d00000213, brand64: 0x150000001500c, matchRI: 0x17eb, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e4900001e4e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1505f00015066, matchRI: -0x0001, match64: 0x1506600015070, modelSI: 0x1e4e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x150760001507a, matchRI: 0x17ed, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e4f00001e55},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x150950001509c, matchRI: -0x0001, match64: 0x1509c000150a3, modelSI: -0x0001, models64: 0x1e5500001e56},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x150a3000150ac, matchRI: 0x17f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e5600001e6c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x151680001516c, matchRI: 0x1806, match64: 0x00000000, modelSI: 0x1e6c, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1516c00015175, matchRI: 0x1807, match64: 0x00000000, modelSI: 0x1e6d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x151750001517c, matchRI: 0x1808, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e6e00001e79},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x151b8000151c5, matchRI: 0x1810, match64: 0x00000000, modelSI: 0x1e79, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x151c5000151d3, matchRI: 0x1811, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e7a00001e7c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x151e1000151e7, matchRI: 0x1813, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e7c00001e7e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1520f00015215, matchRI: 0x1814, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e7e00001e85},
			deviceTuple{type64: 0x20d00000213, brand64: 0x152390001523e, matchRI: 0x181a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8500001e87},
			deviceTuple{type64: 0x20d00000213, brand64: 0x152620001526b, matchRI: 0x181b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8700001e8d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x152980001529e, matchRI: -0x0001, match64: 0x152980001529e, modelSI: -0x0001, models64: 0x1e8d00001e90},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x152db000152e2, matchRI: 0x1822, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e9000001e94},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1530000015306, matchRI: 0x1827, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e9400001e9a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1532200015329, matchRI: 0x182d, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e9a00001eae},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x153a7000153af, matchRI: 0x1841, match64: 0x00000000, modelSI: -0x0001, models64: 0x1eae00001eb3},
			deviceTuple{type64: 0x20d00000213, brand64: 0x153c8000153cc, matchRI: 0x1847, match64: 0x00000000, modelSI: -0x0001, models64: 0x1eb300001eb6},
			deviceTuple{type64: 0x245f00002467, brand64: 0x153d5000153d9, matchRI: 0x184a, match64: 0x00000000, modelSI: 0x1eb6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x153d9000153e0, matchRI: 0x184b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1eb700001ebf},
			deviceTuple{type64: 0x20d00000213, brand64: 0x153fe0001540f, matchRI: 0x1852, match64: 0x00000000, modelSI: 0x1ebf, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1540f00015415, matchRI: 0x1853, match64: 0x00000000, modelSI: 0x1ec0, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x154200001542a, matchRI: 0x1854, match64: 0x00000000, modelSI: 0x1ec1, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1542a0001542f, matchRI: 0x1855, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ec200001ed0},
			deviceTuple{type64: 0x20d00000213, brand64: 0x154bb000154cb, matchRI: 0x185e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ed000001ed2},
			deviceTuple{type64: 0x20d00000213, brand64: 0x154d4000154db, matchRI: 0x1861, match64: 0x00000000, modelSI: 0x1ed2, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x154db000154e1, matchRI: 0x1862, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ed300001ed6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x155160001551a, matchRI: 0x1864, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ed600001ede},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1557a00015583, matchRI: 0x1865, match64: 0x00000000, modelSI: 0x1ede, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1558300015588, matchRI: 0x1866, match64: 0x00000000, modelSI: 0x1edf, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1558800015592, matchRI: 0x1867, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ee000001ee7},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x155c0000155cc, matchRI: -0x0001, match64: 0x155cc000155d0, modelSI: -0x0001, models64: 0x1ee700001ee8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x155d0000155dd, matchRI: 0x186f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ee800001ef5},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1570300015708, matchRI: 0x1874, match64: 0x00000000, modelSI: 0x1ef5, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1570800015711, matchRI: 0x1875, match64: 0x00000000, modelSI: 0x1ef6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1571100015719, matchRI: 0x1876, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ef700001f19},
			deviceTuple{type64: 0x940000009f, brand64: 0x158b4000158bc, matchRI: 0x1880, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x158bc000158c3, matchRI: 0x1881, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f1900001f1b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x158c3000158cb, matchRI: 0x1884, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f1b00001f42},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x15a8900015a8d, matchRI: 0x189e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f4200001f44},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x15a8d00015a93, matchRI: -0x0001, match64: 0x15a9300015a9c, modelSI: 0x1f44, models64: 0x00000000},
			deviceTuple{type64: 0x940000009f, brand64: 0x15a9c00015aa3, matchRI: -0x0001, match64: 0x15aa300015ac2, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x15ac200015aca, matchRI: 0x18a1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f4500001f4f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x15b2f00015b3b, matchRI: 0x18a5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f4f00001f5f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xe34b0000e352, matchRI: 0x18b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f5f00001f60},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x15bd600015bdc, matchRI: 0x18b7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f6000001f69},
			deviceTuple{type64: 0x20d00000213, brand64: 0x15c4d00015c56, matchRI: 0x18b9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f6900001fb3},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1618d00016195, matchRI: 0x18ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fb300001fb5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x161a5000161ab, matchRI: 0x18cd, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fb500001fc0},
			deviceTuple{type64: 0x20d00000213, brand64: 0x161f1000161f7, matchRI: 0x18d9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fc000001fc7},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1624e00016255, matchRI: 0x18db, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fc700001fc9},
			deviceTuple{type64: 0x20d00000213, brand64: 0x162550001625c, matchRI: 0x18de, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fc900001fcb},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1626700016270, matchRI: 0x18e1, match64: 0x00000000, modelSI: 0x1fcb, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1627000016277, matchRI: 0x18e2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fcc00001fcf},
			deviceTuple{type64: 0x940000009f, brand64: 0x1628c00016293, matchRI: 0x18e5, match64: 0x00000000, modelSI: 0x1fcf, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x162930001629b, matchRI: 0x18e6, match64: 0x00000000, modelSI: 0x1fd0, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1629b000162a0, matchRI: 0x18e7, match64: 0x00000000, modelSI: 0x1fd1, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x162a0000162a6, matchRI: -0x0001, match64: 0x162a6000162ae, modelSI: -0x0001, models64: 0x1fd200001fd3},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x162ae000162b3, matchRI: 0x18e8, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x162b3000162ba, matchRI: 0x18e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fd300001fd4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x162ba000162c0, matchRI: 0x18eb, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fd400001fd6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x162c8000162cb, matchRI: 0x18ed, match64: 0x00000000, modelSI: 0x1fd6, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x162cb000162d0, matchRI: 0x18ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fd700001fd8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x162d0000162d7, matchRI: 0x18f0, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fd80000200c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1653c00016541, matchRI: 0x1906, match64: 0x00000000, modelSI: -0x0001, models64: 0x200c0000200d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x165470001654d, matchRI: 0x1908, match64: 0x00000000, modelSI: -0x0001, models64: 0x200d00002025},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1668600016691, matchRI: 0x190f, match64: 0x00000000, modelSI: -0x0001, models64: 0x20250000202c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x166da000166de, matchRI: 0x1916, match64: 0x00000000, modelSI: 0x202c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x166de000166e5, matchRI: 0x1917, match64: 0x00000000, modelSI: -0x0001, models64: 0x202d00002036},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1671f00016725, matchRI: 0x1921, match64: 0x00000000, modelSI: 0x2036, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1672500016729, matchRI: 0x1922, match64: 0x00000000, modelSI: -0x0001, models64: 0x20370000203a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x167340001673b, matchRI: -0x0001, match64: 0x1673b0001674a, modelSI: 0x203a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x50380000503d, matchRI: 0x1926, match64: 0x00000000, modelSI: -0x0001, models64: 0x203b0000203c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x167560001675c, matchRI: 0x1927, match64: 0x00000000, modelSI: -0x0001, models64: 0x203c0000203d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1676100016765, matchRI: 0x1929, match64: 0x00000000, modelSI: -0x0001, models64: 0x203d00002042},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1678200016787, matchRI: 0x192f, match64: 0x00000000, modelSI: -0x0001, models64: 0x204200002047},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x167bb000167bf, matchRI: 0x1931, match64: 0x00000000, modelSI: 0x2047, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x167c5000167d0, matchRI: 0x1932, match64: 0x00000000, modelSI: -0x0001, models64: 0x204800002056},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x168b1000168b4, matchRI: 0x193b, match64: 0x00000000, modelSI: 0x2056, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x168c0000168c5, matchRI: 0x193c, match64: 0x00000000, modelSI: 0x2057, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x168c5000168c8, matchRI: 0x193d, match64: 0x00000000, modelSI: -0x0001, models64: 0x20580000206f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x169b1000169b8, matchRI: 0x194c, match64: 0x00000000, modelSI: -0x0001, models64: 0x206f00002070},
			deviceTuple{type64: 0x940000009f, brand64: 0x169c6000169ca, matchRI: 0x194d, match64: 0x00000000, modelSI: 0x2070, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x169ca000169d4, matchRI: 0x194e, match64: 0x00000000, modelSI: -0x0001, models64: 0x207100002073},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x169eb000169f2, matchRI: 0x1950, match64: 0x00000000, modelSI: -0x0001, models64: 0x207300002077},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x16a1900016a1e, matchRI: 0x1951, match64: 0x00000000, modelSI: -0x0001, models64: 0x20770000207c},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x16a4000016a49, matchRI: 0x1955, match64: 0x00000000, modelSI: 0x207c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x16a4900016a4e, matchRI: 0x1956, match64: 0x00000000, modelSI: 0x207d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x16a4e00016a56, matchRI: 0x1957, match64: 0x00000000, modelSI: -0x0001, models64: 0x207e0000207f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x16a6e00016a73, matchRI: -0x0001, match64: 0x16a7300016a7a, modelSI: 0x207f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x16a7a00016a7f, matchRI: 0x1958, match64: 0x00000000, modelSI: 0x2080, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x16a7f00016a86, matchRI: 0x1959, match64: 0x00000000, modelSI: -0x0001, models64: 0x208100002084},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x16a9400016a9a, matchRI: 0x195d, match64: 0x00000000, modelSI: -0x0001, models64: 0x208400002107},
			deviceTuple{type64: 0x20d00000213, brand64: 0x16ece00016ed5, matchRI: 0x19ac, match64: 0x00000000, modelSI: 0x2107, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x16ed500016edc, matchRI: 0x19ad, match64: 0x00000000, modelSI: 0x2108, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x16edc00016ee2, matchRI: 0x19ae, match64: 0x00000000, modelSI: -0x0001, models64: 0x21090000210a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x16ef200016ef8, matchRI: 0x19b0, match64: 0x00000000, modelSI: -0x0001, models64: 0x210a0000210d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x16f1f00016f25, matchRI: 0x19b1, match64: 0x00000000, modelSI: -0x0001, models64: 0x210d00002121},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x170750001707b, matchRI: 0x19b8, match64: 0x00000000, modelSI: 0x2121, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1707b00017081, matchRI: 0x19b9, match64: 0x00000000, modelSI: -0x0001, models64: 0x212200002123},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1708500017089, matchRI: 0x19bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x212300002125},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1709d000170a6, matchRI: 0x19bd, match64: 0x00000000, modelSI: -0x0001, models64: 0x212500002126},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x170ae000170b3, matchRI: -0x0001, match64: 0x170b3000170b9, modelSI: -0x0001, models64: 0x212600002127},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x170c9000170d2, matchRI: 0x19be, match64: 0x00000000, modelSI: 0x2127, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x170d6000170db, matchRI: 0x19bf, match64: 0x00000000, modelSI: 0x2128, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x170db000170e1, matchRI: 0x19c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x21290000212b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x170ed000170f5, matchRI: 0x19c3, match64: 0x00000000, modelSI: 0x212b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x170fa00017101, matchRI: 0x19c4, match64: 0x00000000, modelSI: -0x0001, models64: 0x212c0000212d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1710100017105, matchRI: 0x19c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x212d00002132},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1715100017157, matchRI: 0x19ca, match64: 0x00000000, modelSI: 0x2132, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1715700017160, matchRI: -0x0001, match64: 0x1716000017173, modelSI: 0x2133, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1717c00017184, matchRI: 0x19cb, match64: 0x00000000, modelSI: 0x2134, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1718400017189, matchRI: 0x19cc, match64: 0x00000000, modelSI: -0x0001, models64: 0x213500002138},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1719c000171a0, matchRI: 0x19cd, match64: 0x00000000, modelSI: -0x0001, models64: 0x21380000213b},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x171ce000171d5, matchRI: 0x19ce, match64: 0x00000000, modelSI: -0x0001, models64: 0x213b0000213e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x171f0000171f9, matchRI: 0x19d2, match64: 0x00000000, modelSI: 0x213e, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1720000017205, matchRI: 0x19d3, match64: 0x00000000, modelSI: 0x213f, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x172050001720d, matchRI: 0x19d4, match64: 0x00000000, modelSI: -0x0001, models64: 0x214000002145},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1722f00017237, matchRI: 0x19da, match64: 0x00000000, modelSI: -0x0001, models64: 0x214500002148},
			deviceTuple{type64: 0x20d00000213, brand64: 0x172490001724f, matchRI: -0x0001, match64: 0x172490001724f, modelSI: -0x0001, models64: 0x21480000214a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1725f00017266, matchRI: 0x19dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x214a0000214c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1726b00017274, matchRI: 0x19df, match64: 0x00000000, modelSI: -0x0001, models64: 0x214c0000214d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x172740001727a, matchRI: 0x19e1, match64: 0x00000000, modelSI: -0x0001, models64: 0x214d0000214e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1728500017289, matchRI: 0x19e3, match64: 0x00000000, modelSI: -0x0001, models64: 0x214e00002152},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x172960001729b, matchRI: 0x19e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x215200002155},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x172a7000172ab, matchRI: -0x0001, match64: 0x172ab000172b6, modelSI: 0x2155, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x172b6000172ba, matchRI: 0x19e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x215600002158},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x172ba000172c0, matchRI: 0x19ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x21580000215a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x172c0000172c5, matchRI: 0x19ef, match64: 0x00000000, modelSI: -0x0001, models64: 0x215a0000215b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x172c5000172c9, matchRI: -0x0001, match64: 0x172c9000172d0, modelSI: -0x0001, models64: 0x215b0000215d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x172e1000172e6, matchRI: 0x19f1, match64: 0x00000000, modelSI: 0x215d, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x172e6000172eb, matchRI: 0x19f2, match64: 0x00000000, modelSI: 0x215e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x172eb000172f3, matchRI: 0x19f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x215f00002163},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1730b0001730e, matchRI: 0x19f8, match64: 0x00000000, modelSI: -0x0001, models64: 0x21630000217e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1742300017427, matchRI: 0x1a13, match64: 0x00000000, modelSI: 0x217e, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1742a00017436, matchRI: -0x0001, match64: 0x174360001743f, modelSI: -0x0001, models64: 0x217f00002180},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1743f00017442, matchRI: 0x1a15, match64: 0x00000000, modelSI: 0x2180, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x174420001744c, matchRI: 0x1a16, match64: 0x00000000, modelSI: -0x0001, models64: 0x218100002185},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x174a6000174ad, matchRI: 0x1a17, match64: 0x00000000, modelSI: -0x0001, models64: 0x218500002187},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x174c0000174c5, matchRI: 0x1a19, match64: 0x00000000, modelSI: 0x2187, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x174c5000174c9, matchRI: 0x1a1a, match64: 0x00000000, modelSI: 0x2188, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x174d0000174d4, matchRI: 0x1a1b, match64: 0x00000000, modelSI: -0x0001, models64: 0x21890000218c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x175060001750a, matchRI: -0x0001, match64: 0x1750a00017513, modelSI: 0x218c, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1751300017516, matchRI: 0x1a1d, match64: 0x00000000, modelSI: -0x0001, models64: 0x218d000021a5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x176990001769e, matchRI: 0x1a23, match64: 0x00000000, modelSI: 0x21a5, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x176a2000176a7, matchRI: 0x1a24, match64: 0x00000000, modelSI: 0x21a6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x176aa000176ae, matchRI: 0x1a25, match64: 0x00000000, modelSI: 0x21a7, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x176ae000176b8, matchRI: 0x1a26, match64: 0x00000000, modelSI: -0x0001, models64: 0x21a8000021b2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1774b00017756, matchRI: 0x1a27, match64: 0x00000000, modelSI: 0x21b2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1775600017759, matchRI: 0x1a28, match64: 0x00000000, modelSI: -0x0001, models64: 0x21b3000021ba},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x177990001779f, matchRI: 0x1a2c, match64: 0x00000000, modelSI: -0x0001, models64: 0x21ba000021bc},
			deviceTuple{type64: 0x20d00000213, brand64: 0x177a6000177ad, matchRI: 0x1a2e, match64: 0x00000000, modelSI: -0x0001, models64: 0x21bc000021c0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x177e2000177ef, matchRI: 0x1a32, match64: 0x00000000, modelSI: -0x0001, models64: 0x21c0000021c4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1780e00017811, matchRI: 0x1a36, match64: 0x00000000, modelSI: 0x21c4, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1781900017822, matchRI: 0x1a37, match64: 0x00000000, modelSI: -0x0001, models64: 0x21c5000021ce},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x178c0000178c5, matchRI: 0x1a38, match64: 0x00000000, modelSI: -0x0001, models64: 0x21ce000021d5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x178e6000178eb, matchRI: 0x1a3e, match64: 0x00000000, modelSI: -0x0001, models64: 0x21d5000021d7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x180000001f, matchRI: 0x1a41, match64: 0x00000000, modelSI: -0x0001, models64: 0x21d700002451},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1a0010001a008, matchRI: 0x1c92, match64: 0x00000000, modelSI: 0x2451, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1a0080001a00f, matchRI: 0x1c93, match64: 0x00000000, modelSI: 0x2452, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a00f0001a014, matchRI: 0x1c94, match64: 0x00000000, modelSI: -0x0001, models64: 0x245300002457},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1a0230001a029, matchRI: -0x0001, match64: 0x1a0290001a032, modelSI: 0x2457, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a03c0001a042, matchRI: 0x1c96, match64: 0x00000000, modelSI: -0x0001, models64: 0x24580000245a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a0490001a04f, matchRI: 0x1c98, match64: 0x00000000, modelSI: -0x0001, models64: 0x245a0000246f},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1a0da0001a0df, matchRI: 0x1cae, match64: 0x00000000, modelSI: -0x0001, models64: 0x246f00002474},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1a1000001a105, matchRI: 0x1cb4, match64: 0x00000000, modelSI: 0x2474, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1a1050001a109, matchRI: 0x1cb5, match64: 0x00000000, modelSI: 0x2475, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a1090001a10e, matchRI: 0x1cb6, match64: 0x00000000, modelSI: -0x0001, models64: 0x247600002478},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a1440001a14b, matchRI: 0x1cb7, match64: 0x00000000, modelSI: 0x2478, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a14b0001a151, matchRI: -0x0001, match64: 0x1a14b0001a151, modelSI: -0x0001, models64: 0x24790000247a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a1510001a157, matchRI: 0x1cb9, match64: 0x00000000, modelSI: -0x0001, models64: 0x247a0000247c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1a1570001a160, matchRI: 0x1cbc, match64: 0x00000000, modelSI: -0x0001, models64: 0x247c0000247e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1a1600001a167, matchRI: 0x1cbf, match64: 0x00000000, modelSI: 0x247e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a1670001a16d, matchRI: -0x0001, match64: 0x1a16d0001a173, modelSI: -0x0001, models64: 0x247f00002486},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1a2340001a23a, matchRI: 0x1cc0, match64: 0x00000000, modelSI: -0x0001, models64: 0x248600002495},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1a2d60001a2db, matchRI: 0x1cd0, match64: 0x00000000, modelSI: 0x2495, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1a2db0001a2e3, matchRI: 0x1cd1, match64: 0x00000000, modelSI: -0x0001, models64: 0x249600002498},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a2fc0001a303, matchRI: 0x1cd3, match64: 0x00000000, modelSI: 0x2498, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a3030001a308, matchRI: 0x1cd4, match64: 0x00000000, modelSI: -0x0001, models64: 0x2499000024a7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a33a0001a33f, matchRI: 0x1ce3, match64: 0x00000000, modelSI: -0x0001, models64: 0x24a7000024a9},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1a3480001a34d, matchRI: 0x1ce6, match64: 0x00000000, modelSI: 0x24a9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a34d0001a352, matchRI: 0x1ce7, match64: 0x00000000, modelSI: -0x0001, models64: 0x24aa00002514},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a7f70001a803, matchRI: 0x1d4a, match64: 0x00000000, modelSI: 0x2514, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1a8030001a80a, matchRI: 0x1d4b, match64: 0x00000000, modelSI: 0x2515, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1a8100001a819, matchRI: 0x1d4c, match64: 0x00000000, modelSI: 0x2516, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1a8240001a82b, matchRI: 0x1d4d, match64: 0x00000000, modelSI: 0x2517, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a82b0001a82f, matchRI: 0x1d4e, match64: 0x00000000, modelSI: -0x0001, models64: 0x251800002527},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a8ca0001a8d1, matchRI: 0x1d53, match64: 0x00000000, modelSI: -0x0001, models64: 0x25270000252c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd6690000d66e, matchRI: 0x1d59, match64: 0x00000000, modelSI: -0x0001, models64: 0x252c00002531},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1a9070001a90e, matchRI: 0x1d5f, match64: 0x00000000, modelSI: 0x2531, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a90e0001a91b, matchRI: -0x0001, match64: 0x1a91b0001a927, modelSI: 0x2532, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1a9270001a92e, matchRI: 0x1d60, match64: 0x00000000, modelSI: -0x0001, models64: 0x25330000253b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a96c0001a972, matchRI: 0x1d63, match64: 0x00000000, modelSI: 0x253b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a9720001a97a, matchRI: 0x1d64, match64: 0x00000000, modelSI: -0x0001, models64: 0x253c00002540},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a9930001a99a, matchRI: 0x1d69, match64: 0x00000000, modelSI: -0x0001, models64: 0x254000002541},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a99a0001a9a4, matchRI: 0x1d6b, match64: 0x00000000, modelSI: -0x0001, models64: 0x254100002543},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12ce300012ce6, matchRI: 0x1d6e, match64: 0x00000000, modelSI: -0x0001, models64: 0x254300002563},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1ab5c0001ab65, matchRI: 0x1d84, match64: 0x00000000, modelSI: -0x0001, models64: 0x256300002564},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1ab7c0001ab83, matchRI: 0x1d85, match64: 0x00000000, modelSI: 0x2564, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1ab830001ab8b, matchRI: 0x1d86, match64: 0x00000000, modelSI: -0x0001, models64: 0x256500002568},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ab950001ab9a, matchRI: 0x1d89, match64: 0x00000000, modelSI: -0x0001, models64: 0x25680000256a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1aba80001abae, matchRI: 0x1d8c, match64: 0x00000000, modelSI: 0x256a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc7890000c78e, matchRI: 0x1d8d, match64: 0x00000000, modelSI: -0x0001, models64: 0x256b0000256d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1abc40001abd0, matchRI: 0x1d8f, match64: 0x00000000, modelSI: -0x0001, models64: 0x256d0000256e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1abd60001abdf, matchRI: 0x1d91, match64: 0x00000000, modelSI: -0x0001, models64: 0x256e00002570},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1abe30001abea, matchRI: 0x1d94, match64: 0x00000000, modelSI: 0x2570, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1abea0001abf1, matchRI: 0x1d95, match64: 0x00000000, modelSI: -0x0001, models64: 0x257100002572},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1abf10001abfa, matchRI: 0x1d97, match64: 0x00000000, modelSI: -0x0001, models64: 0x257200002581},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1acd50001acde, matchRI: 0x1d9c, match64: 0x00000000, modelSI: -0x0001, models64: 0x25810000258f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1ad360001ad3c, matchRI: 0x1da7, match64: 0x00000000, modelSI: -0x0001, models64: 0x258f00002591},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ad4b0001ad58, matchRI: 0x1da9, match64: 0x00000000, modelSI: -0x0001, models64: 0x259100002596},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1ad930001ad9d, matchRI: 0x1dae, match64: 0x00000000, modelSI: 0x2596, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1ad9d0001ada6, matchRI: -0x0001, match64: 0x1ad9d0001ada6, modelSI: -0x0001, models64: 0x259700002598},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1adc90001adcd, matchRI: 0x1daf, match64: 0x00000000, modelSI: -0x0001, models64: 0x25980000259a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1add60001adde, matchRI: 0x1db1, match64: 0x00000000, modelSI: -0x0001, models64: 0x259a0000259d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1adde0001ade8, matchRI: 0x1db5, match64: 0x00000000, modelSI: 0x259d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ade80001adee, matchRI: 0x1db6, match64: 0x00000000, modelSI: -0x0001, models64: 0x259e000025a6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ae630001ae68, matchRI: 0x1dba, match64: 0x00000000, modelSI: -0x0001, models64: 0x25a6000025ae},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x18e00000192, matchRI: 0x1dc3, match64: 0x00000000, modelSI: -0x0001, models64: 0x25ae0000267f},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1b7760001b77e, matchRI: 0x1e87, match64: 0x00000000, modelSI: 0x267f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b77e0001b783, matchRI: 0x1e88, match64: 0x00000000, modelSI: -0x0001, models64: 0x268000002683},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4c6800004c6d, matchRI: 0x1e8a, match64: 0x00000000, modelSI: -0x0001, models64: 0x268300002684},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b7980001b79d, matchRI: 0x1e8b, match64: 0x00000000, modelSI: -0x0001, models64: 0x268400002687},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b7b10001b7bc, matchRI: 0x1e8c, match64: 0x00000000, modelSI: 0x2687, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b7bc0001b7c4, matchRI: 0x1e8d, match64: 0x00000000, modelSI: -0x0001, models64: 0x26880000268c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11ce400011ce9, matchRI: 0x1e92, match64: 0x00000000, modelSI: -0x0001, models64: 0x268c00002698},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1545d00015463, matchRI: 0x1e9b, match64: 0x00000000, modelSI: 0x2698, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b8900001b894, matchRI: 0x1e9c, match64: 0x00000000, modelSI: -0x0001, models64: 0x26990000269b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b8990001b8a2, matchRI: 0x1e9e, match64: 0x00000000, modelSI: -0x0001, models64: 0x269b000026a5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b9560001b960, matchRI: 0x1ea0, match64: 0x00000000, modelSI: -0x0001, models64: 0x26a5000026ab},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1b98f0001b996, matchRI: 0x1ea7, match64: 0x00000000, modelSI: 0x26ab, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1b9a30001b9ab, matchRI: 0x1ea8, match64: 0x00000000, modelSI: -0x0001, models64: 0x26ac000026ad},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b9b30001b9b9, matchRI: 0x1eaa, match64: 0x00000000, modelSI: -0x0001, models64: 0x26ad000026af},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1b9b90001b9bf, matchRI: 0x1ead, match64: 0x00000000, modelSI: -0x0001, models64: 0x26af000026b1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b9de0001b9e8, matchRI: 0x1eaf, match64: 0x00000000, modelSI: -0x0001, models64: 0x26b1000026b2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b9e80001b9ee, matchRI: 0x1eb1, match64: 0x00000000, modelSI: -0x0001, models64: 0x26b2000026b4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b9f40001b9f9, matchRI: 0x1eb4, match64: 0x00000000, modelSI: -0x0001, models64: 0x26b4000026d9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bba90001bbae, matchRI: 0x1ec0, match64: 0x00000000, modelSI: -0x0001, models64: 0x26d9000026db},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bbae0001bbb3, matchRI: 0x1ec3, match64: 0x00000000, modelSI: -0x0001, models64: 0x26db000026e0},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bbc10001bbca, matchRI: 0x1ec9, match64: 0x00000000, modelSI: 0x26e0, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bbca0001bbd0, matchRI: 0x1eca, match64: 0x00000000, modelSI: -0x0001, models64: 0x26e1000026e3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bbd00001bbd6, matchRI: 0x1ecd, match64: 0x00000000, modelSI: 0x26e3, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1bbd60001bbdb, matchRI: 0x1ece, match64: 0x00000000, modelSI: -0x0001, models64: 0x26e4000026e6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bbe30001bbe8, matchRI: 0x1ed1, match64: 0x00000000, modelSI: -0x0001, models64: 0x26e6000026e9},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bbe80001bbf0, matchRI: 0x1ed5, match64: 0x00000000, modelSI: 0x26e9, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bbf00001bbf7, matchRI: 0x1ed6, match64: 0x00000000, modelSI: -0x0001, models64: 0x26ea000026ec},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bc080001bc10, matchRI: 0x1ed8, match64: 0x00000000, modelSI: 0x26ec, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bc160001bc20, matchRI: 0x1ed9, match64: 0x00000000, modelSI: 0x26ed, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bc200001bc28, matchRI: 0x1eda, match64: 0x00000000, modelSI: -0x0001, models64: 0x26ee000026f0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bc2f0001bc34, matchRI: 0x1edc, match64: 0x00000000, modelSI: -0x0001, models64: 0x26f0000026f2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bc340001bc3b, matchRI: 0x1edf, match64: 0x00000000, modelSI: 0x26f2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bc3b0001bc40, matchRI: 0x1ee0, match64: 0x00000000, modelSI: 0x26f3, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bc470001bc4d, matchRI: 0x1ee1, match64: 0x00000000, modelSI: -0x0001, models64: 0x26f4000026f6},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bc660001bc6b, matchRI: 0x1ee3, match64: 0x00000000, modelSI: 0x26f6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bc6b0001bc70, matchRI: 0x1ee4, match64: 0x00000000, modelSI: -0x0001, models64: 0x26f7000026fd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bca70001bcb0, matchRI: 0x1ee8, match64: 0x00000000, modelSI: 0x26fd, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bcb00001bcb6, matchRI: 0x1ee9, match64: 0x00000000, modelSI: 0x26fe, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bcbf0001bcc3, matchRI: 0x1eea, match64: 0x00000000, modelSI: -0x0001, models64: 0x26ff00002700},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bcc90001bcd1, matchRI: 0x1eeb, match64: 0x00000000, modelSI: -0x0001, models64: 0x27000000270b},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bd270001bd2c, matchRI: 0x1ef2, match64: 0x00000000, modelSI: 0x270b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bd2c0001bd34, matchRI: 0x1ef3, match64: 0x00000000, modelSI: -0x0001, models64: 0x270c0000271b},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bdc40001bdc7, matchRI: 0x1f00, match64: 0x00000000, modelSI: 0x271b, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bdc70001bdcf, matchRI: 0x1f01, match64: 0x00000000, modelSI: -0x0001, models64: 0x271c0000271d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bdcf0001bdd7, matchRI: 0x1f03, match64: 0x00000000, modelSI: -0x0001, models64: 0x271d0000271e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bddf0001bde2, matchRI: 0x1f05, match64: 0x00000000, modelSI: -0x0001, models64: 0x271e00002775},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bfd60001bfe0, matchRI: 0x1f50, match64: 0x00000000, modelSI: 0x2775, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bfe00001bfe7, matchRI: 0x1f51, match64: 0x00000000, modelSI: -0x0001, models64: 0x277600002779},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c0080001c00d, matchRI: -0x0001, match64: 0x1c0080001c00d, modelSI: -0x0001, models64: 0x27790000277a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c00d0001c014, matchRI: 0x1f53, match64: 0x00000000, modelSI: 0x277a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c0140001c018, matchRI: 0x1f54, match64: 0x00000000, modelSI: 0x277b, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1c0180001c01e, matchRI: -0x0001, match64: 0x1c0180001c01e, modelSI: -0x0001, models64: 0x277c0000277e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c01e0001c027, matchRI: 0x1f57, match64: 0x00000000, modelSI: 0x277e, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c02e0001c031, matchRI: 0x1f58, match64: 0x00000000, modelSI: 0x277f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c0400001c045, matchRI: 0x1f59, match64: 0x00000000, modelSI: -0x0001, models64: 0x278000002781},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1c0450001c04b, matchRI: 0x1f5b, match64: 0x00000000, modelSI: 0x2781, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c04b0001c053, matchRI: 0x1f5c, match64: 0x00000000, modelSI: 0x2782, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c0530001c05a, matchRI: 0x1f5d, match64: 0x00000000, modelSI: -0x0001, models64: 0x278300002785},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c05e0001c061, matchRI: -0x0001, match64: 0x1c0610001c065, modelSI: 0x2785, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c0650001c068, matchRI: 0x1f60, match64: 0x00000000, modelSI: 0x2786, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c0680001c06c, matchRI: 0x1f61, match64: 0x00000000, modelSI: 0x2787, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c06c0001c072, matchRI: -0x0001, match64: 0x1c0720001c07d, modelSI: 0x2788, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c0830001c086, matchRI: 0x1f62, match64: 0x00000000, modelSI: 0x2789, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c0940001c097, matchRI: 0x1f63, match64: 0x00000000, modelSI: -0x0001, models64: 0x278a0000278d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c0ac0001c0af, matchRI: 0x1f67, match64: 0x00000000, modelSI: -0x0001, models64: 0x278d00002790},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c0c30001c0cf, matchRI: 0x1f6a, match64: 0x00000000, modelSI: 0x2790, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c0db0001c0e1, matchRI: 0x1f6b, match64: 0x00000000, modelSI: 0x2791, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c0e10001c0e7, matchRI: 0x1f6c, match64: 0x00000000, modelSI: 0x2792, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c0e70001c0ec, matchRI: 0x1f6d, match64: 0x00000000, modelSI: 0x2793, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c0ec0001c0f1, matchRI: 0x1f6e, match64: 0x00000000, modelSI: -0x0001, models64: 0x279400002798},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1c10d0001c117, matchRI: 0x1f72, match64: 0x00000000, modelSI: -0x0001, models64: 0x279800002799},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c1170001c11d, matchRI: 0x1f74, match64: 0x00000000, modelSI: 0x2799, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c1250001c12c, matchRI: 0x1f75, match64: 0x00000000, modelSI: -0x0001, models64: 0x279a000027a9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c1ae0001c1b7, matchRI: 0x1f7e, match64: 0x00000000, modelSI: -0x0001, models64: 0x27a9000027aa},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c1b70001c1c0, matchRI: 0x1f80, match64: 0x00000000, modelSI: 0x27aa, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c1cd0001c1d5, matchRI: 0x1f81, match64: 0x00000000, modelSI: -0x0001, models64: 0x27ab000027ad},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c1ef0001c1f7, matchRI: -0x0001, match64: 0x1c1ef0001c1f7, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c1f70001c1fe, matchRI: 0x1f84, match64: 0x00000000, modelSI: -0x0001, models64: 0x27ad000027d1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c2fd0001c309, matchRI: 0x1f9d, match64: 0x00000000, modelSI: -0x0001, models64: 0x27d100002873},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c9090001c910, matchRI: 0x203b, match64: 0x00000000, modelSI: -0x0001, models64: 0x287300002875},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c92e0001c933, matchRI: 0x203d, match64: 0x00000000, modelSI: -0x0001, models64: 0x28750000287a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c9410001c94b, matchRI: 0x2043, match64: 0x00000000, modelSI: -0x0001, models64: 0x287a00002884},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c9b00001c9b6, matchRI: 0x2049, match64: 0x00000000, modelSI: -0x0001, models64: 0x288400002888},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c9ea0001c9f1, matchRI: 0x204b, match64: 0x00000000, modelSI: -0x0001, models64: 0x28880000288a},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c9f10001c9f6, matchRI: -0x0001, match64: 0x1c9f60001c9ff, modelSI: 0x288a, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1ca020001ca07, matchRI: -0x0001, match64: 0x1ca020001ca07, modelSI: -0x0001, models64: 0x288b0000288d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ca070001ca0c, matchRI: 0x2050, match64: 0x00000000, modelSI: -0x0001, models64: 0x288d00002893},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ca460001ca51, matchRI: 0x2054, match64: 0x00000000, modelSI: -0x0001, models64: 0x289300002895},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1ca580001ca5d, matchRI: 0x2056, match64: 0x00000000, modelSI: -0x0001, models64: 0x289500002896},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ca620001ca6a, matchRI: -0x0001, match64: 0x1ca620001ca6a, modelSI: -0x0001, models64: 0x289600002897},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1ca6a0001ca6f, matchRI: 0x2059, match64: 0x00000000, modelSI: -0x0001, models64: 0x289700002899},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1ca7f0001ca87, matchRI: 0x205c, match64: 0x00000000, modelSI: 0x2899, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ca910001ca94, matchRI: 0x205d, match64: 0x00000000, modelSI: -0x0001, models64: 0x289a000028a1},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1caaa0001cab1, matchRI: 0x2064, match64: 0x00000000, modelSI: -0x0001, models64: 0x28a1000028b1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cb460001cb4d, matchRI: 0x206e, match64: 0x00000000, modelSI: 0x28b1, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cb4d0001cb54, matchRI: 0x206f, match64: 0x00000000, modelSI: 0x28b2, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1cb540001cb58, matchRI: 0x2070, match64: 0x00000000, modelSI: -0x0001, models64: 0x28b3000028b5},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1cb730001cb79, matchRI: 0x2071, match64: 0x00000000, modelSI: -0x0001, models64: 0x28b5000028b6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cb850001cb8b, matchRI: 0x2073, match64: 0x00000000, modelSI: -0x0001, models64: 0x28b6000028b9},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1cba60001cbab, matchRI: 0x2077, match64: 0x00000000, modelSI: 0x28b9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cbb30001cbb9, matchRI: 0x2078, match64: 0x00000000, modelSI: -0x0001, models64: 0x28ba000028c7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cc6f0001cc74, matchRI: 0x207e, match64: 0x00000000, modelSI: 0x28c7, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cc740001cc79, matchRI: 0x207f, match64: 0x00000000, modelSI: 0x28c8, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1cc790001cc7f, matchRI: 0x2080, match64: 0x00000000, modelSI: 0x28c9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cc8c0001cc90, matchRI: 0x2081, match64: 0x00000000, modelSI: 0x28ca, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cc900001cc95, matchRI: -0x0001, match64: 0x1cc950001cc9a, modelSI: -0x0001, models64: 0x28cb000028cd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cca10001ccaa, matchRI: 0x2084, match64: 0x00000000, modelSI: -0x0001, models64: 0x28cd000028d1},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1ccdb0001cce4, matchRI: 0x2085, match64: 0x00000000, modelSI: -0x0001, models64: 0x28d1000028d3},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1ccee0001ccf7, matchRI: -0x0001, match64: 0x1ccf70001ccfd, modelSI: 0x28d3, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1cd0f0001cd15, matchRI: 0x2087, match64: 0x00000000, modelSI: 0x28d4, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1cd150001cd1c, matchRI: 0x2088, match64: 0x00000000, modelSI: 0x28d5, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1cd200001cd25, matchRI: 0x2089, match64: 0x00000000, modelSI: -0x0001, models64: 0x28d6000028d9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xdb740000db7a, matchRI: 0x208d, match64: 0x00000000, modelSI: -0x0001, models64: 0x28d9000028e0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cd870001cd8e, matchRI: 0x2091, match64: 0x00000000, modelSI: -0x0001, models64: 0x28e0000028f6},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1ceb10001cebb, matchRI: 0x2099, match64: 0x00000000, modelSI: 0x28f6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cebb0001cec4, matchRI: 0x209a, match64: 0x00000000, modelSI: -0x0001, models64: 0x28f7000028fc},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1cefb0001cf04, matchRI: 0x209e, match64: 0x00000000, modelSI: -0x0001, models64: 0x28fc000028fe},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1cf120001cf1a, matchRI: 0x20a1, match64: 0x00000000, modelSI: -0x0001, models64: 0x28fe00002909},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1cfae0001cfb3, matchRI: 0x20a9, match64: 0x00000000, modelSI: -0x0001, models64: 0x290900002916},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d0500001d057, matchRI: 0x20b6, match64: 0x00000000, modelSI: 0x2916, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d0570001d05e, matchRI: 0x20b7, match64: 0x00000000, modelSI: -0x0001, models64: 0x29170000291a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d0a00001d0a4, matchRI: 0x20b8, match64: 0x00000000, modelSI: 0x291a, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1d0a90001d0b2, matchRI: 0x20b9, match64: 0x00000000, modelSI: 0x291b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d0b20001d0b6, matchRI: 0x20ba, match64: 0x00000000, modelSI: -0x0001, models64: 0x291c0000292c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d2020001d20b, matchRI: 0x20c6, match64: 0x00000000, modelSI: 0x292c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d20b0001d210, matchRI: 0x20c7, match64: 0x00000000, modelSI: 0x292d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d2100001d21f, matchRI: 0x20c8, match64: 0x00000000, modelSI: 0x292e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x83bf000083c4, matchRI: 0x20c9, match64: 0x00000000, modelSI: -0x0001, models64: 0x292f00002937},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d2610001d268, matchRI: 0x20d2, match64: 0x00000000, modelSI: -0x0001, models64: 0x293700002951},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d38c0001d395, matchRI: 0x20e4, match64: 0x00000000, modelSI: -0x0001, models64: 0x295100002954},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d3b50001d3bd, matchRI: 0x20e7, match64: 0x00000000, modelSI: 0x2954, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d3bd0001d3c5, matchRI: 0x20e8, match64: 0x00000000, modelSI: -0x0001, models64: 0x29550000295a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d3f70001d3fb, matchRI: 0x20ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x295a0000295c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d3fb0001d400, matchRI: 0x20f1, match64: 0x00000000, modelSI: 0x295c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d4000001d40d, matchRI: -0x0001, match64: 0x1d40d0001d419, modelSI: -0x0001, models64: 0x295d0000295e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d41e0001d425, matchRI: 0x20f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x295e00002961},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d4310001d43e, matchRI: -0x0001, match64: 0x1d43e0001d443, modelSI: -0x0001, models64: 0x296100002963},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d45e0001d460, matchRI: -0x0001, match64: 0x1d4600001d468, modelSI: 0x2963, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d46d0001d474, matchRI: 0x20f8, match64: 0x00000000, modelSI: -0x0001, models64: 0x29640000298a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d5a90001d5ae, matchRI: 0x210d, match64: 0x00000000, modelSI: -0x0001, models64: 0x298a0000298c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d5ae0001d5b2, matchRI: 0x2110, match64: 0x00000000, modelSI: -0x0001, models64: 0x298c0000298d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d5b20001d5b8, matchRI: -0x0001, match64: 0x1d5b20001d5b8, modelSI: -0x0001, models64: 0x298d0000298e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d5b80001d5bc, matchRI: 0x2113, match64: 0x00000000, modelSI: -0x0001, models64: 0x298e00002992},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1d5d40001d5dd, matchRI: 0x2116, match64: 0x00000000, modelSI: 0x2992, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d5dd0001d5e2, matchRI: 0x2117, match64: 0x00000000, modelSI: 0x2993, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d5e20001d5eb, matchRI: 0x2118, match64: 0x00000000, modelSI: 0x2994, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1d5f50001d5fa, matchRI: 0x2119, match64: 0x00000000, modelSI: -0x0001, models64: 0x299500002998},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d6020001d607, matchRI: 0x211d, match64: 0x00000000, modelSI: 0x2998, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d6070001d60d, matchRI: 0x211e, match64: 0x00000000, modelSI: -0x0001, models64: 0x29990000299f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d61f0001d626, matchRI: 0x2122, match64: 0x00000000, modelSI: -0x0001, models64: 0x299f000029c5},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d76c0001d770, matchRI: 0x2141, match64: 0x00000000, modelSI: -0x0001, models64: 0x29c5000029d0},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1d81c0001d828, matchRI: 0x214c, match64: 0x00000000, modelSI: -0x0001, models64: 0x29d0000029d2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d84c0001d852, matchRI: 0x214d, match64: 0x00000000, modelSI: 0x29d2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d8520001d85a, matchRI: 0x214e, match64: 0x00000000, modelSI: -0x0001, models64: 0x29d3000029dc},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d8bd0001d8c3, matchRI: 0x2152, match64: 0x00000000, modelSI: 0x29dc, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d8c30001d8cb, matchRI: -0x0001, match64: 0x1d8cb0001d8d4, modelSI: -0x0001, models64: 0x29dd000029de},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d8d60001d8de, matchRI: -0x0001, match64: 0x1d8d60001d8de, modelSI: -0x0001, models64: 0x29de000029e0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d8de0001d8e7, matchRI: 0x2156, match64: 0x00000000, modelSI: 0x29e0, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d8e70001d8ee, matchRI: 0x2157, match64: 0x00000000, modelSI: 0x29e1, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d8ee0001d8f5, matchRI: 0x2158, match64: 0x00000000, modelSI: -0x0001, models64: 0x29e2000029eb},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d9250001d92c, matchRI: 0x2162, match64: 0x00000000, modelSI: -0x0001, models64: 0x29eb000029f6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d99d0001d9b0, matchRI: 0x2163, match64: 0x00000000, modelSI: -0x0001, models64: 0x29f6000029f7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d9b30001d9b8, matchRI: 0x2165, match64: 0x00000000, modelSI: -0x0001, models64: 0x29f7000029fa},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d9b80001d9be, matchRI: 0x2169, match64: 0x00000000, modelSI: -0x0001, models64: 0x29fa000029fc},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d9ca0001d9cf, matchRI: 0x216b, match64: 0x00000000, modelSI: -0x0001, models64: 0x29fc000029fd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d9cf0001d9d4, matchRI: 0x216d, match64: 0x00000000, modelSI: 0x29fd, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1d9d40001d9da, matchRI: 0x216e, match64: 0x00000000, modelSI: 0x29fe, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d9da0001d9e0, matchRI: 0x216f, match64: 0x00000000, modelSI: 0x29ff, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d9e00001d9e4, matchRI: 0x2170, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a0000002a02},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d9f10001d9f6, matchRI: -0x0001, match64: 0x1d9f60001d9ff, modelSI: 0x2a02, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1da080001da0f, matchRI: -0x0001, match64: 0x1da0f0001da1a, modelSI: 0x2a03, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1da260001da2a, matchRI: 0x2172, match64: 0x00000000, modelSI: 0x2a04, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1da2a0001da2c, matchRI: 0x2173, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a0500002a08},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1da450001da49, matchRI: 0x2176, match64: 0x00000000, modelSI: 0x2a08, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1da490001da4d, matchRI: 0x2177, match64: 0x00000000, modelSI: 0x2a09, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1da4d0001da52, matchRI: 0x2178, match64: 0x00000000, modelSI: 0x2a0a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1da520001da59, matchRI: 0x2179, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a0b00002a0f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1da800001da84, matchRI: 0x217d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a0f00002a11},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1da840001da8a, matchRI: 0x2180, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a1100002a12},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1da960001da9e, matchRI: 0x2181, match64: 0x00000000, modelSI: 0x2a12, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1da9e0001daa2, matchRI: 0x2182, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a1300002a18},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1daf90001db02, matchRI: 0x2184, match64: 0x00000000, modelSI: 0x2a18, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1db060001db0d, matchRI: 0x2185, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a1900002a1d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1db120001db16, matchRI: 0x218a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a1d00002a1e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1db210001db28, matchRI: 0x218b, match64: 0x00000000, modelSI: 0x2a1e, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1db280001db31, matchRI: -0x0001, match64: 0x1db310001db38, modelSI: -0x0001, models64: 0x2a1f00002a20},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1db380001db3f, matchRI: 0x218d, match64: 0x00000000, modelSI: 0x2a20, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1db410001db47, matchRI: 0x218e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a2100002a25},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1db7b0001db80, matchRI: 0x2192, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a2500002a26},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1db800001db88, matchRI: 0x2194, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a2600002a28},
			deviceTuple{type64: 0x20d00000213, brand64: 0xf9c30000f9c7, matchRI: 0x2197, match64: 0x00000000, modelSI: 0x2a28, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1db950001db9a, matchRI: 0x2198, match64: 0x00000000, modelSI: 0x2a29, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1db9a0001db9f, matchRI: 0x2199, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a2a00002a2c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1dba90001dbb0, matchRI: 0x219c, match64: 0x00000000, modelSI: 0x2a2c, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1dbb00001dbb8, matchRI: 0x219d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a2d00002a30},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1dbdf0001dbe5, matchRI: 0x21a1, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a3000002a32},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1dbfc0001dc03, matchRI: 0x21a4, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a3200002a39},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1dc880001dc8e, matchRI: 0x21a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a3900002a45},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1dcd40001dcdb, matchRI: 0x21ad, match64: 0x00000000, modelSI: 0x2a45, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1dce60001dcec, matchRI: 0x21ae, match64: 0x00000000, modelSI: 0x2a46, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1dcec0001dcf2, matchRI: 0x21af, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a4700002a53},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1dd600001dd65, matchRI: 0x21bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a5300002a58},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1dd900001dd98, matchRI: -0x0001, match64: 0x1dd980001dda0, modelSI: -0x0001, models64: 0x2a5800002a83},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1ded10001ded6, matchRI: 0x21ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a8300002a85},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1df050001df0b, matchRI: 0x21ed, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a8500002a9c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1e0610001e066, matchRI: 0x21f7, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a9c00002a9e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1e0850001e08a, matchRI: 0x21f9, match64: 0x00000000, modelSI: 0x2a9e, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1e08a0001e092, matchRI: 0x21fa, match64: 0x00000000, modelSI: 0x2a9f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e09d0001e0a5, matchRI: 0x21fb, match64: 0x00000000, modelSI: -0x0001, models64: 0x2aa000002ab0},
			deviceTuple{type64: 0x51800000525, brand64: 0x1e1440001e14d, matchRI: 0x220b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ab000002ab7},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1e19a0001e1a1, matchRI: -0x0001, match64: 0x1e19a0001e1a1, modelSI: -0x0001, models64: 0x2ab700002aba},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1e1a90001e1ae, matchRI: 0x2215, match64: 0x00000000, modelSI: -0x0001, models64: 0x2aba00002ac1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e2030001e209, matchRI: 0x2217, match64: 0x00000000, modelSI: 0x2ac1, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e2090001e20d, matchRI: -0x0001, match64: 0x1e20d0001e214, modelSI: -0x0001, models64: 0x2ac200002ac3},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7c2c00007c31, matchRI: 0x2219, match64: 0x00000000, modelSI: 0x2ac3, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e2140001e219, matchRI: 0x221a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ac400002ac7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e2250001e22a, matchRI: 0x221e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ac700002ac9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e22e0001e23a, matchRI: 0x2221, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ac900002acb},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1e2540001e25f, matchRI: 0x2222, match64: 0x00000000, modelSI: -0x0001, models64: 0x2acb00002acd},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1e2830001e28b, matchRI: 0x2225, match64: 0x00000000, modelSI: -0x0001, models64: 0x2acd00002ad0},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1e28b0001e291, matchRI: 0x2229, match64: 0x00000000, modelSI: 0x2ad0, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e2910001e297, matchRI: 0x222a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ad100002ad7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e2ae0001e2b3, matchRI: 0x2230, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ad700002ae4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e3020001e306, matchRI: 0x223e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ae400002c19},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1ea960001ea9b, matchRI: 0x2337, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c1900002c1d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1eaaf0001eab4, matchRI: 0x2339, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c1d00002c1f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1eac90001ead0, matchRI: 0x233c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c1f00002c21},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1eadf0001eae7, matchRI: 0x233e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c2100002c55},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xe44d0000e451, matchRI: 0x2355, match64: 0x00000000, modelSI: 0x2c55, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1edb80001edbe, matchRI: 0x2356, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c5600002c70},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1eeac0001eeb2, matchRI: 0x236d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c7000002c77},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1eee30001eee9, matchRI: 0x2375, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c7700002c79},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1eef10001eef7, matchRI: 0x2377, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c7900002c7c},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1ef310001ef36, matchRI: 0x2378, match64: 0x00000000, modelSI: 0x2c7c, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1ef360001ef3c, matchRI: 0x2379, match64: 0x00000000, modelSI: 0x2c7d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbce30000bce9, matchRI: 0x237a, match64: 0x00000000, modelSI: 0x2c7e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ef3c0001ef40, matchRI: 0x237b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c7f00002c82},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1ef400001ef46, matchRI: 0x237f, match64: 0x00000000, modelSI: 0x2c82, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1ef460001ef4a, matchRI: 0x2380, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c8300002c86},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ef500001ef56, matchRI: 0x2384, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c8600002c91},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1efa30001efa7, matchRI: 0x238d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c9100002c9b},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f0100001f019, matchRI: 0x2394, match64: 0x00000000, modelSI: 0x2c9b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbd110000bd17, matchRI: 0x2395, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c9c00002c9f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f02b0001f032, matchRI: 0x2399, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c9f00002ca0},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f03b0001f03e, matchRI: 0x239b, match64: 0x00000000, modelSI: 0x2ca0, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1f03e0001f043, matchRI: 0x239c, match64: 0x00000000, modelSI: 0x2ca1, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f0430001f045, matchRI: 0x239d, match64: 0x00000000, modelSI: 0x2ca2, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1f0450001f049, matchRI: 0x239e, match64: 0x00000000, modelSI: 0x2ca3, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f0580001f05e, matchRI: 0x239f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ca400002cae},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f0e50001f0ec, matchRI: 0x23a8, match64: 0x00000000, modelSI: 0x2cae, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f0f50001f0fe, matchRI: 0x23a9, match64: 0x00000000, modelSI: -0x0001, models64: 0x2caf00002cb0},
			deviceTuple{type64: 0x940000009f, brand64: 0x1f0fe0001f106, matchRI: 0x23ab, match64: 0x00000000, modelSI: 0x2cb0, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f10e0001f114, matchRI: 0x23ac, match64: 0x00000000, modelSI: 0x2cb1, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f1140001f11d, matchRI: 0x23ad, match64: 0x00000000, modelSI: 0x2cb2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f11d0001f123, matchRI: -0x0001, match64: 0x1f1230001f12b, modelSI: -0x0001, models64: 0x2cb300002cb4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f1330001f13a, matchRI: 0x23ae, match64: 0x00000000, modelSI: 0x2cb4, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1f13a0001f149, matchRI: 0x23af, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cb500002cb6},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1f1640001f16d, matchRI: 0x23b0, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cb600002cb7},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f16d0001f173, matchRI: 0x23b2, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cb700002cc0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f1a20001f1ae, matchRI: 0x23bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cc000002cc1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f1c10001f1c7, matchRI: 0x23bd, match64: 0x00000000, modelSI: 0x2cc1, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f1c70001f1cc, matchRI: 0x23be, match64: 0x00000000, modelSI: 0x2cc2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f1cc0001f1d0, matchRI: 0x23bf, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cc300002d3a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f58e0001f596, matchRI: 0x241e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d3a00002d42},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f5ce0001f5d3, matchRI: 0x2425, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d4200002d43},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f5eb0001f5ef, matchRI: 0x2426, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d4300002d45},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f5ef0001f5f5, matchRI: 0x2429, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d4500002d49},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f6040001f60b, matchRI: 0x242d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d4900002d4e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f6150001f61c, matchRI: 0x2433, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d4e00002d4f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f61c0001f624, matchRI: -0x0001, match64: 0x1f6240001f628, modelSI: 0x2d4f, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1f6280001f62f, matchRI: 0x2435, match64: 0x00000000, modelSI: 0x2d50, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1f62f0001f637, matchRI: 0x2436, match64: 0x00000000, modelSI: 0x2d51, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f6370001f63d, matchRI: 0x2437, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d5200002d58},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f6750001f67d, matchRI: 0x243e, match64: 0x00000000, modelSI: 0x2d58, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f6840001f689, matchRI: 0x243f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d5900002d5e},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1f6c70001f6cb, matchRI: 0x2440, match64: 0x00000000, modelSI: 0x2d5e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f6cb0001f6ce, matchRI: 0x2441, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d5f00002d61},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f6fe0001f706, matchRI: 0x2442, match64: 0x00000000, modelSI: 0x2d61, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f7120001f718, matchRI: 0x2443, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d6200002d67},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f72e0001f733, matchRI: 0x2449, match64: 0x00000000, modelSI: 0x2d67, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f73a0001f73e, matchRI: 0x244a, match64: 0x00000000, modelSI: 0x2d68, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f73e0001f746, matchRI: 0x244b, match64: 0x00000000, modelSI: 0x2d69, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f7500001f756, matchRI: 0x244c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d6a00002d7c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f8360001f83c, matchRI: 0x2459, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d7c00002d82},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1f8b90001f8bc, matchRI: -0x0001, match64: 0x1f8bc0001f8c4, modelSI: 0x2d82, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1f8ca0001f8cd, matchRI: 0x245b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d8300002d88},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1f9300001f934, matchRI: 0x245c, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f9340001f938, matchRI: 0x245d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d8800002d8a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f93e0001f947, matchRI: 0x2460, match64: 0x00000000, modelSI: 0x2d8a, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1f9470001f94c, matchRI: 0x2461, match64: 0x00000000, modelSI: 0x2d8b, models64: 0x00000000},
			deviceTuple{type64: 0x940000009f, brand64: 0x1f94c0001f953, matchRI: 0x2462, match64: 0x00000000, modelSI: 0x2d8c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f9530001f958, matchRI: 0x2463, match64: 0x00000000, modelSI: 0x2d8d, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1f9580001f960, matchRI: 0x2464, match64: 0x00000000, modelSI: 0x2d8e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f9600001f965, matchRI: 0x2465, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d8f00002d93},
			deviceTuple{type64: 0x51800000525, brand64: 0x1f96f0001f975, matchRI: 0x2469, match64: 0x00000000, modelSI: 0x2d93, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f9750001f97f, matchRI: 0x246a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d9400002d9d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f9d00001f9d6, matchRI: 0x2474, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d9d00002e9d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x205b5000205b9, matchRI: 0x255f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e9d00002e9e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x205bd000205c1, matchRI: 0x2561, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e9e00002ea8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2060100020605, matchRI: 0x256b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ea800002ead},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2063b00020642, matchRI: 0x2571, match64: 0x00000000, modelSI: 0x2ead, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2064200020648, matchRI: 0x2572, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eae00002eb2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x206630002066b, matchRI: 0x2576, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eb200002eb5},
			deviceTuple{type64: 0x20d00000213, brand64: 0x206860002068b, matchRI: 0x2578, match64: 0x00000000, modelSI: 0x2eb5, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2069200020697, matchRI: 0x2579, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x20697000206a0, matchRI: 0x257a, match64: 0x00000000, modelSI: 0x2eb6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x206a0000206a5, matchRI: 0x257b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eb700002eb8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x206b9000206bf, matchRI: 0x257c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eb800002eba},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x206bf000206c5, matchRI: 0x257f, match64: 0x00000000, modelSI: 0x2eba, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x206c5000206c9, matchRI: 0x2580, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ebb00002ec1},
			deviceTuple{type64: 0x20d00000213, brand64: 0x207170002071d, matchRI: 0x2583, match64: 0x00000000, modelSI: 0x2ec1, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2071d00020723, matchRI: 0x2584, match64: 0x00000000, modelSI: 0x2ec2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2072300020729, matchRI: 0x2585, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ec300002ec6},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2075300020759, matchRI: 0x2588, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ec600002ed6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2086400020867, matchRI: 0x258c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ed600002eda},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x208960002089c, matchRI: 0x258e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eda00002edc},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2089c000208a0, matchRI: 0x2591, match64: 0x00000000, modelSI: -0x0001, models64: 0x2edc00002eea},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2093f00020946, matchRI: 0x2597, match64: 0x00000000, modelSI: 0x2eea, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2094d00020951, matchRI: 0x2598, match64: 0x00000000, modelSI: 0x2eeb, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2095100020955, matchRI: 0x2599, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eec00002eee},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2096100020966, matchRI: 0x259c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eee00002eef},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2096d00020973, matchRI: 0x259e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eef00002ef0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2097a0002097f, matchRI: 0x25a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ef000002ef2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2097f00020981, matchRI: 0x25a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ef200002efc},
			deviceTuple{type64: 0x20d00000213, brand64: 0x209cb000209d2, matchRI: 0x25ad, match64: 0x00000000, modelSI: 0x2efc, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x209d6000209dd, matchRI: 0x25ae, match64: 0x00000000, modelSI: -0x0001, models64: 0x2efd00002efe},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x209e5000209e9, matchRI: 0x25b0, match64: 0x00000000, modelSI: -0x0001, models64: 0x2efe00002eff},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x209ef000209f4, matchRI: 0x25b2, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eff00002f02},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x209f9000209fe, matchRI: 0x25b5, match64: 0x00000000, modelSI: 0x2f02, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x209fe00020a02, matchRI: 0x25b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f0300002f1b},
			deviceTuple{type64: 0x20d00000213, brand64: 0x20b5700020b5c, matchRI: 0x25cc, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f1b00002f1c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x20b5c00020b5f, matchRI: 0x25ce, match64: 0x00000000, modelSI: 0x2f1c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x20b5f00020b62, matchRI: 0x25cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f1d0000302b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2173d00021740, matchRI: 0x2687, match64: 0x00000000, modelSI: -0x0001, models64: 0x302b0000304c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2186b00021870, matchRI: 0x2699, match64: 0x00000000, modelSI: 0x304c, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2187000021877, matchRI: 0x269a, match64: 0x00000000, modelSI: 0x304d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x218770002187c, matchRI: 0x269b, match64: 0x00000000, modelSI: -0x0001, models64: 0x304e00003054},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x218cf000218d5, matchRI: 0x269e, match64: 0x00000000, modelSI: 0x3054, models64: 0x00000000},
			deviceTuple{type64: 0x245f00002467, brand64: 0x218d5000218dc, matchRI: 0x269f, match64: 0x00000000, modelSI: -0x0001, models64: 0x305500003057},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x218f3000218f8, matchRI: 0x26a1, match64: 0x00000000, modelSI: -0x0001, models64: 0x30570000305b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x218f8000218fe, matchRI: -0x0001, match64: 0x218fe00021904, modelSI: -0x0001, models64: 0x305b0000305c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2190400021909, matchRI: 0x26a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x305c0000305e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x219090002190c, matchRI: 0x26aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x305e0000306d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x219c0000219c5, matchRI: 0x26b9, match64: 0x00000000, modelSI: -0x0001, models64: 0x306d00003072},
			deviceTuple{type64: 0x20d00000213, brand64: 0x219fa00021a03, matchRI: 0x26ba, match64: 0x00000000, modelSI: -0x0001, models64: 0x307200003073},
			deviceTuple{type64: 0x20d00000213, brand64: 0x21a0d00021a13, matchRI: 0x26bc, match64: 0x00000000, modelSI: 0x3073, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x21a1700021a1c, matchRI: 0x26bd, match64: 0x00000000, modelSI: 0x3074, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x21a1c00021a20, matchRI: 0x26be, match64: 0x00000000, modelSI: -0x0001, models64: 0x307500003076},
			deviceTuple{type64: 0x20d00000213, brand64: 0x21a2d00021a32, matchRI: 0x26bf, match64: 0x00000000, modelSI: -0x0001, models64: 0x307600003078},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x21a6b00021a6f, matchRI: 0x26c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x30780000307e},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x21aa300021aa8, matchRI: 0x26c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x307e00003080},
			deviceTuple{type64: 0x20d00000213, brand64: 0x21ab200021ab7, matchRI: 0x26c8, match64: 0x00000000, modelSI: 0x3080, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1195000011954, matchRI: 0x26c9, match64: 0x00000000, modelSI: 0x3081, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x21abb00021ac4, matchRI: 0x26ca, match64: 0x00000000, modelSI: 0x3082, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x21ac400021ac8, matchRI: 0x26cb, match64: 0x00000000, modelSI: -0x0001, models64: 0x30830000309d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x21b7c00021b80, matchRI: 0x26e6, match64: 0x00000000, modelSI: -0x0001, models64: 0x309d000030be},
			deviceTuple{type64: 0x20d00000213, brand64: 0x21d3500021d39, matchRI: 0x26f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x30be000030c3},
			deviceTuple{type64: 0x20d00000213, brand64: 0x21d4100021d46, matchRI: -0x0001, match64: 0x21d4600021d4b, modelSI: 0x30c3, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x21d4b00021d55, matchRI: -0x0001, match64: 0x21d5500021d5f, modelSI: -0x0001, models64: 0x30c4000030c5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x21d5f00021d65, matchRI: 0x26f9, match64: 0x00000000, modelSI: -0x0001, models64: 0x30c5000030c8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x21d7600021d79, matchRI: 0x26fb, match64: 0x00000000, modelSI: 0x30c8, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x21d8200021d86, matchRI: 0x26fc, match64: 0x00000000, modelSI: -0x0001, models64: 0x30c9000030ce},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x21de300021de5, matchRI: 0x26fe, match64: 0x00000000, modelSI: -0x0001, models64: 0x30ce00003199},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2237c00022381, matchRI: -0x0001, match64: 0x2237c00022381, modelSI: -0x0001, models64: 0x31990000319a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2239c000223a1, matchRI: 0x27b3, match64: 0x00000000, modelSI: -0x0001, models64: 0x319a000031a5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2249b000224a1, matchRI: 0x27b9, match64: 0x00000000, modelSI: 0x31a5, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x224a1000224a5, matchRI: 0x27ba, match64: 0x00000000, modelSI: 0x31a6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x224a5000224ad, matchRI: 0x27bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x31a7000031a9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x224c5000224ca, matchRI: 0x27bd, match64: 0x00000000, modelSI: -0x0001, models64: 0x31a9000031b2},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x2250b00022511, matchRI: 0x27c7, match64: 0x00000000, modelSI: 0x31b2, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x2251100022519, matchRI: 0x27c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x31b3000031bb},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2254e00022553, matchRI: 0x27cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x31bb000031c9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x225f2000225f8, matchRI: 0x27da, match64: 0x00000000, modelSI: -0x0001, models64: 0x31c9000031cb},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x225f8000225fd, matchRI: 0x27dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x31cb000031d4},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x2263c00022641, matchRI: 0x27e5, match64: 0x00000000, modelSI: 0x31d4, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2264100022646, matchRI: 0x27e6, match64: 0x00000000, modelSI: 0x31d5, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2265000022656, matchRI: 0x27e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x31d6000031d9},
			deviceTuple{type64: 0x20d00000213, brand64: 0x226770002267b, matchRI: 0x27e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x31d9000031db},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x226850002268a, matchRI: 0x27ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x31db00003200},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x229f9000229fe, matchRI: 0x27f4, match64: 0x00000000, modelSI: 0x3200, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x229fe00022a02, matchRI: 0x27f5, match64: 0x00000000, modelSI: 0x3201, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22a0200022a05, matchRI: 0x27f6, match64: 0x00000000, modelSI: -0x0001, models64: 0x320200003204},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x22a0500022a0a, matchRI: 0x27f9, match64: 0x00000000, modelSI: 0x3204, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22a0a00022a0f, matchRI: 0x27fa, match64: 0x00000000, modelSI: -0x0001, models64: 0x32050000320b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22a4600022a49, matchRI: 0x27ff, match64: 0x00000000, modelSI: -0x0001, models64: 0x320b0000320f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22a7700022a7b, matchRI: 0x2802, match64: 0x00000000, modelSI: 0x320f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22a7b00022a80, matchRI: 0x2803, match64: 0x00000000, modelSI: -0x0001, models64: 0x321000003213},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22ab800022abc, matchRI: 0x2804, match64: 0x00000000, modelSI: -0x0001, models64: 0x321300003215},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22ac400022ac9, matchRI: 0x2807, match64: 0x00000000, modelSI: 0x3215, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22ac900022ace, matchRI: 0x2808, match64: 0x00000000, modelSI: -0x0001, models64: 0x321600003217},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22ade00022ae2, matchRI: 0x2809, match64: 0x00000000, modelSI: -0x0001, models64: 0x32170000321d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22afd00022b07, matchRI: 0x2810, match64: 0x00000000, modelSI: -0x0001, models64: 0x321d00003220},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22b2500022b2b, matchRI: 0x2811, match64: 0x00000000, modelSI: -0x0001, models64: 0x322000003227},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22b5d00022b65, matchRI: 0x2816, match64: 0x00000000, modelSI: 0x3227, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22b6500022b6c, matchRI: -0x0001, match64: 0x22b6c00022b73, modelSI: -0x0001, models64: 0x322800003229},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22b7300022b77, matchRI: 0x2818, match64: 0x00000000, modelSI: -0x0001, models64: 0x32290000323e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22c8600022c8a, matchRI: 0x281f, match64: 0x00000000, modelSI: 0x323e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22c8a00022c92, matchRI: 0x2820, match64: 0x00000000, modelSI: 0x323f, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22c9a00022ca0, matchRI: 0x2821, match64: 0x00000000, modelSI: 0x3240, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22ca000022ca5, matchRI: 0x2822, match64: 0x00000000, modelSI: -0x0001, models64: 0x324100003244},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22cae00022cb3, matchRI: 0x2826, match64: 0x00000000, modelSI: -0x0001, models64: 0x324400003246},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22cb300022cb8, matchRI: 0x2829, match64: 0x00000000, modelSI: -0x0001, models64: 0x32460000324e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22cd200022cde, matchRI: 0x2832, match64: 0x00000000, modelSI: -0x0001, models64: 0x324e00003250},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22ce300022ce8, matchRI: 0x2835, match64: 0x00000000, modelSI: 0x3250, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22ce800022cec, matchRI: 0x2836, match64: 0x00000000, modelSI: -0x0001, models64: 0x3251000032a1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22fa100022fa7, matchRI: 0x284c, match64: 0x00000000, modelSI: 0x32a1, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22fae00022fb1, matchRI: 0x284d, match64: 0x00000000, modelSI: -0x0001, models64: 0x32a2000032a4},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22fb900022fbe, matchRI: 0x2850, match64: 0x00000000, modelSI: -0x0001, models64: 0x32a4000032a6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22fd400022fda, matchRI: 0x2852, match64: 0x00000000, modelSI: -0x0001, models64: 0x32a6000032ac},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2300e00023016, matchRI: 0x2856, match64: 0x00000000, modelSI: -0x0001, models64: 0x32ac000032ad},
			deviceTuple{type64: 0x20d00000213, brand64: 0x230160002301c, matchRI: 0x2858, match64: 0x00000000, modelSI: 0x32ad, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2301c00023020, matchRI: 0x2859, match64: 0x00000000, modelSI: 0x32ae, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2302000023027, matchRI: 0x285a, match64: 0x00000000, modelSI: -0x0001, models64: 0x32af000032b1},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2304000023046, matchRI: 0x285d, match64: 0x00000000, modelSI: 0x32b1, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x230460002304a, matchRI: 0x285e, match64: 0x00000000, modelSI: -0x0001, models64: 0x32b2000032b5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x230670002306d, matchRI: 0x2861, match64: 0x00000000, modelSI: 0x32b5, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2306d00023073, matchRI: 0x2862, match64: 0x00000000, modelSI: -0x0001, models64: 0x32b6000032b9},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2307a0002307e, matchRI: 0x2866, match64: 0x00000000, modelSI: 0x32b9, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2307e00023085, matchRI: 0x2867, match64: 0x00000000, modelSI: -0x0001, models64: 0x32ba000032bd},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2308f00023098, matchRI: 0x286b, match64: 0x00000000, modelSI: -0x0001, models64: 0x32bd000032be},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x23098000230a0, matchRI: 0x286d, match64: 0x00000000, modelSI: 0x32be, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x230a0000230a5, matchRI: 0x286e, match64: 0x00000000, modelSI: -0x0001, models64: 0x32bf000032f2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x233fd00023405, matchRI: 0x2882, match64: 0x00000000, modelSI: -0x0001, models64: 0x32f2000032f4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2340b0002340f, matchRI: 0x2885, match64: 0x00000000, modelSI: -0x0001, models64: 0x32f4000032fd},
		},
		// notebooks.yml
		{
			deviceTuple{type64: 0x9d7000009de, brand64: 0x73200000736, matchRI: 0x288c, match64: 0x00000000, modelSI: -0x0001, models64: 0x32fd00003300},
			deviceTuple{type64: 0x9d7000009de, brand64: 0x367f00003683, matchRI: 0x2890, match64: 0x00000000, modelSI: -0x0001, models64: 0x330000003309},
			deviceTuple{type64: 0x9d7000009de, brand64: 0x690000006904, matchRI: 0x289a, match64: 0x00000000, modelSI: -0x0001, models64: 0x33090000330d},
			deviceTuple{type64: 0x9d7000009de, brand64: 0x962600009628, matchRI: 0x289b, match64: 0x00000000, modelSI: -0x0001, models64: 0x330d00003318},
			deviceTuple{type64: 0x9d7000009de, brand64: 0xf1ee0000f1f4, matchRI: 0x289e, match64: 0x00000000, modelSI: -0x0001, models64: 0x33180000331c},
			deviceTuple{type64: 0x9d7000009de, brand64: 0x236c3000236cc, matchRI: 0x28a3, match64: 0x00000000, modelSI: 0x331c, models64: 0x00000000},
			deviceTuple{type64: 0x9d7000009de, brand64: 0x1caaa0001cab1, matchRI: 0x28a4, match64: 0x00000000, modelSI: 0x331d, models64: 0x00000000},
			deviceTuple{type64: 0x9d7000009de, brand64: 0x1cd870001cd8e, matchRI: -0x0001, match64: 0x236fd0002370c, modelSI: -0x0001, models64: 0x331e00003320},
		},
		// portable_media_player.yml
		{
			deviceTuple{type64: 0xa0d50000a0ea, brand64: 0x244400002449, matchRI: 0x28a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x332000003328},
			deviceTuple{type64: 0xa0d50000a0ea, brand64: 0x2376c00023771, matchRI: 0x28b0, match64: 0x00000000, modelSI: 0x3328, models64: 0x00000000},
			deviceTuple{type64: 0xa0d50000a0ea, brand64: 0x2377100023775, matchRI: -0x0001, match64: 0x2377100023775, modelSI: -0x0001, models64: 0x33290000332b},
			deviceTuple{type64: 0xa0d50000a0ea, brand64: 0x2378100023786, matchRI: 0x28b2, match64: 0x00000000, modelSI: 0x332b, models64: 0x00000000},
			deviceTuple{type64: 0xa0d50000a0ea, brand64: 0x1160000011f, matchRI: -0x0001, match64: 0x2378600023796, modelSI: 0x332c, models64: 0x00000000},
			deviceTuple{type64: 0xa0d50000a0ea, brand64: 0x150a3000150ac, matchRI: 0x28b3, match64: 0x00000000, modelSI: 0x332d, models64: 0x00000000},
			deviceTuple{type64: 0xa0d50000a0ea, brand64: 0x2379d000237a2, matchRI: 0x28b4, match64: 0x00000000, modelSI: -0x0001, models64: 0x332e00003331},
			deviceTuple{type64: 0xa0d50000a0ea, brand64: 0x180000001f, matchRI: 0x28b8, match64: 0x00000000, modelSI: -0x0001, models64: 0x333100003338},
			deviceTuple{type64: 0xa0d50000a0ea, brand64: 0x2384800023850, matchRI: -0x0001, match64: 0x238500002385b, modelSI: -0x0001, models64: 0x333800003339},
			deviceTuple{type64: 0xa0d50000a0ea, brand64: 0x2385b00023863, matchRI: 0x28bb, match64: 0x00000000, modelSI: 0x3339, models64: 0x00000000},
			deviceTuple{type64: 0xa0d50000a0ea, brand64: 0x2386300023867, matchRI: 0x28bc, match64: 0x00000000, modelSI: 0x333a, models64: 0x00000000},
		},
		// shell_tv.yml
		{
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x238670002386c, matchRI: -0x0001, match64: 0x2386c00023877, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x46c00000470, matchRI: -0x0001, match64: 0x2387700023881, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x3f4c00003f4f, matchRI: -0x0001, match64: 0x238810002388a, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x65680000656c, matchRI: -0x0001, match64: 0x2388a00023894, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x69bf000069c4, matchRI: -0x0001, match64: 0x238940002389f, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x706000007064, matchRI: -0x0001, match64: 0x2389f000238a9, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x76f900007700, matchRI: 0x28bd, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x9c8500009c87, matchRI: -0x0001, match64: 0x238a9000238b1, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xce290000ce2c, matchRI: -0x0001, match64: 0x238b1000238ba, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x238ba000238bf, matchRI: -0x0001, match64: 0x238bf000238ca, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x238ca000238cf, matchRI: -0x0001, match64: 0x238cf000238da, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xf1ac0000f1b0, matchRI: -0x0001, match64: 0x238da000238e4, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x238e4000238ea, matchRI: -0x0001, match64: 0x238ea000238f6, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xfee90000feee, matchRI: -0x0001, match64: 0x238f600023901, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x129480001294f, matchRI: -0x0001, match64: 0x239010002390e, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1367c00013681, matchRI: -0x0001, match64: 0x2390e00023919, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1b9a30001b9ab, matchRI: -0x0001, match64: 0x2391900023927, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bc2f0001bc34, matchRI: -0x0001, match64: 0x2392700023932, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bddf0001bde2, matchRI: -0x0001, match64: 0x239320002393a, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c9410001c94b, matchRI: -0x0001, match64: 0x2393a0002394a, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x209e5000209e9, matchRI: -0x0001, match64: 0x2394a00023954, modelSI: -0x0001, models64: 0x00000000},
		},
		// televisions.yml
		{
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x44700000450, matchRI: 0x28be, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x45000000459, matchRI: 0x28bf, match64: 0x00000000, modelSI: -0x0001, models64: 0x333b0000333c},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x5090000050c, matchRI: -0x0001, match64: 0x5090000050c, modelSI: -0x0001, models64: 0x333c0000333d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x52d00000532, matchRI: 0x28c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x333d0000333e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2395e00023965, matchRI: -0x0001, match64: 0x2395e00023965, modelSI: -0x0001, models64: 0x333e0000333f},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x239650002396f, matchRI: -0x0001, match64: 0x239650002396f, modelSI: -0x0001, models64: 0x333f00003340},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x3cd200003cd7, matchRI: -0x0001, match64: 0x2396f00023974, modelSI: -0x0001, models64: 0x334000003341},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2397b00023986, matchRI: -0x0001, match64: 0x2398600023991, modelSI: 0x3341, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x438e00004397, matchRI: 0x28c5, match64: 0x00000000, modelSI: -0x0001, models64: 0x334200003343},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x4dc300004dc7, matchRI: 0x28c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x530300005309, matchRI: 0x28c7, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x540b00005414, matchRI: -0x0001, match64: 0x540b00005414, modelSI: -0x0001, models64: 0x334300003344},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x239a7000239ae, matchRI: -0x0001, match64: 0x239a7000239ae, modelSI: 0x3344, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x239b4000239b7, matchRI: -0x0001, match64: 0x239b4000239b7, modelSI: 0x3345, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x699c000069a4, matchRI: 0x28c9, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x239bf000239c9, matchRI: 0x28ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x770d00007717, matchRI: 0x28cb, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x239c9000239cc, matchRI: 0x28cc, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x7f0900007f0f, matchRI: 0x28cd, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x4aa000004af, matchRI: 0x28ce, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x239cc000239d1, matchRI: 0x28cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x950900009510, matchRI: 0x28d0, match64: 0x00000000, modelSI: -0x0001, models64: 0x334600003347},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x99f5000099fa, matchRI: 0x28d1, match64: 0x00000000, modelSI: -0x0001, models64: 0x334700003348},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x9cfc00009d04, matchRI: 0x28d2, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x9ee200009ee9, matchRI: 0x28d3, match64: 0x00000000, modelSI: -0x0001, models64: 0x334800003350},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xa1010000a108, matchRI: 0x28d6, match64: 0x00000000, modelSI: -0x0001, models64: 0x335000003351},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x847000008477, matchRI: 0x28d7, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a2100023a26, matchRI: 0x28d8, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xbccf0000bcd4, matchRI: 0x28d9, match64: 0x00000000, modelSI: -0x0001, models64: 0x335100003358},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xbdb10000bdb8, matchRI: 0x28dc, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a7b00023a7f, matchRI: -0x0001, match64: 0x23a7b00023a7f, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a7f00023a84, matchRI: -0x0001, match64: 0x23a7f00023a84, modelSI: -0x0001, models64: 0x335800003359},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a8400023a8b, matchRI: -0x0001, match64: 0x23a8400023a8b, modelSI: -0x0001, models64: 0x33590000335b},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xce290000ce2c, matchRI: 0x28e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x335b0000335c},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a9400023a98, matchRI: 0x28e1, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xd1ba0000d1c0, matchRI: 0x28e2, match64: 0x00000000, modelSI: -0x0001, models64: 0x335c0000335d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xddb70000ddb9, matchRI: -0x0001, match64: 0x23a9f00023aa2, modelSI: -0x0001, models64: 0x335d0000336d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23aee00023af4, matchRI: 0x28ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xfc3c0000fc44, matchRI: 0x28ed, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23af400023afa, matchRI: 0x28ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23afa00023aff, matchRI: 0x28ef, match64: 0x00000000, modelSI: -0x0001, models64: 0x336d0000336e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xff030000ff08, matchRI: 0x28f1, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23aff00023b04, matchRI: 0x28f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x336e0000336f},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x103da000103dd, matchRI: 0x28f4, match64: 0x00000000, modelSI: -0x0001, models64: 0x336f00003370},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b1900023b22, matchRI: -0x0001, match64: 0x23b1900023b22, modelSI: -0x0001, models64: 0x337000003371},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b2200023b2a, matchRI: 0x28f6, match64: 0x00000000, modelSI: -0x0001, models64: 0x337100003372},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x10e8b00010e91, matchRI: -0x0001, match64: 0x10e8b00010e91, modelSI: -0x0001, models64: 0x337200003373},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b2a00023b2e, matchRI: -0x0001, match64: 0x23b2a00023b2e, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1162b00011630, matchRI: -0x0001, match64: 0x23b2e00023b33, modelSI: -0x0001, models64: 0x337300003374},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b3e00023b47, matchRI: 0x28f9, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1470000014702, matchRI: 0x28fa, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b4700023b4b, matchRI: -0x0001, match64: 0x23b4700023b4b, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b4b00023b52, matchRI: 0x28fb, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x150a3000150ac, matchRI: -0x0001, match64: 0x150a3000150ac, modelSI: -0x0001, models64: 0x337400003378},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1532200015329, matchRI: 0x2900, match64: 0x00000000, modelSI: -0x0001, models64: 0x33780000337a},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1571100015719, matchRI: 0x2903, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x165470001654d, matchRI: 0x2904, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x168c0000168c5, matchRI: 0x2905, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b7000023b74, matchRI: 0x2906, match64: 0x00000000, modelSI: -0x0001, models64: 0x337a0000337c},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b8200023b85, matchRI: 0x2907, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b8500023b89, matchRI: 0x2908, match64: 0x00000000, modelSI: -0x0001, models64: 0x337c0000337d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b9200023b96, matchRI: 0x2909, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b9600023b9c, matchRI: 0x290a, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x180000001f, matchRI: 0x290b, match64: 0x00000000, modelSI: -0x0001, models64: 0x337d00003380},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23bb700023bc1, matchRI: -0x0001, match64: 0x23bb700023bc1, modelSI: -0x0001, models64: 0x338000003382},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1a34d0001a352, matchRI: 0x2910, match64: 0x00000000, modelSI: -0x0001, models64: 0x338200003387},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1ab830001ab8b, matchRI: -0x0001, match64: 0x23bcc00023bd5, modelSI: -0x0001, models64: 0x338700003388},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23bd500023be5, matchRI: 0x2916, match64: 0x00000000, modelSI: -0x0001, models64: 0x33880000338a},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x18e00000192, matchRI: -0x0001, match64: 0x18e00000192, modelSI: -0x0001, models64: 0x338a00003390},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bddf0001bde2, matchRI: 0x291e, match64: 0x00000000, modelSI: -0x0001, models64: 0x339000003391},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bfd60001bfe0, matchRI: 0x2920, match64: 0x00000000, modelSI: -0x0001, models64: 0x339100003392},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23bfd00023c02, matchRI: 0x2922, match64: 0x00000000, modelSI: -0x0001, models64: 0x339200003393},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c1b70001c1c0, matchRI: -0x0001, match64: 0x1c1b70001c1c0, modelSI: -0x0001, models64: 0x339300003394},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23c0d00023c18, matchRI: -0x0001, match64: 0x23c0d00023c18, modelSI: -0x0001, models64: 0x339400003395},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23c2c00023c34, matchRI: 0x2924, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23c3400023c3f, matchRI: -0x0001, match64: 0x23c3400023c3f, modelSI: -0x0001, models64: 0x339500003396},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c1ef0001c1f7, matchRI: 0x2926, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c9410001c94b, matchRI: -0x0001, match64: 0x1c9410001c94b, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1caaa0001cab1, matchRI: 0x2927, match64: 0x00000000, modelSI: -0x0001, models64: 0x33960000339d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1cd870001cd8e, matchRI: -0x0001, match64: 0x1cd870001cd8e, modelSI: -0x0001, models64: 0x339d0000339f},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1d8ee0001d8f5, matchRI: 0x292f, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23c7e00023c81, matchRI: 0x2930, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1df050001df0b, matchRI: 0x2931, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23c8100023c89, matchRI: 0x2932, match64: 0x00000000, modelSI: -0x0001, models64: 0x339f000033a1},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23c9400023c9e, matchRI: 0x2935, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23c9e00023ca6, matchRI: 0x2936, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
		},
	}
	__dr_dm = []modelTuple{
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xb00000018},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f00000027, model64: 0x2700000030},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3000000038, model64: 0x3800000045},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x450000004d, model64: 0x4d00000064},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x640000006c, model64: 0x6c0000007b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0001, match64: 0x00000000, model64: 0x7b0000008b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad000000b1, model64: 0xb1000000b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbb000000c7, model64: 0xc7000000ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0003, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4000000e4, model64: 0xe4000000e7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf4000000fe},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x10d00000116},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12300000130, model64: 0x12300000130},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1300000013a, model64: 0x1300000013a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a00000142, model64: 0x13a00000142},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1420000014d, model64: 0x14d00000157},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11f00000123, model64: 0x1570000015f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1690000016d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x17b00000181},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1850000018e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x192000001a0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x000a, match64: 0x00000000, model64: 0x1b5000001c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x000b, match64: 0x00000000, model64: 0x1c1000001cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x000d, match64: 0x00000000, model64: 0x1cf000001d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x000e, match64: 0x00000000, model64: 0x1d1000001d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x000f, match64: 0x00000000, model64: 0x1d8000001de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0010, match64: 0x00000000, model64: 0x1de000001e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0011, match64: 0x00000000, model64: 0x1e5000001e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0012, match64: 0x00000000, model64: 0x1e7000001ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0013, match64: 0x00000000, model64: 0x1ed000001f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0014, match64: 0x00000000, model64: 0x1f4000001f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0015, match64: 0x00000000, model64: 0x1f6000001f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0016, match64: 0x00000000, model64: 0x1f8000001fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0017, match64: 0x00000000, model64: 0x1fb000001fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0018, match64: 0x00000000, model64: 0x1fe00000201},
		modelTuple{type64: 0x2700000027, matchRI: 0x001a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x001b, match64: 0x00000000, model64: 0x2060000020a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x001d, match64: 0x00000000, model64: 0x2130000021b},
		modelTuple{type64: 0x2700000027, matchRI: 0x001f, match64: 0x00000000, model64: 0x21d00000227},
		modelTuple{type64: 0x2700000027, matchRI: 0x0020, match64: 0x00000000, model64: 0x22700000231},
		modelTuple{type64: 0x2700000027, matchRI: 0x0021, match64: 0x00000000, model64: 0x2310000023a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a00000241, model64: 0x2410000024d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0022, match64: 0x00000000, model64: 0x24d00000256},
		modelTuple{type64: 0x2700000027, matchRI: 0x0023, match64: 0x00000000, model64: 0x2560000025f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0024, match64: 0x00000000, model64: 0x25f0000026a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0025, match64: 0x00000000, model64: 0x26a00000274},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0027, match64: 0x00000000, model64: 0x2790000027e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0028, match64: 0x00000000, model64: 0x27e00000286},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0029, match64: 0x00000000, model64: 0x2860000028f},
		modelTuple{type64: 0x2700000027, matchRI: 0x002a, match64: 0x00000000, model64: 0x28f00000295},
		modelTuple{type64: 0x2700000027, matchRI: 0x002b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2950000029d, model64: 0x29d000002a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x002c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2ad000002b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2be000002c4, model64: 0x2be000002c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2c4000002c9, model64: 0x2c9000002ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2ce000002d5, model64: 0x2d5000002dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2dc000002e1, model64: 0x2dc000002e1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0033, match64: 0x00000000, model64: 0x2f700000304},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3040000030c, model64: 0x3040000030c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x30c00000314, model64: 0x30c00000314},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3140000031c, model64: 0x31c00000321},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3250000032e, model64: 0x32e00000332},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3320000033e, model64: 0x33e00000345},
		modelTuple{type64: 0x2700000027, matchRI: 0x0034, match64: 0x00000000, model64: 0x34500000349},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34900000356, model64: 0x3560000035f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x35f00000367, model64: 0x3670000036a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x36a00000372, model64: 0x37200000375},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x37500000380, model64: 0x38000000386},
		modelTuple{type64: 0x2700000027, matchRI: 0x0035, match64: 0x00000000, model64: 0x3860000038d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0036, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x397000003a5, model64: 0x3a5000003b3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x003b, match64: 0x00000000, model64: 0x3bf000003ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x003c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x003d, match64: 0x00000000, model64: 0x3ce000003d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x003e, match64: 0x00000000, model64: 0x3d0000003d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x003f, match64: 0x00000000, model64: 0x3d2000003d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0040, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0042, match64: 0x00000000, model64: 0x3de000003e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3e6000003ee, model64: 0x3ee000003f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3f7000003fe, model64: 0x3f7000003fe},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x40300000411},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4140000041b, model64: 0x41b00000427},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42700000434, model64: 0x43400000447},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x46400000469},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4750000047a, model64: 0x47a00000482},
		modelTuple{type64: 0x2700000027, matchRI: 0x004b, match64: 0x00000000, model64: 0x48200000486},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4860000048b, model64: 0x48b00000491},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49100000496, model64: 0x4960000049b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49b000004a0, model64: 0x4a0000004a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a5000004aa, model64: 0x4aa000004af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4af000004b4, model64: 0x4b4000004b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b7000004bc, model64: 0x4bc000004be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4be000004c3, model64: 0x4c3000004c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c5000004ca, model64: 0x37200000375},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ca000004cf, model64: 0x32e00000332},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4cf000004d4, model64: 0x4d4000004d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d7000004dc, model64: 0x2f5000002f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4dc000004e1, model64: 0x4e1000004e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x004c, match64: 0x00000000, model64: 0x4e3000004e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ea000004f4, model64: 0x4f4000004f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f8000004ff, model64: 0x4ff00000502},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0050, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0051, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0052, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5250000052d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0054, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53a00000542, model64: 0x5420000054b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0057, match64: 0x00000000, model64: 0x54b00000557},
		modelTuple{type64: 0x2700000027, matchRI: 0x0058, match64: 0x00000000, model64: 0x55700000562},
		modelTuple{type64: 0x2700000027, matchRI: 0x0059, match64: 0x00000000, model64: 0x56200000570},
		modelTuple{type64: 0x2700000027, matchRI: 0x005a, match64: 0x00000000, model64: 0x57000000574},
		modelTuple{type64: 0x2700000027, matchRI: 0x005b, match64: 0x00000000, model64: 0x5740000057b},
		modelTuple{type64: 0x2700000027, matchRI: 0x005c, match64: 0x00000000, model64: 0x57b00000584},
		modelTuple{type64: 0x2700000027, matchRI: 0x005d, match64: 0x00000000, model64: 0x5840000058d},
		modelTuple{type64: 0x2700000027, matchRI: 0x005e, match64: 0x00000000, model64: 0x58d00000594},
		modelTuple{type64: 0x2700000027, matchRI: 0x005f, match64: 0x00000000, model64: 0x5940000059f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0060, match64: 0x00000000, model64: 0x59f000005ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0061, match64: 0x00000000, model64: 0x5ab000005b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0062, match64: 0x00000000, model64: 0x5b4000005be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0063, match64: 0x00000000, model64: 0x5be000005ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0064, match64: 0x00000000, model64: 0x5ca000005d2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e5000005f0, model64: 0x5f0000005fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5fb0000060a, model64: 0x60a00000619},
		modelTuple{type64: 0x2700000027, matchRI: 0x0067, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x006b, match64: 0x00000000, model64: 0x6240000062f},
		modelTuple{type64: 0x2700000027, matchRI: 0x006c, match64: 0x00000000, model64: 0x62f00000637},
		modelTuple{type64: 0x2700000027, matchRI: 0x006d, match64: 0x00000000, model64: 0x63700000643},
		modelTuple{type64: 0x2700000027, matchRI: 0x006e, match64: 0x00000000, model64: 0x6430000064a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0070, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x0071, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0074, match64: 0x00000000, model64: 0x65f00000663},
		modelTuple{type64: 0x2700000027, matchRI: 0x0075, match64: 0x00000000, model64: 0x66300000674},
		modelTuple{type64: 0x2700000027, matchRI: 0x0076, match64: 0x00000000, model64: 0x6740000067c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0077, match64: 0x00000000, model64: 0x67c00000689},
		modelTuple{type64: 0x2700000027, matchRI: 0x0078, match64: 0x00000000, model64: 0x68900000694},
		modelTuple{type64: 0x2700000027, matchRI: 0x0079, match64: 0x00000000, model64: 0x694000006a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x007a, match64: 0x00000000, model64: 0x6a1000006ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x007b, match64: 0x00000000, model64: 0x6ae000006b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x007c, match64: 0x00000000, model64: 0x6b7000006bf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x007d, match64: 0x00000000, model64: 0x6bf000006c7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x007e, match64: 0x00000000, model64: 0x6c7000006d0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x007f, match64: 0x00000000, model64: 0x6d0000006d8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0082, match64: 0x00000000, model64: 0x6e5000006f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0083, match64: 0x00000000, model64: 0x6f1000006fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0084, match64: 0x00000000, model64: 0x6fd00000704},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7040000070c, model64: 0x70c00000714},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7140000071f, model64: 0x71f0000072a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0085, match64: 0x00000000, model64: 0x72a00000732},
		modelTuple{type64: 0x51800000525, matchRI: 0x0087, match64: 0x00000000, model64: 0x7360000073e},
		modelTuple{type64: 0x51800000525, matchRI: 0x0088, match64: 0x00000000, model64: 0x73e00000745},
		modelTuple{type64: 0x51800000525, matchRI: 0x0089, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x008a, match64: 0x00000000, model64: 0x7450000074d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x008b, match64: 0x00000000, model64: 0x74d00000754},
		modelTuple{type64: 0x20d00000213, matchRI: 0x008c, match64: 0x00000000, model64: 0x7540000075d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x008d, match64: 0x00000000, model64: 0x75d00000764},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x7640000076e, model64: 0x76e00000777},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x7770000077d, model64: 0x7770000077d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x008e, match64: 0x00000000, model64: 0x77d00000789},
		modelTuple{type64: 0x20d00000213, matchRI: 0x008f, match64: 0x00000000, model64: 0x78900000795},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x7950000079b, model64: 0x79b000007a4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0090, match64: 0x00000000, model64: 0x7a4000007b1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x7b1000007ba, model64: 0x7ba000007c7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0091, match64: 0x00000000, model64: 0x7c7000007d0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0092, match64: 0x00000000, model64: 0x7d0000007dd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0093, match64: 0x00000000, model64: 0x7dd000007e9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0094, match64: 0x00000000, model64: 0x7e9000007f2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0095, match64: 0x00000000, model64: 0x7f2000007ff},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0096, match64: 0x00000000, model64: 0x7ff0000080b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0097, match64: 0x00000000, model64: 0x80b00000818},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8180000081c, model64: 0x81c00000823},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x82300000827, model64: 0x82700000830},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0098, match64: 0x00000000, model64: 0x83000000837},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x83700000844, model64: 0x8440000084c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x84c00000856, model64: 0x8560000085b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x85b00000861, model64: 0x8610000086b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0099, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x86b00000878, model64: 0x87800000880},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8800000088c, model64: 0x8800000088c},
		modelTuple{type64: 0x2700000027, matchRI: 0x009a, match64: 0x00000000, model64: 0x88c00000897},
		modelTuple{type64: 0x2700000027, matchRI: 0x009b, match64: 0x00000000, model64: 0x897000008a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x009c, match64: 0x00000000, model64: 0x8a2000008b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x009d, match64: 0x00000000, model64: 0x8b0000008bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x009e, match64: 0x00000000, model64: 0x8bd000008ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x009f, match64: 0x00000000, model64: 0x8ca000008d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a0, match64: 0x00000000, model64: 0x8d3000008dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a1, match64: 0x00000000, model64: 0x8dc000008e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a2, match64: 0x00000000, model64: 0x8e5000008f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a3, match64: 0x00000000, model64: 0x8f2000008ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a4, match64: 0x00000000, model64: 0x8ff0000090c},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a5, match64: 0x00000000, model64: 0x90c00000918},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a6, match64: 0x00000000, model64: 0x91800000922},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a7, match64: 0x00000000, model64: 0x9220000092d},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a8, match64: 0x00000000, model64: 0x92d0000093a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a9, match64: 0x00000000, model64: 0x93a00000947},
		modelTuple{type64: 0x2700000027, matchRI: 0x00aa, match64: 0x00000000, model64: 0x91800000922},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ab, match64: 0x00000000, model64: 0x94700000954},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ac, match64: 0x00000000, model64: 0x9540000095f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ad, match64: 0x00000000, model64: 0x95f0000096a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ae, match64: 0x00000000, model64: 0x96a00000976},
		modelTuple{type64: 0x2700000027, matchRI: 0x00af, match64: 0x00000000, model64: 0x97600000981},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b0, match64: 0x00000000, model64: 0x9810000098f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b1, match64: 0x00000000, model64: 0x98f0000099f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b2, match64: 0x00000000, model64: 0x99f000009aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b3, match64: 0x00000000, model64: 0x9aa000009b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b5000009be, model64: 0x9be000009c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b4, match64: 0x00000000, model64: 0x9c3000009ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b5, match64: 0x00000000, model64: 0x9ce000009d7},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x00b6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x00b7, match64: 0x00000000, model64: 0x9de000009f0},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x00b8, match64: 0x00000000, model64: 0x9f0000009fd},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x00b9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x00ba, match64: 0x00000000, model64: 0x9fd00000a06},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x00bb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00bc, match64: 0x00000000, model64: 0xa0600000a14},
		modelTuple{type64: 0x2700000027, matchRI: 0x00bd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x00be, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x00bf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1a00000a20, model64: 0xa2000000a2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2c00000a31, model64: 0xa3100000a36},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c2, match64: 0x00000000, model64: 0xa3d00000a4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4f00000a57, model64: 0xa5700000a59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5900000a62, model64: 0xa6200000a65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6500000a68, model64: 0xa6800000a72},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c5, match64: 0x00000000, model64: 0xa7200000a79},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c6, match64: 0x00000000, model64: 0xa7900000a7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7c00000a7f, model64: 0xa7f00000a82},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c7, match64: 0x00000000, model64: 0xa8200000a8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c8, match64: 0x00000000, model64: 0xa8b00000a8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c9, match64: 0x00000000, model64: 0xa8f00000a91},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ca, match64: 0x00000000, model64: 0xa9100000a99},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cb, match64: 0x00000000, model64: 0xa9900000a9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cc, match64: 0x00000000, model64: 0xa9f00000aa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cd, match64: 0x00000000, model64: 0xaa500000aab},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ce, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00cf, match64: 0x00000000, model64: 0xaab00000ab1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xab100000ab8, model64: 0xab100000ab8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00d0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00d1, match64: 0x00000000, model64: 0xab800000ac0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00d3, match64: 0x00000000, model64: 0xac700000acc},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xacc00000ad2, model64: 0xacc00000ad2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00d4, match64: 0x00000000, model64: 0xad200000adf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00d5, match64: 0x00000000, model64: 0xadf00000ae9},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d6, match64: 0x00000000, model64: 0xae900000af7},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d7, match64: 0x00000000, model64: 0xaf700000b03},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x00da, match64: 0x00000000, model64: 0xb1e00000b26},
		modelTuple{type64: 0x2700000027, matchRI: 0x00db, match64: 0x00000000, model64: 0xb2600000b2c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x00dc, match64: 0x00000000, model64: 0xb2c00000b36},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x00dd, match64: 0x00000000, model64: 0xb3600000b42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb4700000b52, model64: 0xb5200000b64},
		modelTuple{type64: 0x2700000027, matchRI: 0x00df, match64: 0x00000000, model64: 0xb6400000b71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7100000b7d, model64: 0xb7d00000b8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8a00000b91, model64: 0xb9100000b9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb9e00000ba9, model64: 0xba900000bb7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbb700000bc2, model64: 0xbc200000bcf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbcf00000bda, model64: 0xbda00000be9},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e0, match64: 0x00000000, model64: 0xbe900000bf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e1, match64: 0x00000000, model64: 0xbf400000c00},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0000000c0c, model64: 0xc0c00000c1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1b00000c25, model64: 0xc2500000c31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3100000c3a, model64: 0xc3a00000c4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4a00000c53, model64: 0xc5300000c5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e3, match64: 0x00000000, model64: 0xc5e00000c6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e4, match64: 0x00000000, model64: 0xc6a00000c74},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e5, match64: 0x00000000, model64: 0xc7400000c7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e6, match64: 0x00000000, model64: 0xc7a00000c81},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e7, match64: 0x00000000, model64: 0xc8100000c8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e9, match64: 0x00000000, model64: 0xc9000000c96},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xc9600000ca2, model64: 0xc9600000ca2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ec, match64: 0x00000000, model64: 0xcaf00000cb9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xcbf00000cc9, model64: 0xcc900000cd2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f0, match64: 0x00000000, model64: 0xcdb00000ce0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xce000000ce7, model64: 0xce700000cee},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f1, match64: 0x00000000, model64: 0xcee00000cf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f2, match64: 0x00000000, model64: 0xcf300000cf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x00f4, match64: 0x00000000, model64: 0xcf800000cfc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00f6, match64: 0x00000000, model64: 0xd0000000d06},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xd0600000d10, model64: 0xd0600000d10},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00f7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f8, match64: 0x00000000, model64: 0xd1000000d1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f9, match64: 0x00000000, model64: 0xd1f00000d30},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3000000d36, model64: 0xd3600000d42},
		modelTuple{type64: 0x2700000027, matchRI: 0x00fa, match64: 0x00000000, model64: 0xd4200000d4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00fb, match64: 0x00000000, model64: 0xd4a00000d50},
		modelTuple{type64: 0x2700000027, matchRI: 0x00fc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x00fd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xd5000000d5a, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5e00000d65, model64: 0xd6500000d68},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ff, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xd6800000d71, model64: 0xd7100000d7a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0100, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd8100000d86, model64: 0xd8600000d8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0102, match64: 0x00000000, model64: 0xd8f00000da1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda100000da6, model64: 0xda600000db6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0103, match64: 0x00000000, model64: 0xdb600000dc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0104, match64: 0x00000000, model64: 0xdc600000ddf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0105, match64: 0x00000000, model64: 0xddf00000def},
		modelTuple{type64: 0x2700000027, matchRI: 0x0106, match64: 0x00000000, model64: 0xdef00000e08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe0800000e0d, model64: 0xe0d00000e26},
		modelTuple{type64: 0x2700000027, matchRI: 0x0107, match64: 0x00000000, model64: 0xe2600000e36},
		modelTuple{type64: 0x2700000027, matchRI: 0x0108, match64: 0x00000000, model64: 0xe3600000e4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0109, match64: 0x00000000, model64: 0xe4f00000e5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x010a, match64: 0x00000000, model64: 0xe5f00000e6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x010b, match64: 0x00000000, model64: 0xe6f00000e7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x010c, match64: 0x00000000, model64: 0xe7f00000e91},
		modelTuple{type64: 0x2700000027, matchRI: 0x010d, match64: 0x00000000, model64: 0xe9100000eac},
		modelTuple{type64: 0x2700000027, matchRI: 0x010e, match64: 0x00000000, model64: 0xeac00000ec0},
		modelTuple{type64: 0x2700000027, matchRI: 0x010f, match64: 0x00000000, model64: 0xec000000edd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0110, match64: 0x00000000, model64: 0xedd00000eef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0111, match64: 0x00000000, model64: 0xeef00000f0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0112, match64: 0x00000000, model64: 0xf0a00000f19},
		modelTuple{type64: 0x2700000027, matchRI: 0x0113, match64: 0x00000000, model64: 0xf1900000f2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0114, match64: 0x00000000, model64: 0xf2b00000f3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf3f00000f44, model64: 0xf4400000f5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0115, match64: 0x00000000, model64: 0xf5c00000f6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6b00000f70, model64: 0xf7000000f88},
		modelTuple{type64: 0x2700000027, matchRI: 0x0116, match64: 0x00000000, model64: 0xf8800000f98},
		modelTuple{type64: 0x2700000027, matchRI: 0x0117, match64: 0x00000000, model64: 0xf9800000fa8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa800000fad, model64: 0xfad00000fbf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfbf00000fc4, model64: 0xfc400000fd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0118, match64: 0x00000000, model64: 0xfd800000fe8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe800000fed, model64: 0xfed00000ffd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0119, match64: 0x00000000, model64: 0xffd0000100d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100d00001012, model64: 0x101200001021},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10210000102b, model64: 0x102b0000103b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x103b00001040, model64: 0x10400000104e},
		modelTuple{type64: 0x2700000027, matchRI: 0x011a, match64: 0x00000000, model64: 0x104e00001053},
		modelTuple{type64: 0x2700000027, matchRI: 0x011b, match64: 0x00000000, model64: 0x10530000105c},
		modelTuple{type64: 0x2700000027, matchRI: 0x011c, match64: 0x00000000, model64: 0x105c00001065},
		modelTuple{type64: 0x2700000027, matchRI: 0x011d, match64: 0x00000000, model64: 0x106500001069},
		modelTuple{type64: 0x2700000027, matchRI: 0x011e, match64: 0x00000000, model64: 0x10690000106e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106e00001073, model64: 0x107300001075},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10750000107a, model64: 0x107a00001083},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x108300001088, model64: 0x10880000108f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x108f00001094, model64: 0x10940000109a},
		modelTuple{type64: 0x2700000027, matchRI: 0x011f, match64: 0x00000000, model64: 0x109a0000109c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109c000010a2, model64: 0x10a2000010ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0120, match64: 0x00000000, model64: 0x10ad000010bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0121, match64: 0x00000000, model64: 0x10bf000010d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10d1000010d6, model64: 0x10d6000010e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10e9000010ee, model64: 0x10ee000010fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0122, match64: 0x00000000, model64: 0x10fd00001112},
		modelTuple{type64: 0x2700000027, matchRI: 0x0123, match64: 0x00000000, model64: 0x111200001130},
		modelTuple{type64: 0x2700000027, matchRI: 0x0124, match64: 0x00000000, model64: 0x113000001147},
		modelTuple{type64: 0x2700000027, matchRI: 0x0125, match64: 0x00000000, model64: 0x114700001158},
		modelTuple{type64: 0x2700000027, matchRI: 0x0126, match64: 0x00000000, model64: 0x115800001168},
		modelTuple{type64: 0x2700000027, matchRI: 0x0127, match64: 0x00000000, model64: 0x11680000117d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0128, match64: 0x00000000, model64: 0x117d0000118d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118d00001192, model64: 0x1192000011a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0129, match64: 0x00000000, model64: 0x11a3000011b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x012a, match64: 0x00000000, model64: 0x11b3000011c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x012b, match64: 0x00000000, model64: 0x11a3000011b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x012c, match64: 0x00000000, model64: 0x11c4000011d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d5000011da, model64: 0x11da000011ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11ea000011ef, model64: 0x11ef00001200},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x120000001205, model64: 0x120500001211},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121100001216, model64: 0x121600001219},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12190000121f, model64: 0x121f00001224},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12240000122a, model64: 0x122a0000122d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122d00001233, model64: 0x12330000123d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x123d00001242, model64: 0x124200001259},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12590000125f, model64: 0x125f00001277},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12770000127d, model64: 0x127d00001298},
		modelTuple{type64: 0x2700000027, matchRI: 0x012d, match64: 0x00000000, model64: 0x1298000012ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12ac000012b2, model64: 0x12b2000012c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c6000012cc, model64: 0x12cc000012e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12e0000012e5, model64: 0x12e5000012f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x012e, match64: 0x00000000, model64: 0x12f50000130a},
		modelTuple{type64: 0x2700000027, matchRI: 0x012f, match64: 0x00000000, model64: 0x130a00001328},
		modelTuple{type64: 0x2700000027, matchRI: 0x0130, match64: 0x00000000, model64: 0x13280000133b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0131, match64: 0x00000000, model64: 0x133b00001350},
		modelTuple{type64: 0x2700000027, matchRI: 0x0132, match64: 0x00000000, model64: 0x135000001368},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x13680000136d, model64: 0x136d00001380},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x138000001385, model64: 0x136d00001380},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0133, match64: 0x00000000, model64: 0x13850000139b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0134, match64: 0x00000000, model64: 0x139b0000139d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0135, match64: 0x00000000, model64: 0x139d000013a2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0136, match64: 0x00000000, model64: 0x13a2000013ad},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0137, match64: 0x00000000, model64: 0x13ad000013b7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0138, match64: 0x00000000, model64: 0x13b7000013c0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0139, match64: 0x00000000, model64: 0x13c0000013d1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x013a, match64: 0x00000000, model64: 0x13d1000013e9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x13e9000013ee, model64: 0x13ee000013f2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x13f2000013f7, model64: 0x13f700001403},
		modelTuple{type64: 0x20d00000213, matchRI: 0x013b, match64: 0x00000000, model64: 0x14030000140a},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x140a0000140f, model64: 0x140f00001422},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x142200001427, model64: 0x14270000143b},
		modelTuple{type64: 0x2700000027, matchRI: 0x013c, match64: 0x00000000, model64: 0x143b00001450},
		modelTuple{type64: 0x2700000027, matchRI: 0x013d, match64: 0x00000000, model64: 0x145000001463},
		modelTuple{type64: 0x2700000027, matchRI: 0x013e, match64: 0x00000000, model64: 0x146300001478},
		modelTuple{type64: 0x2700000027, matchRI: 0x013f, match64: 0x00000000, model64: 0x147800001493},
		modelTuple{type64: 0x2700000027, matchRI: 0x0140, match64: 0x00000000, model64: 0x1493000014a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a9000014ae, model64: 0x14ae000014c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0141, match64: 0x00000000, model64: 0x14c3000014db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0142, match64: 0x00000000, model64: 0x14db000014f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14f1000014f6, model64: 0x14f60000150c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150c00001512, model64: 0x2f5000002f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151200001518, model64: 0x15180000151b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0143, match64: 0x00000000, model64: 0x151b0000151f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0144, match64: 0x00000000, model64: 0x151f00001521},
		modelTuple{type64: 0x2700000027, matchRI: 0x0145, match64: 0x00000000, model64: 0x152100001528},
		modelTuple{type64: 0x2700000027, matchRI: 0x0146, match64: 0x00000000, model64: 0x15280000152d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x152d00001532, model64: 0x15320000153a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0147, match64: 0x00000000, model64: 0x153a00001541},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x154100001546, model64: 0x15460000154c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0148, match64: 0x00000000, model64: 0x154c0000154e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0149, match64: 0x00000000, model64: 0x154e00001554},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x155400001559, model64: 0x155900001563},
		modelTuple{type64: 0x2700000027, matchRI: 0x014a, match64: 0x00000000, model64: 0x156300001565},
		modelTuple{type64: 0x2700000027, matchRI: 0x014b, match64: 0x00000000, model64: 0x156500001568},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15680000156d, model64: 0x156d00001575},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15750000157a, model64: 0x157a00001584},
		modelTuple{type64: 0x2700000027, matchRI: 0x014c, match64: 0x00000000, model64: 0x158400001587},
		modelTuple{type64: 0x2700000027, matchRI: 0x014d, match64: 0x00000000, model64: 0x158700001590},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159000001595, model64: 0x15950000159a},
		modelTuple{type64: 0x2700000027, matchRI: 0x014e, match64: 0x00000000, model64: 0x159a000015b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x014f, match64: 0x00000000, model64: 0x15b0000015cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0150, match64: 0x00000000, model64: 0x15cf000015e5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0151, match64: 0x00000000, model64: 0x15e5000015fb},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x15fb000015ff, model64: 0x15ff00001617},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x16170000161c, model64: 0x161c0000162c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0152, match64: 0x00000000, model64: 0x162c0000163c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x163c00001640, model64: 0x162c0000163c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x164000001645, model64: 0x164500001655},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x16550000165a, model64: 0x165a00001669},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x16690000166e, model64: 0x166e0000167d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x167d00001682, model64: 0x168200001692},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x169200001697, model64: 0x1697000016a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0153, match64: 0x00000000, model64: 0x16a8000016b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0154, match64: 0x00000000, model64: 0x16b9000016bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16bd000016d3, model64: 0x16d3000016d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0155, match64: 0x00000000, model64: 0x16d9000016e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e8000016fd, model64: 0x16fd0000170a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170a0000171f, model64: 0x171f0000172c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172c00001742, model64: 0x174200001750},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175000001765, model64: 0x176500001772},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177200001778, model64: 0x177800001786},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17860000178b, model64: 0x178b0000179b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0156, match64: 0x00000000, model64: 0x179b000017a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0157, match64: 0x00000000, model64: 0x17a7000017b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0158, match64: 0x00000000, model64: 0x17a7000017b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0159, match64: 0x00000000, model64: 0x17b2000017bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17bc000017c1, model64: 0x17c1000017c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17c7000017cc, model64: 0x17cc000017d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x015a, match64: 0x00000000, model64: 0x17d4000017d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x015b, match64: 0x00000000, model64: 0x17d6000017d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x015c, match64: 0x00000000, model64: 0x17d8000017dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x015d, match64: 0x00000000, model64: 0x17dd000017e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17e2000017e7, model64: 0x17e7000017ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ee000017f3, model64: 0x17f3000017fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x015e, match64: 0x00000000, model64: 0x17fa00001804},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x180400001809, model64: 0x180900001818},
		modelTuple{type64: 0x2700000027, matchRI: 0x015f, match64: 0x00000000, model64: 0x18180000181f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0160, match64: 0x00000000, model64: 0x181f00001822},
		modelTuple{type64: 0x2700000027, matchRI: 0x0161, match64: 0x00000000, model64: 0x18220000182a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0162, match64: 0x00000000, model64: 0x182a00001831},
		modelTuple{type64: 0x2700000027, matchRI: 0x0163, match64: 0x00000000, model64: 0x183100001832},
		modelTuple{type64: 0x2700000027, matchRI: 0x0164, match64: 0x00000000, model64: 0x183200001834},
		modelTuple{type64: 0x2700000027, matchRI: 0x0165, match64: 0x00000000, model64: 0x18340000183d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0166, match64: 0x00000000, model64: 0x183d00001846},
		modelTuple{type64: 0x2700000027, matchRI: 0x0167, match64: 0x00000000, model64: 0x18460000184f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0168, match64: 0x00000000, model64: 0x184f00001858},
		modelTuple{type64: 0x2700000027, matchRI: 0x0169, match64: 0x00000000, model64: 0x185800001861},
		modelTuple{type64: 0x2700000027, matchRI: 0x016a, match64: 0x00000000, model64: 0x186100001863},
		modelTuple{type64: 0x2700000027, matchRI: 0x016b, match64: 0x00000000, model64: 0x18630000186c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186c00001871, model64: 0x18710000187b},
		modelTuple{type64: 0x2700000027, matchRI: 0x016c, match64: 0x00000000, model64: 0x187b00001885},
		modelTuple{type64: 0x2700000027, matchRI: 0x016d, match64: 0x00000000, model64: 0x188500001887},
		modelTuple{type64: 0x2700000027, matchRI: 0x016e, match64: 0x00000000, model64: 0x188700001889},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18890000188e, model64: 0x188e00001896},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x016f, match64: 0x00000000, model64: 0x189600001898},
		modelTuple{type64: 0x2700000027, matchRI: 0x0170, match64: 0x00000000, model64: 0x189800001899},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18990000189e, model64: 0x189e000018a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0171, match64: 0x00000000, model64: 0x18a6000018af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0172, match64: 0x00000000, model64: 0x18af000018b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0173, match64: 0x00000000, model64: 0x18b1000018b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b3000018b8, model64: 0x18b8000018bf},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0174, match64: 0x00000000, model64: 0x109a0000109c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0175, match64: 0x00000000, model64: 0x18bf000018c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0176, match64: 0x00000000, model64: 0x18c1000018ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0177, match64: 0x00000000, model64: 0x18ca000018cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18cb000018d0, model64: 0x18d0000018d1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0178, match64: 0x00000000, model64: 0x18d1000018d7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0179, match64: 0x00000000, model64: 0x18d7000018df},
		modelTuple{type64: 0x20d00000213, matchRI: 0x017a, match64: 0x00000000, model64: 0x18df000018e6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x017b, match64: 0x00000000, model64: 0x18e6000018ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18ef000018f9, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x017c, match64: 0x00000000, model64: 0x18f900001906},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19060000190b, model64: 0x190b00001910},
		modelTuple{type64: 0x2700000027, matchRI: 0x017d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x017e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x017f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0180, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0183, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0184, match64: 0x00000000, model64: 0x191d00001924},
		modelTuple{type64: 0x2700000027, matchRI: 0x0185, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0187, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0189, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19330000193f, model64: 0x193f00001943},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19430000194d, model64: 0x194d0000194f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x194f0000195c, model64: 0x195c00001961},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x196100001970, model64: 0x197000001977},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x197700001982, model64: 0x198200001985},
		modelTuple{type64: 0x2700000027, matchRI: 0x018a, match64: 0x00000000, model64: 0x19850000198c},
		modelTuple{type64: 0x2700000027, matchRI: 0x018b, match64: 0x00000000, model64: 0x198c00001991},
		modelTuple{type64: 0x2700000027, matchRI: 0x018c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x018d, match64: 0x00000000, model64: 0x199100001997},
		modelTuple{type64: 0x2700000027, matchRI: 0x018f, match64: 0x00000000, model64: 0x19a0000019a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0190, match64: 0x00000000, model64: 0x19a7000019ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0191, match64: 0x00000000, model64: 0x19ab000019af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0192, match64: 0x00000000, model64: 0x19af000019b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0193, match64: 0x00000000, model64: 0x19b2000019b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0194, match64: 0x00000000, model64: 0x19b4000019b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0195, match64: 0x00000000, model64: 0x19b7000019bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0196, match64: 0x00000000, model64: 0x19bf000019c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0197, match64: 0x00000000, model64: 0x19c7000019d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0198, match64: 0x00000000, model64: 0x19d9000019e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19e4000019ef, model64: 0x19ef000019fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0199, match64: 0x00000000, model64: 0x19fb00001a03},
		modelTuple{type64: 0x2700000027, matchRI: 0x019a, match64: 0x00000000, model64: 0x1a0300001a09},
		modelTuple{type64: 0x2700000027, matchRI: 0x019b, match64: 0x00000000, model64: 0x19b7000019bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1000001a15, model64: 0x1a1500001a1b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1a1b00001a25, model64: 0x1a2500001a2f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1a2f00001a37, model64: 0x1a3700001a41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a4100001a47, model64: 0x1a4700001a4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x019d, match64: 0x00000000, model64: 0x1a4d00001a57},
		modelTuple{type64: 0x2700000027, matchRI: 0x019e, match64: 0x00000000, model64: 0x1a5700001a5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5f00001a66, model64: 0x1a6600001a6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6d00001a74, model64: 0x1a7400001a7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7b00001a85, model64: 0x1a8500001a8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8f00001a97, model64: 0x1a9700001a9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x019f, match64: 0x00000000, model64: 0x1a9f00001aa9},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a0, match64: 0x00000000, model64: 0x1aa900001ab1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab100001ab8, model64: 0x1ab800001abf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1abf00001ac6, model64: 0x1ac600001acd},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a1, match64: 0x00000000, model64: 0x1acd00001ad4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ad400001adb, model64: 0x1adb00001ae2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae200001af5, model64: 0x1af500001b0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0a00001b15, model64: 0x1b1500001b20},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a2, match64: 0x00000000, model64: 0x1b2000001b2f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2f00001b3c, model64: 0x1b3c00001b49},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a3, match64: 0x00000000, model64: 0x1b4900001b58},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a4, match64: 0x00000000, model64: 0x1b5800001b62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b6200001b69, model64: 0x1b6900001b70},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b7000001b79, model64: 0x1b7900001b82},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a5, match64: 0x00000000, model64: 0x1b8200001b8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8a00001b92, model64: 0x1b9200001b9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9a00001ba1, model64: 0x1ba100001ba8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba800001bb1, model64: 0x1bb100001bba},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a6, match64: 0x00000000, model64: 0x1bba00001bc8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bc800001bd2, model64: 0x1bd200001bdc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bdc00001be8, model64: 0x1be800001bf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a7, match64: 0x00000000, model64: 0x1bf400001bfd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bfd00001c0c, model64: 0x1c0c00001c1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a8, match64: 0x00000000, model64: 0x1c1b00001c26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c2600001c34, model64: 0x1c3400001c42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c4200001c4f, model64: 0x1c4f00001c5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c5c00001c67, model64: 0x1c6700001c72},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a9, match64: 0x00000000, model64: 0x1c7200001c81},
		modelTuple{type64: 0x2700000027, matchRI: 0x01aa, match64: 0x00000000, model64: 0x1c8100001c94},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ab, match64: 0x00000000, model64: 0x1c9400001ca9},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ac, match64: 0x00000000, model64: 0x1ca900001cb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ad, match64: 0x00000000, model64: 0x1cb600001cc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ae, match64: 0x00000000, model64: 0x1cc400001cd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cd100001cdd, model64: 0x1cdd00001ce9},
		modelTuple{type64: 0x2700000027, matchRI: 0x01af, match64: 0x00000000, model64: 0x1ce900001cf5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cf500001d07, model64: 0x1d0700001d19},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b0, match64: 0x00000000, model64: 0x1d1900001d27},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b1, match64: 0x00000000, model64: 0x1d2700001d2f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d2f00001d36, model64: 0x1d3600001d3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b2, match64: 0x00000000, model64: 0x1d3d00001d44},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b3, match64: 0x00000000, model64: 0x1d4400001d4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b4, match64: 0x00000000, model64: 0x1d4c00001d54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5400001d5c, model64: 0x1d5c00001d65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d6500001d74, model64: 0x1d7400001d80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8000001d87, model64: 0x1d8700001d8e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8e00001d94, model64: 0x1d9400001d9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9a00001da7, model64: 0x1da700001db6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1db600001dc2, model64: 0x1dc200001dca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dca00001dd2, model64: 0x1dd200001dda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dda00001de1, model64: 0x1de100001de8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1de800001df0, model64: 0x1de800001df0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1df000001dfb, model64: 0x1dfb00001e04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0400001e0e, model64: 0x1e0e00001e14},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01b5, match64: 0x00000000, model64: 0x1e1400001e1b},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1e1b00001e24, model64: 0x1e2400001e2d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1e2d00001e3c, model64: 0x1e3c00001e45},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1e4500001e50, model64: 0x1e5000001e54},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1e5400001e64, model64: 0x1a2500001a2f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1e6400001e74, model64: 0x1e7400001e86},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1e8600001e97, model64: 0x1e9700001eaa},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01b6, match64: 0x00000000, model64: 0x1eaa00001ebf},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ebf00001ecc, model64: 0x1ecc00001ede},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ede00001eed, model64: 0x1eed00001efc},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1efc00001f05, model64: 0x1f0500001f13},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01b7, match64: 0x00000000, model64: 0x1f1300001f1f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01b8, match64: 0x00000000, model64: 0x1e1400001e1b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01b9, match64: 0x00000000, model64: 0x1f1f00001f26},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01ba, match64: 0x00000000, model64: 0x1f2600001f2b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f2b00001f37, model64: 0x1f2600001f2b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01bb, match64: 0x00000000, model64: 0x1f3700001f44},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f4400001f4b, model64: 0x1f4b00001f53},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f5300001f65, model64: 0x1f6500001f6f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01bc, match64: 0x00000000, model64: 0x1f6f00001f73},
		modelTuple{type64: 0x2700000027, matchRI: 0x01bd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x01be, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f7c00001f8c, model64: 0x1f8c00001f9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9c00001fac, model64: 0x1fac00001fbc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fbc00001fc2, model64: 0x1fbc00001fc2},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x1fc200001fce, model64: 0x1fce00001fdb},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x1fdb00001fee, model64: 0x1fee00002001},
		modelTuple{type64: 0x940000009f, matchRI: 0x01c0, match64: 0x00000000, model64: 0x200100002011},
		modelTuple{type64: 0x940000009f, matchRI: 0x01c1, match64: 0x00000000, model64: 0x201100002021},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x20210000202d, model64: 0x20210000202d},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x202d0000203c, model64: 0x202d0000203c},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x203c00002048, model64: 0x204800002055},
		modelTuple{type64: 0x940000009f, matchRI: 0x01c3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x940000009f, matchRI: 0x01c4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x206500002069, model64: 0x20690000207d},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x207d00002081, model64: 0x208100002095},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x209500002099, model64: 0x2099000020a8},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x20a8000020af, model64: 0x20af000020c6},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x20c6000020ca, model64: 0x20ca000020d9},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x20d9000020df, model64: 0x20df000020f4},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x20f4000020f9, model64: 0x20f900002113},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x21130000211c, model64: 0x211c00002134},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x01c9, match64: 0x00000000, model64: 0x213400002141},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x01ca, match64: 0x00000000, model64: 0x214100002151},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x215100002156, model64: 0x21560000216a},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cb, match64: 0x00000000, model64: 0x216a00002171},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cc, match64: 0x00000000, model64: 0x21710000217f},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cd, match64: 0x00000000, model64: 0x217f0000218d},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ce, match64: 0x00000000, model64: 0x218d000021a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cf, match64: 0x00000000, model64: 0x21a5000021bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d0, match64: 0x00000000, model64: 0x21bb000021d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d1, match64: 0x00000000, model64: 0x21d1000021e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d2, match64: 0x00000000, model64: 0x21e8000021fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d3, match64: 0x00000000, model64: 0x21fd00002216},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d4, match64: 0x00000000, model64: 0x22160000222d},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d5, match64: 0x00000000, model64: 0x222d00002236},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d6, match64: 0x00000000, model64: 0x22360000223f},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d7, match64: 0x00000000, model64: 0x223f0000224c},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d8, match64: 0x00000000, model64: 0x224c0000225c},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d9, match64: 0x00000000, model64: 0x225c0000226c},
		modelTuple{type64: 0x2700000027, matchRI: 0x01da, match64: 0x00000000, model64: 0x226c0000227c},
		modelTuple{type64: 0x2700000027, matchRI: 0x01db, match64: 0x00000000, model64: 0x227c0000228c},
		modelTuple{type64: 0x2700000027, matchRI: 0x01dc, match64: 0x00000000, model64: 0x228c0000229c},
		modelTuple{type64: 0x2700000027, matchRI: 0x01dd, match64: 0x00000000, model64: 0x229c000022ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x01de, match64: 0x00000000, model64: 0x22ac000022bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x01df, match64: 0x00000000, model64: 0x22bc000022c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e0, match64: 0x00000000, model64: 0x22c8000022d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e1, match64: 0x00000000, model64: 0x22d7000022e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e2, match64: 0x00000000, model64: 0x22e1000022f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e3, match64: 0x00000000, model64: 0x22f200002303},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e4, match64: 0x00000000, model64: 0x230300002314},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e5, match64: 0x00000000, model64: 0x23140000232a},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x232a00002332, model64: 0x23320000233c},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e6, match64: 0x00000000, model64: 0x233c00002347},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23470000234d, model64: 0x23470000234d},
		modelTuple{type64: 0x234d0000235a, matchRI: 0x01e7, match64: 0x00000000, model64: 0x235a0000235e},
		modelTuple{type64: 0x234d0000235a, matchRI: 0x01e8, match64: 0x00000000, model64: 0x235e00002369},
		modelTuple{type64: 0x234d0000235a, matchRI: -0x0001, match64: 0x236900002379, model64: 0x23790000237e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238900002390, model64: 0x239000002398},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23980000239e, model64: 0x239e000023a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a9000023b6, model64: 0x23a9000023b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b6000023bb, model64: 0x23b6000023bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23bb000023c9, model64: 0x23c9000023d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ec, match64: 0x00000000, model64: 0x23d7000023e0},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x01ed, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ee, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ef, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x01f2, match64: 0x00000000, model64: 0x23ef000023f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x01f3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x23fb0000240a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x01f9, match64: 0x00000000, model64: 0x241c00002427},
		modelTuple{type64: 0x2700000027, matchRI: 0x01fa, match64: 0x00000000, model64: 0x242700002432},
		modelTuple{type64: 0x2700000027, matchRI: 0x01fb, match64: 0x00000000, model64: 0x243200002439},
		modelTuple{type64: 0x2700000027, matchRI: 0x01fc, match64: 0x00000000, model64: 0x243900002444},
		modelTuple{type64: 0x2700000027, matchRI: 0x01fd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x234d0000235a, matchRI: -0x0001, match64: 0x244900002450, model64: 0x244900002450},
		modelTuple{type64: 0x234d0000235a, matchRI: -0x0001, match64: 0x245000002457, model64: 0x2700000027},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x24570000245f, model64: 0x246700002471},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x247100002479, model64: 0x247900002483},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x24830000248b, model64: 0x248b0000249e},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x249e000024a6, model64: 0x24a6000024b9},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x24b9000024c1, model64: 0x24c1000024d4},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x24d4000024dc, model64: 0x24dc000024ef},
		modelTuple{type64: 0x245f00002467, matchRI: 0x01ff, match64: 0x00000000, model64: 0x24ef00002502},
		modelTuple{type64: 0x245f00002467, matchRI: 0x0200, match64: 0x00000000, model64: 0x250200002515},
		modelTuple{type64: 0x245f00002467, matchRI: 0x0201, match64: 0x00000000, model64: 0x251500002522},
		modelTuple{type64: 0x245f00002467, matchRI: 0x0202, match64: 0x00000000, model64: 0x25220000252f},
		modelTuple{type64: 0x245f00002467, matchRI: 0x0203, match64: 0x00000000, model64: 0x252f00002544},
		modelTuple{type64: 0x245f00002467, matchRI: 0x0204, match64: 0x00000000, model64: 0x254400002559},
		modelTuple{type64: 0x245f00002467, matchRI: 0x0205, match64: 0x00000000, model64: 0x25590000256c},
		modelTuple{type64: 0x245f00002467, matchRI: 0x0206, match64: 0x00000000, model64: 0x256c0000257f},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x257f00002588, model64: 0x258800002593},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x25930000259b, model64: 0x259b000025a8},
		modelTuple{type64: 0x245f00002467, matchRI: 0x0207, match64: 0x00000000, model64: 0x25a8000025bc},
		modelTuple{type64: 0x245f00002467, matchRI: 0x0208, match64: 0x00000000, model64: 0x25bc000025d0},
		modelTuple{type64: 0x245f00002467, matchRI: 0x0209, match64: 0x00000000, model64: 0x25d0000025e3},
		modelTuple{type64: 0x245f00002467, matchRI: 0x020a, match64: 0x00000000, model64: 0x25e3000025f6},
		modelTuple{type64: 0x245f00002467, matchRI: 0x020b, match64: 0x00000000, model64: 0x25f600002609},
		modelTuple{type64: 0x245f00002467, matchRI: 0x020c, match64: 0x00000000, model64: 0x26090000261c},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x261c00002621, model64: 0x261c00002621},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x020d, match64: 0x00000000, model64: 0x26210000262f},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x020e, match64: 0x00000000, model64: 0x262f0000263d},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x020f, match64: 0x00000000, model64: 0x263d0000264b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0210, match64: 0x00000000, model64: 0x264b00002659},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0211, match64: 0x00000000, model64: 0x26590000266c},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0212, match64: 0x00000000, model64: 0x266c00002677},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0213, match64: 0x00000000, model64: 0x267700002686},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0214, match64: 0x00000000, model64: 0x268600002695},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0215, match64: 0x00000000, model64: 0x2695000026a0},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0216, match64: 0x00000000, model64: 0x26a0000026ab},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0217, match64: 0x00000000, model64: 0x26ab000026b6},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0218, match64: 0x00000000, model64: 0x26ab000026b6},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0219, match64: 0x00000000, model64: 0x26b6000026c5},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x021a, match64: 0x00000000, model64: 0x26c5000026d6},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x021b, match64: 0x00000000, model64: 0x26d6000026e5},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x021c, match64: 0x00000000, model64: 0x26e5000026f6},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x021d, match64: 0x00000000, model64: 0x26f600002705},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x021e, match64: 0x00000000, model64: 0x27050000271b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x021f, match64: 0x00000000, model64: 0x271b0000272a},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0220, match64: 0x00000000, model64: 0x272a0000273b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0221, match64: 0x00000000, model64: 0x273b0000274a},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0222, match64: 0x00000000, model64: 0x274a0000275b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0223, match64: 0x00000000, model64: 0x275b0000276a},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0224, match64: 0x00000000, model64: 0x276a0000277b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0225, match64: 0x00000000, model64: 0x277b0000278a},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0226, match64: 0x00000000, model64: 0x278a00002799},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0227, match64: 0x00000000, model64: 0x2799000027aa},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0228, match64: 0x00000000, model64: 0x27aa000027b9},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0229, match64: 0x00000000, model64: 0x27b9000027c8},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x022a, match64: 0x00000000, model64: 0x27c8000027db},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x022b, match64: 0x00000000, model64: 0x27db000027ed},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x022c, match64: 0x00000000, model64: 0x27ed00002804},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x022d, match64: 0x00000000, model64: 0x280400002816},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x022e, match64: 0x00000000, model64: 0x281600002828},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x022f, match64: 0x00000000, model64: 0x28280000283a},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0230, match64: 0x00000000, model64: 0x28280000283a},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0231, match64: 0x00000000, model64: 0x283a0000284c},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0232, match64: 0x00000000, model64: 0x284c0000285e},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0233, match64: 0x00000000, model64: 0x285e00002870},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0234, match64: 0x00000000, model64: 0x287000002886},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0235, match64: 0x00000000, model64: 0x288600002898},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0236, match64: 0x00000000, model64: 0x2898000028ae},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0237, match64: 0x00000000, model64: 0x28ae000028c4},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0238, match64: 0x00000000, model64: 0x28c4000028da},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0239, match64: 0x00000000, model64: 0x28da000028f0},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x023a, match64: 0x00000000, model64: 0x28f000002906},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x023b, match64: 0x00000000, model64: 0x29060000291c},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x023c, match64: 0x00000000, model64: 0x291c00002937},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x023d, match64: 0x00000000, model64: 0x293700002952},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x023e, match64: 0x00000000, model64: 0x295200002968},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x023f, match64: 0x00000000, model64: 0x296800002983},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0240, match64: 0x00000000, model64: 0x298300002999},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0241, match64: 0x00000000, model64: 0x2999000029af},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0242, match64: 0x00000000, model64: 0x29af000029c5},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0243, match64: 0x00000000, model64: 0x29af000029c5},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0244, match64: 0x00000000, model64: 0x29c5000029db},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0245, match64: 0x00000000, model64: 0x29db000029f1},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0246, match64: 0x00000000, model64: 0x29f100002a07},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0247, match64: 0x00000000, model64: 0x2a0700002a1d},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0248, match64: 0x00000000, model64: 0x2a1d00002a2f},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0249, match64: 0x00000000, model64: 0x2a2f00002a45},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x024a, match64: 0x00000000, model64: 0x2a4500002a5b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x024b, match64: 0x00000000, model64: 0x2a5b00002a71},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x024c, match64: 0x00000000, model64: 0x2a7100002a87},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x024d, match64: 0x00000000, model64: 0x2a8700002a9d},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x024e, match64: 0x00000000, model64: 0x2a9d00002ab3},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x024f, match64: 0x00000000, model64: 0x2ab300002ac9},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0250, match64: 0x00000000, model64: 0x2ac900002adf},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0251, match64: 0x00000000, model64: 0x2adf00002af5},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0252, match64: 0x00000000, model64: 0x2af500002b0b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0253, match64: 0x00000000, model64: 0x2b0b00002b21},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0254, match64: 0x00000000, model64: 0x2b2100002b37},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0255, match64: 0x00000000, model64: 0x2b3700002b52},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0256, match64: 0x00000000, model64: 0x2b5200002b6d},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0257, match64: 0x00000000, model64: 0x2b6d00002b88},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0258, match64: 0x00000000, model64: 0x2b8800002ba3},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0259, match64: 0x00000000, model64: 0x2ba300002bb9},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x025a, match64: 0x00000000, model64: 0x2bb900002bcf},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x025b, match64: 0x00000000, model64: 0x2bcf00002be5},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x025c, match64: 0x00000000, model64: 0x2be500002bfb},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x025d, match64: 0x00000000, model64: 0x2bfb00002c11},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x025e, match64: 0x00000000, model64: 0x2c1100002c27},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x025f, match64: 0x00000000, model64: 0x2c2700002c42},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0260, match64: 0x00000000, model64: 0x2c4200002c5d},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0261, match64: 0x00000000, model64: 0x2c5d00002c73},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0262, match64: 0x00000000, model64: 0x2c7300002c89},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0263, match64: 0x00000000, model64: 0x2c8900002c9f},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0264, match64: 0x00000000, model64: 0x2c9f00002cb5},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0265, match64: 0x00000000, model64: 0x2c9f00002cb5},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0266, match64: 0x00000000, model64: 0x2cb500002ccb},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0267, match64: 0x00000000, model64: 0x2ccb00002ce1},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0268, match64: 0x00000000, model64: 0x2ce100002cf0},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0269, match64: 0x00000000, model64: 0x2cf000002cff},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x026a, match64: 0x00000000, model64: 0x2cff00002d0e},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x026b, match64: 0x00000000, model64: 0x2d0e00002d1d},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x026c, match64: 0x00000000, model64: 0x2d1d00002d2c},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x026d, match64: 0x00000000, model64: 0x2d2c00002d3b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x026e, match64: 0x00000000, model64: 0x2d3b00002d4a},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x026f, match64: 0x00000000, model64: 0x2d4a00002d59},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0270, match64: 0x00000000, model64: 0x2d5900002d68},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0271, match64: 0x00000000, model64: 0x2d6800002d81},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0272, match64: 0x00000000, model64: 0x2d8100002d9f},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0273, match64: 0x00000000, model64: 0x2d9f00002dad},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0274, match64: 0x00000000, model64: 0x2dad00002dbf},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0275, match64: 0x00000000, model64: 0x2d9f00002dad},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0276, match64: 0x00000000, model64: 0x2dbf00002dd2},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0277, match64: 0x00000000, model64: 0x2dd200002de1},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0278, match64: 0x00000000, model64: 0x2de100002de7},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0279, match64: 0x00000000, model64: 0x2de700002df0},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x027a, match64: 0x00000000, model64: 0x2df000002dfa},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x027b, match64: 0x00000000, model64: 0x2dfa00002e02},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x027c, match64: 0x00000000, model64: 0x2e0200002e0b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x027d, match64: 0x00000000, model64: 0x2e0b00002e13},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x027e, match64: 0x00000000, model64: 0x2e1300002e1c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x027f, match64: 0x00000000, model64: 0x2e1c00002e25},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0280, match64: 0x00000000, model64: 0x2e2500002e32},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0281, match64: 0x00000000, model64: 0x2e3200002e3a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0282, match64: 0x00000000, model64: 0x2e3a00002e48},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0283, match64: 0x00000000, model64: 0x2e4800002e51},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0284, match64: 0x00000000, model64: 0x2e5100002e5a},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0285, match64: 0x00000000, model64: 0x2e5a00002e62},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0286, match64: 0x00000000, model64: 0x2e6200002e6f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0287, match64: 0x00000000, model64: 0x2e6f00002e77},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0288, match64: 0x00000000, model64: 0x2e7700002e84},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0289, match64: 0x00000000, model64: 0x2e8400002e8c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x028a, match64: 0x00000000, model64: 0x2e8c00002e95},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x028b, match64: 0x00000000, model64: 0x2e9500002ea2},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x028c, match64: 0x00000000, model64: 0x2ea200002eab},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x028d, match64: 0x00000000, model64: 0x2eab00002eb4},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x028e, match64: 0x00000000, model64: 0x2eb400002ec1},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x028f, match64: 0x00000000, model64: 0x2ec100002ed2},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0290, match64: 0x00000000, model64: 0x2ed200002ee2},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0291, match64: 0x00000000, model64: 0x2ee200002ef0},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0292, match64: 0x00000000, model64: 0x2ef000002ef9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0293, match64: 0x00000000, model64: 0x2ef900002f06},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0294, match64: 0x00000000, model64: 0x2f0600002f17},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0295, match64: 0x00000000, model64: 0x2f1700002f24},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0296, match64: 0x00000000, model64: 0x2f2400002f35},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0297, match64: 0x00000000, model64: 0x2f3500002f43},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0298, match64: 0x00000000, model64: 0x2f4300002f4c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0299, match64: 0x00000000, model64: 0x2f4c00002f5c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x029a, match64: 0x00000000, model64: 0x2f5c00002f6a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x029b, match64: 0x00000000, model64: 0x2f6a00002f77},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x029c, match64: 0x00000000, model64: 0x2f7700002f88},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x029d, match64: 0x00000000, model64: 0x2f8800002f91},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x029e, match64: 0x00000000, model64: 0x2f9100002f9f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x029f, match64: 0x00000000, model64: 0x2f9f00002fac},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x02a0, match64: 0x00000000, model64: 0x2fac00002fbd},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x02a1, match64: 0x00000000, model64: 0x2fbd00002fc6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a2, match64: 0x00000000, model64: 0x2fc600002fca},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a3, match64: 0x00000000, model64: 0x2fca00002fd0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a4, match64: 0x00000000, model64: 0x2fd000002fd9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a5, match64: 0x00000000, model64: 0x2fd900002fdf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a6, match64: 0x00000000, model64: 0x2fdf00002fe5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a7, match64: 0x00000000, model64: 0x2fe500002fed},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a8, match64: 0x00000000, model64: 0x2fed00002ff8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a9, match64: 0x00000000, model64: 0x2ff800003003},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02aa, match64: 0x00000000, model64: 0x30030000300e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02ab, match64: 0x00000000, model64: 0x300e00003018},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02ac, match64: 0x00000000, model64: 0x301800003024},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02ad, match64: 0x00000000, model64: 0x302400003031},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02ae, match64: 0x00000000, model64: 0x30310000303b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02af, match64: 0x00000000, model64: 0x303b0000304a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b0, match64: 0x00000000, model64: 0x304a00003057},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b1, match64: 0x00000000, model64: 0x305700003061},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b2, match64: 0x00000000, model64: 0x30610000306c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b3, match64: 0x00000000, model64: 0x306c0000307a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b4, match64: 0x00000000, model64: 0x307a0000308d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b5, match64: 0x00000000, model64: 0x308d0000309b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b6, match64: 0x00000000, model64: 0x309b000030ab},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b7, match64: 0x00000000, model64: 0x30ab000030ba},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b8, match64: 0x00000000, model64: 0x30ba000030c9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b9, match64: 0x00000000, model64: 0x30c9000030d4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02ba, match64: 0x00000000, model64: 0x30d4000030de},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02bb, match64: 0x00000000, model64: 0x30de000030ea},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02bc, match64: 0x00000000, model64: 0x30ea000030fb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02bd, match64: 0x00000000, model64: 0x30fb00003107},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02be, match64: 0x00000000, model64: 0x31070000311c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02bf, match64: 0x00000000, model64: 0x311c0000312c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02c0, match64: 0x00000000, model64: 0x312c0000313b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02c1, match64: 0x00000000, model64: 0x313b00003145},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02c2, match64: 0x00000000, model64: 0x314500003154},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02c3, match64: 0x00000000, model64: 0x31540000315e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02c4, match64: 0x00000000, model64: 0x315e0000316e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02c5, match64: 0x00000000, model64: 0x316e00003179},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x02c6, match64: 0x00000000, model64: 0x317900003183},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x02c7, match64: 0x00000000, model64: 0x31830000318d},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x02c8, match64: 0x00000000, model64: 0x318d00003197},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x02c9, match64: 0x00000000, model64: 0x3197000031a2},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x02ca, match64: 0x00000000, model64: 0x31a2000031b4},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x02cb, match64: 0x00000000, model64: 0x31b4000031bc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02cc, match64: 0x00000000, model64: 0x31bc000031c3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02cd, match64: 0x00000000, model64: 0x2fc600002fca},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x02ce, match64: 0x00000000, model64: 0x31c3000031cc},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x02cf, match64: 0x00000000, model64: 0x31c3000031cc},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x31d4000031f1, model64: 0x31f100003205},
		modelTuple{type64: 0x2700000027, matchRI: 0x02d0, match64: 0x00000000, model64: 0x32050000320b},
		modelTuple{type64: 0x2700000027, matchRI: 0x02d1, match64: 0x00000000, model64: 0x32050000320b},
		modelTuple{type64: 0x2700000027, matchRI: 0x02d2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x02d4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x320b00003223, model64: 0x322300003234},
		modelTuple{type64: 0x2700000027, matchRI: 0x02d5, match64: 0x00000000, model64: 0x323400003242},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x32420000324a, model64: 0x324a00003259},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x325900003265, model64: 0x326500003271},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x327100003278, model64: 0x327800003282},
		modelTuple{type64: 0x2700000027, matchRI: 0x02d6, match64: 0x00000000, model64: 0x328200003289},
		modelTuple{type64: 0x2700000027, matchRI: 0x02d7, match64: 0x00000000, model64: 0x32890000328f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02d8, match64: 0x00000000, model64: 0x18ca000018cb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02d9, match64: 0x00000000, model64: 0x328f0000329d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x329d000032a5, model64: 0x32a5000032ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x02da, match64: 0x00000000, model64: 0x32ad000032ba},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02db, match64: 0x00000000, model64: 0x32ba000032c3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02dc, match64: 0x00000000, model64: 0x32c3000032d0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02dd, match64: 0x00000000, model64: 0x32d0000032dc},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x32dc000032f3, model64: 0x32f300003303},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x33030000330e, model64: 0x330e00003320},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02de, match64: 0x00000000, model64: 0x332000003332},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02df, match64: 0x00000000, model64: 0x33320000333d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02e0, match64: 0x00000000, model64: 0x333d00003343},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02e1, match64: 0x00000000, model64: 0x334300003353},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x335300003364, model64: 0x336400003372},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02e2, match64: 0x00000000, model64: 0x33720000337c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02e3, match64: 0x00000000, model64: 0x337c00003383},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02e4, match64: 0x00000000, model64: 0x33830000338e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02e5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02e6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3399000033a5, model64: 0x33a5000033a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x33a8000033b3, model64: 0x33b3000033b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x33b5000033c0, model64: 0x33c0000033c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x33c2000033cd, model64: 0x33cd000033cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e9, match64: 0x00000000, model64: 0x33d2000033dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ea, match64: 0x00000000, model64: 0x33dc000033eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x02eb, match64: 0x00000000, model64: 0x33eb000033f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ec, match64: 0x00000000, model64: 0x33f5000033fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ed, match64: 0x00000000, model64: 0x33fc00003403},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ee, match64: 0x00000000, model64: 0x34030000340c},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ef, match64: 0x00000000, model64: 0x340c00003412},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f0, match64: 0x00000000, model64: 0x34120000341b},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f1, match64: 0x00000000, model64: 0x341b00003426},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34340000343c, model64: 0x343c00003440},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x344000003446, model64: 0x34460000344b},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f4, match64: 0x00000000, model64: 0x344b0000344f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x344f00003454, model64: 0x345400003458},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34580000345e, model64: 0x345e00003463},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x346300003469, model64: 0x34690000346e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x346e00003474, model64: 0x347400003479},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x347900003482, model64: 0x34820000348a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x348a00003490, model64: 0x349000003495},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34950000349b, model64: 0x349b000034a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34a0000034a6, model64: 0x34a6000034ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34ab000034b1, model64: 0x34b1000034b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34b2000034b7, model64: 0x34b7000034bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34bb000034c0, model64: 0x34c0000034c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34c4000034ca, model64: 0x34ca000034cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34cf000034d5, model64: 0x34d5000034da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34da000034e0, model64: 0x34e0000034e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34e5000034ea, model64: 0x34ea000034ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34ee000034f3, model64: 0x34f3000034f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f5, match64: 0x00000000, model64: 0x34f7000034fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34fc00003501, model64: 0x350100003503},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f6, match64: 0x00000000, model64: 0x350300003509},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f7, match64: 0x00000000, model64: 0x35090000350f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x350f00003516, model64: 0x35160000351c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x351c00003523, model64: 0x352300003529},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x352900003534, model64: 0x353400003539},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x353900003545, model64: 0x35450000354a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x354a00003555, model64: 0x35550000355a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x355a00003567, model64: 0x35670000356d},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x02fb, match64: 0x00000000, model64: 0x357900003581},
		modelTuple{type64: 0x2700000027, matchRI: 0x02fc, match64: 0x00000000, model64: 0x358100003588},
		modelTuple{type64: 0x2700000027, matchRI: 0x02fd, match64: 0x00000000, model64: 0x35880000358d},
		modelTuple{type64: 0x2700000027, matchRI: 0x02fe, match64: 0x00000000, model64: 0x358d00003590},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ff, match64: 0x00000000, model64: 0x359000003594},
		modelTuple{type64: 0x2700000027, matchRI: 0x0300, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0301, match64: 0x00000000, model64: 0x35940000359a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0302, match64: 0x00000000, model64: 0x359a000035a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0303, match64: 0x00000000, model64: 0x35a1000035a4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0304, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x0305, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0307, match64: 0x00000000, model64: 0x35ac000035b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0308, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0309, match64: 0x00000000, model64: 0x35b7000035b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x030b, match64: 0x00000000, model64: 0x35be000035c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x030d, match64: 0x00000000, model64: 0x35ce000035d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x030e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0310, match64: 0x00000000, model64: 0x35d8000035e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0311, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0313, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0314, match64: 0x00000000, model64: 0x35e6000035ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0315, match64: 0x00000000, model64: 0x35ea000035f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0317, match64: 0x00000000, model64: 0x35f9000035fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0318, match64: 0x00000000, model64: 0x35fe00003602},
		modelTuple{type64: 0x2700000027, matchRI: 0x0319, match64: 0x00000000, model64: 0x360200003606},
		modelTuple{type64: 0x2700000027, matchRI: 0x031a, match64: 0x00000000, model64: 0x36060000360d},
		modelTuple{type64: 0x2700000027, matchRI: 0x031b, match64: 0x00000000, model64: 0x360d00003613},
		modelTuple{type64: 0x2700000027, matchRI: 0x031c, match64: 0x00000000, model64: 0x36130000361d},
		modelTuple{type64: 0x2700000027, matchRI: 0x031d, match64: 0x00000000, model64: 0x361d00003621},
		modelTuple{type64: 0x2700000027, matchRI: 0x031e, match64: 0x00000000, model64: 0x362100003626},
		modelTuple{type64: 0x2700000027, matchRI: 0x031f, match64: 0x00000000, model64: 0x36260000362b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0320, match64: 0x00000000, model64: 0x362b0000362f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0321, match64: 0x00000000, model64: 0x362f00003635},
		modelTuple{type64: 0x2700000027, matchRI: 0x0322, match64: 0x00000000, model64: 0x36350000363a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0323, match64: 0x00000000, model64: 0x363a0000363e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0324, match64: 0x00000000, model64: 0x363e00003643},
		modelTuple{type64: 0x2700000027, matchRI: 0x0325, match64: 0x00000000, model64: 0x36430000364b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0326, match64: 0x00000000, model64: 0x364b00003656},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0327, match64: 0x00000000, model64: 0x365600003663},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0328, match64: 0x00000000, model64: 0x366300003669},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0329, match64: 0x00000000, model64: 0x36690000366e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x032a, match64: 0x00000000, model64: 0x366e0000367a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x032b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x032c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x032f, match64: 0x00000000, model64: 0x36830000368e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0330, match64: 0x00000000, model64: 0x368e0000369e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0331, match64: 0x00000000, model64: 0x369e000036a8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x36a8000036ae, model64: 0x36ae000036b6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0332, match64: 0x00000000, model64: 0x36b6000036c5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0333, match64: 0x00000000, model64: 0x36c5000036d8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0334, match64: 0x00000000, model64: 0x36d8000036e9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0335, match64: 0x00000000, model64: 0x36e9000036f3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0336, match64: 0x00000000, model64: 0x36f3000036f7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0337, match64: 0x00000000, model64: 0x36f700003703},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0338, match64: 0x00000000, model64: 0x37030000370d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0339, match64: 0x00000000, model64: 0x370d0000371f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x033a, match64: 0x00000000, model64: 0x371f0000372c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x033b, match64: 0x00000000, model64: 0x372c00003736},
		modelTuple{type64: 0x20d00000213, matchRI: 0x033c, match64: 0x00000000, model64: 0x373600003742},
		modelTuple{type64: 0x20d00000213, matchRI: 0x033d, match64: 0x00000000, model64: 0x374200003758},
		modelTuple{type64: 0x20d00000213, matchRI: 0x033e, match64: 0x00000000, model64: 0x375800003763},
		modelTuple{type64: 0x20d00000213, matchRI: 0x033f, match64: 0x00000000, model64: 0x376300003779},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0340, match64: 0x00000000, model64: 0x37790000378f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0341, match64: 0x00000000, model64: 0x378f000037a6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0342, match64: 0x00000000, model64: 0x37a6000037bc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0343, match64: 0x00000000, model64: 0x37bc000037d2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0344, match64: 0x00000000, model64: 0x37d2000037e7},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x37e7000037f3, model64: 0x37f300003807},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0345, match64: 0x00000000, model64: 0x380700003813},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x38130000381d, model64: 0x381d00003826},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x38260000382a, model64: 0x382a00003834},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0346, match64: 0x00000000, model64: 0x38340000383e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0347, match64: 0x00000000, model64: 0x383e00003848},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0348, match64: 0x00000000, model64: 0x384800003852},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0349, match64: 0x00000000, model64: 0x38520000385e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x034a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x385e00003862, model64: 0x38620000386e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x034b, match64: 0x00000000, model64: 0x386e0000387e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x034c, match64: 0x00000000, model64: 0x387e0000388a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x034d, match64: 0x00000000, model64: 0x388a00003893},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x3893000038a6, model64: 0x38a6000038c1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x38c1000038cc, model64: 0x38cc000038d2},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x034e, match64: 0x00000000, model64: 0x38d2000038d9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x034f, match64: 0x00000000, model64: 0x38d9000038e7},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0350, match64: 0x00000000, model64: 0x38e7000038f0},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0351, match64: 0x00000000, model64: 0x38f000003902},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0352, match64: 0x00000000, model64: 0x39020000390b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0353, match64: 0x00000000, model64: 0x390b0000391b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0354, match64: 0x00000000, model64: 0x391b00003924},
		modelTuple{type64: 0x2700000027, matchRI: 0x0355, match64: 0x00000000, model64: 0x392400003930},
		modelTuple{type64: 0x2700000027, matchRI: 0x0356, match64: 0x00000000, model64: 0x39300000393e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x393e0000394a, model64: 0x394a00003953},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x39530000395f, model64: 0x395f0000396f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0357, match64: 0x00000000, model64: 0x396f00003979},
		modelTuple{type64: 0x2700000027, matchRI: 0x0358, match64: 0x00000000, model64: 0x397900003982},
		modelTuple{type64: 0x2700000027, matchRI: 0x0359, match64: 0x00000000, model64: 0x398200003990},
		modelTuple{type64: 0x2700000027, matchRI: 0x035a, match64: 0x00000000, model64: 0x399000003999},
		modelTuple{type64: 0x2700000027, matchRI: 0x035b, match64: 0x00000000, model64: 0x3999000039a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x035c, match64: 0x00000000, model64: 0x39a2000039b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x035d, match64: 0x00000000, model64: 0x39b0000039b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x035e, match64: 0x00000000, model64: 0x39b9000039c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x035f, match64: 0x00000000, model64: 0x39c7000039d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0360, match64: 0x00000000, model64: 0x39d9000039e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0361, match64: 0x00000000, model64: 0x39e7000039f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0362, match64: 0x00000000, model64: 0x39f0000039fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0363, match64: 0x00000000, model64: 0x39fa00003a06},
		modelTuple{type64: 0x2700000027, matchRI: 0x0364, match64: 0x00000000, model64: 0x3a0600003a15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a1500003a1b, model64: 0x3a1b00003a2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0365, match64: 0x00000000, model64: 0x3a2a00003a39},
		modelTuple{type64: 0x2700000027, matchRI: 0x0366, match64: 0x00000000, model64: 0x3a3900003a42},
		modelTuple{type64: 0x2700000027, matchRI: 0x0367, match64: 0x00000000, model64: 0x3a4200003a4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0368, match64: 0x00000000, model64: 0x3a4f00003a5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0369, match64: 0x00000000, model64: 0x3a5d00003a67},
		modelTuple{type64: 0x2700000027, matchRI: 0x036a, match64: 0x00000000, model64: 0x3a6700003a70},
		modelTuple{type64: 0x2700000027, matchRI: 0x036b, match64: 0x00000000, model64: 0x3a7000003a79},
		modelTuple{type64: 0x2700000027, matchRI: 0x036c, match64: 0x00000000, model64: 0x3a7900003a86},
		modelTuple{type64: 0x2700000027, matchRI: 0x036d, match64: 0x00000000, model64: 0x3a8600003a8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x036e, match64: 0x00000000, model64: 0x3a8f00003a9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x036f, match64: 0x00000000, model64: 0x3a9a00003aad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0370, match64: 0x00000000, model64: 0x39c7000039d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0371, match64: 0x00000000, model64: 0x3aad00003abf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0372, match64: 0x00000000, model64: 0x3abf00003ace},
		modelTuple{type64: 0x2700000027, matchRI: 0x0373, match64: 0x00000000, model64: 0x3ace00003ad8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0374, match64: 0x00000000, model64: 0x3ad800003ae5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0375, match64: 0x00000000, model64: 0x3ae500003af4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0376, match64: 0x00000000, model64: 0x3ace00003ad8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0377, match64: 0x00000000, model64: 0x3af400003b03},
		modelTuple{type64: 0x2700000027, matchRI: 0x0378, match64: 0x00000000, model64: 0x3b0300003b17},
		modelTuple{type64: 0x2700000027, matchRI: 0x0379, match64: 0x00000000, model64: 0x3b1700003b2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x037a, match64: 0x00000000, model64: 0x3b2d00003b43},
		modelTuple{type64: 0x2700000027, matchRI: 0x037b, match64: 0x00000000, model64: 0x3b4300003b50},
		modelTuple{type64: 0x2700000027, matchRI: 0x037c, match64: 0x00000000, model64: 0x3b5000003b61},
		modelTuple{type64: 0x2700000027, matchRI: 0x037d, match64: 0x00000000, model64: 0x3b6100003b6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x037e, match64: 0x00000000, model64: 0x3b6f00003b7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x037f, match64: 0x00000000, model64: 0x3b7f00003b8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0380, match64: 0x00000000, model64: 0x3b6f00003b7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0381, match64: 0x00000000, model64: 0x3b8d00003b96},
		modelTuple{type64: 0x2700000027, matchRI: 0x0382, match64: 0x00000000, model64: 0x3b9600003ba5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0383, match64: 0x00000000, model64: 0x3ba500003bb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0384, match64: 0x00000000, model64: 0x3bb400003bc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0385, match64: 0x00000000, model64: 0x3bc800003bd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0386, match64: 0x00000000, model64: 0x3a3900003a42},
		modelTuple{type64: 0x2700000027, matchRI: 0x0387, match64: 0x00000000, model64: 0x3bd800003be5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0388, match64: 0x00000000, model64: 0x3be500003bf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0389, match64: 0x00000000, model64: 0x3bf700003c04},
		modelTuple{type64: 0x2700000027, matchRI: 0x038a, match64: 0x00000000, model64: 0x3c0400003c10},
		modelTuple{type64: 0x2700000027, matchRI: 0x038b, match64: 0x00000000, model64: 0x3c1000003c19},
		modelTuple{type64: 0x2700000027, matchRI: 0x038c, match64: 0x00000000, model64: 0x3c1900003c24},
		modelTuple{type64: 0x2700000027, matchRI: 0x038d, match64: 0x00000000, model64: 0x3c2400003c2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x038e, match64: 0x00000000, model64: 0x3c2f00003c3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x038f, match64: 0x00000000, model64: 0x3c3a00003c45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0390, match64: 0x00000000, model64: 0x3c4500003c51},
		modelTuple{type64: 0x2700000027, matchRI: 0x0391, match64: 0x00000000, model64: 0x3c5100003c5c},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x3c5c00003c63, model64: 0x3c6300003c72},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0392, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x0393, match64: 0x00000000, model64: 0x3c7200003c80},
		modelTuple{type64: 0x245f00002467, matchRI: 0x0394, match64: 0x00000000, model64: 0x3c8000003c8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0395, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0396, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0397, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0398, match64: 0x00000000, model64: 0x3c8a00003c98},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0399, match64: 0x00000000, model64: 0x3c9800003caa},
		modelTuple{type64: 0x2700000027, matchRI: 0x039b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a1, match64: 0x00000000, model64: 0x3cdf00003ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a2, match64: 0x00000000, model64: 0x3cdf00003ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a3, match64: 0x00000000, model64: 0x3cdf00003ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3cef00003cfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a8, match64: 0x00000000, model64: 0x3d0100003d09},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a9, match64: 0x00000000, model64: 0x3d0900003d15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d1a00003d23, model64: 0x3d2300003d2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d2c00003d35, model64: 0x3d3500003d3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d3e00003d4b, model64: 0x3d4b00003d5a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x03ab, match64: 0x00000000, model64: 0x3d5a00003d5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ae, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b1, match64: 0x00000000, model64: 0x3d6600003d72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d7200003d7e, model64: 0x3d7e00003d8c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x03b2, match64: 0x00000000, model64: 0x3d8c00003d99},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b4, match64: 0x00000000, model64: 0x3d9f00003da6},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b6, match64: 0x00000000, model64: 0x3db200003db7},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b7, match64: 0x00000000, model64: 0x3db700003dbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3dbe00003dc5, model64: 0x3dc500003dcf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3dcf00003ddd, model64: 0x3ddd00003deb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3deb00003df4, model64: 0x3deb00003df4},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ba, match64: 0x00000000, model64: 0x3df400003dfd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3dfd00003e0b, model64: 0x3e0b00003e19},
		modelTuple{type64: 0x2700000027, matchRI: 0x03bb, match64: 0x00000000, model64: 0x3e1900003e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x03bd, match64: 0x00000000, model64: 0x3e2900003e30},
		modelTuple{type64: 0x2700000027, matchRI: 0x03be, match64: 0x00000000, model64: 0x3e3000003e36},
		modelTuple{type64: 0x2700000027, matchRI: 0x03bf, match64: 0x00000000, model64: 0x3e4200003e4b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c2, match64: 0x00000000, model64: 0x3e5800003e76},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c3, match64: 0x00000000, model64: 0x3e7600003e8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c4, match64: 0x00000000, model64: 0x3e8d00003eaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c5, match64: 0x00000000, model64: 0x3eaa00003ec5},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c6, match64: 0x00000000, model64: 0x3ec500003edd},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c7, match64: 0x00000000, model64: 0x3edd00003ef4},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c8, match64: 0x00000000, model64: 0x3ef400003f0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c9, match64: 0x00000000, model64: 0x3f0c00003f29},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ca, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03cb, match64: 0x00000000, model64: 0x3f2900003f36},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x03cc, match64: 0x00000000, model64: 0x3f3600003f4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ce, match64: 0x00000000, model64: 0x3f4f00003f5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x03cf, match64: 0x00000000, model64: 0x3f5a00003f69},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d0, match64: 0x00000000, model64: 0x3f6900003f71},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d3, match64: 0x00000000, model64: 0x3f7400003f78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3f7800003f7c, model64: 0x3f7800003f7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d4, match64: 0x00000000, model64: 0x3f7c00003f87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3f8a00003f93, model64: 0x3f9300003f9c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x3f9c00003fa3, model64: 0x3f9c00003fa3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3fac00003fb5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x03d7, match64: 0x00000000, model64: 0x3fb800003fbb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x03d8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x3fbb00003fc4, model64: 0x3fc400003fcd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3fcd00003fd3, model64: 0x3fd300003fd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03db, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03de, match64: 0x00000000, model64: 0x3fe700003ff4},
		modelTuple{type64: 0x2700000027, matchRI: 0x03df, match64: 0x00000000, model64: 0x3ff400003ffe},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e6, match64: 0x00000000, model64: 0x40140000401b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e9, match64: 0x00000000, model64: 0x403100004038},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ea, match64: 0x00000000, model64: 0x403100004038},
		modelTuple{type64: 0x2700000027, matchRI: 0x03eb, match64: 0x00000000, model64: 0x403100004038},
		modelTuple{type64: 0x20d00000213, matchRI: 0x03ed, match64: 0x00000000, model64: 0x403e00004049},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ee, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f1, match64: 0x00000000, model64: 0x40560000405c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x03f2, match64: 0x00000000, model64: 0x405c00004062},
		modelTuple{type64: 0x20d00000213, matchRI: 0x03f3, match64: 0x00000000, model64: 0x405c00004062},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x406200004065, model64: 0x406200004065},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f4, match64: 0x00000000, model64: 0x406500004068},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f5, match64: 0x00000000, model64: 0x406800004070},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x40700000407a, model64: 0x40700000407a},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f6, match64: 0x00000000, model64: 0x407a00004080},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f7, match64: 0x00000000, model64: 0x408000004084},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f8, match64: 0x00000000, model64: 0x408400004091},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x03f9, match64: 0x00000000, model64: 0x40910000409a},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fc, match64: 0x00000000, model64: 0x40a1000040a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fd, match64: 0x00000000, model64: 0x40a9000040b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fe, match64: 0x00000000, model64: 0x40b3000040be},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ff, match64: 0x00000000, model64: 0x40be000040c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0400, match64: 0x00000000, model64: 0x40c5000040cb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x40e0000040ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0405, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0406, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0409, match64: 0x00000000, model64: 0x410300004109},
		modelTuple{type64: 0x2700000027, matchRI: 0x040a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x410e00004114, model64: 0x411400004117},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41170000411d, model64: 0x411d00004120},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x412000004126, model64: 0x412600004129},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x41350000413e, model64: 0x413e00004147},
		modelTuple{type64: 0x2700000027, matchRI: 0x040e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0410, match64: 0x00000000, model64: 0x414d00004159},
		modelTuple{type64: 0x2700000027, matchRI: 0x0411, match64: 0x00000000, model64: 0x415900004161},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x416100004166, model64: 0x41660000416c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x417800004183},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x418c0000419a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x41a1000041ad},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0418, match64: 0x00000000, model64: 0x41bc000041c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41c9000041d7, model64: 0x41c9000041d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x041a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x041b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x041d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x041e, match64: 0x00000000, model64: 0x41e0000041e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x041f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0421, match64: 0x00000000, model64: 0x41ec000041f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0422, match64: 0x00000000, model64: 0x41f500004200},
		modelTuple{type64: 0x2700000027, matchRI: 0x0423, match64: 0x00000000, model64: 0x42000000420b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0424, match64: 0x00000000, model64: 0x421200004220},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x42240000422d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x424000004247, model64: 0x42470000424e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0428, match64: 0x00000000, model64: 0x424e00004254},
		modelTuple{type64: 0x2700000027, matchRI: 0x0429, match64: 0x00000000, model64: 0x42540000425b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x425b00004262, model64: 0x426200004265},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42650000426c, model64: 0x426c0000426e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x426e00004275, model64: 0x427500004277},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42770000427e, model64: 0x427e00004280},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x428000004287, model64: 0x42870000428a},
		modelTuple{type64: 0x2700000027, matchRI: 0x042a, match64: 0x00000000, model64: 0x428a0000428c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x428c00004293, model64: 0x42930000429a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x429a000042a1, model64: 0x42a1000042ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42ac000042b3, model64: 0x42b3000042c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42c1000042c8, model64: 0x42c8000042cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42cb000042d2, model64: 0x42d2000042d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42d4000042db, model64: 0x42db000042e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42e2000042eb, model64: 0x42eb000042f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x042b, match64: 0x00000000, model64: 0x42f3000042f9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x430100004306},
		modelTuple{type64: 0x2700000027, matchRI: 0x042e, match64: 0x00000000, model64: 0x430f00004316},
		modelTuple{type64: 0x2700000027, matchRI: 0x042f, match64: 0x00000000, model64: 0x431600004319},
		modelTuple{type64: 0x2700000027, matchRI: 0x0430, match64: 0x00000000, model64: 0x43190000431f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0431, match64: 0x00000000, model64: 0x431f00004323},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x432300004329, model64: 0x156500001568},
		modelTuple{type64: 0x2700000027, matchRI: 0x0432, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x0433, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0434, match64: 0x00000000, model64: 0x432900004330},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43300000433b, model64: 0x433b00004345},
		modelTuple{type64: 0x2700000027, matchRI: 0x0435, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0436, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x434b00004354, model64: 0x43540000435e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x435e00004368, model64: 0x436800004372},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0437, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0438, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0439, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x043a, match64: 0x00000000, model64: 0x43720000437c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x043b, match64: 0x00000000, model64: 0x405c00004062},
		modelTuple{type64: 0x20d00000213, matchRI: 0x043c, match64: 0x00000000, model64: 0x437c00004385},
		modelTuple{type64: 0x20d00000213, matchRI: 0x043d, match64: 0x00000000, model64: 0x405c00004062},
		modelTuple{type64: 0x2700000027, matchRI: 0x043e, match64: 0x00000000, model64: 0x43850000438e},
		modelTuple{type64: 0x2700000027, matchRI: 0x043f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0441, match64: 0x00000000, model64: 0x4397000043a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0442, match64: 0x00000000, model64: 0x43a4000043b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0443, match64: 0x00000000, model64: 0x43b5000043c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0444, match64: 0x00000000, model64: 0x43c4000043d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43d2000043df, model64: 0x43d2000043df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0445, match64: 0x00000000, model64: 0x43df000043eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0446, match64: 0x00000000, model64: 0x43eb000043f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43f500004406, model64: 0x440600004417},
		modelTuple{type64: 0x2700000027, matchRI: 0x0447, match64: 0x00000000, model64: 0x441700004422},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x44220000442a, model64: 0x442a00004434},
		modelTuple{type64: 0x2700000027, matchRI: 0x0448, match64: 0x00000000, model64: 0x443400004439},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0449, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x044a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x443900004443, model64: 0x44430000444f},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x044b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x444f00004457, model64: 0x445700004461},
		modelTuple{type64: 0x2700000027, matchRI: 0x044d, match64: 0x00000000, model64: 0x446100004466},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x44660000446f, model64: 0x446f0000447d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x448600004490, model64: 0x44900000449c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0450, match64: 0x00000000, model64: 0x449c000044b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x44b1000044c0, model64: 0x44c0000044cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x44cf000044d8, model64: 0x44d8000044e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0452, match64: 0x00000000, model64: 0x44e7000044f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0453, match64: 0x00000000, model64: 0x44f1000044fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x44fa00004507, model64: 0x450700004514},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x451400004523, model64: 0x452300004534},
		modelTuple{type64: 0x2700000027, matchRI: 0x0454, match64: 0x00000000, model64: 0x45340000453d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0455, match64: 0x00000000, model64: 0x453d00004549},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x45490000455a, model64: 0x455a0000456b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x456b00004575, model64: 0x45750000457f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x457f0000458c, model64: 0x458c00004599},
		modelTuple{type64: 0x2700000027, matchRI: 0x0456, match64: 0x00000000, model64: 0x45340000453d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0457, match64: 0x00000000, model64: 0x4599000045a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x45a9000045b6, model64: 0x45b6000045c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0458, match64: 0x00000000, model64: 0x45c3000045d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0459, match64: 0x00000000, model64: 0x45d2000045e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x45e5000045f3, model64: 0x45f300004601},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46010000460a, model64: 0x460a00004613},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46130000461f, model64: 0x46130000461f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x461f00004628, model64: 0x462800004631},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46310000463b, model64: 0x46310000463b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x463b0000464a, model64: 0x464a00004659},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x465900004666, model64: 0x466600004673},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46730000467a, model64: 0x467a00004681},
		modelTuple{type64: 0x2700000027, matchRI: 0x045a, match64: 0x00000000, model64: 0x468100004690},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46900000469b, model64: 0x469b000046a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x045b, match64: 0x00000000, model64: 0x46a6000046ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46ae000046b5, model64: 0x46ae000046b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x045c, match64: 0x00000000, model64: 0x46b5000046bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46bc000046c5, model64: 0x46c5000046ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x045d, match64: 0x00000000, model64: 0x46ce000046d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46d5000046e5, model64: 0x46d5000046e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x045e, match64: 0x00000000, model64: 0x46e5000046f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46f0000046f8, model64: 0x46f800004700},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47000000470a, model64: 0x470a00004714},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47140000471b, model64: 0x471b00004722},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47220000472b, model64: 0x472b00004734},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47340000473e, model64: 0x473e00004748},
		modelTuple{type64: 0x2700000027, matchRI: 0x045f, match64: 0x00000000, model64: 0x47480000474e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x474e00004756, model64: 0x474e00004756},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47560000475e, model64: 0x47560000475e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x475e00004766, model64: 0x475e00004766},
		modelTuple{type64: 0x2700000027, matchRI: 0x0460, match64: 0x00000000, model64: 0x47660000476d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x476d00004774, model64: 0x47740000477b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0461, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0462, match64: 0x00000000, model64: 0x477b00004787},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x478700004792, model64: 0x478700004792},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47920000479e, model64: 0x47920000479e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x479e000047aa, model64: 0x479e000047aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0463, match64: 0x00000000, model64: 0x47aa000047b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47b2000047bb, model64: 0x47b2000047bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47bb000047c5, model64: 0x47bb000047c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47c5000047cd, model64: 0x47c5000047cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47cd000047d3, model64: 0x47d3000047dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0464, match64: 0x00000000, model64: 0x47dc000047e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47e2000047e8, model64: 0x47e8000047ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47ee000047f4, model64: 0x47f4000047fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47fa000047ff, model64: 0x47fa000047ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47ff00004805, model64: 0x47ff00004805},
		modelTuple{type64: 0x2700000027, matchRI: 0x0465, match64: 0x00000000, model64: 0x48050000480d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0466, match64: 0x00000000, model64: 0x480d00004817},
		modelTuple{type64: 0x2700000027, matchRI: 0x0467, match64: 0x00000000, model64: 0x481700004828},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x482800004837, model64: 0x482800004837},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x483700004842, model64: 0x483700004842},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48420000484e, model64: 0x484e0000485a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x485a00004866, model64: 0x485a00004866},
		modelTuple{type64: 0x2700000027, matchRI: 0x0468, match64: 0x00000000, model64: 0x486600004871},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x487100004879, model64: 0x487100004879},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x487900004880, model64: 0x487900004880},
		modelTuple{type64: 0x2700000027, matchRI: 0x0469, match64: 0x00000000, model64: 0x488000004884},
		modelTuple{type64: 0x2700000027, matchRI: 0x046a, match64: 0x00000000, model64: 0x48840000488f},
		modelTuple{type64: 0x2700000027, matchRI: 0x046b, match64: 0x00000000, model64: 0x488f0000489a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x489a000048ac, model64: 0x48ac000048c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x046c, match64: 0x00000000, model64: 0x48c0000048cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x046d, match64: 0x00000000, model64: 0x48cc000048d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x046e, match64: 0x00000000, model64: 0x48d3000048da},
		modelTuple{type64: 0x2700000027, matchRI: 0x046f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x48da000048ea, model64: 0x48da000048ea},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0470, match64: 0x00000000, model64: 0x48ea000048f3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0471, match64: 0x00000000, model64: 0x48f3000048fb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0472, match64: 0x00000000, model64: 0x48fb00004903},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0473, match64: 0x00000000, model64: 0x490300004911},
		modelTuple{type64: 0x2700000027, matchRI: 0x0474, match64: 0x00000000, model64: 0x491100004918},
		modelTuple{type64: 0x2700000027, matchRI: 0x0475, match64: 0x00000000, model64: 0x491100004918},
		modelTuple{type64: 0x2700000027, matchRI: 0x0476, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x492000004935},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x493b00004945, model64: 0x494500004949},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49490000494f, model64: 0x494f00004956},
		modelTuple{type64: 0x2700000027, matchRI: 0x0479, match64: 0x00000000, model64: 0x495600004960},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x496000004965, model64: 0x496000004965},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49650000496c, model64: 0x49650000496c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x496c00004975, model64: 0x49750000497c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x497c00004980, model64: 0x498000004983},
		modelTuple{type64: 0x2700000027, matchRI: 0x047a, match64: 0x00000000, model64: 0x49830000498a},
		modelTuple{type64: 0x2700000027, matchRI: 0x047b, match64: 0x00000000, model64: 0x49750000497c},
		modelTuple{type64: 0x2700000027, matchRI: 0x047c, match64: 0x00000000, model64: 0x498a0000498c},
		modelTuple{type64: 0x2700000027, matchRI: 0x047d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x047e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x499300004998},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0482, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0483, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49b7000049b9, model64: 0x49b7000049b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49c1000049c8, model64: 0x49c8000049d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49d2000049d8, model64: 0x49d8000049ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49ee000049f3, model64: 0x49f3000049f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49f9000049fe, model64: 0x49c8000049d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0485, match64: 0x00000000, model64: 0x49fe00004a0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0487, match64: 0x00000000, model64: 0x1f6f00001f73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a1600004a1b, model64: 0x4a1b00004a20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a2000004a2a, model64: 0x4a2a00004a36},
		modelTuple{type64: 0x2700000027, matchRI: 0x0488, match64: 0x00000000, model64: 0x4a3600004a3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0489, match64: 0x00000000, model64: 0x4a3d00004a41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a4100004a4b, model64: 0x4a4b00004a50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a5000004a56, model64: 0x4a5600004a5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x048a, match64: 0x00000000, model64: 0x4a5d00004a65},
		modelTuple{type64: 0x2700000027, matchRI: 0x048b, match64: 0x00000000, model64: 0x4a6500004a69},
		modelTuple{type64: 0x2700000027, matchRI: 0x048c, match64: 0x00000000, model64: 0x4a6900004a6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x048d, match64: 0x00000000, model64: 0x4a6d00004a75},
		modelTuple{type64: 0x2700000027, matchRI: 0x048e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x048f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4a7c00004a82},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4a8700004a90},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0494, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0495, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x4a9c00004aa6, model64: 0x4aa600004ab1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0497, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0498, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0499, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4abf00004ac8, model64: 0x4ac800004ad0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ad000004add, model64: 0x4add00004ae0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4aec00004af7, model64: 0x4af700004b02},
		modelTuple{type64: 0x2700000027, matchRI: 0x049d, match64: 0x00000000, model64: 0x4b0200004b0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x049e, match64: 0x00000000, model64: 0x4b0b00004b12},
		modelTuple{type64: 0x2700000027, matchRI: 0x049f, match64: 0x00000000, model64: 0x4b1200004b1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a0, match64: 0x00000000, model64: 0x4b1b00004b1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a1, match64: 0x00000000, model64: 0x4b1e00004b23},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a2, match64: 0x00000000, model64: 0x4b2300004b28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b2800004b2c, model64: 0x4b2c00004b30},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b3000004b36, model64: 0x4b3600004b3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a3, match64: 0x00000000, model64: 0x4b3b00004b45},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a4, match64: 0x00000000, model64: 0x4b4500004b51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b5100004b5e, model64: 0x4b5e00004b6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b6b00004b77, model64: 0x4b7700004b83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b8300004b8d, model64: 0x4b8d00004b97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b9700004b9f, model64: 0x4b9700004b9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b9f00004ba9, model64: 0x4b9f00004ba9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ba900004bb9, model64: 0x4ba900004bb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4bb900004bc5, model64: 0x4bb900004bc5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4bc500004bd2, model64: 0x4bd200004bdf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4bdf00004be9, model64: 0x4be900004bf3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4bf300004bfd, model64: 0x4bfd00004c05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c0500004c13, model64: 0x4c1300004c21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c2100004c2d, model64: 0x4c2d00004c39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c3900004c45, model64: 0x4c4500004c4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c4a00004c54, model64: 0x4c5400004c57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c5700004c63, model64: 0x4c6300004c68},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a5, match64: 0x00000000, model64: 0x4c6800004c6d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04a6, match64: 0x00000000, model64: 0x4c6d00004c74},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x4c7400004c7d, model64: 0x4c7d00004c85},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x4c8500004c92, model64: 0x4c9200004c97},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x4c9700004ca4, model64: 0x4ca400004ca9},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04a8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x4cc000004cd0, model64: 0x4cc000004cd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ab, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ac, match64: 0x00000000, model64: 0x4cd600004ce2},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ad, match64: 0x00000000, model64: 0x4ce200004cee},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ae, match64: 0x00000000, model64: 0x4cee00004cf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x04af, match64: 0x00000000, model64: 0x4cf600004cff},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b0, match64: 0x00000000, model64: 0x4cff00004d0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b1, match64: 0x00000000, model64: 0x4d0b00004d17},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b2, match64: 0x00000000, model64: 0x4d1700004d21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d2100004d34, model64: 0x4d3400004d47},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d4700004d5a, model64: 0x4d5a00004d6d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04b3, match64: 0x00000000, model64: 0x4d6d00004d7b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04b4, match64: 0x00000000, model64: 0x4d6d00004d7b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b7, match64: 0x00000000, model64: 0x4d8900004d9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b8, match64: 0x00000000, model64: 0x4d9c00004da9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x4da900004db5, model64: 0x4db500004dc3},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x4dc700004dd0, model64: 0x4dd000004dd5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04ba, match64: 0x00000000, model64: 0x4dd500004de1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04bb, match64: 0x00000000, model64: 0x4de100004de9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4de900004e03, model64: 0x4e0300004e0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x04bc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04bd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x04be, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e1d00004e28, model64: 0x4e2800004e33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e3300004e39, model64: 0x4e3900004e3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e3f00004e48, model64: 0x4e4800004e53},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x4e5300004e59, model64: 0x4e5900004e60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e6900004e73, model64: 0x4c4500004c4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c3, match64: 0x00000000, model64: 0x4e7c00004e84},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c4, match64: 0x00000000, model64: 0x4e8400004e8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c5, match64: 0x00000000, model64: 0x4e8b00004e98},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c6, match64: 0x00000000, model64: 0x4e9800004ea6},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c7, match64: 0x00000000, model64: 0x4ea600004eae},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ec300004eca, model64: 0x4eca00004ed2},
		modelTuple{type64: 0x2700000027, matchRI: 0x04cc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04cd, match64: 0x00000000, model64: 0x4ed600004ee0},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ce, match64: 0x00000000, model64: 0x4ee000004ee6},
		modelTuple{type64: 0x2700000027, matchRI: 0x04cf, match64: 0x00000000, model64: 0x4ee600004eea},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d0, match64: 0x00000000, model64: 0x4eea00004ef3},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d1, match64: 0x00000000, model64: 0x4ef300004ef6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4efc00004f10, model64: 0x4efc00004f10},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d4, match64: 0x00000000, model64: 0x4f1500004f1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f1e00004f24, model64: 0x4f1e00004f24},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d5, match64: 0x00000000, model64: 0x4f2400004f2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f2d00004f36, model64: 0x4f3600004f3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f3f00004f46, model64: 0x4f4600004f4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f4d00004f55, model64: 0x4f5500004f5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f5d00004f6b, model64: 0x4f6b00004f7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f7a00004f8c, model64: 0x4f8c00004fa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d6, match64: 0x00000000, model64: 0x4fa000004fb1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4fb100004fbe, model64: 0x4fbe00004fcc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4fcc00004fda, model64: 0x4fda00004fe9},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d7, match64: 0x00000000, model64: 0x4fe900004ff5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ff500005001, model64: 0x50010000500d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x500d00005016, model64: 0x50160000501f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x501f00005029, model64: 0x502900005033},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x503300005038, model64: 0x50380000503d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x503d00005044, model64: 0x50440000504b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x504b00005054, model64: 0x50540000505d},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d8, match64: 0x00000000, model64: 0x235a0000235e},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d9, match64: 0x00000000, model64: 0x505d00005063},
		modelTuple{type64: 0x2700000027, matchRI: 0x04da, match64: 0x00000000, model64: 0x506300005068},
		modelTuple{type64: 0x2700000027, matchRI: 0x04db, match64: 0x00000000, model64: 0x50680000506e},
		modelTuple{type64: 0x2700000027, matchRI: 0x04dc, match64: 0x00000000, model64: 0x3670000036a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x506e00005077, model64: 0x507700005080},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x508000005086, model64: 0x50860000508c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x508c00005097, model64: 0x5097000050a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x04dd, match64: 0x00000000, model64: 0x50a2000050a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x04de, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04df, match64: 0x00000000, model64: 0x50a9000050af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50af000050b9, model64: 0x50b9000050bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50bd000050c8, model64: 0x4c6300004c68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50c8000050d6, model64: 0x50d6000050de},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50e9000050f6, model64: 0x50e9000050f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x51030000510b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x512000005126},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x51430000514e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51570000515c, model64: 0x515c0000516d},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ed, match64: 0x00000000, model64: 0x516d00005171},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ee, match64: 0x00000000, model64: 0x516d00005171},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f0, match64: 0x00000000, model64: 0x517600005183},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f1, match64: 0x00000000, model64: 0x518300005192},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f2, match64: 0x00000000, model64: 0x5192000051a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f4, match64: 0x00000000, model64: 0x51ae000051b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f5, match64: 0x00000000, model64: 0x51b9000051bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51bf000051cd, model64: 0x51cd000051d4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04f6, match64: 0x00000000, model64: 0x51d4000051dc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04f7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04f8, match64: 0x00000000, model64: 0x51dc000051e5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04f9, match64: 0x00000000, model64: 0x51b9000051bf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04fa, match64: 0x00000000, model64: 0x51b9000051bf},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x51e8000051ec, model64: 0x51e8000051ec},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x51ec000051f3, model64: 0x51f3000051f6},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x51f6000051fd, model64: 0x51f6000051fd},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x04fc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04fd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04fe, match64: 0x00000000, model64: 0x50b9000050bd},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x04ff, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x0500, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0502, match64: 0x00000000, model64: 0x52030000520d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0503, match64: 0x00000000, model64: 0x520d00005216},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x521600005224, model64: 0x522400005234},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0504, match64: 0x00000000, model64: 0x523400005242},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0505, match64: 0x00000000, model64: 0x524200005250},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x52500000525e, model64: 0x525e00005265},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x526500005277, model64: 0x527700005285},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x528500005297, model64: 0x5297000052a5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0506, match64: 0x00000000, model64: 0x52a5000052b9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0507, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52bf000052c4, model64: 0x52c4000052ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52ca000052d3, model64: 0x52d3000052dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52dc000052e6, model64: 0x52e6000052f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52f0000052fa, model64: 0x52fa00005303},
		modelTuple{type64: 0x2700000027, matchRI: 0x0509, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x050c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x050d, match64: 0x00000000, model64: 0x530f00005317},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x531700005325, model64: 0x531700005325},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53250000532c, model64: 0x532c00005334},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53340000533d, model64: 0x533d00005347},
		modelTuple{type64: 0x2700000027, matchRI: 0x050e, match64: 0x00000000, model64: 0x53470000534d},
		modelTuple{type64: 0x2700000027, matchRI: 0x050f, match64: 0x00000000, model64: 0x534d00005355},
		modelTuple{type64: 0x2700000027, matchRI: 0x0510, match64: 0x00000000, model64: 0x535500005359},
		modelTuple{type64: 0x2700000027, matchRI: 0x0511, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0512, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0513, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0514, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0516, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0517, match64: 0x00000000, model64: 0x535f00005365},
		modelTuple{type64: 0x2700000027, matchRI: 0x0518, match64: 0x00000000, model64: 0x53650000536c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x536c00005378, model64: 0x53780000537e},
		modelTuple{type64: 0x2700000027, matchRI: 0x051a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x538800005394, model64: 0x5394000053a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53a2000053a9, model64: 0x53a9000053b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x051c, match64: 0x00000000, model64: 0x53b8000053bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x051d, match64: 0x00000000, model64: 0x53bb000053c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x051e, match64: 0x00000000, model64: 0x53c3000053cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0520, match64: 0x00000000, model64: 0x53d6000053df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53df000053e5, model64: 0x53df000053e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53e5000053ea, model64: 0x53ea000053ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0522, match64: 0x00000000, model64: 0x2f5000002f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0523, match64: 0x00000000, model64: 0x53f6000053fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0524, match64: 0x00000000, model64: 0x4e1000004e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0525, match64: 0x00000000, model64: 0x53fd000053ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0526, match64: 0x00000000, model64: 0x53ff00005401},
		modelTuple{type64: 0x2700000027, matchRI: 0x0527, match64: 0x00000000, model64: 0x540100005403},
		modelTuple{type64: 0x2700000027, matchRI: 0x0529, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x052b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54140000541b, model64: 0x541b00005427},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54270000542f, model64: 0x542f00005432},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x052c, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x052d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x052e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0530, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0531, match64: 0x00000000, model64: 0x543f0000544a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x544a00005456, model64: 0x545600005462},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54620000546c, model64: 0x546c00005476},
		modelTuple{type64: 0x2700000027, matchRI: 0x0532, match64: 0x00000000, model64: 0x547600005482},
		modelTuple{type64: 0x2700000027, matchRI: 0x0533, match64: 0x00000000, model64: 0x54820000548a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0534, match64: 0x00000000, model64: 0x548a00005494},
		modelTuple{type64: 0x2700000027, matchRI: 0x0535, match64: 0x00000000, model64: 0x5494000054a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0536, match64: 0x00000000, model64: 0x54a2000054b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0537, match64: 0x00000000, model64: 0x54b1000054bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0538, match64: 0x00000000, model64: 0x54bf000054cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0539, match64: 0x00000000, model64: 0x54cb000054d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x053a, match64: 0x00000000, model64: 0x54d8000054e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54e5000054f2, model64: 0x54e5000054f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x053b, match64: 0x00000000, model64: 0x54f2000054ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54ff0000550b, model64: 0x54ff0000550b},
		modelTuple{type64: 0x2700000027, matchRI: 0x053c, match64: 0x00000000, model64: 0x550b00005513},
		modelTuple{type64: 0x2700000027, matchRI: 0x053d, match64: 0x00000000, model64: 0x55130000551e},
		modelTuple{type64: 0x2700000027, matchRI: 0x053e, match64: 0x00000000, model64: 0x551e00005528},
		modelTuple{type64: 0x2700000027, matchRI: 0x053f, match64: 0x00000000, model64: 0x552800005535},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x553500005542, model64: 0x554200005551},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x555100005561, model64: 0x555100005561},
		modelTuple{type64: 0x2700000027, matchRI: 0x0540, match64: 0x00000000, model64: 0x55610000556d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x556d0000557b, model64: 0x557b0000558c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0541, match64: 0x00000000, model64: 0x558c00005598},
		modelTuple{type64: 0x2700000027, matchRI: 0x0542, match64: 0x00000000, model64: 0x5598000055a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0543, match64: 0x00000000, model64: 0x55a6000055b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0544, match64: 0x00000000, model64: 0x54820000548a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55b3000055bd, model64: 0x55b3000055bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0545, match64: 0x00000000, model64: 0x55bd000055c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55c8000055d4, model64: 0x55d4000055e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55e0000055f1, model64: 0x55e0000055f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55f1000055fd, model64: 0x55f1000055fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0546, match64: 0x00000000, model64: 0x55fd0000560a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0547, match64: 0x00000000, model64: 0x560a00005611},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56110000561b, model64: 0x56110000561b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x561b00005625, model64: 0x56250000562f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0548, match64: 0x00000000, model64: 0x562f0000563e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x563e0000564c, model64: 0x564c0000565a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x565a00005663, model64: 0x565a00005663},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56630000566d, model64: 0x56630000566d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x566d00005679, model64: 0x567900005681},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x568100005689, model64: 0x568100005689},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x568900005697, model64: 0x5697000056ae},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x56ae000056be, model64: 0x56be000056ce},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x56ce000056e2, model64: 0x56ce000056e2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x56e2000056f2, model64: 0x56e2000056f2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0549, match64: 0x00000000, model64: 0x56f200005703},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x570300005711, model64: 0x57110000571f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x571f0000572c, model64: 0x572c00005739},
		modelTuple{type64: 0x20d00000213, matchRI: 0x054a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x054b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57450000574f, model64: 0x574f00005759},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x575900005765, model64: 0x576500005771},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57710000577f, model64: 0x577f0000578d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x578d0000579a, model64: 0x579a000057a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57a7000057b1, model64: 0x57b1000057bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57bb000057c5, model64: 0x57c5000057cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x054d, match64: 0x00000000, model64: 0x57cf000057d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x054e, match64: 0x00000000, model64: 0x57d6000057dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57dd000057e6, model64: 0x57e6000057ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57ef000057fa, model64: 0x57fa00005805},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58050000580d, model64: 0x580d00005815},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58150000581e, model64: 0x581e00005827},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x582700005831, model64: 0x58310000583b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x583b00005844, model64: 0x58440000584d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x584d00005857, model64: 0x585700005861},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58610000586e, model64: 0x586e0000587b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x587b00005883, model64: 0x58830000588b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x588b00005894, model64: 0x58940000589d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0550, match64: 0x00000000, model64: 0x58a7000058b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58bd000058c3, model64: 0x151f00001521},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58c3000058cc, model64: 0x58cc000058d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58d2000058d6, model64: 0x58d6000058d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58d9000058de, model64: 0x1f6000001f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0552, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58eb000058f2, model64: 0x58f2000058ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58ff00005906, model64: 0x590600005916},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x59160000591d, model64: 0x591d0000592a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x592a00005931, model64: 0x593100005942},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x594200005949, model64: 0x594900005953},
		modelTuple{type64: 0x2700000027, matchRI: 0x0555, match64: 0x00000000, model64: 0x59580000595b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0556, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x0557, match64: 0x00000000, model64: 0x595b00005962},
		modelTuple{type64: 0x2700000027, matchRI: 0x0558, match64: 0x00000000, model64: 0x596200005969},
		modelTuple{type64: 0x2700000027, matchRI: 0x0559, match64: 0x00000000, model64: 0x59690000596e},
		modelTuple{type64: 0x2700000027, matchRI: 0x055a, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x055b, match64: 0x00000000, model64: 0x596e00005978},
		modelTuple{type64: 0x2700000027, matchRI: 0x055c, match64: 0x00000000, model64: 0x59780000597e},
		modelTuple{type64: 0x2700000027, matchRI: 0x055d, match64: 0x00000000, model64: 0x597e00005985},
		modelTuple{type64: 0x2700000027, matchRI: 0x055e, match64: 0x00000000, model64: 0x59850000598e},
		modelTuple{type64: 0x2700000027, matchRI: 0x055f, match64: 0x00000000, model64: 0x598e00005999},
		modelTuple{type64: 0x2700000027, matchRI: 0x0560, match64: 0x00000000, model64: 0x5999000059a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0561, match64: 0x00000000, model64: 0x59a2000059ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0562, match64: 0x00000000, model64: 0x59ac000059b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0563, match64: 0x00000000, model64: 0x59b5000059bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0564, match64: 0x00000000, model64: 0x59bd000059c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0565, match64: 0x00000000, model64: 0x59c3000059cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0566, match64: 0x00000000, model64: 0x59cc000059d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0567, match64: 0x00000000, model64: 0x59d4000059dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0568, match64: 0x00000000, model64: 0x59dd000059e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0569, match64: 0x00000000, model64: 0x59e5000059e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x056a, match64: 0x00000000, model64: 0x59e9000059ef},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x056b, match64: 0x00000000, model64: 0x59ef000059f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x056c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0570, match64: 0x00000000, model64: 0x5a1200005a1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0571, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0572, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a2400005a2a, model64: 0x5a2a00005a31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a3100005a37, model64: 0x5a3700005a3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a3e00005a43, model64: 0x5a4300005a49},
		modelTuple{type64: 0x2700000027, matchRI: 0x0574, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0575, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0577, match64: 0x00000000, model64: 0x5a5d00005a69},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a6900005a71, model64: 0x5a7100005a7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a7f00005a84, model64: 0x5a8400005a8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a8d00005a98, model64: 0x5a9800005aa2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0578, match64: 0x00000000, model64: 0x5aa200005aac},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0579, match64: 0x00000000, model64: 0x5aac00005ab8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5abd00005acd, model64: 0x5acd00005add},
		modelTuple{type64: 0x2700000027, matchRI: 0x057b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x057c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x057e, match64: 0x00000000, model64: 0x5ae600005af9},
		modelTuple{type64: 0x2700000027, matchRI: 0x057f, match64: 0x00000000, model64: 0x5af900005b08},
		modelTuple{type64: 0x2700000027, matchRI: 0x0580, match64: 0x00000000, model64: 0x5b0800005b14},
		modelTuple{type64: 0x2700000027, matchRI: 0x0581, match64: 0x00000000, model64: 0x5b1400005b1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0582, match64: 0x00000000, model64: 0x5b1f00005b2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0583, match64: 0x00000000, model64: 0x5b2f00005b3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0584, match64: 0x00000000, model64: 0x5b3b00005b48},
		modelTuple{type64: 0x2700000027, matchRI: 0x0585, match64: 0x00000000, model64: 0x5b4800005b53},
		modelTuple{type64: 0x2700000027, matchRI: 0x0586, match64: 0x00000000, model64: 0x5b5300005b5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5b5c00005b6e, model64: 0x5b5c00005b6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5b6e00005b7c, model64: 0x5b6e00005b7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5b7c00005b88, model64: 0x5b7c00005b88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5b8800005b8f, model64: 0x5b8f00005b97},
		modelTuple{type64: 0x2700000027, matchRI: 0x0587, match64: 0x00000000, model64: 0x5b9700005ba2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0588, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0589, match64: 0x00000000, model64: 0x5ba200005bab},
		modelTuple{type64: 0x2700000027, matchRI: 0x058a, match64: 0x00000000, model64: 0x5bab00005baf},
		modelTuple{type64: 0x2700000027, matchRI: 0x058c, match64: 0x00000000, model64: 0x5bb700005bbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x058d, match64: 0x00000000, model64: 0x5bbc00005bc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x058f, match64: 0x00000000, model64: 0x5bc700005bcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0590, match64: 0x00000000, model64: 0x5bcf00005bd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0591, match64: 0x00000000, model64: 0x5bd900005be2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0592, match64: 0x00000000, model64: 0x5be200005beb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0593, match64: 0x00000000, model64: 0x5beb00005bf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0594, match64: 0x00000000, model64: 0x5bf600005c01},
		modelTuple{type64: 0x2700000027, matchRI: 0x0595, match64: 0x00000000, model64: 0x5c0100005c0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0596, match64: 0x00000000, model64: 0x5c0f00005c1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0598, match64: 0x00000000, model64: 0x5c2000005c24},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0599, match64: 0x00000000, model64: 0x5c2400005c2a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x059a, match64: 0x00000000, model64: 0x5c2a00005c32},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x059d, match64: 0x00000000, model64: 0x5c4200005c4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x059e, match64: 0x00000000, model64: 0x5c4a00005c52},
		modelTuple{type64: 0x2700000027, matchRI: 0x059f, match64: 0x00000000, model64: 0x5c5200005c5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a0, match64: 0x00000000, model64: 0x5c5a00005c62},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a1, match64: 0x00000000, model64: 0x5c6200005c6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a2, match64: 0x00000000, model64: 0x5c6a00005c72},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a5, match64: 0x00000000, model64: 0x5c8000005c87},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05a6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05a7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05a8, match64: 0x00000000, model64: 0x5c8700005c99},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a9, match64: 0x00000000, model64: 0x5c9900005cab},
		modelTuple{type64: 0x2700000027, matchRI: 0x05aa, match64: 0x00000000, model64: 0x5cab00005cb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ab, match64: 0x00000000, model64: 0x5cb900005ccc},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ac, match64: 0x00000000, model64: 0x5ccc00005cdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ad, match64: 0x00000000, model64: 0x5cdc00005ce9},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ae, match64: 0x00000000, model64: 0x5cdc00005ce9},
		modelTuple{type64: 0x2700000027, matchRI: 0x05af, match64: 0x00000000, model64: 0x5cdc00005ce9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5ce900005cf9, model64: 0x5cf900005cfe},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5cfe00005d02, model64: 0x5d0200005d04},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5d0400005d0e, model64: 0x5d0e00005d10},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5d1000005d22, model64: 0x5d2200005d27},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05b0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5d2700005d2e, model64: 0x5d2e00005d35},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05b1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05b2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5d3500005d3f, model64: 0x5d3f00005d41},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05b3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5d4100005d50, model64: 0x5d5000005d52},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5d5200005d61, model64: 0x5d6100005d63},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x5d6300005d6e, model64: 0x5d6e00005d7c},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x05b4, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5d8100005d86, model64: 0x5d8100005d86},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5d8600005d8c, model64: 0x5d8600005d8c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5d8c00005d97, model64: 0x5d9700005da2},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ba, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x05bc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05bd, match64: 0x00000000, model64: 0x405c00004062},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05be, match64: 0x00000000, model64: 0x5db600005dc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x05bf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5dd000005dd3, model64: 0x5dd000005dd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5dd300005ddb, model64: 0x5dd300005ddb},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5ddb00005de0, model64: 0x5de000005de8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05c2, match64: 0x00000000, model64: 0x5de800005df2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5df200005e05, model64: 0x5e0500005e18},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5e1800005e28, model64: 0x5e2800005e30},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05c4, match64: 0x00000000, model64: 0x5e3600005e3d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05c5, match64: 0x00000000, model64: 0x59690000596e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05c6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05c7, match64: 0x00000000, model64: 0x59690000596e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e3d00005e44, model64: 0x5e4400005e46},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c8, match64: 0x00000000, model64: 0x5e4600005e4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c9, match64: 0x00000000, model64: 0x5e4e00005e55},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ca, match64: 0x00000000, model64: 0x5e5500005e5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cb, match64: 0x00000000, model64: 0x5e5d00005e5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cc, match64: 0x00000000, model64: 0x5e5f00005e61},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cd, match64: 0x00000000, model64: 0x5e6100005e64},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ce, match64: 0x00000000, model64: 0x5e6400005e66},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cf, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d0, match64: 0x00000000, model64: 0x432900004330},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d2, match64: 0x00000000, model64: 0x5e6600005e6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d3, match64: 0x00000000, model64: 0x5e6f00005e72},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d4, match64: 0x00000000, model64: 0x5e7200005e78},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d5, match64: 0x00000000, model64: 0x5e7800005e86},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d6, match64: 0x00000000, model64: 0x5e8600005e89},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d7, match64: 0x00000000, model64: 0x5e8900005e92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e9200005e97, model64: 0x5e9700005ea0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ea000005ea6, model64: 0x5ea600005eaf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5eaf00005eb5, model64: 0x5eb500005ebf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ebf00005ec5, model64: 0x5ec500005ece},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ece00005ed4, model64: 0x5ed400005edd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5edd00005ee3, model64: 0x5ee300005ef0},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d8, match64: 0x00000000, model64: 0x5ef000005ef8},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d9, match64: 0x00000000, model64: 0x5ef800005f04},
		modelTuple{type64: 0x2700000027, matchRI: 0x05da, match64: 0x00000000, model64: 0x5f0400005f0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x05db, match64: 0x00000000, model64: 0x5f0c00005f14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f1400005f1f, model64: 0x5f1f00005f2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f2a00005f39, model64: 0x5f3900005f48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f4800005f53, model64: 0x5f4800005f53},
		modelTuple{type64: 0x2700000027, matchRI: 0x05dc, match64: 0x00000000, model64: 0x5f5300005f5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x05dd, match64: 0x00000000, model64: 0x5f5f00005f6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x05de, match64: 0x00000000, model64: 0x5f6d00005f7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x05df, match64: 0x00000000, model64: 0x5f7a00005f89},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e0, match64: 0x00000000, model64: 0x5f8900005f93},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e1, match64: 0x00000000, model64: 0x1ab800001abf},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e2, match64: 0x00000000, model64: 0x5f9300005f9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e3, match64: 0x00000000, model64: 0x5f9a00005fa7},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e4, match64: 0x00000000, model64: 0x5fa700005fb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e5, match64: 0x00000000, model64: 0x5fb700005fbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e6, match64: 0x00000000, model64: 0x5fbf00005fc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e7, match64: 0x00000000, model64: 0x5fc900005fd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e8, match64: 0x00000000, model64: 0x5fd400005fe3},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e9, match64: 0x00000000, model64: 0x5fe300005ff3},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ea, match64: 0x00000000, model64: 0x5ff300006000},
		modelTuple{type64: 0x2700000027, matchRI: 0x05eb, match64: 0x00000000, model64: 0x600000006009},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ec, match64: 0x00000000, model64: 0x600900006017},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ed, match64: 0x00000000, model64: 0x601700006026},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x60260000602e, model64: 0x60260000602e},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ee, match64: 0x00000000, model64: 0x602e0000603b},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ef, match64: 0x00000000, model64: 0x603b00006049},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x604900006057, model64: 0x604900006057},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f0, match64: 0x00000000, model64: 0x605700006060},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x60600000606c, model64: 0x60600000606c},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f1, match64: 0x00000000, model64: 0x606c00006072},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x607b00006089},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x608f0000609b, model64: 0x609b000060ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f6, match64: 0x00000000, model64: 0x60b6000060b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x60b9000060c4, model64: 0x60c4000060c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f8, match64: 0x00000000, model64: 0x60cd000060d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f9, match64: 0x00000000, model64: 0x60d7000060e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fa, match64: 0x00000000, model64: 0x60e7000060f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fb, match64: 0x00000000, model64: 0x60f600006103},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fc, match64: 0x00000000, model64: 0x610300006110},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fd, match64: 0x00000000, model64: 0x61100000611e},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fe, match64: 0x00000000, model64: 0x611e0000612c},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ff, match64: 0x00000000, model64: 0x612c00006139},
		modelTuple{type64: 0x2700000027, matchRI: 0x0600, match64: 0x00000000, model64: 0x613900006147},
		modelTuple{type64: 0x2700000027, matchRI: 0x0601, match64: 0x00000000, model64: 0x61470000614f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0603, match64: 0x00000000, model64: 0x615600006161},
		modelTuple{type64: 0x2700000027, matchRI: 0x0604, match64: 0x00000000, model64: 0x61610000616d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0605, match64: 0x00000000, model64: 0x616d00006178},
		modelTuple{type64: 0x2700000027, matchRI: 0x0606, match64: 0x00000000, model64: 0x61780000617f},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x617f0000618f, model64: 0x618f00006199},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6199000061a1, model64: 0x61a1000061a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0607, match64: 0x00000000, model64: 0x61a7000061ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0608, match64: 0x00000000, model64: 0x1f6000001f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61ac000061b3, model64: 0x61b3000061ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0609, match64: 0x00000000, model64: 0x61ba000061bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x060a, match64: 0x00000000, model64: 0x61bd000061c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x060b, match64: 0x00000000, model64: 0x61c4000061ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x060c, match64: 0x00000000, model64: 0x61ca000061d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x060d, match64: 0x00000000, model64: 0x61d2000061dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x060e, match64: 0x00000000, model64: 0x61dd000061e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x060f, match64: 0x00000000, model64: 0x61e9000061ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0610, match64: 0x00000000, model64: 0x61ed000061f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0611, match64: 0x00000000, model64: 0x61f0000061f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0612, match64: 0x00000000, model64: 0x61f6000061fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0613, match64: 0x00000000, model64: 0x183200001834},
		modelTuple{type64: 0x2700000027, matchRI: 0x0614, match64: 0x00000000, model64: 0x61fc00006203},
		modelTuple{type64: 0x2700000027, matchRI: 0x0615, match64: 0x00000000, model64: 0x620300006209},
		modelTuple{type64: 0x2700000027, matchRI: 0x0616, match64: 0x00000000, model64: 0x620900006214},
		modelTuple{type64: 0x2700000027, matchRI: 0x0617, match64: 0x00000000, model64: 0x62140000621a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0618, match64: 0x00000000, model64: 0x621a00006220},
		modelTuple{type64: 0x2700000027, matchRI: 0x0619, match64: 0x00000000, model64: 0x622000006227},
		modelTuple{type64: 0x2700000027, matchRI: 0x061a, match64: 0x00000000, model64: 0x62270000622e},
		modelTuple{type64: 0x2700000027, matchRI: 0x061b, match64: 0x00000000, model64: 0x622e00006239},
		modelTuple{type64: 0x2700000027, matchRI: 0x061c, match64: 0x00000000, model64: 0x62390000623b},
		modelTuple{type64: 0x2700000027, matchRI: 0x061d, match64: 0x00000000, model64: 0x623b00006240},
		modelTuple{type64: 0x2700000027, matchRI: 0x061e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x061f, match64: 0x00000000, model64: 0x624000006243},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x624300006247, model64: 0x62470000624d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x624d00006251, model64: 0x625100006259},
		modelTuple{type64: 0x2700000027, matchRI: 0x0620, match64: 0x00000000, model64: 0x62590000625f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0621, match64: 0x00000000, model64: 0x625f00006265},
		modelTuple{type64: 0x2700000027, matchRI: 0x0622, match64: 0x00000000, model64: 0x626500006270},
		modelTuple{type64: 0x2700000027, matchRI: 0x0623, match64: 0x00000000, model64: 0x62700000627b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0624, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0625, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0626, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0627, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x62890000629c, model64: 0x629c000062a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0629, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62b4000062ba, model64: 0x62ba000062c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62c0000062c5, model64: 0x62c5000062cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x062c, match64: 0x00000000, model64: 0x62cb000062d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62da000062e1, model64: 0x62e1000062ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62ec000062f4, model64: 0x62f4000062fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62fc00006302, model64: 0x630200006306},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63060000630c, model64: 0x630c00006312},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63120000631a, model64: 0x631a00006320},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x632000006327, model64: 0x63270000632d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x632d00006332, model64: 0x63320000633b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x633b00006343, model64: 0x63430000634e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x634e00006354, model64: 0x63540000635b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x635b00006361, model64: 0x63610000636a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x636a00006372, model64: 0x63720000637a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x637a00006381, model64: 0x63810000638c},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x062e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x639a0000639e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0632, match64: 0x00000000, model64: 0x63a7000063b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0633, match64: 0x00000000, model64: 0x63b4000063be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0634, match64: 0x00000000, model64: 0x63be000063c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0635, match64: 0x00000000, model64: 0x63c8000063cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0636, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63cf000063db, model64: 0x63db000063e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63e3000063ed, model64: 0x63ed000063f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0637, match64: 0x00000000, model64: 0x63f700006406},
		modelTuple{type64: 0x2700000027, matchRI: 0x0638, match64: 0x00000000, model64: 0x640600006410},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0639, match64: 0x00000000, model64: 0x641000006418},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x063b, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x641d00006428, model64: 0x642800006434},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x643b00006444, model64: 0x64440000644d},
		modelTuple{type64: 0x2700000027, matchRI: 0x063e, match64: 0x00000000, model64: 0x645100006458},
		modelTuple{type64: 0x2700000027, matchRI: 0x063f, match64: 0x00000000, model64: 0x64580000645d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0640, match64: 0x00000000, model64: 0x645d00006463},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x646300006468, model64: 0x64680000646e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x646e00006476, model64: 0x64760000647d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0641, match64: 0x00000000, model64: 0x647d00006484},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x648400006489, model64: 0x648900006490},
		modelTuple{type64: 0x2700000027, matchRI: 0x0642, match64: 0x00000000, model64: 0x64900000649b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x649b000064a0, model64: 0x64760000647d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64a0000064a8, model64: 0x64a8000064b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64b0000064b5, model64: 0x64b5000064bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0643, match64: 0x00000000, model64: 0x64bc000064c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0644, match64: 0x00000000, model64: 0x64c7000064d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0645, match64: 0x00000000, model64: 0x64d1000064e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0646, match64: 0x00000000, model64: 0x64e1000064f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0647, match64: 0x00000000, model64: 0x64f2000064fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0648, match64: 0x00000000, model64: 0x64fa00006506},
		modelTuple{type64: 0x2700000027, matchRI: 0x0649, match64: 0x00000000, model64: 0x650600006517},
		modelTuple{type64: 0x2700000027, matchRI: 0x064a, match64: 0x00000000, model64: 0x65170000651e},
		modelTuple{type64: 0x2700000027, matchRI: 0x064b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x064c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x064d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x064f, match64: 0x00000000, model64: 0x65260000652a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0651, match64: 0x00000000, model64: 0x652f00006535},
		modelTuple{type64: 0x2700000027, matchRI: 0x0652, match64: 0x00000000, model64: 0x65350000653c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0653, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0654, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x654800006552, model64: 0x65520000655d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0657, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0658, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x065c, match64: 0x00000000, model64: 0x656c00006574},
		modelTuple{type64: 0x2700000027, matchRI: 0x065d, match64: 0x00000000, model64: 0x657400006584},
		modelTuple{type64: 0x2700000027, matchRI: 0x065e, match64: 0x00000000, model64: 0x658400006591},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65910000659c, model64: 0x659c000065a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x065f, match64: 0x00000000, model64: 0x656c00006574},
		modelTuple{type64: 0x2700000027, matchRI: 0x0660, match64: 0x00000000, model64: 0x65a8000065b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0661, match64: 0x00000000, model64: 0x65b8000065c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0662, match64: 0x00000000, model64: 0x65c9000065d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0663, match64: 0x00000000, model64: 0x65d3000065dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0664, match64: 0x00000000, model64: 0x65dd000065e8},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0665, match64: 0x00000000, model64: 0x65e8000065f3},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0666, match64: 0x00000000, model64: 0x65f3000065fe},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x65fe0000660f, model64: 0x660f00006620},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0667, match64: 0x00000000, model64: 0x662000006628},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0668, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0669, match64: 0x00000000, model64: 0x662000006628},
		modelTuple{type64: 0x20d00000213, matchRI: 0x066a, match64: 0x00000000, model64: 0x662000006628},
		modelTuple{type64: 0x2700000027, matchRI: 0x066b, match64: 0x00000000, model64: 0x66280000662f},
		modelTuple{type64: 0x2700000027, matchRI: 0x066c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x066d, match64: 0x00000000, model64: 0x662f00006635},
		modelTuple{type64: 0x2e8000002f5, matchRI: -0x0001, match64: 0x66350000663e, model64: 0x66350000663e},
		modelTuple{type64: 0xed000000f4, matchRI: 0x066e, match64: 0x00000000, model64: 0x663e00006643},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x066f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0670, match64: 0x00000000, model64: 0x664300006648},
		modelTuple{type64: 0x2700000027, matchRI: 0x0671, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0672, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0673, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x664e00006657, model64: 0x665700006660},
		modelTuple{type64: 0x2700000027, matchRI: 0x0676, match64: 0x00000000, model64: 0x666000006669},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x666900006671, model64: 0x667100006679},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x667900006680, model64: 0x668000006687},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0678, match64: 0x00000000, model64: 0x668c00006696},
		modelTuple{type64: 0x2700000027, matchRI: 0x067a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x067b, match64: 0x00000000, model64: 0x669d000066a1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x406800004070},
		modelTuple{type64: 0x2700000027, matchRI: 0x067d, match64: 0x00000000, model64: 0x66b8000066c2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x66d3000066dd, model64: 0x66dd000066e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0682, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x66eb000066f3, model64: 0x66f3000066f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x66f8000066fe, model64: 0x66fe00006704},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0683, match64: 0x00000000, model64: 0x67040000670b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x670b00006713, model64: 0x67130000671b},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x0684, match64: 0x00000000, model64: 0x671b00006721},
		modelTuple{type64: 0x2700000027, matchRI: 0x0686, match64: 0x00000000, model64: 0x67230000672b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0687, match64: 0x00000000, model64: 0x672b00006735},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x673500006746, model64: 0x674600006754},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x675400006762, model64: 0x67620000676e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0688, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x068a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x068b, match64: 0x00000000, model64: 0x677100006776},
		modelTuple{type64: 0x20d00000213, matchRI: 0x068c, match64: 0x00000000, model64: 0x67760000677f},
		modelTuple{type64: 0x2700000027, matchRI: 0x068d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x678900006791, model64: 0x679100006795},
		modelTuple{type64: 0x2700000027, matchRI: 0x0690, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0695, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0697, match64: 0x00000000, model64: 0x67ba000067c4},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0698, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x069a, match64: 0x00000000, model64: 0x67c9000067d3},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x67d3000067de, model64: 0x67de000067e9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x069b, match64: 0x00000000, model64: 0x67e9000067f1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x069c, match64: 0x00000000, model64: 0x67f1000067fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x680300006809, model64: 0x680300006809},
		modelTuple{type64: 0x2700000027, matchRI: 0x069e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x680d00006819, model64: 0x681900006823},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x682c00006834},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a4, match64: 0x00000000, model64: 0x685000006861},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x686100006869, model64: 0x686900006874},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68800000688c, model64: 0x688c00006891},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68910000689d, model64: 0x689d000068a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68ac000068ae, model64: 0x68ac000068ae},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x68bc000068c4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68ce000068d4, model64: 0x68d4000068da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68da000068e4, model64: 0x68e4000068f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68f0000068f6, model64: 0x68f6000068fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x690400006909, model64: 0x690400006909},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06aa, match64: 0x00000000, model64: 0x690900006911},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ab, match64: 0x00000000, model64: 0x691100006916},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ac, match64: 0x00000000, model64: 0x69160000691f},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x06ad, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x06ae, match64: 0x00000000, model64: 0x691f00006928},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x06af, match64: 0x00000000, model64: 0x692800006935},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06b0, match64: 0x00000000, model64: 0x59690000596e},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x06b1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06b2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x693b00006943},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b7, match64: 0x00000000, model64: 0x69490000694f},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b8, match64: 0x00000000, model64: 0x69490000694f},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x06ba, match64: 0x00000000, model64: 0x694f00006955},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06be, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69700000697a, model64: 0x697a00006986},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c3, match64: 0x00000000, model64: 0x698600006989},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c4, match64: 0x00000000, model64: 0x69890000698d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x698d00006992, model64: 0x698d00006992},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69ac000069b3, model64: 0x69ac000069b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ca, match64: 0x00000000, model64: 0x69890000698d},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cd, match64: 0x00000000, model64: 0x69ba000069bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ce, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06d0, match64: 0x00000000, model64: 0x69c4000069ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69ca000069ce, model64: 0x69ca000069ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69ce000069d6, model64: 0x69d6000069e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69e1000069e9, model64: 0x69e9000069f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69f4000069fc, model64: 0x69fc00006a07},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a0700006a0d, model64: 0x6a0d00006a15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a1500006a1d, model64: 0x6a1d00006a29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a2900006a31, model64: 0x6a3100006a3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a3c00006a44, model64: 0x6a4400006a50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a5000006a58, model64: 0x6a5800006a64},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a6400006a6c, model64: 0x6a6c00006a76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a7600006a7e, model64: 0x6a7e00006a8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a8c00006a94, model64: 0x6a9400006aa0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6aa000006aa8, model64: 0x6aa800006ab4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ab400006abc, model64: 0x6abc00006ac8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ac800006ad0, model64: 0x6ad000006adb},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d2, match64: 0x00000000, model64: 0x6adb00006ae5},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ae500006aeb, model64: 0x6aeb00006af3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6af300006b07, model64: 0x6b0700006b12},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6b1200006b19, model64: 0x6b1900006b26},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6b2600006b2e, model64: 0x6b2e00006b3a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6b3a00006b42, model64: 0x6b4200006b50},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6b5000006b5a, model64: 0x6b5a00006b68},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06d6, match64: 0x00000000, model64: 0x6b6800006b6c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6b6c00006b75, model64: 0x6b7500006b79},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06d7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6b7900006b88, model64: 0x6b8800006b8e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06da, match64: 0x00000000, model64: 0x40560000405c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06db, match64: 0x00000000, model64: 0x6b8e00006b98},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06dc, match64: 0x00000000, model64: 0x6b9800006b9f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6b9f00006ba7, model64: 0x6ba700006bb1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06dd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6bb100006bb9, model64: 0x6bb900006bc3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06de, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6bc300006bcb, model64: 0x6bcb00006bd9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6bd900006be1, model64: 0x6be100006bef},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6bef00006bf7, model64: 0x6bf700006c06},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6c0600006c0e, model64: 0x6c0e00006c1f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6c1f00006c27, model64: 0x6c2700006c35},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6c3500006c3d, model64: 0x6c3d00006c4b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6c4b00006c53, model64: 0x6c5300006c61},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6c6100006c69, model64: 0x6c6900006c77},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06df, match64: 0x00000000, model64: 0x6c7700006c84},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06e0, match64: 0x00000000, model64: 0x6c8400006c90},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06e1, match64: 0x00000000, model64: 0x6c9000006c9a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06e2, match64: 0x00000000, model64: 0x6c9a00006ca1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6ca100006ca9, model64: 0x6ca900006cb6},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6cb600006cbe, model64: 0x6cbe00006ccd},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6ccd00006cd5, model64: 0x6ccd00006cd5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6cd500006ce6, model64: 0x6ce600006cee},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6cee00006cf6, model64: 0x6cf600006d02},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06e3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06e4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x06e5, match64: 0x00000000, model64: 0x6d0200006d11},
		modelTuple{type64: 0x245f00002467, matchRI: 0x06e6, match64: 0x00000000, model64: 0x6d1100006d17},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x06e7, match64: 0x00000000, model64: 0x6d1700006d1f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x6d2400006d2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d3200006d3b, model64: 0x6d3b00006d44},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ea, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ed, match64: 0x00000000, model64: 0x6d5700006d61},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ef, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f0, match64: 0x00000000, model64: 0x6d6800006d6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f1, match64: 0x00000000, model64: 0x6d6f00006d7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d9a00006d9f, model64: 0x6d9a00006d9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fb, match64: 0x00000000, model64: 0x6d9f00006db2},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fc, match64: 0x00000000, model64: 0x6db200006dc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fd, match64: 0x00000000, model64: 0x6dc400006dd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fe, match64: 0x00000000, model64: 0x6dd200006dd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ff, match64: 0x00000000, model64: 0x6dd800006de4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0700, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0701, match64: 0x00000000, model64: 0x6de400006deb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0702, match64: 0x00000000, model64: 0x6deb00006df2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6df200006dfd, model64: 0x6dfd00006e08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e0800006e0f, model64: 0x6e0800006e0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0703, match64: 0x00000000, model64: 0x6e0f00006e1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e1a00006e21, model64: 0x6e1a00006e21},
		modelTuple{type64: 0x2700000027, matchRI: 0x0704, match64: 0x00000000, model64: 0x6e2100006e28},
		modelTuple{type64: 0x2700000027, matchRI: 0x0705, match64: 0x00000000, model64: 0x6e2800006e30},
		modelTuple{type64: 0x2700000027, matchRI: 0x0706, match64: 0x00000000, model64: 0x6e3000006e38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e3800006e3d, model64: 0x6e3d00006e43},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e4300006e4f, model64: 0x6e4f00006e5b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e5b00006e67, model64: 0x6e6700006e73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e7300006e7a, model64: 0x6e7300006e7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e7a00006e83, model64: 0x6e8300006e85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e8500006e8c, model64: 0x6e8c00006e93},
		modelTuple{type64: 0x2700000027, matchRI: 0x0707, match64: 0x00000000, model64: 0x6e9300006e9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e9d00006ea4, model64: 0x6ea400006eac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0708, match64: 0x00000000, model64: 0x6eac00006eb4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6eb400006ebc, model64: 0x6ebc00006ec4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ec400006ed2, model64: 0x6ed200006ee0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ee000006ee8, model64: 0x6ee800006ef0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ef000006ef9, model64: 0x6ef000006ef9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ef900006eff, model64: 0x6ef900006eff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6eff00006f05, model64: 0x6f0500006f0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0709, match64: 0x00000000, model64: 0x6de400006deb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6f0c00006f11, model64: 0x6f1100006f17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6f1700006f1c, model64: 0x6f1c00006f28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6f2800006f35, model64: 0x6f3500006f42},
		modelTuple{type64: 0x2700000027, matchRI: 0x070a, match64: 0x00000000, model64: 0x6f4200006f4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x070b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x070c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x070d, match64: 0x00000000, model64: 0x59690000596e},
		modelTuple{type64: 0x2700000027, matchRI: 0x070e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x070f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0710, match64: 0x00000000, model64: 0x6f4a00006f4f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x6f5500006f57},
		modelTuple{type64: 0x2700000027, matchRI: 0x0713, match64: 0x00000000, model64: 0x6f5b00006f66},
		modelTuple{type64: 0x2700000027, matchRI: 0x0714, match64: 0x00000000, model64: 0x6f6600006f6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0715, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0716, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0718, match64: 0x00000000, model64: 0x6f7f00006f84},
		modelTuple{type64: 0x2700000027, matchRI: 0x0719, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x071b, match64: 0x00000000, model64: 0x6f8800006f8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x071c, match64: 0x00000000, model64: 0x6f8c00006f90},
		modelTuple{type64: 0x2700000027, matchRI: 0x071d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x071e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6f9c00006fa2, model64: 0x6fa200006fa8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6fa800006fac, model64: 0x6fa800006fac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0720, match64: 0x00000000, model64: 0x6fac00006fb6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0724, match64: 0x00000000, model64: 0x6fd000006fd6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x6fe000006fe8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0728, match64: 0x00000000, model64: 0x6fef00006ff6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0729, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x072a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x072e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x700a00007016, model64: 0x700a00007016},
		modelTuple{type64: 0x2700000027, matchRI: 0x072f, match64: 0x00000000, model64: 0x701600007020},
		modelTuple{type64: 0x2700000027, matchRI: 0x0730, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0732, match64: 0x00000000, model64: 0x702700007031},
		modelTuple{type64: 0x2700000027, matchRI: 0x0733, match64: 0x00000000, model64: 0x70310000703e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0735, match64: 0x00000000, model64: 0x704300007046},
		modelTuple{type64: 0x2700000027, matchRI: 0x0736, match64: 0x00000000, model64: 0x704600007049},
		modelTuple{type64: 0x2700000027, matchRI: 0x0737, match64: 0x00000000, model64: 0x704900007055},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0738, match64: 0x00000000, model64: 0x705500007057},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x073a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x073b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x073e, match64: 0x00000000, model64: 0x706800007073},
		modelTuple{type64: 0x2700000027, matchRI: 0x073f, match64: 0x00000000, model64: 0x707300007079},
		modelTuple{type64: 0x2700000027, matchRI: 0x0740, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0742, match64: 0x00000000, model64: 0x707c00007083},
		modelTuple{type64: 0x2700000027, matchRI: 0x0743, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0744, match64: 0x00000000, model64: 0x708300007089},
		modelTuple{type64: 0x2700000027, matchRI: 0x0745, match64: 0x00000000, model64: 0x70890000708e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0747, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0748, match64: 0x00000000, model64: 0x709000007094},
		modelTuple{type64: 0x2700000027, matchRI: 0x0749, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x709a000070a2, model64: 0x70a2000070a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70ad000070b5, model64: 0x70b5000070bd},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x70c0000070d1, model64: 0x70d1000070de},
		modelTuple{type64: 0x2700000027, matchRI: 0x074d, match64: 0x00000000, model64: 0x70de000070e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x074e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x074f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0751, match64: 0x00000000, model64: 0x70eb000070f0},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0752, match64: 0x00000000, model64: 0x70eb000070f0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x70f500007100},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x710a00007110},
		modelTuple{type64: 0x2700000027, matchRI: 0x0757, match64: 0x00000000, model64: 0x71150000711f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0758, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71230000712d, model64: 0x712d00007137},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x713700007144, model64: 0x714400007151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x075f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0760, match64: 0x00000000, model64: 0x716900007173},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x717f00007190, model64: 0x71900000719c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0762, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0763, match64: 0x00000000, model64: 0x719c000071a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71a7000071b4, model64: 0x71b4000071bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0764, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0767, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71d0000071d7, model64: 0x71d7000071df},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x71e6000071f1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x076b, match64: 0x00000000, model64: 0x720200007216},
		modelTuple{type64: 0x2700000027, matchRI: 0x076c, match64: 0x00000000, model64: 0x721600007231},
		modelTuple{type64: 0x2700000027, matchRI: 0x076d, match64: 0x00000000, model64: 0x723100007245},
		modelTuple{type64: 0x2700000027, matchRI: 0x076e, match64: 0x00000000, model64: 0x724500007258},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x726400007275},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0770, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0771, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0773, match64: 0x00000000, model64: 0x72850000728a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0774, match64: 0x00000000, model64: 0x728a00007295},
		modelTuple{type64: 0x2700000027, matchRI: 0x0775, match64: 0x00000000, model64: 0x72950000729b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0776, match64: 0x00000000, model64: 0x729b000072a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0777, match64: 0x00000000, model64: 0x72a5000072ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0778, match64: 0x00000000, model64: 0x72ad000072b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0779, match64: 0x00000000, model64: 0x72b5000072be},
		modelTuple{type64: 0x2700000027, matchRI: 0x077a, match64: 0x00000000, model64: 0x1aa900001ab1},
		modelTuple{type64: 0x2700000027, matchRI: 0x077b, match64: 0x00000000, model64: 0x72be000072c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x077c, match64: 0x00000000, model64: 0x72c5000072cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x077d, match64: 0x00000000, model64: 0x72cc000072d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x077e, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x077f, match64: 0x00000000, model64: 0x72d3000072d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0780, match64: 0x00000000, model64: 0x72d6000072dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0781, match64: 0x00000000, model64: 0x72dc000072de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0782, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0783, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0784, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0786, match64: 0x00000000, model64: 0x72e5000072ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0787, match64: 0x00000000, model64: 0x72ec000072f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0788, match64: 0x00000000, model64: 0x72e5000072ec},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x078b, match64: 0x00000000, model64: 0x730900007312},
		modelTuple{type64: 0x2700000027, matchRI: 0x078c, match64: 0x00000000, model64: 0x731200007318},
		modelTuple{type64: 0x2700000027, matchRI: 0x078d, match64: 0x00000000, model64: 0x731800007320},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x732d00007333, model64: 0x73330000733a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0790, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0792, match64: 0x00000000, model64: 0x73430000734f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0793, match64: 0x00000000, model64: 0x734f0000735c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0794, match64: 0x00000000, model64: 0x735c00007367},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x736700007370, model64: 0x73700000737a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0795, match64: 0x00000000, model64: 0x737a00007384},
		modelTuple{type64: 0x2700000027, matchRI: 0x0796, match64: 0x00000000, model64: 0x73840000738d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0797, match64: 0x00000000, model64: 0x738d00007399},
		modelTuple{type64: 0x2700000027, matchRI: 0x0799, match64: 0x00000000, model64: 0x73a6000073b5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x079a, match64: 0x00000000, model64: 0x73b5000073c5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x73c5000073d5, model64: 0x73d5000073dd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x079b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x73ec000073f5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x73fc0000740a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x741000007419, model64: 0x741900007422},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x742200007426, model64: 0x742200007426},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74320000743b, model64: 0x743b00007443},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x744300007448, model64: 0x744300007448},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74480000744c, model64: 0x744c0000744f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x744f00007453, model64: 0x74530000745d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x745d00007461, model64: 0x4c4500004c4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x746100007466, model64: 0x74660000746f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x746f00007474, model64: 0x74740000747b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x747b00007481, model64: 0x748100007487},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74870000748b, model64: 0x748b00007492},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x749200007496, model64: 0x74960000749e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x749e000074a3, model64: 0x74a3000074ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74ab000074af, model64: 0x74af000074b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74b3000074b7, model64: 0x74b7000074bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74bf000074c3, model64: 0x74c3000074c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74c7000074cb, model64: 0x74cb000074d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74d5000074d9, model64: 0x74d9000074df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74df000074e3, model64: 0x74e3000074e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74e8000074ec, model64: 0x74ec000074f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74f5000074f9, model64: 0x74f900007504},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x750400007508, model64: 0x75080000750f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x750f00007513, model64: 0x75130000751a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x751a0000751e, model64: 0x751e00007529},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75290000752d, model64: 0x752d00007538},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75380000753c, model64: 0x753c00007545},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x754500007549, model64: 0x754900007550},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x755500007568},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x756f00007573},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x757700007581, model64: 0x75810000758b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x758b00007595, model64: 0x758b00007595},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7595000075a0, model64: 0x75a0000075ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a6, match64: 0x00000000, model64: 0x75ab000075b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a7, match64: 0x00000000, model64: 0x75b5000075c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a8, match64: 0x00000000, model64: 0x75c0000075c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75c9000075d5, model64: 0x75d5000075e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a9, match64: 0x00000000, model64: 0x75e1000075ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75ea000075f4, model64: 0x75f4000075fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75fe0000760a, model64: 0x760a00007616},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x76160000761f, model64: 0x761f0000762c},
		modelTuple{type64: 0x2700000027, matchRI: 0x07aa, match64: 0x00000000, model64: 0x762c00007635},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ab, match64: 0x00000000, model64: 0x76350000763e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x763e00007648, model64: 0x763e00007648},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ac, match64: 0x00000000, model64: 0x764800007652},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ad, match64: 0x00000000, model64: 0x75a0000075ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x76520000765d, model64: 0x76520000765d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x765d00007667, model64: 0x765d00007667},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x766700007674, model64: 0x766700007674},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ae, match64: 0x00000000, model64: 0x767400007678},
		modelTuple{type64: 0x2700000027, matchRI: 0x07af, match64: 0x00000000, model64: 0x76780000767c},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b0, match64: 0x00000000, model64: 0x767c00007680},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x76800000768a, model64: 0x76800000768a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x768a00007694, model64: 0x768a00007694},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x76940000769e, model64: 0x76940000769e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x769e000076a8, model64: 0x76a8000076b2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x07b1, match64: 0x00000000, model64: 0x76b2000076c2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x07b2, match64: 0x00000000, model64: 0x76c2000076cd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x07b3, match64: 0x00000000, model64: 0x405c00004062},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x76cd000076dd, model64: 0x76dd000076e8},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x07b4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b7, match64: 0x00000000, model64: 0x76f0000076f4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x77090000770d, model64: 0x77090000770d},
		modelTuple{type64: 0x2700000027, matchRI: 0x07bc, match64: 0x00000000, model64: 0x771700007724},
		modelTuple{type64: 0x2700000027, matchRI: 0x07bd, match64: 0x00000000, model64: 0x77240000772c},
		modelTuple{type64: 0x2700000027, matchRI: 0x07be, match64: 0x00000000, model64: 0x772c00007734},
		modelTuple{type64: 0x2700000027, matchRI: 0x07bf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x07c3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x774700007760, model64: 0x776000007774},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c6, match64: 0x00000000, model64: 0x777c00007783},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x77830000778e, model64: 0x778e00007795},
		modelTuple{type64: 0x20d00000213, matchRI: 0x07c7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x07c8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ca, match64: 0x00000000, model64: 0x779d000077a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x07cb, match64: 0x00000000, model64: 0x77a6000077ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x07cc, match64: 0x00000000, model64: 0x77ac000077b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x07cd, match64: 0x00000000, model64: 0x77b5000077bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ce, match64: 0x00000000, model64: 0x77bd000077c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x77c4000077cc, model64: 0x77cc000077d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x07cf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x07d0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d3, match64: 0x00000000, model64: 0x77db000077e8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x77ee000077f5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x07d6, match64: 0x00000000, model64: 0x77fc00007806},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d7, match64: 0x00000000, model64: 0x78060000780d},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d8, match64: 0x00000000, model64: 0x780d00007814},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x781400007824, model64: 0x781400007824},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d9, match64: 0x00000000, model64: 0x78240000782b},
		modelTuple{type64: 0x2700000027, matchRI: 0x07da, match64: 0x00000000, model64: 0x782b00007838},
		modelTuple{type64: 0x2700000027, matchRI: 0x07db, match64: 0x00000000, model64: 0x783800007841},
		modelTuple{type64: 0x2700000027, matchRI: 0x07dc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x78470000784e, model64: 0x784e00007856},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x785600007862, model64: 0x786200007868},
		modelTuple{type64: 0x2700000027, matchRI: 0x07de, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x786f00007888, model64: 0x788800007899},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x07e0, match64: 0x00000000, model64: 0x7899000078a7},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x07e1, match64: 0x00000000, model64: 0x78a7000078b2},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x78b2000078c2, model64: 0x78c2000078ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x78ca000078dd, model64: 0x78ca000078dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e2, match64: 0x00000000, model64: 0x78dd000078ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e3, match64: 0x00000000, model64: 0x78ec000078fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x790a00007918, model64: 0x791800007927},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x792700007937, model64: 0x792700007937},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x793700007943, model64: 0x79430000794f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x794f0000795e, model64: 0x795e0000796d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x796d0000797d, model64: 0x797d0000798f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x798f00007999, model64: 0x7999000079ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e8, match64: 0x00000000, model64: 0x79b4000079bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e9, match64: 0x00000000, model64: 0x79bf000079c5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ec, match64: 0x00000000, model64: 0x79d1000079df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79df000079e8, model64: 0x79df000079e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ed, match64: 0x00000000, model64: 0x79e8000079f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ee, match64: 0x00000000, model64: 0x79f600007a04},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ef, match64: 0x00000000, model64: 0x7a0400007a0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a0f00007a19, model64: 0x7a1900007a24},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f0, match64: 0x00000000, model64: 0x7a2400007a2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f1, match64: 0x00000000, model64: 0x7a2f00007a38},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f2, match64: 0x00000000, model64: 0x7a3800007a44},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f3, match64: 0x00000000, model64: 0x7a4400007a4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f4, match64: 0x00000000, model64: 0x7a4c00007a56},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f5, match64: 0x00000000, model64: 0x7a5600007a5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f6, match64: 0x00000000, model64: 0x4b1200004b1b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x07f7, match64: 0x00000000, model64: 0x7a5f00007a65},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x07f8, match64: 0x00000000, model64: 0x7a6500007a6b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x07f9, match64: 0x00000000, model64: 0x7a6b00007a71},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x07fa, match64: 0x00000000, model64: 0x7a7100007a7b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x07fb, match64: 0x00000000, model64: 0x106500001069},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x07fc, match64: 0x00000000, model64: 0x7a7b00007a80},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x07fd, match64: 0x00000000, model64: 0x7a8000007a85},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x07fe, match64: 0x00000000, model64: 0x7a8500007a88},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ff, match64: 0x00000000, model64: 0x7a8800007a8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0800, match64: 0x00000000, model64: 0x7a8e00007a94},
		modelTuple{type64: 0x2700000027, matchRI: 0x0801, match64: 0x00000000, model64: 0x7a9400007a99},
		modelTuple{type64: 0x2700000027, matchRI: 0x0802, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0803, match64: 0x00000000, model64: 0x7a9900007aa1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7aa100007aa7, model64: 0x7aa100007aa7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0805, match64: 0x00000000, model64: 0x7aad00007ab6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ab600007abe, model64: 0x7abe00007ac6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0808, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0809, match64: 0x00000000, model64: 0x7ace00007ad2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x080c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x080d, match64: 0x00000000, model64: 0x7ad800007add},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ae600007aec, model64: 0x7aec00007af3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7af300007afa, model64: 0x7afa00007b01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b0100007b09, model64: 0x7b0900007b12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b1200007b1b, model64: 0x7b1b00007b24},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b2400007b30, model64: 0x7b3000007b3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x080f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b3c00007b44, model64: 0x7b4400007b4d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7b6000007b68},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7b6d00007b7b},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x0813, match64: 0x00000000, model64: 0x7b8400007b8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0814, match64: 0x00000000, model64: 0x7b9300007b9d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0815, match64: 0x00000000, model64: 0x7b9d00007ba6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ba900007bb5, model64: 0x7bb500007bc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7bc400007bcf, model64: 0x7bc400007bcf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7bcf00007bdc, model64: 0x7bdc00007be1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7be100007bed, model64: 0x7bed00007bf3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7bf300007bff, model64: 0x7bff00007c02},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c0200007c0e, model64: 0x715d00007162},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c0e00007c1a, model64: 0x7c1a00007c20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c2000007c2c, model64: 0x7c2c00007c31},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0817, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c3400007c3b, model64: 0x7c3400007c3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c3b00007c45, model64: 0x7c3b00007c45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c4500007c4f, model64: 0x7c4500007c4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c4f00007c59, model64: 0x7c4f00007c59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c5900007c63, model64: 0x7c5900007c63},
		modelTuple{type64: 0x2700000027, matchRI: 0x081a, match64: 0x00000000, model64: 0x7c6600007c73},
		modelTuple{type64: 0x2700000027, matchRI: 0x081b, match64: 0x00000000, model64: 0x7c7300007c7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c7b00007c85, model64: 0x7c8500007c91},
		modelTuple{type64: 0x2700000027, matchRI: 0x081c, match64: 0x00000000, model64: 0x7c9100007c9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c9a00007ca5, model64: 0x7ca500007cb0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x081f, match64: 0x00000000, model64: 0x7cba00007cc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0820, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0822, match64: 0x00000000, model64: 0x7cc900007ccd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7ce900007cf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0826, match64: 0x00000000, model64: 0x7cf900007cfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0827, match64: 0x00000000, model64: 0x7cfb00007d01},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7d0700007d0e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x082c, match64: 0x00000000, model64: 0x7d2300007d2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7d2d00007d3e, model64: 0x7d2d00007d3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7d3e00007d43, model64: 0x7d4300007d49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7d4900007d51, model64: 0x18ca000018cb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x082d, match64: 0x00000000, model64: 0x7d5100007d57},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7d5d00007d62},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x406800004070},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7d8100007d88, model64: 0x7d8800007d8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7d8a00007d98, model64: 0x7d8a00007d98},
		modelTuple{type64: 0x2700000027, matchRI: 0x0833, match64: 0x00000000, model64: 0x7d9800007da1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7da100007daa, model64: 0x7daa00007dae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7dae00007dbd, model64: 0x7dbd00007dce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7dce00007dd8, model64: 0x7dce00007dd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0834, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ddc00007deb, model64: 0x7deb00007df4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0836, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7df400007dfe, model64: 0x7dfe00007e08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e0800007e11, model64: 0x7e1100007e1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0837, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e1a00007e24, model64: 0x7e2400007e29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e2900007e32, model64: 0x7e3200007e3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e3f00007e44, model64: 0x7e4400007e4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e4d00007e54, model64: 0x7e5400007e5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e5e00007e6a, model64: 0x7e6a00007e76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e7600007e7d, model64: 0x7e7d00007e85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e8500007e8d, model64: 0x7e8d00007e95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e9500007e9a, model64: 0x7e9a00007eaa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7eae00007eb3, model64: 0x7eae00007eb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0839, match64: 0x00000000, model64: 0x7eb300007eba},
		modelTuple{type64: 0x2700000027, matchRI: 0x083a, match64: 0x00000000, model64: 0x7eba00007ebd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ebd00007ec1, model64: 0x7ebd00007ec1},
		modelTuple{type64: 0x2700000027, matchRI: 0x083b, match64: 0x00000000, model64: 0x7ec100007ec6},
		modelTuple{type64: 0x2700000027, matchRI: 0x083c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x083d, match64: 0x00000000, model64: 0x7ec600007ec8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ec800007ecf, model64: 0x7ecf00007ed6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ed600007edc, model64: 0x7edc00007ee2},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x083e, match64: 0x00000000, model64: 0x7ee200007eed},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x083f, match64: 0x00000000, model64: 0x7eed00007ef9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0840, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0842, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0843, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0846, match64: 0x00000000, model64: 0x7f1d00007f28},
		modelTuple{type64: 0x2700000027, matchRI: 0x0847, match64: 0x00000000, model64: 0x7f2800007f33},
		modelTuple{type64: 0x2700000027, matchRI: 0x0848, match64: 0x00000000, model64: 0x7f3300007f40},
		modelTuple{type64: 0x2700000027, matchRI: 0x0849, match64: 0x00000000, model64: 0x7f4000007f4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x084a, match64: 0x00000000, model64: 0x7f4b00007f5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x084b, match64: 0x00000000, model64: 0x7f5b00007f68},
		modelTuple{type64: 0x2700000027, matchRI: 0x084c, match64: 0x00000000, model64: 0x7f6800007f78},
		modelTuple{type64: 0x2700000027, matchRI: 0x084d, match64: 0x00000000, model64: 0x7f7800007f82},
		modelTuple{type64: 0x2700000027, matchRI: 0x084e, match64: 0x00000000, model64: 0x7f8200007f90},
		modelTuple{type64: 0x2700000027, matchRI: 0x084f, match64: 0x00000000, model64: 0x7f9000007fa1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0850, match64: 0x00000000, model64: 0x7fa100007fb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0851, match64: 0x00000000, model64: 0x7fb000007fbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0852, match64: 0x00000000, model64: 0x7fbb00007fc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0853, match64: 0x00000000, model64: 0x7fc900007fd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0854, match64: 0x00000000, model64: 0x7fd500007fe1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0855, match64: 0x00000000, model64: 0x7fe100007ff0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0856, match64: 0x00000000, model64: 0x7ff000008003},
		modelTuple{type64: 0x2700000027, matchRI: 0x0857, match64: 0x00000000, model64: 0x80030000800e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0858, match64: 0x00000000, model64: 0x800e0000801d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0859, match64: 0x00000000, model64: 0x801d00008025},
		modelTuple{type64: 0x2700000027, matchRI: 0x085a, match64: 0x00000000, model64: 0x802500008032},
		modelTuple{type64: 0x2700000027, matchRI: 0x085b, match64: 0x00000000, model64: 0x80320000803c},
		modelTuple{type64: 0x2700000027, matchRI: 0x085c, match64: 0x00000000, model64: 0x803c0000804c},
		modelTuple{type64: 0x2700000027, matchRI: 0x085d, match64: 0x00000000, model64: 0x804c0000805b},
		modelTuple{type64: 0x2700000027, matchRI: 0x085e, match64: 0x00000000, model64: 0x805b00008066},
		modelTuple{type64: 0x2700000027, matchRI: 0x085f, match64: 0x00000000, model64: 0x806600008070},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80700000807a, model64: 0x807a00008084},
		modelTuple{type64: 0x2700000027, matchRI: 0x0860, match64: 0x00000000, model64: 0x80840000808e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0861, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x809200008099, model64: 0x80990000809a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x809a000080a0, model64: 0x80a0000080a6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0864, match64: 0x00000000, model64: 0x80a9000080b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0865, match64: 0x00000000, model64: 0x80b1000080b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0866, match64: 0x00000000, model64: 0x80b8000080c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0867, match64: 0x00000000, model64: 0x80c0000080c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0868, match64: 0x00000000, model64: 0x80c8000080d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0869, match64: 0x00000000, model64: 0x80d7000080e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x086a, match64: 0x00000000, model64: 0x80e0000080e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x086b, match64: 0x00000000, model64: 0x80e8000080f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x086c, match64: 0x00000000, model64: 0x80f0000080f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x086d, match64: 0x00000000, model64: 0x80f800008100},
		modelTuple{type64: 0x2700000027, matchRI: 0x086e, match64: 0x00000000, model64: 0x810000008108},
		modelTuple{type64: 0x2700000027, matchRI: 0x086f, match64: 0x00000000, model64: 0x810800008111},
		modelTuple{type64: 0x2700000027, matchRI: 0x0870, match64: 0x00000000, model64: 0x81110000811a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0871, match64: 0x00000000, model64: 0x811a00008129},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81290000812e, model64: 0x812e00008136},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81360000813b, model64: 0x813b00008144},
		modelTuple{type64: 0x2700000027, matchRI: 0x0872, match64: 0x00000000, model64: 0x81440000814c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x814c00008151, model64: 0x815100008159},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81590000815e, model64: 0x815e00008166},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81660000816b, model64: 0x816b00008174},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x817400008179, model64: 0x817900008182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0873, match64: 0x00000000, model64: 0x81820000818a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x818a0000818f, model64: 0x818f00008198},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81980000819d, model64: 0x819d000081a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81a6000081ab, model64: 0x81ab000081b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81b4000081b9, model64: 0x81b9000081c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81c1000081c6, model64: 0x81c6000081ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81ce000081d3, model64: 0x81d3000081db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81db000081e0, model64: 0x81e0000081e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81e8000081ed, model64: 0x81ed000081f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81f5000081fa, model64: 0x81fa00008202},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x820200008207, model64: 0x82070000820f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x820f00008214, model64: 0x821400008222},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82220000822e, model64: 0x82220000822e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x822e00008233, model64: 0x82330000823c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x823c00008241, model64: 0x82410000824a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0874, match64: 0x00000000, model64: 0x824a00008253},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x825300008258, model64: 0x825800008260},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x826000008265, model64: 0x826500008271},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x827100008276, model64: 0x82760000827f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x827f00008284, model64: 0x82840000828d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x828d00008292, model64: 0x82920000829a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x829a0000829f, model64: 0x829f000082ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82ab000082b0, model64: 0x82b0000082b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82b9000082be, model64: 0x82be000082c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82c9000082ce, model64: 0x82ce000082d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82d4000082d9, model64: 0x82d9000082e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82e7000082ec, model64: 0x82ec000082f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82f4000082f9, model64: 0x82f900008301},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x830100008306, model64: 0x83060000830f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x830f00008314, model64: 0x83140000831d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x831d00008322, model64: 0x83220000832a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x832a0000832f, model64: 0x832f00008338},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x83380000833d, model64: 0x833d00008346},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x83460000834b, model64: 0x834b00008354},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x835400008359, model64: 0x835900008362},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x836200008367, model64: 0x836700008370},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x837000008375, model64: 0x83750000837e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x837e00008383, model64: 0x83830000838c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x838c00008391, model64: 0x83910000839a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0875, match64: 0x00000000, model64: 0x839a000083a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0876, match64: 0x00000000, model64: 0x83a1000083a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0877, match64: 0x00000000, model64: 0x83a5000083aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0878, match64: 0x00000000, model64: 0x83aa000083af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0879, match64: 0x00000000, model64: 0x83af000083b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x087a, match64: 0x00000000, model64: 0x83b7000083bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x087b, match64: 0x00000000, model64: 0x83bf000083c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x087c, match64: 0x00000000, model64: 0x83c4000083c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x087d, match64: 0x00000000, model64: 0x83c9000083ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x087e, match64: 0x00000000, model64: 0x83ce000083d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x087f, match64: 0x00000000, model64: 0x83d8000083e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0880, match64: 0x00000000, model64: 0x83e2000083ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0881, match64: 0x00000000, model64: 0x83ec000083f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0882, match64: 0x00000000, model64: 0x83f600008400},
		modelTuple{type64: 0x2700000027, matchRI: 0x0883, match64: 0x00000000, model64: 0x84000000840a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0884, match64: 0x00000000, model64: 0x840a00008415},
		modelTuple{type64: 0x2700000027, matchRI: 0x0885, match64: 0x00000000, model64: 0x84150000841b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0886, match64: 0x00000000, model64: 0x841b00008427},
		modelTuple{type64: 0x2700000027, matchRI: 0x0887, match64: 0x00000000, model64: 0x84270000842f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0888, match64: 0x00000000, model64: 0x842f00008438},
		modelTuple{type64: 0x2700000027, matchRI: 0x0889, match64: 0x00000000, model64: 0x84380000843f},
		modelTuple{type64: 0x2700000027, matchRI: 0x088a, match64: 0x00000000, model64: 0x4b2300004b28},
		modelTuple{type64: 0x2700000027, matchRI: 0x088b, match64: 0x00000000, model64: 0x843f00008448},
		modelTuple{type64: 0x2700000027, matchRI: 0x088c, match64: 0x00000000, model64: 0x84480000844e},
		modelTuple{type64: 0x2700000027, matchRI: 0x088d, match64: 0x00000000, model64: 0x506300005068},
		modelTuple{type64: 0x2700000027, matchRI: 0x088e, match64: 0x00000000, model64: 0x844e00008458},
		modelTuple{type64: 0x2700000027, matchRI: 0x088f, match64: 0x00000000, model64: 0x845800008462},
		modelTuple{type64: 0x2700000027, matchRI: 0x0890, match64: 0x00000000, model64: 0x84620000846c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0891, match64: 0x00000000, model64: 0x846c00008470},
		modelTuple{type64: 0x2700000027, matchRI: 0x0892, match64: 0x00000000, model64: 0x48b00000491},
		modelTuple{type64: 0x2700000027, matchRI: 0x0893, match64: 0x00000000, model64: 0x847000008477},
		modelTuple{type64: 0x2700000027, matchRI: 0x0894, match64: 0x00000000, model64: 0x847700008480},
		modelTuple{type64: 0x2700000027, matchRI: 0x0895, match64: 0x00000000, model64: 0x848000008485},
		modelTuple{type64: 0x2700000027, matchRI: 0x0896, match64: 0x00000000, model64: 0x848500008491},
		modelTuple{type64: 0x2700000027, matchRI: 0x0897, match64: 0x00000000, model64: 0x84910000849b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0898, match64: 0x00000000, model64: 0x849b000084a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0899, match64: 0x00000000, model64: 0x4c6800004c6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x089a, match64: 0x00000000, model64: 0x84a3000084aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x089b, match64: 0x00000000, model64: 0x84aa000084b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x089c, match64: 0x00000000, model64: 0x84b3000084bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x089d, match64: 0x00000000, model64: 0x84bb000084c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x089e, match64: 0x00000000, model64: 0x84c0000084ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x089f, match64: 0x00000000, model64: 0x84ca000084d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a0, match64: 0x00000000, model64: 0x84d4000084df},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a1, match64: 0x00000000, model64: 0x84df000084ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a2, match64: 0x00000000, model64: 0x84ea000084f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a3, match64: 0x00000000, model64: 0x84f600008502},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a4, match64: 0x00000000, model64: 0x850200008506},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x08a5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x08a6, match64: 0x00000000, model64: 0x850600008510},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08aa, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x08ab, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ae, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08af, match64: 0x00000000, model64: 0x851a0000851c},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b2, match64: 0x00000000, model64: 0x85240000852f},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b4, match64: 0x00000000, model64: 0x853600008540},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b8, match64: 0x00000000, model64: 0x85510000855b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x855b00008565, model64: 0x85650000856f},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b9, match64: 0x00000000, model64: 0x856f00008578},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x857800008581, model64: 0x85810000858a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x858a00008593, model64: 0x858a00008593},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bb, match64: 0x00000000, model64: 0x8599000085a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bd, match64: 0x00000000, model64: 0x85ae000085b9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x85c5000085cc, model64: 0x85cc000085da},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c0, match64: 0x00000000, model64: 0x85da000085e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c1, match64: 0x00000000, model64: 0x85e4000085ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c2, match64: 0x00000000, model64: 0x85ec000085f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x85f8000085ff, model64: 0x85ff00008606},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86060000860d, model64: 0x860d00008612},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c3, match64: 0x00000000, model64: 0x861200008617},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86170000861e, model64: 0x861e00008628},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86280000862f, model64: 0x862f00008635},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86350000863b, model64: 0x863b0000863f},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c4, match64: 0x00000000, model64: 0x863f00008641},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c5, match64: 0x00000000, model64: 0x864100008649},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x864900008650, model64: 0x865000008658},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c6, match64: 0x00000000, model64: 0x865800008660},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x866000008667, model64: 0x866700008674},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86740000867b, model64: 0x867b00008689},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x868900008690, model64: 0x8690000086a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86a0000086a7, model64: 0x86a7000086b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86b2000086b9, model64: 0x86b9000086c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86c1000086cc, model64: 0x86cc000086d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86d7000086df, model64: 0x86df000086e7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c9, match64: 0x00000000, model64: 0x86f400008703},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ca, match64: 0x00000000, model64: 0x870300008712},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cb, match64: 0x00000000, model64: 0x87120000871f},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cc, match64: 0x00000000, model64: 0x871f00008731},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cd, match64: 0x00000000, model64: 0x873100008740},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ce, match64: 0x00000000, model64: 0x87400000874f},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cf, match64: 0x00000000, model64: 0x874f0000875f},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d0, match64: 0x00000000, model64: 0x875f0000876d},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d1, match64: 0x00000000, model64: 0x876d0000877c},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d2, match64: 0x00000000, model64: 0x877c0000878b},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d3, match64: 0x00000000, model64: 0x878b00008799},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d4, match64: 0x00000000, model64: 0x8799000087a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d5, match64: 0x00000000, model64: 0x87a8000087b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d6, match64: 0x00000000, model64: 0x87b8000087c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d7, match64: 0x00000000, model64: 0x87c9000087da},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d8, match64: 0x00000000, model64: 0x87da000087ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d9, match64: 0x00000000, model64: 0x87ed000087fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x08da, match64: 0x00000000, model64: 0x87fc0000880a},
		modelTuple{type64: 0x2700000027, matchRI: 0x08db, match64: 0x00000000, model64: 0x880a00008818},
		modelTuple{type64: 0x2700000027, matchRI: 0x08dc, match64: 0x00000000, model64: 0x881800008827},
		modelTuple{type64: 0x2700000027, matchRI: 0x08dd, match64: 0x00000000, model64: 0x882700008839},
		modelTuple{type64: 0x2700000027, matchRI: 0x08de, match64: 0x00000000, model64: 0x883900008848},
		modelTuple{type64: 0x2700000027, matchRI: 0x08df, match64: 0x00000000, model64: 0x884800008857},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e0, match64: 0x00000000, model64: 0x885700008863},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e1, match64: 0x00000000, model64: 0x886300008872},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e2, match64: 0x00000000, model64: 0x887200008883},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e3, match64: 0x00000000, model64: 0x888300008894},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e4, match64: 0x00000000, model64: 0x8894000088aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e5, match64: 0x00000000, model64: 0x88aa000088b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e6, match64: 0x00000000, model64: 0x88b9000088c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e7, match64: 0x00000000, model64: 0x88c8000088d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e8, match64: 0x00000000, model64: 0x88d1000088df},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e9, match64: 0x00000000, model64: 0x88df000088f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ea, match64: 0x00000000, model64: 0x88f200008905},
		modelTuple{type64: 0x2700000027, matchRI: 0x08eb, match64: 0x00000000, model64: 0x890500008914},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ec, match64: 0x00000000, model64: 0x891400008936},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ed, match64: 0x00000000, model64: 0x893600008950},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ee, match64: 0x00000000, model64: 0x89500000895e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ef, match64: 0x00000000, model64: 0x895e0000896d},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f0, match64: 0x00000000, model64: 0x896d00008972},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f2, match64: 0x00000000, model64: 0x89720000897c},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f3, match64: 0x00000000, model64: 0x897c00008987},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f4, match64: 0x00000000, model64: 0x898700008992},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f5, match64: 0x00000000, model64: 0x89920000899b},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f6, match64: 0x00000000, model64: 0x899b000089ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f7, match64: 0x00000000, model64: 0x89ad000089b7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x08f8, match64: 0x00000000, model64: 0x89b7000089c4},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x89c4000089ce, model64: 0x89ce000089e1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x08f9, match64: 0x00000000, model64: 0x89e1000089ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x08fc, match64: 0x00000000, model64: 0x89f6000089fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x08fd, match64: 0x00000000, model64: 0x89fe00008a02},
		modelTuple{type64: 0x2700000027, matchRI: 0x08fe, match64: 0x00000000, model64: 0x8a0200008a0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ff, match64: 0x00000000, model64: 0x8a0e00008a16},
		modelTuple{type64: 0x2700000027, matchRI: 0x0900, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8a3300008a39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8a3f00008a47, model64: 0x8a4700008a50},
		modelTuple{type64: 0x2700000027, matchRI: 0x0904, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8a5000008a59, model64: 0x49b7000049b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8a5900008a63, model64: 0x8a6300008a6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8a6d00008a72, model64: 0x8a7200008a76},
		modelTuple{type64: 0x2700000027, matchRI: 0x0905, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0907, match64: 0x00000000, model64: 0x8a7d00008a86},
		modelTuple{type64: 0x2700000027, matchRI: 0x0908, match64: 0x00000000, model64: 0x8a8600008a8c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8a9200008a97},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x090c, match64: 0x00000000, model64: 0x8aa200008ab3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ab300008ac5, model64: 0x8ac500008ad7},
		modelTuple{type64: 0x2700000027, matchRI: 0x090d, match64: 0x00000000, model64: 0x8ad700008ae9},
		modelTuple{type64: 0x2700000027, matchRI: 0x090e, match64: 0x00000000, model64: 0x8ae900008af5},
		modelTuple{type64: 0x2700000027, matchRI: 0x090f, match64: 0x00000000, model64: 0x8af500008b09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8b0900008b1a, model64: 0x8b0900008b1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8b1a00008b2f, model64: 0x8b1a00008b2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0910, match64: 0x00000000, model64: 0x8b2f00008b3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0911, match64: 0x00000000, model64: 0x8b3c00008b4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0912, match64: 0x00000000, model64: 0x8b4e00008b60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8b6000008b65, model64: 0x8b6000008b65},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0913, match64: 0x00000000, model64: 0x8b6500008b6b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8b7300008b77},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8b7d00008b86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8b8900008b90, model64: 0x8b9000008b93},
		modelTuple{type64: 0x2700000027, matchRI: 0x0917, match64: 0x00000000, model64: 0x8b9300008b9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8b9c00008ba0, model64: 0x8b9c00008ba0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0918, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0919, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x091b, match64: 0x00000000, model64: 0x8ba800008bb2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x091c, match64: 0x00000000, model64: 0x8bb200008bbd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x091d, match64: 0x00000000, model64: 0x59690000596e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8bbd00008bc3, model64: 0x8bc300008bcf},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8bcf00008bd7, model64: 0x8bd700008be0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x091e, match64: 0x00000000, model64: 0x8be000008beb},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8beb00008bfc, model64: 0x8bfc00008c0d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x091f, match64: 0x00000000, model64: 0x8c0d00008c20},
		modelTuple{type64: 0x2700000027, matchRI: 0x0920, match64: 0x00000000, model64: 0x8c2000008c34},
		modelTuple{type64: 0x2700000027, matchRI: 0x0921, match64: 0x00000000, model64: 0x8c3400008c49},
		modelTuple{type64: 0x2700000027, matchRI: 0x0922, match64: 0x00000000, model64: 0x8c4900008c5b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c5b00008c6b, model64: 0x8c6b00008c7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0923, match64: 0x00000000, model64: 0x8c7a00008c89},
		modelTuple{type64: 0x2700000027, matchRI: 0x0924, match64: 0x00000000, model64: 0x8c8900008c96},
		modelTuple{type64: 0x2700000027, matchRI: 0x0925, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x8c9600008ca2, model64: 0x8ca200008cae},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0926, match64: 0x00000000, model64: 0x8cae00008cb6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0927, match64: 0x00000000, model64: 0xd0000000d06},
		modelTuple{type64: 0x2700000027, matchRI: 0x0928, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0929, match64: 0x00000000, model64: 0xd0000000d06},
		modelTuple{type64: 0x2700000027, matchRI: 0x092a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x092b, match64: 0x00000000, model64: 0xd0000000d06},
		modelTuple{type64: 0x2700000027, matchRI: 0x092c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x092d, match64: 0x00000000, model64: 0x8cb600008cbe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8cc500008ccc, model64: 0x8ccc00008ccf},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x8ccf00008cd7, model64: 0x8ccf00008cd7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8cf800008d01, model64: 0x8d0100008d07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d0700008d0e, model64: 0x8d0e00008d13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d1300008d1c, model64: 0x8d1c00008d22},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0934, match64: 0x00000000, model64: 0x8d3200008d3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0935, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0936, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8d4600008d4d, model64: 0x8d4d00008d56},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d8d00008d96, model64: 0x8d8d00008d96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d9600008d9a, model64: 0x8d9a00008d9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d9f00008da3, model64: 0x8da300008da8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8da800008dac, model64: 0x8dac00008db6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8db600008dba, model64: 0x8dba00008dbf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8dbf00008dc3, model64: 0x8dc300008dcd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8dcd00008dd1, model64: 0x8dd100008dda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8dda00008dde, model64: 0x8dde00008de3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8de300008de7, model64: 0x8de700008df0},
		modelTuple{type64: 0x2700000027, matchRI: 0x093c, match64: 0x00000000, model64: 0x8df000008df6},
		modelTuple{type64: 0x2700000027, matchRI: 0x093d, match64: 0x00000000, model64: 0x8df600008dfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x093e, match64: 0x00000000, model64: 0x8dfa00008dff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8dff00008e05, model64: 0x8e0500008e0c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8e0c00008e10, model64: 0x8e1000008e17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8e1700008e1f, model64: 0x8e1700008e1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8e1f00008e28, model64: 0x8e1f00008e28},
		modelTuple{type64: 0x2700000027, matchRI: 0x093f, match64: 0x00000000, model64: 0x8e2800008e34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8e3400008e45, model64: 0x8e3400008e45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8e4500008e54, model64: 0x8e4500008e54},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8e5400008e66, model64: 0x8e6600008e75},
		modelTuple{type64: 0x2700000027, matchRI: 0x0940, match64: 0x00000000, model64: 0x4b1200004b1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0941, match64: 0x00000000, model64: 0x8e7500008e7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8e7c00008e8d, model64: 0x8e8d00008e8f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0942, match64: 0x00000000, model64: 0x693b00006943},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53ff00005401, model64: 0x53ff00005401},
		modelTuple{type64: 0x2700000027, matchRI: 0x0945, match64: 0x00000000, model64: 0x8e9c00008ea0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0946, match64: 0x00000000, model64: 0x8ea000008ea5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x094a, match64: 0x00000000, model64: 0x8eb400008ebe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ebe00008ec3, model64: 0x8ebe00008ec3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ec300008ecf, model64: 0x8ecf00008ed6},
		modelTuple{type64: 0x2700000027, matchRI: 0x094b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8ed600008ee1, model64: 0x8ee100008eec},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8eec00008ef7, model64: 0x8ef700008efe},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8efe00008f08, model64: 0x8f0800008f13},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8f1300008f1c, model64: 0x8f1c00008f26},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8f2600008f33, model64: 0x8f3300008f3c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8f3c00008f46, model64: 0x8f4600008f4c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8f4c00008f51, model64: 0x8f5100008f58},
		modelTuple{type64: 0x20d00000213, matchRI: 0x094c, match64: 0x00000000, model64: 0x8f5800008f64},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8f6400008f6a, model64: 0x8f6a00008f71},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8f7100008f79, model64: 0x8f7900008f80},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8f8000008f8a, model64: 0x8f8a00008f94},
		modelTuple{type64: 0x20d00000213, matchRI: 0x094d, match64: 0x00000000, model64: 0x8f9400008f9d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8f9d00008fa4, model64: 0x8fa400008fb5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8fb500008fbc, model64: 0x8fbc00008fc6},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8fc600008fcc, model64: 0x8fcc00008fd3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x094e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x094f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0952, match64: 0x00000000, model64: 0x8fdd00008fe0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8fe800008fef, model64: 0x8fef00008ffd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0954, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0955, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0956, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ffd00009006, model64: 0x900600009016},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0958, match64: 0x00000000, model64: 0x901d00009029},
		modelTuple{type64: 0x2700000027, matchRI: 0x0959, match64: 0x00000000, model64: 0x902900009031},
		modelTuple{type64: 0x2700000027, matchRI: 0x095a, match64: 0x00000000, model64: 0x903100009035},
		modelTuple{type64: 0x2700000027, matchRI: 0x095b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90350000903b, model64: 0x903b00009041},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x904100009047, model64: 0x904700009049},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x904900009055, model64: 0x905500009058},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90580000905e, model64: 0x905e00009065},
		modelTuple{type64: 0x2700000027, matchRI: 0x095c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x095d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x095f, match64: 0x00000000, model64: 0x90690000906c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0960, match64: 0x00000000, model64: 0x704600007049},
		modelTuple{type64: 0x2700000027, matchRI: 0x0961, match64: 0x00000000, model64: 0x906c00009072},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x907200009079, model64: 0x90790000907b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0962, match64: 0x00000000, model64: 0x405c00004062},
		modelTuple{type64: 0x2700000027, matchRI: 0x0964, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0965, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0966, match64: 0x00000000, model64: 0x90810000908c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0967, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x90920000909a, model64: 0x909a000090a5},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0969, match64: 0x00000000, model64: 0x90a5000090aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90aa000090b1, model64: 0x90b1000090b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90b4000090bb, model64: 0x90bb000090be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90be000090c5, model64: 0x90c5000090cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x096a, match64: 0x00000000, model64: 0x90cc000090d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90d3000090dc, model64: 0x90dc000090e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90e2000090eb, model64: 0x90eb000090ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90ed000090f3, model64: 0x90f3000090f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90f5000090fc, model64: 0x90fc00009102},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91020000910a, model64: 0x910a0000910d},
		modelTuple{type64: 0x2700000027, matchRI: 0x096b, match64: 0x00000000, model64: 0x910d00009111},
		modelTuple{type64: 0x2700000027, matchRI: 0x096c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x096d, match64: 0x00000000, model64: 0x911100009119},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x911900009120, model64: 0x911900009120},
		modelTuple{type64: 0x2700000027, matchRI: 0x096e, match64: 0x00000000, model64: 0x912000009128},
		modelTuple{type64: 0x2700000027, matchRI: 0x096f, match64: 0x00000000, model64: 0x91280000912b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x912b00009132, model64: 0x912b00009132},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91320000913e, model64: 0x913e0000914a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x914a00009150, model64: 0x914a00009150},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x915000009156, model64: 0x915000009156},
		modelTuple{type64: 0x2700000027, matchRI: 0x0970, match64: 0x00000000, model64: 0x432900004330},
		modelTuple{type64: 0x2700000027, matchRI: 0x0971, match64: 0x00000000, model64: 0x91560000915f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x915f00009166, model64: 0x91660000916d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0972, match64: 0x00000000, model64: 0x916d00009174},
		modelTuple{type64: 0x2700000027, matchRI: 0x0973, match64: 0x00000000, model64: 0x91740000917b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0974, match64: 0x00000000, model64: 0x917b00009181},
		modelTuple{type64: 0x2700000027, matchRI: 0x0975, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0976, match64: 0x00000000, model64: 0x918100009189},
		modelTuple{type64: 0x2700000027, matchRI: 0x0977, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0978, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0979, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x097a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x097c, match64: 0x00000000, model64: 0x918f00009191},
		modelTuple{type64: 0x2700000027, matchRI: 0x097d, match64: 0x00000000, model64: 0x919100009198},
		modelTuple{type64: 0x2700000027, matchRI: 0x097e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x91a0000091a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91af000091bb, model64: 0x91af000091bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91bb000091c7, model64: 0x91c7000091d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91d3000091dd, model64: 0x91dd000091e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91e7000091ee, model64: 0x91ee000091f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0981, match64: 0x00000000, model64: 0x91f5000091f9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x920c0000920e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x921800009221, model64: 0x92210000922a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x922a00009231, model64: 0x923100009239},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x923900009240, model64: 0x916d00009174},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x924000009249, model64: 0x924900009254},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x925e00009269, model64: 0x925e00009269},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x92690000926e, model64: 0x92690000926e},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0984, match64: 0x00000000, model64: 0x926e00009275},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92750000927d, model64: 0x927d00009285},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92850000928e, model64: 0x928e00009297},
		modelTuple{type64: 0x2700000027, matchRI: 0x0986, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0987, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0989, match64: 0x00000000, model64: 0x929f000092a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x098a, match64: 0x00000000, model64: 0x5e6400005e66},
		modelTuple{type64: 0x2700000027, matchRI: 0x098b, match64: 0x00000000, model64: 0x92a2000092a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x098c, match64: 0x00000000, model64: 0x92a5000092a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x098d, match64: 0x00000000, model64: 0x92a8000092aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x098e, match64: 0x00000000, model64: 0x92aa000092ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x098f, match64: 0x00000000, model64: 0x92ac000092ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0990, match64: 0x00000000, model64: 0x92ae000092b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0991, match64: 0x00000000, model64: 0x92b5000092b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0992, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0993, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92bd000092c2, model64: 0x92bd000092c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92c2000092ce, model64: 0x92c2000092ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92ce000092e0, model64: 0x92e0000092e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0995, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0996, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0997, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x92e7000092f4, model64: 0x92f4000092fc},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x92fc00009307, model64: 0x92fc00009307},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0998, match64: 0x00000000, model64: 0x93070000930f},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0999, match64: 0x00000000, model64: 0x930f00009319},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x931900009326, model64: 0x93260000933a},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x930f00009319, model64: 0x933a0000934b},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x934b00009353, model64: 0x934b00009353},
		modelTuple{type64: 0x2700000027, matchRI: 0x099a, match64: 0x00000000, model64: 0x935300009358},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x935800009360, model64: 0x935800009360},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x936000009368, model64: 0x93680000936f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x936f00009379, model64: 0x936f00009379},
		modelTuple{type64: 0x2700000027, matchRI: 0x099b, match64: 0x00000000, model64: 0x937900009383},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x93830000938e, model64: 0x93830000938e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x938e00009398, model64: 0x938e00009398},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x93980000939f, model64: 0x939f000093a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x93a8000093b7, model64: 0x93b7000093bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x099c, match64: 0x00000000, model64: 0x93bf000093cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x099d, match64: 0x00000000, model64: 0x93cc000093d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x93d5000093da, model64: 0x93da000093e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x93e1000093eb, model64: 0x937900009383},
		modelTuple{type64: 0x2700000027, matchRI: 0x099e, match64: 0x00000000, model64: 0x93eb000093f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x099f, match64: 0x00000000, model64: 0x93f7000093ff},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x93ff00009404, model64: 0x93ff00009404},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x94040000940b, model64: 0x94040000940b},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x940b00009417, model64: 0x940b00009417},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x941700009420, model64: 0x941700009420},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x942000009425, model64: 0x942000009425},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x942500009431, model64: 0x942500009431},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a1, match64: 0x00000000, model64: 0x943900009440},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a2, match64: 0x00000000, model64: 0x944000009442},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a3, match64: 0x00000000, model64: 0x944200009445},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a4, match64: 0x00000000, model64: 0x94450000944d},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a5, match64: 0x00000000, model64: 0x944d0000944f},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a6, match64: 0x00000000, model64: 0x944f00009456},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a7, match64: 0x00000000, model64: 0x94560000945d},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a8, match64: 0x00000000, model64: 0xa7900000a7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09aa, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x786200007868, model64: 0x786200007868},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ad, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x948000009487},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94950000949b, model64: 0x949b000094a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94a3000094a9, model64: 0x94a9000094b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94bd000094c5, model64: 0x94c5000094ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b4, match64: 0x00000000, model64: 0x94d2000094de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94e4000094ec, model64: 0x94ec000094f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b6, match64: 0x00000000, model64: 0x94f4000094f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x09bc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09bd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09be, match64: 0x00000000, model64: 0x951000009513},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95130000951b, model64: 0x951b0000952d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x952d00009537, model64: 0x953700009545},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95450000954d, model64: 0x954d0000955f},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c0, match64: 0x00000000, model64: 0x95630000956e},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c1, match64: 0x00000000, model64: 0x956e00009578},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c2, match64: 0x00000000, model64: 0x957800009580},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c3, match64: 0x00000000, model64: 0x958000009588},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c7, match64: 0x00000000, model64: 0x95940000959c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c9, match64: 0x00000000, model64: 0x959f000095a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ca, match64: 0x00000000, model64: 0x95a7000095ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cb, match64: 0x00000000, model64: 0x95ad000095b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cc, match64: 0x00000000, model64: 0x3670000036a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95c2000095c9, model64: 0x95c9000095d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d1, match64: 0x00000000, model64: 0x95d4000095da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95df000095ed, model64: 0x95ed000095fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d3, match64: 0x00000000, model64: 0x95fb00009606},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d7, match64: 0x00000000, model64: 0x961700009626},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x96280000963c, model64: 0x963c0000964c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x964c00009656, model64: 0x96560000965d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x09d9, match64: 0x00000000, model64: 0x965d00009665},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x96650000966d, model64: 0x96650000966d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x966d0000967a, model64: 0x967a00009689},
		modelTuple{type64: 0x20d00000213, matchRI: 0x09da, match64: 0x00000000, model64: 0x968900009692},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x9692000096a0, model64: 0x96a0000096ab},
		modelTuple{type64: 0x20d00000213, matchRI: 0x09db, match64: 0x00000000, model64: 0x965d00009665},
		modelTuple{type64: 0x20d00000213, matchRI: 0x09dc, match64: 0x00000000, model64: 0x965d00009665},
		modelTuple{type64: 0x20d00000213, matchRI: 0x09dd, match64: 0x00000000, model64: 0x96ab000096b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x09de, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09df, match64: 0x00000000, model64: 0x96b3000096ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e0, match64: 0x00000000, model64: 0x96ba000096be},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x09e1, match64: 0x00000000, model64: 0x96be000096c8},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x09e2, match64: 0x00000000, model64: 0x692800006935},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x96c8000096db, model64: 0x96db000096eb},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x96eb00009701, model64: 0x96eb00009701},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e4, match64: 0x00000000, model64: 0x97040000970b},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e5, match64: 0x00000000, model64: 0x970b00009711},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e6, match64: 0x00000000, model64: 0x97040000970b},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e7, match64: 0x00000000, model64: 0x971100009719},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e8, match64: 0x00000000, model64: 0x971900009721},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e9, match64: 0x00000000, model64: 0x972100009729},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ea, match64: 0x00000000, model64: 0x972900009731},
		modelTuple{type64: 0x2700000027, matchRI: 0x09eb, match64: 0x00000000, model64: 0x973100009737},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ec, match64: 0x00000000, model64: 0x97370000973d},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ed, match64: 0x00000000, model64: 0x973d00009743},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ee, match64: 0x00000000, model64: 0x974300009746},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ef, match64: 0x00000000, model64: 0x974600009749},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f0, match64: 0x00000000, model64: 0x97490000974e},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f1, match64: 0x00000000, model64: 0x974e00009756},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f2, match64: 0x00000000, model64: 0x975600009760},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f3, match64: 0x00000000, model64: 0x976000009766},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f4, match64: 0x00000000, model64: 0x97660000976d},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f5, match64: 0x00000000, model64: 0x976d0000976e},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f6, match64: 0x00000000, model64: 0x976e00009773},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f7, match64: 0x00000000, model64: 0x97730000977e},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f8, match64: 0x00000000, model64: 0x977e00009789},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9789000097a4, model64: 0x97a4000097bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f9, match64: 0x00000000, model64: 0x97bf000097ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fa, match64: 0x00000000, model64: 0x97ca000097d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fb, match64: 0x00000000, model64: 0x97d0000097df},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fc, match64: 0x00000000, model64: 0x97df000097f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fd, match64: 0x00000000, model64: 0x97f1000097f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fe, match64: 0x00000000, model64: 0x97f7000097fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ff, match64: 0x00000000, model64: 0x97fd00009807},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a00, match64: 0x00000000, model64: 0x98070000980d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a01, match64: 0x00000000, model64: 0x980d00009813},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a02, match64: 0x00000000, model64: 0x98130000981e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a03, match64: 0x00000000, model64: 0x981e00009824},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a04, match64: 0x00000000, model64: 0x98240000982d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a05, match64: 0x00000000, model64: 0x982d00009833},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a06, match64: 0x00000000, model64: 0x983300009839},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x983900009840, model64: 0x984000009850},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x98500000985a, model64: 0x985a00009863},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x98630000986b, model64: 0x986b00009876},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x987600009880, model64: 0x988000009892},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x98920000989a, model64: 0x74ec000074f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x989a000098a2, model64: 0x98a2000098a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x98a5000098aa, model64: 0x74af000074b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a07, match64: 0x00000000, model64: 0x350100003503},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a08, match64: 0x00000000, model64: 0x98aa000098b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a09, match64: 0x00000000, model64: 0x98b3000098be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0a, match64: 0x00000000, model64: 0x98be000098c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0b, match64: 0x00000000, model64: 0x98c8000098d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0c, match64: 0x00000000, model64: 0x98d2000098dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0d, match64: 0x00000000, model64: 0x98dc000098e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0e, match64: 0x00000000, model64: 0x98e6000098f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0f, match64: 0x00000000, model64: 0x98f1000098fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a10, match64: 0x00000000, model64: 0x98fb00009905},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a11, match64: 0x00000000, model64: 0x99050000990f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a12, match64: 0x00000000, model64: 0x990f00009919},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a13, match64: 0x00000000, model64: 0x991900009923},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a14, match64: 0x00000000, model64: 0x99230000992d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a15, match64: 0x00000000, model64: 0x992d00009937},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a16, match64: 0x00000000, model64: 0x99370000994b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a17, match64: 0x00000000, model64: 0x994b00009953},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a18, match64: 0x00000000, model64: 0x995300009957},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a19, match64: 0x00000000, model64: 0x995700009968},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1a, match64: 0x00000000, model64: 0x996800009975},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1b, match64: 0x00000000, model64: 0x99750000997b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1c, match64: 0x00000000, model64: 0x997b0000998b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1d, match64: 0x00000000, model64: 0x998b00009998},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1e, match64: 0x00000000, model64: 0x9998000099ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99ac000099b4, model64: 0x99b4000099b7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a1f, match64: 0x00000000, model64: 0x99b7000099bc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a20, match64: 0x00000000, model64: 0x99bc000099c1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a21, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a22, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a23, match64: 0x00000000, model64: 0x99c1000099c9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0a24, match64: 0x00000000, model64: 0x99c9000099d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a25, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a26, match64: 0x00000000, model64: 0x99d0000099db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a27, match64: 0x00000000, model64: 0x99d0000099db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a28, match64: 0x00000000, model64: 0x99db000099eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a29, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2e, match64: 0x00000000, model64: 0x59690000596e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a30, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a31, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a32, match64: 0x00000000, model64: 0x350100003503},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a34, match64: 0x00000000, model64: 0x99f1000099f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a35, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99fa00009a05, model64: 0x9a0500009a16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a1600009a1d, model64: 0x9a1d00009a2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a2a00009a34, model64: 0x9a3400009a36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a3600009a3d, model64: 0x9a3600009a3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a37, match64: 0x00000000, model64: 0x9a3d00009a49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a4900009a53, model64: 0x5d0e00005d10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a5300009a5d, model64: 0x5d3f00005d41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a5d00009a67, model64: 0x9a6700009a6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a6a00009a74, model64: 0x9a7400009a78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a7800009a82, model64: 0x9a8200009a85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a8500009a8f, model64: 0x9a8f00009a92},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a38, match64: 0x00000000, model64: 0x9a9200009a94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a9400009aa3, model64: 0x9aa300009aae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a39, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3b, match64: 0x00000000, model64: 0x90690000906c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a3c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a3d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x9aae00009abd, model64: 0x70d1000070de},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x9abd00009ac5, model64: 0x9ac500009acf},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x9acf00009ae5, model64: 0x9ae500009af5},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x9af500009b06, model64: 0x9af500009b06},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a40, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x0a41, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a42, match64: 0x00000000, model64: 0x9b0c00009b14},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a44, match64: 0x00000000, model64: 0x9b1a00009b26},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a46, match64: 0x00000000, model64: 0x9b2c00009b38},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a47, match64: 0x00000000, model64: 0x9b3800009b45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a48, match64: 0x00000000, model64: 0x9b4500009b51},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a49, match64: 0x00000000, model64: 0x9b5100009b60},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4a, match64: 0x00000000, model64: 0x73840000738d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4b, match64: 0x00000000, model64: 0x84150000841b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b6000009b6e, model64: 0x9b6e00009b75},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4c, match64: 0x00000000, model64: 0x9b7500009b7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4d, match64: 0x00000000, model64: 0x9b7a00009b81},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4e, match64: 0x00000000, model64: 0x9b8100009b85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4f, match64: 0x00000000, model64: 0x9b8500009b8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a50, match64: 0x00000000, model64: 0x9b8d00009b93},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a51, match64: 0x00000000, model64: 0x9b9300009b9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a52, match64: 0x00000000, model64: 0x9b9b00009ba7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ba700009bb6, model64: 0x9bb600009bbe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9bbe00009bcf, model64: 0x9bcf00009bda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9bda00009be8, model64: 0x9be800009bef},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0a54, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a55, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a57, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a58, match64: 0x00000000, model64: 0x9c0000009c0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c0b00009c12, model64: 0x9c0b00009c12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c1200009c18, model64: 0x9c1200009c18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c1800009c20, model64: 0x9c1800009c20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c2000009c28, model64: 0x9c2000009c28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c2800009c2d, model64: 0x9c2d00009c36},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9c4000009c49},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9c6a00009c70},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9c7d00009c7f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a64, match64: 0x00000000, model64: 0x9c8700009c8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a65, match64: 0x00000000, model64: 0x4a9700004a9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a66, match64: 0x00000000, model64: 0x9c8f00009c97},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a67, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x9c9700009ca6, model64: 0x9ca600009cb4},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0a68, match64: 0x00000000, model64: 0x9cb400009cbb},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0a69, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9cc200009cca, model64: 0x9cca00009cce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9cce00009cd7, model64: 0x9cd700009cdc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9cdc00009ce5, model64: 0x9ce500009ce6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ce600009cee, model64: 0x350100003503},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9cee00009cf6, model64: 0x9cf600009cfc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9d0400009d0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6c, match64: 0x00000000, model64: 0x9d1400009d1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9d2500009d29, model64: 0x9d2900009d2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a71, match64: 0x00000000, model64: 0x9d3300009d3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a72, match64: 0x00000000, model64: 0x9d3c00009d43},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a76, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a77, match64: 0x00000000, model64: 0x9d5900009d67},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a78, match64: 0x00000000, model64: 0x9d6700009d7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a79, match64: 0x00000000, model64: 0x9d7a00009d8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7a, match64: 0x00000000, model64: 0x9d8a00009d98},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7b, match64: 0x00000000, model64: 0x9d9800009da6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7c, match64: 0x00000000, model64: 0x9da600009db0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7d, match64: 0x00000000, model64: 0x9db000009db5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7e, match64: 0x00000000, model64: 0x9db500009dbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7f, match64: 0x00000000, model64: 0x9dbc00009dc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a80, match64: 0x00000000, model64: 0x9dc700009dce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a81, match64: 0x00000000, model64: 0x9dce00009dd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a82, match64: 0x00000000, model64: 0x9dd600009dda},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a83, match64: 0x00000000, model64: 0x9dda00009ddd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a84, match64: 0x00000000, model64: 0x9ddd00009de7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a85, match64: 0x00000000, model64: 0x9de700009df1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a86, match64: 0x00000000, model64: 0x9df100009df7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a87, match64: 0x00000000, model64: 0x9df700009e00},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a88, match64: 0x00000000, model64: 0x9e0000009e05},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a89, match64: 0x00000000, model64: 0x9e0500009e10},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8a, match64: 0x00000000, model64: 0x9e1000009e17},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8b, match64: 0x00000000, model64: 0x9e1700009e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8c, match64: 0x00000000, model64: 0x9e2500009e2f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9e2f00009e38, model64: 0x9e2f00009e38},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8d, match64: 0x00000000, model64: 0x9e3800009e3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8e, match64: 0x00000000, model64: 0x9e3f00009e49},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8f, match64: 0x00000000, model64: 0x9e4900009e53},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a90, match64: 0x00000000, model64: 0x9e5300009e61},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a91, match64: 0x00000000, model64: 0x9e6100009e68},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a92, match64: 0x00000000, model64: 0x9e6800009e74},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a93, match64: 0x00000000, model64: 0x9e7400009e79},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a94, match64: 0x00000000, model64: 0x9e7900009e80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a95, match64: 0x00000000, model64: 0x9e8000009e86},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a96, match64: 0x00000000, model64: 0x9e8600009e8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a97, match64: 0x00000000, model64: 0x9e8d00009e95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9e9500009e9c, model64: 0x9e9500009e9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a98, match64: 0x00000000, model64: 0x9e9c00009ea6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a99, match64: 0x00000000, model64: 0x861200008617},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9a, match64: 0x00000000, model64: 0x9ea600009eb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9b, match64: 0x00000000, model64: 0x9eb300009ebb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ebb00009ec4, model64: 0x9ec400009ecd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ecd00009ed4, model64: 0x9ecd00009ed4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9d, match64: 0x00000000, model64: 0x9edd00009ee2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9e, match64: 0x00000000, model64: 0x84a3000084aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x9ee900009ef0, model64: 0x9ef000009ef6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0aa1, match64: 0x00000000, model64: 0x9ef600009ef9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0aa2, match64: 0x00000000, model64: 0x9ef900009f03},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x9f0300009f08, model64: 0x9f0800009f0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f0e00009f16, model64: 0x154c0000154e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f1600009f1e, model64: 0x9f1e00009f27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f2700009f2f, model64: 0x9f2f00009f31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f3100009f39, model64: 0x9f3900009f3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f3c00009f43, model64: 0x156300001565},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f4300009f4b, model64: 0x3ce000003d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f4b00009f58, model64: 0x9f5800009f67},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa3, match64: 0x00000000, model64: 0x9f6700009f6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f6b00009f79, model64: 0x9f7900009f87},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa4, match64: 0x00000000, model64: 0x9f8700009f8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f8c00009f94, model64: 0x9f9400009f9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f9a00009f9f, model64: 0x9f9f00009fa1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9fa100009fa9, model64: 0x9fa900009fac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9fac00009fb2, model64: 0x9fb200009fc6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9fc600009fcb, model64: 0x9fcb00009fdf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9fdf00009fe3, model64: 0x9fe300009ff8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa5, match64: 0x00000000, model64: 0x9ff800009ffb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa6, match64: 0x00000000, model64: 0x9ffb00009ffe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa7, match64: 0x00000000, model64: 0x9ffe0000a001},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa8, match64: 0x00000000, model64: 0xa0010000a00c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa9, match64: 0x00000000, model64: 0xa00c0000a01b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aaa, match64: 0x00000000, model64: 0xa01b0000a026},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aab, match64: 0x00000000, model64: 0x4fda00004fe9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aac, match64: 0x00000000, model64: 0xa0260000a031},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aad, match64: 0x00000000, model64: 0xa0310000a038},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aae, match64: 0x00000000, model64: 0xa0380000a03c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aaf, match64: 0x00000000, model64: 0xa03c0000a03f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab0, match64: 0x00000000, model64: 0xa03f0000a042},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab1, match64: 0x00000000, model64: 0xa0420000a04a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab2, match64: 0x00000000, model64: 0xa04a0000a04d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab3, match64: 0x00000000, model64: 0xa04d0000a050},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0500000a058, model64: 0xa0580000a05b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa05b0000a06b, model64: 0xa06b0000a06e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa06e0000a076, model64: 0xa0760000a07c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab4, match64: 0x00000000, model64: 0xa07c0000a07f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab5, match64: 0x00000000, model64: 0xa07f0000a090},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0900000a098, model64: 0xa0980000a0a4},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0ab6, match64: 0x00000000, model64: 0xa0a40000a0a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab7, match64: 0x00000000, model64: 0xa0a70000a0af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab9, match64: 0x00000000, model64: 0xa0af0000a0b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aba, match64: 0x00000000, model64: 0xa0b10000a0b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abb, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abc, match64: 0x00000000, model64: 0xa0b50000a0c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abd, match64: 0x00000000, model64: 0xa0c60000a0d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abe, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0abf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xa0d50000a0ea, matchRI: 0x0ac0, match64: 0x00000000, model64: 0xa0ea0000a0ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac1, match64: 0x00000000, model64: 0xa0ef0000a0f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac2, match64: 0x00000000, model64: 0xa0f80000a101},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac3, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac4, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aca, match64: 0x00000000, model64: 0x47480000474e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0acb, match64: 0x00000000, model64: 0xa1160000a11a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0acc, match64: 0x00000000, model64: 0xa1160000a11a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ace, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0acf, match64: 0x00000000, model64: 0xa1220000a129},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad0, match64: 0x00000000, model64: 0xa1290000a13a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad1, match64: 0x00000000, model64: 0xa13a0000a13f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1450000a14c, model64: 0xa1450000a14c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa14c0000a150, model64: 0xa1500000a153},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad3, match64: 0x00000000, model64: 0xa1530000a15b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad4, match64: 0x00000000, model64: 0xa15b0000a15f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad7, match64: 0x00000000, model64: 0xa1680000a172},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xa1720000a177, model64: 0xa1770000a184},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x0ad8, match64: 0x00000000, model64: 0xa1840000a18e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ada, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0adb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0adc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0adf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1aa0000a1b1, model64: 0x8fd800008fdd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1b10000a1b5, model64: 0xa1b50000a1bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1bc0000a1c4, model64: 0xa1c40000a1cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae3, match64: 0x00000000, model64: 0xa1d10000a1df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae4, match64: 0x00000000, model64: 0xa1df0000a1e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae5, match64: 0x00000000, model64: 0xa1e40000a1f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae6, match64: 0x00000000, model64: 0xa1f10000a1fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae7, match64: 0x00000000, model64: 0x62cb000062d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae8, match64: 0x00000000, model64: 0xa1fa0000a206},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae9, match64: 0x00000000, model64: 0xa2060000a20e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aea, match64: 0x00000000, model64: 0xa20e0000a217},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aeb, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aec, match64: 0x00000000, model64: 0xa2170000a21a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aed, match64: 0x00000000, model64: 0xa21a0000a21d},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0xa21d0000a227, model64: 0xa21d0000a227},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xa2270000a231, model64: 0xa2310000a23b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aee, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa23b0000a245, model64: 0xa23b0000a245},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2450000a24b, model64: 0xa2450000a24b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af1, match64: 0x00000000, model64: 0xa24e0000a25e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af2, match64: 0x00000000, model64: 0xa25e0000a263},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af5, match64: 0x00000000, model64: 0xa2690000a26d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af9, match64: 0x00000000, model64: 0xa2780000a288},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afa, match64: 0x00000000, model64: 0xa2880000a297},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa29d0000a2a4, model64: 0xa2a40000a2b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2b10000a2b8, model64: 0xa2b80000a2c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2c00000a2c8, model64: 0xa2c80000a2d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2d40000a2dc, model64: 0xa2dc0000a2e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2e40000a2eb, model64: 0xa2eb0000a2f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2f60000a2fe, model64: 0xa2fe0000a30a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa30a0000a312, model64: 0xa3120000a31e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa31e0000a326, model64: 0xa3260000a337},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3370000a33f, model64: 0xa33f0000a34a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa34a0000a352, model64: 0xa3520000a35f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afc, match64: 0x00000000, model64: 0xa35f0000a361},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afd, match64: 0x00000000, model64: 0xa3610000a36a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afe, match64: 0x00000000, model64: 0xa36a0000a373},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aff, match64: 0x00000000, model64: 0xa3730000a37e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b00, match64: 0x00000000, model64: 0xa37e0000a389},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b01, match64: 0x00000000, model64: 0xa3890000a394},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b02, match64: 0x00000000, model64: 0xa3940000a39e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b03, match64: 0x00000000, model64: 0xa39e0000a3a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b04, match64: 0x00000000, model64: 0xa3a90000a3b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b05, match64: 0x00000000, model64: 0xa3b40000a3c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b06, match64: 0x00000000, model64: 0xa3c00000a3cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b07, match64: 0x00000000, model64: 0xa3cb0000a3d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b08, match64: 0x00000000, model64: 0xa3d40000a3dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b09, match64: 0x00000000, model64: 0xa3dd0000a3e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0a, match64: 0x00000000, model64: 0xa3e60000a3f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0b, match64: 0x00000000, model64: 0xa3f10000a3fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0c, match64: 0x00000000, model64: 0xa3fa0000a404},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0d, match64: 0x00000000, model64: 0xa4040000a40f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0e, match64: 0x00000000, model64: 0xa40f0000a41a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0f, match64: 0x00000000, model64: 0xa41a0000a425},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b10, match64: 0x00000000, model64: 0xa4250000a430},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b11, match64: 0x00000000, model64: 0xa4300000a438},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b12, match64: 0x00000000, model64: 0xa4380000a445},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b13, match64: 0x00000000, model64: 0xa4450000a44e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b14, match64: 0x00000000, model64: 0xa44e0000a457},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b15, match64: 0x00000000, model64: 0xa4570000a45f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa45f0000a467, model64: 0xa4670000a46f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa46f0000a477, model64: 0xa4770000a47f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa47f0000a487, model64: 0xa4870000a493},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4930000a49b, model64: 0xa49b0000a4a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b16, match64: 0x00000000, model64: 0xa4a40000a4a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b17, match64: 0x00000000, model64: 0xa4a70000a4ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b18, match64: 0x00000000, model64: 0xa4ae0000a4b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b19, match64: 0x00000000, model64: 0xa4b60000a4bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1a, match64: 0x00000000, model64: 0xa4bd0000a4c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1b, match64: 0x00000000, model64: 0xa4c50000a4d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1c, match64: 0x00000000, model64: 0xa4d10000a4d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1d, match64: 0x00000000, model64: 0xa4d80000a4e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1e, match64: 0x00000000, model64: 0xa4e40000a4ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1f, match64: 0x00000000, model64: 0xa4ec0000a4f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b20, match64: 0x00000000, model64: 0xa4f40000a500},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b21, match64: 0x00000000, model64: 0xa5000000a50a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b22, match64: 0x00000000, model64: 0xa50a0000a515},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b23, match64: 0x00000000, model64: 0xa5150000a525},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b24, match64: 0x00000000, model64: 0xa5250000a52e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b25, match64: 0x00000000, model64: 0xa52e0000a536},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b26, match64: 0x00000000, model64: 0xa5360000a539},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b27, match64: 0x00000000, model64: 0xa5390000a53f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b28, match64: 0x00000000, model64: 0xa53f0000a54a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b29, match64: 0x00000000, model64: 0xa54a0000a54e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2a, match64: 0x00000000, model64: 0xa54e0000a558},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2b, match64: 0x00000000, model64: 0xa5580000a55b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2c, match64: 0x00000000, model64: 0xa55b0000a565},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2d, match64: 0x00000000, model64: 0xa5650000a568},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2e, match64: 0x00000000, model64: 0xa5680000a56a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2f, match64: 0x00000000, model64: 0xa56a0000a571},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b30, match64: 0x00000000, model64: 0xa5710000a578},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b31, match64: 0x00000000, model64: 0xa5780000a57b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b32, match64: 0x00000000, model64: 0xa57b0000a582},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b33, match64: 0x00000000, model64: 0xa5820000a585},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b34, match64: 0x00000000, model64: 0xa5850000a589},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b35, match64: 0x00000000, model64: 0xa5890000a593},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b36, match64: 0x00000000, model64: 0xa5930000a598},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b37, match64: 0x00000000, model64: 0xa5980000a5a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b38, match64: 0x00000000, model64: 0xa5a00000a5ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b39, match64: 0x00000000, model64: 0xa5ad0000a5b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3a, match64: 0x00000000, model64: 0xa5b60000a5bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3b, match64: 0x00000000, model64: 0xa5bd0000a5c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3c, match64: 0x00000000, model64: 0xa5c50000a5d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3d, match64: 0x00000000, model64: 0xa5d20000a5db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3e, match64: 0x00000000, model64: 0xa5db0000a5e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3f, match64: 0x00000000, model64: 0xa5e70000a5f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b40, match64: 0x00000000, model64: 0xa5f00000a5fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b41, match64: 0x00000000, model64: 0xa5fc0000a60d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b42, match64: 0x00000000, model64: 0xa60d0000a616},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b43, match64: 0x00000000, model64: 0xa6160000a61f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b44, match64: 0x00000000, model64: 0xa61f0000a62c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b45, match64: 0x00000000, model64: 0xa62c0000a634},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b46, match64: 0x00000000, model64: 0xa6340000a63c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b47, match64: 0x00000000, model64: 0xa63c0000a649},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b48, match64: 0x00000000, model64: 0xa6490000a651},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6510000a658, model64: 0xa6580000a65f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b49, match64: 0x00000000, model64: 0xa65f0000a667},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4a, match64: 0x00000000, model64: 0xa6670000a66f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4b, match64: 0x00000000, model64: 0xa66f0000a67b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4c, match64: 0x00000000, model64: 0xa67b0000a687},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4d, match64: 0x00000000, model64: 0xa6870000a68f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4e, match64: 0x00000000, model64: 0xa68f0000a69b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4f, match64: 0x00000000, model64: 0xa69b0000a6a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b50, match64: 0x00000000, model64: 0xa6a30000a6ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b51, match64: 0x00000000, model64: 0xa6ab0000a6bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b52, match64: 0x00000000, model64: 0xa6bc0000a6c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b53, match64: 0x00000000, model64: 0xa6c40000a6cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b54, match64: 0x00000000, model64: 0xa6cf0000a6da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b55, match64: 0x00000000, model64: 0xa6da0000a6e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b56, match64: 0x00000000, model64: 0xa6e70000a6f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6f60000a6fe, model64: 0xa6fe0000a706},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7060000a70e, model64: 0xa70e0000a71c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa71c0000a724, model64: 0xa7240000a730},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b57, match64: 0x00000000, model64: 0xa7300000a737},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b58, match64: 0x00000000, model64: 0xa7370000a743},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b59, match64: 0x00000000, model64: 0xa7430000a74f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5a, match64: 0x00000000, model64: 0xa74f0000a757},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5b, match64: 0x00000000, model64: 0xa7570000a75f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5c, match64: 0x00000000, model64: 0xa75f0000a76b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5d, match64: 0x00000000, model64: 0xa76b0000a773},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5e, match64: 0x00000000, model64: 0xa7730000a77a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5f, match64: 0x00000000, model64: 0xa77a0000a786},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b60, match64: 0x00000000, model64: 0xa7860000a78e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b61, match64: 0x00000000, model64: 0xa78e0000a79a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b62, match64: 0x00000000, model64: 0xa79a0000a7a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b63, match64: 0x00000000, model64: 0xa7a20000a7aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b64, match64: 0x00000000, model64: 0xa7aa0000a7b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b65, match64: 0x00000000, model64: 0xa7b20000a7ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b66, match64: 0x00000000, model64: 0xa7ba0000a7c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b67, match64: 0x00000000, model64: 0xa7c10000a7cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b68, match64: 0x00000000, model64: 0xa7cd0000a7d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b69, match64: 0x00000000, model64: 0xa7d80000a7e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6a, match64: 0x00000000, model64: 0xa7e50000a7ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6b, match64: 0x00000000, model64: 0xa7ed0000a7f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6c, match64: 0x00000000, model64: 0xa7f90000a801},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6d, match64: 0x00000000, model64: 0xa8010000a809},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6e, match64: 0x00000000, model64: 0xa8090000a811},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6f, match64: 0x00000000, model64: 0xa8110000a81d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b70, match64: 0x00000000, model64: 0xa81d0000a824},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b71, match64: 0x00000000, model64: 0xa8240000a82c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b72, match64: 0x00000000, model64: 0xa82c0000a834},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b73, match64: 0x00000000, model64: 0xa8340000a840},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b74, match64: 0x00000000, model64: 0xa8400000a848},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b75, match64: 0x00000000, model64: 0xa8480000a850},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b76, match64: 0x00000000, model64: 0xa8500000a858},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b77, match64: 0x00000000, model64: 0xa8580000a864},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b78, match64: 0x00000000, model64: 0xa8640000a871},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b79, match64: 0x00000000, model64: 0xa8710000a87c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7a, match64: 0x00000000, model64: 0xa87c0000a887},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7b, match64: 0x00000000, model64: 0xa8870000a894},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8940000a89c, model64: 0xa89c0000a8a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8a90000a8b1, model64: 0xa8b10000a8c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8c20000a8ca, model64: 0xa8ca0000a8dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7c, match64: 0x00000000, model64: 0xa8dc0000a8ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8ed0000a8f5, model64: 0xa8f50000a902},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9020000a90a, model64: 0xa90a0000a91c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa91c0000a923, model64: 0xa9230000a935},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9350000a93c, model64: 0xa93c0000a94e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa94e0000a956, model64: 0xa9560000a963},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7d, match64: 0x00000000, model64: 0xa9630000a974},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9740000a97c, model64: 0xa97c0000a992},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7e, match64: 0x00000000, model64: 0xa9920000a99f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7f, match64: 0x00000000, model64: 0xa99f0000a9ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b80, match64: 0x00000000, model64: 0xa9ab0000a9b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b81, match64: 0x00000000, model64: 0xa9b90000a9c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b82, match64: 0x00000000, model64: 0xa9c60000a9d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b83, match64: 0x00000000, model64: 0xa9d20000a9de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b84, match64: 0x00000000, model64: 0xa9de0000a9ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b85, match64: 0x00000000, model64: 0xa9ec0000a9f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b86, match64: 0x00000000, model64: 0xa9f60000aa02},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b87, match64: 0x00000000, model64: 0xaa020000aa14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaa140000aa1c, model64: 0xaa1c0000aa29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaa290000aa31, model64: 0xaa310000aa3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b88, match64: 0x00000000, model64: 0xaa3e0000aa4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b89, match64: 0x00000000, model64: 0xaa4b0000aa53},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8a, match64: 0x00000000, model64: 0xaa530000aa5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8b, match64: 0x00000000, model64: 0xaa5f0000aa6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8c, match64: 0x00000000, model64: 0xaa6c0000aa7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8d, match64: 0x00000000, model64: 0xaa7c0000aa89},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8e, match64: 0x00000000, model64: 0xaa890000aa9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8f, match64: 0x00000000, model64: 0xaa9b0000aaa4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b90, match64: 0x00000000, model64: 0xaaa40000aab1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaab10000aab9, model64: 0xaab90000aace},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b91, match64: 0x00000000, model64: 0xaace0000aadf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b92, match64: 0x00000000, model64: 0xaadf0000aaec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b93, match64: 0x00000000, model64: 0xaaec0000aaf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b94, match64: 0x00000000, model64: 0xaaf80000ab04},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b95, match64: 0x00000000, model64: 0xab040000ab10},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b96, match64: 0x00000000, model64: 0xab100000ab1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b97, match64: 0x00000000, model64: 0xab1d0000ab2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b98, match64: 0x00000000, model64: 0xab2e0000ab3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b99, match64: 0x00000000, model64: 0xab3b0000ab48},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9a, match64: 0x00000000, model64: 0xab480000ab51},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9b, match64: 0x00000000, model64: 0xab510000ab5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9c, match64: 0x00000000, model64: 0xab5a0000ab63},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9d, match64: 0x00000000, model64: 0xab630000ab6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9e, match64: 0x00000000, model64: 0xab6b0000ab73},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9f, match64: 0x00000000, model64: 0xab730000ab80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba0, match64: 0x00000000, model64: 0xab800000ab8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba1, match64: 0x00000000, model64: 0xab8d0000ab9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xab9a0000aba1, model64: 0xab8d0000ab9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba2, match64: 0x00000000, model64: 0xaba10000abae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba3, match64: 0x00000000, model64: 0xabae0000abbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba4, match64: 0x00000000, model64: 0xabbf0000abc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba5, match64: 0x00000000, model64: 0xabc70000abda},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba6, match64: 0x00000000, model64: 0xabda0000abe2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba7, match64: 0x00000000, model64: 0xabe20000abeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba8, match64: 0x00000000, model64: 0xabeb0000abf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba9, match64: 0x00000000, model64: 0xabf70000ac04},
		modelTuple{type64: 0x2700000027, matchRI: 0x0baa, match64: 0x00000000, model64: 0xac040000ac0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bab, match64: 0x00000000, model64: 0xac0c0000ac14},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bac, match64: 0x00000000, model64: 0xac140000ac1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac1d0000ac24, model64: 0xac240000ac2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bad, match64: 0x00000000, model64: 0xac2f0000ac37},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bae, match64: 0x00000000, model64: 0xac370000ac40},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0baf, match64: 0x00000000, model64: 0xac400000ac4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac4d0000ac55, model64: 0xac550000ac62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac620000ac6a, model64: 0xac6a0000ac73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac730000ac7b, model64: 0xac7b0000ac85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac850000ac8d, model64: 0xac8d0000ac9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac9e0000aca6, model64: 0xaca60000acb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xacb00000acb8, model64: 0xacb80000acc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xacc40000accc, model64: 0xaccc0000acd5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xacd50000acdc, model64: 0xacdc0000ace5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb0, match64: 0x00000000, model64: 0xace50000acf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb1, match64: 0x00000000, model64: 0xacf30000acfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb2, match64: 0x00000000, model64: 0xacfe0000ad06},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb3, match64: 0x00000000, model64: 0xad060000ad0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad0e0000ad16, model64: 0xad160000ad20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad200000ad28, model64: 0xad280000ad31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad310000ad38, model64: 0xad380000ad45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb4, match64: 0x00000000, model64: 0xad450000ad53},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb5, match64: 0x00000000, model64: 0xad530000ad5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb6, match64: 0x00000000, model64: 0xad5b0000ad63},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb7, match64: 0x00000000, model64: 0xad630000ad6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb8, match64: 0x00000000, model64: 0xad6b0000ad77},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb9, match64: 0x00000000, model64: 0xad770000ad80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad800000ad88, model64: 0xad880000ad91},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bba, match64: 0x00000000, model64: 0xad910000ad9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbb, match64: 0x00000000, model64: 0xad9a0000ada3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xada30000adaa, model64: 0xadaa0000adb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbc, match64: 0x00000000, model64: 0xadb60000adbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbd, match64: 0x00000000, model64: 0xadbd0000adc6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xadc60000adce, model64: 0xadce0000add4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xadd40000addb, model64: 0xaddb0000ade2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbe, match64: 0x00000000, model64: 0xade20000ade9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xade90000adf1, model64: 0xadf10000adfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbf, match64: 0x00000000, model64: 0xadfb0000ae02},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc0, match64: 0x00000000, model64: 0xae020000ae0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc1, match64: 0x00000000, model64: 0xae0e0000ae19},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc2, match64: 0x00000000, model64: 0xae190000ae20},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc3, match64: 0x00000000, model64: 0xae200000ae2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc4, match64: 0x00000000, model64: 0xae2c0000ae37},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc5, match64: 0x00000000, model64: 0xae370000ae41},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc6, match64: 0x00000000, model64: 0xae410000ae4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc7, match64: 0x00000000, model64: 0xae4a0000ae51},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc8, match64: 0x00000000, model64: 0xae510000ae5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc9, match64: 0x00000000, model64: 0xae5b0000ae74},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bca, match64: 0x00000000, model64: 0xae740000ae80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcb, match64: 0x00000000, model64: 0xae800000ae8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcc, match64: 0x00000000, model64: 0xae8b0000ae99},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcd, match64: 0x00000000, model64: 0xae990000aea8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bce, match64: 0x00000000, model64: 0xaea80000aeb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcf, match64: 0x00000000, model64: 0xaeb30000aebf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd0, match64: 0x00000000, model64: 0xaebf0000aec9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd1, match64: 0x00000000, model64: 0xaec90000aed0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd2, match64: 0x00000000, model64: 0xaed00000aed8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd3, match64: 0x00000000, model64: 0xaed80000aee3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd4, match64: 0x00000000, model64: 0xaee30000aeea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaeea0000aef2, model64: 0xaef20000aefa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd5, match64: 0x00000000, model64: 0xaefa0000af00},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd6, match64: 0x00000000, model64: 0xaf000000af06},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd7, match64: 0x00000000, model64: 0xaf060000af11},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd8, match64: 0x00000000, model64: 0xaf110000af1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd9, match64: 0x00000000, model64: 0xaf1b0000af22},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bda, match64: 0x00000000, model64: 0xaf220000af38},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdb, match64: 0x00000000, model64: 0xaf380000af3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdc, match64: 0x00000000, model64: 0xaf3e0000af45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdd, match64: 0x00000000, model64: 0x50b9000050bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bde, match64: 0x00000000, model64: 0xaf450000af4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdf, match64: 0x00000000, model64: 0xaf4e0000af57},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be0, match64: 0x00000000, model64: 0xaf570000af5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be1, match64: 0x00000000, model64: 0xaf5d0000af68},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be2, match64: 0x00000000, model64: 0xaf680000af73},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be3, match64: 0x00000000, model64: 0xaf730000af87},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be4, match64: 0x00000000, model64: 0xaf870000af8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be5, match64: 0x00000000, model64: 0xaf8e0000af95},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be6, match64: 0x00000000, model64: 0xaf950000af9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be7, match64: 0x00000000, model64: 0xaf9b0000afa2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be8, match64: 0x00000000, model64: 0xafa20000afa9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be9, match64: 0x00000000, model64: 0xafa90000afaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bea, match64: 0x00000000, model64: 0xafaf0000afb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0beb, match64: 0x00000000, model64: 0xafb60000afbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bec, match64: 0x00000000, model64: 0xafbc0000afc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bed, match64: 0x00000000, model64: 0xafc60000afcd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xafcd0000afd4, model64: 0xafd40000afdb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bee, match64: 0x00000000, model64: 0xafdb0000afe6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bef, match64: 0x00000000, model64: 0xafe60000afec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf0, match64: 0x00000000, model64: 0xafec0000aff5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf1, match64: 0x00000000, model64: 0xaff50000affe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf2, match64: 0x00000000, model64: 0xaffe0000b007},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf3, match64: 0x00000000, model64: 0xb0070000b014},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf4, match64: 0x00000000, model64: 0xb0140000b020},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0200000b027, model64: 0xb0270000b02f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf5, match64: 0x00000000, model64: 0xb02f0000b03a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb03a0000b041, model64: 0xb0410000b048},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf6, match64: 0x00000000, model64: 0xb0480000b04f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf7, match64: 0x00000000, model64: 0xb04f0000b055},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf8, match64: 0x00000000, model64: 0xb0550000b05c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf9, match64: 0x00000000, model64: 0xb05c0000b065},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0650000b06d, model64: 0xb06d0000b079},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0790000b081, model64: 0xb0810000b08d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb08d0000b095, model64: 0xb0950000b0a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfa, match64: 0x00000000, model64: 0xb0a70000b0b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfb, match64: 0x00000000, model64: 0xb0b40000b0c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfc, match64: 0x00000000, model64: 0xb0c10000b0c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfd, match64: 0x00000000, model64: 0xb0c70000b0d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfe, match64: 0x00000000, model64: 0xb0d10000b0da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bff, match64: 0x00000000, model64: 0xb0da0000b0e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c00, match64: 0x00000000, model64: 0xb0e50000b0ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c01, match64: 0x00000000, model64: 0xb0ef0000b0f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0f90000b101, model64: 0xb0270000b02f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c02, match64: 0x00000000, model64: 0xb1010000b10b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c03, match64: 0x00000000, model64: 0xb10b0000b115},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c04, match64: 0x00000000, model64: 0xb1150000b120},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c05, match64: 0x00000000, model64: 0xb1200000b128},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1280000b12f, model64: 0xb12f0000b137},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c06, match64: 0x00000000, model64: 0xb1370000b13f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c07, match64: 0x00000000, model64: 0xb13f0000b147},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1470000b14e, model64: 0xb14e0000b156},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c08, match64: 0x00000000, model64: 0xb1560000b15d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c09, match64: 0x00000000, model64: 0xb15d0000b16b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0a, match64: 0x00000000, model64: 0xb16b0000b179},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0b, match64: 0x00000000, model64: 0xb1790000b187},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0c, match64: 0x00000000, model64: 0xb1870000b190},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0d, match64: 0x00000000, model64: 0xb1900000b199},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0e, match64: 0x00000000, model64: 0xb1990000b19c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0f, match64: 0x00000000, model64: 0xb19c0000b1a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c10, match64: 0x00000000, model64: 0xb1a40000b1ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c11, match64: 0x00000000, model64: 0xb1ac0000b1b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c12, match64: 0x00000000, model64: 0xb1b60000b1b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c13, match64: 0x00000000, model64: 0xb1b90000b1c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c14, match64: 0x00000000, model64: 0xb1c10000b1c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c15, match64: 0x00000000, model64: 0xb1c80000b1cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c16, match64: 0x00000000, model64: 0xb1cb0000b1d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c17, match64: 0x00000000, model64: 0xa1450000a14c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c18, match64: 0x00000000, model64: 0x7eba00007ebd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c19, match64: 0x00000000, model64: 0xb1d30000b1db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1a, match64: 0x00000000, model64: 0xb1db0000b1e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1b, match64: 0x00000000, model64: 0xb1e50000b1f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1c, match64: 0x00000000, model64: 0xb1f30000b1fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1d, match64: 0x00000000, model64: 0xb1fa0000b206},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1e, match64: 0x00000000, model64: 0xb2060000b208},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1f, match64: 0x00000000, model64: 0x915000009156},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c20, match64: 0x00000000, model64: 0xb2080000b212},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c21, match64: 0x00000000, model64: 0xb2120000b220},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c22, match64: 0x00000000, model64: 0xb2200000b22e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c23, match64: 0x00000000, model64: 0xb22e0000b230},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c24, match64: 0x00000000, model64: 0xb2300000b237},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c25, match64: 0x00000000, model64: 0xb2370000b246},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c26, match64: 0x00000000, model64: 0xb2460000b252},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c27, match64: 0x00000000, model64: 0xb2520000b25f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c28, match64: 0x00000000, model64: 0xb25f0000b266},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c29, match64: 0x00000000, model64: 0xb2660000b26d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2a, match64: 0x00000000, model64: 0xb26d0000b274},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2b, match64: 0x00000000, model64: 0xb2740000b279},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2c, match64: 0x00000000, model64: 0x358d00003590},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2d, match64: 0x00000000, model64: 0xb2790000b27e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2e, match64: 0x00000000, model64: 0xb27e0000b287},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2f, match64: 0x00000000, model64: 0xb2870000b290},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c30, match64: 0x00000000, model64: 0xb2900000b294},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c31, match64: 0x00000000, model64: 0xb2940000b29d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c32, match64: 0x00000000, model64: 0xb29d0000b2a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c33, match64: 0x00000000, model64: 0xb2a60000b2af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c34, match64: 0x00000000, model64: 0xb2af0000b2b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c35, match64: 0x00000000, model64: 0xb2b60000b2b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c36, match64: 0x00000000, model64: 0xb2b90000b2c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c37, match64: 0x00000000, model64: 0xb2c70000b2d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c38, match64: 0x00000000, model64: 0xb2d50000b2e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c39, match64: 0x00000000, model64: 0xb2e40000b2f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3a, match64: 0x00000000, model64: 0xb2f10000b2f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3b, match64: 0x00000000, model64: 0xb2f50000b2f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3c, match64: 0x00000000, model64: 0xb2f70000b300},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3d, match64: 0x00000000, model64: 0xb3000000b309},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3e, match64: 0x00000000, model64: 0xb3090000b312},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3f, match64: 0x00000000, model64: 0xb3120000b31b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c40, match64: 0x00000000, model64: 0xb31b0000b32a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c41, match64: 0x00000000, model64: 0xb32a0000b330},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c42, match64: 0x00000000, model64: 0xb3300000b33d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c43, match64: 0x00000000, model64: 0xb33d0000b341},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c44, match64: 0x00000000, model64: 0xb3410000b345},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c45, match64: 0x00000000, model64: 0xb3450000b352},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c46, match64: 0x00000000, model64: 0xb3520000b356},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c47, match64: 0x00000000, model64: 0xb3560000b35f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c48, match64: 0x00000000, model64: 0xb35f0000b368},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c49, match64: 0x00000000, model64: 0xb3680000b371},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4a, match64: 0x00000000, model64: 0xb3710000b379},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4b, match64: 0x00000000, model64: 0xb3790000b388},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4c, match64: 0x00000000, model64: 0xb3880000b395},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4d, match64: 0x00000000, model64: 0xb3950000b39c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4e, match64: 0x00000000, model64: 0xb3880000b395},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4f, match64: 0x00000000, model64: 0xb39c0000b39f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c50, match64: 0x00000000, model64: 0xb39f0000b3a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c51, match64: 0x00000000, model64: 0xb3a20000b3a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c52, match64: 0x00000000, model64: 0xb3a50000b3ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c53, match64: 0x00000000, model64: 0xb3ae0000b3b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c54, match64: 0x00000000, model64: 0xb3b70000b3c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c55, match64: 0x00000000, model64: 0xb3c60000b3c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c56, match64: 0x00000000, model64: 0xb3c90000b3d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c57, match64: 0x00000000, model64: 0xb3d10000b3d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c58, match64: 0x00000000, model64: 0xb3d40000b3df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c59, match64: 0x00000000, model64: 0xb3df0000b3e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5a, match64: 0x00000000, model64: 0xb3e60000b3ef},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0c5b, match64: 0x00000000, model64: 0xb3ef0000b3f7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c5c, match64: 0x00000000, model64: 0xb3f70000b407},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c5d, match64: 0x00000000, model64: 0xb4070000b41c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c5e, match64: 0x00000000, model64: 0xb41c0000b430},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c5f, match64: 0x00000000, model64: 0xb4300000b449},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c60, match64: 0x00000000, model64: 0xb4490000b456},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c61, match64: 0x00000000, model64: 0xb4560000b468},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c62, match64: 0x00000000, model64: 0xb4680000b478},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c63, match64: 0x00000000, model64: 0xb4780000b487},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c64, match64: 0x00000000, model64: 0xb4870000b495},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c65, match64: 0x00000000, model64: 0xb4950000b4a8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c66, match64: 0x00000000, model64: 0xb4a80000b4ba},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c67, match64: 0x00000000, model64: 0xb4ba0000b4c7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c68, match64: 0x00000000, model64: 0xb4c70000b4d3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c69, match64: 0x00000000, model64: 0xb4d30000b4e4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c6a, match64: 0x00000000, model64: 0xb4e40000b4f4},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb4f40000b4fc, model64: 0xb4fc0000b512},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb5120000b51a, model64: 0xb51a0000b52b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c6b, match64: 0x00000000, model64: 0xb52b0000b540},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c6c, match64: 0x00000000, model64: 0xb5400000b558},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c6d, match64: 0x00000000, model64: 0xb5580000b56c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c6e, match64: 0x00000000, model64: 0xb56c0000b577},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb5770000b57e, model64: 0xb57e0000b599},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb5990000b5a1, model64: 0xb5a10000b5b8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb5b80000b5c1, model64: 0xb5c10000b5d6},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb5d60000b5dd, model64: 0xb5dd0000b5f6},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb5f60000b5fe, model64: 0xb5fe0000b615},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c6f, match64: 0x00000000, model64: 0xb6150000b62a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c70, match64: 0x00000000, model64: 0xb62a0000b641},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb6410000b64b, model64: 0xb64b0000b65f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb65f0000b668, model64: 0xb6680000b679},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb6790000b684, model64: 0xb6840000b697},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb6970000b6a0, model64: 0xb6a00000b6ac},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb6ac0000b6b5, model64: 0xb6b50000b6cb},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb6cb0000b6d5, model64: 0xb6d50000b6e6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c71, match64: 0x00000000, model64: 0xb6e60000b6f7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c72, match64: 0x00000000, model64: 0xb6f70000b70d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c73, match64: 0x00000000, model64: 0xb70d0000b723},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c74, match64: 0x00000000, model64: 0xb7230000b72f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c75, match64: 0x00000000, model64: 0xb72f0000b73b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c76, match64: 0x00000000, model64: 0xb73b0000b742},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c77, match64: 0x00000000, model64: 0xb7420000b750},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c78, match64: 0x00000000, model64: 0xb7500000b763},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c79, match64: 0x00000000, model64: 0xb7630000b76c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c7a, match64: 0x00000000, model64: 0xb76c0000b779},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c7b, match64: 0x00000000, model64: 0xb7790000b789},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c7c, match64: 0x00000000, model64: 0xb7890000b79a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c7d, match64: 0x00000000, model64: 0xb79a0000b7af},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c7e, match64: 0x00000000, model64: 0xb7af0000b7c0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c7f, match64: 0x00000000, model64: 0xb7c00000b7d6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c80, match64: 0x00000000, model64: 0xb7d60000b7f3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c81, match64: 0x00000000, model64: 0xb7f30000b807},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c82, match64: 0x00000000, model64: 0xb8070000b81d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c83, match64: 0x00000000, model64: 0xb81d0000b82e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c84, match64: 0x00000000, model64: 0xb82e0000b83e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c85, match64: 0x00000000, model64: 0xb83e0000b852},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c86, match64: 0x00000000, model64: 0xb8520000b863},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c87, match64: 0x00000000, model64: 0xb8630000b86e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c88, match64: 0x00000000, model64: 0xb86e0000b87e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c89, match64: 0x00000000, model64: 0xb87e0000b88d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c8a, match64: 0x00000000, model64: 0xb88d0000b89c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c8b, match64: 0x00000000, model64: 0xb89c0000b8b2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c8c, match64: 0x00000000, model64: 0xb8b20000b8bf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c8d, match64: 0x00000000, model64: 0xb8bf0000b8cf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c8e, match64: 0x00000000, model64: 0xb8cf0000b8e2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb8e20000b8ea, model64: 0xb8ea0000b8f5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c8f, match64: 0x00000000, model64: 0xb8f50000b900},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb9000000b90a, model64: 0xb90a0000b920},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb9200000b92b, model64: 0xb92b0000b93c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c90, match64: 0x00000000, model64: 0xb93c0000b94a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c91, match64: 0x00000000, model64: 0xb94a0000b959},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c92, match64: 0x00000000, model64: 0xb9590000b966},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c93, match64: 0x00000000, model64: 0xb9660000b974},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c94, match64: 0x00000000, model64: 0xb9740000b981},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c95, match64: 0x00000000, model64: 0xb9810000b98e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c96, match64: 0x00000000, model64: 0xb98e0000b99d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c97, match64: 0x00000000, model64: 0xb99d0000b9b0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c98, match64: 0x00000000, model64: 0xb9b00000b9c3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c99, match64: 0x00000000, model64: 0xb9c30000b9d8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c9a, match64: 0x00000000, model64: 0xb9d80000b9e6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c9b, match64: 0x00000000, model64: 0xb9e60000b9f3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c9c, match64: 0x00000000, model64: 0xb9f30000ba00},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xba000000ba09, model64: 0xba090000ba1f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c9d, match64: 0x00000000, model64: 0xba1f0000ba37},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xba370000ba40, model64: 0xba400000ba57},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xba570000ba5f, model64: 0xba5f0000ba75},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xba750000ba7d, model64: 0xba7d0000ba92},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c9e, match64: 0x00000000, model64: 0xba920000baa3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c9f, match64: 0x00000000, model64: 0xbaa30000babc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ca0, match64: 0x00000000, model64: 0xbabc0000bacc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ca1, match64: 0x00000000, model64: 0xbacc0000bae1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbae10000baea, model64: 0xbaea0000baf8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbaf80000bb00, model64: 0xbb000000bb09},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbb090000bb10, model64: 0xbb100000bb1e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbb1e0000bb26, model64: 0xb76c0000b779},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbb260000bb2f, model64: 0xbb2f0000bb37},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbb370000bb3e, model64: 0xbb3e0000bb53},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbb530000bb5b, model64: 0xbb5b0000bb6b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ca2, match64: 0x00000000, model64: 0xbb6b0000bb78},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ca3, match64: 0x00000000, model64: 0xbb780000bb7f},
		modelTuple{type64: 0x245f00002467, matchRI: 0x0ca4, match64: 0x00000000, model64: 0xbb7f0000bb8c},
		modelTuple{type64: 0x245f00002467, matchRI: 0x0ca5, match64: 0x00000000, model64: 0xbb8c0000bb9f},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0xbb9f0000bba7, model64: 0xbba70000bbb8},
		modelTuple{type64: 0x51800000525, matchRI: 0x0ca6, match64: 0x00000000, model64: 0xbbb80000bbca},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0ca7, match64: 0x00000000, model64: 0xbbca0000bbd3},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xbbd30000bbdb, model64: 0xbbdb0000bbe7},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xbbe70000bbef, model64: 0xbbef0000bbfb},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0ca8, match64: 0x00000000, model64: 0xbbfb0000bc0d},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xbc0d0000bc16, model64: 0xbc160000bc2c},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xbc2c0000bc35, model64: 0xbc350000bc4b},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xbc4b0000bc53, model64: 0xbc530000bc65},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xbc650000bc6e, model64: 0xbc6e0000bc84},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xbc840000bc8c, model64: 0xbc8c0000bc9e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ca9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0caa, match64: 0x00000000, model64: 0xbc9e0000bca5},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0cab, match64: 0x00000000, model64: 0xbca50000bcb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cad, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cae, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbcbb0000bcc4, model64: 0xbcc40000bccf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb3, match64: 0x00000000, model64: 0xbcdd0000bce3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb4, match64: 0x00000000, model64: 0x74af000074b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb5, match64: 0x00000000, model64: 0xbce30000bce9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb6, match64: 0x00000000, model64: 0xbce90000bced},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbced0000bcf2, model64: 0xbced0000bcf2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbcf20000bcf7, model64: 0xbcf20000bcf7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbcf70000bcfc, model64: 0xbcfc0000bd01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd010000bd05, model64: 0xbd050000bd09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd090000bd0d, model64: 0xbd090000bd0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd0d0000bd11, model64: 0xbd0d0000bd11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74260000742a, model64: 0x74260000742a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd110000bd17, model64: 0xbd110000bd17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd170000bd21, model64: 0xbd210000bd2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd2b0000bd35, model64: 0xbd2b0000bd35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd350000bd3e, model64: 0xbd350000bd3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd3e0000bd4c, model64: 0xbd4c0000bd5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd5c0000bd66, model64: 0xbd660000bd71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd710000bd77, model64: 0xbd710000bd77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd770000bd7c, model64: 0xbd770000bd7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75080000750f, model64: 0x75080000750f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd820000bd89, model64: 0xbd890000bd90},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cb8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xbda40000bdab},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x0cba, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbc, match64: 0x00000000, model64: 0xbdb80000bdc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbd, match64: 0x00000000, model64: 0xbdc90000bdd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbdd10000bdd9, model64: 0xbdd10000bdd9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbdd90000bde2, model64: 0xbde20000bdeb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbdeb0000bdf4, model64: 0xbdf40000bdfd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbdfd0000be09, model64: 0xbdfd0000be09},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbe, match64: 0x00000000, model64: 0xbe090000be11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe110000be18, model64: 0xbe180000be24},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbf, match64: 0x00000000, model64: 0xbe240000be2f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe2f0000be36, model64: 0xbe360000be42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe420000be49, model64: 0xbe490000be55},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe550000be5c, model64: 0xbe5c0000be68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe680000be6e, model64: 0xbe680000be6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe6e0000be78, model64: 0xbe6e0000be78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe780000be84, model64: 0xbe840000be90},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe900000be96, model64: 0xbe960000be9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe9d0000bea7, model64: 0xbea70000beb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc0, match64: 0x00000000, model64: 0x406500004068},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc1, match64: 0x00000000, model64: 0xbeb10000beb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0cc3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cc4, match64: 0x00000000, model64: 0xbeb40000bebd},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbebd0000bec6, model64: 0xbec60000becf},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbecf0000bed8, model64: 0xbed80000bee2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbee20000beeb, model64: 0xbeeb0000bef4},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbef40000bef9, model64: 0xbef90000bf04},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbf040000bf0e, model64: 0xbf0e0000bf18},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbf180000bf21, model64: 0xbf210000bf2a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbf2a0000bf33, model64: 0xbf0e0000bf18},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbf330000bf3c, model64: 0xbf3c0000bf45},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbf450000bf4e, model64: 0xbf4e0000bf57},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbf570000bf60, model64: 0xbf600000bf6a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbf6a0000bf73, model64: 0xbf730000bf7c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbf7c0000bf81, model64: 0xbf810000bf8c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbf8c0000bf95, model64: 0xbf950000bfa4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cc5, match64: 0x00000000, model64: 0xbfa40000bfae},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cc6, match64: 0x00000000, model64: 0xbfae0000bfbd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cc7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cc8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbfc10000bfc9, model64: 0xbfc10000bfc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbfc90000bfcd, model64: 0xbfcd0000bfd7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xbfdc0000bff0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbffa0000c000, model64: 0xc0000000c007},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ccc, match64: 0x00000000, model64: 0xc0070000c00e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc00e0000c018, model64: 0xc0180000c025},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0250000c02e, model64: 0xc02e0000c038},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ccd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ccf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cd1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cd2, match64: 0x00000000, model64: 0xc0420000c047},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd4, match64: 0x00000000, model64: 0xc0510000c059},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd5, match64: 0x00000000, model64: 0xc0590000c060},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd6, match64: 0x00000000, model64: 0xc0600000c062},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd7, match64: 0x00000000, model64: 0xc0620000c064},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd8, match64: 0x00000000, model64: 0xc0640000c06b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd9, match64: 0x00000000, model64: 0xc06b0000c074},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cda, match64: 0x00000000, model64: 0xc0740000c07c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdb, match64: 0x00000000, model64: 0xc07c0000c087},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdc, match64: 0x00000000, model64: 0xc0870000c094},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdd, match64: 0x00000000, model64: 0xc0940000c09d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cde, match64: 0x00000000, model64: 0xc09d0000c0a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdf, match64: 0x00000000, model64: 0xc0a90000c0b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce0, match64: 0x00000000, model64: 0xc0b30000c0bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce1, match64: 0x00000000, model64: 0xc0bc0000c0c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce2, match64: 0x00000000, model64: 0xc0c50000c0cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce3, match64: 0x00000000, model64: 0xc0cf0000c0db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce4, match64: 0x00000000, model64: 0xc0db0000c0dc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ce5, match64: 0x00000000, model64: 0x405c00004062},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ce6, match64: 0x00000000, model64: 0xc0dc0000c0e2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0cea, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0ef0000c0f7, model64: 0xc0ef0000c0f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0f70000c0ff, model64: 0xc0ff0000c107},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1070000c10f, model64: 0xc10f0000c11a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cec, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cee, match64: 0x00000000, model64: 0x83000000837},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cef, match64: 0x00000000, model64: 0xc11d0000c124},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf0, match64: 0x00000000, model64: 0xc1240000c12a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc12d0000c134, model64: 0xc1340000c13e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1400000c14c, model64: 0xc14c0000c155},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xc1600000c168, model64: 0xc1680000c17f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc17f0000c187, model64: 0xc1870000c194},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1940000c19c, model64: 0xc19c0000c1aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1aa0000c1b2, model64: 0xc1b20000c1c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf8, match64: 0x00000000, model64: 0xc1c50000c1d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1d30000c1db, model64: 0xc1db0000c1ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1ee0000c1fc, model64: 0xc1fc0000c20c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc20c0000c214, model64: 0xc2140000c229},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2290000c231, model64: 0xc2310000c241},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2410000c249, model64: 0xc2490000c25c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc25c0000c264, model64: 0xc2640000c275},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2750000c27d, model64: 0xc27d0000c28e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc28e0000c296, model64: 0xc2960000c2a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2a40000c2ac, model64: 0xc2ac0000c2ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2ba0000c2c2, model64: 0xc2c20000c2d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2d60000c2e5, model64: 0xc2e50000c2f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2f40000c2fc, model64: 0xc2fc0000c310},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3100000c318, model64: 0xc3180000c329},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3290000c335, model64: 0xc3350000c348},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0xc3480000c350, model64: 0xc3500000c35c},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xc35c0000c36a, model64: 0xc36a0000c378},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xc3780000c38c, model64: 0xc38c0000c3a0},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xc3a00000c3af, model64: 0xc3af0000c3be},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0cf9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xc3c30000c3c9},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0cfb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0cfc, match64: 0x00000000, model64: 0xc3d30000c3dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfd, match64: 0x00000000, model64: 0xc3dd0000c3e5},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0cfe, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cff, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3ec0000c3f2, model64: 0xc3f20000c3f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d01, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3f90000c3ff, model64: 0x151f00001521},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3ff0000c405, model64: 0xc4050000c411},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4110000c417, model64: 0xc4170000c419},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4190000c41f, model64: 0xc41f0000c422},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4220000c428, model64: 0xc4280000c42b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc42b0000c431, model64: 0xc4310000c439},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4390000c43f, model64: 0xc43f0000c44b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0d02, match64: 0x00000000, model64: 0xc44b0000c458},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d03, match64: 0x00000000, model64: 0xc4580000c45b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4610000c46f, model64: 0xc46f0000c47d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc47d0000c486, model64: 0xc4860000c48f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d05, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d07, match64: 0x00000000, model64: 0xc4930000c496},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d08, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0a, match64: 0x00000000, model64: 0xc49a0000c4a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4a10000c4a9, model64: 0xc4a90000c4b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4b10000c4b7, model64: 0xc4b70000c4bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4bd0000c4c2, model64: 0xc4c20000c4c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0c, match64: 0x00000000, model64: 0xc4c70000c4ce},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0d0d, match64: 0x00000000, model64: 0xc4ce0000c4d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0f, match64: 0x00000000, model64: 0xc4df0000c4e1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0d10, match64: 0x00000000, model64: 0xc4e10000c4ec},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xc4ec0000c4f3, model64: 0xc4f30000c501},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d11, match64: 0x00000000, model64: 0xc5080000c50c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d12, match64: 0x00000000, model64: 0xc50c0000c518},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d13, match64: 0x00000000, model64: 0x31c00000321},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d14, match64: 0x00000000, model64: 0xc5180000c522},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d15, match64: 0x00000000, model64: 0xc5220000c52f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d16, match64: 0x00000000, model64: 0xc52f0000c53b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d17, match64: 0x00000000, model64: 0xc53b0000c545},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d18, match64: 0x00000000, model64: 0xc5450000c54f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d19, match64: 0x00000000, model64: 0xc54f0000c558},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1a, match64: 0x00000000, model64: 0xc5580000c55c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1b, match64: 0x00000000, model64: 0xc55c0000c565},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1c, match64: 0x00000000, model64: 0xc5650000c56e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1d, match64: 0x00000000, model64: 0xc56e0000c579},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1e, match64: 0x00000000, model64: 0xc5790000c584},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1f, match64: 0x00000000, model64: 0xc5840000c58e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d20, match64: 0x00000000, model64: 0xc58e0000c596},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d21, match64: 0x00000000, model64: 0xc5960000c59a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d22, match64: 0x00000000, model64: 0xc59a0000c5a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d23, match64: 0x00000000, model64: 0xc5a00000c5a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d24, match64: 0x00000000, model64: 0xc5a70000c5ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d25, match64: 0x00000000, model64: 0xc5ad0000c5b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d26, match64: 0x00000000, model64: 0xc5b80000c5be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d27, match64: 0x00000000, model64: 0xc5be0000c5c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d28, match64: 0x00000000, model64: 0xc5c40000c5ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d29, match64: 0x00000000, model64: 0xc5ce0000c5d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2a, match64: 0x00000000, model64: 0xc5d40000c5de},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d2b, match64: 0x00000000, model64: 0xc5de0000c5e5},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d2c, match64: 0x00000000, model64: 0xc5e50000c5eb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d2d, match64: 0x00000000, model64: 0xc5eb0000c5f2},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d2e, match64: 0x00000000, model64: 0xc5f20000c5f8},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d2f, match64: 0x00000000, model64: 0xc5eb0000c5f2},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d30, match64: 0x00000000, model64: 0xc5f80000c602},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d31, match64: 0x00000000, model64: 0xc6020000c60c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d32, match64: 0x00000000, model64: 0xc60c0000c616},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d33, match64: 0x00000000, model64: 0xc6160000c619},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d34, match64: 0x00000000, model64: 0xc6190000c61e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d35, match64: 0x00000000, model64: 0xc61e0000c623},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d36, match64: 0x00000000, model64: 0xc6230000c62a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d37, match64: 0x00000000, model64: 0xc62a0000c630},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d38, match64: 0x00000000, model64: 0xc6300000c63b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d39, match64: 0x00000000, model64: 0xc63b0000c642},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3a, match64: 0x00000000, model64: 0xc6420000c647},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3b, match64: 0x00000000, model64: 0xc6470000c64d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3c, match64: 0x00000000, model64: 0xc64d0000c652},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3d, match64: 0x00000000, model64: 0xc6520000c65b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3e, match64: 0x00000000, model64: 0xc65b0000c660},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3f, match64: 0x00000000, model64: 0xc6600000c66a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d40, match64: 0x00000000, model64: 0xa1df0000a1e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d41, match64: 0x00000000, model64: 0xc66a0000c670},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d42, match64: 0x00000000, model64: 0xc6700000c679},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d43, match64: 0x00000000, model64: 0xc6790000c67e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d44, match64: 0x00000000, model64: 0xc67e0000c687},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d45, match64: 0x00000000, model64: 0xc6870000c68c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d46, match64: 0x00000000, model64: 0xc68c0000c695},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d47, match64: 0x00000000, model64: 0xc6950000c69a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d48, match64: 0x00000000, model64: 0xc69a0000c6a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d49, match64: 0x00000000, model64: 0xc6a40000c6b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4a, match64: 0x00000000, model64: 0xc6b00000c6b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4b, match64: 0x00000000, model64: 0xc6b70000c6c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4c, match64: 0x00000000, model64: 0xc6c20000c6c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4d, match64: 0x00000000, model64: 0xc6c80000c6cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4e, match64: 0x00000000, model64: 0xc6cf0000c6d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6d50000c6e2, model64: 0xc6e20000c6ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6ed0000c6f9, model64: 0xc6f90000c700},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4f, match64: 0x00000000, model64: 0xc7000000c707},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d50, match64: 0x00000000, model64: 0xc7070000c70d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d51, match64: 0x00000000, model64: 0xc70d0000c714},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d52, match64: 0x00000000, model64: 0xc7140000c721},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d53, match64: 0x00000000, model64: 0xc6cf0000c6d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d54, match64: 0x00000000, model64: 0xc7210000c730},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d55, match64: 0x00000000, model64: 0xc7300000c73b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d56, match64: 0x00000000, model64: 0xc73b0000c745},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d57, match64: 0x00000000, model64: 0xc7450000c74c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d58, match64: 0x00000000, model64: 0xc74c0000c752},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d59, match64: 0x00000000, model64: 0xc7520000c75b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5a, match64: 0x00000000, model64: 0xc75b0000c766},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5b, match64: 0x00000000, model64: 0xc7660000c76d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5c, match64: 0x00000000, model64: 0xc76d0000c774},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5d, match64: 0x00000000, model64: 0xc7740000c77a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5e, match64: 0x00000000, model64: 0xc77a0000c789},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5f, match64: 0x00000000, model64: 0xc7890000c78e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d60, match64: 0x00000000, model64: 0xc78e0000c795},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d61, match64: 0x00000000, model64: 0xc7950000c79f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d62, match64: 0x00000000, model64: 0xc79f0000c7a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d63, match64: 0x00000000, model64: 0xc7a60000c7b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d64, match64: 0x00000000, model64: 0xc7b20000c7bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d65, match64: 0x00000000, model64: 0xc6b00000c6b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d66, match64: 0x00000000, model64: 0xc7bd0000c7c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d67, match64: 0x00000000, model64: 0xc7c40000c7d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d68, match64: 0x00000000, model64: 0xc7d00000c7d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d69, match64: 0x00000000, model64: 0xc7d70000c7e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6a, match64: 0x00000000, model64: 0xc7e10000c7ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6b, match64: 0x00000000, model64: 0xc7ed0000c7f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6c, match64: 0x00000000, model64: 0xc7f40000c7fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6d, match64: 0x00000000, model64: 0xc7fe0000c805},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6e, match64: 0x00000000, model64: 0xc8050000c807},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6f, match64: 0x00000000, model64: 0xc7fe0000c805},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d70, match64: 0x00000000, model64: 0x90790000907b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d71, match64: 0x00000000, model64: 0x906c00009072},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d72, match64: 0x00000000, model64: 0xc8070000c80f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d73, match64: 0x00000000, model64: 0xc80f0000c815},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d74, match64: 0x00000000, model64: 0x62590000625f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d75, match64: 0x00000000, model64: 0xc8150000c81b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d76, match64: 0x00000000, model64: 0xc81b0000c825},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d77, match64: 0x00000000, model64: 0x7edc00007ee2},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d78, match64: 0x00000000, model64: 0xc8250000c832},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d79, match64: 0x00000000, model64: 0x625f00006265},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d7a, match64: 0x00000000, model64: 0x50860000508c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d7b, match64: 0x00000000, model64: 0xc8320000c83d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d7c, match64: 0x00000000, model64: 0xc83d0000c843},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d7d, match64: 0x00000000, model64: 0xc8430000c84a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d7e, match64: 0x00000000, model64: 0xc84a0000c855},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d7f, match64: 0x00000000, model64: 0xc8550000c85c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d80, match64: 0x00000000, model64: 0xc85c0000c863},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d81, match64: 0x00000000, model64: 0xc8630000c872},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d82, match64: 0x00000000, model64: 0xc8720000c87a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d83, match64: 0x00000000, model64: 0xc87a0000c885},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d84, match64: 0x00000000, model64: 0xc8850000c893},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d85, match64: 0x00000000, model64: 0xc8930000c89e},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d86, match64: 0x00000000, model64: 0xc89e0000c8a9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d87, match64: 0x00000000, model64: 0xc8850000c893},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d88, match64: 0x00000000, model64: 0xc8a90000c8b0},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d89, match64: 0x00000000, model64: 0xc8b00000c8bb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d8a, match64: 0x00000000, model64: 0xc8bb0000c8c3},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d8b, match64: 0x00000000, model64: 0xc85c0000c863},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d8c, match64: 0x00000000, model64: 0xc8c30000c8d1},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d8d, match64: 0x00000000, model64: 0xc8d10000c8d9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d8e, match64: 0x00000000, model64: 0xc8d90000c8e4},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d8f, match64: 0x00000000, model64: 0xc8e40000c8ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d90, match64: 0x00000000, model64: 0xc8ef0000c8f7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0d91, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d92, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d93, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d94, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d99, match64: 0x00000000, model64: 0xc90e0000c910},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9a, match64: 0x00000000, model64: 0xc9100000c91a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9b, match64: 0x00000000, model64: 0xc91a0000c91b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9c, match64: 0x00000000, model64: 0xc91b0000c924},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9d, match64: 0x00000000, model64: 0xc9240000c933},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9e, match64: 0x00000000, model64: 0xc9330000c939},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9f, match64: 0x00000000, model64: 0xc9390000c943},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da0, match64: 0x00000000, model64: 0xc9430000c948},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da1, match64: 0x00000000, model64: 0xc9480000c94e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da2, match64: 0x00000000, model64: 0xc94e0000c953},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9530000c961, model64: 0xc9610000c970},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9700000c97d, model64: 0xc97d0000c98a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc98a0000c997, model64: 0xc9970000c9a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9a50000c9b2, model64: 0xc9b20000c9c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9c00000c9c9, model64: 0xc9c90000c9d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9d30000c9dd, model64: 0xc9dd0000c9e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9e80000c9f2, model64: 0xc9e80000c9f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9f20000c9fd, model64: 0xc9f20000c9fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9fd0000ca03, model64: 0xc9fd0000ca03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xca030000ca0e, model64: 0xca0e0000ca19},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xca190000ca1f, model64: 0xca1f0000ca25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xca250000ca2f, model64: 0xca2f0000ca39},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xca480000ca4e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0da7, match64: 0x00000000, model64: 0xca520000ca5f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0da8, match64: 0x00000000, model64: 0xca5f0000ca67},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0da9, match64: 0x00000000, model64: 0xca670000ca79},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xca790000ca87, model64: 0xca870000ca91},
		modelTuple{type64: 0x2700000027, matchRI: 0x0daa, match64: 0x00000000, model64: 0xca910000ca9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dab, match64: 0x00000000, model64: 0x432900004330},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xca9d0000caa6, model64: 0xcaa60000caa9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcaa90000cab2, model64: 0xcab20000cabb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dad, match64: 0x00000000, model64: 0xcabb0000cabe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dae, match64: 0x00000000, model64: 0x66280000662f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0daf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcac60000cad1, model64: 0xcad10000cad6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db1, match64: 0x00000000, model64: 0xcad60000cae0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcae00000caea, model64: 0xcaea0000caf1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcaf10000cafc, model64: 0xcafc0000cafe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db2, match64: 0x00000000, model64: 0xcafe0000cb03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcb030000cb10, model64: 0xcb100000cb20},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xcb200000cb2a, model64: 0xcb2a0000cb33},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xcb330000cb3c, model64: 0xcb3c0000cb45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcb4a0000cb54, model64: 0xcb540000cb5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcb5f0000cb67, model64: 0xcb670000cb73},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db4, match64: 0x00000000, model64: 0xcb730000cb85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db5, match64: 0x00000000, model64: 0xcb850000cb92},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db6, match64: 0x00000000, model64: 0xcb920000cb9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db7, match64: 0x00000000, model64: 0xcb9e0000cba5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db8, match64: 0x00000000, model64: 0xcba50000cbb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db9, match64: 0x00000000, model64: 0xcbb70000cbc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dba, match64: 0x00000000, model64: 0xcbc80000cbd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbb, match64: 0x00000000, model64: 0xcbd50000cbe1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbc, match64: 0x00000000, model64: 0xcbe10000cbee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbd, match64: 0x00000000, model64: 0xcbee0000cbf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbe, match64: 0x00000000, model64: 0xcbf90000cc05},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbf, match64: 0x00000000, model64: 0xcc050000cc12},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc0, match64: 0x00000000, model64: 0xcc120000cc1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc1, match64: 0x00000000, model64: 0xcc1f0000cc2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc2, match64: 0x00000000, model64: 0xcc2a0000cc37},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc3, match64: 0x00000000, model64: 0xcc370000cc44},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc4, match64: 0x00000000, model64: 0xcc440000cc53},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc5, match64: 0x00000000, model64: 0xcc530000cc62},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc6, match64: 0x00000000, model64: 0xcc620000cc73},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc7, match64: 0x00000000, model64: 0xcc730000cc80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc8, match64: 0x00000000, model64: 0xcc800000cc94},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc9, match64: 0x00000000, model64: 0xcc940000cca0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dca, match64: 0x00000000, model64: 0xcca00000ccae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dcb, match64: 0x00000000, model64: 0xccae0000ccb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dcc, match64: 0x00000000, model64: 0xccb70000ccbe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xccbe0000ccc6, model64: 0xccc60000ccce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dcd, match64: 0x00000000, model64: 0xccce0000ccd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dce, match64: 0x00000000, model64: 0xccd50000ccdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dcf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd0, match64: 0x00000000, model64: 0xccdd0000cce8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd2, match64: 0x00000000, model64: 0x59690000596e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd5, match64: 0x00000000, model64: 0x50680000506e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xccf30000ccf9, model64: 0xccf90000cd00},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ddb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0ddc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0ddd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ddf, match64: 0x00000000, model64: 0xcd090000cd10},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de0, match64: 0x00000000, model64: 0xcd100000cd13},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de1, match64: 0x00000000, model64: 0xcd130000cd1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de2, match64: 0x00000000, model64: 0xcd1d0000cd25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd250000cd33, model64: 0xcd330000cd41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd410000cd4f, model64: 0xcd4f0000cd5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd5d0000cd66, model64: 0xcd660000cd6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd6f0000cd79, model64: 0xcd790000cd83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd830000cd8f, model64: 0xcd8f0000cd9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd9b0000cda6, model64: 0xcda60000cdb1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcdb10000cdbb, model64: 0xcdbb0000cdc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de3, match64: 0x00000000, model64: 0xcdc50000cdcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de4, match64: 0x00000000, model64: 0xcdcc0000cdd5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcdd50000cdde, model64: 0xcdde0000cde2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcde20000cde6, model64: 0xcde20000cde6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcde60000cded, model64: 0xcded0000cdf4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0de5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de7, match64: 0x00000000, model64: 0xcdfc0000ce0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de8, match64: 0x00000000, model64: 0xce0d0000ce19},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de9, match64: 0x00000000, model64: 0xce0d0000ce19},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dea, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xce2c0000ce34, model64: 0xce340000ce45},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0df1, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0df2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xce490000ce52, model64: 0xce490000ce52},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xce520000ce5c, model64: 0xce520000ce5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df5, match64: 0x00000000, model64: 0xce600000ce68},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df6, match64: 0x00000000, model64: 0xce680000ce6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xce710000ce78, model64: 0xce780000ce7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xce840000ce89},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dfb, match64: 0x00000000, model64: 0xce8e0000ce93},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dfc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dfd, match64: 0x00000000, model64: 0xce930000ce98},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dff, match64: 0x00000000, model64: 0xce9d0000cea5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e00, match64: 0x00000000, model64: 0xcea50000cead},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e01, match64: 0x00000000, model64: 0xcead0000ceb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e02, match64: 0x00000000, model64: 0xceb40000ceba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e03, match64: 0x00000000, model64: 0xceba0000cec3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e04, match64: 0x00000000, model64: 0xcec30000ceca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e05, match64: 0x00000000, model64: 0xceca0000ced3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e06, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e07, match64: 0x00000000, model64: 0xced30000cedb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e08, match64: 0x00000000, model64: 0xcedb0000cee3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e09, match64: 0x00000000, model64: 0xcee30000ceec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0a, match64: 0x00000000, model64: 0xceec0000cef1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0b, match64: 0x00000000, model64: 0xcef10000cefd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0c, match64: 0x00000000, model64: 0x9b8100009b85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0d, match64: 0x00000000, model64: 0x7a7b00007a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0e, match64: 0x00000000, model64: 0xcefd0000cf03},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0f, match64: 0x00000000, model64: 0xcf030000cf0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e10, match64: 0x00000000, model64: 0xcf0c0000cf19},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e11, match64: 0x00000000, model64: 0xcf190000cf21},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e12, match64: 0x00000000, model64: 0xcf210000cf2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e13, match64: 0x00000000, model64: 0xcf2f0000cf35},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e14, match64: 0x00000000, model64: 0xcf350000cf3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e15, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e17, match64: 0x00000000, model64: 0xcf3e0000cf4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e19, match64: 0x00000000, model64: 0xcf4f0000cf5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcf5c0000cf63, model64: 0xcf5c0000cf63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcf630000cf69, model64: 0xcf690000cf70},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1a, match64: 0x00000000, model64: 0xcf700000cf7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1b, match64: 0x00000000, model64: 0x9eb300009ebb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1c, match64: 0x00000000, model64: 0xcf7f0000cf96},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1d, match64: 0x00000000, model64: 0xcf960000cfa4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1e, match64: 0x00000000, model64: 0xcfa40000cfad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e20, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xcfbc0000cfc0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xcfc60000cfce},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xcfe60000cfef, model64: 0xcfef0000cff2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e24, match64: 0x00000000, model64: 0xcff70000cfff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e25, match64: 0x00000000, model64: 0xcfff0000d009},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0090000d010, model64: 0xd0090000d010},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e26, match64: 0x00000000, model64: 0xd0100000d019},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e27, match64: 0x00000000, model64: 0xd0190000d021},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0210000d02c, model64: 0xd02c0000d032},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0320000d03b, model64: 0xd03b0000d044},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0440000d04b, model64: 0xd04b0000d052},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0580000d069, model64: 0xd0690000d07a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0810000d08b, model64: 0xa5710000a578},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd08b0000d095, model64: 0xd0950000d0a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0a00000d0a9, model64: 0xd0a90000d0b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0b40000d0bd, model64: 0xd0bd0000d0c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0c40000d0cd, model64: 0xd0cd0000d0d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0d10000d0da, model64: 0xd0da0000d0e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0e20000d0eb, model64: 0xd0eb0000d0ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0ef0000d0fa, model64: 0xd0ef0000d0fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e29, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e2a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e2d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0e2e, match64: 0x00000000, model64: 0xd1030000d112},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0e2f, match64: 0x00000000, model64: 0xd1120000d11d},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0e30, match64: 0x00000000, model64: 0x97730000977e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e32, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e33, match64: 0x00000000, model64: 0xd1250000d12d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e36, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e37, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e39, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e3a, match64: 0x00000000, model64: 0x2790000027e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e3c, match64: 0x00000000, model64: 0xd1420000d145},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd14a0000d151, model64: 0xd1510000d159},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e3e, match64: 0x00000000, model64: 0xd1590000d15f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xd15f0000d169, model64: 0xd1690000d173},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xd1730000d17a, model64: 0xd17a0000d181},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xd1810000d187, model64: 0xd1870000d18d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xd18d0000d194, model64: 0xd1940000d19b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xd1af0000d1ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd1c00000d1c9, model64: 0xd1c90000d1d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e44, match64: 0x00000000, model64: 0xd1d20000d1da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd1da0000d1e3, model64: 0xd1e30000d1ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd1ec0000d1fa, model64: 0xd1ec0000d1fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd1fa0000d205, model64: 0xd2050000d210},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2100000d21a, model64: 0xd21a0000d224},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e45, match64: 0x00000000, model64: 0xd2240000d231},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2310000d23d, model64: 0xd23d0000d249},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2490000d252, model64: 0xd2520000d25b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd25b0000d268, model64: 0xd2680000d275},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2750000d27d, model64: 0xd27d0000d285},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e46, match64: 0x00000000, model64: 0xd2850000d28d},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0e47, match64: 0x00000000, model64: 0xd28d0000d29a},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0e48, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4a, match64: 0x00000000, model64: 0xd29f0000d2a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2a50000d2ad, model64: 0xd2ad0000d2b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4b, match64: 0x00000000, model64: 0xd2b20000d2ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4c, match64: 0x00000000, model64: 0xd2ba0000d2c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4d, match64: 0x00000000, model64: 0xd2c10000d2c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4e, match64: 0x00000000, model64: 0xd2c50000d2ca},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xd2ca0000d2d4, model64: 0xd2d40000d2dc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2e90000d2f5, model64: 0xd2e90000d2f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2f50000d300, model64: 0xd2f50000d300},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3000000d311, model64: 0xd3000000d311},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3110000d31d, model64: 0xd3110000d31d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd31d0000d328, model64: 0xd31d0000d328},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3280000d337, model64: 0xd3280000d337},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3370000d345, model64: 0xd3370000d345},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3450000d352, model64: 0xd3450000d352},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e51, match64: 0x00000000, model64: 0xd3520000d35f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e52, match64: 0x00000000, model64: 0xd35f0000d367},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3670000d376, model64: 0xd3670000d376},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e53, match64: 0x00000000, model64: 0xd3760000d380},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e54, match64: 0x00000000, model64: 0xd3800000d38e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd38e0000d39d, model64: 0xd38e0000d39d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd39d0000d3af, model64: 0xd39d0000d3af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3af0000d3bd, model64: 0xd3af0000d3bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3bd0000d3c8, model64: 0xd3bd0000d3c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3c80000d3d2, model64: 0xd3c80000d3d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3d20000d3dc, model64: 0xd3d20000d3dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3dc0000d3e9, model64: 0xd3dc0000d3e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3e90000d3f7, model64: 0xd3e90000d3f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e55, match64: 0x00000000, model64: 0xd3f70000d403},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4030000d40b, model64: 0xd40b0000d414},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4140000d41f, model64: 0xd41f0000d435},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4350000d43c, model64: 0xd43c0000d44d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd44d0000d458, model64: 0xd4580000d46c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e56, match64: 0x00000000, model64: 0xd46c0000d47d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e57, match64: 0x00000000, model64: 0xd47d0000d489},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e58, match64: 0x00000000, model64: 0xd4890000d49a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd49a0000d4aa, model64: 0xd49a0000d4aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4aa0000d4b8, model64: 0xd4aa0000d4b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e59, match64: 0x00000000, model64: 0xd4b80000d4c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4c70000d4d9, model64: 0xd4c70000d4d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4d90000d4ed, model64: 0xd4d90000d4ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e5a, match64: 0x00000000, model64: 0xd4ed0000d4fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4fd0000d504, model64: 0xd5040000d515},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5150000d51e, model64: 0xd51e0000d527},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5270000d530, model64: 0xd5270000d530},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5300000d539, model64: 0xd5300000d539},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e5b, match64: 0x00000000, model64: 0xd5390000d547},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e5c, match64: 0x00000000, model64: 0xd5470000d556},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e5d, match64: 0x00000000, model64: 0xd5560000d564},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x0e5e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x0e5f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e60, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e61, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e62, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e64, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e65, match64: 0x00000000, model64: 0xd5680000d56a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e66, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e67, match64: 0x00000000, model64: 0xd56a0000d572},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0e68, match64: 0x00000000, model64: 0xd5720000d577},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd57c0000d587, model64: 0xd57c0000d587},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5870000d593, model64: 0xd5870000d593},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6a, match64: 0x00000000, model64: 0xd5930000d59f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6b, match64: 0x00000000, model64: 0xd59f0000d5ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5b30000d5ba, model64: 0xd5ba0000d5c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6e, match64: 0x00000000, model64: 0xd5d70000d5e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6f, match64: 0x00000000, model64: 0xd5e00000d5ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5ee0000d5f6, model64: 0xd5f60000d5ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e70, match64: 0x00000000, model64: 0xd5ff0000d602},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e71, match64: 0x00000000, model64: 0xd6020000d60c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd60c0000d616, model64: 0xd6160000d618},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6180000d621, model64: 0xc91a0000c91b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6210000d62f, model64: 0xd62f0000d635},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6350000d63e, model64: 0x9ce500009ce6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6430000d649, model64: 0xd6490000d650},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6500000d658, model64: 0xd6500000d658},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e73, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e75, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e76, match64: 0x00000000, model64: 0xd65f0000d666},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e77, match64: 0x00000000, model64: 0x7bdc00007be1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e78, match64: 0x00000000, model64: 0xd6660000d669},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e79, match64: 0x00000000, model64: 0x679100006795},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e7a, match64: 0x00000000, model64: 0xd6690000d66e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e7b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xd6760000d689},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e7f, match64: 0x00000000, model64: 0xd6940000d69f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e80, match64: 0x00000000, model64: 0xd69f0000d6b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e81, match64: 0x00000000, model64: 0xd6b00000d6c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e82, match64: 0x00000000, model64: 0xd6c30000d6d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6d50000d6df, model64: 0xd6df0000d6ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e83, match64: 0x00000000, model64: 0xd6ef0000d6fe},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e84, match64: 0x00000000, model64: 0xd6fe0000d703},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e85, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e86, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e88, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e89, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8c, match64: 0x00000000, model64: 0xd7260000d730},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7300000d738, model64: 0xd7380000d740},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8e, match64: 0x00000000, model64: 0xd7440000d74a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e90, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e92, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e93, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xd7500000d758, model64: 0xd7580000d75f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e94, match64: 0x00000000, model64: 0xd75f0000d769},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e96, match64: 0x00000000, model64: 0xd76f0000d778},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e97, match64: 0x00000000, model64: 0xd7780000d77d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e98, match64: 0x00000000, model64: 0xd77d0000d781},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e99, match64: 0x00000000, model64: 0xc4580000c45b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9a, match64: 0x00000000, model64: 0xc4580000c45b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9b, match64: 0x00000000, model64: 0xd7810000d786},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9c, match64: 0x00000000, model64: 0xc4580000c45b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9d, match64: 0x00000000, model64: 0xc4580000c45b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9e, match64: 0x00000000, model64: 0xd7860000d78a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9f, match64: 0x00000000, model64: 0xd78a0000d790},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea0, match64: 0x00000000, model64: 0xc4580000c45b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea1, match64: 0x00000000, model64: 0xd7900000d795},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea2, match64: 0x00000000, model64: 0xd7950000d79a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd79f0000d7a2, model64: 0xd79f0000d7a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea6, match64: 0x00000000, model64: 0xd7a20000d7aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea7, match64: 0x00000000, model64: 0xd7aa0000d7af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea8, match64: 0x00000000, model64: 0xd7af0000d7be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea9, match64: 0x00000000, model64: 0xd7be0000d7c9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0eaa, match64: 0x00000000, model64: 0xd7c90000d7d2},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0eac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ead, match64: 0x00000000, model64: 0xd7d70000d7e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7e40000d7ec, model64: 0xd7ec0000d7f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7f40000d7fc, model64: 0xd7f40000d7fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7fc0000d808, model64: 0xd7fc0000d808},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd8080000d812, model64: 0xd8080000d812},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eae, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eaf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd81b0000d824, model64: 0xd8240000d82f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd82f0000d834, model64: 0x84a3000084aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd8340000d83a, model64: 0xd83a0000d844},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd8440000d848, model64: 0xd8480000d851},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb4, match64: 0x00000000, model64: 0xd8510000d85a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd85a0000d85e, model64: 0xd85e0000d868},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x0eb6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb8, match64: 0x00000000, model64: 0xd86e0000d875},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb9, match64: 0x00000000, model64: 0xd8750000d87b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eba, match64: 0x00000000, model64: 0xd87b0000d881},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebb, match64: 0x00000000, model64: 0xd8810000d888},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebc, match64: 0x00000000, model64: 0xd8880000d88e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebd, match64: 0x00000000, model64: 0xd88e0000d897},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebe, match64: 0x00000000, model64: 0xd8970000d89d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebf, match64: 0x00000000, model64: 0xd89d0000d8a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec0, match64: 0x00000000, model64: 0x9e1000009e17},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec1, match64: 0x00000000, model64: 0xd8a30000d8a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec2, match64: 0x00000000, model64: 0xd8a90000d8af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec3, match64: 0x00000000, model64: 0xd8af0000d8b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec4, match64: 0x00000000, model64: 0xd8b60000d8bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec5, match64: 0x00000000, model64: 0xd8bc0000d8c4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ec6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ec7, match64: 0x00000000, model64: 0xd8c40000d8ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec9, match64: 0x00000000, model64: 0xd8d40000d8db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eca, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ecb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xd8e80000d8f3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xd9040000d90a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd9160000d91f, model64: 0xd91f0000d92a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd92a0000d935, model64: 0xd9350000d940},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed2, match64: 0x00000000, model64: 0xd9400000d947},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd9470000d957, model64: 0xd9470000d957},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed3, match64: 0x00000000, model64: 0xd9570000d95f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed4, match64: 0x00000000, model64: 0xd95f0000d96b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed5, match64: 0x00000000, model64: 0xd96b0000d976},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed6, match64: 0x00000000, model64: 0xd9760000d97d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed7, match64: 0x00000000, model64: 0xd97d0000d986},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed8, match64: 0x00000000, model64: 0xd9860000d98c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed9, match64: 0x00000000, model64: 0xd98c0000d995},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eda, match64: 0x00000000, model64: 0xd9950000d9a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0edb, match64: 0x00000000, model64: 0xd9a00000d9ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0edc, match64: 0x00000000, model64: 0xd9ab0000d9b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0edd, match64: 0x00000000, model64: 0xd9b30000d9ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ede, match64: 0x00000000, model64: 0xd9ba0000d9c0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0edf, match64: 0x00000000, model64: 0xd9c00000d9ce},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ee0, match64: 0x00000000, model64: 0xd9ce0000d9d6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ee1, match64: 0x00000000, model64: 0xd9d60000d9e4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ee2, match64: 0x00000000, model64: 0xd9c00000d9ce},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ee3, match64: 0x00000000, model64: 0xd9e40000d9f1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ee4, match64: 0x00000000, model64: 0xd9f10000d9fe},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ee5, match64: 0x00000000, model64: 0xd9fe0000da0b},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0ee6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eea, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eeb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eed, match64: 0x00000000, model64: 0xda1f0000da24},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eee, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0eef, match64: 0x00000000, model64: 0xda240000da30},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef1, match64: 0x00000000, model64: 0xda370000da3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef2, match64: 0x00000000, model64: 0xda3d0000da47},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef3, match64: 0x00000000, model64: 0xda470000da4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef4, match64: 0x00000000, model64: 0xda4e0000da52},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef5, match64: 0x00000000, model64: 0xda520000da59},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef6, match64: 0x00000000, model64: 0xda590000da60},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef7, match64: 0x00000000, model64: 0xda600000da67},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef8, match64: 0x00000000, model64: 0xda670000da6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef9, match64: 0x00000000, model64: 0xda6e0000da75},
		modelTuple{type64: 0x2700000027, matchRI: 0x0efa, match64: 0x00000000, model64: 0xda750000da7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0efb, match64: 0x00000000, model64: 0xda7e0000da83},
		modelTuple{type64: 0x2700000027, matchRI: 0x0efc, match64: 0x00000000, model64: 0xda830000da8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0efd, match64: 0x00000000, model64: 0xda8f0000da9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0efe, match64: 0x00000000, model64: 0xda9a0000daa2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eff, match64: 0x00000000, model64: 0xdaa20000daac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f00, match64: 0x00000000, model64: 0xdaac0000dab4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f01, match64: 0x00000000, model64: 0xdab40000dabe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f02, match64: 0x00000000, model64: 0xdabe0000dac3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f03, match64: 0x00000000, model64: 0xdac30000dacd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f04, match64: 0x00000000, model64: 0xdacd0000dad7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdad70000dadc, model64: 0xdadc0000dae6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdae60000daeb, model64: 0xdaeb0000daf6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdaf60000dafc, model64: 0xdafc0000db06},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f05, match64: 0x00000000, model64: 0xdb060000db10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb100000db15, model64: 0xdb150000db20},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f06, match64: 0x00000000, model64: 0xdb200000db29},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f07, match64: 0x00000000, model64: 0xdb290000db36},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f08, match64: 0x00000000, model64: 0xdb360000db45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb450000db4a, model64: 0xdb4a0000db5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb5c0000db61, model64: 0xdb610000db6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb6d0000db74, model64: 0xdb740000db7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdb7a0000db7f, model64: 0xdb7f0000db88},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f09, match64: 0x00000000, model64: 0xdb880000db8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0a, match64: 0x00000000, model64: 0xdb8f0000db95},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0b, match64: 0x00000000, model64: 0xdb950000db9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0c, match64: 0x00000000, model64: 0xdb9f0000dbb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0d, match64: 0x00000000, model64: 0xdbb30000dbba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0e, match64: 0x00000000, model64: 0xdbba0000dbc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0f, match64: 0x00000000, model64: 0xdbc40000dbce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f10, match64: 0x00000000, model64: 0xdbce0000dbd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f11, match64: 0x00000000, model64: 0xdbd80000dbe2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f12, match64: 0x00000000, model64: 0xdbe20000dbeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f13, match64: 0x00000000, model64: 0xdbeb0000dbf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f14, match64: 0x00000000, model64: 0xdbf50000dbff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f15, match64: 0x00000000, model64: 0xdbff0000dc09},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f16, match64: 0x00000000, model64: 0xdc090000dc0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f17, match64: 0x00000000, model64: 0xdc0e0000dc15},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f18, match64: 0x00000000, model64: 0xdc150000dc1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f19, match64: 0x00000000, model64: 0xdc1c0000dc29},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1a, match64: 0x00000000, model64: 0xdc290000dc32},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1b, match64: 0x00000000, model64: 0xdc320000dc3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1c, match64: 0x00000000, model64: 0xdc3e0000dc4a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0f1d, match64: 0x00000000, model64: 0xdc4a0000dc56},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0f1e, match64: 0x00000000, model64: 0xdc560000dc61},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0f1f, match64: 0x00000000, model64: 0xdc610000dc6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f20, match64: 0x00000000, model64: 0xdc6b0000dc70},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f21, match64: 0x00000000, model64: 0xdc700000dc7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f22, match64: 0x00000000, model64: 0xdc7b0000dc85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f23, match64: 0x00000000, model64: 0xdc850000dc8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f24, match64: 0x00000000, model64: 0xdc8f0000dc99},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f25, match64: 0x00000000, model64: 0xdc990000dca3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f26, match64: 0x00000000, model64: 0xdca30000dcad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f27, match64: 0x00000000, model64: 0xdcad0000dcb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f28, match64: 0x00000000, model64: 0xdcb70000dcc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f29, match64: 0x00000000, model64: 0xdcc30000dcc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2a, match64: 0x00000000, model64: 0xdcc90000dcd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2b, match64: 0x00000000, model64: 0xdcd20000dcdb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2c, match64: 0x00000000, model64: 0xdcdb0000dcdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0f2e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2f, match64: 0x00000000, model64: 0xdcdf0000dced},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f30, match64: 0x00000000, model64: 0xdced0000dcfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f31, match64: 0x00000000, model64: 0xdcfc0000dd0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f32, match64: 0x00000000, model64: 0xdd0c0000dd19},
		modelTuple{type64: 0x2e8000002f5, matchRI: -0x0001, match64: 0xdd190000dd1e, model64: 0xdd1e0000dd23},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f33, match64: 0x00000000, model64: 0xdd230000dd28},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f34, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f35, match64: 0x00000000, model64: 0xdd280000dd2d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd370000dd3f, model64: 0xdd3f0000dd47},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd470000dd4e, model64: 0xdd4e0000dd55},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd550000dd5e, model64: 0xdd550000dd5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd5e0000dd64, model64: 0xdd640000dd6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd6a0000dd73, model64: 0xdd6a0000dd73},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f38, match64: 0x00000000, model64: 0xdd730000dd7d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xdd7d0000dd86, model64: 0xdd860000dd8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3a, match64: 0x00000000, model64: 0xdd940000dda0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3b, match64: 0x00000000, model64: 0xdda00000ddab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f40, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f41, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f43, match64: 0x00000000, model64: 0xddb90000ddcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f44, match64: 0x00000000, model64: 0xddcc0000ddcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f45, match64: 0x00000000, model64: 0xddcf0000ddd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f46, match64: 0x00000000, model64: 0xddd20000ddd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f47, match64: 0x00000000, model64: 0xddd50000ddd8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xddd80000dde1, model64: 0xdde10000dde8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f48, match64: 0x00000000, model64: 0xdde80000ddeb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xddeb0000ddf2, model64: 0xddf20000ddf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f49, match64: 0x00000000, model64: 0xddf50000ddf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4a, match64: 0x00000000, model64: 0xddf80000ddfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4b, match64: 0x00000000, model64: 0xddfb0000ddfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4c, match64: 0x00000000, model64: 0xddfe0000de01},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4d, match64: 0x00000000, model64: 0xde010000de05},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4e, match64: 0x00000000, model64: 0xde050000de08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde080000de12, model64: 0xde120000de1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde1b0000de23, model64: 0x84a3000084aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde230000de2d, model64: 0xde2d0000de33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde330000de3c, model64: 0xde3c0000de4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde4a0000de52, model64: 0xde520000de61},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4f, match64: 0x00000000, model64: 0xde610000de6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f50, match64: 0x00000000, model64: 0xde6a0000de73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde730000de7a, model64: 0xde7a0000de83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde830000de8b, model64: 0xde8b0000de99},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f51, match64: 0x00000000, model64: 0xde990000de9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f52, match64: 0x00000000, model64: 0xde9b0000dea2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f53, match64: 0x00000000, model64: 0xdea20000dea4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f54, match64: 0x00000000, model64: 0xdea40000deac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdeac0000deb4, model64: 0xdeb40000deb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f55, match64: 0x00000000, model64: 0xdeb80000debb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f56, match64: 0x00000000, model64: 0xdebb0000dec2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f57, match64: 0x00000000, model64: 0xdec20000decb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdecb0000ded2, model64: 0xded20000dedb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdedb0000dee2, model64: 0xdee20000dee5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f58, match64: 0x00000000, model64: 0xdee50000dee7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f59, match64: 0x00000000, model64: 0xdee70000deea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5a, match64: 0x00000000, model64: 0xcfb20000cfb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5b, match64: 0x00000000, model64: 0xdeea0000def3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5c, match64: 0x00000000, model64: 0xdef30000def6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdef60000defd, model64: 0xdefd0000df04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf040000df0b, model64: 0xdf0b0000df13},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5d, match64: 0x00000000, model64: 0xa8f00000a91},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5e, match64: 0x00000000, model64: 0xdf130000df18},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5f, match64: 0x00000000, model64: 0xdf180000df1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf1a0000df21, model64: 0xdf210000df27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf270000df2e, model64: 0xdf2e0000df34},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f60, match64: 0x00000000, model64: 0xdf340000df3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f61, match64: 0x00000000, model64: 0xdf3a0000df42},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f62, match64: 0x00000000, model64: 0xdf420000df4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f63, match64: 0x00000000, model64: 0xa5680000a56a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf4c0000df54, model64: 0xdf540000df57},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f64, match64: 0x00000000, model64: 0xdf570000df59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf590000df60, model64: 0xdf600000df69},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf690000df70, model64: 0xdf700000df79},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f65, match64: 0x00000000, model64: 0xdf600000df69},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f66, match64: 0x00000000, model64: 0xdf790000df88},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f67, match64: 0x00000000, model64: 0xdf880000df92},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f68, match64: 0x00000000, model64: 0xdf920000df9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f69, match64: 0x00000000, model64: 0xdf9f0000dfae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6a, match64: 0x00000000, model64: 0xdfae0000dfb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6b, match64: 0x00000000, model64: 0xdfb10000dfb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6c, match64: 0x00000000, model64: 0xdfb40000dfb7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdfb70000dfbe, model64: 0xdfbe0000dfc1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdfc10000dfc7, model64: 0xdfc70000dfd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdfd10000dfd8, model64: 0xdfd80000dfdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6d, match64: 0x00000000, model64: 0xdfdf0000dfe4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdfe40000dfeb, model64: 0xdfeb0000dff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6e, match64: 0x00000000, model64: 0xdff10000dff9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6f, match64: 0x00000000, model64: 0xdff90000e000},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f70, match64: 0x00000000, model64: 0xe0000000e007},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f71, match64: 0x00000000, model64: 0xe0070000e00d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f72, match64: 0x00000000, model64: 0xe00d0000e012},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f73, match64: 0x00000000, model64: 0xc5960000c59a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f74, match64: 0x00000000, model64: 0xe0120000e019},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f75, match64: 0x00000000, model64: 0xe0190000e01d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f76, match64: 0x00000000, model64: 0xe01d0000e022},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe0220000e02b, model64: 0x74f5000074f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f77, match64: 0x00000000, model64: 0xe02b0000e02f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe02f0000e038, model64: 0xe0380000e04a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f78, match64: 0x00000000, model64: 0xe04a0000e04f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f79, match64: 0x00000000, model64: 0xe04f0000e056},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7a, match64: 0x00000000, model64: 0xe0560000e061},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7b, match64: 0x00000000, model64: 0xe0610000e071},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7c, match64: 0x00000000, model64: 0xe0710000e07a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe07a0000e082, model64: 0xe0820000e08c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7d, match64: 0x00000000, model64: 0xe08c0000e09e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7e, match64: 0x00000000, model64: 0xe09e0000e0ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7f, match64: 0x00000000, model64: 0xe0ab0000e0b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f80, match64: 0x00000000, model64: 0xe0b80000e0c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f81, match64: 0x00000000, model64: 0xe0c50000e0d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f82, match64: 0x00000000, model64: 0xe0d70000e0e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f83, match64: 0x00000000, model64: 0xe0e20000e0ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f84, match64: 0x00000000, model64: 0xe0ef0000e0f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f85, match64: 0x00000000, model64: 0xe0f90000e106},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f86, match64: 0x00000000, model64: 0xe1060000e113},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe1130000e11a, model64: 0xe11a0000e124},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f87, match64: 0x00000000, model64: 0xe1240000e12e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f88, match64: 0x00000000, model64: 0xe12e0000e138},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe1380000e140, model64: 0xe1400000e14a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f89, match64: 0x00000000, model64: 0xe14a0000e157},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8a, match64: 0x00000000, model64: 0xe1570000e164},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe1640000e16c, model64: 0xe16c0000e179},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe1790000e180, model64: 0xe1800000e18f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe18f0000e196, model64: 0xe1960000e1a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8b, match64: 0x00000000, model64: 0xe1a00000e1ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8c, match64: 0x00000000, model64: 0xe1ad0000e1bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8d, match64: 0x00000000, model64: 0xe1bf0000e1ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8e, match64: 0x00000000, model64: 0xe1ca0000e1db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8f, match64: 0x00000000, model64: 0xe1db0000e1ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe1ec0000e1f1, model64: 0xe1f10000e205},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f90, match64: 0x00000000, model64: 0xe2050000e208},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f91, match64: 0x00000000, model64: 0xe2080000e215},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f92, match64: 0x00000000, model64: 0xe2150000e21f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe21f0000e227, model64: 0xe2270000e233},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2330000e238, model64: 0xe2380000e240},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2400000e247, model64: 0xe2470000e24f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f93, match64: 0x00000000, model64: 0xe24f0000e257},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f94, match64: 0x00000000, model64: 0xe2570000e264},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f95, match64: 0x00000000, model64: 0xe2640000e266},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f96, match64: 0x00000000, model64: 0xe2660000e269},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f97, match64: 0x00000000, model64: 0xe2690000e26c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f98, match64: 0x00000000, model64: 0xe26c0000e26e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f99, match64: 0x00000000, model64: 0xe26e0000e270},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9a, match64: 0x00000000, model64: 0xe2700000e273},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9b, match64: 0x00000000, model64: 0xe2730000e276},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9c, match64: 0x00000000, model64: 0xe2760000e282},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2820000e28a, model64: 0xe28a0000e293},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9d, match64: 0x00000000, model64: 0xe2930000e298},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9e, match64: 0x00000000, model64: 0xe2980000e29f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9f, match64: 0x00000000, model64: 0xe29f0000e2a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa0, match64: 0x00000000, model64: 0xe2a60000e2af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa1, match64: 0x00000000, model64: 0xe2af0000e2bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa2, match64: 0x00000000, model64: 0xe2bb0000e2c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa3, match64: 0x00000000, model64: 0xe2c20000e2c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa4, match64: 0x00000000, model64: 0xe2c90000e2d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa5, match64: 0x00000000, model64: 0xe2d00000e2dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa6, match64: 0x00000000, model64: 0xe2dc0000e2e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa7, match64: 0x00000000, model64: 0xe2e30000e2ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa8, match64: 0x00000000, model64: 0xe2ea0000e2f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa9, match64: 0x00000000, model64: 0xe2f10000e2f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2f90000e300, model64: 0xe3000000e307},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3070000e310, model64: 0xe3100000e319},
		modelTuple{type64: 0x2700000027, matchRI: 0x0faa, match64: 0x00000000, model64: 0xe3190000e321},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fab, match64: 0x00000000, model64: 0xe3210000e32c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fac, match64: 0x00000000, model64: 0xe32c0000e33c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fad, match64: 0x00000000, model64: 0xe33c0000e34b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fae, match64: 0x00000000, model64: 0xe34b0000e352},
		modelTuple{type64: 0x2700000027, matchRI: 0x0faf, match64: 0x00000000, model64: 0xe3520000e35a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe35a0000e361, model64: 0xe3610000e364},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3640000e36d, model64: 0xe36d0000e370},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb0, match64: 0x00000000, model64: 0xe3700000e373},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3730000e37b, model64: 0xe37b0000e383},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3830000e38b, model64: 0xe38b0000e38c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb1, match64: 0x00000000, model64: 0xe38c0000e38e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb2, match64: 0x00000000, model64: 0xe38e0000e393},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb3, match64: 0x00000000, model64: 0xe3930000e399},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb4, match64: 0x00000000, model64: 0xe3990000e3a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb5, match64: 0x00000000, model64: 0xe3a10000e3a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3a80000e3b0, model64: 0xe3b00000e3b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb6, match64: 0x00000000, model64: 0xe3b60000e3be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb7, match64: 0x00000000, model64: 0xe3be0000e3c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3c70000e3d0, model64: 0xe3d00000e3d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb8, match64: 0x00000000, model64: 0xe3d90000e3db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb9, match64: 0x00000000, model64: 0xe3db0000e3de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fba, match64: 0x00000000, model64: 0xe3de0000e3e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbb, match64: 0x00000000, model64: 0xe3e10000e3e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3e40000e3ec, model64: 0xa2170000a21a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3ec0000e3f5, model64: 0xe3f50000e3f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3f80000e401, model64: 0xe4010000e408},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4080000e412, model64: 0xe4120000e415},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4150000e41e, model64: 0xe41e0000e421},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4210000e428, model64: 0xe4280000e435},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4350000e43c, model64: 0xe43c0000e443},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4430000e44a, model64: 0xe44a0000e44d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbc, match64: 0x00000000, model64: 0xe44d0000e451},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbd, match64: 0x00000000, model64: 0xe4510000e458},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4580000e45f, model64: 0xe4580000e45f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe45f0000e467, model64: 0x74f5000074f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4670000e470, model64: 0xe4700000e474},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4740000e47c, model64: 0xe47c0000e485},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbe, match64: 0x00000000, model64: 0xe4850000e487},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbf, match64: 0x00000000, model64: 0xe4870000e48d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc0, match64: 0x00000000, model64: 0xe48d0000e496},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4960000e49d, model64: 0xe49d0000e4a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc1, match64: 0x00000000, model64: 0xe4a00000e4a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4a40000e4ab, model64: 0xe4ab0000e4af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4af0000e4b6, model64: 0xe4b60000e4b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4b80000e4bf, model64: 0xe4bf0000e4c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc2, match64: 0x00000000, model64: 0xe4c30000e4c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4c60000e4cb, model64: 0xe4cb0000e4d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4d00000e4d5, model64: 0xe4d50000e4d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc3, match64: 0x00000000, model64: 0x6e8300006e85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4d90000e4e2, model64: 0xe4e20000e4e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4e40000e4ec, model64: 0xe4ec0000e4f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc4, match64: 0x00000000, model64: 0xe4f50000e4fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc5, match64: 0x00000000, model64: 0xe4fb0000e503},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc6, match64: 0x00000000, model64: 0xe5030000e50b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc7, match64: 0x00000000, model64: 0xe50b0000e514},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc8, match64: 0x00000000, model64: 0xe5140000e51d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc9, match64: 0x00000000, model64: 0xe51d0000e526},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe5260000e52e, model64: 0xe52e0000e538},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe5380000e540, model64: 0xe5400000e543},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe5430000e54b, model64: 0xe54b0000e551},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fca, match64: 0x00000000, model64: 0xe5510000e554},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcb, match64: 0x00000000, model64: 0xe5540000e55d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe55d0000e567, model64: 0xe5670000e56a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcc, match64: 0x00000000, model64: 0xe56a0000e56f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcd, match64: 0x00000000, model64: 0xe56f0000e573},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fce, match64: 0x00000000, model64: 0xe5730000e57c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcf, match64: 0x00000000, model64: 0xe2050000e208},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd0, match64: 0x00000000, model64: 0xe57c0000e57f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd1, match64: 0x00000000, model64: 0xe57f0000e586},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd2, match64: 0x00000000, model64: 0xe5860000e58e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd3, match64: 0x00000000, model64: 0x411400004117},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd4, match64: 0x00000000, model64: 0xe58e0000e597},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd5, match64: 0x00000000, model64: 0xe5970000e5a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe5a30000e5aa, model64: 0xe5aa0000e5b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd6, match64: 0x00000000, model64: 0xe5b30000e5bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd7, match64: 0x00000000, model64: 0xe5bf0000e5cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd8, match64: 0x00000000, model64: 0xe5cb0000e5ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd9, match64: 0x00000000, model64: 0xe5ce0000e5dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fda, match64: 0x00000000, model64: 0xe5dc0000e5ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdb, match64: 0x00000000, model64: 0xe5ea0000e5ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdc, match64: 0x00000000, model64: 0xe5ec0000e5f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdd, match64: 0x00000000, model64: 0xe5f50000e5f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fde, match64: 0x00000000, model64: 0xe5f70000e5f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe5f90000e600, model64: 0xe56f0000e573},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdf, match64: 0x00000000, model64: 0xe6000000e603},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe0, match64: 0x00000000, model64: 0xe6030000e60d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe1, match64: 0x00000000, model64: 0xdfae0000dfb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe2, match64: 0x00000000, model64: 0xe60d0000e615},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe3, match64: 0x00000000, model64: 0xe6150000e618},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe4, match64: 0x00000000, model64: 0xe3700000e373},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe5, match64: 0x00000000, model64: 0xe6180000e61b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe6, match64: 0x00000000, model64: 0xe61b0000e61e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe7, match64: 0x00000000, model64: 0xe61e0000e621},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe8, match64: 0x00000000, model64: 0xe6210000e625},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe9, match64: 0x00000000, model64: 0xe6250000e628},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fea, match64: 0x00000000, model64: 0xe6280000e62b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0feb, match64: 0x00000000, model64: 0xe62b0000e633},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fec, match64: 0x00000000, model64: 0xe6330000e636},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fed, match64: 0x00000000, model64: 0xe6360000e639},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fee, match64: 0x00000000, model64: 0xe6390000e63c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fef, match64: 0x00000000, model64: 0xe63c0000e63e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe63e0000e645, model64: 0xe4120000e415},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff0, match64: 0x00000000, model64: 0xe6450000e647},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff1, match64: 0x00000000, model64: 0xe6470000e64e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff2, match64: 0x00000000, model64: 0xe64e0000e657},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff3, match64: 0x00000000, model64: 0xe6570000e65e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff4, match64: 0x00000000, model64: 0xe65e0000e667},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff5, match64: 0x00000000, model64: 0x84aa000084b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff6, match64: 0x00000000, model64: 0xe6670000e670},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff7, match64: 0x00000000, model64: 0xe6700000e67a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff8, match64: 0x00000000, model64: 0xe67a0000e687},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff9, match64: 0x00000000, model64: 0xe6870000e690},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffa, match64: 0x00000000, model64: 0xe6900000e69d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffb, match64: 0x00000000, model64: 0xe69d0000e6a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffc, match64: 0x00000000, model64: 0xe6a10000e6ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffd, match64: 0x00000000, model64: 0xe6ac0000e6b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffe, match64: 0x00000000, model64: 0xe6b20000e6bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6bd0000e6c5, model64: 0xe6c50000e6cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fff, match64: 0x00000000, model64: 0xe6cc0000e6d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1000, match64: 0x00000000, model64: 0xe6d30000e6d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6d80000e6dd, model64: 0xe6dd0000e6e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1001, match64: 0x00000000, model64: 0xe6e40000e6eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6eb0000e6f2, model64: 0xe6f20000e6fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6fb0000e700, model64: 0xe7000000e706},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe7060000e70e, model64: 0xe70e0000e715},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe7150000e71c, model64: 0xe71c0000e725},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe7250000e72d, model64: 0xe72d0000e733},
		modelTuple{type64: 0x2700000027, matchRI: 0x1002, match64: 0x00000000, model64: 0xe7330000e73a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1003, match64: 0x00000000, model64: 0xe73a0000e73e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe73e0000e746, model64: 0xe7460000e74f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe74f0000e757, model64: 0xe7570000e766},
		modelTuple{type64: 0x2700000027, matchRI: 0x1004, match64: 0x00000000, model64: 0xe7660000e76e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe76e0000e775, model64: 0xe7750000e77f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1005, match64: 0x00000000, model64: 0xe77f0000e782},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1006, match64: 0x00000000, model64: 0xe7820000e786},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1007, match64: 0x00000000, model64: 0xe7860000e797},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1008, match64: 0x00000000, model64: 0xe7970000e7a5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe7a50000e7ac, model64: 0xe7ac0000e7b9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1009, match64: 0x00000000, model64: 0xe7b90000e7c5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe7c50000e7cc, model64: 0xe7b90000e7c5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x100a, match64: 0x00000000, model64: 0xe7cc0000e7d8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe7d80000e7e0, model64: 0xe7e00000e7ed},
		modelTuple{type64: 0x20d00000213, matchRI: 0x100b, match64: 0x00000000, model64: 0xe7ed0000e7f6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x100c, match64: 0x00000000, model64: 0xe7f60000e804},
		modelTuple{type64: 0x20d00000213, matchRI: 0x100d, match64: 0x00000000, model64: 0xe8040000e80d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe80d0000e814, model64: 0xe8140000e81e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe81e0000e825, model64: 0xe8250000e832},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe8320000e839, model64: 0xe8390000e846},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe8460000e84d, model64: 0xe84d0000e85e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x100e, match64: 0x00000000, model64: 0xe85e0000e86b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x100f, match64: 0x00000000, model64: 0xe86b0000e87d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1010, match64: 0x00000000, model64: 0xe87d0000e894},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe8940000e89c, model64: 0xe89c0000e8b1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe8b10000e8b6, model64: 0xe8b60000e8c3},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe8c30000e8c8, model64: 0xe8c80000e8d3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1011, match64: 0x00000000, model64: 0xe8d30000e8df},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe8df0000e8e6, model64: 0xe8e60000e8f3},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe8f30000e8fa, model64: 0xe8fa0000e90c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1012, match64: 0x00000000, model64: 0xe90c0000e91a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe91a0000e91f, model64: 0xe91f0000e929},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe9290000e92e, model64: 0xe92e0000e938},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1013, match64: 0x00000000, model64: 0xe9380000e940},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1014, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1015, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xe9400000e94b, model64: 0xe94b0000e950},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xe9500000e95b, model64: 0xe9500000e95b},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1016, match64: 0x00000000, model64: 0xe9380000e940},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1017, match64: 0x00000000, model64: 0xe95b0000e962},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0xe9620000e971, model64: 0xe9710000e97d},
		modelTuple{type64: 0x245f00002467, matchRI: 0x1018, match64: 0x00000000, model64: 0xe97d0000e986},
		modelTuple{type64: 0x2700000027, matchRI: 0x1019, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x101a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x101b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x101c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x101d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x101e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x101f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1020, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1021, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1022, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1023, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1024, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9a00000e9ad, model64: 0xe9ad0000e9b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1028, match64: 0x00000000, model64: 0x50a2000050a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9bd0000e9c7, model64: 0xe9c70000e9ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1029, match64: 0x00000000, model64: 0xb22e0000b230},
		modelTuple{type64: 0x2700000027, matchRI: 0x102a, match64: 0x00000000, model64: 0xb1990000b19c},
		modelTuple{type64: 0x2700000027, matchRI: 0x102b, match64: 0x00000000, model64: 0xe9ce0000e9d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x102c, match64: 0x00000000, model64: 0xb1a40000b1ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x102d, match64: 0x00000000, model64: 0xb1b60000b1b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x102e, match64: 0x00000000, model64: 0xb1c80000b1cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x102f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1030, match64: 0x00000000, model64: 0xe9d10000e9d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1031, match64: 0x00000000, model64: 0xe9d90000e9dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1032, match64: 0x00000000, model64: 0xe9dc0000e9e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1033, match64: 0x00000000, model64: 0xd5ff0000d602},
		modelTuple{type64: 0x2700000027, matchRI: 0x1034, match64: 0x00000000, model64: 0xe9e00000e9e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1035, match64: 0x00000000, model64: 0xc4580000c45b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9eb0000e9f2, model64: 0xe9f20000e9f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9f90000ea00, model64: 0xea000000ea07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea070000ea0e, model64: 0xea0e0000ea15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea150000ea1c, model64: 0xea1c0000ea24},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea240000ea2b, model64: 0xea2b0000ea38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea380000ea3f, model64: 0xea3f0000ea46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea460000ea4d, model64: 0xea4d0000ea54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea540000ea5b, model64: 0xea5b0000ea62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea620000ea69, model64: 0xea690000ea70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1037, match64: 0x00000000, model64: 0xea700000ea77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea770000ea7e, model64: 0xea7e0000ea86},
		modelTuple{type64: 0x2700000027, matchRI: 0x1038, match64: 0x00000000, model64: 0xea860000ea8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea8d0000ea94, model64: 0xea940000ea9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea9b0000eaa2, model64: 0xeaa20000eaa9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeaa90000eab0, model64: 0xeab00000eab7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeab70000eabe, model64: 0xeabe0000eac5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeac50000eacc, model64: 0xeacc0000ead2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xead20000ead9, model64: 0xead90000eadf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeadf0000eae6, model64: 0xeae60000eaec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeaec0000eaf3, model64: 0xeaf30000eaf9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeaf90000eb00, model64: 0xeb000000eb07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb070000eb0e, model64: 0xeb0e0000eb14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb140000eb1b, model64: 0xeb1b0000eb22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb220000eb29, model64: 0xeb290000eb31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb310000eb38, model64: 0xeb380000eb40},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb400000eb47, model64: 0xeb470000eb4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb4e0000eb55, model64: 0xeb550000eb5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb5d0000eb64, model64: 0xeb640000eb6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb6d0000eb74, model64: 0xeb740000eb7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb7a0000eb81, model64: 0xeb810000eb88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb880000eb8f, model64: 0xeb8f0000eb96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb960000eb9d, model64: 0xeb9d0000eba3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1039, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x103b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x103c, match64: 0x00000000, model64: 0xebad0000ebb6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xebb60000ebbc, model64: 0xebbc0000ebcc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x103d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xebd20000ebda, model64: 0xebda0000ebdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x103f, match64: 0x00000000, model64: 0xebdc0000ebe4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xebee0000ebfe, model64: 0xebfe0000ec0f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xec0f0000ec1b, model64: 0xec1b0000ec27},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1042, match64: 0x00000000, model64: 0xec270000ec33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec330000ec38, model64: 0xec380000ec43},
		modelTuple{type64: 0x2700000027, matchRI: 0x1043, match64: 0x00000000, model64: 0xec430000ec4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1044, match64: 0x00000000, model64: 0xec430000ec4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1045, match64: 0x00000000, model64: 0xec4b0000ec59},
		modelTuple{type64: 0x2700000027, matchRI: 0x1046, match64: 0x00000000, model64: 0xec590000ec62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1047, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1048, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x104a, match64: 0x00000000, model64: 0xec660000ec73},
		modelTuple{type64: 0x2700000027, matchRI: 0x104b, match64: 0x00000000, model64: 0xec730000ec8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec8a0000ec9b, model64: 0xec9b0000ecab},
		modelTuple{type64: 0x2700000027, matchRI: 0x104c, match64: 0x00000000, model64: 0xecab0000ecb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x104d, match64: 0x00000000, model64: 0xecb70000ecc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x104e, match64: 0x00000000, model64: 0xecc40000eccf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeccf0000ecda, model64: 0xeccf0000ecda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xecda0000ece8, model64: 0xece80000ecf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x104f, match64: 0x00000000, model64: 0xecf70000ed03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1050, match64: 0x00000000, model64: 0xed030000ed0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed0e0000ed17, model64: 0xed170000ed20},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1051, match64: 0x00000000, model64: 0xed200000ed2b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1052, match64: 0x00000000, model64: 0xed2b0000ed37},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1053, match64: 0x00000000, model64: 0xed370000ed40},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1054, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xed400000ed4c, model64: 0xed4c0000ed58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1056, match64: 0x00000000, model64: 0xed5c0000ed63},
		modelTuple{type64: 0x2700000027, matchRI: 0x1057, match64: 0x00000000, model64: 0xed630000ed6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1058, match64: 0x00000000, model64: 0xed6b0000ed74},
		modelTuple{type64: 0x2700000027, matchRI: 0x1059, match64: 0x00000000, model64: 0xed740000ed7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x105a, match64: 0x00000000, model64: 0xed7d0000ed86},
		modelTuple{type64: 0x2700000027, matchRI: 0x105b, match64: 0x00000000, model64: 0xed860000ed8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x105c, match64: 0x00000000, model64: 0xed8d0000ed94},
		modelTuple{type64: 0x2700000027, matchRI: 0x105d, match64: 0x00000000, model64: 0xed940000ed9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x105e, match64: 0x00000000, model64: 0xed9b0000eda3},
		modelTuple{type64: 0x2700000027, matchRI: 0x105f, match64: 0x00000000, model64: 0xeda30000edaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1060, match64: 0x00000000, model64: 0xedaf0000edb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1061, match64: 0x00000000, model64: 0xedb70000edbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1062, match64: 0x00000000, model64: 0xedbe0000edcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1063, match64: 0x00000000, model64: 0xedcb0000edd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1064, match64: 0x00000000, model64: 0xedd40000eddd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1065, match64: 0x00000000, model64: 0xeddd0000edeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1066, match64: 0x00000000, model64: 0xedeb0000edf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1067, match64: 0x00000000, model64: 0x431600004319},
		modelTuple{type64: 0x2700000027, matchRI: 0x1068, match64: 0x00000000, model64: 0xedf30000edf6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xedf60000ee00, model64: 0xee000000ee02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1069, match64: 0x00000000, model64: 0xee020000ee05},
		modelTuple{type64: 0x2700000027, matchRI: 0x106a, match64: 0x00000000, model64: 0xee050000ee0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x106b, match64: 0x00000000, model64: 0xee0c0000ee0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x106c, match64: 0x00000000, model64: 0xee0e0000ee10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xee100000ee19, model64: 0xee190000ee1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x106d, match64: 0x00000000, model64: 0xe38c0000e38e},
		modelTuple{type64: 0x2700000027, matchRI: 0x106e, match64: 0x00000000, model64: 0xee000000ee02},
		modelTuple{type64: 0x2700000027, matchRI: 0x106f, match64: 0x00000000, model64: 0xee0c0000ee0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1070, match64: 0x00000000, model64: 0xee1c0000ee20},
		modelTuple{type64: 0x2700000027, matchRI: 0x1071, match64: 0x00000000, model64: 0xee200000ee22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1072, match64: 0x00000000, model64: 0xee220000ee24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1073, match64: 0x00000000, model64: 0xee240000ee2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1074, match64: 0x00000000, model64: 0xee2c0000ee2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1075, match64: 0x00000000, model64: 0xee2f0000ee32},
		modelTuple{type64: 0x2700000027, matchRI: 0x1076, match64: 0x00000000, model64: 0xee320000ee35},
		modelTuple{type64: 0x2700000027, matchRI: 0x1077, match64: 0x00000000, model64: 0xee350000ee38},
		modelTuple{type64: 0x2700000027, matchRI: 0x1078, match64: 0x00000000, model64: 0xee380000ee3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1079, match64: 0x00000000, model64: 0xee3b0000ee42},
		modelTuple{type64: 0x2700000027, matchRI: 0x107a, match64: 0x00000000, model64: 0xee420000ee49},
		modelTuple{type64: 0x2700000027, matchRI: 0x107b, match64: 0x00000000, model64: 0xee490000ee50},
		modelTuple{type64: 0x2700000027, matchRI: 0x107c, match64: 0x00000000, model64: 0xee500000ee57},
		modelTuple{type64: 0x2700000027, matchRI: 0x107d, match64: 0x00000000, model64: 0xee570000ee5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x107e, match64: 0x00000000, model64: 0xee5e0000ee66},
		modelTuple{type64: 0x2700000027, matchRI: 0x107f, match64: 0x00000000, model64: 0xee660000ee6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1080, match64: 0x00000000, model64: 0xee6d0000ee79},
		modelTuple{type64: 0x2700000027, matchRI: 0x1081, match64: 0x00000000, model64: 0xee790000ee84},
		modelTuple{type64: 0x2700000027, matchRI: 0x1082, match64: 0x00000000, model64: 0xee840000ee87},
		modelTuple{type64: 0x2700000027, matchRI: 0x1083, match64: 0x00000000, model64: 0xee870000ee89},
		modelTuple{type64: 0x2700000027, matchRI: 0x1084, match64: 0x00000000, model64: 0xee890000ee8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xee8c0000ee93, model64: 0xee930000ee9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xee9b0000eea2, model64: 0xeea20000eea9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeea90000eeaf, model64: 0xeeaf0000eeb1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeeb10000eeb7, model64: 0xeeb70000eebe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeebe0000eec4, model64: 0x5f9300005f9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1085, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x1086, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1087, match64: 0x00000000, model64: 0xeec40000eece},
		modelTuple{type64: 0x2e8000002f5, matchRI: -0x0001, match64: 0xeece0000eed9, model64: 0xeed90000eee5},
		modelTuple{type64: 0x2e8000002f5, matchRI: -0x0001, match64: 0xeee50000eeef, model64: 0xeeef0000eef9},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1088, match64: 0x00000000, model64: 0xeef90000ef09},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1089, match64: 0x00000000, model64: 0xef090000ef11},
		modelTuple{type64: 0x20d00000213, matchRI: 0x108a, match64: 0x00000000, model64: 0xef110000ef18},
		modelTuple{type64: 0x20d00000213, matchRI: 0x108b, match64: 0x00000000, model64: 0xef180000ef1c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x108c, match64: 0x00000000, model64: 0xef1c0000ef1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x108d, match64: 0x00000000, model64: 0xef1f0000ef2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x108e, match64: 0x00000000, model64: 0xef2b0000ef32},
		modelTuple{type64: 0x2700000027, matchRI: 0x108f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1090, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef380000ef3e, model64: 0xef3e0000ef49},
		modelTuple{type64: 0x2700000027, matchRI: 0x1092, match64: 0x00000000, model64: 0xef490000ef51},
		modelTuple{type64: 0x2700000027, matchRI: 0x1093, match64: 0x00000000, model64: 0xef510000ef5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1094, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1097, match64: 0x00000000, model64: 0xef650000ef6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1098, match64: 0x00000000, model64: 0xef6d0000ef76},
		modelTuple{type64: 0x2700000027, matchRI: 0x1099, match64: 0x00000000, model64: 0xef760000ef7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x109a, match64: 0x00000000, model64: 0xef7b0000ef83},
		modelTuple{type64: 0x2700000027, matchRI: 0x109b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef830000ef8d, model64: 0xef8d0000ef94},
		modelTuple{type64: 0x2700000027, matchRI: 0x109c, match64: 0x00000000, model64: 0xef940000ef9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x109d, match64: 0x00000000, model64: 0xef9c0000efa7},
		modelTuple{type64: 0x2700000027, matchRI: 0x109e, match64: 0x00000000, model64: 0xefa70000efae},
		modelTuple{type64: 0x2700000027, matchRI: 0x109f, match64: 0x00000000, model64: 0xefae0000efb2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xefb20000efbe, model64: 0x61f0000061f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a0, match64: 0x00000000, model64: 0xefbe0000efc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a1, match64: 0x00000000, model64: 0xefc60000efcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a2, match64: 0x00000000, model64: 0xefc60000efcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a3, match64: 0x00000000, model64: 0xefcc0000efd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a4, match64: 0x00000000, model64: 0xefd10000efd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a5, match64: 0x00000000, model64: 0xefd10000efd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xefe50000efef, model64: 0xefef0000eff9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeff90000f002, model64: 0xf0020000f00b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf00b0000f013, model64: 0xf0130000f018},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0180000f021, model64: 0xf0210000f027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0270000f02f, model64: 0xf02f0000f034},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0340000f03b, model64: 0xf03b0000f03e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf03e0000f04c, model64: 0xf04c0000f057},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0570000f065, model64: 0xf0650000f073},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a8, match64: 0x00000000, model64: 0xf0730000f080},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0800000f08b, model64: 0xf08b0000f093},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0930000f0a1, model64: 0xf0a10000f0ac},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf0ac0000f0b7, model64: 0xf0b70000f0bf},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf0bf0000f0c5, model64: 0xf0c50000f0c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ab, match64: 0x00000000, model64: 0xf0ce0000f0d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0d50000f0dc, model64: 0xf0dc0000f0e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ad, match64: 0x00000000, model64: 0xf0e30000f0ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0ea0000f0f6, model64: 0xf0f60000f102},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1020000f10c, model64: 0xf10c0000f116},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ae, match64: 0x00000000, model64: 0xf1160000f11e},
		modelTuple{type64: 0x2700000027, matchRI: 0x10af, match64: 0x00000000, model64: 0xf11e0000f126},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b0, match64: 0x00000000, model64: 0xf1260000f131},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b1, match64: 0x00000000, model64: 0xf1310000f139},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b2, match64: 0x00000000, model64: 0xf1390000f142},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b3, match64: 0x00000000, model64: 0xf1420000f149},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b4, match64: 0x00000000, model64: 0xf1490000f151},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf1510000f15c, model64: 0xf15c0000f168},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10b7, match64: 0x00000000, model64: 0xf1680000f171},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf1780000f182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ba, match64: 0x00000000, model64: 0xf1890000f193},
		modelTuple{type64: 0x2700000027, matchRI: 0x10bb, match64: 0x00000000, model64: 0xf1930000f1a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x10bd, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xdd280000dd2d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf1ba0000f1c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xa0d50000a0ea, matchRI: -0x0001, match64: 0xf1cc0000f1dd, model64: 0xf1dd0000f1e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1e80000f1ee, model64: 0xf1e80000f1ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x10c5, match64: 0x00000000, model64: 0xf1f40000f1f8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10c6, match64: 0x00000000, model64: 0xf1f80000f205},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10c7, match64: 0x00000000, model64: 0xf2050000f212},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10c8, match64: 0x00000000, model64: 0xf2120000f21f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10c9, match64: 0x00000000, model64: 0xf21f0000f22d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf22d0000f235, model64: 0xf2350000f23a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf23a0000f240, model64: 0xf2400000f24e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ca, match64: 0x00000000, model64: 0xf24e0000f25a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10cb, match64: 0x00000000, model64: 0xf25a0000f261},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10cc, match64: 0x00000000, model64: 0xf2610000f26b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10cd, match64: 0x00000000, model64: 0xf26b0000f276},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf2760000f27e, model64: 0xf27e0000f28a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf28a0000f292, model64: 0xf2920000f298},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ce, match64: 0x00000000, model64: 0xf2980000f2a8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf2a80000f2b0, model64: 0xf2b00000f2bb},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf2bb0000f2c3, model64: 0xf2c30000f2cf},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf2cf0000f2d7, model64: 0xf2d70000f2e7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10cf, match64: 0x00000000, model64: 0xf2e70000f2f2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf2f20000f2fa, model64: 0xf2fa0000f304},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf3040000f311, model64: 0xf3110000f31d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d0, match64: 0x00000000, model64: 0xf31d0000f326},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d1, match64: 0x00000000, model64: 0xf3260000f32f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d2, match64: 0x00000000, model64: 0xf32f0000f335},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d3, match64: 0x00000000, model64: 0xf3350000f340},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d4, match64: 0x00000000, model64: 0xf3400000f347},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d5, match64: 0x00000000, model64: 0xf3470000f34d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf34d0000f355, model64: 0xf3550000f360},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d6, match64: 0x00000000, model64: 0xf3600000f36c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d7, match64: 0x00000000, model64: 0xf36c0000f376},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d8, match64: 0x00000000, model64: 0xf3760000f381},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d9, match64: 0x00000000, model64: 0xf3810000f389},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10da, match64: 0x00000000, model64: 0xf3890000f390},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10db, match64: 0x00000000, model64: 0xf3900000f397},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10dc, match64: 0x00000000, model64: 0xf3970000f39e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10dd, match64: 0x00000000, model64: 0xf39e0000f3a9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10de, match64: 0x00000000, model64: 0xf3a90000f3b0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10df, match64: 0x00000000, model64: 0xf3b00000f3c3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e0, match64: 0x00000000, model64: 0xf3c30000f3d2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e1, match64: 0x00000000, model64: 0xf3d20000f3de},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e2, match64: 0x00000000, model64: 0xf3de0000f3e9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e3, match64: 0x00000000, model64: 0xf3e90000f3fc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e4, match64: 0x00000000, model64: 0xf3fc0000f40b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e5, match64: 0x00000000, model64: 0xf40b0000f419},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e6, match64: 0x00000000, model64: 0xf4190000f41f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e7, match64: 0x00000000, model64: 0xf41f0000f425},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf4250000f42c, model64: 0xf42c0000f43b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e8, match64: 0x00000000, model64: 0xf43b0000f440},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf4400000f447, model64: 0xf4470000f44d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf44d0000f453, model64: 0xf4530000f458},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e9, match64: 0x00000000, model64: 0xf4580000f468},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ea, match64: 0x00000000, model64: 0xf4680000f477},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf4770000f47e, model64: 0xf47e0000f489},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf4890000f497, model64: 0xf4970000f4a1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10eb, match64: 0x00000000, model64: 0xf4a10000f4b5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ec, match64: 0x00000000, model64: 0xf4b50000f4c4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ed, match64: 0x00000000, model64: 0xf3890000f390},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ee, match64: 0x00000000, model64: 0xf4c40000f4ca},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ef, match64: 0x00000000, model64: 0xf4ca0000f4d8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f0, match64: 0x00000000, model64: 0xf4d80000f4e6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f1, match64: 0x00000000, model64: 0xf4e60000f4f7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f2, match64: 0x00000000, model64: 0xf4f70000f50e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f3, match64: 0x00000000, model64: 0xf50e0000f521},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f4, match64: 0x00000000, model64: 0xf5210000f533},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f5, match64: 0x00000000, model64: 0xf5330000f540},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f6, match64: 0x00000000, model64: 0xf5400000f54a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f7, match64: 0x00000000, model64: 0xf54a0000f556},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf5560000f55e, model64: 0xf55e0000f56b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f8, match64: 0x00000000, model64: 0xf56b0000f57a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f9, match64: 0x00000000, model64: 0xf57a0000f588},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10fa, match64: 0x00000000, model64: 0xf5880000f591},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf5910000f599, model64: 0xf5990000f5b5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf5b50000f5bc, model64: 0xf5bc0000f5d6},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf5d60000f5df, model64: 0xf5df0000f5f1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10fb, match64: 0x00000000, model64: 0xf5f10000f5fe},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10fc, match64: 0x00000000, model64: 0xf5fe0000f608},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10fd, match64: 0x00000000, model64: 0xf6080000f61a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10fe, match64: 0x00000000, model64: 0xf61a0000f62b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ff, match64: 0x00000000, model64: 0xf62b0000f636},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1100, match64: 0x00000000, model64: 0xf6360000f63e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf63e0000f646, model64: 0xf6460000f64d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1101, match64: 0x00000000, model64: 0xf64d0000f65a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf65a0000f662, model64: 0xf6620000f66d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf66d0000f675, model64: 0xf3400000f347},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1102, match64: 0x00000000, model64: 0x5dd000005dd3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1103, match64: 0x00000000, model64: 0xf6750000f678},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1104, match64: 0x00000000, model64: 0xf6780000f681},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1105, match64: 0x00000000, model64: 0xf5fe0000f608},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf6810000f689, model64: 0xf6890000f691},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf6910000f699, model64: 0xf57a0000f588},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1106, match64: 0x00000000, model64: 0xf6990000f6a6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1107, match64: 0x00000000, model64: 0xf6a60000f6b2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1108, match64: 0x00000000, model64: 0xf6b20000f6b8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1109, match64: 0x00000000, model64: 0xf6b80000f6c6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x110a, match64: 0x00000000, model64: 0xf6c60000f6d4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x110b, match64: 0x00000000, model64: 0xf6d40000f6de},
		modelTuple{type64: 0x20d00000213, matchRI: 0x110c, match64: 0x00000000, model64: 0xf6de0000f6e9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x110d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6e90000f6ef, model64: 0xf6ef0000f6f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6f90000f6ff, model64: 0xf6ff0000f709},
		modelTuple{type64: 0x2700000027, matchRI: 0x110e, match64: 0x00000000, model64: 0xf7090000f70c},
		modelTuple{type64: 0x2700000027, matchRI: 0x110f, match64: 0x00000000, model64: 0xe5ea0000e5ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1110, match64: 0x00000000, model64: 0x154c0000154e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1111, match64: 0x00000000, model64: 0xf70c0000f70f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1112, match64: 0x00000000, model64: 0x156300001565},
		modelTuple{type64: 0x2700000027, matchRI: 0x1113, match64: 0x00000000, model64: 0xf70f0000f711},
		modelTuple{type64: 0x2700000027, matchRI: 0x1114, match64: 0x00000000, model64: 0xee0c0000ee0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3860000038d, model64: 0x3860000038d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7110000f716, model64: 0xf7160000f71e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1115, match64: 0x00000000, model64: 0xf71e0000f724},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7240000f729, model64: 0xf7290000f733},
		modelTuple{type64: 0x2700000027, matchRI: 0x1116, match64: 0x00000000, model64: 0xf7330000f739},
		modelTuple{type64: 0x2700000027, matchRI: 0x1117, match64: 0x00000000, model64: 0x5e5d00005e5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1118, match64: 0x00000000, model64: 0xf7390000f740},
		modelTuple{type64: 0x2700000027, matchRI: 0x1119, match64: 0x00000000, model64: 0xf7400000f748},
		modelTuple{type64: 0x2700000027, matchRI: 0x111a, match64: 0x00000000, model64: 0xf7480000f74f},
		modelTuple{type64: 0x2700000027, matchRI: 0x111b, match64: 0x00000000, model64: 0xe4b60000e4b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x111c, match64: 0x00000000, model64: 0xf74f0000f756},
		modelTuple{type64: 0x2700000027, matchRI: 0x111d, match64: 0x00000000, model64: 0xf7560000f75c},
		modelTuple{type64: 0x2700000027, matchRI: 0x111e, match64: 0x00000000, model64: 0xf75c0000f764},
		modelTuple{type64: 0x2700000027, matchRI: 0x111f, match64: 0x00000000, model64: 0xf7640000f76b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1120, match64: 0x00000000, model64: 0xf76b0000f772},
		modelTuple{type64: 0x2700000027, matchRI: 0x1121, match64: 0x00000000, model64: 0xe3700000e373},
		modelTuple{type64: 0x2700000027, matchRI: 0x1122, match64: 0x00000000, model64: 0xf7720000f77b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1123, match64: 0x00000000, model64: 0xf77b0000f787},
		modelTuple{type64: 0x2700000027, matchRI: 0x1124, match64: 0x00000000, model64: 0xf7870000f78e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1125, match64: 0x00000000, model64: 0xf78e0000f795},
		modelTuple{type64: 0x2700000027, matchRI: 0x1126, match64: 0x00000000, model64: 0xf7950000f79b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1127, match64: 0x00000000, model64: 0xf79b0000f7a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1128, match64: 0x00000000, model64: 0xf7a20000f7a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1129, match64: 0x00000000, model64: 0xf7a90000f7b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x112a, match64: 0x00000000, model64: 0xf7b50000f7bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x112b, match64: 0x00000000, model64: 0xf7bc0000f7c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x112c, match64: 0x00000000, model64: 0xf7c90000f7d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x112d, match64: 0x00000000, model64: 0xf7d20000f7dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x112e, match64: 0x00000000, model64: 0xf7dc0000f7e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x112f, match64: 0x00000000, model64: 0x90eb000090ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1130, match64: 0x00000000, model64: 0xf7e80000f7ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1131, match64: 0x00000000, model64: 0xe3de0000e3e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1132, match64: 0x00000000, model64: 0x9a9200009a94},
		modelTuple{type64: 0x2700000027, matchRI: 0x1133, match64: 0x00000000, model64: 0xf7ea0000f7ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1134, match64: 0x00000000, model64: 0xf7ed0000f7f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1135, match64: 0x00000000, model64: 0xf7f40000f7fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1136, match64: 0x00000000, model64: 0xf7fc0000f804},
		modelTuple{type64: 0x2700000027, matchRI: 0x1137, match64: 0x00000000, model64: 0xf8040000f811},
		modelTuple{type64: 0x2700000027, matchRI: 0x1138, match64: 0x00000000, model64: 0xf8110000f818},
		modelTuple{type64: 0x2700000027, matchRI: 0x1139, match64: 0x00000000, model64: 0xf8180000f81e},
		modelTuple{type64: 0x2700000027, matchRI: 0x113a, match64: 0x00000000, model64: 0xf81e0000f824},
		modelTuple{type64: 0x2700000027, matchRI: 0x113b, match64: 0x00000000, model64: 0xf8240000f82d},
		modelTuple{type64: 0x2700000027, matchRI: 0x113c, match64: 0x00000000, model64: 0xf82d0000f834},
		modelTuple{type64: 0x2700000027, matchRI: 0x113d, match64: 0x00000000, model64: 0xf8340000f840},
		modelTuple{type64: 0x2700000027, matchRI: 0x113e, match64: 0x00000000, model64: 0xf8400000f843},
		modelTuple{type64: 0x2700000027, matchRI: 0x113f, match64: 0x00000000, model64: 0xf8430000f845},
		modelTuple{type64: 0x2700000027, matchRI: 0x1140, match64: 0x00000000, model64: 0xf8450000f84b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1141, match64: 0x00000000, model64: 0xf84b0000f851},
		modelTuple{type64: 0x2700000027, matchRI: 0x1142, match64: 0x00000000, model64: 0xf8510000f85a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1143, match64: 0x00000000, model64: 0xf85a0000f862},
		modelTuple{type64: 0x2700000027, matchRI: 0x1144, match64: 0x00000000, model64: 0x906c00009072},
		modelTuple{type64: 0x2700000027, matchRI: 0x1145, match64: 0x00000000, model64: 0xf8620000f86b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1146, match64: 0x00000000, model64: 0x151f00001521},
		modelTuple{type64: 0x2700000027, matchRI: 0x1147, match64: 0x00000000, model64: 0xf86b0000f871},
		modelTuple{type64: 0x2700000027, matchRI: 0x1148, match64: 0x00000000, model64: 0xf8710000f875},
		modelTuple{type64: 0x2700000027, matchRI: 0x1149, match64: 0x00000000, model64: 0xf8750000f87e},
		modelTuple{type64: 0x2700000027, matchRI: 0x114a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x114b, match64: 0x00000000, model64: 0xf87e0000f888},
		modelTuple{type64: 0x20d00000213, matchRI: 0x114c, match64: 0x00000000, model64: 0xf8880000f898},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8980000f8a0, model64: 0xf8a00000f8a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8a30000f8ab, model64: 0xf8ab0000f8b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8b00000f8be, model64: 0xf8be0000f8c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x114d, match64: 0x00000000, model64: 0xe38c0000e38e},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0xf8c50000f8cd, model64: 0xf8cd0000f8d8},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x114e, match64: 0x00000000, model64: 0xf8d80000f8ea},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x114f, match64: 0x00000000, model64: 0xf8ea0000f8fc},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x1150, match64: 0x00000000, model64: 0xf8fc0000f90b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x1151, match64: 0x00000000, model64: 0xf90b0000f920},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1152, match64: 0x00000000, model64: 0xd0000000d06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1153, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1154, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9260000f92f, model64: 0xf92f0000f939},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9390000f943, model64: 0xf9430000f94e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf94e0000f957, model64: 0xf9570000f963},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9630000f970, model64: 0xf9630000f970},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1156, match64: 0x00000000, model64: 0xf9700000f97c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1157, match64: 0x00000000, model64: 0xf97c0000f985},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf9850000f98d, model64: 0xf98d0000f999},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1159, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9a00000f9a5, model64: 0xf9a00000f9a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x115a, match64: 0x00000000, model64: 0xf9a50000f9ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x115b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf9b10000f9b9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x115e, match64: 0x00000000, model64: 0x431600004319},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9bf0000f9c3, model64: 0xf9c30000f9c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9c70000f9cb, model64: 0xf9cb0000f9d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9d00000f9d4, model64: 0xf9d40000f9db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9db0000f9df, model64: 0xf9df0000f9e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9e50000f9ee, model64: 0xf9ee0000f9f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9f70000f9fb, model64: 0xf9fb0000fa03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa030000fa07, model64: 0xfa070000fa0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa0d0000fa11, model64: 0xfa110000fa18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa180000fa1c, model64: 0xfa1c0000fa21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa210000fa25, model64: 0xfa250000fa2c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x115f, match64: 0x00000000, model64: 0xfa2c0000fa35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa350000fa40, model64: 0xfa400000fa4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1160, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa530000fa5b, model64: 0xfa5b0000fa6c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa6c0000fa74, model64: 0xfa740000fa7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa7a0000fa82, model64: 0xfa820000fa91},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa910000fa99, model64: 0xfa990000faa4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfaa40000faac, model64: 0xfaac0000fab9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfab90000fac1, model64: 0xfac10000fada},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfada0000fae2, model64: 0xfae20000faf1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfaf10000faf9, model64: 0xfaf90000fb03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb030000fb0b, model64: 0xfb0b0000fb18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb180000fb20, model64: 0xfb200000fb2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1162, match64: 0x00000000, model64: 0xfb2f0000fb3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb3b0000fb43, model64: 0xfb430000fb51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb510000fb59, model64: 0xfb590000fb65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb650000fb6d, model64: 0xfb6d0000fb7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb7c0000fb84, model64: 0xfb840000fb95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb950000fb9d, model64: 0xfb9d0000fba6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfba60000fbb0, model64: 0xfbb00000fbbd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfbbd0000fbc7, model64: 0xfbc70000fbdc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfbdc0000fbe6, model64: 0xfbe60000fbf2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfbf20000fbfc, model64: 0xfbfc0000fc16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfc160000fc1e, model64: 0xfc1e0000fc24},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfc240000fc2c, model64: 0xfc2c0000fc34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1163, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3860000038d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1167, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1168, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xfc5f0000fc64},
		modelTuple{type64: 0x2700000027, matchRI: 0x116b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x116c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xfc6f0000fc78},
		modelTuple{type64: 0x2700000027, matchRI: 0x116f, match64: 0x00000000, model64: 0xfc7d0000fc85},
		modelTuple{type64: 0x2700000027, matchRI: 0x1170, match64: 0x00000000, model64: 0x432900004330},
		modelTuple{type64: 0x2700000027, matchRI: 0x1171, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1172, match64: 0x00000000, model64: 0xfc850000fc8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1173, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1174, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1176, match64: 0x00000000, model64: 0xfc9e0000fcaa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfcaa0000fcb7, model64: 0xfcaa0000fcb7},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xfcb70000fcc5, model64: 0xfcb70000fcc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1178, match64: 0x00000000, model64: 0xfccc0000fcd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1179, match64: 0x00000000, model64: 0xfcd50000fce1},
		modelTuple{type64: 0x2700000027, matchRI: 0x117a, match64: 0x00000000, model64: 0xfce10000fcf3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfcf30000fd09, model64: 0xfd090000fd17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfd170000fd20, model64: 0xfd200000fd2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x117b, match64: 0x00000000, model64: 0xfd2a0000fd3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfd3b0000fd4c, model64: 0xfd4c0000fd5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfd5e0000fd67, model64: 0xfd670000fd76},
		modelTuple{type64: 0x2700000027, matchRI: 0x117c, match64: 0x00000000, model64: 0xfd760000fd83},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x117d, match64: 0x00000000, model64: 0xfd830000fd8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x117e, match64: 0x00000000, model64: 0xfd8b0000fd97},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x117f, match64: 0x00000000, model64: 0xfd970000fda1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1180, match64: 0x00000000, model64: 0xfda10000fdaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1181, match64: 0x00000000, model64: 0xfda10000fdaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1182, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfdaf0000fdb8, model64: 0xfdaf0000fdb8},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1183, match64: 0x00000000, model64: 0xfdb80000fdc0},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1184, match64: 0x00000000, model64: 0xfdc00000fdce},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1185, match64: 0x00000000, model64: 0xfdce0000fdd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1186, match64: 0x00000000, model64: 0xfdd70000fde4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1187, match64: 0x00000000, model64: 0xfde40000fded},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xfded0000fdf4, model64: 0xfded0000fdf4},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xfdf40000fdfb, model64: 0xfdf40000fdfb},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xfdfb0000fe03, model64: 0xfdfb0000fe03},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xfe030000fe0b, model64: 0xfe030000fe0b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1188, match64: 0x00000000, model64: 0xfe0b0000fe15},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1189, match64: 0x00000000, model64: 0xfe150000fe1d},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x118a, match64: 0x00000000, model64: 0xfe1d0000fe25},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x118b, match64: 0x00000000, model64: 0xfe250000fe2f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x118c, match64: 0x00000000, model64: 0xfe2f0000fe36},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x118d, match64: 0x00000000, model64: 0xfe360000fe3f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x118e, match64: 0x00000000, model64: 0xfe3f0000fe46},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x118f, match64: 0x00000000, model64: 0xfe460000fe4f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1190, match64: 0x00000000, model64: 0xfe4f0000fe55},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xfe550000fe5c, model64: 0xfe550000fe5c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1191, match64: 0x00000000, model64: 0xfe5c0000fe62},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1192, match64: 0x00000000, model64: 0xfe620000fe6a},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1193, match64: 0x00000000, model64: 0xfe6a0000fe76},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1194, match64: 0x00000000, model64: 0xfe760000fe7f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1195, match64: 0x00000000, model64: 0xfe7f0000fe88},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1196, match64: 0x00000000, model64: 0xfe880000fe8f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1197, match64: 0x00000000, model64: 0xfe8f0000fe9b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1198, match64: 0x00000000, model64: 0xfe9b0000fea3},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1199, match64: 0x00000000, model64: 0xfe1d0000fe25},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xfea30000feaf, model64: 0xfeaf0000febc},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xfebc0000fec6, model64: 0xfec60000fed1},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x119a, match64: 0x00000000, model64: 0xfed10000fed6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x119f, match64: 0x00000000, model64: 0x47480000474e},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a0, match64: 0x00000000, model64: 0xfeee0000fef5},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a1, match64: 0x00000000, model64: 0xfef50000fef8},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a2, match64: 0x00000000, model64: 0xfef80000feff},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a8, match64: 0x00000000, model64: 0x46b5000046bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff0f0000ff15, model64: 0xff150000ff1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a9, match64: 0x00000000, model64: 0xff1c0000ff22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff220000ff2b, model64: 0xff2b0000ff35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff3b0000ff42, model64: 0xff420000ff49},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ab, match64: 0x00000000, model64: 0xff490000ff52},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ac, match64: 0x00000000, model64: 0xff520000ff5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ad, match64: 0x00000000, model64: 0xff5c0000ff65},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ae, match64: 0x00000000, model64: 0xff650000ff6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff6f0000ff73, model64: 0xff730000ff78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff780000ff7e, model64: 0xff780000ff7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff7e0000ff84, model64: 0xff7e0000ff84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff840000ff89, model64: 0xff890000ff8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x11af, match64: 0x00000000, model64: 0xff8f0000ff98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff9e0000ffa7, model64: 0xffa70000ffac},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11b1, match64: 0x00000000, model64: 0xffac0000ffb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x5db000005e5, matchRI: -0x0001, match64: 0xffbd0000ffc4, model64: 0xffc40000ffca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffcf0000ffd5, model64: 0xcfb20000cfb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffd50000ffdb, model64: 0xffdb0000ffdf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffdf0000ffe5, model64: 0xffe50000ffea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffea0000fff0, model64: 0xfff00000fff7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfff70000fffd, model64: 0xfffd00010006},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100060001000c, model64: 0x1000c00010010},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1001000010016, model64: 0x100160001001e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1001e00010024, model64: 0xe2930000e298},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100240001002a, model64: 0x1002a00010033},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1003300010039, model64: 0x100390001003d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1003d00010043, model64: 0x100430001004f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1004f00010055, model64: 0x100550001005a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1005a00010060, model64: 0x1006000010067},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100670001006d, model64: 0x1006d00010072},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100720001007a, model64: 0x1007a00010081},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1008100010088, model64: 0x100880001008f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1008f00010095, model64: 0x10095000100a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100a0000100a6, model64: 0xbd710000bd77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100a6000100ac, model64: 0x100ac000100b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100b5000100bd, model64: 0x100bd000100c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100c1000100c7, model64: 0x100c7000100cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b5, match64: 0x00000000, model64: 0x100cf000100d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100d8000100de, model64: 0x100de000100e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b6, match64: 0x00000000, model64: 0x100e6000100e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b7, match64: 0x00000000, model64: 0xedf30000edf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100ee000100f3, model64: 0x100f3000100fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ba, match64: 0x00000000, model64: 0x100fd00010108},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x11bb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c0, match64: 0x00000000, model64: 0x1011c00010123},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x101230001012b, model64: 0x101230001012b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1012b00010134, model64: 0x1012b00010134},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c1, match64: 0x00000000, model64: 0x1013400010139},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c2, match64: 0x00000000, model64: 0x19b2000019b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ca, match64: 0x00000000, model64: 0x1014800010156},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ce, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d0, match64: 0x00000000, model64: 0x101640001016c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d5, match64: 0x00000000, model64: 0x1017400010180},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d6, match64: 0x00000000, model64: 0x101800001018a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d7, match64: 0x00000000, model64: 0x1018a00010195},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11d8, match64: 0x00000000, model64: 0x101950001019d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11d9, match64: 0x00000000, model64: 0x1019d000101ab},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11da, match64: 0x00000000, model64: 0x101ab000101ba},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11db, match64: 0x00000000, model64: 0x101ba000101c4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11dc, match64: 0x00000000, model64: 0x101c4000101d5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11dd, match64: 0x00000000, model64: 0x101d5000101e5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11de, match64: 0x00000000, model64: 0x101e5000101f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x11df, match64: 0x00000000, model64: 0x101f4000101fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e0, match64: 0x00000000, model64: 0x101fc0001020b},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e1, match64: 0x00000000, model64: 0x1020b00010218},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e2, match64: 0x00000000, model64: 0x1021800010220},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e3, match64: 0x00000000, model64: 0x1022000010228},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e4, match64: 0x00000000, model64: 0x1022800010233},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e5, match64: 0x00000000, model64: 0x102330001023f},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e6, match64: 0x00000000, model64: 0x1023f0001024b},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e7, match64: 0x00000000, model64: 0x1024b0001025a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e8, match64: 0x00000000, model64: 0x1025a00010264},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e9, match64: 0x00000000, model64: 0x102640001026c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ea, match64: 0x00000000, model64: 0x1026c0001027f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11eb, match64: 0x00000000, model64: 0x1027f00010289},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11ec, match64: 0x00000000, model64: 0x1028900010295},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11ed, match64: 0x00000000, model64: 0x10295000102a3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11ee, match64: 0x00000000, model64: 0x102a3000102a9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11ef, match64: 0x00000000, model64: 0x102a9000102b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f0, match64: 0x00000000, model64: 0x102b2000102c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f1, match64: 0x00000000, model64: 0x102c0000102cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f2, match64: 0x00000000, model64: 0x102cb000102d3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11f3, match64: 0x00000000, model64: 0x102d3000102db},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11f4, match64: 0x00000000, model64: 0x102db000102ea},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11f5, match64: 0x00000000, model64: 0x102ea000102f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f6, match64: 0x00000000, model64: 0x102f2000102fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f7, match64: 0x00000000, model64: 0x102fa000102fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f8, match64: 0x00000000, model64: 0x102fc00010305},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f9, match64: 0x00000000, model64: 0x103050001030a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fa, match64: 0x00000000, model64: 0x1030a00010313},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fb, match64: 0x00000000, model64: 0x1031300010319},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fc, match64: 0x00000000, model64: 0x1031900010322},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fd, match64: 0x00000000, model64: 0x1032200010329},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fe, match64: 0x00000000, model64: 0x1032900010330},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11ff, match64: 0x00000000, model64: 0x103300001033d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1200, match64: 0x00000000, model64: 0x1033d00010345},
		modelTuple{type64: 0x2700000027, matchRI: 0x1201, match64: 0x00000000, model64: 0x807a00008084},
		modelTuple{type64: 0x2700000027, matchRI: 0x1202, match64: 0x00000000, model64: 0x103450001034c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1203, match64: 0x00000000, model64: 0x1034c00010351},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1204, match64: 0x00000000, model64: 0x1035100010359},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1205, match64: 0x00000000, model64: 0x1035900010363},
		modelTuple{type64: 0x2700000027, matchRI: 0x1206, match64: 0x00000000, model64: 0x1036300010368},
		modelTuple{type64: 0x2700000027, matchRI: 0x1207, match64: 0x00000000, model64: 0x94f4000094f9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1208, match64: 0x00000000, model64: 0x1036800010371},
		modelTuple{type64: 0x2700000027, matchRI: 0x1209, match64: 0x00000000, model64: 0x1037100010376},
		modelTuple{type64: 0x2700000027, matchRI: 0x120a, match64: 0x00000000, model64: 0x103760001037d},
		modelTuple{type64: 0x2700000027, matchRI: 0x120b, match64: 0x00000000, model64: 0x1037d00010385},
		modelTuple{type64: 0x2700000027, matchRI: 0x120c, match64: 0x00000000, model64: 0x103850001038b},
		modelTuple{type64: 0x2700000027, matchRI: 0x120d, match64: 0x00000000, model64: 0x1038b0001039a},
		modelTuple{type64: 0x2700000027, matchRI: 0x120e, match64: 0x00000000, model64: 0x1039a000103ae},
		modelTuple{type64: 0x20d00000213, matchRI: 0x120f, match64: 0x00000000, model64: 0x103ae000103bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1210, match64: 0x00000000, model64: 0x103bf000103c5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1214, match64: 0x00000000, model64: 0x103d2000103da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4c50000a4d1, model64: 0xa4c50000a4d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x103dd000103e8, model64: 0x103dd000103e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1216, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1217, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1218, match64: 0x00000000, model64: 0x103e8000103f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1219, match64: 0x00000000, model64: 0x103f500010404},
		modelTuple{type64: 0x2700000027, matchRI: 0x121a, match64: 0x00000000, model64: 0x1040400010413},
		modelTuple{type64: 0x2700000027, matchRI: 0x121b, match64: 0x00000000, model64: 0x1041300010421},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104210001042b, model64: 0x1042b00010435},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1043500010440, model64: 0x104400001044b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1044b00010454, model64: 0x1044b00010454},
		modelTuple{type64: 0x2700000027, matchRI: 0x121c, match64: 0x00000000, model64: 0x1045400010460},
		modelTuple{type64: 0x2700000027, matchRI: 0x121d, match64: 0x00000000, model64: 0x104600001046f},
		modelTuple{type64: 0x2700000027, matchRI: 0x121e, match64: 0x00000000, model64: 0x1046f0001047c},
		modelTuple{type64: 0x2700000027, matchRI: 0x121f, match64: 0x00000000, model64: 0x1047c0001048a},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1220, match64: 0x00000000, model64: 0x1048a00010497},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1221, match64: 0x00000000, model64: 0x104970001049c},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1049c000104a4, model64: 0x104a4000104b6},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1222, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1224, match64: 0x00000000, model64: 0x104b9000104c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1225, match64: 0x00000000, model64: 0x104c1000104cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104cd000104d7, model64: 0x104d7000104e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1226, match64: 0x00000000, model64: 0x104e1000104ee},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x104ee000104f7, model64: 0x104f7000104fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1227, match64: 0x00000000, model64: 0x104fd00010503},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1050f00010518},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1051e00010528},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1052c00010535, model64: 0x105350001053f},
		modelTuple{type64: 0x2700000027, matchRI: 0x122a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105470001054d, model64: 0x1054d00010554},
		modelTuple{type64: 0x2700000027, matchRI: 0x122c, match64: 0x00000000, model64: 0x1055400010559},
		modelTuple{type64: 0x2700000027, matchRI: 0x122e, match64: 0x00000000, model64: 0x1055f00010567},
		modelTuple{type64: 0x2700000027, matchRI: 0x122f, match64: 0x00000000, model64: 0x1056700010572},
		modelTuple{type64: 0x2700000027, matchRI: 0x1231, match64: 0x00000000, model64: 0x1057a0001057e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1232, match64: 0x00000000, model64: 0x1057e00010581},
		modelTuple{type64: 0x2700000027, matchRI: 0x1233, match64: 0x00000000, model64: 0x105810001058d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1234, match64: 0x00000000, model64: 0x1058d00010595},
		modelTuple{type64: 0x2700000027, matchRI: 0x1235, match64: 0x00000000, model64: 0x105950001059d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1236, match64: 0x00000000, model64: 0x1059d000105a7},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x105a7000105ae, model64: 0x105ae000105ba},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x105ba000105c1, model64: 0x105c1000105c8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1237, match64: 0x00000000, model64: 0x105c8000105cd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1238, match64: 0x00000000, model64: 0x105c8000105cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1239, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x123a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x123b, match64: 0x00000000, model64: 0x105cd000105d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x123c, match64: 0x00000000, model64: 0x105cd000105d5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1240, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1241, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1243, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105f4000105fc, model64: 0x105fc00010604},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106040001060c, model64: 0x1060c00010614},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106140001061c, model64: 0x1061c00010622},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106220001062a, model64: 0x1062a00010631},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1063100010639, model64: 0x1063900010644},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106440001064c, model64: 0x1064c00010653},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106530001065b, model64: 0x1065b00010662},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106620001066a, model64: 0x1066a00010675},
		modelTuple{type64: 0x2700000027, matchRI: 0x1244, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1248, match64: 0x00000000, model64: 0x106860001068b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1249, match64: 0x00000000, model64: 0x106860001068b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x124c, match64: 0x00000000, model64: 0x106970001069c},
		modelTuple{type64: 0x2700000027, matchRI: 0x124d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x124f, match64: 0x00000000, model64: 0x106a3000106af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1250, match64: 0x00000000, model64: 0x106af000106b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1251, match64: 0x00000000, model64: 0x106b6000106bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1252, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1253, match64: 0x00000000, model64: 0x106bb000106c4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1254, match64: 0x00000000, model64: 0x106c4000106cf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1255, match64: 0x00000000, model64: 0x106cf000106d8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x106d8000106e2, model64: 0x106e2000106ee},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1256, match64: 0x00000000, model64: 0x106ee000106f9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1257, match64: 0x00000000, model64: 0x405c00004062},
		modelTuple{type64: 0x2700000027, matchRI: 0x1258, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x107010001070f},
		modelTuple{type64: 0x2700000027, matchRI: 0x125b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x125c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1072a00010738, model64: 0x107380001073f},
		modelTuple{type64: 0x2700000027, matchRI: 0x125f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1260, match64: 0x00000000, model64: 0x1073f00010746},
		modelTuple{type64: 0x2700000027, matchRI: 0x1262, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x1263, match64: 0x00000000, model64: 0x1074c00010755},
		modelTuple{type64: 0x2700000027, matchRI: 0x1264, match64: 0x00000000, model64: 0x1075500010759},
		modelTuple{type64: 0x2700000027, matchRI: 0x1265, match64: 0x00000000, model64: 0x107590001075f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1075f0001076b, model64: 0x1075f0001076b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1268, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1269, match64: 0x00000000, model64: 0x1077900010780},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1078000010788, model64: 0x1078000010788},
		modelTuple{type64: 0x20d00000213, matchRI: 0x126a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x126c, match64: 0x00000000, model64: 0x1078f00010794},
		modelTuple{type64: 0x2700000027, matchRI: 0x126d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x126e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1270, match64: 0x00000000, model64: 0x1079b000107a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1271, match64: 0x00000000, model64: 0x107a8000107b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x107b5000107c3, model64: 0x107c3000107d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x107d1000107dc, model64: 0x107dc000107e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1272, match64: 0x00000000, model64: 0x107e7000107ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1273, match64: 0x00000000, model64: 0x107ef000107f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x107f800010801, model64: 0x107f800010801},
		modelTuple{type64: 0x2700000027, matchRI: 0x1274, match64: 0x00000000, model64: 0x1080100010809},
		modelTuple{type64: 0x2700000027, matchRI: 0x1275, match64: 0x00000000, model64: 0x1080900010814},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1081400010820, model64: 0x1081400010820},
		modelTuple{type64: 0x2700000027, matchRI: 0x1276, match64: 0x00000000, model64: 0x1082000010828},
		modelTuple{type64: 0x2700000027, matchRI: 0x1277, match64: 0x00000000, model64: 0x1082800010830},
		modelTuple{type64: 0x2700000027, matchRI: 0x1278, match64: 0x00000000, model64: 0x108300001083d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1083d00010847, model64: 0x1084700010851},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1085100010857, model64: 0x108570001085e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1279, match64: 0x00000000, model64: 0x1085e0001086e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1086e0001087d, model64: 0x1087d0001088c},
		modelTuple{type64: 0x2700000027, matchRI: 0x127b, match64: 0x00000000, model64: 0x1089000010897},
		modelTuple{type64: 0x2700000027, matchRI: 0x127c, match64: 0x00000000, model64: 0x31c00000321},
		modelTuple{type64: 0x2700000027, matchRI: 0x127d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x127f, match64: 0x00000000, model64: 0x108a1000108a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1281, match64: 0x00000000, model64: 0x108ac000108c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1282, match64: 0x00000000, model64: 0x108c1000108c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1283, match64: 0x00000000, model64: 0x108c6000108d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1284, match64: 0x00000000, model64: 0x108d4000108df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x108df000108e6, model64: 0x108e6000108fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x108fe00010905, model64: 0x109050001091d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1091d00010924, model64: 0x109240001093c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1285, match64: 0x00000000, model64: 0x1093c00010954},
		modelTuple{type64: 0x2700000027, matchRI: 0x1286, match64: 0x00000000, model64: 0x109540001096e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1096e00010973, model64: 0x1097300010988},
		modelTuple{type64: 0x2700000027, matchRI: 0x1288, match64: 0x00000000, model64: 0x1098e00010995},
		modelTuple{type64: 0x2700000027, matchRI: 0x1289, match64: 0x00000000, model64: 0x109950001099f},
		modelTuple{type64: 0x2700000027, matchRI: 0x128a, match64: 0x00000000, model64: 0x1099f000109a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x128b, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x128c, match64: 0x00000000, model64: 0x109a6000109ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x128d, match64: 0x00000000, model64: 0x109ad000109b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x128e, match64: 0x00000000, model64: 0x109b6000109c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x128f, match64: 0x00000000, model64: 0x109c2000109cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1290, match64: 0x00000000, model64: 0x109cd000109d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1291, match64: 0x00000000, model64: 0x109d7000109e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1292, match64: 0x00000000, model64: 0x109e3000109ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1293, match64: 0x00000000, model64: 0x109ea000109f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1294, match64: 0x00000000, model64: 0xd1420000d145},
		modelTuple{type64: 0x2700000027, matchRI: 0x1295, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1297, match64: 0x00000000, model64: 0x109f900010a08},
		modelTuple{type64: 0x2700000027, matchRI: 0x1298, match64: 0x00000000, model64: 0x10a0800010a1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1299, match64: 0x00000000, model64: 0x10a1a00010a29},
		modelTuple{type64: 0x2700000027, matchRI: 0x129a, match64: 0x00000000, model64: 0x10a2900010a3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x129b, match64: 0x00000000, model64: 0x10a3d00010a51},
		modelTuple{type64: 0x2700000027, matchRI: 0x129c, match64: 0x00000000, model64: 0x10a5100010a62},
		modelTuple{type64: 0x2700000027, matchRI: 0x129d, match64: 0x00000000, model64: 0x10a6200010a72},
		modelTuple{type64: 0x2700000027, matchRI: 0x129e, match64: 0x00000000, model64: 0x10a7200010a82},
		modelTuple{type64: 0x2700000027, matchRI: 0x129f, match64: 0x00000000, model64: 0x10a8200010a92},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a0, match64: 0x00000000, model64: 0x10a9200010aa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a1, match64: 0x00000000, model64: 0x10aa500010ab5},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a2, match64: 0x00000000, model64: 0x10ab500010ac5},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a3, match64: 0x00000000, model64: 0x10ac500010ad8},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a4, match64: 0x00000000, model64: 0x10ad800010ae6},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a5, match64: 0x00000000, model64: 0x10ae600010af8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10af800010b02, model64: 0x10b0200010b13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b1300010b1d, model64: 0x10b1d00010b33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b3300010b37, model64: 0x10b3700010b4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a6, match64: 0x00000000, model64: 0x10b4a00010b5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a7, match64: 0x00000000, model64: 0x10b5c00010b6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a8, match64: 0x00000000, model64: 0x10b6d00010b81},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a9, match64: 0x00000000, model64: 0x10b8100010b91},
		modelTuple{type64: 0x2700000027, matchRI: 0x12aa, match64: 0x00000000, model64: 0x10b9100010ba4},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ab, match64: 0x00000000, model64: 0x10ba400010bb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ac, match64: 0x00000000, model64: 0x10bb700010bc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ad, match64: 0x00000000, model64: 0x10bc800010bdb},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ae, match64: 0x00000000, model64: 0x10bdb00010bf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x12af, match64: 0x00000000, model64: 0x10bf200010c06},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b0, match64: 0x00000000, model64: 0x10c0600010c1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b1, match64: 0x00000000, model64: 0x10c1a00010c2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b2, match64: 0x00000000, model64: 0x10c2b00010c41},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b3, match64: 0x00000000, model64: 0x10c4100010c58},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b4, match64: 0x00000000, model64: 0x10c5800010c6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b5, match64: 0x00000000, model64: 0x10c6d00010c85},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b6, match64: 0x00000000, model64: 0x10c8500010c9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b7, match64: 0x00000000, model64: 0x10c9f00010cb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b8, match64: 0x00000000, model64: 0x10cb600010cd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b9, match64: 0x00000000, model64: 0x10cd200010ced},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ba, match64: 0x00000000, model64: 0x10ced00010d04},
		modelTuple{type64: 0x2700000027, matchRI: 0x12bb, match64: 0x00000000, model64: 0x10d0400010d13},
		modelTuple{type64: 0x2700000027, matchRI: 0x12bc, match64: 0x00000000, model64: 0x10d1300010d23},
		modelTuple{type64: 0x2700000027, matchRI: 0x12bd, match64: 0x00000000, model64: 0x10d2300010d2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x12be, match64: 0x00000000, model64: 0x10d2f00010d3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x12bf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12c0, match64: 0x00000000, model64: 0x10d3a00010d4e},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12c1, match64: 0x00000000, model64: 0x10d4e00010d61},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12c2, match64: 0x00000000, model64: 0x10d6100010d75},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12c3, match64: 0x00000000, model64: 0x10d7500010d86},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12c4, match64: 0x00000000, model64: 0x10d8600010d97},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12c5, match64: 0x00000000, model64: 0x10d9700010da8},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12c6, match64: 0x00000000, model64: 0x10da800010db9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12c7, match64: 0x00000000, model64: 0x10db900010dca},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12c8, match64: 0x00000000, model64: 0x10dca00010ddb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12c9, match64: 0x00000000, model64: 0x10ddb00010dec},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12ca, match64: 0x00000000, model64: 0x10dec00010dfd},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12cb, match64: 0x00000000, model64: 0x10dfd00010e0f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12cc, match64: 0x00000000, model64: 0x10e0f00010e1e},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12cd, match64: 0x00000000, model64: 0x10e1e00010e2f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12ce, match64: 0x00000000, model64: 0x10e2f00010e40},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12cf, match64: 0x00000000, model64: 0x10e4000010e4f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12d0, match64: 0x00000000, model64: 0x10e4f00010e60},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12d1, match64: 0x00000000, model64: 0x10e6000010e70},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12d2, match64: 0x00000000, model64: 0x10e7000010e80},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12d3, match64: 0x00000000, model64: 0x10e6000010e70},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12d4, match64: 0x00000000, model64: 0x10e4000010e4f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12d5, match64: 0x00000000, model64: 0x10e4000010e4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d6, match64: 0x00000000, model64: 0x10e8000010e8b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x12d8, match64: 0x00000000, model64: 0x10e9100010e9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d9, match64: 0x00000000, model64: 0x10e9b00010ea2},
		modelTuple{type64: 0x2700000027, matchRI: 0x12da, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x12db, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x12dc, match64: 0x00000000, model64: 0x10e9100010e9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12dd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x12de, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e0, match64: 0x00000000, model64: 0x10ea900010eaf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10eaf00010eb7, model64: 0x10eb700010ec2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x12e1, match64: 0x00000000, model64: 0x10ec200010ec9},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e2, match64: 0x00000000, model64: 0x10ec900010ecf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10ecf00010ed6, model64: 0x10ed600010eda},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x12e4, match64: 0x00000000, model64: 0x10eda00010ee1},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e6, match64: 0x00000000, model64: 0x90f3000090f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e7, match64: 0x00000000, model64: 0xc4280000c42b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e8, match64: 0x00000000, model64: 0x10ee600010ee8},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e9, match64: 0x00000000, model64: 0x49b7000049b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ea, match64: 0x00000000, model64: 0xee220000ee24},
		modelTuple{type64: 0x2700000027, matchRI: 0x12eb, match64: 0x00000000, model64: 0x10ee800010eeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ec, match64: 0x00000000, model64: 0x10eeb00010eed},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ed, match64: 0x00000000, model64: 0x5d6100005d63},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ee, match64: 0x00000000, model64: 0x10eed00010ef0},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ef, match64: 0x00000000, model64: 0x10ef000010ef1},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12f2, match64: 0x00000000, model64: 0x10ef600010efd},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12f3, match64: 0x00000000, model64: 0x10efd00010f05},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f4, match64: 0x00000000, model64: 0x10f0500010f08},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f5, match64: 0x00000000, model64: 0x10f0800010f0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f6, match64: 0x00000000, model64: 0x10f0b00010f0d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12f7, match64: 0x00000000, model64: 0x10f0d00010f14},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12f8, match64: 0x00000000, model64: 0x10f1400010f1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f9, match64: 0x00000000, model64: 0x90f3000090f5},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12fa, match64: 0x00000000, model64: 0x10f1b00010f22},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fc, match64: 0x00000000, model64: 0x10f2200010f25},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fd, match64: 0x00000000, model64: 0x10f2500010f2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fe, match64: 0x00000000, model64: 0x19af000019b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ff, match64: 0x00000000, model64: 0x10f2b00010f2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1300, match64: 0x00000000, model64: 0x10f2e00010f31},
		modelTuple{type64: 0x2700000027, matchRI: 0x1301, match64: 0x00000000, model64: 0x10f3100010f34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1302, match64: 0x00000000, model64: 0x10f3400010f3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1303, match64: 0x00000000, model64: 0x10f3b00010f3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1304, match64: 0x00000000, model64: 0x10f3e00010f41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10f4100010f49, model64: 0x10f4900010f51},
		modelTuple{type64: 0x2700000027, matchRI: 0x1305, match64: 0x00000000, model64: 0x5d6100005d63},
		modelTuple{type64: 0x2700000027, matchRI: 0x1306, match64: 0x00000000, model64: 0x10f5100010f58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1307, match64: 0x00000000, model64: 0x10f5800010f5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1308, match64: 0x00000000, model64: 0x10f5f00010f64},
		modelTuple{type64: 0x2700000027, matchRI: 0x1309, match64: 0x00000000, model64: 0x10f6400010f6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x130a, match64: 0x00000000, model64: 0x10f6f00010f75},
		modelTuple{type64: 0x2700000027, matchRI: 0x130b, match64: 0x00000000, model64: 0x10f7500010f81},
		modelTuple{type64: 0x2700000027, matchRI: 0x130c, match64: 0x00000000, model64: 0x918f00009191},
		modelTuple{type64: 0x2700000027, matchRI: 0x130d, match64: 0x00000000, model64: 0xc83d0000c843},
		modelTuple{type64: 0x2700000027, matchRI: 0x130e, match64: 0x00000000, model64: 0x10f8100010f84},
		modelTuple{type64: 0x2700000027, matchRI: 0x130f, match64: 0x00000000, model64: 0x10f8400010f8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1310, match64: 0x00000000, model64: 0x10f8d00010f94},
		modelTuple{type64: 0x2700000027, matchRI: 0x1311, match64: 0x00000000, model64: 0x10f9400010f9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1312, match64: 0x00000000, model64: 0x10f9b00010f9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1313, match64: 0x00000000, model64: 0x10f9f00010fa2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1314, match64: 0x00000000, model64: 0x10fa200010fa4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1315, match64: 0x00000000, model64: 0x10fa400010fab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1316, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1317, match64: 0x00000000, model64: 0x10fab00010fad},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1318, match64: 0x00000000, model64: 0x50a2000050a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1319, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x131a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x131b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x131d, match64: 0x00000000, model64: 0x10fb400010fbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x131e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x131f, match64: 0x00000000, model64: 0x10fbb00010fcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1321, match64: 0x00000000, model64: 0x10fd400010fdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1322, match64: 0x00000000, model64: 0x10fdf00010fec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1323, match64: 0x00000000, model64: 0x10fec00010ffc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1324, match64: 0x00000000, model64: 0x10ffc0001100a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1100e00011015, model64: 0x1101500011017},
		modelTuple{type64: 0x2700000027, matchRI: 0x1326, match64: 0x00000000, model64: 0x110170001101e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50380000503d, model64: 0x50380000503d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1328, match64: 0x00000000, model64: 0x110230001102b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1329, match64: 0x00000000, model64: 0x1102b00011034},
		modelTuple{type64: 0x2700000027, matchRI: 0x132a, match64: 0x00000000, model64: 0x110340001103b},
		modelTuple{type64: 0x2700000027, matchRI: 0x132b, match64: 0x00000000, model64: 0x1103b00011044},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1104c0001105f, model64: 0x1105f0001106b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1106b00011071, model64: 0x110710001107f},
		modelTuple{type64: 0x2700000027, matchRI: 0x132d, match64: 0x00000000, model64: 0x1107f0001108e},
		modelTuple{type64: 0x2700000027, matchRI: 0x132e, match64: 0x00000000, model64: 0x1108e0001109b},
		modelTuple{type64: 0x2700000027, matchRI: 0x132f, match64: 0x00000000, model64: 0x1109b000110a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1330, match64: 0x00000000, model64: 0x110a9000110b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1331, match64: 0x00000000, model64: 0x110b5000110bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1332, match64: 0x00000000, model64: 0x110bc000110c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1333, match64: 0x00000000, model64: 0x110c1000110c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1334, match64: 0x00000000, model64: 0x110c6000110cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1335, match64: 0x00000000, model64: 0x110cf000110df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1336, match64: 0x00000000, model64: 0x110df000110e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1337, match64: 0x00000000, model64: 0x110e7000110f4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1338, match64: 0x00000000, model64: 0x110f4000110fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1339, match64: 0x00000000, model64: 0x110fe00011106},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111060001110a, model64: 0x1110a00011115},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111150001111a, model64: 0x1111a0001112e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1112e00011132, model64: 0x1113200011140},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1114000011144, model64: 0x1114400011150},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1115000011154, model64: 0x1115400011166},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111660001116a, model64: 0x1116a0001117d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1117d00011181, model64: 0x1118100011190},
		modelTuple{type64: 0x2700000027, matchRI: 0x133a, match64: 0x00000000, model64: 0x1119000011199},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111990001119d, model64: 0x1119d000111ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111ac000111b0, model64: 0x111b0000111bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111bb000111bf, model64: 0x111bf000111c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x133b, match64: 0x00000000, model64: 0x111c7000111d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x133c, match64: 0x00000000, model64: 0x111d7000111e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x133d, match64: 0x00000000, model64: 0x111e5000111f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111f7000111fb, model64: 0x111fb00011206},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x112060001120b, model64: 0x1120b0001121e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1121e00011222, model64: 0x1122200011230},
		modelTuple{type64: 0x2700000027, matchRI: 0x133e, match64: 0x00000000, model64: 0x1123000011237},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x112370001123b, model64: 0x1123b00011248},
		modelTuple{type64: 0x2700000027, matchRI: 0x133f, match64: 0x00000000, model64: 0x1124800011255},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1125500011259, model64: 0x1125900011266},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x112660001126b, model64: 0x1126b00011277},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x112770001127c, model64: 0x1127c00011288},
		modelTuple{type64: 0x2700000027, matchRI: 0x1340, match64: 0x00000000, model64: 0x112880001129b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1341, match64: 0x00000000, model64: 0x1129b000112aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1342, match64: 0x00000000, model64: 0x112aa000112be},
		modelTuple{type64: 0x2700000027, matchRI: 0x1343, match64: 0x00000000, model64: 0x112be000112c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1344, match64: 0x00000000, model64: 0x112c7000112d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1345, match64: 0x00000000, model64: 0x112d0000112de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1346, match64: 0x00000000, model64: 0x112de000112eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1347, match64: 0x00000000, model64: 0x112eb000112fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1348, match64: 0x00000000, model64: 0x112fb0001130a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1349, match64: 0x00000000, model64: 0x1130a00011317},
		modelTuple{type64: 0x2700000027, matchRI: 0x134a, match64: 0x00000000, model64: 0x113170001131d},
		modelTuple{type64: 0x2700000027, matchRI: 0x134b, match64: 0x00000000, model64: 0x1131d0001132c},
		modelTuple{type64: 0x2700000027, matchRI: 0x134c, match64: 0x00000000, model64: 0x1132c00011339},
		modelTuple{type64: 0x2700000027, matchRI: 0x134d, match64: 0x00000000, model64: 0x1133900011346},
		modelTuple{type64: 0x2700000027, matchRI: 0x134e, match64: 0x00000000, model64: 0x1134600011354},
		modelTuple{type64: 0x2700000027, matchRI: 0x134f, match64: 0x00000000, model64: 0x113540001135d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1350, match64: 0x00000000, model64: 0x1135d00011366},
		modelTuple{type64: 0x2700000027, matchRI: 0x1351, match64: 0x00000000, model64: 0x113660001136f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1352, match64: 0x00000000, model64: 0x1136f00011374},
		modelTuple{type64: 0x2700000027, matchRI: 0x1353, match64: 0x00000000, model64: 0x5a4300005a49},
		modelTuple{type64: 0x2700000027, matchRI: 0x1354, match64: 0x00000000, model64: 0x1137400011381},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1355, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1356, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1357, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1359, match64: 0x00000000, model64: 0x1138100011387},
		modelTuple{type64: 0x2700000027, matchRI: 0x135a, match64: 0x00000000, model64: 0x1138700011390},
		modelTuple{type64: 0x2700000027, matchRI: 0x135b, match64: 0x00000000, model64: 0x1139000011399},
		modelTuple{type64: 0x2700000027, matchRI: 0x135c, match64: 0x00000000, model64: 0x11399000113a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x113a2000113b4, model64: 0x113a2000113b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x135d, match64: 0x00000000, model64: 0x113b4000113bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x135e, match64: 0x00000000, model64: 0x113bd000113c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x135f, match64: 0x00000000, model64: 0x113c6000113cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x113cf000113d6, model64: 0x113d6000113df},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x113df000113ef, model64: 0x113df000113ef},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1360, match64: 0x00000000, model64: 0x113ef000113fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x113fb00011411, model64: 0x113fb00011411},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x114110001141e, model64: 0x114110001141e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1141e00011430, model64: 0x1141e00011430},
		modelTuple{type64: 0x2700000027, matchRI: 0x1361, match64: 0x00000000, model64: 0x1143000011439},
		modelTuple{type64: 0x2700000027, matchRI: 0x1362, match64: 0x00000000, model64: 0x1143900011442},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1144200011449, model64: 0x1144900011455},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x114550001145e, model64: 0x114550001145e},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1145e00011473, model64: 0x1145e00011473},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x114730001147f, model64: 0x114730001147f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1147f00011491, model64: 0x1147f00011491},
		modelTuple{type64: 0x2700000027, matchRI: 0x1363, match64: 0x00000000, model64: 0x114910001149a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1364, match64: 0x00000000, model64: 0x1149a000114a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x114a4000114ae, model64: 0x114a4000114ae},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x114ae000114bc, model64: 0x114ae000114bc},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x1365, match64: 0x00000000, model64: 0x114bc000114c9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x114c9000114d6, model64: 0x114c9000114d6},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x114d6000114e1, model64: 0x114d6000114e1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x114e1000114ea, model64: 0x114e1000114ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1366, match64: 0x00000000, model64: 0x114ea000114f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x114fb00011503, model64: 0x115030001150d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1368, match64: 0x00000000, model64: 0x1150d00011516},
		modelTuple{type64: 0x2700000027, matchRI: 0x136a, match64: 0x00000000, model64: 0x1151b00011522},
		modelTuple{type64: 0x2700000027, matchRI: 0x136b, match64: 0x00000000, model64: 0x1152200011529},
		modelTuple{type64: 0x2700000027, matchRI: 0x136c, match64: 0x00000000, model64: 0x1152900011535},
		modelTuple{type64: 0x2700000027, matchRI: 0x136d, match64: 0x00000000, model64: 0x1153500011540},
		modelTuple{type64: 0x2700000027, matchRI: 0x136e, match64: 0x00000000, model64: 0x1154000011548},
		modelTuple{type64: 0x2700000027, matchRI: 0x136f, match64: 0x00000000, model64: 0x115480001154e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1370, match64: 0x00000000, model64: 0x1154e00011554},
		modelTuple{type64: 0x2700000027, matchRI: 0x1371, match64: 0x00000000, model64: 0x115540001155b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1372, match64: 0x00000000, model64: 0x1155b00011561},
		modelTuple{type64: 0x2700000027, matchRI: 0x1373, match64: 0x00000000, model64: 0x1156100011568},
		modelTuple{type64: 0x2700000027, matchRI: 0x1374, match64: 0x00000000, model64: 0x115680001156f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1376, match64: 0x00000000, model64: 0x1156f00011577},
		modelTuple{type64: 0x2700000027, matchRI: 0x1377, match64: 0x00000000, model64: 0x115770001157e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1157e00011582, model64: 0x1158200011588},
		modelTuple{type64: 0x2700000027, matchRI: 0x1378, match64: 0x00000000, model64: 0x115880001158d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1379, match64: 0x00000000, model64: 0x1158d00011592},
		modelTuple{type64: 0x2700000027, matchRI: 0x137b, match64: 0x00000000, model64: 0x11597000115a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x137c, match64: 0x00000000, model64: 0x115a3000115b0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x137d, match64: 0x00000000, model64: 0x115b0000115bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x137f, match64: 0x00000000, model64: 0x115c0000115c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1380, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x115c8000115e0, model64: 0x115e0000115f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1382, match64: 0x00000000, model64: 0x115f900011600},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1160000011609, model64: 0x116090001160f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1383, match64: 0x00000000, model64: 0x1160f00011612},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116120001161e, model64: 0x1161e00011624},
		modelTuple{type64: 0x2700000027, matchRI: 0x1384, match64: 0x00000000, model64: 0x37200000375},
		modelTuple{type64: 0x2700000027, matchRI: 0x1385, match64: 0x00000000, model64: 0x116240001162b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1163000011639, model64: 0x1163900011642},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1387, match64: 0x00000000, model64: 0x1164200011649},
		modelTuple{type64: 0x2700000027, matchRI: 0x1388, match64: 0x00000000, model64: 0x116490001164f},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x138a, match64: 0x00000000, model64: 0x1165300011657},
		modelTuple{type64: 0x2700000027, matchRI: 0x138b, match64: 0x00000000, model64: 0x1165700011662},
		modelTuple{type64: 0x2700000027, matchRI: 0x138c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x138d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x138f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1390, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1391, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1394, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116780001167f, model64: 0x1167f00011686},
		modelTuple{type64: 0x2700000027, matchRI: 0x1396, match64: 0x00000000, model64: 0x1168d00011695},
		modelTuple{type64: 0x2700000027, matchRI: 0x1397, match64: 0x00000000, model64: 0x11695000116a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116ad000116b3, model64: 0x116b3000116b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116b9000116c0, model64: 0x116c0000116c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1399, match64: 0x00000000, model64: 0x406800004070},
		modelTuple{type64: 0x2700000027, matchRI: 0x139a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x139c, match64: 0x00000000, model64: 0x116ce000116d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x107240001072a, model64: 0x107240001072a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116d9000116e3, model64: 0x116e3000116ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116ed000116f9, model64: 0x116f900011705},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1170500011713, model64: 0x1170500011713},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1171300011718, model64: 0x117180001171d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1171d00011722, model64: 0x9b7500009b7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x139d, match64: 0x00000000, model64: 0x1172200011729},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117290001172f, model64: 0x1172f00011736},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117360001173f, model64: 0x1173f00011748},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117480001174f, model64: 0x1174f00011756},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117560001175e, model64: 0x1175e00011766},
		modelTuple{type64: 0x2700000027, matchRI: 0x139e, match64: 0x00000000, model64: 0x1176600011770},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1177000011775, model64: 0x117750001177a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1177a00011785, model64: 0x1178500011790},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117900001179b, model64: 0x1179b000117a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117a6000117ac, model64: 0x117a6000117ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117ac000117b2, model64: 0x117b2000117b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117b8000117bc, model64: 0x117bc000117c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117c0000117c9, model64: 0x117c9000117d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117d2000117d7, model64: 0x117d7000117dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117dc000117e2, model64: 0x117e2000117e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117e9000117ee, model64: 0x367a0000367f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117ee000117f5, model64: 0x117f5000117fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117fd00011807, model64: 0x1180700011811},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1181100011819, model64: 0x1181900011821},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1182100011826, model64: 0xe6d30000e6d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118260001182a, model64: 0x1182a0001182e},
		modelTuple{type64: 0x2700000027, matchRI: 0x139f, match64: 0x00000000, model64: 0x1182e00011830},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1183000011834, model64: 0x1183400011838},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a0, match64: 0x00000000, model64: 0x118380001183b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1183b00011842, model64: 0x1184200011849},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118490001184f, model64: 0x1184f00011855},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118550001185c, model64: 0x1185c00011863},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118630001186a, model64: 0x1186a00011871},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1187100011875, model64: 0x1187500011879},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118790001187d, model64: 0xbd090000bd0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1187d00011886, model64: 0x1187d00011886},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a1, match64: 0x00000000, model64: 0x118860001188d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1188d00011892, model64: 0x1189200011895},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118950001189d, model64: 0x1189d000118a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a2, match64: 0x00000000, model64: 0x118a5000118ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118ab000118b6, model64: 0x118b6000118c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a3, match64: 0x00000000, model64: 0x118c1000118ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118ca000118d1, model64: 0x118d1000118d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118d7000118df, model64: 0x118df000118e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118e6000118ef, model64: 0x118ef000118f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118f8000118fc, model64: 0x118fc00011900},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a4, match64: 0x00000000, model64: 0x1190000011908},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a5, match64: 0x00000000, model64: 0x119080001190c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1190c00011913, model64: 0x119130001191a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1191a00011923, model64: 0x119230001192c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1192c00011936, model64: 0x1193600011940},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1194000011946, model64: 0x119460001194c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1194c00011950, model64: 0x1195000011954},
		modelTuple{type64: 0x20d00000213, matchRI: 0x13a7, match64: 0x00000000, model64: 0x1195400011961},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x119610001196b, model64: 0x1196b00011975},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a9, match64: 0x00000000, model64: 0x1197e00011983},
		modelTuple{type64: 0x2700000027, matchRI: 0x13aa, match64: 0x00000000, model64: 0x119830001198c},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ab, match64: 0x00000000, model64: 0x1198c00011993},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ac, match64: 0x00000000, model64: 0x1199300011998},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ad, match64: 0x00000000, model64: 0x11998000119af},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ae, match64: 0x00000000, model64: 0x119af000119c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x13af, match64: 0x00000000, model64: 0x119c1000119c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b0, match64: 0x00000000, model64: 0x119c9000119db},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b1, match64: 0x00000000, model64: 0x119db000119e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b2, match64: 0x00000000, model64: 0x119e6000119f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b3, match64: 0x00000000, model64: 0x119c1000119c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x119f200011a07, model64: 0x11a0700011a12},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b4, match64: 0x00000000, model64: 0x11a1200011a1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a1d00011a2f, model64: 0x11a2f00011a37},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b5, match64: 0x00000000, model64: 0x11a3700011a42},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b6, match64: 0x00000000, model64: 0x11a4200011a4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b7, match64: 0x00000000, model64: 0x11a4a00011a51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a5100011a62, model64: 0x11a6200011a69},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a6900011a80, model64: 0x11a8000011a8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b8, match64: 0x00000000, model64: 0x11a8d00011a96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a9600011aa5, model64: 0x11aa500011aaa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11aaa00011ac0, model64: 0x11ac000011ac7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11ac700011ace, model64: 0x11ac700011ace},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b9, match64: 0x00000000, model64: 0x9eb300009ebb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11ace00011ade, model64: 0x11ade00011ae9},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ba, match64: 0x00000000, model64: 0x11ae900011aef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11aef00011b06, model64: 0x11b0600011b0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b0d00011b26, model64: 0x11b2600011b2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x13bb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x11b3d00011b49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b5000011b56, model64: 0x11b5600011b5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x13be, match64: 0x00000000, model64: 0x11b5e00011b6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b6a00011b70, model64: 0x11b7000011b7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b7c00011b82, model64: 0x11b8200011b8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b8b00011b91, model64: 0x11b9100011b95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b9500011b9b, model64: 0x11b9b00011b9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b9f00011bae, model64: 0x11bae00011bbd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11bbd00011bc6, model64: 0x11bbd00011bc6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11bc600011bcf, model64: 0x11bcf00011bd5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11bd500011bde, model64: 0x11bde00011be4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11be400011bed, model64: 0x11bed00011bfc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11bfc00011c05, model64: 0x11c0500011c12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c1200011c1b, model64: 0x11c1b00011c29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c2900011c33, model64: 0x11c2900011c33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c3300011c38, model64: 0x11c3800011c3e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x11c5000011c5b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x13c4, match64: 0x00000000, model64: 0x11c6200011c6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c6e00011c78, model64: 0x11c7800011c82},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c5, match64: 0x00000000, model64: 0x11c8200011c8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c6, match64: 0x00000000, model64: 0x11c8200011c8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c7, match64: 0x00000000, model64: 0x11c8c00011c9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c8, match64: 0x00000000, model64: 0x11c8c00011c9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ca, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11ca700011cad, model64: 0x11cad00011cb3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: -0x0001, match64: 0x11cc000011cc8, model64: 0x11cc800011ccc},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x11ccc00011cd8, model64: 0x11cd800011ce4},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ce, match64: 0x00000000, model64: 0x11ce400011ce9},
		modelTuple{type64: 0x2700000027, matchRI: 0x13cf, match64: 0x00000000, model64: 0x11ce900011cf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d0, match64: 0x00000000, model64: 0x11cf500011cf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d1, match64: 0x00000000, model64: 0x11cf900011cff},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d2, match64: 0x00000000, model64: 0x11cff00011d08},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d3, match64: 0x00000000, model64: 0x11d0800011d10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d1000011d26, model64: 0x11d2600011d33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11d3300011d47, model64: 0x11d4700011d52},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d4, match64: 0x00000000, model64: 0x11d5200011d59},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d5, match64: 0x00000000, model64: 0x11d5900011d63},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d6, match64: 0x00000000, model64: 0x11d6300011d6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d7, match64: 0x00000000, model64: 0x11d6c00011d75},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d8, match64: 0x00000000, model64: 0x11d7500011d7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d9, match64: 0x00000000, model64: 0x11d7b00011d82},
		modelTuple{type64: 0x2700000027, matchRI: 0x13da, match64: 0x00000000, model64: 0x11d8200011d86},
		modelTuple{type64: 0x2700000027, matchRI: 0x13db, match64: 0x00000000, model64: 0x11d8600011d8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13dc, match64: 0x00000000, model64: 0x11d8d00011d94},
		modelTuple{type64: 0x2700000027, matchRI: 0x13dd, match64: 0x00000000, model64: 0x11d9400011d9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13de, match64: 0x00000000, model64: 0x11d9d00011da5},
		modelTuple{type64: 0x2700000027, matchRI: 0x13df, match64: 0x00000000, model64: 0x11da500011dab},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e0, match64: 0x00000000, model64: 0x11dab00011db3},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e1, match64: 0x00000000, model64: 0x11db300011db8},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e2, match64: 0x00000000, model64: 0x11db800011dc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e3, match64: 0x00000000, model64: 0x11dc900011dd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e4, match64: 0x00000000, model64: 0x11dd100011dd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e5, match64: 0x00000000, model64: 0x11dd900011de2},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e6, match64: 0x00000000, model64: 0x11de200011de6},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e7, match64: 0x00000000, model64: 0x11de600011df1},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e8, match64: 0x00000000, model64: 0x11df100011dfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e9, match64: 0x00000000, model64: 0x11dfc00011e06},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ea, match64: 0x00000000, model64: 0x11e0600011e12},
		modelTuple{type64: 0x2700000027, matchRI: 0x13eb, match64: 0x00000000, model64: 0x11e1200011e1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ec, match64: 0x00000000, model64: 0x11e1e00011e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ed, match64: 0x00000000, model64: 0x11e2500011e2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ee, match64: 0x00000000, model64: 0x11e2d00011e38},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ef, match64: 0x00000000, model64: 0x11e3800011e44},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f0, match64: 0x00000000, model64: 0x11e4400011e4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f1, match64: 0x00000000, model64: 0x11e4e00011e5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f2, match64: 0x00000000, model64: 0x11e5b00011e68},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f3, match64: 0x00000000, model64: 0x11e6800011e75},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f4, match64: 0x00000000, model64: 0x11e7500011e84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11e8400011e90, model64: 0x11e9000011e9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11e9c00011ea4, model64: 0x11ea400011eac},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f5, match64: 0x00000000, model64: 0x11eac00011eb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f6, match64: 0x00000000, model64: 0x11eb200011ebf},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f7, match64: 0x00000000, model64: 0x11ebf00011ecc},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f8, match64: 0x00000000, model64: 0x11ecc00011edc},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f9, match64: 0x00000000, model64: 0x11edc00011ee8},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fa, match64: 0x00000000, model64: 0x11ee800011ef5},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fb, match64: 0x00000000, model64: 0x11ef500011f02},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fc, match64: 0x00000000, model64: 0x11f0200011f14},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fd, match64: 0x00000000, model64: 0x11f1400011f22},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fe, match64: 0x00000000, model64: 0x11f2200011f2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ff, match64: 0x00000000, model64: 0x11f2f00011f39},
		modelTuple{type64: 0x2700000027, matchRI: 0x1400, match64: 0x00000000, model64: 0x11f3900011f47},
		modelTuple{type64: 0x2700000027, matchRI: 0x1401, match64: 0x00000000, model64: 0x11f4700011f4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1402, match64: 0x00000000, model64: 0x11f4f00011f58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1403, match64: 0x00000000, model64: 0x11f4f00011f58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1404, match64: 0x00000000, model64: 0x11eac00011eb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1405, match64: 0x00000000, model64: 0x11f5800011f62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1406, match64: 0x00000000, model64: 0x11f6200011f6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1407, match64: 0x00000000, model64: 0x11f6e00011f75},
		modelTuple{type64: 0x2700000027, matchRI: 0x1408, match64: 0x00000000, model64: 0x11f7500011f7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1409, match64: 0x00000000, model64: 0x11f7b00011f86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11f8600011f92, model64: 0x11f8600011f92},
		modelTuple{type64: 0x2700000027, matchRI: 0x140a, match64: 0x00000000, model64: 0x11f9200011f9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x140b, match64: 0x00000000, model64: 0x11f9d00011fa3},
		modelTuple{type64: 0x2700000027, matchRI: 0x140c, match64: 0x00000000, model64: 0x11fa300011faa},
		modelTuple{type64: 0x2700000027, matchRI: 0x140d, match64: 0x00000000, model64: 0x11faa00011fb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x140e, match64: 0x00000000, model64: 0x11fb500011fc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x140f, match64: 0x00000000, model64: 0x11fc100011fce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1410, match64: 0x00000000, model64: 0x11fce00011fd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1411, match64: 0x00000000, model64: 0x11fd600011fe2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1412, match64: 0x00000000, model64: 0x11fe200011fe9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1413, match64: 0x00000000, model64: 0x11fe900011ff0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1414, match64: 0x00000000, model64: 0x11ff000011ffc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11ffc00012004, model64: 0x120040001200c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1200c00012014, model64: 0x120140001201c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1415, match64: 0x00000000, model64: 0x1201c00012022},
		modelTuple{type64: 0x2700000027, matchRI: 0x1416, match64: 0x00000000, model64: 0x120220001202d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1417, match64: 0x00000000, model64: 0x1202d00012039},
		modelTuple{type64: 0x2700000027, matchRI: 0x1418, match64: 0x00000000, model64: 0x120390001204c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1419, match64: 0x00000000, model64: 0x1204c00012058},
		modelTuple{type64: 0x2700000027, matchRI: 0x141a, match64: 0x00000000, model64: 0x1205800012063},
		modelTuple{type64: 0x2700000027, matchRI: 0x141b, match64: 0x00000000, model64: 0x1206300012070},
		modelTuple{type64: 0x2700000027, matchRI: 0x141c, match64: 0x00000000, model64: 0x1207000012076},
		modelTuple{type64: 0x2700000027, matchRI: 0x141d, match64: 0x00000000, model64: 0x120760001207d},
		modelTuple{type64: 0x2700000027, matchRI: 0x141e, match64: 0x00000000, model64: 0x1207d00012089},
		modelTuple{type64: 0x2700000027, matchRI: 0x141f, match64: 0x00000000, model64: 0x1208900012094},
		modelTuple{type64: 0x2700000027, matchRI: 0x1420, match64: 0x00000000, model64: 0x12094000120a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1421, match64: 0x00000000, model64: 0x120a0000120ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1422, match64: 0x00000000, model64: 0x120ad000120b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1423, match64: 0x00000000, model64: 0x120b4000120ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1424, match64: 0x00000000, model64: 0x120ba000120c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1425, match64: 0x00000000, model64: 0x120c6000120ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1426, match64: 0x00000000, model64: 0x120ce000120d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1427, match64: 0x00000000, model64: 0xb1c80000b1cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1428, match64: 0x00000000, model64: 0x120d6000120de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1429, match64: 0x00000000, model64: 0x120de000120e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x142a, match64: 0x00000000, model64: 0x120e6000120fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x142b, match64: 0x00000000, model64: 0x120fc0001210a},
		modelTuple{type64: 0x2700000027, matchRI: 0x142c, match64: 0x00000000, model64: 0x1210a00012113},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121130001211b, model64: 0x1211b00012123},
		modelTuple{type64: 0x2700000027, matchRI: 0x142d, match64: 0x00000000, model64: 0x1212300012131},
		modelTuple{type64: 0x2700000027, matchRI: 0x142e, match64: 0x00000000, model64: 0x121310001213d},
		modelTuple{type64: 0x2700000027, matchRI: 0x142f, match64: 0x00000000, model64: 0x1213d00012148},
		modelTuple{type64: 0x2700000027, matchRI: 0x1430, match64: 0x00000000, model64: 0x1214800012159},
		modelTuple{type64: 0x2700000027, matchRI: 0x1431, match64: 0x00000000, model64: 0x33f5000033fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1432, match64: 0x00000000, model64: 0x1215900012164},
		modelTuple{type64: 0x2700000027, matchRI: 0x1433, match64: 0x00000000, model64: 0x1216400012168},
		modelTuple{type64: 0x2700000027, matchRI: 0x1434, match64: 0x00000000, model64: 0x1216800012177},
		modelTuple{type64: 0x2700000027, matchRI: 0x1435, match64: 0x00000000, model64: 0x1217700012181},
		modelTuple{type64: 0x2700000027, matchRI: 0x1436, match64: 0x00000000, model64: 0x121810001218a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1437, match64: 0x00000000, model64: 0x1218a00012193},
		modelTuple{type64: 0x2700000027, matchRI: 0x1438, match64: 0x00000000, model64: 0x121930001219b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1439, match64: 0x00000000, model64: 0x1219b000121aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x143a, match64: 0x00000000, model64: 0x121aa000121b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121b4000121c7, model64: 0x121c7000121d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121d1000121e3, model64: 0x121e3000121ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121ec00012202, model64: 0x122020001220f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1220f00012221, model64: 0x122210001222a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1222a0001223d, model64: 0x1223d00012247},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122470001225a, model64: 0x1217700012181},
		modelTuple{type64: 0x2700000027, matchRI: 0x143b, match64: 0x00000000, model64: 0x1225a00012272},
		modelTuple{type64: 0x2700000027, matchRI: 0x143c, match64: 0x00000000, model64: 0x1227200012284},
		modelTuple{type64: 0x2700000027, matchRI: 0x143d, match64: 0x00000000, model64: 0x1228400012299},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12299000122a9, model64: 0x122a9000122b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122b9000122c6, model64: 0x122c6000122d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x143e, match64: 0x00000000, model64: 0x122d3000122e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x143f, match64: 0x00000000, model64: 0x122e9000122fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1440, match64: 0x00000000, model64: 0x122fb00012307},
		modelTuple{type64: 0x2700000027, matchRI: 0x1441, match64: 0x00000000, model64: 0x123070001231a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1442, match64: 0x00000000, model64: 0x1231a0001232d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1232d00012339, model64: 0x122fb00012307},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1233900012343, model64: 0x123430001234d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1234d00012358, model64: 0x1235800012363},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x123630001236e, model64: 0x1236e00012379},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1237900012387, model64: 0x1238700012395},
		modelTuple{type64: 0x2700000027, matchRI: 0x1443, match64: 0x00000000, model64: 0x12395000123a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x123a5000123ae, model64: 0x123ae000123b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1444, match64: 0x00000000, model64: 0x123b7000123c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1445, match64: 0x00000000, model64: 0x123c6000123cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1446, match64: 0x00000000, model64: 0x123cf000123d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1447, match64: 0x00000000, model64: 0x123d9000123ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1448, match64: 0x00000000, model64: 0x123ec000123fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1449, match64: 0x00000000, model64: 0x123fa00012414},
		modelTuple{type64: 0x2700000027, matchRI: 0x144a, match64: 0x00000000, model64: 0x1241400012433},
		modelTuple{type64: 0x2700000027, matchRI: 0x144b, match64: 0x00000000, model64: 0x1243300012446},
		modelTuple{type64: 0x2700000027, matchRI: 0x144c, match64: 0x00000000, model64: 0x1244600012454},
		modelTuple{type64: 0x2700000027, matchRI: 0x144d, match64: 0x00000000, model64: 0x1245400012462},
		modelTuple{type64: 0x2700000027, matchRI: 0x144e, match64: 0x00000000, model64: 0x124620001246f},
		modelTuple{type64: 0x2700000027, matchRI: 0x144f, match64: 0x00000000, model64: 0x1246f0001247c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1450, match64: 0x00000000, model64: 0x1247c00012484},
		modelTuple{type64: 0x2700000027, matchRI: 0x1451, match64: 0x00000000, model64: 0x1247c00012484},
		modelTuple{type64: 0x2700000027, matchRI: 0x1452, match64: 0x00000000, model64: 0x11f4700011f4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1453, match64: 0x00000000, model64: 0x124840001248c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1454, match64: 0x00000000, model64: 0x1248c00012492},
		modelTuple{type64: 0x2700000027, matchRI: 0x1455, match64: 0x00000000, model64: 0x124920001249b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1456, match64: 0x00000000, model64: 0x1249b000124a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1457, match64: 0x00000000, model64: 0x1249b000124a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1458, match64: 0x00000000, model64: 0x124a6000124af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x124af000124b7, model64: 0x124af000124b7},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x124b7000124bf, model64: 0x124b7000124bf},
		modelTuple{type64: 0x245f00002467, matchRI: 0x1459, match64: 0x00000000, model64: 0x124bf000124c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x124c8000124d0, model64: 0x124d0000124d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x145a, match64: 0x00000000, model64: 0x124d7000124e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x145b, match64: 0x00000000, model64: 0x124e0000124e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x145c, match64: 0x00000000, model64: 0x124e7000124ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x145d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x145e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x145f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1460, match64: 0x00000000, model64: 0x124ee000124f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1461, match64: 0x00000000, model64: 0x124ee000124f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1462, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1463, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1464, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1465, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1467, match64: 0x00000000, model64: 0xd1420000d145},
		modelTuple{type64: 0x2700000027, matchRI: 0x1468, match64: 0x00000000, model64: 0x90690000906c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x124fb00012500, model64: 0x124fb00012500},
		modelTuple{type64: 0x2700000027, matchRI: 0x146a, match64: 0x00000000, model64: 0xc4580000c45b},
		modelTuple{type64: 0x2700000027, matchRI: 0x146c, match64: 0x00000000, model64: 0x1250c00012510},
		modelTuple{type64: 0x20d00000213, matchRI: 0x146d, match64: 0x00000000, model64: 0x1251000012517},
		modelTuple{type64: 0x2700000027, matchRI: 0x146f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1470, match64: 0x00000000, model64: 0x1251c00012527},
		modelTuple{type64: 0x2700000027, matchRI: 0x1471, match64: 0x00000000, model64: 0x1252700012531},
		modelTuple{type64: 0x2700000027, matchRI: 0x1472, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1473, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1476, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1477, match64: 0x00000000, model64: 0x125430001254a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1478, match64: 0x00000000, model64: 0x1254a0001254f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1479, match64: 0x00000000, model64: 0x1254f00012556},
		modelTuple{type64: 0x2700000027, matchRI: 0x147a, match64: 0x00000000, model64: 0x1255600012557},
		modelTuple{type64: 0x2700000027, matchRI: 0x147b, match64: 0x00000000, model64: 0xde990000de9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x147c, match64: 0x00000000, model64: 0x125570001255d},
		modelTuple{type64: 0x2700000027, matchRI: 0x147d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x147e, match64: 0x00000000, model64: 0x1255d00012567},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1256700012576, model64: 0x1257600012585},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1258500012592, model64: 0x125920001259f},
		modelTuple{type64: 0x2700000027, matchRI: 0x147f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1480, match64: 0x00000000, model64: 0x1259f000125a9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x125a9000125b1, model64: 0x125b1000125b9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1481, match64: 0x00000000, model64: 0x125b9000125c1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1482, match64: 0x00000000, model64: 0x125c1000125cb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1483, match64: 0x00000000, model64: 0x125cb000125d5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1484, match64: 0x00000000, model64: 0x125d5000125e6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1485, match64: 0x00000000, model64: 0x125e6000125f5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1486, match64: 0x00000000, model64: 0x125f500012607},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1487, match64: 0x00000000, model64: 0x126070001260f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1488, match64: 0x00000000, model64: 0x1260f00012619},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1489, match64: 0x00000000, model64: 0x1261900012622},
		modelTuple{type64: 0x20d00000213, matchRI: 0x148a, match64: 0x00000000, model64: 0x1262200012627},
		modelTuple{type64: 0x20d00000213, matchRI: 0x148b, match64: 0x00000000, model64: 0x1262700012630},
		modelTuple{type64: 0x20d00000213, matchRI: 0x148c, match64: 0x00000000, model64: 0x1263000012635},
		modelTuple{type64: 0x20d00000213, matchRI: 0x148d, match64: 0x00000000, model64: 0x126350001263b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x148e, match64: 0x00000000, model64: 0x1263b00012646},
		modelTuple{type64: 0x2700000027, matchRI: 0x148f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1492, match64: 0x00000000, model64: 0x1265700012661},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1266100012677, model64: 0x126770001268d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1493, match64: 0x00000000, model64: 0x1268d00012692},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x126a1000126ac, model64: 0x126ac000126b8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x126b8000126c1, model64: 0x126c1000126cc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1496, match64: 0x00000000, model64: 0x126cc000126d5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x126d5000126e3, model64: 0x126e3000126f2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x126f200012701, model64: 0x1270100012711},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1497, match64: 0x00000000, model64: 0x1271100012722},
		modelTuple{type64: 0x2700000027, matchRI: 0x1498, match64: 0x00000000, model64: 0x127220001272b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1272b00012733, model64: 0x127330001273b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1499, match64: 0x00000000, model64: 0x1273b00012743},
		modelTuple{type64: 0x2700000027, matchRI: 0x149a, match64: 0x00000000, model64: 0x1056700010572},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127430001274c, model64: 0x127430001274c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1274c00012758, model64: 0x1275800012764},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127640001276f, model64: 0x1276f0001277a},
		modelTuple{type64: 0x2700000027, matchRI: 0x149b, match64: 0x00000000, model64: 0x1277a00012782},
		modelTuple{type64: 0x2700000027, matchRI: 0x149c, match64: 0x00000000, model64: 0x4f1e00004f24},
		modelTuple{type64: 0x2700000027, matchRI: 0x149d, match64: 0x00000000, model64: 0x127820001278d},
		modelTuple{type64: 0x2700000027, matchRI: 0x149e, match64: 0x00000000, model64: 0x1278d00012797},
		modelTuple{type64: 0x2700000027, matchRI: 0x149f, match64: 0x00000000, model64: 0x127970001279d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1279d000127ab, model64: 0x127ab000127b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127b9000127c7, model64: 0x127c7000127d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a0, match64: 0x00000000, model64: 0x127d4000127e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127e4000127ef, model64: 0x127ef000127f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127f3000127f8, model64: 0x127f8000127fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a1, match64: 0x00000000, model64: 0x127fc00012806},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a2, match64: 0x00000000, model64: 0x128060001280f},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a3, match64: 0x00000000, model64: 0x1280f00012815},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a4, match64: 0x00000000, model64: 0x1281500012819},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a5, match64: 0x00000000, model64: 0x1281900012823},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a6, match64: 0x00000000, model64: 0x128230001282d},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a7, match64: 0x00000000, model64: 0x1282d00012839},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a8, match64: 0x00000000, model64: 0x1283900012845},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a9, match64: 0x00000000, model64: 0x1284500012851},
		modelTuple{type64: 0x2700000027, matchRI: 0x14aa, match64: 0x00000000, model64: 0x1285100012858},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ab, match64: 0x00000000, model64: 0x128580001285f},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ac, match64: 0x00000000, model64: 0x1285f00012869},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1286900012879, model64: 0x1287900012889},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1288900012890, model64: 0x1289000012897},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ad, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14ae, match64: 0x00000000, model64: 0x128970001289f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14af, match64: 0x00000000, model64: 0x1289f000128a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b1, match64: 0x00000000, model64: 0x128ac000128bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b2, match64: 0x00000000, model64: 0x649b000064a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b3, match64: 0x00000000, model64: 0x10690000106e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128c9000128ce, model64: 0x128ce000128d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128d4000128df, model64: 0x128df000128e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128f900012903, model64: 0x1290300012907},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1290700012915, model64: 0x129150001291d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1291d0001292a, model64: 0x1292a00012931},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x129310001293d, model64: 0x1293d00012943},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14b9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ba, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x14bd, match64: 0x00000000, model64: 0x1294f00012955},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x14be, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1295a00012961, model64: 0x1296100012968},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1296800012970, model64: 0x1297000012978},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c1, match64: 0x00000000, model64: 0x1297b00012989},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c2, match64: 0x00000000, model64: 0x1298900012991},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14c6, match64: 0x00000000, model64: 0x129910001299f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14c7, match64: 0x00000000, model64: 0x1299f000129b8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14c8, match64: 0x00000000, model64: 0x129b8000129c9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14c9, match64: 0x00000000, model64: 0x129c9000129d9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14ca, match64: 0x00000000, model64: 0x129d9000129e8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14cb, match64: 0x00000000, model64: 0x129e8000129f7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14cc, match64: 0x00000000, model64: 0x129f700012a07},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14cd, match64: 0x00000000, model64: 0x12a0700012a17},
		modelTuple{type64: 0x2700000027, matchRI: 0x14cf, match64: 0x00000000, model64: 0x12a1b00012a20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12a2600012a34, model64: 0x12a3400012a3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12a3b00012a45, model64: 0x12a4500012a48},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12a5d00012a6b, model64: 0x12a6b00012a77},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d6, match64: 0x00000000, model64: 0x12a7700012a84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12a8400012a91, model64: 0x12a9100012a9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d7, match64: 0x00000000, model64: 0x59690000596e},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d8, match64: 0x00000000, model64: 0x59690000596e},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x14da, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12aab00012aba, model64: 0x12aab00012aba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12aba00012ac8, model64: 0x12aba00012ac8},
		modelTuple{type64: 0x2700000027, matchRI: 0x14dd, match64: 0x00000000, model64: 0x12acb00012ad5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12ad500012add, model64: 0x12add00012ae6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12ae600012af3, model64: 0x12af300012b02},
		modelTuple{type64: 0x2700000027, matchRI: 0x14de, match64: 0x00000000, model64: 0x12b0200012b0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x14df, match64: 0x00000000, model64: 0x12b0d00012b13},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e0, match64: 0x00000000, model64: 0x12b1300012b1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b1a00012b20, model64: 0x12b2000012b27},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e1, match64: 0x00000000, model64: 0x5bab00005baf},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e2, match64: 0x00000000, model64: 0x12b2700012b32},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e3, match64: 0x00000000, model64: 0x12b3200012b3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e4, match64: 0x00000000, model64: 0x12b3b00012b3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e5, match64: 0x00000000, model64: 0x12b3f00012b43},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e6, match64: 0x00000000, model64: 0x12b4300012b47},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e7, match64: 0x00000000, model64: 0x12b4700012b4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e8, match64: 0x00000000, model64: 0x12b4c00012b51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b5100012b59, model64: 0xe28a0000e293},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b5900012b60, model64: 0x12b6000012b68},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14e9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ea, match64: 0x00000000, model64: 0x12b6800012b6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x14eb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x12b7400012b82},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14ee, match64: 0x00000000, model64: 0x12b8600012b90},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14ef, match64: 0x00000000, model64: 0x12b9000012ba1},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x14f0, match64: 0x00000000, model64: 0x12ba100012ba7},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x14f1, match64: 0x00000000, model64: 0x12ba700012bae},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x12bba00012bc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f5, match64: 0x00000000, model64: 0x431600004319},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f6, match64: 0x00000000, model64: 0xc4580000c45b},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f7, match64: 0x00000000, model64: 0x6e8300006e85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12bd100012bd7, model64: 0x53ff00005401},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12bd700012bdd, model64: 0xde990000de9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12bdd00012be3, model64: 0x12be300012be6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12be600012bec, model64: 0xdea20000dea4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12bec00012bf2, model64: 0x12bf200012bf5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12bf500012bfb, model64: 0x12bfb00012bfe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12bfe00012c04, model64: 0x12c0400012c07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c0700012c0d, model64: 0x12c0d00012c11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c1100012c17, model64: 0x12c1700012c1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c2800012c2e, model64: 0x2f5000002f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x14fa, match64: 0x00000000, model64: 0x12c2e00012c33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c3300012c3c, model64: 0x117180001171d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c3c00012c43, model64: 0x12c4300012c46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c4600012c4f, model64: 0x12c4f00012c54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c5400012c5e, model64: 0x12c5e00012c64},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c6400012c70, model64: 0x12c7000012c78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c7800012c7f, model64: 0x80a6000080a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c7f00012c86, model64: 0x12c8600012c89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c8900012c90, model64: 0x12c9000012c93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c9300012c9b, model64: 0x12c9b00012c9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c9f00012caa, model64: 0x12caa00012cb1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12cb100012cb9, model64: 0x12cb900012cbd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12cbd00012cc6, model64: 0x12cc600012ccb},
		modelTuple{type64: 0x2700000027, matchRI: 0x14fb, match64: 0x00000000, model64: 0x12ccb00012cce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12cce00012cd7, model64: 0x12cd700012cdc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12cdc00012ce3, model64: 0x12ce300012ce6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12ce600012cef, model64: 0x4c6800004c6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12cef00012cf6, model64: 0x98a2000098a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12cf600012d01, model64: 0x12d0100012d08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d0800012d0c, model64: 0x11de200011de6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d0c00012d11, model64: 0xfa1c0000fa21},
		modelTuple{type64: 0x2700000027, matchRI: 0x14fc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d1100012d16, model64: 0x12cc600012ccb},
		modelTuple{type64: 0x2700000027, matchRI: 0x14fe, match64: 0x00000000, model64: 0x12d1a00012d2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ff, match64: 0x00000000, model64: 0x12d2b00012d3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d3b00012d45, model64: 0x12d4500012d54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d5400012d5e, model64: 0x12d5e00012d7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d7c00012d86, model64: 0x12d8600012d8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d8c00012d96, model64: 0x12d9600012d9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1501, match64: 0x00000000, model64: 0x7cc900007ccd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1503, match64: 0x00000000, model64: 0x12dab00012db0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1504, match64: 0x00000000, model64: 0x12db000012db6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12dc500012dd0, model64: 0x12dc500012dd0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12dd000012dda, model64: 0x12dda00012de4},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x12de400012df2, model64: 0x12df200012e00},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x12e0000012e08, model64: 0x12e0800012e10},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x12e1000012e17, model64: 0x12e1700012e1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12e2500012e2d, model64: 0x12e2d00012e36},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x59690000596e},
		modelTuple{type64: 0x2700000027, matchRI: 0x150a, match64: 0x00000000, model64: 0x2790000027e},
		modelTuple{type64: 0x2700000027, matchRI: 0x150b, match64: 0x00000000, model64: 0x12e4500012e4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x150c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x150d, match64: 0x00000000, model64: 0x12e4b00012e52},
		modelTuple{type64: 0x2700000027, matchRI: 0x150e, match64: 0x00000000, model64: 0x12e5200012e5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1510, match64: 0x00000000, model64: 0x12e6400012e71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1511, match64: 0x00000000, model64: 0x12e7100012e78},
		modelTuple{type64: 0x2700000027, matchRI: 0x1512, match64: 0x00000000, model64: 0x12e7800012e83},
		modelTuple{type64: 0x2700000027, matchRI: 0x1513, match64: 0x00000000, model64: 0x12e8300012e94},
		modelTuple{type64: 0x2700000027, matchRI: 0x1514, match64: 0x00000000, model64: 0x12e9400012ea6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1515, match64: 0x00000000, model64: 0x12ea600012eb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1516, match64: 0x00000000, model64: 0x12eb700012ec3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1517, match64: 0x00000000, model64: 0x12ec300012ed0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1518, match64: 0x00000000, model64: 0x12ed000012ee1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1519, match64: 0x00000000, model64: 0x12ee100012eed},
		modelTuple{type64: 0x2700000027, matchRI: 0x151a, match64: 0x00000000, model64: 0x12eed00012ef8},
		modelTuple{type64: 0x2700000027, matchRI: 0x151b, match64: 0x00000000, model64: 0x12ef800012f02},
		modelTuple{type64: 0x2700000027, matchRI: 0x151c, match64: 0x00000000, model64: 0x12f0200012f0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12f0d00012f19, model64: 0x12f1900012f27},
		modelTuple{type64: 0x2700000027, matchRI: 0x151d, match64: 0x00000000, model64: 0xf08b0000f093},
		modelTuple{type64: 0x2700000027, matchRI: 0x151e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x151f, match64: 0x00000000, model64: 0x12f2700012f3a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1520, match64: 0x00000000, model64: 0x12f3a00012f52},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1521, match64: 0x00000000, model64: 0x12f5200012f5c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1522, match64: 0x00000000, model64: 0x12f5c00012f67},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1523, match64: 0x00000000, model64: 0x12f6700012f74},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1524, match64: 0x00000000, model64: 0x12f7400012f81},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1528, match64: 0x00000000, model64: 0x12f9600012f99},
		modelTuple{type64: 0x2700000027, matchRI: 0x1529, match64: 0x00000000, model64: 0x12f9900012f9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12f9c00012faa, model64: 0x50440000504b},
		modelTuple{type64: 0x2700000027, matchRI: 0x152a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x152d, match64: 0x00000000, model64: 0x12fb000012fb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x152e, match64: 0x00000000, model64: 0x183200001834},
		modelTuple{type64: 0x2700000027, matchRI: 0x152f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x47480000474e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1532, match64: 0x00000000, model64: 0x12fbe00012fcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1533, match64: 0x00000000, model64: 0x12fcb00012fd5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12fd500012fdb, model64: 0x12fdb00012fe6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12fed00012ff3, model64: 0x12ff300012ffe},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x130040001300c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1535, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1537, match64: 0x00000000, model64: 0x92a8000092aa},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1304000013048, model64: 0x1304800013051},
		modelTuple{type64: 0x5db000005e5, matchRI: -0x0001, match64: 0x1305100013059, model64: 0x1305900013067},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1306700013070, model64: 0x130700001307f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1540, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1541, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1543, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1544, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130a4000130ad, model64: 0x130ad000130b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130b9000130c2, model64: 0x130c2000130c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130c8000130d2, model64: 0x130d2000130d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130d9000130e3, model64: 0x130e3000130ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130ea000130f5, model64: 0x130f5000130fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130fd00013107, model64: 0x131070001310f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1310f0001311a, model64: 0x1311a00013121},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131210001312d, model64: 0x1312d00013135},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1313500013140, model64: 0x1314000013147},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131470001314f, model64: 0x1314f00013158},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1315800013161, model64: 0x131610001316e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1316e00013177, model64: 0x34b1000034b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131770001317f, model64: 0x1317f00013183},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1318300013189, model64: 0x1318900013192},
		modelTuple{type64: 0x2700000027, matchRI: 0x1546, match64: 0x00000000, model64: 0xcdc50000cdcc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1549, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x154a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x154b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x154e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x154f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1550, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1551, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1553, match64: 0x00000000, model64: 0x10ef000010ef1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1554, match64: 0x00000000, model64: 0x189800001899},
		modelTuple{type64: 0x2700000027, matchRI: 0x1555, match64: 0x00000000, model64: 0x18ca000018cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1556, match64: 0x00000000, model64: 0x131ba000131bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131bb000131c2, model64: 0x18d0000018d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1557, match64: 0x00000000, model64: 0x34b1000034b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131c2000131d1, model64: 0x131d1000131da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131da000131e6, model64: 0x131e6000131ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1558, match64: 0x00000000, model64: 0x131ec000131f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1559, match64: 0x00000000, model64: 0x131f4000131fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x155a, match64: 0x00000000, model64: 0x131fc00013204},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1320400013210, model64: 0x1321000013216},
		modelTuple{type64: 0x2700000027, matchRI: 0x155b, match64: 0x00000000, model64: 0x132160001321f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1321f0001322e, model64: 0x1322e00013236},
		modelTuple{type64: 0x2700000027, matchRI: 0x155c, match64: 0x00000000, model64: 0x1323600013238},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x132380001323e, model64: 0x1323e00013242},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1324200013248, model64: 0x132480001324c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1324c00013252, model64: 0x1325200013256},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x132560001325d, model64: 0x1325d00013264},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x132640001326b, model64: 0x1326b00013272},
		modelTuple{type64: 0x2700000027, matchRI: 0x155d, match64: 0x00000000, model64: 0x1327200013279},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1327900013283, model64: 0x1328300013287},
		modelTuple{type64: 0x2700000027, matchRI: 0x155e, match64: 0x00000000, model64: 0x132870001328f},
		modelTuple{type64: 0x2700000027, matchRI: 0x155f, match64: 0x00000000, model64: 0x1328f0001329f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1329f000132a8, model64: 0x132a8000132ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x132ad000132b6, model64: 0x132b6000132ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x132ba000132c6, model64: 0x132c6000132d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x132d6000132e8, model64: 0x132e8000132f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1560, match64: 0x00000000, model64: 0x132f1000132fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x132fe00013309, model64: 0x133090001330d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1330d00013318, model64: 0x133180001331c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1331c00013327, model64: 0x133270001332b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1332b00013336, model64: 0x133360001333a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1333a00013345, model64: 0x1334500013349},
		modelTuple{type64: 0x2700000027, matchRI: 0x1561, match64: 0x00000000, model64: 0x1334900013355},
		modelTuple{type64: 0x2700000027, matchRI: 0x1562, match64: 0x00000000, model64: 0x133550001335f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1563, match64: 0x00000000, model64: 0x1335f00013367},
		modelTuple{type64: 0x2700000027, matchRI: 0x1564, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1565, match64: 0x00000000, model64: 0x133670001336e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1566, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1567, match64: 0x00000000, model64: 0x1336e00013378},
		modelTuple{type64: 0x2700000027, matchRI: 0x1568, match64: 0x00000000, model64: 0x1337800013381},
		modelTuple{type64: 0x2700000027, matchRI: 0x1569, match64: 0x00000000, model64: 0x133810001338a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1338a00013390, model64: 0x1339000013399},
		modelTuple{type64: 0x2700000027, matchRI: 0x156a, match64: 0x00000000, model64: 0x13399000133a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x156b, match64: 0x00000000, model64: 0x133a2000133ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x133ab000133b2, model64: 0x133b2000133bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x156c, match64: 0x00000000, model64: 0x133bb000133c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x156d, match64: 0x00000000, model64: 0x133c4000133ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x133ce000133d4, model64: 0x133d4000133dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x133dd000133e6, model64: 0x133dd000133e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x156e, match64: 0x00000000, model64: 0x133e6000133ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x156f, match64: 0x00000000, model64: 0x133ef000133f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1570, match64: 0x00000000, model64: 0x133f900013402},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x134020001340b, model64: 0x1340b00013414},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x134140001341a, model64: 0x1341a00013423},
		modelTuple{type64: 0x2700000027, matchRI: 0x1571, match64: 0x00000000, model64: 0x134230001342c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1572, match64: 0x00000000, model64: 0x1342c00013435},
		modelTuple{type64: 0x2700000027, matchRI: 0x1573, match64: 0x00000000, model64: 0x134350001343e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1343e00013447, model64: 0x1344700013451},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1345100013458, model64: 0x1345800013461},
		modelTuple{type64: 0x2700000027, matchRI: 0x1574, match64: 0x00000000, model64: 0x134610001346b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1575, match64: 0x00000000, model64: 0x1346b00013477},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1576, match64: 0x00000000, model64: 0x134770001347a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1577, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1578, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1579, match64: 0x00000000, model64: 0x704600007049},
		modelTuple{type64: 0x2700000027, matchRI: 0x157a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x157b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x157c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x157d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x157e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x157f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1347a00013485, model64: 0x1348500013489},
		modelTuple{type64: 0x2700000027, matchRI: 0x1580, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1581, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1582, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1583, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1585, match64: 0x00000000, model64: 0x1348d00013493},
		modelTuple{type64: 0x2700000027, matchRI: 0x1586, match64: 0x00000000, model64: 0x1349300013498},
		modelTuple{type64: 0x2700000027, matchRI: 0x1587, match64: 0x00000000, model64: 0x134980001349e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1588, match64: 0x00000000, model64: 0x1349e000134a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1589, match64: 0x00000000, model64: 0x134a4000134ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x158a, match64: 0x00000000, model64: 0x134ae000134bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x158b, match64: 0x00000000, model64: 0x134bc000134c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x158c, match64: 0x00000000, model64: 0x134c2000134c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x158d, match64: 0x00000000, model64: 0x134c8000134cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x158e, match64: 0x00000000, model64: 0x134cf000134d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x158f, match64: 0x00000000, model64: 0x134d5000134db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1590, match64: 0x00000000, model64: 0x134db000134e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1591, match64: 0x00000000, model64: 0x134e1000134e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1592, match64: 0x00000000, model64: 0x134e6000134ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1593, match64: 0x00000000, model64: 0x134ec000134f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1594, match64: 0x00000000, model64: 0x134f1000134f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1595, match64: 0x00000000, model64: 0x134f7000134fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1596, match64: 0x00000000, model64: 0x134fe00013506},
		modelTuple{type64: 0x2700000027, matchRI: 0x1597, match64: 0x00000000, model64: 0x135060001350d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1598, match64: 0x00000000, model64: 0x1350d00013514},
		modelTuple{type64: 0x2700000027, matchRI: 0x1599, match64: 0x00000000, model64: 0x135140001351c},
		modelTuple{type64: 0x2700000027, matchRI: 0x159a, match64: 0x00000000, model64: 0x1351c00013527},
		modelTuple{type64: 0x2700000027, matchRI: 0x159b, match64: 0x00000000, model64: 0x84150000841b},
		modelTuple{type64: 0x2700000027, matchRI: 0x159c, match64: 0x00000000, model64: 0x704300007046},
		modelTuple{type64: 0x2700000027, matchRI: 0x159d, match64: 0x00000000, model64: 0x4c6800004c6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x159e, match64: 0x00000000, model64: 0x135270001352b},
		modelTuple{type64: 0x2700000027, matchRI: 0x159f, match64: 0x00000000, model64: 0x1006d00010072},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a0, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x15a1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1352b00013539, model64: 0x1353900013540},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a2, match64: 0x00000000, model64: 0x135400001354b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a3, match64: 0x00000000, model64: 0x1354b00013556},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a4, match64: 0x00000000, model64: 0x1355600013560},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a5, match64: 0x00000000, model64: 0x135600001356a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a6, match64: 0x00000000, model64: 0x1356a00013575},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a7, match64: 0x00000000, model64: 0x1357500013584},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a8, match64: 0x00000000, model64: 0x1358400013589},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a9, match64: 0x00000000, model64: 0x1358900013592},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15aa, match64: 0x00000000, model64: 0x1359200013599},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15ab, match64: 0x00000000, model64: 0x13599000135a4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15ac, match64: 0x00000000, model64: 0x135a4000135ae},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15ad, match64: 0x00000000, model64: 0x135ae000135be},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15ae, match64: 0x00000000, model64: 0x135be000135c9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15af, match64: 0x00000000, model64: 0x135c9000135d8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15b0, match64: 0x00000000, model64: 0x135d8000135e2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15b1, match64: 0x00000000, model64: 0x135e2000135ec},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15b2, match64: 0x00000000, model64: 0x135ec000135f7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15b3, match64: 0x00000000, model64: 0x135f700013601},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15b4, match64: 0x00000000, model64: 0xd6690000d66e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15b5, match64: 0x00000000, model64: 0x136010001360c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15b6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ba, match64: 0x00000000, model64: 0x1361000013613},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bb, match64: 0x00000000, model64: 0xe9d90000e9dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bc, match64: 0x00000000, model64: 0x136130001361b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bd, match64: 0x00000000, model64: 0x1361b0001361e},
		modelTuple{type64: 0x2700000027, matchRI: 0x15be, match64: 0x00000000, model64: 0x6e2100006e28},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1363600013644},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c3, match64: 0x00000000, model64: 0x1290300012907},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c4, match64: 0x00000000, model64: 0x136470001364f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c5, match64: 0x00000000, model64: 0x1364f00013656},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c6, match64: 0x00000000, model64: 0x136560001365a},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c7, match64: 0x00000000, model64: 0x1365a00013661},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c8, match64: 0x00000000, model64: 0x1366100013665},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x183100001832},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cb, match64: 0x00000000, model64: 0x136760001367c},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ce, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1368b00013697},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136a4000136aa, model64: 0x136aa000136ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136ad000136b3, model64: 0x136b3000136bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136bc000136c2, model64: 0x136c2000136c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136c9000136cf, model64: 0x136cf000136d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136d6000136dc, model64: 0x136dc000136e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136e4000136ea, model64: 0x136ea000136f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136f9000136ff, model64: 0x136ff0001370e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1370e00013714, model64: 0x1371400013724},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d2, match64: 0x00000000, model64: 0x137240001372f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1372f00013735, model64: 0x1373500013740},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1374000013746, model64: 0x1374600013752},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1375200013758, model64: 0x1375800013766},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137660001376c, model64: 0x1376c00013777},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d3, match64: 0x00000000, model64: 0x137770001377e},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d4, match64: 0x00000000, model64: 0x1377e00013786},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137860001378c, model64: 0x1378c0001378f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1378f00013795, model64: 0x1379500013797},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137970001379d, model64: 0x1379d000137a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137a4000137aa, model64: 0x137aa000137b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137b0000137b6, model64: 0x137b6000137b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d5, match64: 0x00000000, model64: 0x137b8000137bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d6, match64: 0x00000000, model64: 0x137bf000137c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137c5000137cb, model64: 0x137cb000137d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137d6000137dc, model64: 0x137dc000137df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137df000137e8, model64: 0x137e8000137ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d7, match64: 0x00000000, model64: 0x137ef000137f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d8, match64: 0x00000000, model64: 0x137f900013801},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1380100013807, model64: 0x138070001380a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1380a00013810, model64: 0x1381000013814},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138140001381a, model64: 0x1381a00013822},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1382200013828, model64: 0x10f0b00010f0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138280001382e, model64: 0x1382e00013831},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d9, match64: 0x00000000, model64: 0x1383100013839},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138390001383f, model64: 0x1383f00013849},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138490001384f, model64: 0x1384f00013857},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138570001385d, model64: 0x1385d00013861},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1386100013867, model64: 0x138670001386a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1386a00013870, model64: 0x1387000013873},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1387300013879, model64: 0x1387900013882},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1388200013888, model64: 0xe4e20000e4e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138880001388e, model64: 0x1388e00013897},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138970001389d, model64: 0x1389d000138a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138a9000138af, model64: 0x1000c00010010},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138af000138b5, model64: 0x138b5000138bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138bc000138c2, model64: 0x138c2000138c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138c9000138cf, model64: 0x138cf000138d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138d1000138d7, model64: 0x138d7000138de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138de000138e4, model64: 0x138e4000138e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x15da, match64: 0x00000000, model64: 0x138e6000138e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138e8000138f2, model64: 0x138f2000138f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x15db, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15dd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15de, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15df, match64: 0x00000000, model64: 0x138f9000138fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1390300013912, model64: 0x1391200013922},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e1, match64: 0x00000000, model64: 0x139220001392f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x15e3, match64: 0x00000000, model64: 0x1392f00013940},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1394000013956, model64: 0x1395600013963},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1396300013970, model64: 0x1397000013979},
		modelTuple{type64: 0xed000000f4, matchRI: -0x0001, match64: 0x139790001397f, model64: 0x1397f0001398e},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e6, match64: 0x00000000, model64: 0x1399000013993},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e7, match64: 0x00000000, model64: 0x139930001399d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e8, match64: 0x00000000, model64: 0x1399d000139a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e9, match64: 0x00000000, model64: 0x139a3000139b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ea, match64: 0x00000000, model64: 0x139b5000139c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x15eb, match64: 0x00000000, model64: 0x139c3000139cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ec, match64: 0x00000000, model64: 0x1cc000001cf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15ed, match64: 0x00000000, model64: 0x139cc000139d7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15ee, match64: 0x00000000, model64: 0x139d7000139dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x15f2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139f1000139f6, model64: 0xd6690000d66e},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f9, match64: 0x00000000, model64: 0x139f6000139fd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a0500013a0d, model64: 0x13a0500013a0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fc, match64: 0x00000000, model64: 0x4ef300004ef6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a1900013a21, model64: 0x13a2100013a2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a2b00013a35, model64: 0x101230001012b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a3500013a3e, model64: 0x13a3e00013a4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a4d00013a55, model64: 0x13a5500013a5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a5f00013a69, model64: 0x13a6900013a75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a7500013a7f, model64: 0x13a7f00013a8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ff, match64: 0x00000000, model64: 0x13a8b00013a96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a9600013a9f, model64: 0x13a9600013a9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1600, match64: 0x00000000, model64: 0x13a9f00013aa7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1601, match64: 0x00000000, model64: 0x13aa700013ab0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13ab000013ab8, model64: 0x13ab800013abe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13abe00013ac8, model64: 0x13ac800013ad6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13ad600013ae2, model64: 0x13ae200013af0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1603, match64: 0x00000000, model64: 0x13af400013af7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1604, match64: 0x00000000, model64: 0x13af700013afd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1605, match64: 0x00000000, model64: 0x13afd00013b01},
		modelTuple{type64: 0x2700000027, matchRI: 0x1606, match64: 0x00000000, model64: 0x13b0100013b04},
		modelTuple{type64: 0x2700000027, matchRI: 0x1607, match64: 0x00000000, model64: 0x13b0400013b08},
		modelTuple{type64: 0x2700000027, matchRI: 0x1608, match64: 0x00000000, model64: 0x13b0800013b0c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b0c00013b13, model64: 0x13b1300013b17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b1700013b1e, model64: 0x13b1e00013b22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b2200013b29, model64: 0x13b2900013b2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b2c00013b33, model64: 0x13b3300013b37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1609, match64: 0x00000000, model64: 0x13b3700013b3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x160a, match64: 0x00000000, model64: 0x13afd00013b01},
		modelTuple{type64: 0x2700000027, matchRI: 0x160b, match64: 0x00000000, model64: 0x13b3a00013b3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x160c, match64: 0x00000000, model64: 0x13b3d00013b41},
		modelTuple{type64: 0x2700000027, matchRI: 0x160d, match64: 0x00000000, model64: 0x13b4100013b44},
		modelTuple{type64: 0x2700000027, matchRI: 0x160e, match64: 0x00000000, model64: 0x13b4400013b47},
		modelTuple{type64: 0x2700000027, matchRI: 0x160f, match64: 0x00000000, model64: 0x151f00001521},
		modelTuple{type64: 0x2700000027, matchRI: 0x1610, match64: 0x00000000, model64: 0x13b4700013b4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1611, match64: 0x00000000, model64: 0x13b4d00013b51},
		modelTuple{type64: 0x2700000027, matchRI: 0x1612, match64: 0x00000000, model64: 0x13b5100013b54},
		modelTuple{type64: 0x2700000027, matchRI: 0x1613, match64: 0x00000000, model64: 0x13b5400013b57},
		modelTuple{type64: 0x2700000027, matchRI: 0x1614, match64: 0x00000000, model64: 0x13b5700013b5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1615, match64: 0x00000000, model64: 0x13b5a00013b5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1616, match64: 0x00000000, model64: 0x58d6000058d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1617, match64: 0x00000000, model64: 0x154c0000154e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1618, match64: 0x00000000, model64: 0x13b5d00013b66},
		modelTuple{type64: 0x2700000027, matchRI: 0x1619, match64: 0x00000000, model64: 0x13b6600013b6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x161a, match64: 0x00000000, model64: 0x13b6c00013b6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x161b, match64: 0x00000000, model64: 0x13b6f00013b72},
		modelTuple{type64: 0x2700000027, matchRI: 0x161c, match64: 0x00000000, model64: 0x13b7200013b75},
		modelTuple{type64: 0x2700000027, matchRI: 0x161d, match64: 0x00000000, model64: 0x13b7500013b78},
		modelTuple{type64: 0x2700000027, matchRI: 0x161e, match64: 0x00000000, model64: 0x13b7800013b7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x161f, match64: 0x00000000, model64: 0x13b7c00013b83},
		modelTuple{type64: 0x2700000027, matchRI: 0x1620, match64: 0x00000000, model64: 0x13b8300013b89},
		modelTuple{type64: 0x2700000027, matchRI: 0x1621, match64: 0x00000000, model64: 0x13b8900013b8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1622, match64: 0x00000000, model64: 0x13b8c00013b90},
		modelTuple{type64: 0x2700000027, matchRI: 0x1623, match64: 0x00000000, model64: 0x13b9000013b96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1624, match64: 0x00000000, model64: 0x13b9600013b99},
		modelTuple{type64: 0x2700000027, matchRI: 0x1625, match64: 0x00000000, model64: 0x13b9900013ba0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13ba000013ba6, model64: 0x13ba600013bac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1626, match64: 0x00000000, model64: 0x13bac00013baf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1627, match64: 0x00000000, model64: 0x13baf00013bb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13bb900013bbf, model64: 0x13bbf00013bc5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13bc500013bcc, model64: 0x13bcc00013bcf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13bcf00013bd5, model64: 0x13bd500013bd8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13bd800013bde, model64: 0x13bde00013be1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1628, match64: 0x00000000, model64: 0x13be100013be4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1629, match64: 0x00000000, model64: 0x156300001565},
		modelTuple{type64: 0x2700000027, matchRI: 0x162a, match64: 0x00000000, model64: 0x13be400013be7},
		modelTuple{type64: 0x2700000027, matchRI: 0x162b, match64: 0x00000000, model64: 0x13be700013bf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x162c, match64: 0x00000000, model64: 0xcaa60000caa9},
		modelTuple{type64: 0x2700000027, matchRI: 0x162d, match64: 0x00000000, model64: 0x13bf100013bf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x162e, match64: 0x00000000, model64: 0x13bf700013bfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x162f, match64: 0x00000000, model64: 0x13bfa00013c00},
		modelTuple{type64: 0x2700000027, matchRI: 0x1630, match64: 0x00000000, model64: 0x13c0000013c07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13c0700013c0e, model64: 0x13c0e00013c11},
		modelTuple{type64: 0x2700000027, matchRI: 0x1631, match64: 0x00000000, model64: 0x13c1100013c14},
		modelTuple{type64: 0x2700000027, matchRI: 0x1632, match64: 0x00000000, model64: 0x13c1400013c1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1633, match64: 0x00000000, model64: 0x13c1a00013c20},
		modelTuple{type64: 0x2700000027, matchRI: 0x1634, match64: 0x00000000, model64: 0x13c2000013c23},
		modelTuple{type64: 0x2700000027, matchRI: 0x1635, match64: 0x00000000, model64: 0x13c2300013c26},
		modelTuple{type64: 0x2700000027, matchRI: 0x1636, match64: 0x00000000, model64: 0x13c2600013c2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1637, match64: 0x00000000, model64: 0x13c2a00013c2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1638, match64: 0x00000000, model64: 0x13c2d00013c30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1639, match64: 0x00000000, model64: 0xf70f0000f711},
		modelTuple{type64: 0x2700000027, matchRI: 0x163a, match64: 0x00000000, model64: 0x13c3000013c33},
		modelTuple{type64: 0x2700000027, matchRI: 0x163b, match64: 0x00000000, model64: 0x13c3300013c3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x163c, match64: 0x00000000, model64: 0x3ce000003d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x163d, match64: 0x00000000, model64: 0x13c3d00013c46},
		modelTuple{type64: 0x2700000027, matchRI: 0x163e, match64: 0x00000000, model64: 0x13c4600013c49},
		modelTuple{type64: 0x2700000027, matchRI: 0x163f, match64: 0x00000000, model64: 0x13c4900013c4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1640, match64: 0x00000000, model64: 0x13c4c00013c50},
		modelTuple{type64: 0x2700000027, matchRI: 0x1641, match64: 0x00000000, model64: 0x13c5000013c53},
		modelTuple{type64: 0x2700000027, matchRI: 0x1642, match64: 0x00000000, model64: 0x13c5300013c57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13c5700013c5d, model64: 0x13c5d00013c63},
		modelTuple{type64: 0x2700000027, matchRI: 0x1643, match64: 0x00000000, model64: 0x13c6300013c66},
		modelTuple{type64: 0x2700000027, matchRI: 0x1644, match64: 0x00000000, model64: 0x13bfa00013c00},
		modelTuple{type64: 0x2700000027, matchRI: 0x1645, match64: 0x00000000, model64: 0x13c6600013c69},
		modelTuple{type64: 0x2700000027, matchRI: 0x1646, match64: 0x00000000, model64: 0x13c6900013c6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1647, match64: 0x00000000, model64: 0x13c6c00013c6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1648, match64: 0x00000000, model64: 0x13c6f00013c73},
		modelTuple{type64: 0x2700000027, matchRI: 0x1649, match64: 0x00000000, model64: 0x13c7300013c76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13c7600013c7d, model64: 0x13c7d00013c84},
		modelTuple{type64: 0x2700000027, matchRI: 0x164a, match64: 0x00000000, model64: 0x13c8400013c8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x164b, match64: 0x00000000, model64: 0x13c8c00013c93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13c9300013c9a, model64: 0x13c9a00013ca0},
		modelTuple{type64: 0x2700000027, matchRI: 0x164c, match64: 0x00000000, model64: 0x13ca000013ca3},
		modelTuple{type64: 0x2700000027, matchRI: 0x164d, match64: 0x00000000, model64: 0x13ca300013caa},
		modelTuple{type64: 0x2700000027, matchRI: 0x164e, match64: 0x00000000, model64: 0x13caa00013cad},
		modelTuple{type64: 0x2700000027, matchRI: 0x164f, match64: 0x00000000, model64: 0x13cad00013cb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1650, match64: 0x00000000, model64: 0x13cb400013cb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1651, match64: 0x00000000, model64: 0x13cb700013cb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1652, match64: 0x00000000, model64: 0x13cb900013cc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1653, match64: 0x00000000, model64: 0x102fa000102fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1654, match64: 0x00000000, model64: 0x13cc000013cc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1655, match64: 0x00000000, model64: 0x13cc800013cca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1656, match64: 0x00000000, model64: 0x13cca00013ccc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1657, match64: 0x00000000, model64: 0x13ccc00013cd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1658, match64: 0x00000000, model64: 0x13cd200013cd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1659, match64: 0x00000000, model64: 0x13cd600013cdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x165a, match64: 0x00000000, model64: 0x13cdd00013ce9},
		modelTuple{type64: 0x2700000027, matchRI: 0x165b, match64: 0x00000000, model64: 0x13ce900013cef},
		modelTuple{type64: 0x2700000027, matchRI: 0x165c, match64: 0x00000000, model64: 0x13cef00013cfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x165d, match64: 0x00000000, model64: 0x13cfa00013d00},
		modelTuple{type64: 0x2700000027, matchRI: 0x165e, match64: 0x00000000, model64: 0x13d0000013d07},
		modelTuple{type64: 0x2700000027, matchRI: 0x165f, match64: 0x00000000, model64: 0x13d0700013d10},
		modelTuple{type64: 0x2700000027, matchRI: 0x1660, match64: 0x00000000, model64: 0x13d1000013d16},
		modelTuple{type64: 0x2700000027, matchRI: 0x1661, match64: 0x00000000, model64: 0x13d1600013d1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1662, match64: 0x00000000, model64: 0x13d1d00013d29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1663, match64: 0x00000000, model64: 0x13d2900013d34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1664, match64: 0x00000000, model64: 0x13d3400013d3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1665, match64: 0x00000000, model64: 0x13d3f00013d4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1666, match64: 0x00000000, model64: 0x13d4a00013d53},
		modelTuple{type64: 0x2700000027, matchRI: 0x1667, match64: 0x00000000, model64: 0x13d5300013d5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1668, match64: 0x00000000, model64: 0x13d5d00013d64},
		modelTuple{type64: 0x2700000027, matchRI: 0x1669, match64: 0x00000000, model64: 0x13d6400013d6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x166a, match64: 0x00000000, model64: 0x13d6a00013d7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x166b, match64: 0x00000000, model64: 0x13d7c00013d83},
		modelTuple{type64: 0x2700000027, matchRI: 0x166c, match64: 0x00000000, model64: 0x13d8300013d8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x166d, match64: 0x00000000, model64: 0x13d8f00013d9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x166e, match64: 0x00000000, model64: 0x13d9a00013da1},
		modelTuple{type64: 0x2700000027, matchRI: 0x166f, match64: 0x00000000, model64: 0x13da100013dac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1670, match64: 0x00000000, model64: 0x13dac00013db7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1671, match64: 0x00000000, model64: 0x13db700013dc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1672, match64: 0x00000000, model64: 0x13dc300013dca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1673, match64: 0x00000000, model64: 0x13dca00013dd5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13dd500013ddb, model64: 0x13ddb00013de6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13de600013dec, model64: 0x13dec00013df3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1674, match64: 0x00000000, model64: 0x13df300013dfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1675, match64: 0x00000000, model64: 0x92a8000092aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1676, match64: 0x00000000, model64: 0x4c3000004c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1677, match64: 0x00000000, model64: 0xe5ea0000e5ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1678, match64: 0x00000000, model64: 0xe4b60000e4b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1679, match64: 0x00000000, model64: 0xe5f50000e5f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x167a, match64: 0x00000000, model64: 0x13dfb00013dfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x167b, match64: 0x00000000, model64: 0x13dfe00013e01},
		modelTuple{type64: 0x2700000027, matchRI: 0x167c, match64: 0x00000000, model64: 0x13e0100013e05},
		modelTuple{type64: 0x2700000027, matchRI: 0x167d, match64: 0x00000000, model64: 0x13e0500013e08},
		modelTuple{type64: 0x2700000027, matchRI: 0x167e, match64: 0x00000000, model64: 0xe6000000e603},
		modelTuple{type64: 0x2700000027, matchRI: 0x167f, match64: 0x00000000, model64: 0x13e0800013e0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1680, match64: 0x00000000, model64: 0x13e0e00013e18},
		modelTuple{type64: 0x2700000027, matchRI: 0x1681, match64: 0x00000000, model64: 0x13e1800013e1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1682, match64: 0x00000000, model64: 0x138e6000138e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1683, match64: 0x00000000, model64: 0x1189200011895},
		modelTuple{type64: 0x2700000027, matchRI: 0x1684, match64: 0x00000000, model64: 0x13e1f00013e24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1685, match64: 0x00000000, model64: 0x13e2400013e29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1686, match64: 0x00000000, model64: 0x13e2900013e2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1687, match64: 0x00000000, model64: 0x13e2e00013e34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1688, match64: 0x00000000, model64: 0x13e3400013e39},
		modelTuple{type64: 0x2700000027, matchRI: 0x1689, match64: 0x00000000, model64: 0x13e3900013e3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x168a, match64: 0x00000000, model64: 0x13e3c00013e44},
		modelTuple{type64: 0x2700000027, matchRI: 0x168b, match64: 0x00000000, model64: 0x13e4400013e47},
		modelTuple{type64: 0x2700000027, matchRI: 0x168c, match64: 0x00000000, model64: 0x13e4700013e4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x168d, match64: 0x00000000, model64: 0x13e4a00013e53},
		modelTuple{type64: 0x2700000027, matchRI: 0x168e, match64: 0x00000000, model64: 0x13e5300013e57},
		modelTuple{type64: 0x2700000027, matchRI: 0x168f, match64: 0x00000000, model64: 0x13e5700013e5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1690, match64: 0x00000000, model64: 0x13e5a00013e61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1691, match64: 0x00000000, model64: 0x13e6100013e65},
		modelTuple{type64: 0x2700000027, matchRI: 0x1692, match64: 0x00000000, model64: 0x13e6500013e68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13e6800013e6f, model64: 0x13e6f00013e77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13e7700013e87, model64: 0x13e7700013e87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13e8700013e8e, model64: 0x13e8700013e8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1693, match64: 0x00000000, model64: 0x13e8e00013e95},
		modelTuple{type64: 0x2700000027, matchRI: 0x1694, match64: 0x00000000, model64: 0x13e9500013e9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1695, match64: 0x00000000, model64: 0x13e9c00013e9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1696, match64: 0x00000000, model64: 0x13e9f00013ea2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1697, match64: 0x00000000, model64: 0xeeaf0000eeb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1698, match64: 0x00000000, model64: 0x13ea200013ea9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1699, match64: 0x00000000, model64: 0x13ea900013eb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x169a, match64: 0x00000000, model64: 0x13eb100013eb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x169b, match64: 0x00000000, model64: 0x1182e00011830},
		modelTuple{type64: 0x2700000027, matchRI: 0x169c, match64: 0x00000000, model64: 0x13eb400013ebb},
		modelTuple{type64: 0x2700000027, matchRI: 0x169d, match64: 0x00000000, model64: 0x13ebb00013ec4},
		modelTuple{type64: 0x2700000027, matchRI: 0x169e, match64: 0x00000000, model64: 0x13ec400013ecb},
		modelTuple{type64: 0x2700000027, matchRI: 0x169f, match64: 0x00000000, model64: 0x13ecb00013ece},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a0, match64: 0x00000000, model64: 0x13ece00013ed6},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a1, match64: 0x00000000, model64: 0x13ed600013eda},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a2, match64: 0x00000000, model64: 0x13eda00013ee0},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a3, match64: 0x00000000, model64: 0x13ee000013eed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13eed00013ef3, model64: 0x13ef300013efb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13efb00013f02, model64: 0x13f0200013f0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a4, match64: 0x00000000, model64: 0x13f0c00013f12},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a5, match64: 0x00000000, model64: 0x13f1200013f19},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a6, match64: 0x00000000, model64: 0x13f1900013f20},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a7, match64: 0x00000000, model64: 0x13f2000013f26},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a8, match64: 0x00000000, model64: 0x13f2600013f2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a9, match64: 0x00000000, model64: 0x13f2d00013f36},
		modelTuple{type64: 0x2700000027, matchRI: 0x16aa, match64: 0x00000000, model64: 0x13f3600013f40},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ab, match64: 0x00000000, model64: 0x13f4000013f4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ac, match64: 0x00000000, model64: 0x13f4b00013f54},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ad, match64: 0x00000000, model64: 0x13f5400013f5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ae, match64: 0x00000000, model64: 0x13f5f00013f6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x16af, match64: 0x00000000, model64: 0x13f6c00013f75},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b0, match64: 0x00000000, model64: 0x13f7500013f82},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b1, match64: 0x00000000, model64: 0x13f8200013f8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b2, match64: 0x00000000, model64: 0x13f8f00013f99},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b3, match64: 0x00000000, model64: 0x13f9900013fa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b4, match64: 0x00000000, model64: 0x13fa000013fa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b5, match64: 0x00000000, model64: 0x13fa600013fad},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b6, match64: 0x00000000, model64: 0x13fad00013fb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b7, match64: 0x00000000, model64: 0x13fb800013fc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b8, match64: 0x00000000, model64: 0x13fc100013fc8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13fc800013fd2, model64: 0x13fd200013fdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b9, match64: 0x00000000, model64: 0x13fdc00013fe3},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ba, match64: 0x00000000, model64: 0x13fe300013fea},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bb, match64: 0x00000000, model64: 0x13fea00013ff7},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bc, match64: 0x00000000, model64: 0x13ff700014009},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bd, match64: 0x00000000, model64: 0x1400900014010},
		modelTuple{type64: 0x2700000027, matchRI: 0x16be, match64: 0x00000000, model64: 0x1401000014016},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bf, match64: 0x00000000, model64: 0x1401600014021},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c0, match64: 0x00000000, model64: 0x140210001402b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c1, match64: 0x00000000, model64: 0x1402b00014038},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c2, match64: 0x00000000, model64: 0x1403800014047},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c3, match64: 0x00000000, model64: 0x140470001404d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1404d00014054, model64: 0x140540001405b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c4, match64: 0x00000000, model64: 0x1405b00014062},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1406200014068, model64: 0x1406800014071},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c5, match64: 0x00000000, model64: 0x140710001407b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c6, match64: 0x00000000, model64: 0x1407b00014085},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140850001408b, model64: 0x1408b00014096},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140960001409d, model64: 0x1409d000140a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140a5000140ab, model64: 0x140ab000140b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c7, match64: 0x00000000, model64: 0x140b1000140b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140b8000140be, model64: 0x140be000140c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140c4000140ca, model64: 0x140ca000140d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140d5000140db, model64: 0x140db000140e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c8, match64: 0x00000000, model64: 0x140e5000140ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c9, match64: 0x00000000, model64: 0x140ee000140f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ca, match64: 0x00000000, model64: 0x140f3000140fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x16cb, match64: 0x00000000, model64: 0x140fb00014105},
		modelTuple{type64: 0x2700000027, matchRI: 0x16cc, match64: 0x00000000, model64: 0x141050001410c},
		modelTuple{type64: 0x2700000027, matchRI: 0x16cd, match64: 0x00000000, model64: 0x1410c00014112},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ce, match64: 0x00000000, model64: 0x1411200014116},
		modelTuple{type64: 0x20d00000213, matchRI: 0x16cf, match64: 0x00000000, model64: 0x141160001411d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1411d00014124, model64: 0x1412400014129},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1412900014130, model64: 0x1413000014138},
		modelTuple{type64: 0x245f00002467, matchRI: 0x16d0, match64: 0x00000000, model64: 0x1413800014142},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1414200014148, model64: 0x1414800014152},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1415200014158, model64: 0x1415800014164},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x16d1, match64: 0x00000000, model64: 0x1416400014167},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d2, match64: 0x00000000, model64: 0xedf30000edf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1416c00014172, model64: 0x1417200014179},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x141790001417f, model64: 0x141790001417f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1418800014193, model64: 0x141930001419a},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d8, match64: 0x00000000, model64: 0x1419a0001419d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1419d000141a5, model64: 0x141a5000141ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x16dc, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16dd, match64: 0x00000000, model64: 0x141b6000141bd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141c9000141d3, model64: 0xc79f0000c7a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e3, match64: 0x00000000, model64: 0x141da000141e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e4, match64: 0x00000000, model64: 0x141e1000141e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e5, match64: 0x00000000, model64: 0x141e8000141ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e6, match64: 0x00000000, model64: 0x141ee000141f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e7, match64: 0x00000000, model64: 0x141f4000141f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e9, match64: 0x00000000, model64: 0x141f700014200},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ea, match64: 0x00000000, model64: 0x1420000014207},
		modelTuple{type64: 0x2700000027, matchRI: 0x16eb, match64: 0x00000000, model64: 0x142070001420f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ec, match64: 0x00000000, model64: 0x1420f00014212},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ed, match64: 0x00000000, model64: 0x1421200014219},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ee, match64: 0x00000000, model64: 0x1421900014220},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ef, match64: 0x00000000, model64: 0x1422000014225},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f0, match64: 0x00000000, model64: 0x142250001422d},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f1, match64: 0x00000000, model64: 0x1422d00014236},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f5, match64: 0x00000000, model64: 0x1423d00014252},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f6, match64: 0x00000000, model64: 0x142520001425d},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f8, match64: 0x00000000, model64: 0x142610001426f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f9, match64: 0x00000000, model64: 0x1426f00014277},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1427700014285, model64: 0x1428500014295},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142950001429e, model64: 0x1429e000142a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142a7000142bc, model64: 0x142bc000142d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142d1000142e4, model64: 0x142e4000142f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142f700014305, model64: 0x1430500014314},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1431400014323, model64: 0x1432300014333},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1433300014345, model64: 0x1434500014358},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1435800014363, model64: 0x143630001436e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1436e0001437e, model64: 0x1437e0001438e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1438e0001439f, model64: 0x1439f000143b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x143b1000143bd, model64: 0x143bd000143cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x143cb000143d6, model64: 0x143d6000143e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x143e3000143f3, model64: 0x143f300014403},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1440300014410, model64: 0x144100001441d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1441d00014429, model64: 0x1442900014435},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fa, match64: 0x00000000, model64: 0x1443500014449},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fb, match64: 0x00000000, model64: 0x1444900014456},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fc, match64: 0x00000000, model64: 0x1445600014462},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fd, match64: 0x00000000, model64: 0x144620001446d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1446d00014479, model64: 0x1447900014485},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fe, match64: 0x00000000, model64: 0x1448500014490},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ff, match64: 0x00000000, model64: 0x144900001449c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1449c000144a3, model64: 0x144a3000144aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144aa000144b9, model64: 0x144b9000144c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144c9000144d4, model64: 0x144d4000144e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144e0000144ee, model64: 0x144ee000144fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1700, match64: 0x00000000, model64: 0x144fd00014504},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145040001450f, model64: 0x1450f0001451c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1451c00014528, model64: 0x1452800014534},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145340001453c, model64: 0x1453c00014541},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1454100014546, model64: 0x145460001454c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1454c0001455a, model64: 0x1455a00014568},
		modelTuple{type64: 0x2700000027, matchRI: 0x1701, match64: 0x00000000, model64: 0x145680001456f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1456f00014573, model64: 0x1457300014577},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1457700014588, model64: 0x1458800014599},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145990001459f, model64: 0x1459f000145a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1702, match64: 0x00000000, model64: 0x145a7000145ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145ae000145b7, model64: 0x145b7000145bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145bc000145c8, model64: 0x145c8000145d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145d4000145e2, model64: 0x145e2000145f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145f0000145ff, model64: 0x145ff0001460e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1460e0001461a, model64: 0x1461a00014621},
		modelTuple{type64: 0x2700000027, matchRI: 0x1703, match64: 0x00000000, model64: 0x1462100014630},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x146300001463b, model64: 0x1463b00014648},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1464800014651, model64: 0x146510001465a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1465a00014665, model64: 0x1466500014670},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x146700001467b, model64: 0x1467b00014686},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1468600014695, model64: 0x14695000146a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1704, match64: 0x00000000, model64: 0x146a4000146af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1705, match64: 0x00000000, model64: 0x146af000146bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1706, match64: 0x00000000, model64: 0x146bb000146c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x146c8000146cd, model64: 0x146cd000146d2},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1707, match64: 0x00000000, model64: 0x146d2000146db},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x146db000146e4, model64: 0x146e4000146ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1708, match64: 0x00000000, model64: 0x146ed000146f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1709, match64: 0x00000000, model64: 0x146f4000146f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x170a, match64: 0x00000000, model64: 0x146f800014700},
		modelTuple{type64: 0x2700000027, matchRI: 0x170b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x147020001470b},
		modelTuple{type64: 0x2700000027, matchRI: 0x170e, match64: 0x00000000, model64: 0x147110001471d},
		modelTuple{type64: 0x2700000027, matchRI: 0x170f, match64: 0x00000000, model64: 0x1471d0001471f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1710, match64: 0x00000000, model64: 0x1471f00014725},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1472a00014734, model64: 0x147340001473c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1712, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1713, match64: 0x00000000, model64: 0x147450001474d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x147570001475f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1717, match64: 0x00000000, model64: 0x147660001476a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1719, match64: 0x00000000, model64: 0x1476e00014772},
		modelTuple{type64: 0x20d00000213, matchRI: 0x171a, match64: 0x00000000, model64: 0x1477200014775},
		modelTuple{type64: 0x20d00000213, matchRI: 0x171b, match64: 0x00000000, model64: 0x1477500014782},
		modelTuple{type64: 0x20d00000213, matchRI: 0x171c, match64: 0x00000000, model64: 0x147820001478f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x171d, match64: 0x00000000, model64: 0x1478f0001479b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x171e, match64: 0x00000000, model64: 0x1479b000147ae},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x147ae000147ba, model64: 0x147ba000147ca},
		modelTuple{type64: 0x20d00000213, matchRI: 0x171f, match64: 0x00000000, model64: 0x147ca000147da},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x147da000147ec, model64: 0x147ec000147ff},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x147ff00014810, model64: 0x1481000014822},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x148220001482c, model64: 0x1482c00014837},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1483700014845, model64: 0x1484500014854},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x148540001485d, model64: 0x1485d00014868},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1720, match64: 0x00000000, model64: 0x148680001487d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1721, match64: 0x00000000, model64: 0x1487d0001488a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1722, match64: 0x00000000, model64: 0x1488a00014896},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1723, match64: 0x00000000, model64: 0x148960001489c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1724, match64: 0x00000000, model64: 0x1489c000148ac},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1725, match64: 0x00000000, model64: 0x148ac000148b7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1726, match64: 0x00000000, model64: 0x148b7000148c2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1727, match64: 0x00000000, model64: 0x148c2000148c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1728, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1729, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x148d0000148de, model64: 0x148de000148ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x172b, match64: 0x00000000, model64: 0x148ec000148f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x172c, match64: 0x00000000, model64: 0x148f700014901},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x172f, match64: 0x00000000, model64: 0x1490f00014911},
		modelTuple{type64: 0x2700000027, matchRI: 0x1730, match64: 0x00000000, model64: 0x1491100014917},
		modelTuple{type64: 0x2700000027, matchRI: 0x1731, match64: 0x00000000, model64: 0x6e2000006e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1732, match64: 0x00000000, model64: 0x149170001491c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1733, match64: 0x00000000, model64: 0x1491c00014922},
		modelTuple{type64: 0x2700000027, matchRI: 0x1734, match64: 0x00000000, model64: 0x1492200014929},
		modelTuple{type64: 0x2700000027, matchRI: 0x1735, match64: 0x00000000, model64: 0x149290001493b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1736, match64: 0x00000000, model64: 0x1493b00014942},
		modelTuple{type64: 0x2700000027, matchRI: 0x1737, match64: 0x00000000, model64: 0x1494200014949},
		modelTuple{type64: 0x2700000027, matchRI: 0x1738, match64: 0x00000000, model64: 0x1494900014953},
		modelTuple{type64: 0x2700000027, matchRI: 0x1739, match64: 0x00000000, model64: 0x1495300014961},
		modelTuple{type64: 0x2700000027, matchRI: 0x173a, match64: 0x00000000, model64: 0x149610001496f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1496f00014976, model64: 0x149760001497f},
		modelTuple{type64: 0x2700000027, matchRI: 0x173b, match64: 0x00000000, model64: 0x1158200011588},
		modelTuple{type64: 0x2700000027, matchRI: 0x173c, match64: 0x00000000, model64: 0x1497f00014988},
		modelTuple{type64: 0x2700000027, matchRI: 0x173d, match64: 0x00000000, model64: 0x1498800014994},
		modelTuple{type64: 0x2700000027, matchRI: 0x173e, match64: 0x00000000, model64: 0x149940001499f},
		modelTuple{type64: 0x2700000027, matchRI: 0x173f, match64: 0x00000000, model64: 0x1499f000149aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1740, match64: 0x00000000, model64: 0x149aa000149b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1741, match64: 0x00000000, model64: 0x149b2000149bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1742, match64: 0x00000000, model64: 0x149bd000149ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1743, match64: 0x00000000, model64: 0x149ca000149d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1744, match64: 0x00000000, model64: 0x149d3000149dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1745, match64: 0x00000000, model64: 0x149dc000149e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1746, match64: 0x00000000, model64: 0x149e1000149e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1747, match64: 0x00000000, model64: 0x149e3000149e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1748, match64: 0x00000000, model64: 0x34b1000034b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1749, match64: 0x00000000, model64: 0x149e9000149f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x174a, match64: 0x00000000, model64: 0x9ce500009ce6},
		modelTuple{type64: 0x2700000027, matchRI: 0x174b, match64: 0x00000000, model64: 0x149f0000149f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x174c, match64: 0x00000000, model64: 0x149f6000149f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x174d, match64: 0x00000000, model64: 0x149f8000149fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x174e, match64: 0x00000000, model64: 0x149fb00014a01},
		modelTuple{type64: 0x2700000027, matchRI: 0x174f, match64: 0x00000000, model64: 0x14a0100014a07},
		modelTuple{type64: 0x2700000027, matchRI: 0x1750, match64: 0x00000000, model64: 0x9cd700009cdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1751, match64: 0x00000000, model64: 0x14a0700014a1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1752, match64: 0x00000000, model64: 0x9cf600009cfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1753, match64: 0x00000000, model64: 0x14a1d00014a22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1754, match64: 0x00000000, model64: 0x18d0000018d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1755, match64: 0x00000000, model64: 0x14a2200014a24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1756, match64: 0x00000000, model64: 0x14a2400014a2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1757, match64: 0x00000000, model64: 0x14a2a00014a33},
		modelTuple{type64: 0x2700000027, matchRI: 0x1758, match64: 0x00000000, model64: 0x149e1000149e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1759, match64: 0x00000000, model64: 0x14a3300014a39},
		modelTuple{type64: 0x2700000027, matchRI: 0x175a, match64: 0x00000000, model64: 0x974600009749},
		modelTuple{type64: 0x2700000027, matchRI: 0x175b, match64: 0x00000000, model64: 0x10ef000010ef1},
		modelTuple{type64: 0x2700000027, matchRI: 0x175c, match64: 0x00000000, model64: 0xc91a0000c91b},
		modelTuple{type64: 0x2700000027, matchRI: 0x175d, match64: 0x00000000, model64: 0x14a3900014a3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x175e, match64: 0x00000000, model64: 0x189800001899},
		modelTuple{type64: 0x2700000027, matchRI: 0x175f, match64: 0x00000000, model64: 0x14a3b00014a3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1760, match64: 0x00000000, model64: 0x18ca000018cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1761, match64: 0x00000000, model64: 0x131ba000131bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1762, match64: 0x00000000, model64: 0x14a3d00014a3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1763, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1765, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1766, match64: 0x00000000, model64: 0x14a4300014a4f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1767, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1769, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x176a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x974600009749},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a6b00014a77, model64: 0x14a7700014a83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a8300014a95, model64: 0x14a9500014a9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a9c00014aae, model64: 0x14aae00014ab8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ab800014acb, model64: 0x14acb00014ad2},
		modelTuple{type64: 0x2700000027, matchRI: 0x176d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ad900014aea, model64: 0x14aea00014afb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14afb00014b08, model64: 0x14b0800014b15},
		modelTuple{type64: 0x2700000027, matchRI: 0x176e, match64: 0x00000000, model64: 0x14b1500014b21},
		modelTuple{type64: 0x2700000027, matchRI: 0x176f, match64: 0x00000000, model64: 0x14b2100014b29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1770, match64: 0x00000000, model64: 0x14b2900014b33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b3300014b39, model64: 0x14b3900014b3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1771, match64: 0x00000000, model64: 0x14b3f00014b44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b4a00014b53, model64: 0x14b5300014b5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b5c00014b65, model64: 0x14b6500014b6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1773, match64: 0x00000000, model64: 0x14b6e00014b78},
		modelTuple{type64: 0x2700000027, matchRI: 0x1775, match64: 0x00000000, model64: 0x14b7e00014b86},
		modelTuple{type64: 0x2700000027, matchRI: 0x1776, match64: 0x00000000, model64: 0x14b7e00014b86},
		modelTuple{type64: 0x2700000027, matchRI: 0x1777, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1778, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b8c00014b96, model64: 0x14b9600014b9b},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x14ba100014ba9, model64: 0x14ba900014bb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bb500014bbe, model64: 0x14bbe00014bc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bc700014bcf, model64: 0x14bcf00014bd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bd700014bdf, model64: 0x14bdf00014be7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14be700014bf1, model64: 0x14bf100014bfb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bfb00014c01, model64: 0x14bfb00014c01},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x14c0100014c05, model64: 0x14c0100014c05},
		modelTuple{type64: 0x20d00000213, matchRI: 0x177b, match64: 0x00000000, model64: 0x14c0500014c0e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x14c0e00014c1c, model64: 0x14c1c00014c28},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x14c2800014c35, model64: 0x14c3500014c45},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x14c4500014c54, model64: 0x14c5400014c5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x177c, match64: 0x00000000, model64: 0x59690000596e},
		modelTuple{type64: 0x2700000027, matchRI: 0x177d, match64: 0x00000000, model64: 0x14c5c00014c68},
		modelTuple{type64: 0x2700000027, matchRI: 0x177e, match64: 0x00000000, model64: 0x14c6800014c6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x177f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1780, match64: 0x00000000, model64: 0x14c6f00014c75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c7a00014c80, model64: 0x14c8000014c88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c8800014c8e, model64: 0x14c8e00014c92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c9200014c98, model64: 0x14c9800014c9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c9c00014ca2, model64: 0x14ca200014ca8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ca800014caf, model64: 0x14caf00014cb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14cb800014cbe, model64: 0xcfb20000cfb5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x14cbe00014cc3, model64: 0x14cc300014cca},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1784, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1787, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1788, match64: 0x00000000, model64: 0x14ce100014cea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14cee00014cf6, model64: 0x14cee00014cf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x178a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x178b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x178c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x178d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14cfd00014d07, model64: 0x14cfd00014d07},
		modelTuple{type64: 0x2700000027, matchRI: 0x178f, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1790, match64: 0x00000000, model64: 0xd1420000d145},
		modelTuple{type64: 0x2700000027, matchRI: 0x1791, match64: 0x00000000, model64: 0x77a6000077ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1792, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x1793, match64: 0x00000000, model64: 0x432900004330},
		modelTuple{type64: 0x2700000027, matchRI: 0x1794, match64: 0x00000000, model64: 0x14d0700014d0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1795, match64: 0x00000000, model64: 0x14d0d00014d15},
		modelTuple{type64: 0x2700000027, matchRI: 0x1796, match64: 0x00000000, model64: 0x14d1500014d24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1797, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1798, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1799, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x179a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x14d2b00014d31, model64: 0x14d3100014d3c},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x14d3c00014d4b, model64: 0x14d3c00014d4b},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x14d4b00014d5a, model64: 0x14d4b00014d5a},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x179c, match64: 0x00000000, model64: 0x14d5a00014d63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14d6300014d6f, model64: 0x14d6f00014d7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14d7c00014d89, model64: 0x14d7c00014d89},
		modelTuple{type64: 0x2700000027, matchRI: 0x179d, match64: 0x00000000, model64: 0x14d8900014d98},
		modelTuple{type64: 0x2700000027, matchRI: 0x179e, match64: 0x00000000, model64: 0x14d8900014d98},
		modelTuple{type64: 0x2700000027, matchRI: 0x179f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14d9c00014da4},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a2, match64: 0x00000000, model64: 0x14da800014db3},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x17a4, match64: 0x00000000, model64: 0x14dba00014dc6},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x14dc600014dce, model64: 0x14dce00014dd7},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x14dd700014dde, model64: 0x14dde00014de6},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x17a5, match64: 0x00000000, model64: 0x14de600014df0},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x17a6, match64: 0x00000000, model64: 0x14df000014dfb},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x17a7, match64: 0x00000000, model64: 0x14dfb00014e04},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x17a8, match64: 0x00000000, model64: 0x14e0400014e0f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x17a9, match64: 0x00000000, model64: 0x14e0f00014e16},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x17aa, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ab, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ac, match64: 0x00000000, model64: 0x59690000596e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14e1600014e1f, model64: 0x14e1f00014e28},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ad, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ae, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14e2c00014e32},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b2, match64: 0x00000000, model64: 0x14e3d00014e46},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b3, match64: 0x00000000, model64: 0x14e4600014e4f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x17b4, match64: 0x00000000, model64: 0x14e4f00014e5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b6, match64: 0x00000000, model64: 0x14e6200014e6a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14e7f00014e8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14e9100014e9d, model64: 0x14e9d00014ea0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ea000014eac, model64: 0x14eac00014eaf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14eaf00014ebc, model64: 0x14ebc00014ec0},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x14ec000014ec8, model64: 0x14ec800014ed1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x17b8, match64: 0x00000000, model64: 0x134770001347a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x17b9, match64: 0x00000000, model64: 0x14ed100014eda},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x14eda00014eec, model64: 0x14eec00014efa},
		modelTuple{type64: 0x2700000027, matchRI: 0x17bb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17bd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17be, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c1, match64: 0x00000000, model64: 0x14f1500014f1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c2, match64: 0x00000000, model64: 0x14f1b00014f22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14f2200014f33, model64: 0x14f3300014f3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c4, match64: 0x00000000, model64: 0xe38c0000e38e},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c5, match64: 0x00000000, model64: 0x13cb700013cb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c6, match64: 0x00000000, model64: 0x14f3e00014f44},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c7, match64: 0x00000000, model64: 0x102fa000102fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c8, match64: 0x00000000, model64: 0x10f0b00010f0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c9, match64: 0x00000000, model64: 0x14f4400014f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ca, match64: 0x00000000, model64: 0xf0ce0000f0d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x17cb, match64: 0x00000000, model64: 0x14f4d00014f56},
		modelTuple{type64: 0x2700000027, matchRI: 0x17cc, match64: 0x00000000, model64: 0x14f5600014f5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x17cd, match64: 0x00000000, model64: 0x19b2000019b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ce, match64: 0x00000000, model64: 0xc41f0000c422},
		modelTuple{type64: 0x2700000027, matchRI: 0x17cf, match64: 0x00000000, model64: 0x14f5b00014f61},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d0, match64: 0x00000000, model64: 0x10fab00010fad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14f6100014f6b, model64: 0x14f6b00014f70},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d1, match64: 0x00000000, model64: 0x14f7000014f76},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d2, match64: 0x00000000, model64: 0x14f7600014f7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d3, match64: 0x00000000, model64: 0x14f7c00014f81},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d4, match64: 0x00000000, model64: 0xc90e0000c910},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d5, match64: 0x00000000, model64: 0x14f8100014f86},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d6, match64: 0x00000000, model64: 0x14f8600014f8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d7, match64: 0x00000000, model64: 0x14f8b00014f94},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d8, match64: 0x00000000, model64: 0x14f9400014f9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d9, match64: 0x00000000, model64: 0x14f9d00014fa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x17da, match64: 0x00000000, model64: 0x14fa600014fab},
		modelTuple{type64: 0x2700000027, matchRI: 0x17db, match64: 0x00000000, model64: 0x14fab00014fb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x17dc, match64: 0x00000000, model64: 0x14fb000014fb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x17dd, match64: 0x00000000, model64: 0x14fb200014fb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x17de, match64: 0x00000000, model64: 0x14fb400014fb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x17df, match64: 0x00000000, model64: 0x14fb700014fba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14fba00014fc4, model64: 0x92a5000092a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14fc400014fce, model64: 0x14fce00014fd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e0, match64: 0x00000000, model64: 0x14fd100014fd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e1, match64: 0x00000000, model64: 0x14fd700014fe0},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e3, match64: 0x00000000, model64: 0x14fe600014fef},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e4, match64: 0x00000000, model64: 0x92a8000092aa},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e8, match64: 0x00000000, model64: 0x14ffd00015000},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ea, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1500c00015017, model64: 0x1501700015022},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150220001502a, model64: 0x1502a00015032},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1503200015041, model64: 0x1504100015050},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ec, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x150500001505f, model64: 0x150500001505f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1507000015076},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ee, match64: 0x00000000, model64: 0x59690000596e},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ef, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f0, match64: 0x00000000, model64: 0x1507a00015081},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1508100015089, model64: 0x1508100015089},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150890001508f, model64: 0x1508f00015095},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f1, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1509c000150a3, model64: 0x1509c000150a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f3, match64: 0x00000000, model64: 0x150ac000150ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f4, match64: 0x00000000, model64: 0x150ba000150c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f5, match64: 0x00000000, model64: 0x150c6000150cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f6, match64: 0x00000000, model64: 0x150cd000150d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f7, match64: 0x00000000, model64: 0x150d4000150dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f8, match64: 0x00000000, model64: 0x150dc000150e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f9, match64: 0x00000000, model64: 0x150dc000150e4},
		modelTuple{type64: 0x50000000b, matchRI: 0x17fa, match64: 0x00000000, model64: 0x150e4000150ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x17fb, match64: 0x00000000, model64: 0x150ec000150fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x17fc, match64: 0x00000000, model64: 0x150fd00015108},
		modelTuple{type64: 0x20d00000213, matchRI: 0x17fd, match64: 0x00000000, model64: 0x1510800015116},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1511600015121, model64: 0x1511600015121},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1512100015128, model64: 0x1512100015128},
		modelTuple{type64: 0x2700000027, matchRI: 0x17fe, match64: 0x00000000, model64: 0x151280001512f},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x17ff, match64: 0x00000000, model64: 0x1512f00015134},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1513400015146, model64: 0x1514600015150},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1800, match64: 0x00000000, model64: 0x1515000015158},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1801, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1802, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1803, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1804, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1805, match64: 0x00000000, model64: 0x1515800015168},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1517c00015183, model64: 0x1518300015189},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1518900015190, model64: 0x1519000015199},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15199000151a0, model64: 0x151a0000151a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151a7000151af, model64: 0x151af000151b8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1809, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x180a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x180b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x180c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x180d, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x180e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x180f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1812, match64: 0x00000000, model64: 0x100ac000100b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151d3000151da, model64: 0x151da000151e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151e7000151f4, model64: 0x151f4000151fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151fa00015208, model64: 0x152080001520f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1815, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x1816, match64: 0x00000000, model64: 0x152150001521c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1817, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1521c00015227, model64: 0x152270001522b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1522b00015232, model64: 0x6f6600006f6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1818, match64: 0x00000000, model64: 0x1523200015239},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1819, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1523e00015243, model64: 0x152430001524e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1524e00015255, model64: 0x1525500015262},
		modelTuple{type64: 0x2700000027, matchRI: 0x181c, match64: 0x00000000, model64: 0x1526b00015273},
		modelTuple{type64: 0x2700000027, matchRI: 0x181d, match64: 0x00000000, model64: 0x1527300015285},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x181e, match64: 0x00000000, model64: 0x152850001528f},
		modelTuple{type64: 0x2700000027, matchRI: 0x181f, match64: 0x00000000, model64: 0x1528f00015298},
		modelTuple{type64: 0x2700000027, matchRI: 0x1820, match64: 0x00000000, model64: 0x405c00004062},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1821, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1529e000152ad, model64: 0x152ad000152b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x152b3000152c2, model64: 0x152c2000152c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x152c6000152d5, model64: 0x152d5000152db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1823, match64: 0x00000000, model64: 0x152e2000152e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1824, match64: 0x00000000, model64: 0x152e8000152f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1825, match64: 0x00000000, model64: 0x152f0000152f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1826, match64: 0x00000000, model64: 0x152f900015300},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x153060001530e, model64: 0x1530e00015316},
		modelTuple{type64: 0x2700000027, matchRI: 0x1828, match64: 0x00000000, model64: 0x153160001531c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1829, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x182a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x182b, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: 0x182c, match64: 0x00000000, model64: 0x1531c00015322},
		modelTuple{type64: 0x51800000525, matchRI: 0x182e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x182f, match64: 0x00000000, model64: 0x1532900015332},
		modelTuple{type64: 0x2700000027, matchRI: 0x1830, match64: 0x00000000, model64: 0x1532900015332},
		modelTuple{type64: 0x2700000027, matchRI: 0x1831, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1832, match64: 0x00000000, model64: 0x9ac500009acf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1833, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1834, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1835, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1836, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1837, match64: 0x00000000, model64: 0x153320001533e},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1838, match64: 0x00000000, model64: 0x1533e00015354},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1839, match64: 0x00000000, model64: 0x153540001535d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x183a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x183b, match64: 0x00000000, model64: 0x1535d00015363},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x183c, match64: 0x00000000, model64: 0x1536300015379},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x183d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x183e, match64: 0x00000000, model64: 0x1537900015385},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1538500015393, model64: 0x153930001539f},
		modelTuple{type64: 0x2700000027, matchRI: 0x183f, match64: 0x00000000, model64: 0x1539f000153a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1840, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1842, match64: 0x00000000, model64: 0x153af000153b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1843, match64: 0x00000000, model64: 0x153b7000153bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1844, match64: 0x00000000, model64: 0x153bd000153c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1845, match64: 0x00000000, model64: 0x153c1000153c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1846, match64: 0x00000000, model64: 0x1062a00010631},
		modelTuple{type64: 0x2700000027, matchRI: 0x1848, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x153cc000153d5, model64: 0x1535d00015363},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1849, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x184c, match64: 0x00000000, model64: 0x153e0000153e2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x153e2000153ea, model64: 0x153ea000153f7},
		modelTuple{type64: 0xa0d50000a0ea, matchRI: 0x184d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x940000009f, matchRI: 0x184e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x153f7000153fe, model64: 0x153f7000153fe},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x184f, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1850, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1851, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1541500015420},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x194d0000194f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1856, match64: 0x00000000, model64: 0x1542f00015437},
		modelTuple{type64: 0x2700000027, matchRI: 0x1857, match64: 0x00000000, model64: 0x1543700015445},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x154450001544d, model64: 0x154450001544d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1544d00015456, model64: 0x1544d00015456},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x154560001545d, model64: 0x154560001545d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1858, match64: 0x00000000, model64: 0x1545d00015463},
		modelTuple{type64: 0x2700000027, matchRI: 0x1859, match64: 0x00000000, model64: 0x154630001546d},
		modelTuple{type64: 0x2700000027, matchRI: 0x185a, match64: 0x00000000, model64: 0x1546d00015477},
		modelTuple{type64: 0x2700000027, matchRI: 0x185b, match64: 0x00000000, model64: 0x1547700015482},
		modelTuple{type64: 0x2700000027, matchRI: 0x185c, match64: 0x00000000, model64: 0x154820001548d},
		modelTuple{type64: 0x2700000027, matchRI: 0x185d, match64: 0x00000000, model64: 0x1548d0001549b},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1549b0001549f, model64: 0x1549b0001549f},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1549f000154a8, model64: 0x154a8000154ab},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x154ab000154b6, model64: 0x154b6000154bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x185f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1860, match64: 0x00000000, model64: 0x154cb000154d4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x154e1000154ea, model64: 0x154ea000154f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x154f500015502, model64: 0x155020001550f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1863, match64: 0x00000000, model64: 0x1550f00015516},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1551a0001551e, model64: 0x1551e00015525},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1552500015529, model64: 0x155290001552e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1552e00015532, model64: 0x1553200015539},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x155390001553d, model64: 0x1553d00015546},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x155460001554a, model64: 0x1554a00015551},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1555100015555, model64: 0x155550001555f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1555f00015563, model64: 0x155630001556c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1556c00015570, model64: 0x155700001557a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x405c00004062},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1868, match64: 0x00000000, model64: 0x156300001565},
		modelTuple{type64: 0x2700000027, matchRI: 0x1869, match64: 0x00000000, model64: 0x1559200015598},
		modelTuple{type64: 0x2700000027, matchRI: 0x186a, match64: 0x00000000, model64: 0x155980001559b},
		modelTuple{type64: 0x2700000027, matchRI: 0x186b, match64: 0x00000000, model64: 0x1559b000155a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x186c, match64: 0x00000000, model64: 0x155a4000155b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x186d, match64: 0x00000000, model64: 0x155b4000155c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x186e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x155cc000155d0, model64: 0x155cc000155d0},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x155dd000155ee, model64: 0x155ee00015602},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1560200015613, model64: 0x1561300015626},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x156260001562e, model64: 0x1562e0001563e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1563e0001564a, model64: 0x1564a00015657},
		modelTuple{type64: 0x2700000027, matchRI: 0x1870, match64: 0x00000000, model64: 0x1565700015664},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1566400015671, model64: 0x156710001567a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1567a00015686, model64: 0x1568600015693},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15693000156a3, model64: 0x156a3000156b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1871, match64: 0x00000000, model64: 0x156b4000156c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156c0000156ce, model64: 0x156ce000156d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156d8000156e5, model64: 0x156e5000156f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1872, match64: 0x00000000, model64: 0x156f2000156fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1873, match64: 0x00000000, model64: 0x156fb00015703},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157190001571f, model64: 0x1571f00015727},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157270001572d, model64: 0x1572d00015735},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157350001573b, model64: 0x1573b00015743},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157430001574c, model64: 0x1574c00015759},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157590001575f, model64: 0x1575f00015766},
		modelTuple{type64: 0x2700000027, matchRI: 0x1877, match64: 0x00000000, model64: 0xcff70000cfff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157660001576f, model64: 0x1576f00015777},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157770001577d, model64: 0x1577d00015784},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157840001578a, model64: 0x1578a00015796},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157960001579f, model64: 0x1579f000157a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157a7000157b0, model64: 0x157b0000157bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157bd000157c3, model64: 0x157c3000157ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157ca000157d3, model64: 0x157d3000157db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157db000157e4, model64: 0x157e4000157ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157ec000157f2, model64: 0x157f2000157fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157fb00015801, model64: 0x158010001580a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1580a00015810, model64: 0x1581000015817},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1581700015820, model64: 0x1582000015828},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158280001582e, model64: 0x1582e00015831},
		modelTuple{type64: 0x2700000027, matchRI: 0x1878, match64: 0x00000000, model64: 0x1583100015838},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158380001583f, model64: 0x1583f00015848},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158480001584f, model64: 0x1584f00015854},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158540001585b, model64: 0x1585b00015862},
		modelTuple{type64: 0x2700000027, matchRI: 0x1879, match64: 0x00000000, model64: 0x1586200015869},
		modelTuple{type64: 0x2700000027, matchRI: 0x187a, match64: 0x00000000, model64: 0x158690001586e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1586e00015875, model64: 0x1587500015883},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158830001588b, model64: 0x1588b0001588f},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x187b, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: 0x187c, match64: 0x00000000, model64: 0x1588f00015899},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x15899000158a3, model64: 0x158a3000158b4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x187d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x187e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x187f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1571100015719, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1882, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1883, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158cb000158d0, model64: 0x74d9000074df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1885, match64: 0x00000000, model64: 0x158d0000158dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158dd000158e2, model64: 0x158e2000158eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1886, match64: 0x00000000, model64: 0x158eb000158f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1887, match64: 0x00000000, model64: 0x158f700015900},
		modelTuple{type64: 0x2700000027, matchRI: 0x1888, match64: 0x00000000, model64: 0x1590000015909},
		modelTuple{type64: 0x2700000027, matchRI: 0x1889, match64: 0x00000000, model64: 0x1590900015912},
		modelTuple{type64: 0x2700000027, matchRI: 0x188a, match64: 0x00000000, model64: 0x159120001591b},
		modelTuple{type64: 0x2700000027, matchRI: 0x188b, match64: 0x00000000, model64: 0x1591b00015924},
		modelTuple{type64: 0x2700000027, matchRI: 0x188c, match64: 0x00000000, model64: 0x159240001592d},
		modelTuple{type64: 0x2700000027, matchRI: 0x188d, match64: 0x00000000, model64: 0x1592d00015936},
		modelTuple{type64: 0x2700000027, matchRI: 0x188e, match64: 0x00000000, model64: 0x1593600015942},
		modelTuple{type64: 0x2700000027, matchRI: 0x188f, match64: 0x00000000, model64: 0x159420001594b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1890, match64: 0x00000000, model64: 0x1594b00015954},
		modelTuple{type64: 0x2700000027, matchRI: 0x1891, match64: 0x00000000, model64: 0x159540001595d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1892, match64: 0x00000000, model64: 0x1595d00015968},
		modelTuple{type64: 0x2700000027, matchRI: 0x1893, match64: 0x00000000, model64: 0x1596800015977},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159770001597c, model64: 0x1597c00015981},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1598100015986, model64: 0x1598600015993},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1599300015998, model64: 0x15998000159a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159a1000159a6, model64: 0x159a6000159af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159af000159b4, model64: 0x159b4000159bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1894, match64: 0x00000000, model64: 0x159bd000159c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1895, match64: 0x00000000, model64: 0x159c8000159d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1896, match64: 0x00000000, model64: 0x159d0000159db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159db000159e0, model64: 0x159e0000159ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159ea000159ef, model64: 0x159ef000159fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159fe00015a03, model64: 0x15a0300015a0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15a0b00015a10, model64: 0x15a1000015a21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1897, match64: 0x00000000, model64: 0x15a2100015a2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1898, match64: 0x00000000, model64: 0x15a2b00015a36},
		modelTuple{type64: 0x2700000027, matchRI: 0x1899, match64: 0x00000000, model64: 0x15a3600015a40},
		modelTuple{type64: 0x2700000027, matchRI: 0x189a, match64: 0x00000000, model64: 0x15a4000015a4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x189b, match64: 0x00000000, model64: 0x15a4a00015a59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15a5900015a60, model64: 0x15a5900015a60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15a6000015a65, model64: 0x15a6000015a65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15a6500015a6a, model64: 0x15a6a00015a72},
		modelTuple{type64: 0x20d00000213, matchRI: 0x189c, match64: 0x00000000, model64: 0x15a7200015a7f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x189d, match64: 0x00000000, model64: 0x15a7f00015a89},
		modelTuple{type64: 0x2700000027, matchRI: 0x189f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x6f5500006f57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15aca00015ad2, model64: 0x15ad200015ada},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a2, match64: 0x00000000, model64: 0x74f5000074f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a4, match64: 0x00000000, model64: 0x15ada00015ae4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15ae400015ae8, model64: 0x15ae800015af3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15af300015af8, model64: 0x15af800015b03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b0300015b0b, model64: 0x15b0300015b0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b0b00015b12, model64: 0x15b0b00015b12},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x15b1200015b17, model64: 0x15b1200015b17},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x15b1700015b23, model64: 0x15b2300015b2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a6, match64: 0x00000000, model64: 0x15b3b00015b41},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a7, match64: 0x00000000, model64: 0x15b4100015b4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a8, match64: 0x00000000, model64: 0x15b4d00015b5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a9, match64: 0x00000000, model64: 0x15b5d00015b68},
		modelTuple{type64: 0x2700000027, matchRI: 0x18aa, match64: 0x00000000, model64: 0x15b6800015b71},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ab, match64: 0x00000000, model64: 0x15b7100015b7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ac, match64: 0x00000000, model64: 0x15b7b00015b86},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ad, match64: 0x00000000, model64: 0x15b8600015b90},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ae, match64: 0x00000000, model64: 0x15b9000015b9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x18af, match64: 0x00000000, model64: 0x15b9b00015ba3},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b0, match64: 0x00000000, model64: 0x15ba300015bab},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b1, match64: 0x00000000, model64: 0x15bab00015bb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b2, match64: 0x00000000, model64: 0x15bb300015bb9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18b3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18b4, match64: 0x00000000, model64: 0x15bb900015bbf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18b5, match64: 0x00000000, model64: 0x15bbf00015bc8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15bc800015bcf, model64: 0x15bcf00015bd6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15bdc00015be8, model64: 0x1471d0001471f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15be800015bee, model64: 0x15bee00015bf4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15bf400015bf8, model64: 0x15bf800015bfb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15bfb00015c07, model64: 0x15c0700015c0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c0b00015c17, model64: 0x15c1700015c1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c1b00015c27, model64: 0x15c2700015c2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c2b00015c37, model64: 0x15c3700015c3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c3b00015c43, model64: 0x15c4300015c4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15c5600015c68, model64: 0x15c6800015c7b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x18ba, match64: 0x00000000, model64: 0x15c7b00015c8c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x18bb, match64: 0x00000000, model64: 0x15c8c00015c99},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15c9900015ca3, model64: 0x15ca300015cab},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15cab00015cb5, model64: 0x15cb500015cc1},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15cc100015ccb, model64: 0x15ccb00015cd7},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15cd700015ce1, model64: 0x15ce100015ce9},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15ce900015cf3, model64: 0x15cf300015cfb},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15cfb00015d05, model64: 0x15d0500015d0d},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d0d00015d17, model64: 0x15d1700015d1f},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d1f00015d29, model64: 0x15d2900015d35},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d3500015d3f, model64: 0x15d3f00015d47},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d4700015d51, model64: 0x15d5100015d5d},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d5d00015d67, model64: 0x15d6700015d6f},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d6f00015d79, model64: 0x15d7900015d85},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d8500015d8f, model64: 0x15d8f00015d97},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d9700015da1, model64: 0x15da100015da8},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15da800015db2, model64: 0x15db200015dbd},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15dbd00015dc7, model64: 0x15dc700015dd2},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15dd200015ddc, model64: 0x15ddc00015de7},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15de700015df1, model64: 0x15df100015dfc},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15dfc00015e06, model64: 0x15e0600015e11},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e1100015e1b, model64: 0x15e1b00015e22},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e2200015e2c, model64: 0x15e2c00015e37},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e3700015e41, model64: 0x15e4100015e4c},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e4c00015e56, model64: 0x15e5600015e5d},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e5d00015e67, model64: 0x15e6700015e72},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e7200015e7c, model64: 0x15e7c00015e87},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e8700015e91, model64: 0x15e9100015e9c},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e9c00015ea6, model64: 0x15ea600015eb1},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15eb100015ebb, model64: 0x15ebb00015ec6},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15ec600015ed0, model64: 0x15ed000015edb},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x18bc, match64: 0x00000000, model64: 0x15edb00015ee2},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15ee200015eec, model64: 0x15eec00015ef3},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15ef300015efd, model64: 0x15efd00015f04},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15f0400015f0e, model64: 0x15f0e00015f15},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15f1500015f1f, model64: 0x15f1f00015f26},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15f2600015f30, model64: 0x15f3000015f37},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15f3700015f41, model64: 0x15f4100015f48},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15f4800015f52, model64: 0x15f5200015f59},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15f5900015f63, model64: 0x15f6300015f6b},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15f6b00015f75, model64: 0x15f7500015f7c},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15f7c00015f86, model64: 0x15f8600015f8d},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15f8d00015f97, model64: 0x15f9700015fa2},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15fa200015fac, model64: 0x15fac00015fb3},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15fb300015fbd, model64: 0x15fbd00015fc5},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15fc500015fcf, model64: 0x15fcf00015fd7},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15fd700015fe1, model64: 0x15fe100015fe9},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15fe900015ff3, model64: 0x15ff300015ffb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15ffb00016005, model64: 0x160050001600f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1600f00016019, model64: 0x1601900016030},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x160300001603a, model64: 0x1603a00016044},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x160440001604f, model64: 0x1604f00016058},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1605800016061, model64: 0x160610001606e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1606e0001607a, model64: 0x1607a00016086},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1608600016090, model64: 0x160900001609d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1609d000160a4, model64: 0x160a4000160ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x160ae000160b5, model64: 0x160b5000160c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x160c0000160ca, model64: 0x160ca000160e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x18bd, match64: 0x00000000, model64: 0x160e4000160f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x18be, match64: 0x00000000, model64: 0x160f500016106},
		modelTuple{type64: 0x2700000027, matchRI: 0x18bf, match64: 0x00000000, model64: 0x1610600016112},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x161120001611c, model64: 0x1611c00016132},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x161320001613c, model64: 0x1613c00016141},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c0, match64: 0x00000000, model64: 0x1614100016155},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c1, match64: 0x00000000, model64: 0x1615500016160},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c2, match64: 0x00000000, model64: 0x161600001616b},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c3, match64: 0x00000000, model64: 0x1616b00016170},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c4, match64: 0x00000000, model64: 0x1617000016175},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x18c5, match64: 0x00000000, model64: 0x161750001617f},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x18c6, match64: 0x00000000, model64: 0x1617f0001618d},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x18c7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x18c9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18cb, match64: 0x00000000, model64: 0x161950001619e},
		modelTuple{type64: 0x2700000027, matchRI: 0x18cc, match64: 0x00000000, model64: 0x1619e000161a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ce, match64: 0x00000000, model64: 0x161ab000161b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x18cf, match64: 0x00000000, model64: 0x161b4000161bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d0, match64: 0x00000000, model64: 0x161bb000161c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d1, match64: 0x00000000, model64: 0x161c3000161c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d2, match64: 0x00000000, model64: 0x161c8000161ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d3, match64: 0x00000000, model64: 0x4e7c00004e84},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d4, match64: 0x00000000, model64: 0x161ce000161d8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18d5, match64: 0x00000000, model64: 0x161d8000161da},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18d6, match64: 0x00000000, model64: 0x161da000161e1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18d7, match64: 0x00000000, model64: 0x161e1000161e9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18d8, match64: 0x00000000, model64: 0x161e9000161f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x161f7000161ff, model64: 0x161ff00016207},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162070001620e, model64: 0x1620e00016215},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162150001621c, model64: 0x1621c00016223},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162230001622b, model64: 0x1622b00016233},
		modelTuple{type64: 0x2700000027, matchRI: 0x18da, match64: 0x00000000, model64: 0x5dd000005dd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1623300016239, model64: 0x162390001623b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1623b00016240, model64: 0x162400001624e},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x18dc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18dd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18df, match64: 0x00000000, model64: 0x1625c00016261},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e0, match64: 0x00000000, model64: 0x1626100016267},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x18e3, match64: 0x00000000, model64: 0x1627700016280},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1628000016284, model64: 0x162840001628c},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162a6000162ae, model64: 0x162a6000162ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ea, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ec, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x162c0000162c8, model64: 0x162c0000162c8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ef, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162d7000162e4, model64: 0x162e4000162f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f1, match64: 0x00000000, model64: 0x162f2000162fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162fd00016309, model64: 0x1630900016315},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f2, match64: 0x00000000, model64: 0x163150001631c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xce700000cee, model64: 0xce700000cee},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f3, match64: 0x00000000, model64: 0x1631c00016325},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163250001632c, model64: 0x1632c00016338},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163380001633f, model64: 0x163380001633f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1633f00016348, model64: 0x1633f00016348},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f4, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc65b0000c660, model64: 0xc65b0000c660},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f5, match64: 0x00000000, model64: 0x1634800016355},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1635500016361, model64: 0x1635500016361},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163610001636c, model64: 0x1636c00016377},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1637700016384, model64: 0x1638400016391},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1639100016399, model64: 0x16399000163a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163a1000163a9, model64: 0x163a1000163a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163a9000163b1, model64: 0x163b1000163b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163b9000163bf, model64: 0x163bf000163c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163c5000163cb, model64: 0x163cb000163d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f6, match64: 0x00000000, model64: 0x163d1000163da},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f7, match64: 0x00000000, model64: 0x163da000163e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f8, match64: 0x00000000, model64: 0x163e5000163ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163ef000163f7, model64: 0x163f700016401},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1640100016408, model64: 0x164080001640f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1640f00016417, model64: 0x1640f00016417},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1641700016422, model64: 0x1642200016425},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1642500016431, model64: 0x164310001643d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1643d0001644a, model64: 0x1644a00016459},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1645900016465, model64: 0x1645900016465},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164650001646f, model64: 0x164650001646f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1646f0001647a, model64: 0x1646f0001647a},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f9, match64: 0x00000000, model64: 0x1647a00016481},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fa, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1648100016492, model64: 0x1648100016492},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16492000164a2, model64: 0x16492000164a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164a2000164b1, model64: 0x164b1000164c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164c0000164cf, model64: 0x164cf000164de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164de000164ec, model64: 0x164ec000164fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164fa0001650b, model64: 0x164fa0001650b},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fb, match64: 0x00000000, model64: 0x1650b00016518},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fd, match64: 0x00000000, model64: 0x1651800016520},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fe, match64: 0x00000000, model64: 0x1652000016523},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ff, match64: 0x00000000, model64: 0x165230001652c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1900, match64: 0x00000000, model64: 0x73840000738d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1901, match64: 0x00000000, model64: 0x1652c00016532},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1902, match64: 0x00000000, model64: 0x1652c00016532},
		modelTuple{type64: 0x2700000027, matchRI: 0x1903, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x1904, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1905, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165320001653c, model64: 0x165320001653c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1907, match64: 0x00000000, model64: 0x1654100016547},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1654d00016555, model64: 0x165550001655f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1655f00016568, model64: 0x1656800016572},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165720001657c, model64: 0x1657c00016586},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165860001658e, model64: 0x1658e00016598},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16598000165a1, model64: 0x165a1000165ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165ab000165b3, model64: 0x165b3000165bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165bd000165c6, model64: 0x165c6000165d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165d0000165da, model64: 0x165da000165e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165e5000165ef, model64: 0x165ef000165fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1909, match64: 0x00000000, model64: 0x165fa00016605},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166050001660e, model64: 0x1660e00016619},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x166190001661f, model64: 0xe63c0000e63e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1661f00016627, model64: 0x166270001662f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1662f00016636, model64: 0x166360001663e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1663e00016646, model64: 0x1664600016650},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1665000016656, model64: 0x166560001665d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1665d00016666, model64: 0x1666600016671},
		modelTuple{type64: 0x20d00000213, matchRI: 0x190a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1667100016678, model64: 0x166780001667d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x190b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x190c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x190d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1667d00016682, model64: 0x1668200016686},
		modelTuple{type64: 0x20d00000213, matchRI: 0x190e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1910, match64: 0x00000000, model64: 0x166910001669b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1911, match64: 0x00000000, model64: 0x1669b000166a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166a7000166af, model64: 0x166a7000166af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1912, match64: 0x00000000, model64: 0x166af000166bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1913, match64: 0x00000000, model64: 0x166bc000166c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1914, match64: 0x00000000, model64: 0x166c4000166cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1915, match64: 0x00000000, model64: 0x166cc000166da},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1918, match64: 0x00000000, model64: 0x166e5000166ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1919, match64: 0x00000000, model64: 0x166ed000166f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x191a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x191b, match64: 0x00000000, model64: 0x166f1000166f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x191c, match64: 0x00000000, model64: 0x166f8000166fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x191d, match64: 0x00000000, model64: 0x166fe00016700},
		modelTuple{type64: 0x2700000027, matchRI: 0x191e, match64: 0x00000000, model64: 0x167000001670b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x191f, match64: 0x00000000, model64: 0x1670b00016716},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1920, match64: 0x00000000, model64: 0x167160001671f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1923, match64: 0x00000000, model64: 0x1672900016730},
		modelTuple{type64: 0x2700000027, matchRI: 0x1924, match64: 0x00000000, model64: 0x1673000016734},
		modelTuple{type64: 0x2700000027, matchRI: 0x1925, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1673b0001674a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1674a00016750, model64: 0x1675000016756},
		modelTuple{type64: 0x2700000027, matchRI: 0x1928, match64: 0x00000000, model64: 0x1675c00016761},
		modelTuple{type64: 0x2700000027, matchRI: 0x192a, match64: 0x00000000, model64: 0x167650001676c},
		modelTuple{type64: 0x2700000027, matchRI: 0x192b, match64: 0x00000000, model64: 0x1676c00016771},
		modelTuple{type64: 0x2700000027, matchRI: 0x192c, match64: 0x00000000, model64: 0x167710001677a},
		modelTuple{type64: 0x2700000027, matchRI: 0x192d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x192e, match64: 0x00000000, model64: 0x1677a00016782},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x167870001678f, model64: 0x1678f00016794},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x167940001679c, model64: 0x1679c000167a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x167a1000167a9, model64: 0x167a9000167ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x167ae000167b6, model64: 0x167b6000167bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1930, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x167bf000167c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1933, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x167d0000167da, model64: 0x167da000167eb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1934, match64: 0x00000000, model64: 0x167eb000167f7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1935, match64: 0x00000000, model64: 0x167f700016807},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1680700016812, model64: 0x1681200016821},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1936, match64: 0x00000000, model64: 0x168210001682c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1682c00016837, model64: 0x1683700016848},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1684800016852, model64: 0x1685200016863},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1937, match64: 0x00000000, model64: 0x1686300016873},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x168730001687f, model64: 0x1687f0001688e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1688e00016899, model64: 0x16899000168a8},
		modelTuple{type64: 0xa0d50000a0ea, matchRI: 0x1938, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1939, match64: 0x00000000, model64: 0x168a8000168ad},
		modelTuple{type64: 0x20d00000213, matchRI: 0x193a, match64: 0x00000000, model64: 0x168ad000168b1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x168b4000168c0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x193e, match64: 0x00000000, model64: 0x168c8000168d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x193f, match64: 0x00000000, model64: 0x168d9000168df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168df000168e7, model64: 0x707300007079},
		modelTuple{type64: 0x2700000027, matchRI: 0x1940, match64: 0x00000000, model64: 0x168e7000168ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1941, match64: 0x00000000, model64: 0x168ed000168f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1942, match64: 0x00000000, model64: 0x168f4000168f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168f800016900, model64: 0x169000001690b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1690b00016913, model64: 0x169130001691d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1691d00016925, model64: 0x53780000537e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169250001692d, model64: 0x1692d00016935},
		modelTuple{type64: 0x2700000027, matchRI: 0x1943, match64: 0x00000000, model64: 0x46ce000046d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1944, match64: 0x00000000, model64: 0x1693500016944},
		modelTuple{type64: 0x2700000027, matchRI: 0x1945, match64: 0x00000000, model64: 0x1694400016955},
		modelTuple{type64: 0x2700000027, matchRI: 0x1946, match64: 0x00000000, model64: 0x1695500016962},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1947, match64: 0x00000000, model64: 0x1696200016975},
		modelTuple{type64: 0x2700000027, matchRI: 0x1948, match64: 0x00000000, model64: 0x1695500016962},
		modelTuple{type64: 0x2700000027, matchRI: 0x1949, match64: 0x00000000, model64: 0x1695500016962},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1697500016979, model64: 0x1697900016986},
		modelTuple{type64: 0x2700000027, matchRI: 0x194a, match64: 0x00000000, model64: 0x169860001698e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1698e00016992, model64: 0x169920001699b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1699b0001699f, model64: 0x1699b0001699f},
		modelTuple{type64: 0x2700000027, matchRI: 0x194b, match64: 0x00000000, model64: 0x1699f000169a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169a7000169b1, model64: 0x169a7000169b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169b8000169c6, model64: 0x169b8000169c6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x194f, match64: 0x00000000, model64: 0x169d4000169dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169dc000169e3, model64: 0x169e3000169eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169f2000169f6, model64: 0x169f6000169f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169f9000169ff, model64: 0x169ff00016a04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a0400016a08, model64: 0x16a0800016a0c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a0c00016a10, model64: 0x16a1000016a19},
		modelTuple{type64: 0x2700000027, matchRI: 0x1952, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1953, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a1e00016a25, model64: 0x16a2500016a2d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x16a2d00016a36, model64: 0x16a3600016a40},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1954, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a5600016a62, model64: 0x16a6200016a6e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16a7300016a7a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x195a, match64: 0x00000000, model64: 0x16a8600016a8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x195b, match64: 0x00000000, model64: 0x16a8d00016a94},
		modelTuple{type64: 0x2700000027, matchRI: 0x195c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x195e, match64: 0x00000000, model64: 0x16a9a00016aa2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16aa200016aa9, model64: 0x16aa900016ab4},
		modelTuple{type64: 0x2700000027, matchRI: 0x195f, match64: 0x00000000, model64: 0x16ab400016abf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1960, match64: 0x00000000, model64: 0x183100001832},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16abf00016ac6, model64: 0x9cf600009cfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1961, match64: 0x00000000, model64: 0x10ef000010ef1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1962, match64: 0x00000000, model64: 0x16ac600016acb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1963, match64: 0x00000000, model64: 0x189800001899},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16acb00016ad2, model64: 0x16ad200016ad4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1964, match64: 0x00000000, model64: 0x16ad400016ad9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1965, match64: 0x00000000, model64: 0xc91a0000c91b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1966, match64: 0x00000000, model64: 0xe38c0000e38e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ad900016ae0, model64: 0x1327200013279},
		modelTuple{type64: 0x2700000027, matchRI: 0x1967, match64: 0x00000000, model64: 0x16ae000016ae6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ae600016aed, model64: 0x16aed00016af2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16af200016af9, model64: 0x16af900016aff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16aff00016b06, model64: 0x16b0600016b0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b0f00016b16, model64: 0x16b1600016b1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b1b00016b22, model64: 0x16b2200016b25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b2500016b2c, model64: 0x16b2c00016b32},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b3200016b39, model64: 0x16b3900016b3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b3b00016b42, model64: 0x16b4200016b45},
		modelTuple{type64: 0x2700000027, matchRI: 0x1968, match64: 0x00000000, model64: 0x16b4500016b4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1969, match64: 0x00000000, model64: 0x16b4a00016b53},
		modelTuple{type64: 0x2700000027, matchRI: 0x196a, match64: 0x00000000, model64: 0x16b5300016b55},
		modelTuple{type64: 0x2700000027, matchRI: 0x196b, match64: 0x00000000, model64: 0x18ca000018cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x196c, match64: 0x00000000, model64: 0x16b5500016b5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x196d, match64: 0x00000000, model64: 0x16b5a00016b5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b5c00016b63, model64: 0x16b6300016b65},
		modelTuple{type64: 0x2700000027, matchRI: 0x196e, match64: 0x00000000, model64: 0x131ba000131bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x196f, match64: 0x00000000, model64: 0x16b6500016b67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b6700016b6e, model64: 0x16b6e00016b70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1970, match64: 0x00000000, model64: 0x16b7000016b75},
		modelTuple{type64: 0x2700000027, matchRI: 0x1971, match64: 0x00000000, model64: 0x18d0000018d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b7500016b7c, model64: 0x16b7c00016b7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b7e00016b85, model64: 0x14a1d00014a22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b8500016b8c, model64: 0x16b8c00016ba2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ba200016ba9, model64: 0x149dc000149e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ba900016bb0, model64: 0x34b1000034b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1972, match64: 0x00000000, model64: 0x16bb000016bb2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16bb200016bb9, model64: 0x16bb900016bbb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16bbb00016bc2, model64: 0x16bc200016bc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1973, match64: 0x00000000, model64: 0x16bc600016bc8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16bc800016bcf, model64: 0x16bcf00016bd4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16bd400016bdb, model64: 0x9ce500009ce6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1974, match64: 0x00000000, model64: 0x16bdb00016bdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1975, match64: 0x00000000, model64: 0x16bdf00016be8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1976, match64: 0x00000000, model64: 0x16be800016bf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1977, match64: 0x00000000, model64: 0x350100003503},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16bf000016bf7, model64: 0x16bf700016bfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1978, match64: 0x00000000, model64: 0x16bfa00016c03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1979, match64: 0x00000000, model64: 0x16c0300016c0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c0d00016c14, model64: 0x16c1400016c1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c1e00016c25, model64: 0x16c2500016c2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c2c00016c33, model64: 0x16c3300016c3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x197a, match64: 0x00000000, model64: 0x16c3c00016c3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x197b, match64: 0x00000000, model64: 0x4c3000004c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x197c, match64: 0x00000000, model64: 0x5e5d00005e5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x197d, match64: 0x00000000, model64: 0x14fb200014fb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x197e, match64: 0x00000000, model64: 0x16c3e00016c41},
		modelTuple{type64: 0x2700000027, matchRI: 0x197f, match64: 0x00000000, model64: 0x16c4100016c44},
		modelTuple{type64: 0x2700000027, matchRI: 0x1980, match64: 0x00000000, model64: 0x16c4400016c47},
		modelTuple{type64: 0x2700000027, matchRI: 0x1981, match64: 0x00000000, model64: 0x16c4700016c5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1982, match64: 0x00000000, model64: 0x16c5b00016c5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1983, match64: 0x00000000, model64: 0x16c5e00016c61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1984, match64: 0x00000000, model64: 0x16c6100016c64},
		modelTuple{type64: 0x2700000027, matchRI: 0x1985, match64: 0x00000000, model64: 0x16c6400016c68},
		modelTuple{type64: 0x2700000027, matchRI: 0x1986, match64: 0x00000000, model64: 0x16c6800016c6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1987, match64: 0x00000000, model64: 0x16c6b00016c6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1988, match64: 0x00000000, model64: 0x16c6f00016c73},
		modelTuple{type64: 0x2700000027, matchRI: 0x1989, match64: 0x00000000, model64: 0x14fb400014fb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x198a, match64: 0x00000000, model64: 0x16c7300016c76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c7600016c7d, model64: 0x16c7d00016c81},
		modelTuple{type64: 0x2700000027, matchRI: 0x198b, match64: 0x00000000, model64: 0x16c8100016c84},
		modelTuple{type64: 0x2700000027, matchRI: 0x198c, match64: 0x00000000, model64: 0x16c8400016c87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c8700016c8e, model64: 0x14fce00014fd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c8e00016c95, model64: 0x92a5000092a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c9500016c9c, model64: 0x16c9c00016c9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c9f00016ca6, model64: 0x16ca600016cb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16cb000016cb7, model64: 0x16cb700016cbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x198d, match64: 0x00000000, model64: 0x16cbb00016cc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x198e, match64: 0x00000000, model64: 0x16cc300016cc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16cc700016cce, model64: 0x16cce00016ce2},
		modelTuple{type64: 0x2700000027, matchRI: 0x198f, match64: 0x00000000, model64: 0x16ce200016ce8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1990, match64: 0x00000000, model64: 0x16ce800016cf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1991, match64: 0x00000000, model64: 0x16cf000016cf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1992, match64: 0x00000000, model64: 0x16cf800016d05},
		modelTuple{type64: 0x2700000027, matchRI: 0x1993, match64: 0x00000000, model64: 0x16d0500016d0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1994, match64: 0x00000000, model64: 0x16d0e00016d17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1995, match64: 0x00000000, model64: 0x16d1700016d28},
		modelTuple{type64: 0x2700000027, matchRI: 0x1996, match64: 0x00000000, model64: 0x16d2800016d34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1997, match64: 0x00000000, model64: 0x16d3400016d40},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16d4000016d47, model64: 0x16d4700016d4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16d4f00016d56, model64: 0x16d5600016d5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16d5f00016d66, model64: 0x16d6600016d6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16d6f00016d76, model64: 0x16d7600016d7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16d7e00016d85, model64: 0x16d8500016d90},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16d9000016d97, model64: 0x16d9700016da0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16da000016da7, model64: 0x16da700016daf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16daf00016db6, model64: 0x16db600016dc1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16dc100016dc8, model64: 0x16dc800016dd4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16dd400016ddb, model64: 0x16ddb00016dea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1998, match64: 0x00000000, model64: 0x16dea00016df9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16df900016e00, model64: 0x16e0000016e09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e0900016e10, model64: 0x16e1000016e1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1999, match64: 0x00000000, model64: 0x92aa000092ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x199a, match64: 0x00000000, model64: 0x16e1f00016e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x199b, match64: 0x00000000, model64: 0x16e2500016e2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x199c, match64: 0x00000000, model64: 0x16e2c00016e33},
		modelTuple{type64: 0x2700000027, matchRI: 0x199d, match64: 0x00000000, model64: 0x16e3300016e3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x199e, match64: 0x00000000, model64: 0x16e3d00016e4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x199f, match64: 0x00000000, model64: 0xc90e0000c910},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a0, match64: 0x00000000, model64: 0x16e4b00016e58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e5800016e5f, model64: 0xc90e0000c910},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16af200016af9, model64: 0x16af900016aff},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a1, match64: 0x00000000, model64: 0x16e5f00016e62},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a2, match64: 0x00000000, model64: 0x16e6200016e67},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a3, match64: 0x00000000, model64: 0x16e6700016e6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a4, match64: 0x00000000, model64: 0x16e6c00016e72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e7200016e79, model64: 0x16e7900016e80},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a5, match64: 0x00000000, model64: 0x16e8000016e86},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a6, match64: 0x00000000, model64: 0x16e8600016e8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a7, match64: 0x00000000, model64: 0xe2050000e208},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e8c00016e93, model64: 0x16e9300016e96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e9600016e9d, model64: 0x16e9d00016ea0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ea000016ea7, model64: 0x16ea700016eac},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a8, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x19a9, match64: 0x00000000, model64: 0x16eac00016eaf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x19aa, match64: 0x00000000, model64: 0x16eaf00016eb4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x19ab, match64: 0x00000000, model64: 0x16eb400016ebc},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x16ebc00016ece, model64: 0x16ebc00016ece},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19af, match64: 0x00000000, model64: 0x16ee200016ef2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ef800016f05, model64: 0x16f0500016f0c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f0c00016f17, model64: 0x14a1d00014a22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f1700016f1f, model64: 0x18d0000018d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f2500016f2b, model64: 0x16f2b00016f31},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f3100016f39, model64: 0x16f3900016f42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f4200016f48, model64: 0x16f4800016f4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b3, match64: 0x00000000, model64: 0x16f4f00016f54},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b4, match64: 0x00000000, model64: 0x16f5400016f59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f5900016f65, model64: 0x16f5900016f65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f6500016f70, model64: 0x16f6500016f70},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x16f7000016f78, model64: 0x16f7800016f81},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x16f8100016f90, model64: 0x16f9000016fa1},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x16fa100016fae, model64: 0x16fae00016fbb},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x16fbb00016fc8, model64: 0x16fc800016fd5},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x16fd500016fea, model64: 0x16fea00017001},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1700100017012, model64: 0x1700100017012},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1701200017022, model64: 0x1701200017022},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x19b5, match64: 0x00000000, model64: 0x1702200017032},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x19b6, match64: 0x00000000, model64: 0x1703200017046},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x19b7, match64: 0x00000000, model64: 0x1704600017052},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x170520001705a, model64: 0x1705a00017062},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x170620001706e, model64: 0x1706e00017075},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ba, match64: 0x00000000, model64: 0x1708100017085},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1708900017095, model64: 0x170950001709d},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170a6000170ab, model64: 0x170ab000170ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170b9000170c6, model64: 0x170c6000170c9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x170d2000170d6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c1, match64: 0x00000000, model64: 0x170e1000170e7},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x19c2, match64: 0x00000000, model64: 0x170e7000170ed},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x170f5000170fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1710500017111, model64: 0x171110001711e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1711e00017126, model64: 0x171260001712e},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c7, match64: 0x00000000, model64: 0x1712e0001713a},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c8, match64: 0x00000000, model64: 0x1713a00017146},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c9, match64: 0x00000000, model64: 0x1714600017151},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x171730001717c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171890001718f, model64: 0x171890001718f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1718f00017197, model64: 0x1718f00017197},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171970001719c, model64: 0x171970001719c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171a0000171a5, model64: 0x171a5000171ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171ac000171b5, model64: 0x171b5000171ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2700000027, model64: 0x171ba000171ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x19cf, match64: 0x00000000, model64: 0x171d5000171e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d0, match64: 0x00000000, model64: 0x171e3000171f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x171f900017200},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x19d5, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d6, match64: 0x00000000, model64: 0x1720d00017218},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d7, match64: 0x00000000, model64: 0x1721800017224},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d8, match64: 0x00000000, model64: 0x172240001722f},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19db, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1723700017243, model64: 0x1724300017249},
		modelTuple{type64: 0x20d00000213, matchRI: 0x19dc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1724f00017258, model64: 0x1724f00017258},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172580001725f, model64: 0x172580001725f},
		modelTuple{type64: 0x2700000027, matchRI: 0x19de, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172660001726b, model64: 0x172660001726b},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e2, match64: 0x00000000, model64: 0x1727a00017285},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e5, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172890001728f, model64: 0x1728f00017296},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1729b000172a0, model64: 0x1729b000172a0},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x172a0000172a7, model64: 0x9a9200009a94},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x172ab000172b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ea, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x19eb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ed, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ee, match64: 0x00000000, model64: 0xc4580000c45b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x19f0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172d0000172db, model64: 0x172db000172e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172c9000172d0, model64: 0xee870000ee89},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f4, match64: 0x00000000, model64: 0x172f3000172fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f5, match64: 0x00000000, model64: 0x172fa00017305},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f6, match64: 0x00000000, model64: 0x173050001730b},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f9, match64: 0x00000000, model64: 0x1730e00017319},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fa, match64: 0x00000000, model64: 0x1731900017325},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fb, match64: 0x00000000, model64: 0x173250001732e},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fc, match64: 0x00000000, model64: 0x1732e00017339},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fd, match64: 0x00000000, model64: 0x1733900017344},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fe, match64: 0x00000000, model64: 0x1734400017354},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ff, match64: 0x00000000, model64: 0x1735400017360},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a00, match64: 0x00000000, model64: 0x1736000017369},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a01, match64: 0x00000000, model64: 0x1736900017372},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a02, match64: 0x00000000, model64: 0x173720001737c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a03, match64: 0x00000000, model64: 0x1737c00017380},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a04, match64: 0x00000000, model64: 0x173800001738b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a05, match64: 0x00000000, model64: 0x1738b00017396},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a06, match64: 0x00000000, model64: 0x173960001739f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a07, match64: 0x00000000, model64: 0x1739f000173ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a08, match64: 0x00000000, model64: 0x173ab000173b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a09, match64: 0x00000000, model64: 0x173b7000173c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0a, match64: 0x00000000, model64: 0x173c3000173d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0b, match64: 0x00000000, model64: 0x173d4000173e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0c, match64: 0x00000000, model64: 0x173e0000173ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0d, match64: 0x00000000, model64: 0x173ea000173f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0e, match64: 0x00000000, model64: 0x173f4000173fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0f, match64: 0x00000000, model64: 0x173fc00017407},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a10, match64: 0x00000000, model64: 0x1740700017413},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a11, match64: 0x00000000, model64: 0x174130001741c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1741c00017423, model64: 0x1741c00017423},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a12, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x174270001742a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a14, match64: 0x00000000, model64: 0x174360001743f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1744c00017455, model64: 0x174550001745e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1745e0001746c, model64: 0x1745e0001746c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1746c0001747c, model64: 0x1747c0001748c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1748c00017499, model64: 0x17499000174a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a18, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x174ad000174b6, model64: 0x174b6000174c0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x174c9000174d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x174d4000174e3, model64: 0x174e3000174f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x174f2000174fc, model64: 0x174fc00017506},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1750a00017513},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1751600017526, model64: 0x1752600017536},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1e, match64: 0x00000000, model64: 0x1753600017548},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1f, match64: 0x00000000, model64: 0x1754800017553},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175530001755e, model64: 0x175530001755e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1755e00017569, model64: 0x1756900017574},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175740001757e, model64: 0x1757e00017588},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1758800017595, model64: 0x17595000175a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a20, match64: 0x00000000, model64: 0x175a2000175ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a21, match64: 0x00000000, model64: 0x175ab000175b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175b4000175bd, model64: 0x175b4000175bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175bd000175c5, model64: 0x175c5000175cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175cd000175d3, model64: 0x175d3000175d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175d9000175de, model64: 0x175d9000175de},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x175de000175ec, model64: 0x175ec000175f6},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x175f600017604, model64: 0x176040001760e},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1760e0001761b, model64: 0x1761b00017624},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x176240001762d, model64: 0xc7890000c78e},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1762d00017638, model64: 0x176380001763f},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1763f0001764b, model64: 0x1764b00017653},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x176530001765f, model64: 0x1765f00017667},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x176670001766e, model64: 0x1766e00017671},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1a22, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1767100017680, model64: 0x176800001768b},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1768b00017694, model64: 0x1769400017699},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1769e000176a2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x176a7000176aa},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176b8000176bf, model64: 0x176b8000176bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176bf000176ca, model64: 0x176bf000176ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176ca000176d5, model64: 0x176d5000176e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176e0000176e6, model64: 0x176e6000176ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176ec000176f6, model64: 0x176f600017700},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177000001770c, model64: 0x1770c00017718},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177180001771f, model64: 0x1771f00017726},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177260001772e, model64: 0x1772e00017736},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177360001773d, model64: 0x1773d00017744},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177440001774b, model64: 0x177440001774b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177590001775f, model64: 0x177590001775f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1775f00017766, model64: 0x1775f00017766},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1776600017773, model64: 0x1777300017780},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177800001778c, model64: 0x177800001778c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a29, match64: 0x00000000, model64: 0x1778c00017799},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1779f000177a6, model64: 0x1779f000177a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2d, match64: 0x00000000, model64: 0xdd280000dd2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2f, match64: 0x00000000, model64: 0x177ad000177b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177b9000177c4, model64: 0x177c4000177cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a30, match64: 0x00000000, model64: 0x177cf000177d9},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1a31, match64: 0x00000000, model64: 0x177d9000177e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a33, match64: 0x00000000, model64: 0x177ef000177f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a34, match64: 0x00000000, model64: 0x177f7000177fc},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x177fc00017803, model64: 0x1780300017809},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a35, match64: 0x00000000, model64: 0x178090001780e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1781100017819},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x178220001782e, model64: 0x1782e0001783a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1783a00017848, model64: 0x1783a00017848},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1784800017850, model64: 0x1785000017858},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1785800017862, model64: 0x178620001786c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1786c00017875, model64: 0x178750001787e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1787e00017887, model64: 0x1788700017890},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1789000017899, model64: 0x17899000178a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x178a2000178ac, model64: 0x178a2000178ac},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x178ac000178b7, model64: 0x178b7000178c0},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1a39, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x178c5000178d2, model64: 0x178d2000178d7},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x178d7000178e0, model64: 0x178e0000178e6},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1a3d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3f, match64: 0x00000000, model64: 0x178eb000178fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a40, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x178fa00017902, model64: 0x179020001790b},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1a42, match64: 0x00000000, model64: 0x1790b00017914},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x179140001791a, model64: 0x2700000027},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1a43, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a44, match64: 0x00000000, model64: 0x1791a0001792a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a45, match64: 0x00000000, model64: 0x1792a0001793f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a46, match64: 0x00000000, model64: 0x1793f00017955},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a47, match64: 0x00000000, model64: 0x179550001796a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a48, match64: 0x00000000, model64: 0x1796a0001797e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a49, match64: 0x00000000, model64: 0x1797e0001798f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a4a, match64: 0x00000000, model64: 0x1798f000179a5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a4b, match64: 0x00000000, model64: 0x179a5000179ba},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a4c, match64: 0x00000000, model64: 0x179ba000179c4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a4d, match64: 0x00000000, model64: 0x179c4000179d3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a4e, match64: 0x00000000, model64: 0x179d3000179e7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a4f, match64: 0x00000000, model64: 0x179e7000179f9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a50, match64: 0x00000000, model64: 0x179f900017a10},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a51, match64: 0x00000000, model64: 0x17a1000017a24},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a52, match64: 0x00000000, model64: 0x17a2400017a36},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a53, match64: 0x00000000, model64: 0x17a3600017a4d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a54, match64: 0x00000000, model64: 0x17a4d00017a63},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a55, match64: 0x00000000, model64: 0x17a6300017a75},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a56, match64: 0x00000000, model64: 0x17a7500017a89},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a57, match64: 0x00000000, model64: 0x17a8900017a98},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x17a9800017a9e, model64: 0x17a9e00017ab2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a58, match64: 0x00000000, model64: 0x17ab200017ac2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a59, match64: 0x00000000, model64: 0x17ac200017ad2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a5a, match64: 0x00000000, model64: 0x17ad200017ae8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a5b, match64: 0x00000000, model64: 0x17ae800017b00},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a5c, match64: 0x00000000, model64: 0x17b0000017b23},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a5d, match64: 0x00000000, model64: 0x17b2300017b41},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a5e, match64: 0x00000000, model64: 0x17b4100017b63},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a5f, match64: 0x00000000, model64: 0x17b6300017b7c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a60, match64: 0x00000000, model64: 0x17b7c00017b90},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a61, match64: 0x00000000, model64: 0x17b9000017ba8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a62, match64: 0x00000000, model64: 0x17ba800017bd0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a63, match64: 0x00000000, model64: 0x17bd000017bf9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a64, match64: 0x00000000, model64: 0x17bf900017c20},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a65, match64: 0x00000000, model64: 0x17c2000017c48},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a66, match64: 0x00000000, model64: 0x17c4800017c64},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a67, match64: 0x00000000, model64: 0x17c6400017c80},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a68, match64: 0x00000000, model64: 0x17c8000017c9e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a69, match64: 0x00000000, model64: 0x17c9e00017cbd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a6a, match64: 0x00000000, model64: 0x17cbd00017cdf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a6b, match64: 0x00000000, model64: 0x17cdf00017d02},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a6c, match64: 0x00000000, model64: 0x17d0200017d1d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a6d, match64: 0x00000000, model64: 0x17d1d00017d34},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a6e, match64: 0x00000000, model64: 0x17d3400017d4c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a6f, match64: 0x00000000, model64: 0x17d4c00017d64},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a70, match64: 0x00000000, model64: 0x17d6400017d82},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a71, match64: 0x00000000, model64: 0x17d8200017d95},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a72, match64: 0x00000000, model64: 0x17d9500017da9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a73, match64: 0x00000000, model64: 0x17da900017dc2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a74, match64: 0x00000000, model64: 0x17dc200017dd5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a75, match64: 0x00000000, model64: 0x17dd500017dec},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a76, match64: 0x00000000, model64: 0x17dec00017e04},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a77, match64: 0x00000000, model64: 0x17e0400017e21},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a78, match64: 0x00000000, model64: 0x17e2100017e39},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a79, match64: 0x00000000, model64: 0x17e3900017e4f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a7a, match64: 0x00000000, model64: 0x17e4f00017e67},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a7b, match64: 0x00000000, model64: 0x17e6700017e85},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a7c, match64: 0x00000000, model64: 0x17e8500017e9b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a7d, match64: 0x00000000, model64: 0x17e9b00017ea9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a7e, match64: 0x00000000, model64: 0x17ea900017ebf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a7f, match64: 0x00000000, model64: 0x17ebf00017ed5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a80, match64: 0x00000000, model64: 0x17ed500017ee6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a81, match64: 0x00000000, model64: 0x17ee600017efc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a82, match64: 0x00000000, model64: 0x17efc00017f10},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a83, match64: 0x00000000, model64: 0x17f1000017f25},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a84, match64: 0x00000000, model64: 0x17f2500017f40},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a85, match64: 0x00000000, model64: 0x17f4000017f56},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a86, match64: 0x00000000, model64: 0x17f5600017f6a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a87, match64: 0x00000000, model64: 0x17f6a00017f7b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a88, match64: 0x00000000, model64: 0x17f7b00017f90},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a89, match64: 0x00000000, model64: 0x17f9000017fa6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a8a, match64: 0x00000000, model64: 0x17fa600017fbb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a8b, match64: 0x00000000, model64: 0x17fbb00017fd3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a8c, match64: 0x00000000, model64: 0x17fd300017fe9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a8d, match64: 0x00000000, model64: 0x17fe900018004},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a8e, match64: 0x00000000, model64: 0x1800400018016},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a8f, match64: 0x00000000, model64: 0x180160001802d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a90, match64: 0x00000000, model64: 0x1802d00018043},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a91, match64: 0x00000000, model64: 0x180430001805a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a92, match64: 0x00000000, model64: 0x1805a00018071},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a93, match64: 0x00000000, model64: 0x1807100018087},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a94, match64: 0x00000000, model64: 0x180870001809c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a95, match64: 0x00000000, model64: 0x1809c000180b3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a96, match64: 0x00000000, model64: 0x180b3000180c9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a97, match64: 0x00000000, model64: 0x180c9000180e0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a98, match64: 0x00000000, model64: 0x180e0000180f6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a99, match64: 0x00000000, model64: 0x180f60001810d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a9a, match64: 0x00000000, model64: 0x1810d00018123},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a9b, match64: 0x00000000, model64: 0x181230001813a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a9c, match64: 0x00000000, model64: 0x1813a00018150},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a9d, match64: 0x00000000, model64: 0x1815000018168},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a9e, match64: 0x00000000, model64: 0x1816800018181},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a9f, match64: 0x00000000, model64: 0x1818100018198},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa0, match64: 0x00000000, model64: 0x18198000181b0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa1, match64: 0x00000000, model64: 0x181b0000181c7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa2, match64: 0x00000000, model64: 0x181c7000181dd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa3, match64: 0x00000000, model64: 0x181dd000181f7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa4, match64: 0x00000000, model64: 0x181f700018210},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa5, match64: 0x00000000, model64: 0x182100001822b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa6, match64: 0x00000000, model64: 0x1822b00018247},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa7, match64: 0x00000000, model64: 0x182470001825e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa8, match64: 0x00000000, model64: 0x1825e00018277},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa9, match64: 0x00000000, model64: 0x182770001828d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aaa, match64: 0x00000000, model64: 0x1828d000182a5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aab, match64: 0x00000000, model64: 0x182a5000182bb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aac, match64: 0x00000000, model64: 0x182bb000182d0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aad, match64: 0x00000000, model64: 0x182d0000182e6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aae, match64: 0x00000000, model64: 0x182e6000182fb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aaf, match64: 0x00000000, model64: 0x182fb00018317},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab0, match64: 0x00000000, model64: 0x1831700018333},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab1, match64: 0x00000000, model64: 0x1833300018350},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab2, match64: 0x00000000, model64: 0x1835000018366},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab3, match64: 0x00000000, model64: 0x183660001837b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab4, match64: 0x00000000, model64: 0x1837b00018399},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab5, match64: 0x00000000, model64: 0x18399000183b6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab6, match64: 0x00000000, model64: 0x183b6000183d3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab7, match64: 0x00000000, model64: 0x183d3000183ec},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab8, match64: 0x00000000, model64: 0x183ec000183fd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab9, match64: 0x00000000, model64: 0x183fd00018413},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aba, match64: 0x00000000, model64: 0x1841300018427},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1abb, match64: 0x00000000, model64: 0x184270001843b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1abc, match64: 0x00000000, model64: 0x1843b00018451},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1abd, match64: 0x00000000, model64: 0x184510001846c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1abe, match64: 0x00000000, model64: 0x1846c00018484},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1abf, match64: 0x00000000, model64: 0x18484000184a1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ac0, match64: 0x00000000, model64: 0x184a1000184b9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ac1, match64: 0x00000000, model64: 0x184b9000184d6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ac2, match64: 0x00000000, model64: 0x184d6000184f1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ac3, match64: 0x00000000, model64: 0x184f100018511},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ac4, match64: 0x00000000, model64: 0x1851100018526},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ac5, match64: 0x00000000, model64: 0x1852600018532},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1853200018539, model64: 0x1853900018553},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x185530001855b, model64: 0x1855b00018566},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x185660001856e, model64: 0x1856e0001857d},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1857d00018585, model64: 0x1858500018592},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x185920001859b, model64: 0x1859b000185ac},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x185ac000185b3, model64: 0x185b3000185d1},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x185d1000185d8, model64: 0x185d8000185f2},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x185f2000185f9, model64: 0x185f900018617},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x186170001861e, model64: 0x1861e0001862f},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1862f00018636, model64: 0x1863600018649},
		modelTuple{type64: 0x245f00002467, matchRI: 0x1ac6, match64: 0x00000000, model64: 0x186490001865c},
		modelTuple{type64: 0x245f00002467, matchRI: 0x1ac7, match64: 0x00000000, model64: 0x1865c0001866f},
		modelTuple{type64: 0x245f00002467, matchRI: 0x1ac8, match64: 0x00000000, model64: 0x1866f00018682},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1868200018689, model64: 0x18689000186a0},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x186a0000186a7, model64: 0x186a7000186be},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x186be000186c5, model64: 0x186c5000186da},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x186da000186e1, model64: 0x186e1000186f4},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x186f4000186fb, model64: 0x186fb0001870c},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1870c00018713, model64: 0x1871300018728},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x187280001872f, model64: 0x1872f00018742},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1874200018749, model64: 0x187490001875f},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1875f00018766, model64: 0x1876600018782},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1878200018789, model64: 0x187890001879c},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1879c000187a3, model64: 0x187a3000187b6},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x187b6000187bd, model64: 0x187bd000187c8},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x187c8000187cf, model64: 0x187cf000187db},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x187db000187e2, model64: 0x187e2000187fe},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x187fe00018805, model64: 0x1880500018820},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1882000018827, model64: 0x188270001883e},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1883e00018845, model64: 0x1884500018858},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x188580001885f, model64: 0x1885f00018872},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1887200018879, model64: 0x188790001888f},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1888f00018898, model64: 0x1888f00018898},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x1ac9, match64: 0x00000000, model64: 0x18898000188a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aca, match64: 0x00000000, model64: 0x188a2000188ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1acb, match64: 0x00000000, model64: 0x188ac000188b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1acc, match64: 0x00000000, model64: 0x188b8000188c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1acd, match64: 0x00000000, model64: 0x188c3000188ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ace, match64: 0x00000000, model64: 0x188ce000188db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1acf, match64: 0x00000000, model64: 0x188db000188e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad0, match64: 0x00000000, model64: 0x188e7000188f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad1, match64: 0x00000000, model64: 0x188f800018902},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad2, match64: 0x00000000, model64: 0x189020001890e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad3, match64: 0x00000000, model64: 0x1890e0001891b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad4, match64: 0x00000000, model64: 0x1891b00018923},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad5, match64: 0x00000000, model64: 0x189230001892b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad6, match64: 0x00000000, model64: 0x1892b00018932},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad7, match64: 0x00000000, model64: 0x1893200018939},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad8, match64: 0x00000000, model64: 0x1893900018940},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad9, match64: 0x00000000, model64: 0x189400001894b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ada, match64: 0x00000000, model64: 0x1894b00018950},
		modelTuple{type64: 0x2700000027, matchRI: 0x1adb, match64: 0x00000000, model64: 0x1895000018957},
		modelTuple{type64: 0x2700000027, matchRI: 0x1adc, match64: 0x00000000, model64: 0x189570001895f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1add, match64: 0x00000000, model64: 0x1895f00018970},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ade, match64: 0x00000000, model64: 0x189700001897a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1adf, match64: 0x00000000, model64: 0x1897a0001898a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae0, match64: 0x00000000, model64: 0x1898a00018996},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae1, match64: 0x00000000, model64: 0x18996000189a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae2, match64: 0x00000000, model64: 0x189a2000189b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae3, match64: 0x00000000, model64: 0x189b3000189c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae4, match64: 0x00000000, model64: 0x189c4000189d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae5, match64: 0x00000000, model64: 0x189d4000189df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae6, match64: 0x00000000, model64: 0x189df000189f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae7, match64: 0x00000000, model64: 0x189f100018a02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae8, match64: 0x00000000, model64: 0x18a0200018a21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae9, match64: 0x00000000, model64: 0x18a2100018a2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aea, match64: 0x00000000, model64: 0x18a2c00018a3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aeb, match64: 0x00000000, model64: 0x18a3f00018a4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aec, match64: 0x00000000, model64: 0x18a4e00018a62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aed, match64: 0x00000000, model64: 0x18a6200018a64},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aee, match64: 0x00000000, model64: 0x18a6400018a6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aef, match64: 0x00000000, model64: 0x18a6f00018a7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af0, match64: 0x00000000, model64: 0x18a7c00018a87},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af1, match64: 0x00000000, model64: 0x18a8700018a94},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af2, match64: 0x00000000, model64: 0x18a9400018a9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af3, match64: 0x00000000, model64: 0x18a9e00018aac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af4, match64: 0x00000000, model64: 0x18a2c00018a3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af5, match64: 0x00000000, model64: 0x18aac00018aba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af6, match64: 0x00000000, model64: 0x18aba00018ac3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af7, match64: 0x00000000, model64: 0x18ac300018acc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af8, match64: 0x00000000, model64: 0x18acc00018ad4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af9, match64: 0x00000000, model64: 0x18ad400018ae1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afa, match64: 0x00000000, model64: 0x18ae100018aea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afb, match64: 0x00000000, model64: 0x18aea00018b01},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afc, match64: 0x00000000, model64: 0x18b0100018b11},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afd, match64: 0x00000000, model64: 0x189d4000189df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afe, match64: 0x00000000, model64: 0x18b1100018b22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aff, match64: 0x00000000, model64: 0x18b2200018b2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b00, match64: 0x00000000, model64: 0x18b2a00018b3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b01, match64: 0x00000000, model64: 0x18b3a00018b48},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b02, match64: 0x00000000, model64: 0x18b4800018b56},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b03, match64: 0x00000000, model64: 0x18b5600018b6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b04, match64: 0x00000000, model64: 0x18b6d00018b7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b05, match64: 0x00000000, model64: 0x18b7d00018b89},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b06, match64: 0x00000000, model64: 0x18b8900018b99},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b07, match64: 0x00000000, model64: 0x18b9900018ba2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b08, match64: 0x00000000, model64: 0x18ba200018bb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b09, match64: 0x00000000, model64: 0x18bb500018bc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0a, match64: 0x00000000, model64: 0x18bc200018bcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0b, match64: 0x00000000, model64: 0x18bcd00018bdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0c, match64: 0x00000000, model64: 0x18bdf00018bf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0d, match64: 0x00000000, model64: 0x18bf000018bff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0e, match64: 0x00000000, model64: 0x18bff00018c13},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0f, match64: 0x00000000, model64: 0x18c1300018c1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b10, match64: 0x00000000, model64: 0x18c1f00018c30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b11, match64: 0x00000000, model64: 0x18c3000018c3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b12, match64: 0x00000000, model64: 0x18c3e00018c50},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b13, match64: 0x00000000, model64: 0x18c5000018c69},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b14, match64: 0x00000000, model64: 0x18c6900018c74},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b15, match64: 0x00000000, model64: 0x18c7400018c84},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b16, match64: 0x00000000, model64: 0x18c8400018c8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b17, match64: 0x00000000, model64: 0x18c8f00018c9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b18, match64: 0x00000000, model64: 0x18c9c00018ca8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b19, match64: 0x00000000, model64: 0x18ca800018cb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1a, match64: 0x00000000, model64: 0x18cb700018cc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1b, match64: 0x00000000, model64: 0x18cc300018cd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1c, match64: 0x00000000, model64: 0x18cd400018ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1d, match64: 0x00000000, model64: 0x18ce500018cf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1e, match64: 0x00000000, model64: 0x18cf300018d00},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1f, match64: 0x00000000, model64: 0x18d0000018d0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b20, match64: 0x00000000, model64: 0x18d0f00018d1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b21, match64: 0x00000000, model64: 0x18d1e00018d2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b22, match64: 0x00000000, model64: 0x18d2d00018d3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b23, match64: 0x00000000, model64: 0x18d3c00018d4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b24, match64: 0x00000000, model64: 0x18d4e00018d5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b25, match64: 0x00000000, model64: 0x18d5d00018d6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b26, match64: 0x00000000, model64: 0x18d6d00018d7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b27, match64: 0x00000000, model64: 0x18d7e00018d94},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b28, match64: 0x00000000, model64: 0x18d9400018da3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b29, match64: 0x00000000, model64: 0x18da300018db6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2a, match64: 0x00000000, model64: 0x16b9000016bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2b, match64: 0x00000000, model64: 0x18db600018dbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2c, match64: 0x00000000, model64: 0x18dbd00018dc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2d, match64: 0x00000000, model64: 0x18dc300018dc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2e, match64: 0x00000000, model64: 0x18dc900018dcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2f, match64: 0x00000000, model64: 0x18dcf00018dd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b30, match64: 0x00000000, model64: 0x18dd700018ddf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b31, match64: 0x00000000, model64: 0x18ddf00018de7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b32, match64: 0x00000000, model64: 0x18de700018def},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b33, match64: 0x00000000, model64: 0x18def00018dfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b34, match64: 0x00000000, model64: 0x18dfd00018e0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b35, match64: 0x00000000, model64: 0x18e0a00018e17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b36, match64: 0x00000000, model64: 0x18e1700018e24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b37, match64: 0x00000000, model64: 0x18e2400018e34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b38, match64: 0x00000000, model64: 0x18e3400018e45},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b39, match64: 0x00000000, model64: 0x18e4500018e64},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3a, match64: 0x00000000, model64: 0x18a3f00018a4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3b, match64: 0x00000000, model64: 0x18e6400018e77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3c, match64: 0x00000000, model64: 0x18e7700018e86},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3d, match64: 0x00000000, model64: 0x18e8600018e97},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3e, match64: 0x00000000, model64: 0x18e9700018ea5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3f, match64: 0x00000000, model64: 0x18ea500018eb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b40, match64: 0x00000000, model64: 0x18eb700018ec5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b41, match64: 0x00000000, model64: 0x18ec500018ece},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b42, match64: 0x00000000, model64: 0x18ece00018edc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b43, match64: 0x00000000, model64: 0x18edc00018eec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b44, match64: 0x00000000, model64: 0x18eec00018ef9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b45, match64: 0x00000000, model64: 0x18ef900018f0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b46, match64: 0x00000000, model64: 0x18f0a00018f13},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b47, match64: 0x00000000, model64: 0x18edc00018eec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b48, match64: 0x00000000, model64: 0x18f1300018f21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b49, match64: 0x00000000, model64: 0x18f2100018f30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4a, match64: 0x00000000, model64: 0x18f3000018f39},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4b, match64: 0x00000000, model64: 0x18f3900018f47},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4c, match64: 0x00000000, model64: 0x18f4700018f57},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4d, match64: 0x00000000, model64: 0x18f5700018f60},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4e, match64: 0x00000000, model64: 0x18f6000018f6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4f, match64: 0x00000000, model64: 0x18f6e00018f7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b50, match64: 0x00000000, model64: 0x18f7e00018f88},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b51, match64: 0x00000000, model64: 0x18f8800018f91},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b52, match64: 0x00000000, model64: 0x18f9100018f9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b53, match64: 0x00000000, model64: 0x18f9b00018fa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b54, match64: 0x00000000, model64: 0x18fa500018fb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b55, match64: 0x00000000, model64: 0x18fb400018fbf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18fbf00018fc5, model64: 0x18fc500018fe6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b56, match64: 0x00000000, model64: 0x18fe600018ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b57, match64: 0x00000000, model64: 0x18ff100018ffb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b58, match64: 0x00000000, model64: 0x18ffb00019008},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b59, match64: 0x00000000, model64: 0x1900800019015},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5a, match64: 0x00000000, model64: 0x1901500019025},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5b, match64: 0x00000000, model64: 0x1902500019038},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5c, match64: 0x00000000, model64: 0x1903800019043},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5d, match64: 0x00000000, model64: 0x1904300019051},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5e, match64: 0x00000000, model64: 0x1905100019061},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5f, match64: 0x00000000, model64: 0x190610001906e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b60, match64: 0x00000000, model64: 0x1906e0001907e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b61, match64: 0x00000000, model64: 0x1907e000190a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b62, match64: 0x00000000, model64: 0x190a1000190b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b63, match64: 0x00000000, model64: 0x190b4000190c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b64, match64: 0x00000000, model64: 0x190c2000190cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b65, match64: 0x00000000, model64: 0x190cc000190dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b66, match64: 0x00000000, model64: 0x190dc000190e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b67, match64: 0x00000000, model64: 0x190e7000190f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b68, match64: 0x00000000, model64: 0x190f1000190fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b69, match64: 0x00000000, model64: 0x190fc0001910c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6a, match64: 0x00000000, model64: 0x1910c00019119},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6b, match64: 0x00000000, model64: 0x1911900019129},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6c, match64: 0x00000000, model64: 0x1912900019137},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6d, match64: 0x00000000, model64: 0x1913700019148},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6e, match64: 0x00000000, model64: 0x1914800019157},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6f, match64: 0x00000000, model64: 0x1915700019165},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b70, match64: 0x00000000, model64: 0x191650001916f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b71, match64: 0x00000000, model64: 0x1916f0001917b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b72, match64: 0x00000000, model64: 0x1917b0001918b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b73, match64: 0x00000000, model64: 0x1918b00019195},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b74, match64: 0x00000000, model64: 0x19195000191a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b75, match64: 0x00000000, model64: 0x191a4000191af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b76, match64: 0x00000000, model64: 0x191af000191ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b77, match64: 0x00000000, model64: 0x191ba000191c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b78, match64: 0x00000000, model64: 0x191c4000191cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b79, match64: 0x00000000, model64: 0x191cf000191da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7a, match64: 0x00000000, model64: 0x191da000191e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7b, match64: 0x00000000, model64: 0x191e4000191f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7c, match64: 0x00000000, model64: 0x191f3000191fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7d, match64: 0x00000000, model64: 0x191fd0001920b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7e, match64: 0x00000000, model64: 0x1920b00019215},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7f, match64: 0x00000000, model64: 0x1921500019222},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b80, match64: 0x00000000, model64: 0x192220001922c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b81, match64: 0x00000000, model64: 0x1922c00019236},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b82, match64: 0x00000000, model64: 0x1923600019242},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b83, match64: 0x00000000, model64: 0x192420001924f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b84, match64: 0x00000000, model64: 0x1924f0001925f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b85, match64: 0x00000000, model64: 0x1925f0001926f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b86, match64: 0x00000000, model64: 0x1926f0001927f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b87, match64: 0x00000000, model64: 0x1927f0001928c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b88, match64: 0x00000000, model64: 0x1928c00019295},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b89, match64: 0x00000000, model64: 0x192950001929e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8a, match64: 0x00000000, model64: 0x1929e000192ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8b, match64: 0x00000000, model64: 0x192ac000192bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8c, match64: 0x00000000, model64: 0x192bc000192cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8d, match64: 0x00000000, model64: 0x192cc000192dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8e, match64: 0x00000000, model64: 0x192dc000192e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8f, match64: 0x00000000, model64: 0x192e6000192f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b90, match64: 0x00000000, model64: 0x192f300019301},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b91, match64: 0x00000000, model64: 0x193010001930a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b92, match64: 0x00000000, model64: 0x1930a00019314},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b93, match64: 0x00000000, model64: 0x1931400019325},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b94, match64: 0x00000000, model64: 0x193250001932f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b95, match64: 0x00000000, model64: 0x1932f00019338},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b96, match64: 0x00000000, model64: 0x1933800019348},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b97, match64: 0x00000000, model64: 0x1934800019358},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b98, match64: 0x00000000, model64: 0x1935800019368},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b99, match64: 0x00000000, model64: 0x1936800019372},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9a, match64: 0x00000000, model64: 0x193720001937c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9b, match64: 0x00000000, model64: 0x1937c00019389},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9c, match64: 0x00000000, model64: 0x1938900019396},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9d, match64: 0x00000000, model64: 0x193960001939f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9e, match64: 0x00000000, model64: 0x1939f000193ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9f, match64: 0x00000000, model64: 0x193ad000193bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba0, match64: 0x00000000, model64: 0x193bd000193c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba1, match64: 0x00000000, model64: 0x193c7000193d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba2, match64: 0x00000000, model64: 0x193d7000193e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba3, match64: 0x00000000, model64: 0x193e8000193f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba4, match64: 0x00000000, model64: 0x193f1000193fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba5, match64: 0x00000000, model64: 0x193fc0001940c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba6, match64: 0x00000000, model64: 0x1940c0001941a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba7, match64: 0x00000000, model64: 0x1941a00019427},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba8, match64: 0x00000000, model64: 0x1942700019431},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba9, match64: 0x00000000, model64: 0x194310001943c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1baa, match64: 0x00000000, model64: 0x1943c00019447},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bab, match64: 0x00000000, model64: 0x1920b00019215},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bac, match64: 0x00000000, model64: 0x1944700019451},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bad, match64: 0x00000000, model64: 0x194510001945e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bae, match64: 0x00000000, model64: 0x1945e00019468},
		modelTuple{type64: 0x2700000027, matchRI: 0x1baf, match64: 0x00000000, model64: 0x1946800019472},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb0, match64: 0x00000000, model64: 0x194720001947c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb1, match64: 0x00000000, model64: 0x1947c00019487},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb2, match64: 0x00000000, model64: 0x1948700019492},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb3, match64: 0x00000000, model64: 0x194920001949d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb4, match64: 0x00000000, model64: 0x1949d000194a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb5, match64: 0x00000000, model64: 0x194a7000194b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb6, match64: 0x00000000, model64: 0x194b4000194be},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb7, match64: 0x00000000, model64: 0x194be000194c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb8, match64: 0x00000000, model64: 0x194c9000194d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb9, match64: 0x00000000, model64: 0x194d3000194dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bba, match64: 0x00000000, model64: 0x194dd000194ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbb, match64: 0x00000000, model64: 0x194ea000194f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbc, match64: 0x00000000, model64: 0x194f700019501},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbd, match64: 0x00000000, model64: 0x195010001950c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbe, match64: 0x00000000, model64: 0x1950c00019516},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbf, match64: 0x00000000, model64: 0x1951600019523},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc0, match64: 0x00000000, model64: 0x195230001952d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc1, match64: 0x00000000, model64: 0x1952d00019538},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc2, match64: 0x00000000, model64: 0x1952d00019538},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc3, match64: 0x00000000, model64: 0x1953800019542},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc4, match64: 0x00000000, model64: 0x195420001954f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc5, match64: 0x00000000, model64: 0x1954f0001955f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc6, match64: 0x00000000, model64: 0x1955f0001956c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc7, match64: 0x00000000, model64: 0x1956c00019579},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc8, match64: 0x00000000, model64: 0x1957900019583},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc9, match64: 0x00000000, model64: 0x195830001958e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bca, match64: 0x00000000, model64: 0x1958e00019598},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcb, match64: 0x00000000, model64: 0x19598000195a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcc, match64: 0x00000000, model64: 0x195a2000195af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcd, match64: 0x00000000, model64: 0x195af000195ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bce, match64: 0x00000000, model64: 0x195ba000195c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcf, match64: 0x00000000, model64: 0x195c4000195ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd0, match64: 0x00000000, model64: 0x195ce000195d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd1, match64: 0x00000000, model64: 0x195d8000195e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd2, match64: 0x00000000, model64: 0x195e5000195ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd3, match64: 0x00000000, model64: 0x195ef000195fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd4, match64: 0x00000000, model64: 0x195fc00019609},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd5, match64: 0x00000000, model64: 0x1960900019613},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd6, match64: 0x00000000, model64: 0x1961300019623},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd7, match64: 0x00000000, model64: 0x196230001962e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd8, match64: 0x00000000, model64: 0x1962e00019637},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd9, match64: 0x00000000, model64: 0x1963700019645},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bda, match64: 0x00000000, model64: 0x1964500019659},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdb, match64: 0x00000000, model64: 0x1965900019669},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdc, match64: 0x00000000, model64: 0x1966900019676},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdd, match64: 0x00000000, model64: 0x196760001967f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bde, match64: 0x00000000, model64: 0x1967f0001968d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdf, match64: 0x00000000, model64: 0x1968d0001969b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be0, match64: 0x00000000, model64: 0x1969b000196a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be1, match64: 0x00000000, model64: 0x196a9000196b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be2, match64: 0x00000000, model64: 0x196b6000196c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be3, match64: 0x00000000, model64: 0x196c5000196d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be4, match64: 0x00000000, model64: 0x196d2000196df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be5, match64: 0x00000000, model64: 0x196df000196f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be6, match64: 0x00000000, model64: 0x196f100019700},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be7, match64: 0x00000000, model64: 0x1970000019710},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be8, match64: 0x00000000, model64: 0x197100001971e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be9, match64: 0x00000000, model64: 0x1971e0001972c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bea, match64: 0x00000000, model64: 0x1972c0001973d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1beb, match64: 0x00000000, model64: 0x1973d0001974e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bec, match64: 0x00000000, model64: 0x196df000196f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bed, match64: 0x00000000, model64: 0x1974e0001975e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bee, match64: 0x00000000, model64: 0x1975e0001976e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bef, match64: 0x00000000, model64: 0x1976e0001977e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf0, match64: 0x00000000, model64: 0x1977e0001978e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf1, match64: 0x00000000, model64: 0x1978e00019797},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf2, match64: 0x00000000, model64: 0x19797000197a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf3, match64: 0x00000000, model64: 0x197a7000197b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf4, match64: 0x00000000, model64: 0x197b7000197cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf5, match64: 0x00000000, model64: 0x197cb000197db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf6, match64: 0x00000000, model64: 0x197db000197ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf7, match64: 0x00000000, model64: 0x197ea000197f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf8, match64: 0x00000000, model64: 0x197f3000197fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf9, match64: 0x00000000, model64: 0x197fd0001980b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfa, match64: 0x00000000, model64: 0x1980b00019815},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfb, match64: 0x00000000, model64: 0x198150001981f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfc, match64: 0x00000000, model64: 0x1981f00019828},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfd, match64: 0x00000000, model64: 0x1982800019838},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfe, match64: 0x00000000, model64: 0x1983800019848},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bff, match64: 0x00000000, model64: 0x1984800019858},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c00, match64: 0x00000000, model64: 0x1985800019868},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c01, match64: 0x00000000, model64: 0x1986800019877},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c02, match64: 0x00000000, model64: 0x1987700019886},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c03, match64: 0x00000000, model64: 0x1988600019897},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c04, match64: 0x00000000, model64: 0x19897000198a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c05, match64: 0x00000000, model64: 0x198a4000198b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c06, match64: 0x00000000, model64: 0x198b5000198c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c07, match64: 0x00000000, model64: 0x198c2000198d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c08, match64: 0x00000000, model64: 0x198d0000198dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c09, match64: 0x00000000, model64: 0x198dd000198ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0a, match64: 0x00000000, model64: 0x198ec000198f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0b, match64: 0x00000000, model64: 0x198f700019902},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x199020001990c, model64: 0x1990c0001991a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1991a00019923, model64: 0x1992300019930},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0c, match64: 0x00000000, model64: 0x1993000019939},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0d, match64: 0x00000000, model64: 0x199390001994a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0e, match64: 0x00000000, model64: 0x1994a00019959},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1995900019960, model64: 0x199600001996e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1996e00019976, model64: 0x1997600019983},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0f, match64: 0x00000000, model64: 0x199830001998d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c10, match64: 0x00000000, model64: 0x1998d00019997},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c11, match64: 0x00000000, model64: 0x19997000199a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c12, match64: 0x00000000, model64: 0x199a6000199b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c13, match64: 0x00000000, model64: 0x199b1000199bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c14, match64: 0x00000000, model64: 0x199bc000199c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c15, match64: 0x00000000, model64: 0x199c6000199d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c16, match64: 0x00000000, model64: 0x199d0000199db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c17, match64: 0x00000000, model64: 0x199db000199e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c18, match64: 0x00000000, model64: 0x199e5000199ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c19, match64: 0x00000000, model64: 0x199ef000199f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1a, match64: 0x00000000, model64: 0x199f900019a06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1b, match64: 0x00000000, model64: 0x19a0600019a13},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1c, match64: 0x00000000, model64: 0x19a1300019a1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1d, match64: 0x00000000, model64: 0x19a1d00019a27},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1e, match64: 0x00000000, model64: 0x19a2700019a38},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1f, match64: 0x00000000, model64: 0x19a3800019a42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c20, match64: 0x00000000, model64: 0x19a4200019a50},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c21, match64: 0x00000000, model64: 0x19a5000019a5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c22, match64: 0x00000000, model64: 0x19a5d00019a68},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c23, match64: 0x00000000, model64: 0x19a6800019a72},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c24, match64: 0x00000000, model64: 0x19a7200019a7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c25, match64: 0x00000000, model64: 0x19a7c00019a86},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c26, match64: 0x00000000, model64: 0x19a8600019a93},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c27, match64: 0x00000000, model64: 0x19a9300019aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c28, match64: 0x00000000, model64: 0x19aa000019aab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c29, match64: 0x00000000, model64: 0x19aab00019ab5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2a, match64: 0x00000000, model64: 0x19ab500019ac2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2b, match64: 0x00000000, model64: 0x19ac200019acc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2c, match64: 0x00000000, model64: 0x19acc00019ad9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2d, match64: 0x00000000, model64: 0x19ad900019ae9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2e, match64: 0x00000000, model64: 0x19ae900019af6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2f, match64: 0x00000000, model64: 0x19af600019b03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c30, match64: 0x00000000, model64: 0x19b0300019b0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c31, match64: 0x00000000, model64: 0x19af600019b03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c32, match64: 0x00000000, model64: 0x19b0d00019b1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c33, match64: 0x00000000, model64: 0x19b1a00019b24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c34, match64: 0x00000000, model64: 0x19b2400019b2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c35, match64: 0x00000000, model64: 0x19b2e00019b38},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c36, match64: 0x00000000, model64: 0x19b3800019b48},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c37, match64: 0x00000000, model64: 0x19b4800019b57},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c38, match64: 0x00000000, model64: 0x19b5700019b63},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c39, match64: 0x00000000, model64: 0x19b6300019b6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3a, match64: 0x00000000, model64: 0x19b6d00019b7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3b, match64: 0x00000000, model64: 0x19b7e00019b88},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3c, match64: 0x00000000, model64: 0x19b8800019b99},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3d, match64: 0x00000000, model64: 0x19b9900019ba9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3e, match64: 0x00000000, model64: 0x19ba900019bb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3f, match64: 0x00000000, model64: 0x19bb200019bbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c40, match64: 0x00000000, model64: 0x19bbf00019bc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c41, match64: 0x00000000, model64: 0x19bc800019bd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c42, match64: 0x00000000, model64: 0x19bd500019bde},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c43, match64: 0x00000000, model64: 0x19bde00019beb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c44, match64: 0x00000000, model64: 0x19beb00019bf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c45, match64: 0x00000000, model64: 0x19bf400019bfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c46, match64: 0x00000000, model64: 0x19bfd00019c06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c47, match64: 0x00000000, model64: 0x19c0600019c0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c48, match64: 0x00000000, model64: 0x19c0f00019c1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c49, match64: 0x00000000, model64: 0x19c1c00019c2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4a, match64: 0x00000000, model64: 0x19c2b00019c35},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4b, match64: 0x00000000, model64: 0x19c3500019c41},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4c, match64: 0x00000000, model64: 0x19c4100019c4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4d, match64: 0x00000000, model64: 0x19c4d00019c58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4e, match64: 0x00000000, model64: 0x19c5800019c6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4f, match64: 0x00000000, model64: 0x19c6a00019c83},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c50, match64: 0x00000000, model64: 0x19c8300019c8e},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c51, match64: 0x00000000, model64: 0x19c8e00019c9d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c52, match64: 0x00000000, model64: 0x19c9d00019cac},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c53, match64: 0x00000000, model64: 0x19cac00019cbb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c54, match64: 0x00000000, model64: 0x19cbb00019cca},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c55, match64: 0x00000000, model64: 0x19cca00019cdc},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c56, match64: 0x00000000, model64: 0x19cdc00019cee},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c57, match64: 0x00000000, model64: 0x19cee00019cfd},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c58, match64: 0x00000000, model64: 0x19cfd00019d0c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c59, match64: 0x00000000, model64: 0x19d0c00019d1c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c5a, match64: 0x00000000, model64: 0x19d1c00019d31},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c5b, match64: 0x00000000, model64: 0x19d3100019d3d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c5c, match64: 0x00000000, model64: 0x19d3d00019d4e},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c5d, match64: 0x00000000, model64: 0x19d4e00019d5f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c5e, match64: 0x00000000, model64: 0x19d5f00019d6a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c5f, match64: 0x00000000, model64: 0x19d6a00019d7a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c60, match64: 0x00000000, model64: 0x19d7a00019d91},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c61, match64: 0x00000000, model64: 0x19d9100019d9f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c62, match64: 0x00000000, model64: 0x19d9f00019db1},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c63, match64: 0x00000000, model64: 0x19db100019dbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c64, match64: 0x00000000, model64: 0x19dbf00019dcf},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c65, match64: 0x00000000, model64: 0x19dcf00019de1},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c66, match64: 0x00000000, model64: 0x19de100019dfb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c67, match64: 0x00000000, model64: 0x19dfb00019e12},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c68, match64: 0x00000000, model64: 0x19e1200019e26},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c69, match64: 0x00000000, model64: 0x19e2600019e35},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c6a, match64: 0x00000000, model64: 0x19e3500019e4b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c6b, match64: 0x00000000, model64: 0x19e4b00019e5c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c6c, match64: 0x00000000, model64: 0x19e5c00019e6e},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c6d, match64: 0x00000000, model64: 0x19e6e00019e7f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c6e, match64: 0x00000000, model64: 0x19e7f00019e8c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c6f, match64: 0x00000000, model64: 0x19e8c00019e99},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c70, match64: 0x00000000, model64: 0x19e9900019eaa},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c71, match64: 0x00000000, model64: 0x19eaa00019ebc},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c72, match64: 0x00000000, model64: 0x19ebc00019ec9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c73, match64: 0x00000000, model64: 0x19ec900019edb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c74, match64: 0x00000000, model64: 0x19edb00019ee8},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c75, match64: 0x00000000, model64: 0x19ee800019ef7},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c76, match64: 0x00000000, model64: 0x19ef700019f06},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c77, match64: 0x00000000, model64: 0x19f0600019f13},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c78, match64: 0x00000000, model64: 0x19f1300019f20},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c79, match64: 0x00000000, model64: 0x19f2000019f2d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c7a, match64: 0x00000000, model64: 0x19f2d00019f3c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c7b, match64: 0x00000000, model64: 0x19f3c00019f4a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c7c, match64: 0x00000000, model64: 0x19f4a00019f5d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c7d, match64: 0x00000000, model64: 0x19f5d00019f6e},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c7e, match64: 0x00000000, model64: 0x19f6e00019f82},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c7f, match64: 0x00000000, model64: 0x19f8200019f90},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c80, match64: 0x00000000, model64: 0x19f9000019fa7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c81, match64: 0x00000000, model64: 0x19fa700019fae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c82, match64: 0x00000000, model64: 0x19fae00019fbf},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1c83, match64: 0x00000000, model64: 0x19fbf00019fc4},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x19fc400019fd0, model64: 0x19fc400019fd0},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x19fd000019fdf, model64: 0x19fd000019fdf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1c84, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19fdf00019fe5, model64: 0x189d4000189df},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1c85, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c86, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x19fe500019fed, model64: 0x1515000015158},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c87, match64: 0x00000000, model64: 0x19fed00019ff6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c88, match64: 0x00000000, model64: 0x19fed00019ff6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c89, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8d, match64: 0x00000000, model64: 0x19ff600019ffb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8f, match64: 0x00000000, model64: 0x19ffb0001a001},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c90, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c91, match64: 0x00000000, model64: 0x19ffb0001a001},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0140001a017, model64: 0x1a0140001a017},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0170001a01a, model64: 0x1a0170001a01a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a01a0001a01f, model64: 0x1a01f0001a023},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c95, match64: 0x00000000, model64: 0x951000009513},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1a0320001a03c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0420001a049, model64: 0x847700008480},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c97, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c99, match64: 0x00000000, model64: 0x1a04f0001a059},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9a, match64: 0x00000000, model64: 0x1a0590001a062},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9b, match64: 0x00000000, model64: 0x1a0620001a068},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9c, match64: 0x00000000, model64: 0x1a0680001a072},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9d, match64: 0x00000000, model64: 0x1a0720001a07e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9e, match64: 0x00000000, model64: 0x1a07e0001a08c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9f, match64: 0x00000000, model64: 0x94b1000094bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca0, match64: 0x00000000, model64: 0x1a08c0001a095},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca1, match64: 0x00000000, model64: 0x1a0950001a09b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca2, match64: 0x00000000, model64: 0x1a09b0001a0a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca3, match64: 0x00000000, model64: 0x1a0a50001a0ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca4, match64: 0x00000000, model64: 0x1a0ab0001a0b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca5, match64: 0x00000000, model64: 0x4c6300004c68},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca6, match64: 0x00000000, model64: 0x1a0b50001a0ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca7, match64: 0x00000000, model64: 0x1a0ba0001a0c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca8, match64: 0x00000000, model64: 0x1a0c00001a0c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca9, match64: 0x00000000, model64: 0x1a0c80001a0d3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1caa, match64: 0x00000000, model64: 0x1a0d30001a0da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cab, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cad, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1caf, match64: 0x00000000, model64: 0x1a0df0001a0ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb0, match64: 0x00000000, model64: 0x1a0ef0001a0f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb1, match64: 0x00000000, model64: 0x1a0f80001a100},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a10e0001a11d, model64: 0x1a11d0001a126},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1260001a134, model64: 0x1a1340001a144},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cba, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1cbb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbe, match64: 0x00000000, model64: 0x350100003503},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1730001a180, model64: 0x1a1800001a187},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1870001a192, model64: 0x1a1920001a19d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a19d0001a1b2, model64: 0x1a1b20001a1c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1c00001a1cf, model64: 0x1a1cf0001a1d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1d70001a1e6, model64: 0x1a1e60001a1ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1ee0001a200, model64: 0x1a2000001a20b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a20b0001a223, model64: 0x1a2230001a234},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc1, match64: 0x00000000, model64: 0x1a23a0001a248},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc2, match64: 0x00000000, model64: 0x1a2480001a254},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc3, match64: 0x00000000, model64: 0x1a2540001a266},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc4, match64: 0x00000000, model64: 0x1a2660001a272},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc5, match64: 0x00000000, model64: 0x1a2720001a27e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc6, match64: 0x00000000, model64: 0x1a27e0001a28a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc7, match64: 0x00000000, model64: 0x1a28a0001a293},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc8, match64: 0x00000000, model64: 0x1a2930001a2a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc9, match64: 0x00000000, model64: 0x1a2a10001a2af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cca, match64: 0x00000000, model64: 0x1a2af0001a2ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccb, match64: 0x00000000, model64: 0x1a2ba0001a2c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccd, match64: 0x00000000, model64: 0x1a2c60001a2cb},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1cce, match64: 0x00000000, model64: 0x1a2cb0001a2d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2e30001a2ef, model64: 0x1a2ef0001a2fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd5, match64: 0x00000000, model64: 0x83a1000083a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd6, match64: 0x00000000, model64: 0x1e5000001e54},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd7, match64: 0x00000000, model64: 0x1a3080001a30c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd8, match64: 0x00000000, model64: 0x1a3080001a30c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd9, match64: 0x00000000, model64: 0x1a30c0001a312},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cda, match64: 0x00000000, model64: 0x1a3120001a31c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdb, match64: 0x00000000, model64: 0x60b6000060b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdc, match64: 0x00000000, model64: 0x1a31c0001a321},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdd, match64: 0x00000000, model64: 0x100ac000100b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cde, match64: 0x00000000, model64: 0x1a3210001a328},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdf, match64: 0x00000000, model64: 0x1a3280001a32c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce0, match64: 0x00000000, model64: 0x1a32c0001a333},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce1, match64: 0x00000000, model64: 0x1a3330001a33a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce5, match64: 0x00000000, model64: 0x1a33f0001a348},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce8, match64: 0x00000000, model64: 0x1a3520001a35b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a35b0001a365, model64: 0x1a3650001a36c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce9, match64: 0x00000000, model64: 0x1a36c0001a37a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cea, match64: 0x00000000, model64: 0x1a37a0001a383},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ceb, match64: 0x00000000, model64: 0x1a3830001a38b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cec, match64: 0x00000000, model64: 0x1a38b0001a393},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ced, match64: 0x00000000, model64: 0x1a3930001a39e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cee, match64: 0x00000000, model64: 0x1a39e0001a3ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cef, match64: 0x00000000, model64: 0x1a3ac0001a3ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf0, match64: 0x00000000, model64: 0x1a3ba0001a3c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf1, match64: 0x00000000, model64: 0x1a3c80001a3d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf2, match64: 0x00000000, model64: 0x1a3d60001a3e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf3, match64: 0x00000000, model64: 0x1a3e00001a3ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf4, match64: 0x00000000, model64: 0x1a3ec0001a3f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf5, match64: 0x00000000, model64: 0x1a3f80001a408},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf6, match64: 0x00000000, model64: 0x1a4080001a418},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf7, match64: 0x00000000, model64: 0x1a4180001a42b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf8, match64: 0x00000000, model64: 0x1a42b0001a438},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf9, match64: 0x00000000, model64: 0x1a4380001a44a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfa, match64: 0x00000000, model64: 0x1a44a0001a457},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfb, match64: 0x00000000, model64: 0x1a4570001a465},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfc, match64: 0x00000000, model64: 0x1a4650001a477},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfd, match64: 0x00000000, model64: 0x1a4770001a484},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfe, match64: 0x00000000, model64: 0x1a4840001a492},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cff, match64: 0x00000000, model64: 0x1a4920001a49b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d00, match64: 0x00000000, model64: 0x1a49b0001a4ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d01, match64: 0x00000000, model64: 0x1a4ac0001a4b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d02, match64: 0x00000000, model64: 0x1a4b60001a4c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d03, match64: 0x00000000, model64: 0x1a4c00001a4cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d04, match64: 0x00000000, model64: 0x1a4cc0001a4d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d05, match64: 0x00000000, model64: 0x1a4d80001a4eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d06, match64: 0x00000000, model64: 0x1a4eb0001a4f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d07, match64: 0x00000000, model64: 0x1a4f90001a509},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d08, match64: 0x00000000, model64: 0x1a5090001a515},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d09, match64: 0x00000000, model64: 0x1a5150001a527},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0a, match64: 0x00000000, model64: 0x1a5270001a535},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0b, match64: 0x00000000, model64: 0x1a5350001a546},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0c, match64: 0x00000000, model64: 0x1a5460001a54e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0d, match64: 0x00000000, model64: 0x1a54e0001a555},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0e, match64: 0x00000000, model64: 0x1a5550001a564},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0f, match64: 0x00000000, model64: 0x1a5640001a56c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d10, match64: 0x00000000, model64: 0x1a56c0001a57c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d11, match64: 0x00000000, model64: 0x1a57c0001a585},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d12, match64: 0x00000000, model64: 0x1a5850001a592},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d13, match64: 0x00000000, model64: 0x1a5920001a59e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d14, match64: 0x00000000, model64: 0x1a59e0001a5a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d15, match64: 0x00000000, model64: 0x1a5a50001a5af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d16, match64: 0x00000000, model64: 0x1a5af0001a5c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d17, match64: 0x00000000, model64: 0x1a5c20001a5d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d18, match64: 0x00000000, model64: 0x1a5d50001a5df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d19, match64: 0x00000000, model64: 0x1a5df0001a5ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1a, match64: 0x00000000, model64: 0x1a5ec0001a5f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1b, match64: 0x00000000, model64: 0x1a5f90001a608},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1c, match64: 0x00000000, model64: 0x1a6080001a617},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1d, match64: 0x00000000, model64: 0x1a6170001a61e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1e, match64: 0x00000000, model64: 0x1a61e0001a625},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1f, match64: 0x00000000, model64: 0x1a6250001a62c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d20, match64: 0x00000000, model64: 0x1a62c0001a639},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d21, match64: 0x00000000, model64: 0x1a6390001a641},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d22, match64: 0x00000000, model64: 0x1a6410001a64d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d23, match64: 0x00000000, model64: 0x1a64d0001a655},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d24, match64: 0x00000000, model64: 0x1a6550001a662},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d25, match64: 0x00000000, model64: 0x1a6620001a66f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d26, match64: 0x00000000, model64: 0x1a66f0001a677},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d27, match64: 0x00000000, model64: 0x1a6770001a67f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d28, match64: 0x00000000, model64: 0x1a67f0001a68c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d29, match64: 0x00000000, model64: 0x1a68c0001a69a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2a, match64: 0x00000000, model64: 0x1a69a0001a6a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2b, match64: 0x00000000, model64: 0x1a6a70001a6b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2c, match64: 0x00000000, model64: 0x1a57c0001a585},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2d, match64: 0x00000000, model64: 0x1a6b40001a6bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2e, match64: 0x00000000, model64: 0x1a6bc0001a6c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2f, match64: 0x00000000, model64: 0x1a6c40001a6cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d30, match64: 0x00000000, model64: 0x1a6cb0001a6d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d31, match64: 0x00000000, model64: 0x1a6d10001a6d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d32, match64: 0x00000000, model64: 0x1a6d40001a6db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d33, match64: 0x00000000, model64: 0xc4170000c419},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d34, match64: 0x00000000, model64: 0xee0e0000ee10},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d35, match64: 0x00000000, model64: 0xee000000ee02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d36, match64: 0x00000000, model64: 0x153e0000153e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d37, match64: 0x00000000, model64: 0x13e9f00013ea2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d38, match64: 0x00000000, model64: 0x1a6db0001a6e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d39, match64: 0x00000000, model64: 0x1a6e20001a6eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6eb0001a6f2, model64: 0x1a6f20001a6ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6ff0001a704, model64: 0x1a7040001a70f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d3a, match64: 0x00000000, model64: 0x1a70f0001a71f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a71f0001a725, model64: 0x1a7250001a734},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d3b, match64: 0x00000000, model64: 0x1a7340001a742},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7420001a74a, model64: 0x1a74a0001a758},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7580001a75f, model64: 0x1a75f0001a76e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a76e0001a775, model64: 0x1a7750001a781},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d3c, match64: 0x00000000, model64: 0x1a7810001a795},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d3d, match64: 0x00000000, model64: 0x1a7950001a7a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d3e, match64: 0x00000000, model64: 0x1a5270001a535},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d3f, match64: 0x00000000, model64: 0x1a7a10001a7ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d40, match64: 0x00000000, model64: 0x1a7ac0001a7b5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d41, match64: 0x00000000, model64: 0x1a7b50001a7c4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d42, match64: 0x00000000, model64: 0xbb780000bb7f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d43, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1d44, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1a7c40001a7d3, model64: 0x1a7d30001a7df},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1d45, match64: 0x00000000, model64: 0x1a7df0001a7ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d46, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1d47, match64: 0x00000000, model64: 0x1a7ed0001a7f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d48, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d49, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1a80a0001a810},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1a8190001a824},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d4f, match64: 0x00000000, model64: 0x1a82f0001a835},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8350001a83b, model64: 0x1a83b0001a841},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8410001a849, model64: 0x1a8490001a84f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d50, match64: 0x00000000, model64: 0x32e00000332},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d51, match64: 0x00000000, model64: 0x1a84f0001a854},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8540001a85c, model64: 0x1a85c0001a866},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8660001a86b, model64: 0x1a86b0001a871},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8710001a877, model64: 0x1a8710001a877},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8770001a883, model64: 0x167a9000167ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8830001a88f, model64: 0x1a3330001a33a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x843f00008448, model64: 0x843f00008448},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a88f0001a89b, model64: 0x1a88f0001a89b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d52, match64: 0x00000000, model64: 0x1a89b0001a8a0},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1a8a00001a8ac, model64: 0x1a8ac0001a8b9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1a8b90001a8c1, model64: 0x1a8c10001a8ca},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1d54, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d55, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d56, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d57, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d58, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5a, match64: 0x00000000, model64: 0x1a8d10001a8e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5b, match64: 0x00000000, model64: 0x1a8e10001a8ed},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d5c, match64: 0x00000000, model64: 0x1a8ed0001a8fc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d5d, match64: 0x00000000, model64: 0x405c00004062},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5e, match64: 0x00000000, model64: 0x1a8fc0001a907},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1a91b0001a927},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d61, match64: 0x00000000, model64: 0x1a92e0001a939},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a9390001a941, model64: 0x1a9390001a941},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a9410001a948, model64: 0x1a9410001a948},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a9480001a94f, model64: 0x1a9480001a94f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d62, match64: 0x00000000, model64: 0x1a94f0001a95d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a95d0001a963, model64: 0x1a95d0001a963},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a9630001a968, model64: 0x1a9630001a968},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a9680001a96c, model64: 0x1a9680001a96c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d65, match64: 0x00000000, model64: 0xdda00000ddab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d66, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d67, match64: 0x00000000, model64: 0x1a97a0001a985},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d68, match64: 0x00000000, model64: 0x1a9850001a993},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6c, match64: 0x00000000, model64: 0x1a9a40001a9ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6d, match64: 0x00000000, model64: 0x1a9ad0001a9b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6f, match64: 0x00000000, model64: 0x1a9b40001a9c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d70, match64: 0x00000000, model64: 0x1a9c10001a9ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d71, match64: 0x00000000, model64: 0x1a9ce0001a9e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a9e10001a9f1, model64: 0x1a9f10001aa02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d72, match64: 0x00000000, model64: 0x1aa020001aa0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d73, match64: 0x00000000, model64: 0x1aa0e0001aa1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d74, match64: 0x00000000, model64: 0x1aa1d0001aa28},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d75, match64: 0x00000000, model64: 0x1aa280001aa37},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d76, match64: 0x00000000, model64: 0x141790001417f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1aa370001aa40, model64: 0x1aa400001aa46},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1aa460001aa51, model64: 0x1aa510001aa59},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d77, match64: 0x00000000, model64: 0x1aa590001aa67},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d78, match64: 0x00000000, model64: 0x1aa670001aa74},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d79, match64: 0x00000000, model64: 0x1aa740001aa7e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d7a, match64: 0x00000000, model64: 0x1aa7e0001aa8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aa8b0001aa99, model64: 0x1aa990001aaa7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aaa70001aab5, model64: 0x1aab50001aac4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aac40001aad0, model64: 0x1aad00001aadd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aadd0001aae9, model64: 0x1aae90001aaf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7b, match64: 0x00000000, model64: 0xf1160000f11e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d7c, match64: 0x00000000, model64: 0xf1160000f11e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7d, match64: 0x00000000, model64: 0x1aaf60001ab01},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7e, match64: 0x00000000, model64: 0x1ab010001ab09},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7f, match64: 0x00000000, model64: 0xd1d20000d1da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab090001ab14, model64: 0x1ab140001ab1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab1b0001ab25, model64: 0x1ab250001ab2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d80, match64: 0x00000000, model64: 0x14f1500014f1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab2f0001ab36, model64: 0x1ab360001ab39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab390001ab41, model64: 0x1ab410001ab4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d81, match64: 0x00000000, model64: 0x1ab4a0001ab54},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d82, match64: 0x00000000, model64: 0x1ab540001ab5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d83, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab650001ab74, model64: 0x1ab740001ab7c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab8b0001ab95, model64: 0x1ab8b0001ab95},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d87, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d88, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8a, match64: 0x00000000, model64: 0x1ab9a0001aba0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8b, match64: 0x00000000, model64: 0x1aba00001aba8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1abae0001abbc, model64: 0x1abbc0001abc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d90, match64: 0x00000000, model64: 0x1abd00001abd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d92, match64: 0x00000000, model64: 0x1abdf0001abe3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d93, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d96, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1abfa0001ac02, model64: 0x1ac020001ac12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac120001ac18, model64: 0x1ac180001ac24},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac240001ac2a, model64: 0x1ac2a0001ac34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac340001ac3a, model64: 0x1ac3a0001ac45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac450001ac4b, model64: 0x1ac4b0001ac56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac560001ac5c, model64: 0x1ac5c0001ac68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac680001ac6e, model64: 0x1ac6e0001ac7d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac7d0001ac83, model64: 0x1ac830001ac8e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac8e0001ac94, model64: 0x1ac940001ac9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac9e0001aca4, model64: 0x1aca40001acae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1acae0001acbc, model64: 0x1acbc0001acca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d98, match64: 0x00000000, model64: 0x1acca0001acd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d99, match64: 0x00000000, model64: 0x1acca0001acd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d9b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9d, match64: 0x00000000, model64: 0x1acde0001ace0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ace00001ace5, model64: 0x1ace50001ace7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ace70001acec, model64: 0x1acec0001acee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1acee0001acf3, model64: 0x1acf30001acf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9e, match64: 0x00000000, model64: 0x92aa000092ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9f, match64: 0x00000000, model64: 0x37200000375},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da0, match64: 0x00000000, model64: 0xc9430000c948},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da1, match64: 0x00000000, model64: 0x153e0000153e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da2, match64: 0x00000000, model64: 0x1acf60001ad00},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da3, match64: 0x00000000, model64: 0x1ad000001ad05},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da4, match64: 0x00000000, model64: 0x1ad050001ad0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da5, match64: 0x00000000, model64: 0x1ad0a0001ad13},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da6, match64: 0x00000000, model64: 0x1ad130001ad20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ad200001ad30, model64: 0x1ad300001ad36},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da8, match64: 0x00000000, model64: 0x1ad3c0001ad43},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ad430001ad4b, model64: 0x1ad430001ad4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ad580001ad62, model64: 0x1ad580001ad62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1daa, match64: 0x00000000, model64: 0x1ad620001ad71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dab, match64: 0x00000000, model64: 0x1ad710001ad7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dac, match64: 0x00000000, model64: 0x1ad7a0001ad85},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dad, match64: 0x00000000, model64: 0x1ad850001ad93},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ada60001adb3, model64: 0x1adb30001adc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1adcd0001add6, model64: 0x11cf500011cf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1adee0001adf3, model64: 0x1adf30001ae03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae030001ae08, model64: 0x1ae080001ae19},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae190001ae1e, model64: 0x1ae1e0001ae2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae2c0001ae36, model64: 0x1ae360001ae3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae3c0001ae45, model64: 0x1ae450001ae4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db7, match64: 0x00000000, model64: 0x1ae4e0001ae59},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db8, match64: 0x00000000, model64: 0x1ae590001ae63},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dbb, match64: 0x00000000, model64: 0x1ae680001ae6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dbc, match64: 0x00000000, model64: 0x1ae6e0001ae71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dbd, match64: 0x00000000, model64: 0x1ae710001ae79},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dbe, match64: 0x00000000, model64: 0x1ae790001ae7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dbf, match64: 0x00000000, model64: 0x1ae7d0001ae80},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc0, match64: 0x00000000, model64: 0x1ae800001ae83},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc1, match64: 0x00000000, model64: 0x1ae830001ae86},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc2, match64: 0x00000000, model64: 0x1ae860001ae89},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc4, match64: 0x00000000, model64: 0x1ae890001ae98},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc5, match64: 0x00000000, model64: 0x1ae980001aeab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc6, match64: 0x00000000, model64: 0x1aeab0001aeb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc7, match64: 0x00000000, model64: 0x1aeb40001aebe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc8, match64: 0x00000000, model64: 0x1aebe0001aeca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc9, match64: 0x00000000, model64: 0x1aeca0001aed6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dca, match64: 0x00000000, model64: 0x1aed60001aee0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dcb, match64: 0x00000000, model64: 0x1aee00001aeeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dcc, match64: 0x00000000, model64: 0x1aeeb0001aef5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dcd, match64: 0x00000000, model64: 0x1aef50001af00},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dce, match64: 0x00000000, model64: 0x1af000001af0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dcf, match64: 0x00000000, model64: 0x1af0d0001af17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd0, match64: 0x00000000, model64: 0x1af170001af21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd1, match64: 0x00000000, model64: 0x1af210001af30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd2, match64: 0x00000000, model64: 0x1af300001af3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd3, match64: 0x00000000, model64: 0x1af3a0001af3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd4, match64: 0x00000000, model64: 0x1af3f0001af4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1af4a0001af57, model64: 0x1af4a0001af57},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd5, match64: 0x00000000, model64: 0x1af570001af68},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dd6, match64: 0x00000000, model64: 0x1af680001af6b},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dd7, match64: 0x00000000, model64: 0x1af6b0001af72},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dd8, match64: 0x00000000, model64: 0x1af720001af77},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dd9, match64: 0x00000000, model64: 0x1af770001af7c},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dda, match64: 0x00000000, model64: 0x1af7c0001af81},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1ddb, match64: 0x00000000, model64: 0x1af810001af84},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1ddc, match64: 0x00000000, model64: 0x1af840001af89},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1ddd, match64: 0x00000000, model64: 0x1af890001af8d},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dde, match64: 0x00000000, model64: 0x1af8d0001af91},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1ddf, match64: 0x00000000, model64: 0x1af910001af96},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1de0, match64: 0x00000000, model64: 0x1af960001af9b},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1de1, match64: 0x00000000, model64: 0x1af9b0001afa4},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1de2, match64: 0x00000000, model64: 0x1afa40001afa8},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1de3, match64: 0x00000000, model64: 0x1afa80001afad},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1de4, match64: 0x00000000, model64: 0x1afad0001afb2},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1de5, match64: 0x00000000, model64: 0x1afb20001afb6},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1de6, match64: 0x00000000, model64: 0x1afb60001afc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de7, match64: 0x00000000, model64: 0x1afc10001afca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de8, match64: 0x00000000, model64: 0x1afca0001afd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de9, match64: 0x00000000, model64: 0x1afd60001afe0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1afe00001afe6, model64: 0x1afe60001afef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1afef0001aff5, model64: 0x1aff50001affe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1affe0001b003, model64: 0x1b0030001b011},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0110001b017, model64: 0x1b0170001b020},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dea, match64: 0x00000000, model64: 0x1b0200001b029},
		modelTuple{type64: 0x2700000027, matchRI: 0x1deb, match64: 0x00000000, model64: 0x1af0d0001af17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dec, match64: 0x00000000, model64: 0x1b0290001b036},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ded, match64: 0x00000000, model64: 0x1b0360001b044},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dee, match64: 0x00000000, model64: 0x1b0440001b050},
		modelTuple{type64: 0x2700000027, matchRI: 0x1def, match64: 0x00000000, model64: 0x1b0500001b05d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df0, match64: 0x00000000, model64: 0x1b05d0001b06f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df1, match64: 0x00000000, model64: 0x1b06f0001b07b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df2, match64: 0x00000000, model64: 0x1b07b0001b089},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df3, match64: 0x00000000, model64: 0x1b0890001b097},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df4, match64: 0x00000000, model64: 0x1b0970001b09f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df5, match64: 0x00000000, model64: 0x1b09f0001b0bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df6, match64: 0x00000000, model64: 0x1b0bc0001b0c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df7, match64: 0x00000000, model64: 0x1b0c70001b0d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df8, match64: 0x00000000, model64: 0x1b0d30001b0de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df9, match64: 0x00000000, model64: 0x1b0de0001b0e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfa, match64: 0x00000000, model64: 0x1b0e60001b0ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfb, match64: 0x00000000, model64: 0x1b0ee0001b0fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfc, match64: 0x00000000, model64: 0x1b0fb0001b103},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfd, match64: 0x00000000, model64: 0x1b1030001b10e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfe, match64: 0x00000000, model64: 0x1b10e0001b11a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dff, match64: 0x00000000, model64: 0x1b11a0001b125},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e00, match64: 0x00000000, model64: 0x1b1250001b12d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e01, match64: 0x00000000, model64: 0x1b12d0001b13a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e02, match64: 0x00000000, model64: 0x1b13a0001b143},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e03, match64: 0x00000000, model64: 0x1b1430001b14b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e04, match64: 0x00000000, model64: 0x1b14b0001b156},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e05, match64: 0x00000000, model64: 0x1b1560001b164},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e06, match64: 0x00000000, model64: 0x1b1640001b171},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e07, match64: 0x00000000, model64: 0x1b1710001b17b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e08, match64: 0x00000000, model64: 0x1b17b0001b184},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e09, match64: 0x00000000, model64: 0x1b1840001b190},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0a, match64: 0x00000000, model64: 0x1b1900001b198},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0b, match64: 0x00000000, model64: 0x1b1980001b1a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0c, match64: 0x00000000, model64: 0x1b1a80001b1b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0d, match64: 0x00000000, model64: 0x1b1b30001b1be},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0e, match64: 0x00000000, model64: 0x1b1be0001b1c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0f, match64: 0x00000000, model64: 0x1b1c60001b1cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e10, match64: 0x00000000, model64: 0x1b1cf0001b1d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e11, match64: 0x00000000, model64: 0x1b1d80001b1e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e12, match64: 0x00000000, model64: 0x1b1e00001b1e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e13, match64: 0x00000000, model64: 0x1b1e90001b1f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e14, match64: 0x00000000, model64: 0x1b1f10001b1fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e15, match64: 0x00000000, model64: 0x1b1fe0001b207},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e16, match64: 0x00000000, model64: 0x1b2070001b211},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e17, match64: 0x00000000, model64: 0x1b2110001b219},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e18, match64: 0x00000000, model64: 0x1b2190001b226},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e19, match64: 0x00000000, model64: 0x1b2260001b22e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1a, match64: 0x00000000, model64: 0x1b22e0001b236},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1b, match64: 0x00000000, model64: 0x1b2360001b23f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1c, match64: 0x00000000, model64: 0x1b23f0001b248},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1d, match64: 0x00000000, model64: 0x1b2480001b251},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1e, match64: 0x00000000, model64: 0x1b2510001b25b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1f, match64: 0x00000000, model64: 0x1b25b0001b263},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1e20, match64: 0x00000000, model64: 0x1b2630001b271},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e21, match64: 0x00000000, model64: 0x1b25b0001b263},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e22, match64: 0x00000000, model64: 0x1b2710001b27a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e23, match64: 0x00000000, model64: 0x1b27a0001b288},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e24, match64: 0x00000000, model64: 0x1b2880001b291},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e25, match64: 0x00000000, model64: 0x1b2910001b29f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e26, match64: 0x00000000, model64: 0x1b29f0001b2ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e27, match64: 0x00000000, model64: 0x1b2ae0001b2b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e28, match64: 0x00000000, model64: 0x1b2b70001b2c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2c50001b2ca, model64: 0x1b2ca0001b2d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e29, match64: 0x00000000, model64: 0x1b2d30001b2e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2a, match64: 0x00000000, model64: 0x1b2e10001b2ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2b, match64: 0x00000000, model64: 0x1b2ea0001b2f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2c, match64: 0x00000000, model64: 0x1b2f80001b301},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2d, match64: 0x00000000, model64: 0x1b3010001b30f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2e, match64: 0x00000000, model64: 0x1b30f0001b31d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2f, match64: 0x00000000, model64: 0x1b31d0001b330},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e30, match64: 0x00000000, model64: 0x1b3300001b339},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e31, match64: 0x00000000, model64: 0x1b3390001b347},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e32, match64: 0x00000000, model64: 0x1b3470001b355},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e33, match64: 0x00000000, model64: 0x1b3550001b35e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e34, match64: 0x00000000, model64: 0x1b35e0001b367},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e35, match64: 0x00000000, model64: 0x1b3670001b375},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e36, match64: 0x00000000, model64: 0x1b3750001b384},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e37, match64: 0x00000000, model64: 0x1b3840001b398},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e38, match64: 0x00000000, model64: 0x1b3980001b3a1},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1e39, match64: 0x00000000, model64: 0x1b3a10001b3b0},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1e3a, match64: 0x00000000, model64: 0x1b3b00001b3c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3b, match64: 0x00000000, model64: 0x1b3c40001b3d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3c, match64: 0x00000000, model64: 0x1b3d50001b3de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3d, match64: 0x00000000, model64: 0x1b3de0001b3ef},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1b3ef0001b404, model64: 0x1b4040001b419},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e3e, match64: 0x00000000, model64: 0x1b4190001b429},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3f, match64: 0x00000000, model64: 0x1b4290001b432},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b4320001b437, model64: 0x1b4370001b441},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e40, match64: 0x00000000, model64: 0x1b4410001b44a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e41, match64: 0x00000000, model64: 0x1b44a0001b458},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e42, match64: 0x00000000, model64: 0x1b4580001b462},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e43, match64: 0x00000000, model64: 0x1b4620001b46c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e44, match64: 0x00000000, model64: 0x1b46c0001b475},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b4750001b47a, model64: 0x1b47a0001b484},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e45, match64: 0x00000000, model64: 0x1b46c0001b475},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e46, match64: 0x00000000, model64: 0x1b4840001b495},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e47, match64: 0x00000000, model64: 0x1b4950001b49e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e48, match64: 0x00000000, model64: 0x1b49e0001b4ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e49, match64: 0x00000000, model64: 0x1b4ac0001b4bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4a, match64: 0x00000000, model64: 0x1b4bd0001b4d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4b, match64: 0x00000000, model64: 0x1b4d30001b4dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4c, match64: 0x00000000, model64: 0x1b4dc0001b4ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4d, match64: 0x00000000, model64: 0x1b4ea0001b4f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4e, match64: 0x00000000, model64: 0x1b4f90001b50d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4f, match64: 0x00000000, model64: 0x1b50d0001b516},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e50, match64: 0x00000000, model64: 0x1b5160001b520},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e51, match64: 0x00000000, model64: 0x1b5200001b532},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e52, match64: 0x00000000, model64: 0x1b5320001b53b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e53, match64: 0x00000000, model64: 0x1b53b0001b545},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e54, match64: 0x00000000, model64: 0x1b5450001b554},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e55, match64: 0x00000000, model64: 0x1b5540001b568},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e56, match64: 0x00000000, model64: 0x1b5680001b578},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e57, match64: 0x00000000, model64: 0x1b5780001b582},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e58, match64: 0x00000000, model64: 0x1b5820001b591},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e59, match64: 0x00000000, model64: 0x1b5910001b5a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b5a00001b5a5, model64: 0x1b5a00001b5a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5a, match64: 0x00000000, model64: 0x1b5a50001b5b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5b, match64: 0x00000000, model64: 0x1b5b50001b5bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5c, match64: 0x00000000, model64: 0x1b5bf0001b5d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5d, match64: 0x00000000, model64: 0x1b5d00001b5da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b5da0001b5df, model64: 0x1b5df0001b5ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b5ee0001b5f4, model64: 0x1b5f40001b606},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5e, match64: 0x00000000, model64: 0x1b6060001b61d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5f, match64: 0x00000000, model64: 0x1b61d0001b627},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e60, match64: 0x00000000, model64: 0x1b6270001b630},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e61, match64: 0x00000000, model64: 0x1b6300001b63e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e62, match64: 0x00000000, model64: 0x1b63e0001b646},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e63, match64: 0x00000000, model64: 0x1b6460001b64f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e64, match64: 0x00000000, model64: 0x1b64f0001b658},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e65, match64: 0x00000000, model64: 0x1b6580001b660},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e66, match64: 0x00000000, model64: 0x1b6600001b66d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e67, match64: 0x00000000, model64: 0x1b66d0001b67d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e68, match64: 0x00000000, model64: 0x1b67d0001b691},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e69, match64: 0x00000000, model64: 0x1b6910001b6aa},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e6a, match64: 0x00000000, model64: 0x1b6aa0001b6b9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e6b, match64: 0x00000000, model64: 0x1b6b90001b6c9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e6c, match64: 0x00000000, model64: 0x1b6c90001b6d9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e6d, match64: 0x00000000, model64: 0x1b6d90001b6f1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e6e, match64: 0x00000000, model64: 0x1b6f10001b700},
		modelTuple{type64: 0x245f00002467, matchRI: -0x0001, match64: 0x1b7000001b70c, model64: 0x1b7000001b70c},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1e6f, match64: 0x00000000, model64: 0x1b70c0001b715},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1e70, match64: 0x00000000, model64: 0x1b7150001b725},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1e71, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1e72, match64: 0x00000000, model64: 0x1b7250001b72f},
		modelTuple{type64: 0xa0d50000a0ea, matchRI: 0x1e73, match64: 0x00000000, model64: 0x1b72f0001b739},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1e74, match64: 0x00000000, model64: 0x1b7390001b747},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1b7470001b74e, model64: 0x1b74e0001b763},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1e75, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1e76, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e77, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e78, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e79, match64: 0x00000000, model64: 0xd1420000d145},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7a, match64: 0x00000000, model64: 0x1b7630001b76d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1e7c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x1e7e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e7f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e80, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e81, match64: 0x00000000, model64: 0x1b76d0001b776},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e82, match64: 0x00000000, model64: 0x1b76d0001b776},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e83, match64: 0x00000000, model64: 0x1b76d0001b776},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e84, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e85, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e86, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e89, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b7830001b788, model64: 0x1b7830001b788},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b7880001b790, model64: 0x1b7900001b798},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8490001a84f, model64: 0x1a8490001a84f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b79d0001b7a8, model64: 0x1b79d0001b7a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b7a80001b7b1, model64: 0x1b7a80001b7b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13e2900013e2e, model64: 0x13e2900013e2e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8e, match64: 0x00000000, model64: 0x1b7c40001b7d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8f, match64: 0x00000000, model64: 0x1b7d00001b7dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e90, match64: 0x00000000, model64: 0x1b7dc0001b7e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e91, match64: 0x00000000, model64: 0x1b7e70001b7f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e93, match64: 0x00000000, model64: 0x1b7f40001b7fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e94, match64: 0x00000000, model64: 0x1b7fc0001b806},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8060001b812, model64: 0x1b8120001b81e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b81e0001b82b, model64: 0x1b82b0001b839},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8390001b84a, model64: 0x1b84a0001b85c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b85c0001b86d, model64: 0x1b86d0001b880},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e95, match64: 0x00000000, model64: 0x1b8800001b886},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e96, match64: 0x00000000, model64: 0x1b8860001b88b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e97, match64: 0x00000000, model64: 0x1b8800001b886},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e98, match64: 0x00000000, model64: 0x1b8860001b88b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e99, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1b88b0001b890},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8940001b899, model64: 0x62590000625f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9d, match64: 0x00000000, model64: 0x704600007049},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8a20001b8ab, model64: 0x1b8ab0001b8b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8b40001b8bc, model64: 0x1b8bc0001b8c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8c40001b8ce, model64: 0x1b8ce0001b8d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8d80001b8de, model64: 0x1b8de0001b8e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8e40001b8ee, model64: 0x1b8ee0001b8f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8f80001b903, model64: 0x1b9030001b90e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9f, match64: 0x00000000, model64: 0x1b90e0001b918},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9180001b922, model64: 0x1b9220001b92c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b92c0001b93c, model64: 0x1b93c0001b942},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9420001b950, model64: 0x1b9500001b956},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea1, match64: 0x00000000, model64: 0x1b9600001b967},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea2, match64: 0x00000000, model64: 0x1b9670001b96c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea3, match64: 0x00000000, model64: 0x1b96c0001b976},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea4, match64: 0x00000000, model64: 0x1b9760001b97d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea5, match64: 0x00000000, model64: 0x1b97d0001b982},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ea6, match64: 0x00000000, model64: 0x1b9820001b98f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1b9960001b9a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea9, match64: 0x00000000, model64: 0x1b9ab0001b9b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eab, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eae, match64: 0x00000000, model64: 0x1b9bf0001b9c9},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1b9c90001b9d7, model64: 0x1b9d70001b9de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb3, match64: 0x00000000, model64: 0x1b9ee0001b9f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9f90001ba00, model64: 0x1ba000001ba07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba070001ba0e, model64: 0x1ba0e0001ba15},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb7, match64: 0x00000000, model64: 0x1ba150001ba1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb8, match64: 0x00000000, model64: 0x1ba1d0001ba2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb9, match64: 0x00000000, model64: 0x1ba2d0001ba3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba3c0001ba44, model64: 0x1ba440001ba4c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba4c0001ba55, model64: 0x1ba550001ba5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba5e0001ba67, model64: 0x1ba670001ba70},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba700001ba78, model64: 0x1ba780001ba80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba800001ba85, model64: 0x1ba850001ba8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba8c0001ba94, model64: 0x1ba8c0001ba94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba940001ba9d, model64: 0x1ba9d0001baa6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1baa60001baae, model64: 0x1baae0001bab6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bab60001babe, model64: 0x1babe0001bac6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bac60001bacd, model64: 0x1bac60001bacd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bacd0001bad3, model64: 0x1bad30001bad9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bad90001bae2, model64: 0x1bae20001baeb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1baeb0001baf3, model64: 0x1baf30001bafb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bafb0001bb01, model64: 0x1bb010001bb07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb070001bb0d, model64: 0x1bb0d0001bb13},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eba, match64: 0x00000000, model64: 0x1bb130001bb1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebb, match64: 0x00000000, model64: 0x1bb1c0001bb24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebc, match64: 0x00000000, model64: 0x1bb240001bb2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb2b0001bb34, model64: 0x1bb340001bb3d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfeff0000ff03, model64: 0xfeff0000ff03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb3d0001bb42, model64: 0x75130000751a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb420001bb4c, model64: 0x1bb4c0001bb56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb560001bb5c, model64: 0x1bb5c0001bb62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb620001bb6c, model64: 0x1bb6c0001bb76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb760001bb7f, model64: 0x1bb7f0001bb88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x400200004007, model64: 0x1bb880001bb8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebe, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ebf, match64: 0x00000000, model64: 0x1bb8d0001bb99},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bb990001bb9e, model64: 0x1bb9e0001bba9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec2, match64: 0x00000000, model64: 0xf75c0000f764},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec4, match64: 0x00000000, model64: 0x1bbb30001bbba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec5, match64: 0x00000000, model64: 0x1417200014179},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec6, match64: 0x00000000, model64: 0x1bbba0001bbc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec7, match64: 0x00000000, model64: 0x596200005969},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ecb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ecc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x51800000525, matchRI: 0x1ecf, match64: 0x00000000, model64: 0x1bbdb0001bbe3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ed4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bbf70001bbff, model64: 0x1bbff0001bc08},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed7, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1bc100001bc16},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1edb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bc280001bc2f, model64: 0x1bc280001bc2f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1edd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ede, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1bc400001bc47},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee2, match64: 0x00000000, model64: 0x1bc4d0001bc57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bc570001bc5e, model64: 0x1bc5e0001bc66},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bc700001bc7d, model64: 0x1bc700001bc7d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bc7d0001bc8a, model64: 0x1bc7d0001bc8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bc8a0001bc98, model64: 0x1bc8a0001bc98},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee5, match64: 0x00000000, model64: 0xf1160000f11e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ee6, match64: 0x00000000, model64: 0x1bc980001bc9f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ee7, match64: 0x00000000, model64: 0x1bc9f0001bca7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1bcb60001bcbf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bcc30001bcc9, model64: 0x1bcc30001bcc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bcd10001bcd6, model64: 0x1bcd10001bcd6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bcd60001bcda, model64: 0x1bcd60001bcda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bcda0001bcdf, model64: 0x1bcdf0001bce4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bce40001bcf4, model64: 0x1bcf40001bcfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eec, match64: 0x00000000, model64: 0x1bcfb0001bd02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eed, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eee, match64: 0x00000000, model64: 0x1bd020001bd0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eef, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ef1, match64: 0x00000000, model64: 0x1bd0a0001bd13},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bd130001bd1d, model64: 0x1bd1d0001bd27},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bd340001bd3b, model64: 0x1bd3b0001bd42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef4, match64: 0x00000000, model64: 0x1bd420001bd4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef5, match64: 0x00000000, model64: 0x1bd4e0001bd55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef6, match64: 0x00000000, model64: 0x1bd550001bd5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bd5d0001bd69, model64: 0x1bd690001bd75},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef7, match64: 0x00000000, model64: 0x1bd750001bd80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bd800001bd87, model64: 0x618f00006199},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef8, match64: 0x00000000, model64: 0x1bd870001bd8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef9, match64: 0x00000000, model64: 0x1bd8e0001bd98},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efa, match64: 0x00000000, model64: 0x1bd980001bda6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efb, match64: 0x00000000, model64: 0x1bda60001bdb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efc, match64: 0x00000000, model64: 0x1bdb20001bdbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efd, match64: 0x00000000, model64: 0x1bdbd0001bdc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efe, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eff, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x152270001522b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f02, match64: 0x00000000, model64: 0x405c00004062},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f04, match64: 0x00000000, model64: 0x1bdd70001bddf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f06, match64: 0x00000000, model64: 0x1bde20001bdea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f07, match64: 0x00000000, model64: 0x1bdea0001bdef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f08, match64: 0x00000000, model64: 0x1bdef0001bdf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f09, match64: 0x00000000, model64: 0xfef50000fef8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0a, match64: 0x00000000, model64: 0x1bdf40001bdfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0b, match64: 0x00000000, model64: 0x1bdfd0001be00},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0c, match64: 0x00000000, model64: 0x1be000001be03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0d, match64: 0x00000000, model64: 0x1be030001be06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0e, match64: 0x00000000, model64: 0x1be060001be09},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0f, match64: 0x00000000, model64: 0x1be090001be0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f10, match64: 0x00000000, model64: 0x1be0d0001be10},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f11, match64: 0x00000000, model64: 0x1be100001be13},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f12, match64: 0x00000000, model64: 0x1be130001be16},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f13, match64: 0x00000000, model64: 0x1be160001be1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f14, match64: 0x00000000, model64: 0x1be1b0001be1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f15, match64: 0x00000000, model64: 0x1be1e0001be36},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f16, match64: 0x00000000, model64: 0x1be360001be3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f17, match64: 0x00000000, model64: 0x1be3e0001be41},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f18, match64: 0x00000000, model64: 0x1be410001be44},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f19, match64: 0x00000000, model64: 0x1be440001be47},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1a, match64: 0x00000000, model64: 0x1be470001be4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1b, match64: 0x00000000, model64: 0x1be4a0001be4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1c, match64: 0x00000000, model64: 0x151f00001521},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1d, match64: 0x00000000, model64: 0x1be4c0001be4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1e, match64: 0x00000000, model64: 0x156500001568},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1f, match64: 0x00000000, model64: 0x5e5f00005e61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f20, match64: 0x00000000, model64: 0x1be4f0001be51},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f21, match64: 0x00000000, model64: 0x5d0e00005d10},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f22, match64: 0x00000000, model64: 0x1be510001be53},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f23, match64: 0x00000000, model64: 0x172f3000172fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f24, match64: 0x00000000, model64: 0x1be530001be56},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f25, match64: 0x00000000, model64: 0x1be560001be59},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f26, match64: 0x00000000, model64: 0x1be590001be5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f27, match64: 0x00000000, model64: 0x1be5d0001be65},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f28, match64: 0x00000000, model64: 0x10eeb00010eed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f29, match64: 0x00000000, model64: 0x1be650001be6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2a, match64: 0x00000000, model64: 0x1be6a0001be6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2b, match64: 0x00000000, model64: 0x96560000965d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2c, match64: 0x00000000, model64: 0x1be6e0001be73},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2d, match64: 0x00000000, model64: 0x1be730001be7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f30, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f31, match64: 0x00000000, model64: 0x1be7b0001be7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f32, match64: 0x00000000, model64: 0xc4170000c419},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f33, match64: 0x00000000, model64: 0x1be7d0001be80},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f34, match64: 0x00000000, model64: 0x1be800001be85},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f35, match64: 0x00000000, model64: 0x1be850001be88},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f36, match64: 0x00000000, model64: 0x1be880001be8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f37, match64: 0x00000000, model64: 0x1be8d0001be92},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f38, match64: 0x00000000, model64: 0x1be920001be96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f39, match64: 0x00000000, model64: 0x1be960001be9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1be9b0001bea0, model64: 0x1bea00001bea5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3a, match64: 0x00000000, model64: 0x1bea50001bea8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bea80001bead, model64: 0x1bead0001beaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3b, match64: 0x00000000, model64: 0x1beaf0001beb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3c, match64: 0x00000000, model64: 0x1beb30001beba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1beba0001bec0, model64: 0x1bec00001bec4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3d, match64: 0x00000000, model64: 0x1bec40001bec9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3e, match64: 0x00000000, model64: 0x1bec90001bed1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3f, match64: 0x00000000, model64: 0x1bed10001bed6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f40, match64: 0x00000000, model64: 0x1bed60001bedc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f41, match64: 0x00000000, model64: 0x1bedc0001bedf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f42, match64: 0x00000000, model64: 0x1bedf0001bee4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f43, match64: 0x00000000, model64: 0x1bee40001bee9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f44, match64: 0x00000000, model64: 0x1bee90001bef2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f45, match64: 0x00000000, model64: 0x9cf600009cfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f46, match64: 0x00000000, model64: 0x1bef20001bef8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bef80001befe, model64: 0x1befe0001bf09},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f47, match64: 0x00000000, model64: 0x1bf090001bf11},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f48, match64: 0x00000000, model64: 0x1bf110001bf1a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bf1a0001bf1f, model64: 0x1bf1f0001bf25},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bf250001bf2a, model64: 0x1bf2a0001bf36},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bf360001bf3b, model64: 0x1bf3b0001bf49},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bf490001bf4e, model64: 0x1bf4e0001bf57},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f49, match64: 0x00000000, model64: 0x1bf570001bf5e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f4a, match64: 0x00000000, model64: 0x1bf5e0001bf69},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f4b, match64: 0x00000000, model64: 0x1bf690001bf75},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f4c, match64: 0x00000000, model64: 0x1bf750001bf82},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bf820001bf87, model64: 0x1bf870001bf93},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bf930001bf98, model64: 0x1bf980001bfa0},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bfa00001bfa5, model64: 0x1bfa50001bfaf},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bfaf0001bfb4, model64: 0x1bfb40001bfbb},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bfbb0001bfc0, model64: 0x1bfc00001bfca},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1f4d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1f4e, match64: 0x00000000, model64: 0x1bfca0001bfd6},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1f4f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bfe70001bfef, model64: 0x1bfef0001bff5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bff50001bffd, model64: 0xa5820000a585},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bffd0001c005, model64: 0x1c0050001c008},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f52, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f55, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f56, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1c0270001c02e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1c0310001c040},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5f, match64: 0x00000000, model64: 0x1c05a0001c05e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x183100001832},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1c07d0001c083},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1c0860001c094},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f64, match64: 0x00000000, model64: 0x1c0970001c0a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f65, match64: 0x00000000, model64: 0x1c0a20001c0ac},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f66, match64: 0x00000000, model64: 0x1c0a20001c0ac},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f68, match64: 0x00000000, model64: 0x1c0af0001c0b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f69, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c0b90001c0be, model64: 0x1c0be0001c0c3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1c0cf0001c0db},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6f, match64: 0x00000000, model64: 0x1c0f10001c0f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f70, match64: 0x00000000, model64: 0x1c0f60001c0fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c0fe0001c105, model64: 0x1c0fe0001c105},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f71, match64: 0x00000000, model64: 0x1c1050001c10d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f73, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1c11d0001c125},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c12c0001c131, model64: 0x1c12c0001c131},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1310001c13c, model64: 0x1c13c0001c140},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1400001c14c, model64: 0x1c14c0001c150},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1500001c15a, model64: 0x1c15a0001c15d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f76, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f77, match64: 0x00000000, model64: 0x1c15d0001c160},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1600001c165, model64: 0x1c1650001c16a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f78, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f79, match64: 0x00000000, model64: 0x1c16a0001c171},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7a, match64: 0x00000000, model64: 0x1c16a0001c171},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1f7b, match64: 0x00000000, model64: 0x1c1710001c176},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1c1760001c17c, model64: 0x1c17c0001c183},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1f7c, match64: 0x00000000, model64: 0x1c1830001c18d},
		modelTuple{type64: 0x2e8000002f5, matchRI: -0x0001, match64: 0x1c18d0001c1a2, model64: 0x1c1a20001c1ae},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1f7d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1c1c00001c1cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f82, match64: 0x00000000, model64: 0x1c1d50001c1e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f83, match64: 0x00000000, model64: 0x1c1e00001c1ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f85, match64: 0x00000000, model64: 0x1c1fe0001c206},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f86, match64: 0x00000000, model64: 0x1c2060001c209},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f87, match64: 0x00000000, model64: 0x1c2090001c20c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f88, match64: 0x00000000, model64: 0x174270001742a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f89, match64: 0x00000000, model64: 0x1c20c0001c210},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8a, match64: 0x00000000, model64: 0x1c2100001c215},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8b, match64: 0x00000000, model64: 0x1c2150001c21a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8c, match64: 0x00000000, model64: 0x1c21a0001c224},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c2240001c22e, model64: 0x1c22e0001c23d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8d, match64: 0x00000000, model64: 0x1c23d0001c240},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8e, match64: 0x00000000, model64: 0x1c2400001c244},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8f, match64: 0x00000000, model64: 0x1c2440001c247},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f90, match64: 0x00000000, model64: 0xf0ce0000f0d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c2470001c24d, model64: 0x1c24d0001c253},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c2530001c25a, model64: 0x1c2530001c25a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c25a0001c260, model64: 0x1c2600001c266},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c2660001c26c, model64: 0x1c26c0001c26f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c26f0001c275, model64: 0x1c2750001c27c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f91, match64: 0x00000000, model64: 0x1c0050001c008},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c27c0001c281, model64: 0x1c2810001c287},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f92, match64: 0x00000000, model64: 0x1c2870001c28f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f93, match64: 0x00000000, model64: 0x1c28f0001c293},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c2870001c28f, model64: 0x1c2870001c28f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f94, match64: 0x00000000, model64: 0x1c2930001c29a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c29a0001c2a0, model64: 0x1c2a00001c2a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f95, match64: 0x00000000, model64: 0x1c2a30001c2ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c2ab0001c2b3, model64: 0x1c2b30001c2ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f96, match64: 0x00000000, model64: 0x1c2ba0001c2be},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f97, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c2be0001c2c2, model64: 0x1c2be0001c2c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c2c20001c2c8, model64: 0x1c2c80001c2cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f98, match64: 0x00000000, model64: 0x1c2cf0001c2df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f99, match64: 0x00000000, model64: 0x1c2df0001c2e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9a, match64: 0x00000000, model64: 0x1c2e80001c2f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9b, match64: 0x00000000, model64: 0x1c2f30001c2fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c3090001c316, model64: 0x1c3160001c324},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c3240001c32d, model64: 0x1c32d0001c337},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9e, match64: 0x00000000, model64: 0x1c3370001c341},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9f, match64: 0x00000000, model64: 0x1c3410001c34b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa0, match64: 0x00000000, model64: 0x1c34b0001c359},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa1, match64: 0x00000000, model64: 0x1c3590001c362},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa2, match64: 0x00000000, model64: 0x1c3620001c370},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa3, match64: 0x00000000, model64: 0x1c3700001c379},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa4, match64: 0x00000000, model64: 0x1c3790001c382},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c3820001c38e, model64: 0x1c38e0001c395},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c3950001c39d, model64: 0x1c39d0001c39f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa5, match64: 0x00000000, model64: 0x1c39f0001c3a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa6, match64: 0x00000000, model64: 0x1c3a50001c3ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa7, match64: 0x00000000, model64: 0x1c3ac0001c3b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa8, match64: 0x00000000, model64: 0x1c3b70001c3c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa9, match64: 0x00000000, model64: 0x1c3c40001c3d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1faa, match64: 0x00000000, model64: 0x1c3d00001c3d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fab, match64: 0x00000000, model64: 0x1c3d90001c3e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fac, match64: 0x00000000, model64: 0x1c3e10001c3ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fad, match64: 0x00000000, model64: 0x1c3ef0001c3f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fae, match64: 0x00000000, model64: 0x1c3f90001c405},
		modelTuple{type64: 0x2700000027, matchRI: 0x1faf, match64: 0x00000000, model64: 0x1c4050001c411},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1fb0, match64: 0x00000000, model64: 0x1c4110001c41c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1fb1, match64: 0x00000000, model64: 0x1c41c0001c427},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1fb2, match64: 0x00000000, model64: 0x1c4270001c436},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1fb3, match64: 0x00000000, model64: 0x1c4360001c441},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1fb4, match64: 0x00000000, model64: 0x1c4410001c44c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1fb5, match64: 0x00000000, model64: 0x1c44c0001c45c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1fb6, match64: 0x00000000, model64: 0x1c45c0001c46b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb7, match64: 0x00000000, model64: 0x1c46b0001c46e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb8, match64: 0x00000000, model64: 0x1c46e0001c476},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb9, match64: 0x00000000, model64: 0x1c4760001c47e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fba, match64: 0x00000000, model64: 0x1c47e0001c486},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbb, match64: 0x00000000, model64: 0x1c4860001c492},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbc, match64: 0x00000000, model64: 0x1c4920001c49a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbd, match64: 0x00000000, model64: 0x1c49a0001c4a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbe, match64: 0x00000000, model64: 0x1c4a60001c4b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbf, match64: 0x00000000, model64: 0x1c4b20001c4ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc0, match64: 0x00000000, model64: 0x1c4ba0001c4c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc1, match64: 0x00000000, model64: 0x1c4c60001c4d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc2, match64: 0x00000000, model64: 0x1c4d60001c4e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc3, match64: 0x00000000, model64: 0x1c4e20001c4ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc4, match64: 0x00000000, model64: 0x1c4ea0001c4fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc5, match64: 0x00000000, model64: 0x1c4fa0001c506},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc6, match64: 0x00000000, model64: 0x1c5060001c510},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc7, match64: 0x00000000, model64: 0x1c5100001c51b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc8, match64: 0x00000000, model64: 0x1c51b0001c523},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc9, match64: 0x00000000, model64: 0x1c5230001c52f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fca, match64: 0x00000000, model64: 0x1c52f0001c538},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcb, match64: 0x00000000, model64: 0x1c5380001c548},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcc, match64: 0x00000000, model64: 0x1c5480001c550},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcd, match64: 0x00000000, model64: 0x1c5500001c559},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fce, match64: 0x00000000, model64: 0x1c5590001c561},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcf, match64: 0x00000000, model64: 0x1c5610001c56d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd0, match64: 0x00000000, model64: 0x1c56d0001c57c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd1, match64: 0x00000000, model64: 0x1c57c0001c588},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd2, match64: 0x00000000, model64: 0x1c5880001c590},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd3, match64: 0x00000000, model64: 0x1c5900001c59f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd4, match64: 0x00000000, model64: 0x1c59f0001c5b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd5, match64: 0x00000000, model64: 0x1c5b20001c5ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd6, match64: 0x00000000, model64: 0x1c5ba0001c5c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd7, match64: 0x00000000, model64: 0x1c5c10001c5cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd8, match64: 0x00000000, model64: 0x1c5cc0001c5d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd9, match64: 0x00000000, model64: 0x1c5d40001c5e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fda, match64: 0x00000000, model64: 0x1c5e00001c5e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdb, match64: 0x00000000, model64: 0x1c5e50001c5ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdc, match64: 0x00000000, model64: 0x1c5ea0001c5f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdd, match64: 0x00000000, model64: 0x1c5f40001c5fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fde, match64: 0x00000000, model64: 0x1c5fa0001c600},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdf, match64: 0x00000000, model64: 0x1c6000001c60a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe0, match64: 0x00000000, model64: 0x1c60a0001c614},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe1, match64: 0x00000000, model64: 0x1c6140001c61f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe2, match64: 0x00000000, model64: 0x1c61f0001c62a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe3, match64: 0x00000000, model64: 0x1c62a0001c634},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe4, match64: 0x00000000, model64: 0x1c6340001c63a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe5, match64: 0x00000000, model64: 0x1c5f40001c5fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe6, match64: 0x00000000, model64: 0x1c63a0001c643},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe7, match64: 0x00000000, model64: 0x1c6430001c648},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe8, match64: 0x00000000, model64: 0x1c6480001c652},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe9, match64: 0x00000000, model64: 0x1c6520001c657},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fea, match64: 0x00000000, model64: 0x1c6570001c660},
		modelTuple{type64: 0x2700000027, matchRI: 0x1feb, match64: 0x00000000, model64: 0x1c6600001c669},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fec, match64: 0x00000000, model64: 0x1c6690001c672},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fed, match64: 0x00000000, model64: 0x1c6720001c677},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fee, match64: 0x00000000, model64: 0x1c6770001c67d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fef, match64: 0x00000000, model64: 0x1c67d0001c685},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff0, match64: 0x00000000, model64: 0x1c6850001c68b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff1, match64: 0x00000000, model64: 0x1c68b0001c694},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff2, match64: 0x00000000, model64: 0x1c6940001c69d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff3, match64: 0x00000000, model64: 0x1c69d0001c6a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff4, match64: 0x00000000, model64: 0x1c6a30001c6a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff5, match64: 0x00000000, model64: 0x1c6a80001c6b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff6, match64: 0x00000000, model64: 0x1c6b00001c6b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff7, match64: 0x00000000, model64: 0x1c6b90001c6c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff8, match64: 0x00000000, model64: 0x1c6c20001c6ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff9, match64: 0x00000000, model64: 0x1c6ca0001c6d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffa, match64: 0x00000000, model64: 0x1c6d90001c6e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffb, match64: 0x00000000, model64: 0x9db500009dbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffc, match64: 0x00000000, model64: 0x1c6e80001c6f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffd, match64: 0x00000000, model64: 0x1c6f50001c6fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffe, match64: 0x00000000, model64: 0x1c6fc0001c707},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fff, match64: 0x00000000, model64: 0x1c7070001c70e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2000, match64: 0x00000000, model64: 0x1c70e0001c719},
		modelTuple{type64: 0x2700000027, matchRI: 0x2001, match64: 0x00000000, model64: 0x1c7190001c725},
		modelTuple{type64: 0x2700000027, matchRI: 0x2002, match64: 0x00000000, model64: 0x1c7250001c730},
		modelTuple{type64: 0x2700000027, matchRI: 0x2003, match64: 0x00000000, model64: 0x1c7300001c737},
		modelTuple{type64: 0x2700000027, matchRI: 0x2004, match64: 0x00000000, model64: 0x1c7370001c742},
		modelTuple{type64: 0x2700000027, matchRI: 0x2005, match64: 0x00000000, model64: 0x1c7420001c749},
		modelTuple{type64: 0x2700000027, matchRI: 0x2006, match64: 0x00000000, model64: 0x1c7490001c754},
		modelTuple{type64: 0x2700000027, matchRI: 0x2007, match64: 0x00000000, model64: 0x1c7540001c75e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2008, match64: 0x00000000, model64: 0x1c75e0001c765},
		modelTuple{type64: 0x2700000027, matchRI: 0x2009, match64: 0x00000000, model64: 0x1c7650001c770},
		modelTuple{type64: 0x2700000027, matchRI: 0x200a, match64: 0x00000000, model64: 0x1c7700001c778},
		modelTuple{type64: 0x2700000027, matchRI: 0x200b, match64: 0x00000000, model64: 0x1c7780001c780},
		modelTuple{type64: 0x2700000027, matchRI: 0x200c, match64: 0x00000000, model64: 0x1c7800001c787},
		modelTuple{type64: 0x2700000027, matchRI: 0x200d, match64: 0x00000000, model64: 0x1c7870001c78f},
		modelTuple{type64: 0x2700000027, matchRI: 0x200e, match64: 0x00000000, model64: 0x1c78f0001c797},
		modelTuple{type64: 0x2700000027, matchRI: 0x200f, match64: 0x00000000, model64: 0x1c7970001c79f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2010, match64: 0x00000000, model64: 0x1c79f0001c7aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2011, match64: 0x00000000, model64: 0x1c7aa0001c7b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2012, match64: 0x00000000, model64: 0x1c7b50001c7bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2013, match64: 0x00000000, model64: 0x1c7bc0001c7c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2014, match64: 0x00000000, model64: 0x1c7c40001c7cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2015, match64: 0x00000000, model64: 0x1c7cd0001c7d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2016, match64: 0x00000000, model64: 0x1c7d50001c7e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2017, match64: 0x00000000, model64: 0x1c7e00001c7ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2018, match64: 0x00000000, model64: 0x1c7ec0001c7f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2019, match64: 0x00000000, model64: 0x1c7f40001c803},
		modelTuple{type64: 0x2700000027, matchRI: 0x201a, match64: 0x00000000, model64: 0x1c8030001c80c},
		modelTuple{type64: 0x2700000027, matchRI: 0x201b, match64: 0x00000000, model64: 0x1c80c0001c816},
		modelTuple{type64: 0x2700000027, matchRI: 0x201c, match64: 0x00000000, model64: 0x1c8160001c821},
		modelTuple{type64: 0x2700000027, matchRI: 0x201d, match64: 0x00000000, model64: 0x1c8210001c829},
		modelTuple{type64: 0x20d00000213, matchRI: 0x201e, match64: 0x00000000, model64: 0x1c8290001c834},
		modelTuple{type64: 0x20d00000213, matchRI: 0x201f, match64: 0x00000000, model64: 0x1c8340001c83f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2020, match64: 0x00000000, model64: 0x1c83f0001c84c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2021, match64: 0x00000000, model64: 0x1c84c0001c855},
		modelTuple{type64: 0x2700000027, matchRI: 0x2022, match64: 0x00000000, model64: 0x1c8550001c85e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2023, match64: 0x00000000, model64: 0x1c85e0001c867},
		modelTuple{type64: 0x2700000027, matchRI: 0x2024, match64: 0x00000000, model64: 0x1c8670001c874},
		modelTuple{type64: 0x2700000027, matchRI: 0x2025, match64: 0x00000000, model64: 0x1c8740001c882},
		modelTuple{type64: 0x2700000027, matchRI: 0x2026, match64: 0x00000000, model64: 0x1c8820001c88b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2027, match64: 0x00000000, model64: 0x1c88b0001c898},
		modelTuple{type64: 0x2700000027, matchRI: 0x2028, match64: 0x00000000, model64: 0x1c8980001c89f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2029, match64: 0x00000000, model64: 0x1c89f0001c8a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x202a, match64: 0x00000000, model64: 0x1c8a40001c8aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x202b, match64: 0x00000000, model64: 0x1c8aa0001c8b1},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1c8b10001c8b9, model64: 0x35b7000035b9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x202c, match64: 0x00000000, model64: 0x1c8b90001c8bd},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x202d, match64: 0x00000000, model64: 0x1c8bd0001c8c5},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x202e, match64: 0x00000000, model64: 0x1c8c50001c8cf},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x202f, match64: 0x00000000, model64: 0x1c8cf0001c8d9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2030, match64: 0x00000000, model64: 0x1c8d90001c8df},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2031, match64: 0x00000000, model64: 0x1c8df0001c8e5},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2032, match64: 0x00000000, model64: 0x1c8e50001c8ec},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2033, match64: 0x00000000, model64: 0x1c8ec0001c8f2},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2034, match64: 0x00000000, model64: 0x1c8f20001c8fc},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2035, match64: 0x00000000, model64: 0x1c8fc0001c902},
		modelTuple{type64: 0x2700000027, matchRI: 0x2036, match64: 0x00000000, model64: 0x12e4500012e4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2037, match64: 0x00000000, model64: 0x1c9020001c909},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x2038, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2039, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x203a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c9100001c91f, model64: 0x1c91f0001c926},
		modelTuple{type64: 0x2700000027, matchRI: 0x203c, match64: 0x00000000, model64: 0x1c9260001c92e},
		modelTuple{type64: 0x2700000027, matchRI: 0x203e, match64: 0x00000000, model64: 0x49b7000049b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x203f, match64: 0x00000000, model64: 0x1c9330001c939},
		modelTuple{type64: 0x2700000027, matchRI: 0x2040, match64: 0x00000000, model64: 0x1c9390001c941},
		modelTuple{type64: 0x2700000027, matchRI: 0x2041, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2042, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c94b0001c957, model64: 0x1c9570001c963},
		modelTuple{type64: 0x2700000027, matchRI: 0x2044, match64: 0x00000000, model64: 0x1c9630001c969},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1c9690001c971, model64: 0x1c9710001c97a},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1c97a0001c982, model64: 0x1c9820001c98a},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1c98a0001c995, model64: 0x1c9950001c9a0},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1c9a00001c9a8, model64: 0x1c9a80001c9b0},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2045, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2046, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2047, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2048, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c9b60001c9c1, model64: 0x1c9c10001c9c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c9c50001c9d0, model64: 0x1c9d00001c9d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c9d50001c9df, model64: 0x1c9df0001c9ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x204a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x204c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x204d, match64: 0x00000000, model64: 0x1056700010572},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1c9ff0001ca02},
		modelTuple{type64: 0x2700000027, matchRI: 0x204e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x204f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ca0c0001ca1b, model64: 0x1ca1b0001ca24},
		modelTuple{type64: 0x2700000027, matchRI: 0x2051, match64: 0x00000000, model64: 0x1ca240001ca2e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ca2e0001ca33, model64: 0x1ca330001ca39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ca390001ca42, model64: 0x100cf000100d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2052, match64: 0x00000000, model64: 0x1ca420001ca46},
		modelTuple{type64: 0x2700000027, matchRI: 0x2053, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2055, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x5db000005e5, matchRI: -0x0001, match64: 0x1ca510001ca58, model64: 0x19b2000019b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2057, match64: 0x00000000, model64: 0x1ca5d0001ca62},
		modelTuple{type64: 0x2700000027, matchRI: 0x2058, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x205a, match64: 0x00000000, model64: 0x1ca6f0001ca76},
		modelTuple{type64: 0x2700000027, matchRI: 0x205b, match64: 0x00000000, model64: 0x1ca760001ca7f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1ca870001ca91},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ca940001ca9c, model64: 0x1ca940001ca9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x205e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x205f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2060, match64: 0x00000000, model64: 0x1ca9c0001caa5},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2061, match64: 0x00000000, model64: 0x1caa50001caaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2062, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2063, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2065, match64: 0x00000000, model64: 0x103d2000103da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cab10001cab8, model64: 0x1cab10001cab8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cab80001cac0, model64: 0x1cab80001cac0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cac00001cac8, model64: 0x1cac00001cac8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2066, match64: 0x00000000, model64: 0x1cac80001cad5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2067, match64: 0x00000000, model64: 0x1cad50001cadc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cadc0001cae7, model64: 0x1cae70001caf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2068, match64: 0x00000000, model64: 0x1caf00001caf5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1caf50001cafd, model64: 0x1cafd0001cb06},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2069, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x206a, match64: 0x00000000, model64: 0x1cb060001cb0d},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x206b, match64: 0x00000000, model64: 0x1cb0d0001cb14},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1cb140001cb21, model64: 0x1cb140001cb21},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1cb210001cb2f, model64: 0x1cb2f0001cb3d},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x206c, match64: 0x00000000, model64: 0x1cb3d0001cb46},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x206d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cb580001cb61, model64: 0x1cb610001cb6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cb6a0001cb73, model64: 0x1cb6a0001cb73},
		modelTuple{type64: 0x2700000027, matchRI: 0x2072, match64: 0x00000000, model64: 0x1cb790001cb85},
		modelTuple{type64: 0x2700000027, matchRI: 0x2074, match64: 0x00000000, model64: 0x1cb8b0001cb95},
		modelTuple{type64: 0x2700000027, matchRI: 0x2075, match64: 0x00000000, model64: 0x1cb950001cb9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2076, match64: 0x00000000, model64: 0x1cb9e0001cba6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1cbab0001cbb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2079, match64: 0x00000000, model64: 0x7e2400007e29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cbb90001cbc8, model64: 0x1cbc80001cbd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cbd10001cbd9, model64: 0x1cbd90001cbe2},
		modelTuple{type64: 0x2700000027, matchRI: 0x207a, match64: 0x00000000, model64: 0x1cbe20001cbef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cbef0001cbfd, model64: 0x1cbef0001cbfd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cbfd0001cc07, model64: 0x1cbfd0001cc07},
		modelTuple{type64: 0x2700000027, matchRI: 0x207b, match64: 0x00000000, model64: 0x1cc070001cc15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cc150001cc1f, model64: 0x1cc1f0001cc29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cc290001cc35, model64: 0x1cc350001cc41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cc410001cc45, model64: 0x1cc410001cc45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cc450001cc4c, model64: 0x1cc4c0001cc53},
		modelTuple{type64: 0x20d00000213, matchRI: 0x207c, match64: 0x00000000, model64: 0x1cc530001cc5e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x207d, match64: 0x00000000, model64: 0x1cc5e0001cc6f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1cc7f0001cc8c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2082, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2083, match64: 0x00000000, model64: 0x1cc9a0001cca1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ccaa0001ccb3, model64: 0x1ccaa0001ccb3},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ccb30001ccbc, model64: 0x1ccbc0001ccc5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ccc50001ccca, model64: 0x1ccc50001ccca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ccca0001ccd5, model64: 0x1ccd50001ccdb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2086, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1cce40001ccee, model64: 0xf70f0000f711},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1ccfd0001cd0f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1cd1c0001cd20},
		modelTuple{type64: 0x2700000027, matchRI: 0x208a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x208b, match64: 0x00000000, model64: 0x1cd250001cd2e},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x208c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x208e, match64: 0x00000000, model64: 0x1cd2e0001cd37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cd370001cd44, model64: 0x1cd440001cd51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cd510001cd5e, model64: 0x1cd5e0001cd6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x208f, match64: 0x00000000, model64: 0x1cd2e0001cd37},
		modelTuple{type64: 0x2700000027, matchRI: 0x2090, match64: 0x00000000, model64: 0x1cd6b0001cd71},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1cd710001cd7c, model64: 0x1cd710001cd7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cd7c0001cd87, model64: 0x1cd7c0001cd87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cd8e0001cd93, model64: 0x1cd930001cd9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cd9e0001cda3, model64: 0x1cda30001cdae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cdae0001cdb3, model64: 0x1cdb30001cdbe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cdbe0001cdc2, model64: 0x1cdc20001cdcc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cdcc0001cdd1, model64: 0x1cdd10001cddc},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1cddc0001cde1, model64: 0xbd710000bd77},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1cde10001cde6, model64: 0x1cde60001cdf1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1cdf10001cdf8, model64: 0x1cdf80001ce05},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ce050001ce0b, model64: 0x1ce0b0001ce17},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2092, match64: 0x00000000, model64: 0x1ce170001ce21},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2093, match64: 0x00000000, model64: 0x1ce210001ce30},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ce300001ce36, model64: 0x1ce360001ce43},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x1ce430001ce52, model64: 0x1ce520001ce60},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x2094, match64: 0x00000000, model64: 0x1ce600001ce6c},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1ce6c0001ce75, model64: 0x1ce750001ce7f},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1ce7f0001ce87, model64: 0x1ce870001ce94},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1ce940001ce9e, model64: 0x1ce9e0001cea8},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2095, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1cea80001ceb1, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x2096, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2097, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2098, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x209b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1cec40001cecf, model64: 0x1cecf0001ceda},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ceda0001cee7, model64: 0x1cee70001cefb},
		modelTuple{type64: 0x2700000027, matchRI: 0x209c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x209d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x209f, match64: 0x00000000, model64: 0x1cf040001cf12},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a2, match64: 0x00000000, model64: 0x1cf1a0001cf26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cf260001cf2f, model64: 0x1cf2f0001cf44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cf440001cf57, model64: 0x1cf570001cf6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cf6a0001cf76, model64: 0x1cf6a0001cf76},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a4, match64: 0x00000000, model64: 0x1cf760001cf80},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a5, match64: 0x00000000, model64: 0x1cf760001cf80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cf800001cf8c, model64: 0x1cf8c0001cf97},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a7, match64: 0x00000000, model64: 0x1cf970001cfae},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20aa, match64: 0x00000000, model64: 0x1cfb30001cfbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ab, match64: 0x00000000, model64: 0x1cfbf0001cfca},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ac, match64: 0x00000000, model64: 0x1cfca0001cfd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ad, match64: 0x00000000, model64: 0x1cfd20001cfdf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cfdf0001cfea, model64: 0x1cfea0001cff6},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x20ae, match64: 0x00000000, model64: 0x1cff60001d001},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x20af, match64: 0x00000000, model64: 0x1d0010001d00c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x20b0, match64: 0x00000000, model64: 0x1d00c0001d018},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x20b1, match64: 0x00000000, model64: 0x1d0180001d023},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x20b2, match64: 0x00000000, model64: 0x1d0230001d030},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x20b3, match64: 0x00000000, model64: 0x1d0300001d045},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x20b4, match64: 0x00000000, model64: 0x1d0450001d050},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d05e0001d068, model64: 0x1d0680001d072},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d0720001d07e, model64: 0x1d07e0001d08a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d08a0001d095, model64: 0x1d0950001d0a0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d0a40001d0a9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bb, match64: 0x00000000, model64: 0x1d0b60001d0be},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bc, match64: 0x00000000, model64: 0x1d0be0001d0d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bd, match64: 0x00000000, model64: 0x1d0d00001d0df},
		modelTuple{type64: 0x2700000027, matchRI: 0x20be, match64: 0x00000000, model64: 0x1d0df0001d0f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bf, match64: 0x00000000, model64: 0x1d0f10001d109},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d1090001d11f, model64: 0x1d11f0001d135},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d1350001d147, model64: 0x1d1470001d159},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c0, match64: 0x00000000, model64: 0x1d1590001d16a},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c1, match64: 0x00000000, model64: 0x1d16a0001d17b},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c2, match64: 0x00000000, model64: 0x1d17b0001d18c},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c3, match64: 0x00000000, model64: 0x1d18c0001d197},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c4, match64: 0x00000000, model64: 0x1d1970001d1a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d1a70001d1b2, model64: 0x1d1b20001d1bd},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1d1bd0001d1cf, model64: 0x1d1cf0001d1dc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20c5, match64: 0x00000000, model64: 0x1d1dc0001d1f2},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1d1f20001d1f7, model64: 0x1d1f70001d202},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d21f0001d22e},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ca, match64: 0x00000000, model64: 0x1d22e0001d236},
		modelTuple{type64: 0x2700000027, matchRI: 0x20cb, match64: 0x00000000, model64: 0x1d2360001d23d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20cc, match64: 0x00000000, model64: 0x1d23d0001d242},
		modelTuple{type64: 0x2700000027, matchRI: 0x20cd, match64: 0x00000000, model64: 0x1d2420001d24a},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ce, match64: 0x00000000, model64: 0x1d24a0001d250},
		modelTuple{type64: 0x2700000027, matchRI: 0x20cf, match64: 0x00000000, model64: 0x1d2500001d254},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d0, match64: 0x00000000, model64: 0x918f00009191},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20d1, match64: 0x00000000, model64: 0x1d2540001d261},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d2680001d271, model64: 0x1d2710001d273},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d3, match64: 0x00000000, model64: 0xc4170000c419},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d4, match64: 0x00000000, model64: 0x1d2730001d275},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d5, match64: 0x00000000, model64: 0x1d2750001d27c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d27c0001d28b, model64: 0x1d28b0001d292},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d2920001d29f, model64: 0x1d29f0001d2a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d6, match64: 0x00000000, model64: 0x1d2a40001d2a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d2a90001d2b3, model64: 0x1d2b30001d2b7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20d7, match64: 0x00000000, model64: 0x1d2b70001d2ba},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1d2ba0001d2ca, model64: 0x1d2ca0001d2d2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20d8, match64: 0x00000000, model64: 0x1d2d20001d2d9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20d9, match64: 0x00000000, model64: 0x1d2d90001d2e2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1d2e20001d2e9, model64: 0x1d2e20001d2e9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20da, match64: 0x00000000, model64: 0x1d2e90001d2f5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20db, match64: 0x00000000, model64: 0x1d2f50001d2fe},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20dc, match64: 0x00000000, model64: 0x1d2fe0001d309},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20dd, match64: 0x00000000, model64: 0x1d3090001d317},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20de, match64: 0x00000000, model64: 0x1d3170001d326},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20df, match64: 0x00000000, model64: 0x1d3260001d334},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20e0, match64: 0x00000000, model64: 0x1d3340001d344},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1d3440001d350, model64: 0x1d3500001d35d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1d35d0001d369, model64: 0x1d3690001d373},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1d3730001d385, model64: 0x1d3850001d38c},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x20e1, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20e2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d3950001d3a2, model64: 0x1d3a20001d3af},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e5, match64: 0x00000000, model64: 0x1d3af0001d3b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e9, match64: 0x00000000, model64: 0x1d3c50001d3ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ea, match64: 0x00000000, model64: 0x1d3ce0001d3d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x20eb, match64: 0x00000000, model64: 0x1d3d20001d3e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ec, match64: 0x00000000, model64: 0x1d3e10001d3ef},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20ed, match64: 0x00000000, model64: 0x1d3ef0001d3f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ef, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f2, match64: 0x00000000, model64: 0x1d4190001d41e},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f4, match64: 0x00000000, model64: 0xa5150000a525},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f5, match64: 0x00000000, model64: 0xb1150000b120},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f6, match64: 0x00000000, model64: 0x1d4250001d431},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4430001d44d, model64: 0x1d44d0001d45e},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d4680001d46d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20f9, match64: 0x00000000, model64: 0x1d4740001d47b},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fa, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d47b0001d486, model64: 0x1d47b0001d486},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4860001d48a, model64: 0x72d6000072dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d48a0001d48e, model64: 0x1d48e0001d494},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fb, match64: 0x00000000, model64: 0x1d4940001d498},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fc, match64: 0x00000000, model64: 0x1d4980001d49c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d49c0001d4a7, model64: 0x1d4a70001d4ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4ae0001d4b7, model64: 0xa0ea0000a0ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4b70001d4bd, model64: 0x1d4b70001d4bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4bd0001d4c4, model64: 0x1d4bd0001d4c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fd, match64: 0x00000000, model64: 0x1b93c0001b942},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4c40001d4cc, model64: 0x1d4cc0001d4d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fe, match64: 0x00000000, model64: 0x1d4d40001d4de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4de0001d4e6, model64: 0x1d4de0001d4e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ff, match64: 0x00000000, model64: 0x1d4e60001d4ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x2100, match64: 0x00000000, model64: 0x1d4ef0001d4fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2101, match64: 0x00000000, model64: 0x1d4fb0001d504},
		modelTuple{type64: 0x2700000027, matchRI: 0x2102, match64: 0x00000000, model64: 0x1d5040001d50b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d50b0001d514, model64: 0x1d5140001d51d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d51d0001d522, model64: 0x1d5220001d527},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5270001d52f, model64: 0x1d52f0001d537},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5370001d540, model64: 0x1d5400001d549},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5490001d551, model64: 0x1d5510001d559},
		modelTuple{type64: 0x2700000027, matchRI: 0x2103, match64: 0x00000000, model64: 0x1d5590001d55e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2104, match64: 0x00000000, model64: 0xc5960000c59a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d55e0001d563, model64: 0x1d55e0001d563},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5630001d56a, model64: 0x1d56a0001d571},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5710001d577, model64: 0x1bc100001bc16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5770001d57e, model64: 0x1d5770001d57e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2105, match64: 0x00000000, model64: 0x1d57e0001d586},
		modelTuple{type64: 0x2700000027, matchRI: 0x2106, match64: 0x00000000, model64: 0x53ff00005401},
		modelTuple{type64: 0x2700000027, matchRI: 0x2107, match64: 0x00000000, model64: 0x1d5860001d590},
		modelTuple{type64: 0x2700000027, matchRI: 0x2108, match64: 0x00000000, model64: 0x1d5900001d59e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2109, match64: 0x00000000, model64: 0x1d59e0001d5a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x210a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x210b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x210c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x210e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x210f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2111, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2112, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2114, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5bc0001d5c4, model64: 0x1d5bc0001d5c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2115, match64: 0x00000000, model64: 0x1d5c40001d5cc},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1d5cc0001d5d4, model64: 0x1d5cc0001d5d4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d5eb0001d5f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x211a, match64: 0x00000000, model64: 0x1d5fa0001d602},
		modelTuple{type64: 0x2700000027, matchRI: 0x211b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x211c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x211f, match64: 0x00000000, model64: 0x1d60d0001d611},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d6110001d616, model64: 0x1d6110001d616},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d6160001d61b, model64: 0x1d6160001d61b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d61b0001d61f, model64: 0x1d61b0001d61f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2120, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2121, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2123, match64: 0x00000000, model64: 0x6e2100006e28},
		modelTuple{type64: 0x2700000027, matchRI: 0x2124, match64: 0x00000000, model64: 0x1d6260001d630},
		modelTuple{type64: 0x2700000027, matchRI: 0x2125, match64: 0x00000000, model64: 0x1d6300001d63c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2126, match64: 0x00000000, model64: 0x1d63c0001d643},
		modelTuple{type64: 0x2700000027, matchRI: 0x2127, match64: 0x00000000, model64: 0x1d6430001d64e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2128, match64: 0x00000000, model64: 0x1d64e0001d654},
		modelTuple{type64: 0x2700000027, matchRI: 0x2129, match64: 0x00000000, model64: 0x1d6540001d658},
		modelTuple{type64: 0x2700000027, matchRI: 0x212a, match64: 0x00000000, model64: 0x1d6580001d65f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d65f0001d669, model64: 0x729b000072a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d6690001d673, model64: 0x1d6730001d67d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d67d0001d684, model64: 0x1d6840001d68b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d68b0001d690, model64: 0x1d68b0001d690},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d6900001d69a, model64: 0x1d69a0001d6a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x212b, match64: 0x00000000, model64: 0x1d6a40001d6b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x212c, match64: 0x00000000, model64: 0x1d6b60001d6c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d6c40001d6d7, model64: 0x1d6c40001d6d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d6d70001d6e6, model64: 0x1d6d70001d6e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x212d, match64: 0x00000000, model64: 0x1d6e60001d6ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x212e, match64: 0x00000000, model64: 0x1d6ee0001d6f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x212f, match64: 0x00000000, model64: 0x1d6f70001d704},
		modelTuple{type64: 0x2700000027, matchRI: 0x2130, match64: 0x00000000, model64: 0x1d7040001d70d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2131, match64: 0x00000000, model64: 0x1d70d0001d716},
		modelTuple{type64: 0x2700000027, matchRI: 0x2132, match64: 0x00000000, model64: 0x1d7160001d71d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2133, match64: 0x00000000, model64: 0x1d71d0001d725},
		modelTuple{type64: 0x2700000027, matchRI: 0x2134, match64: 0x00000000, model64: 0x1d7250001d72e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2135, match64: 0x00000000, model64: 0x1d72e0001d739},
		modelTuple{type64: 0x2700000027, matchRI: 0x2136, match64: 0x00000000, model64: 0x1d7390001d745},
		modelTuple{type64: 0x2700000027, matchRI: 0x2137, match64: 0x00000000, model64: 0x1d7450001d74d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2138, match64: 0x00000000, model64: 0x1d74d0001d754},
		modelTuple{type64: 0x2700000027, matchRI: 0x2139, match64: 0x00000000, model64: 0x1d7540001d75e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d75e0001d764, model64: 0x1d75e0001d764},
		modelTuple{type64: 0x2700000027, matchRI: 0x213a, match64: 0x00000000, model64: 0xf1310000f139},
		modelTuple{type64: 0x2700000027, matchRI: 0x213b, match64: 0x00000000, model64: 0x50a2000050a9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x213c, match64: 0x00000000, model64: 0x1d7640001d76c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x213d, match64: 0x00000000, model64: 0x405c00004062},
		modelTuple{type64: 0x2700000027, matchRI: 0x213e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x213f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2140, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2142, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2143, match64: 0x00000000, model64: 0x1d7700001d77d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2144, match64: 0x00000000, model64: 0x1d77d0001d78f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2145, match64: 0x00000000, model64: 0x1d78f0001d7a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2146, match64: 0x00000000, model64: 0x1d7a10001d7b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7b30001d7bb, model64: 0x1d7bb0001d7ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x2147, match64: 0x00000000, model64: 0x1d7ce0001d7e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2148, match64: 0x00000000, model64: 0x1d7e00001d7f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2149, match64: 0x00000000, model64: 0x1d7f20001d805},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x214a, match64: 0x00000000, model64: 0x1d8050001d81c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x214b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8280001d831, model64: 0x1d8310001d83c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d83c0001d844, model64: 0x1d8440001d84c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x214f, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2150, match64: 0x00000000, model64: 0x1d85a0001d861},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8610001d86d, model64: 0x1d86d0001d879},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8790001d883, model64: 0x1d8790001d883},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8830001d88d, model64: 0x1d88d0001d897},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8970001d89f, model64: 0x1d8970001d89f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d89f0001d8a6, model64: 0x1d8a60001d8ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8ad0001d8b2, model64: 0x1d8b20001d8bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2151, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x358d00003590},
		modelTuple{type64: 0x2700000027, matchRI: 0x2153, match64: 0x00000000, model64: 0x1d8d40001d8d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2154, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2155, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2159, match64: 0x00000000, model64: 0x1d8f50001d8fb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x215a, match64: 0x00000000, model64: 0x1d8fb0001d904},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x215b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x215c, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x215d, match64: 0x00000000, model64: 0x1d9040001d90b},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x215e, match64: 0x00000000, model64: 0x1d90b0001d913},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x215f, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x2160, match64: 0x00000000, model64: 0x1d9130001d91e},
		modelTuple{type64: 0x940000009f, matchRI: 0x2161, match64: 0x00000000, model64: 0x1d91e0001d925},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d92c0001d930, model64: 0x1d9300001d938},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9380001d93d, model64: 0x74af000074b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d93d0001d941, model64: 0x1d9410001d94a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d94a0001d94e, model64: 0x1d94e0001d957},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9570001d95b, model64: 0x1d95b0001d964},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9640001d968, model64: 0x1d9640001d968},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9680001d96c, model64: 0x1d96c0001d978},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9780001d97c, model64: 0x1d97c0001d985},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9850001d98a, model64: 0x1d98a0001d98e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d98e0001d992, model64: 0x1399000013993},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9920001d996, model64: 0x1d9960001d99d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2164, match64: 0x00000000, model64: 0x1d9b00001d9b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2166, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2167, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2168, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x216a, match64: 0x00000000, model64: 0x1d9be0001d9c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9c60001d9ca, model64: 0x1d9c60001d9ca},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x216c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9e40001d9ea, model64: 0x1d9ea0001d9f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2171, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d9ff0001da08},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1da1a0001da26},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2174, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1da2c0001da36, model64: 0x1da360001da40},
		modelTuple{type64: 0x2700000027, matchRI: 0x2175, match64: 0x00000000, model64: 0x1da400001da45},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x217a, match64: 0x00000000, model64: 0x1da590001da64},
		modelTuple{type64: 0x2700000027, matchRI: 0x217b, match64: 0x00000000, model64: 0x1da640001da6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x217c, match64: 0x00000000, model64: 0x1da6c0001da72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1da720001da79, model64: 0x1da790001da80},
		modelTuple{type64: 0x2700000027, matchRI: 0x217e, match64: 0x00000000, model64: 0x704300007046},
		modelTuple{type64: 0x2700000027, matchRI: 0x217f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1da8a0001da94, model64: 0x1da940001da96},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1daa20001daac, model64: 0x1daac0001dab6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dab60001dac0, model64: 0x1dac00001daca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1daca0001dad3, model64: 0x1dad30001dadc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2183, match64: 0x00000000, model64: 0x1dadc0001dae9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dae90001daf1, model64: 0x1daf10001daf9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1db020001db06},
		modelTuple{type64: 0x2700000027, matchRI: 0x2186, match64: 0x00000000, model64: 0x77a6000077ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x2187, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2188, match64: 0x00000000, model64: 0x1db0d0001db12},
		modelTuple{type64: 0x2700000027, matchRI: 0x2189, match64: 0x00000000, model64: 0x1db020001db06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1db160001db20, model64: 0x1db200001db21},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x218c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1db3f0001db41},
		modelTuple{type64: 0x2700000027, matchRI: 0x218f, match64: 0x00000000, model64: 0x1db470001db54},
		modelTuple{type64: 0x2700000027, matchRI: 0x2190, match64: 0x00000000, model64: 0x1db540001db60},
		modelTuple{type64: 0x2700000027, matchRI: 0x2191, match64: 0x00000000, model64: 0x1db600001db67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1db670001db6e, model64: 0x1db6e0001db7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2193, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2195, match64: 0x00000000, model64: 0x1db880001db95},
		modelTuple{type64: 0x2700000027, matchRI: 0x2196, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x219a, match64: 0x00000000, model64: 0x1db9f0001dba9},
		modelTuple{type64: 0x2700000027, matchRI: 0x219b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x219e, match64: 0x00000000, model64: 0x1dbb80001dbcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x219f, match64: 0x00000000, model64: 0x1dbcc0001dbda},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a0, match64: 0x00000000, model64: 0x1dbda0001dbdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a2, match64: 0x00000000, model64: 0x1dbe50001dbef},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a3, match64: 0x00000000, model64: 0x1dbef0001dbfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a5, match64: 0x00000000, model64: 0x1dc030001dc0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dc0e0001dc15, model64: 0x1dc150001dc22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dc220001dc29, model64: 0x1dc290001dc3d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dc3d0001dc46, model64: 0x1dc460001dc57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dc570001dc5d, model64: 0x1dc5d0001dc67},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a6, match64: 0x00000000, model64: 0x1dc670001dc71},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1dc710001dc78, model64: 0x1dc780001dc88},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a8, match64: 0x00000000, model64: 0x1dc8e0001dc99},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a9, match64: 0x00000000, model64: 0x1dc990001dca1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dca10001dca7, model64: 0x1dca10001dca7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dca70001dcaf, model64: 0x1dca70001dcaf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dcaf0001dcb5, model64: 0x1dcaf0001dcb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dcb50001dcbe, model64: 0x1dcb50001dcbe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dcbe0001dcc7, model64: 0x19b2000019b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dcc70001dccd, model64: 0x5d5000005d52},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dccd0001dcd4, model64: 0xe38c0000e38e},
		modelTuple{type64: 0x2700000027, matchRI: 0x21aa, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ab, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1dcdb0001dce6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b0, match64: 0x00000000, model64: 0x1dcf20001dcff},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b2, match64: 0x00000000, model64: 0x1dcff0001dd0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b3, match64: 0x00000000, model64: 0x1dd0a0001dd19},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b4, match64: 0x00000000, model64: 0x1dd190001dd23},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b5, match64: 0x00000000, model64: 0x1dd230001dd36},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b6, match64: 0x00000000, model64: 0x1dd360001dd45},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b7, match64: 0x00000000, model64: 0x1dd450001dd4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21b9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21ba, match64: 0x00000000, model64: 0x1dd4b0001dd52},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21bb, match64: 0x00000000, model64: 0x1dd520001dd60},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x21bd, match64: 0x00000000, model64: 0x1dd650001dd6c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x21be, match64: 0x00000000, model64: 0x1dd6c0001dd75},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x21bf, match64: 0x00000000, model64: 0x1dd750001dd81},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x21c0, match64: 0x00000000, model64: 0x1dd810001dd90},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c2, match64: 0x00000000, model64: 0x154a8000154ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c3, match64: 0x00000000, model64: 0x1dda00001dda5},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c4, match64: 0x00000000, model64: 0x1dda50001ddad},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c5, match64: 0x00000000, model64: 0x1ddad0001ddb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c6, match64: 0x00000000, model64: 0x1ddb70001ddbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c7, match64: 0x00000000, model64: 0x1ddbf0001ddc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c8, match64: 0x00000000, model64: 0x16b9000016bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c9, match64: 0x00000000, model64: 0x1ddc80001ddd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ca, match64: 0x00000000, model64: 0x1ddd00001dddc},
		modelTuple{type64: 0x2700000027, matchRI: 0x21cb, match64: 0x00000000, model64: 0x1dddc0001dde3},
		modelTuple{type64: 0x2700000027, matchRI: 0x21cc, match64: 0x00000000, model64: 0x1dde30001ddea},
		modelTuple{type64: 0x2700000027, matchRI: 0x21cd, match64: 0x00000000, model64: 0x1ddea0001ddf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ce, match64: 0x00000000, model64: 0x1ddf20001ddfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x21cf, match64: 0x00000000, model64: 0x31c00000321},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d0, match64: 0x00000000, model64: 0x1ddfb0001de06},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d1, match64: 0x00000000, model64: 0x1de060001de12},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d2, match64: 0x00000000, model64: 0x1de120001de21},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d3, match64: 0x00000000, model64: 0x1de210001de2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d4, match64: 0x00000000, model64: 0x1de2c0001de38},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d5, match64: 0x00000000, model64: 0x1de380001de3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d6, match64: 0x00000000, model64: 0x1de3d0001de45},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d7, match64: 0x00000000, model64: 0x1de450001de53},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d8, match64: 0x00000000, model64: 0x1dca10001dca7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1de530001de60, model64: 0x1de530001de60},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d9, match64: 0x00000000, model64: 0x1de600001de6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x21da, match64: 0x00000000, model64: 0x1de6a0001de74},
		modelTuple{type64: 0x2700000027, matchRI: 0x21db, match64: 0x00000000, model64: 0x1de740001de7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x21dc, match64: 0x00000000, model64: 0x1de7a0001de80},
		modelTuple{type64: 0x2700000027, matchRI: 0x21dd, match64: 0x00000000, model64: 0x1de800001de85},
		modelTuple{type64: 0x2700000027, matchRI: 0x21de, match64: 0x00000000, model64: 0x1de850001de8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x21df, match64: 0x00000000, model64: 0xfeff0000ff03},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e0, match64: 0x00000000, model64: 0x1158d00011592},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e1, match64: 0x00000000, model64: 0x1de8b0001de94},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e2, match64: 0x00000000, model64: 0x1de940001de9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e3, match64: 0x00000000, model64: 0x1de9c0001dea1},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e4, match64: 0x00000000, model64: 0x1dea10001deaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e5, match64: 0x00000000, model64: 0x74b7000074bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e6, match64: 0x00000000, model64: 0x74d9000074df},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21e7, match64: 0x00000000, model64: 0x1deaf0001debb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21e8, match64: 0x00000000, model64: 0x1debb0001dec6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21e9, match64: 0x00000000, model64: 0x1dec60001ded1},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ea, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x21eb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ded60001dee1, model64: 0x1dee10001def0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1def00001defe, model64: 0x1defe0001df05},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1df0b0001df12, model64: 0x1df120001df1e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1df1e0001df22, model64: 0x1df220001df2e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1df2e0001df34, model64: 0x1df340001df3b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1df3b0001df4a, model64: 0x1df4a0001df56},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1df560001df66, model64: 0x1df660001df73},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21ee, match64: 0x00000000, model64: 0x1df730001df7a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21ef, match64: 0x00000000, model64: 0x1df730001df7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1df7a0001df86, model64: 0x1df860001df98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1df980001df9f, model64: 0x1df9f0001dfa8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dfa80001dfaf, model64: 0x1dfaf0001dfb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dfb90001dfc0, model64: 0x1dfc00001dfca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dfca0001dfd1, model64: 0x1dfd10001dfdb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dfdb0001dfe2, model64: 0x1dfe20001dfec},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f0, match64: 0x00000000, model64: 0x1dfec0001dff7},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f1, match64: 0x00000000, model64: 0x1dff70001e000},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f2, match64: 0x00000000, model64: 0x117f5000117fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0000001e012, model64: 0x1e0000001e012},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f3, match64: 0x00000000, model64: 0x1e0120001e01f},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f4, match64: 0x00000000, model64: 0x1e01f0001e028},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0280001e038, model64: 0x1e0380001e041},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0410001e050, model64: 0x1e0500001e058},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f5, match64: 0x00000000, model64: 0x1e0580001e061},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0660001e076, model64: 0x1e0760001e085},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1e0920001e09d},
		modelTuple{type64: 0x2e8000002f5, matchRI: -0x0001, match64: 0x1e0a50001e0b3, model64: 0x1e0b30001e0b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x21fc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21fd, match64: 0x00000000, model64: 0x1e0b80001e0bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x21fe, match64: 0x00000000, model64: 0x1e0bd0001e0c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ff, match64: 0x00000000, model64: 0x1e0c50001e0cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2200, match64: 0x00000000, model64: 0x1e0cb0001e0d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2201, match64: 0x00000000, model64: 0x1e0d90001e0e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2202, match64: 0x00000000, model64: 0x1e0e20001e0eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2203, match64: 0x00000000, model64: 0x1e0eb0001e0f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2204, match64: 0x00000000, model64: 0x1e0f60001e101},
		modelTuple{type64: 0x2700000027, matchRI: 0x2205, match64: 0x00000000, model64: 0x1e1010001e10a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2206, match64: 0x00000000, model64: 0x1e10a0001e112},
		modelTuple{type64: 0x2700000027, matchRI: 0x2207, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2208, match64: 0x00000000, model64: 0x1e1120001e121},
		modelTuple{type64: 0x2700000027, matchRI: 0x2209, match64: 0x00000000, model64: 0x1e1210001e133},
		modelTuple{type64: 0x2700000027, matchRI: 0x220a, match64: 0x00000000, model64: 0x1e1330001e144},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x220c, match64: 0x00000000, model64: 0x1e14d0001e151},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x220d, match64: 0x00000000, model64: 0x1e1510001e158},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x220e, match64: 0x00000000, model64: 0x1e1580001e164},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1e1640001e16b, model64: 0x1e16b0001e176},
		modelTuple{type64: 0x20d00000213, matchRI: 0x220f, match64: 0x00000000, model64: 0x1e1760001e180},
		modelTuple{type64: 0x2700000027, matchRI: 0x2210, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2211, match64: 0x00000000, model64: 0x1e1800001e19a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2212, match64: 0x00000000, model64: 0x1e1a10001e1a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2213, match64: 0x00000000, model64: 0x957800009580},
		modelTuple{type64: 0x2700000027, matchRI: 0x2214, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e1ae0001e1b8, model64: 0x1e1b80001e1bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e1bb0001e1c6, model64: 0x1e1c60001e1c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e1c90001e1d4, model64: 0x1e1d40001e1d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e1d70001e1e2, model64: 0x1e1e20001e1e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e1e50001e1f0, model64: 0x1e1f00001e1f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e1f30001e1fd, model64: 0x1e1fd0001e200},
		modelTuple{type64: 0x2700000027, matchRI: 0x2216, match64: 0x00000000, model64: 0x1e2000001e203},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2218, match64: 0x00000000, model64: 0x1e20d0001e214},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x221b, match64: 0x00000000, model64: 0x1e2190001e21f},
		modelTuple{type64: 0x2700000027, matchRI: 0x221c, match64: 0x00000000, model64: 0x1e21f0001e225},
		modelTuple{type64: 0x2700000027, matchRI: 0x221d, match64: 0x00000000, model64: 0x40560000405c},
		modelTuple{type64: 0x2700000027, matchRI: 0x221f, match64: 0x00000000, model64: 0x1e22a0001e22e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2220, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e23a0001e249, model64: 0x1e2490001e24d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e24d0001e254, model64: 0x1e24d0001e254},
		modelTuple{type64: 0x2700000027, matchRI: 0x2223, match64: 0x00000000, model64: 0x1e25f0001e272},
		modelTuple{type64: 0x2700000027, matchRI: 0x2224, match64: 0x00000000, model64: 0x1e2720001e283},
		modelTuple{type64: 0x2700000027, matchRI: 0x2226, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2227, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2228, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x222b, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: 0x222c, match64: 0x00000000, model64: 0x1e2970001e29f},
		modelTuple{type64: 0x2700000027, matchRI: 0x222d, match64: 0x00000000, model64: 0x1e29f0001e2a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e2a60001e2ab, model64: 0x1e2a60001e2ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x222e, match64: 0x00000000, model64: 0x1e2ab0001e2ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x222f, match64: 0x00000000, model64: 0x406800004070},
		modelTuple{type64: 0x2700000027, matchRI: 0x2231, match64: 0x00000000, model64: 0x1e2b30001e2bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2232, match64: 0x00000000, model64: 0x1e2bd0001e2c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2233, match64: 0x00000000, model64: 0x1e2c20001e2cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2234, match64: 0x00000000, model64: 0x1e2cb0001e2d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2235, match64: 0x00000000, model64: 0x1e2d30001e2da},
		modelTuple{type64: 0x2700000027, matchRI: 0x2236, match64: 0x00000000, model64: 0x1e2da0001e2e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2237, match64: 0x00000000, model64: 0x1e2e00001e2e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2238, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2239, match64: 0x00000000, model64: 0x1e2e70001e2f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x223a, match64: 0x00000000, model64: 0x40560000405c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x223b, match64: 0x00000000, model64: 0x1e2f80001e302},
		modelTuple{type64: 0x20d00000213, matchRI: 0x223c, match64: 0x00000000, model64: 0x1e2f80001e302},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x223d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x223f, match64: 0x00000000, model64: 0x16eac00016eaf},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2240, match64: 0x00000000, model64: 0x1e3060001e30c},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1e30c0001e312, model64: 0x1e3120001e318},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1e3180001e31e, model64: 0x1e31e0001e326},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1e3260001e32c, model64: 0x1e32c0001e333},
		modelTuple{type64: 0x2700000027, matchRI: 0x2241, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2242, match64: 0x00000000, model64: 0x1e3330001e337},
		modelTuple{type64: 0x2700000027, matchRI: 0x2243, match64: 0x00000000, model64: 0x1e3370001e33d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2244, match64: 0x00000000, model64: 0x1e33d0001e343},
		modelTuple{type64: 0x2700000027, matchRI: 0x2245, match64: 0x00000000, model64: 0x1e3430001e34c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2246, match64: 0x00000000, model64: 0x1e34c0001e356},
		modelTuple{type64: 0x2700000027, matchRI: 0x2247, match64: 0x00000000, model64: 0x1e3560001e35d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e35d0001e363, model64: 0x1e3630001e36e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e36e0001e374, model64: 0x1e3740001e37b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e37b0001e381, model64: 0x1e3810001e388},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e3880001e38e, model64: 0x1e38e0001e399},
		modelTuple{type64: 0x2700000027, matchRI: 0x2248, match64: 0x00000000, model64: 0x1e3990001e3a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2249, match64: 0x00000000, model64: 0x1e3a20001e3a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e3a90001e3b0, model64: 0x1e3b00001e3b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x224a, match64: 0x00000000, model64: 0x1e3b80001e3be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e3be0001e3c4, model64: 0x1e3c40001e3ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e3ce0001e3d4, model64: 0x1e3d40001e3de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e3de0001e3e4, model64: 0x1e3e40001e3f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e3f10001e3f7, model64: 0x1e3f70001e404},
		modelTuple{type64: 0x2700000027, matchRI: 0x224b, match64: 0x00000000, model64: 0x1e4040001e40f},
		modelTuple{type64: 0x2700000027, matchRI: 0x224c, match64: 0x00000000, model64: 0x1e40f0001e418},
		modelTuple{type64: 0x2700000027, matchRI: 0x224d, match64: 0x00000000, model64: 0x1e4180001e420},
		modelTuple{type64: 0x2700000027, matchRI: 0x224e, match64: 0x00000000, model64: 0x1e4200001e42b},
		modelTuple{type64: 0x2700000027, matchRI: 0x224f, match64: 0x00000000, model64: 0x1e42b0001e433},
		modelTuple{type64: 0x2700000027, matchRI: 0x2250, match64: 0x00000000, model64: 0x1e4330001e43d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2251, match64: 0x00000000, model64: 0x1e43d0001e449},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e4490001e44f, model64: 0x1e44f0001e459},
		modelTuple{type64: 0x2700000027, matchRI: 0x2252, match64: 0x00000000, model64: 0x1e4590001e463},
		modelTuple{type64: 0x2700000027, matchRI: 0x2253, match64: 0x00000000, model64: 0x1e4630001e472},
		modelTuple{type64: 0x2700000027, matchRI: 0x2254, match64: 0x00000000, model64: 0x1e4720001e47f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2255, match64: 0x00000000, model64: 0x1e47f0001e486},
		modelTuple{type64: 0x2700000027, matchRI: 0x2256, match64: 0x00000000, model64: 0x1e4860001e48e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2257, match64: 0x00000000, model64: 0x1e48e0001e495},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e4950001e49b, model64: 0x1e49b0001e4a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e4a30001e4a9, model64: 0x1e4a90001e4b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e4b40001e4ba, model64: 0x1e4ba0001e4c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2258, match64: 0x00000000, model64: 0x1e4c10001e4cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2259, match64: 0x00000000, model64: 0x1e4cb0001e4d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e4d20001e4d9, model64: 0x1e4d90001e4e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x225a, match64: 0x00000000, model64: 0x1e4e10001e4ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x225b, match64: 0x00000000, model64: 0x1e4ec0001e4f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x225c, match64: 0x00000000, model64: 0x1e4f80001e4ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x225d, match64: 0x00000000, model64: 0x1e4ff0001e507},
		modelTuple{type64: 0x2700000027, matchRI: 0x225e, match64: 0x00000000, model64: 0x1e5070001e50e},
		modelTuple{type64: 0x2700000027, matchRI: 0x225f, match64: 0x00000000, model64: 0x1e50e0001e516},
		modelTuple{type64: 0x2700000027, matchRI: 0x2260, match64: 0x00000000, model64: 0x1e5160001e521},
		modelTuple{type64: 0x2700000027, matchRI: 0x2261, match64: 0x00000000, model64: 0x1e5210001e527},
		modelTuple{type64: 0x2700000027, matchRI: 0x2262, match64: 0x00000000, model64: 0x1e5270001e531},
		modelTuple{type64: 0x2700000027, matchRI: 0x2263, match64: 0x00000000, model64: 0x1e5310001e537},
		modelTuple{type64: 0x2700000027, matchRI: 0x2264, match64: 0x00000000, model64: 0x1e5370001e541},
		modelTuple{type64: 0x2700000027, matchRI: 0x2265, match64: 0x00000000, model64: 0xe2050000e208},
		modelTuple{type64: 0x2700000027, matchRI: 0x2266, match64: 0x00000000, model64: 0x1e5410001e544},
		modelTuple{type64: 0x2700000027, matchRI: 0x2267, match64: 0x00000000, model64: 0x1e5440001e54a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2268, match64: 0x00000000, model64: 0x1e54a0001e54e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2269, match64: 0x00000000, model64: 0x1e54e0001e555},
		modelTuple{type64: 0x2700000027, matchRI: 0x226a, match64: 0x00000000, model64: 0x1e5550001e55f},
		modelTuple{type64: 0x2700000027, matchRI: 0x226b, match64: 0x00000000, model64: 0x1e55f0001e562},
		modelTuple{type64: 0x2700000027, matchRI: 0x226c, match64: 0x00000000, model64: 0x1e5620001e565},
		modelTuple{type64: 0x2700000027, matchRI: 0x226d, match64: 0x00000000, model64: 0x1e5650001e568},
		modelTuple{type64: 0x2700000027, matchRI: 0x226e, match64: 0x00000000, model64: 0x1e5680001e56d},
		modelTuple{type64: 0x2700000027, matchRI: 0x226f, match64: 0x00000000, model64: 0x1e56d0001e575},
		modelTuple{type64: 0x2700000027, matchRI: 0x2270, match64: 0x00000000, model64: 0x1e5750001e57b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2271, match64: 0x00000000, model64: 0x1e57b0001e580},
		modelTuple{type64: 0x2700000027, matchRI: 0x2272, match64: 0x00000000, model64: 0x1e5800001e589},
		modelTuple{type64: 0x2700000027, matchRI: 0x2273, match64: 0x00000000, model64: 0x1e5890001e58e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2274, match64: 0x00000000, model64: 0x1e5650001e568},
		modelTuple{type64: 0x2700000027, matchRI: 0x2275, match64: 0x00000000, model64: 0x1e58e0001e59e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2276, match64: 0x00000000, model64: 0x974600009749},
		modelTuple{type64: 0x2700000027, matchRI: 0x2277, match64: 0x00000000, model64: 0x1e59e0001e5a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5a30001e5a8, model64: 0x1e5a80001e5b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5b10001e5b6, model64: 0x1e5b60001e5bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5bb0001e5c0, model64: 0x1e5c00001e5c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5c30001e5c9, model64: 0x1e5c90001e5cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5cc0001e5d1, model64: 0x1e5d10001e5d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5d70001e5de, model64: 0x1e5de0001e5e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2278, match64: 0x00000000, model64: 0x1e5e30001e5e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2279, match64: 0x00000000, model64: 0x194d0000194f},
		modelTuple{type64: 0x2700000027, matchRI: 0x227a, match64: 0x00000000, model64: 0x1e5e60001e5ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x227b, match64: 0x00000000, model64: 0xe9d90000e9dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5ec0001e5f2, model64: 0x1e5f20001e5f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x227c, match64: 0x00000000, model64: 0x1e5f90001e5fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5fd0001e602, model64: 0x1e6020001e609},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6090001e60e, model64: 0x1e60e0001e614},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6140001e61a, model64: 0x1e61a0001e61e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e61e0001e623, model64: 0x1e6230001e62d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e62d0001e632, model64: 0x1e6320001e638},
		modelTuple{type64: 0x2700000027, matchRI: 0x227d, match64: 0x00000000, model64: 0x1e6380001e63c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e63c0001e641, model64: 0x1e6410001e648},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6480001e64d, model64: 0x1e64d0001e651},
		modelTuple{type64: 0x2700000027, matchRI: 0x227e, match64: 0x00000000, model64: 0x1e6510001e654},
		modelTuple{type64: 0x2700000027, matchRI: 0x227f, match64: 0x00000000, model64: 0x90790000907b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6540001e65a, model64: 0x1e65a0001e661},
		modelTuple{type64: 0x2700000027, matchRI: 0x2280, match64: 0x00000000, model64: 0x1e6610001e666},
		modelTuple{type64: 0x2700000027, matchRI: 0x2281, match64: 0x00000000, model64: 0x1e6660001e66c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e66c0001e672, model64: 0x1e6720001e676},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6760001e67c, model64: 0x1e67c0001e67f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e67f0001e685, model64: 0x1e6850001e689},
		modelTuple{type64: 0x2700000027, matchRI: 0x2282, match64: 0x00000000, model64: 0x1e6890001e68b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e68b0001e691, model64: 0xa1500000a153},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6910001e697, model64: 0x1e6970001e69e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2283, match64: 0x00000000, model64: 0x1e69e0001e6a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2284, match64: 0x00000000, model64: 0x1e6a10001e6a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2285, match64: 0x00000000, model64: 0x1e6a40001e6aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2286, match64: 0x00000000, model64: 0x1e6aa0001e6b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2287, match64: 0x00000000, model64: 0x1e6b30001e6b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2288, match64: 0x00000000, model64: 0x17d4000017d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2289, match64: 0x00000000, model64: 0x1e6b60001e6b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x228a, match64: 0x00000000, model64: 0x1e6b90001e6c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x228b, match64: 0x00000000, model64: 0x1e6c00001e6c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x228c, match64: 0x00000000, model64: 0x1e6c40001e6c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x228d, match64: 0x00000000, model64: 0x1e6c70001e6ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x228e, match64: 0x00000000, model64: 0x1e6ce0001e6d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x228f, match64: 0x00000000, model64: 0x1e6d50001e6dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2290, match64: 0x00000000, model64: 0x1e6dc0001e6df},
		modelTuple{type64: 0x2700000027, matchRI: 0x2291, match64: 0x00000000, model64: 0x1e6df0001e6e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2292, match64: 0x00000000, model64: 0x1e6e20001e6e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2293, match64: 0x00000000, model64: 0xe57f0000e586},
		modelTuple{type64: 0x2700000027, matchRI: 0x2294, match64: 0x00000000, model64: 0x1e6e80001e6ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x2295, match64: 0x00000000, model64: 0x1e6ea0001e6f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2296, match64: 0x00000000, model64: 0x1e6f10001e6f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2297, match64: 0x00000000, model64: 0x1e6f80001e6fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2298, match64: 0x00000000, model64: 0xee220000ee24},
		modelTuple{type64: 0x2700000027, matchRI: 0x2299, match64: 0x00000000, model64: 0x1e6fb0001e6ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x229a, match64: 0x00000000, model64: 0x1e6ff0001e706},
		modelTuple{type64: 0x2700000027, matchRI: 0x229b, match64: 0x00000000, model64: 0x1e7060001e708},
		modelTuple{type64: 0x2700000027, matchRI: 0x229c, match64: 0x00000000, model64: 0x1e7080001e710},
		modelTuple{type64: 0x2700000027, matchRI: 0x229d, match64: 0x00000000, model64: 0x1e7100001e716},
		modelTuple{type64: 0x2700000027, matchRI: 0x229e, match64: 0x00000000, model64: 0x1e7160001e71c},
		modelTuple{type64: 0x2700000027, matchRI: 0x229f, match64: 0x00000000, model64: 0x1e71c0001e724},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a0, match64: 0x00000000, model64: 0x1e7240001e727},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7270001e72d, model64: 0x1e72d0001e730},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a1, match64: 0x00000000, model64: 0x1e7300001e736},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a2, match64: 0x00000000, model64: 0x1e7360001e741},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a3, match64: 0x00000000, model64: 0x1e7410001e744},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a4, match64: 0x00000000, model64: 0x1e7440001e74c},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a5, match64: 0x00000000, model64: 0x1e74c0001e750},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a6, match64: 0x00000000, model64: 0x1e7500001e756},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a7, match64: 0x00000000, model64: 0x1e7560001e759},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a8, match64: 0x00000000, model64: 0x1e7590001e75d},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a9, match64: 0x00000000, model64: 0x1e75d0001e760},
		modelTuple{type64: 0x2700000027, matchRI: 0x22aa, match64: 0x00000000, model64: 0x1e75d0001e760},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ab, match64: 0x00000000, model64: 0x1e7600001e763},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ac, match64: 0x00000000, model64: 0x1e7630001e76a},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ad, match64: 0x00000000, model64: 0x1e76a0001e76d},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ae, match64: 0x00000000, model64: 0x1e76d0001e774},
		modelTuple{type64: 0x2700000027, matchRI: 0x22af, match64: 0x00000000, model64: 0x1e7740001e777},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b0, match64: 0x00000000, model64: 0x1e7770001e77b},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b1, match64: 0x00000000, model64: 0x16e1f00016e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b2, match64: 0x00000000, model64: 0x1e77b0001e783},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b3, match64: 0x00000000, model64: 0x16e2c00016e33},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b4, match64: 0x00000000, model64: 0x1e7830001e78f},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b5, match64: 0x00000000, model64: 0x1e78f0001e792},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b6, match64: 0x00000000, model64: 0x1e7920001e796},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b7, match64: 0x00000000, model64: 0x1e7960001e79d},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b8, match64: 0x00000000, model64: 0x1e79d0001e7a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b9, match64: 0x00000000, model64: 0x1e7a90001e7b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ba, match64: 0x00000000, model64: 0x1e7b00001e7b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x22bb, match64: 0x00000000, model64: 0x1e7b80001e7bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x22bc, match64: 0x00000000, model64: 0x1e7bb0001e7c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x22bd, match64: 0x00000000, model64: 0x1e7c10001e7c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7c40001e7ca, model64: 0x1e7ca0001e7d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7d10001e7d7, model64: 0x1e7d70001e7df},
		modelTuple{type64: 0x2700000027, matchRI: 0x22be, match64: 0x00000000, model64: 0x1e7df0001e7e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x22bf, match64: 0x00000000, model64: 0x1e7e60001e7f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c0, match64: 0x00000000, model64: 0x957800009580},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c1, match64: 0x00000000, model64: 0x1e7f10001e7f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c2, match64: 0x00000000, model64: 0x1e7f90001e7fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c3, match64: 0x00000000, model64: 0x1e7fc0001e7ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c4, match64: 0x00000000, model64: 0x1e7ff0001e802},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c5, match64: 0x00000000, model64: 0x412600004129},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8020001e808, model64: 0x1e8080001e80e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e80e0001e813, model64: 0x1acde0001ace0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8130001e818, model64: 0x1e8180001e81b},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c6, match64: 0x00000000, model64: 0x1e81b0001e81f},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c7, match64: 0x00000000, model64: 0x1e81f0001e823},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c8, match64: 0x00000000, model64: 0x1e8230001e827},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c9, match64: 0x00000000, model64: 0x1e8270001e82a},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ca, match64: 0x00000000, model64: 0x1e82a0001e82d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e82d0001e833, model64: 0x1e8330001e83a},
		modelTuple{type64: 0x2700000027, matchRI: 0x22cb, match64: 0x00000000, model64: 0x1e83a0001e83e},
		modelTuple{type64: 0x2700000027, matchRI: 0x22cc, match64: 0x00000000, model64: 0x1e83e0001e842},
		modelTuple{type64: 0x2700000027, matchRI: 0x22cd, match64: 0x00000000, model64: 0x1e8420001e845},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8450001e84a, model64: 0x1e84a0001e84e},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ce, match64: 0x00000000, model64: 0x1e84e0001e852},
		modelTuple{type64: 0x2700000027, matchRI: 0x22cf, match64: 0x00000000, model64: 0x1e8520001e856},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d0, match64: 0x00000000, model64: 0x1e8560001e859},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d1, match64: 0x00000000, model64: 0x1e8590001e85c},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d2, match64: 0x00000000, model64: 0x1e85c0001e85f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e85f0001e864, model64: 0x1e8640001e867},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8670001e86c, model64: 0x1e86c0001e872},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d3, match64: 0x00000000, model64: 0x1e8720001e876},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d4, match64: 0x00000000, model64: 0xe77f0000e782},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d5, match64: 0x00000000, model64: 0x1e8760001e880},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d6, match64: 0x00000000, model64: 0x1e8800001e884},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d7, match64: 0x00000000, model64: 0x1e8840001e888},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d8, match64: 0x00000000, model64: 0x1e8880001e88c},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d9, match64: 0x00000000, model64: 0x1e88c0001e897},
		modelTuple{type64: 0x2700000027, matchRI: 0x22da, match64: 0x00000000, model64: 0x1e8970001e89b},
		modelTuple{type64: 0x2700000027, matchRI: 0x22db, match64: 0x00000000, model64: 0x1e89b0001e89f},
		modelTuple{type64: 0x2700000027, matchRI: 0x22dc, match64: 0x00000000, model64: 0x1e8760001e880},
		modelTuple{type64: 0x2700000027, matchRI: 0x22dd, match64: 0x00000000, model64: 0x1e89f0001e8a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8a50001e8ab, model64: 0x1e8ab0001e8b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8b20001e8b7, model64: 0x1e8b70001e8ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8ba0001e8c0, model64: 0x1e8c00001e8c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8c30001e8c8, model64: 0x1e8c80001e8ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x22de, match64: 0x00000000, model64: 0x1e8ce0001e8d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x22df, match64: 0x00000000, model64: 0x1e8d20001e8d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e0, match64: 0x00000000, model64: 0x1e8d60001e8da},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e1, match64: 0x00000000, model64: 0x1e8da0001e8dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e2, match64: 0x00000000, model64: 0x1e8dd0001e8e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e3, match64: 0x00000000, model64: 0x1e8e10001e8e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e4, match64: 0x00000000, model64: 0x1e8e50001e8e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e5, match64: 0x00000000, model64: 0x1e6e20001e6e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e6, match64: 0x00000000, model64: 0x1e8e90001e8eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8eb0001e8f0, model64: 0x1e8f00001e8f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e7, match64: 0x00000000, model64: 0x1e8f30001e8fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e8, match64: 0x00000000, model64: 0x1e8fe0001e901},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e9, match64: 0x00000000, model64: 0x1e9010001e907},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ea, match64: 0x00000000, model64: 0x1e9070001e911},
		modelTuple{type64: 0x2700000027, matchRI: 0x22eb, match64: 0x00000000, model64: 0x1e9110001e915},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ec, match64: 0x00000000, model64: 0x1e9150001e918},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ed, match64: 0x00000000, model64: 0x1e9180001e91c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e91c0001e922, model64: 0x1e9220001e925},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ee, match64: 0x00000000, model64: 0x16e9d00016ea0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9250001e92a, model64: 0x1e92a0001e931},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9310001e937, model64: 0x1e9370001e93b},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ef, match64: 0x00000000, model64: 0x1e93b0001e93e},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f0, match64: 0x00000000, model64: 0x1e93e0001e942},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f1, match64: 0x00000000, model64: 0x1e9420001e946},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f2, match64: 0x00000000, model64: 0x1e9460001e951},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f3, match64: 0x00000000, model64: 0x1e9510001e954},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f4, match64: 0x00000000, model64: 0x1e9540001e957},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f5, match64: 0x00000000, model64: 0x1e9570001e95a},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f6, match64: 0x00000000, model64: 0x12f9900012f9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f7, match64: 0x00000000, model64: 0x1e95a0001e95e},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f8, match64: 0x00000000, model64: 0x1e95e0001e961},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f9, match64: 0x00000000, model64: 0x1e9610001e96b},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fa, match64: 0x00000000, model64: 0x1e96b0001e96f},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fb, match64: 0x00000000, model64: 0x1e9180001e91c},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fc, match64: 0x00000000, model64: 0x1e96f0001e973},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fd, match64: 0x00000000, model64: 0x1e9730001e976},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fe, match64: 0x00000000, model64: 0x1e9760001e97a},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ff, match64: 0x00000000, model64: 0x1e97a0001e97d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2300, match64: 0x00000000, model64: 0x1e97d0001e981},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9810001e987, model64: 0x1e9870001e98e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2301, match64: 0x00000000, model64: 0x1e98e0001e992},
		modelTuple{type64: 0x2700000027, matchRI: 0x2302, match64: 0x00000000, model64: 0x1e9920001e996},
		modelTuple{type64: 0x2700000027, matchRI: 0x2303, match64: 0x00000000, model64: 0x1e9960001e9a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9a10001e9a8, model64: 0x1e9a80001e9af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9af0001e9b4, model64: 0x1e9b40001e9ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9ba0001e9bf, model64: 0x1e9bf0001e9c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9c20001e9c8, model64: 0x1e9c80001e9cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2304, match64: 0x00000000, model64: 0x1e9cc0001e9cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2305, match64: 0x00000000, model64: 0x1e9cf0001e9d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2306, match64: 0x00000000, model64: 0x1e9d20001e9d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2307, match64: 0x00000000, model64: 0x1e9d60001e9da},
		modelTuple{type64: 0x2700000027, matchRI: 0x2308, match64: 0x00000000, model64: 0x1e9da0001e9dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2309, match64: 0x00000000, model64: 0x1e9dd0001e9e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x230a, match64: 0x00000000, model64: 0x1e9e10001e9e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x230b, match64: 0x00000000, model64: 0x1e9e40001e9ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x230c, match64: 0x00000000, model64: 0x1e9ee0001e9f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x230d, match64: 0x00000000, model64: 0x1e9f20001e9f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9f80001e9fe, model64: 0x1e9fe0001ea02},
		modelTuple{type64: 0x2700000027, matchRI: 0x230e, match64: 0x00000000, model64: 0x1ea020001ea05},
		modelTuple{type64: 0x2700000027, matchRI: 0x230f, match64: 0x00000000, model64: 0x1ea050001ea08},
		modelTuple{type64: 0x2700000027, matchRI: 0x2310, match64: 0x00000000, model64: 0x1ea080001ea0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2311, match64: 0x00000000, model64: 0x1ea0c0001ea10},
		modelTuple{type64: 0x2700000027, matchRI: 0x2312, match64: 0x00000000, model64: 0x1ea100001ea13},
		modelTuple{type64: 0x2700000027, matchRI: 0x2313, match64: 0x00000000, model64: 0x1ea130001ea1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2314, match64: 0x00000000, model64: 0x1ea1a0001ea1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2315, match64: 0x00000000, model64: 0x1ea1d0001ea20},
		modelTuple{type64: 0x2700000027, matchRI: 0x2316, match64: 0x00000000, model64: 0x1ea200001ea23},
		modelTuple{type64: 0x2700000027, matchRI: 0x2317, match64: 0x00000000, model64: 0x1ea230001ea27},
		modelTuple{type64: 0x2700000027, matchRI: 0x2318, match64: 0x00000000, model64: 0x1ea270001ea2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2319, match64: 0x00000000, model64: 0x1ea2a0001ea2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x231a, match64: 0x00000000, model64: 0x1ea2e0001ea39},
		modelTuple{type64: 0x2700000027, matchRI: 0x231b, match64: 0x00000000, model64: 0x1ea230001ea27},
		modelTuple{type64: 0x2700000027, matchRI: 0x231c, match64: 0x00000000, model64: 0x1ea390001ea3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x231d, match64: 0x00000000, model64: 0x1ea3c0001ea40},
		modelTuple{type64: 0x2700000027, matchRI: 0x231e, match64: 0x00000000, model64: 0x1ea400001ea43},
		modelTuple{type64: 0x2700000027, matchRI: 0x231f, match64: 0x00000000, model64: 0x1ea430001ea46},
		modelTuple{type64: 0x2700000027, matchRI: 0x2320, match64: 0x00000000, model64: 0x1ea460001ea48},
		modelTuple{type64: 0x2700000027, matchRI: 0x2321, match64: 0x00000000, model64: 0x1ea480001ea4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2322, match64: 0x00000000, model64: 0x1ea4e0001ea51},
		modelTuple{type64: 0x2700000027, matchRI: 0x2323, match64: 0x00000000, model64: 0x1ea510001ea54},
		modelTuple{type64: 0x2700000027, matchRI: 0x2324, match64: 0x00000000, model64: 0xee000000ee02},
		modelTuple{type64: 0x2700000027, matchRI: 0x2325, match64: 0x00000000, model64: 0x1ea540001ea57},
		modelTuple{type64: 0x2700000027, matchRI: 0x2326, match64: 0x00000000, model64: 0xf8430000f845},
		modelTuple{type64: 0x2700000027, matchRI: 0x2327, match64: 0x00000000, model64: 0x1ea570001ea5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2328, match64: 0x00000000, model64: 0x1ea5a0001ea64},
		modelTuple{type64: 0x2700000027, matchRI: 0x2329, match64: 0x00000000, model64: 0xee0c0000ee0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x232a, match64: 0x00000000, model64: 0x1ea640001ea6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x232b, match64: 0x00000000, model64: 0x1ea6a0001ea6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x232c, match64: 0x00000000, model64: 0x1ea6e0001ea74},
		modelTuple{type64: 0x2700000027, matchRI: 0x232d, match64: 0x00000000, model64: 0x1ea740001ea7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x232e, match64: 0x00000000, model64: 0x1ea7c0001ea7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x232f, match64: 0x00000000, model64: 0x4ef300004ef6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2330, match64: 0x00000000, model64: 0x1e7300001e736},
		modelTuple{type64: 0x2700000027, matchRI: 0x2331, match64: 0x00000000, model64: 0x1ea7f0001ea83},
		modelTuple{type64: 0x2700000027, matchRI: 0x2332, match64: 0x00000000, model64: 0x3fb800003fbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2333, match64: 0x00000000, model64: 0x1ea830001ea8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2334, match64: 0x00000000, model64: 0x1ea8d0001ea96},
		modelTuple{type64: 0x2700000027, matchRI: 0x2335, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2336, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ea9b0001eaa1, model64: 0x1ea9b0001eaa1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eaa10001eaa8, model64: 0x1eaa10001eaa8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eaa80001eaaf, model64: 0x1eaa80001eaaf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2338, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x233a, match64: 0x00000000, model64: 0x1eab40001eabd},
		modelTuple{type64: 0x2700000027, matchRI: 0x233b, match64: 0x00000000, model64: 0x1eabd0001eac9},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1ead00001eadf, model64: 0x1ead00001eadf},
		modelTuple{type64: 0x2700000027, matchRI: 0x233d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eae70001eaee, model64: 0x1eaee0001eaf8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eaf80001eafe, model64: 0x1eafe0001eb06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb060001eb0b, model64: 0x1eb0b0001eb16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb160001eb1b, model64: 0x1eb1b0001eb28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb280001eb2f, model64: 0x1eb2f0001eb3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb3c0001eb43, model64: 0x1eb430001eb4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb4f0001eb56, model64: 0x1eb560001eb67},
		modelTuple{type64: 0x2700000027, matchRI: 0x233f, match64: 0x00000000, model64: 0x1eb670001eb74},
		modelTuple{type64: 0x2700000027, matchRI: 0x2340, match64: 0x00000000, model64: 0x1eb740001eb7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2341, match64: 0x00000000, model64: 0x1eb7c0001eb84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb840001eb8b, model64: 0x1eb8b0001eb93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb930001eb9a, model64: 0x1eb9a0001eba7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eba70001ebad, model64: 0x1ebad0001ebb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ebb50001ebbc, model64: 0x1eb8b0001eb93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ebbc0001ebc3, model64: 0x1ebc30001ebcb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ebcb0001ebd2, model64: 0x1ebd20001ebdb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ebdb0001ebe2, model64: 0x1ebe20001ebef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ebef0001ebfc, model64: 0x1ebfc0001ec09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec090001ec10, model64: 0x1ec100001ec1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec1d0001ec24, model64: 0x1ec240001ec2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec2c0001ec33, model64: 0x1eafe0001eb06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec330001ec3a, model64: 0x1ec3a0001ec43},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec430001ec4a, model64: 0x1ec4a0001ec5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2342, match64: 0x00000000, model64: 0x1eaee0001eaf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2343, match64: 0x00000000, model64: 0xc79f0000c7a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2344, match64: 0x00000000, model64: 0x1ec5a0001ec66},
		modelTuple{type64: 0x2700000027, matchRI: 0x2345, match64: 0x00000000, model64: 0x1ec660001ec6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2346, match64: 0x00000000, model64: 0x1ec6e0001ec7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2347, match64: 0x00000000, model64: 0x1ec7b0001ec88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec880001ec99, model64: 0x1ec990001eca3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eca30001eca9, model64: 0x1eca90001ecb6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ecb60001ecbc, model64: 0x1ecbc0001ecc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ecc90001ecd0, model64: 0x1ecd00001ecdd},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ecdd0001ece4, model64: 0x1ece40001ecef},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ecef0001ecf6, model64: 0x1ecf60001ed01},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ed010001ed09, model64: 0x1ed090001ed13},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ed130001ed1b, model64: 0x1ed1b0001ed27},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ed270001ed2f, model64: 0x1ed2f0001ed3a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2348, match64: 0x00000000, model64: 0x1ed3a0001ed46},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2349, match64: 0x00000000, model64: 0x1ed460001ed52},
		modelTuple{type64: 0x20d00000213, matchRI: 0x234a, match64: 0x00000000, model64: 0x1ed520001ed5d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x234b, match64: 0x00000000, model64: 0x1befe0001bf09},
		modelTuple{type64: 0x20d00000213, matchRI: 0x234c, match64: 0x00000000, model64: 0x1ed5d0001ed69},
		modelTuple{type64: 0x20d00000213, matchRI: 0x234d, match64: 0x00000000, model64: 0x1ed690001ed77},
		modelTuple{type64: 0x20d00000213, matchRI: 0x234e, match64: 0x00000000, model64: 0x1ed770001ed86},
		modelTuple{type64: 0x20d00000213, matchRI: 0x234f, match64: 0x00000000, model64: 0x1ed860001ed95},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2350, match64: 0x00000000, model64: 0x1ed950001eda5},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2351, match64: 0x00000000, model64: 0xd6160000d618},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1eda50001edab, model64: 0x1edab0001edb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2352, match64: 0x00000000, model64: 0x1edb20001edb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2353, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2354, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2357, match64: 0x00000000, model64: 0x1edbe0001edc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2358, match64: 0x00000000, model64: 0x1edc40001edcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2359, match64: 0x00000000, model64: 0x1edcb0001edd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x235a, match64: 0x00000000, model64: 0x1edd40001edda},
		modelTuple{type64: 0x2700000027, matchRI: 0x235b, match64: 0x00000000, model64: 0x1edda0001ede0},
		modelTuple{type64: 0x2700000027, matchRI: 0x235c, match64: 0x00000000, model64: 0x1ede00001ede7},
		modelTuple{type64: 0x2700000027, matchRI: 0x235d, match64: 0x00000000, model64: 0x1ede70001edee},
		modelTuple{type64: 0x2700000027, matchRI: 0x235e, match64: 0x00000000, model64: 0x1edee0001edf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x235f, match64: 0x00000000, model64: 0x1edf50001edfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2360, match64: 0x00000000, model64: 0x1edfb0001ee03},
		modelTuple{type64: 0x2700000027, matchRI: 0x2361, match64: 0x00000000, model64: 0x1ee030001ee09},
		modelTuple{type64: 0x2700000027, matchRI: 0x2362, match64: 0x00000000, model64: 0x1ee090001ee11},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ee110001ee1a, model64: 0x1ee1a0001ee23},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2363, match64: 0x00000000, model64: 0x1172200011729},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ee230001ee30, model64: 0x1ee300001ee3f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2364, match64: 0x00000000, model64: 0x1ee3f0001ee48},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2365, match64: 0x00000000, model64: 0x1ee480001ee51},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2366, match64: 0x00000000, model64: 0x1ee510001ee59},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2367, match64: 0x00000000, model64: 0x1ee590001ee6a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2368, match64: 0x00000000, model64: 0x1ee6a0001ee73},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2369, match64: 0x00000000, model64: 0x1ee730001ee7a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x236a, match64: 0x00000000, model64: 0x777c00007783},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ee7a0001ee81, model64: 0x1ee810001ee88},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ee880001ee91, model64: 0x1ee910001ee9a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x236b, match64: 0x00000000, model64: 0x1ee9a0001eea1},
		modelTuple{type64: 0xa0d50000a0ea, matchRI: 0x236c, match64: 0x00000000, model64: 0x1eea10001eeac},
		modelTuple{type64: 0x2700000027, matchRI: 0x236e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x236f, match64: 0x00000000, model64: 0x1eeb20001eeb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2370, match64: 0x00000000, model64: 0x1eeb90001eebf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2371, match64: 0x00000000, model64: 0x1eebf0001eecc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2372, match64: 0x00000000, model64: 0x1eecc0001eed4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2373, match64: 0x00000000, model64: 0x1eed40001eedc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2374, match64: 0x00000000, model64: 0x1eedc0001eee3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eee90001eef1, model64: 0x1eee90001eef1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2376, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eef70001ef04, model64: 0x1ef040001ef12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ef120001ef17, model64: 0x1ef170001ef1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ef1d0001ef27, model64: 0x1ef270001ef31},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1e7300001e736},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x237c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x237d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x237e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2381, match64: 0x00000000, model64: 0x1ef4a0001ef50},
		modelTuple{type64: 0x2700000027, matchRI: 0x2382, match64: 0x00000000, model64: 0x1013400010139},
		modelTuple{type64: 0x2700000027, matchRI: 0x2383, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2385, match64: 0x00000000, model64: 0x1ef560001ef61},
		modelTuple{type64: 0x2700000027, matchRI: 0x2386, match64: 0x00000000, model64: 0x1ef610001ef67},
		modelTuple{type64: 0x2700000027, matchRI: 0x2387, match64: 0x00000000, model64: 0x1ef670001ef74},
		modelTuple{type64: 0x2700000027, matchRI: 0x2388, match64: 0x00000000, model64: 0x1ef740001ef79},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ef790001ef81, model64: 0x1ef790001ef81},
		modelTuple{type64: 0x2700000027, matchRI: 0x2389, match64: 0x00000000, model64: 0x14eac00014eaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x238a, match64: 0x00000000, model64: 0x1ef810001ef88},
		modelTuple{type64: 0x2700000027, matchRI: 0x238b, match64: 0x00000000, model64: 0x1ef880001ef91},
		modelTuple{type64: 0x2700000027, matchRI: 0x238c, match64: 0x00000000, model64: 0x1ef910001ef97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ef970001ef9f, model64: 0x1ef970001ef9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ef9f0001efa3, model64: 0x1ef9f0001efa3},
		modelTuple{type64: 0x2700000027, matchRI: 0x238e, match64: 0x00000000, model64: 0x1efa70001efaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x238f, match64: 0x00000000, model64: 0x1efaf0001efb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1efb90001efc6, model64: 0x1efc60001efd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1efd30001efdc, model64: 0x1efdc0001efe5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1efe50001efef, model64: 0x1efef0001eff9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eff90001f003, model64: 0x1eff90001f003},
		modelTuple{type64: 0x2700000027, matchRI: 0x2390, match64: 0x00000000, model64: 0x1f0030001f010},
		modelTuple{type64: 0x2700000027, matchRI: 0x2391, match64: 0x00000000, model64: 0xc5580000c55c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2392, match64: 0x00000000, model64: 0xa0ea0000a0ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x2393, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2396, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2397, match64: 0x00000000, model64: 0x1f0190001f022},
		modelTuple{type64: 0x2700000027, matchRI: 0x2398, match64: 0x00000000, model64: 0x1f0220001f02b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x239a, match64: 0x00000000, model64: 0x1f0320001f03b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f0490001f058},
		modelTuple{type64: 0x20d00000213, matchRI: 0x23a0, match64: 0x00000000, model64: 0x1f05e0001f06d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f06d0001f07e, model64: 0x1f07e0001f08f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f08f0001f09c, model64: 0x1f09c0001f0a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a1, match64: 0x00000000, model64: 0x1f0a90001f0b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a2, match64: 0x00000000, model64: 0x1f0b50001f0c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a3, match64: 0x00000000, model64: 0x1f0c20001f0d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a4, match64: 0x00000000, model64: 0x1f0d00001f0d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a5, match64: 0x00000000, model64: 0x1f0d80001f0e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a6, match64: 0x00000000, model64: 0x103d2000103da},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f0ec0001f0f5},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x23aa, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f1060001f10e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f1230001f12b, model64: 0x1f12b0001f133},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f1490001f155, model64: 0x1f1550001f164},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x23b3, match64: 0x00000000, model64: 0x1f1730001f17a},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x23b4, match64: 0x00000000, model64: 0x1f17a0001f181},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x23b5, match64: 0x00000000, model64: 0x1f1810001f186},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x23b6, match64: 0x00000000, model64: 0x1f1860001f190},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b7, match64: 0x00000000, model64: 0x1f1900001f197},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b8, match64: 0x00000000, model64: 0x1f1970001f1a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ba, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x23bb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f1ae0001f1b5, model64: 0x1f1b50001f1c1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c0, match64: 0x00000000, model64: 0x1f1d00001f1d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c1, match64: 0x00000000, model64: 0x350100003503},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c2, match64: 0x00000000, model64: 0x1f1d20001f1d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c3, match64: 0x00000000, model64: 0x1f1d60001f1df},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c4, match64: 0x00000000, model64: 0x1f1df0001f1e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c5, match64: 0x00000000, model64: 0x1f1e80001f1f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c6, match64: 0x00000000, model64: 0x1f1f10001f1fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c7, match64: 0x00000000, model64: 0x1f1fc0001f202},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c8, match64: 0x00000000, model64: 0x1f2020001f209},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c9, match64: 0x00000000, model64: 0x1f2090001f215},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ca, match64: 0x00000000, model64: 0x1f2150001f221},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cb, match64: 0x00000000, model64: 0x1f2210001f22a},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cc, match64: 0x00000000, model64: 0x1f22a0001f234},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cd, match64: 0x00000000, model64: 0x1f2340001f238},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ce, match64: 0x00000000, model64: 0x1f2380001f23d},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cf, match64: 0x00000000, model64: 0x1f23d0001f245},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d0, match64: 0x00000000, model64: 0x1f2450001f251},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d1, match64: 0x00000000, model64: 0x1f2510001f259},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d2, match64: 0x00000000, model64: 0x1f2590001f25e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f25e0001f26a, model64: 0x1f26a0001f276},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d3, match64: 0x00000000, model64: 0x1f2760001f280},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d4, match64: 0x00000000, model64: 0x4f4600004f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d5, match64: 0x00000000, model64: 0x1f2800001f288},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d6, match64: 0x00000000, model64: 0x1f2880001f290},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d7, match64: 0x00000000, model64: 0x1f2900001f298},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d8, match64: 0x00000000, model64: 0x1f2980001f2a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d9, match64: 0x00000000, model64: 0x1f2a10001f2a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x23da, match64: 0x00000000, model64: 0x1f2a70001f2ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x23db, match64: 0x00000000, model64: 0x1f2ab0001f2b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x23dc, match64: 0x00000000, model64: 0x1f2b00001f2b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x23dd, match64: 0x00000000, model64: 0x1f2b50001f2ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x23de, match64: 0x00000000, model64: 0x1f2ba0001f2bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2bf0001f2c8, model64: 0x1f2c80001f2d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2d10001f2d7, model64: 0x1f2d70001f2de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2de0001f2e8, model64: 0x1f2e80001f2ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x23df, match64: 0x00000000, model64: 0x1f2ef0001f2f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e0, match64: 0x00000000, model64: 0x1f2f60001f2fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e1, match64: 0x00000000, model64: 0x1f2fb0001f302},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e2, match64: 0x00000000, model64: 0x1f3020001f307},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e3, match64: 0x00000000, model64: 0x1f3070001f30a},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e4, match64: 0x00000000, model64: 0x1f30a0001f310},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e5, match64: 0x00000000, model64: 0x1f3100001f314},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3140001f31a, model64: 0x1f31a0001f321},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e6, match64: 0x00000000, model64: 0x1e2490001e24d},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e7, match64: 0x00000000, model64: 0x1bb010001bb07},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e8, match64: 0x00000000, model64: 0x1f3210001f327},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e9, match64: 0x00000000, model64: 0x1f3020001f307},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ea, match64: 0x00000000, model64: 0x1f3270001f332},
		modelTuple{type64: 0x2700000027, matchRI: 0x23eb, match64: 0x00000000, model64: 0x1f3320001f33e},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ec, match64: 0x00000000, model64: 0x1f33e0001f346},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ed, match64: 0x00000000, model64: 0x1f3460001f34b},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ee, match64: 0x00000000, model64: 0x1f34b0001f352},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ef, match64: 0x00000000, model64: 0x1f3520001f357},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f0, match64: 0x00000000, model64: 0x1f3570001f35f},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f1, match64: 0x00000000, model64: 0x1f35f0001f365},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f2, match64: 0x00000000, model64: 0x1f3650001f371},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f3, match64: 0x00000000, model64: 0x1f3710001f378},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3780001f37e, model64: 0x1f37e0001f38a},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f4, match64: 0x00000000, model64: 0x1f38a0001f396},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f5, match64: 0x00000000, model64: 0x1f3960001f39d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f39d0001f3a6, model64: 0x1f3a60001f3b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3b20001f3bc, model64: 0x1f3bc0001f3c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3c30001f3cd, model64: 0x1f3cd0001f3d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f6, match64: 0x00000000, model64: 0x1f3d40001f3e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f7, match64: 0x00000000, model64: 0x1bbe30001bbe8},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f8, match64: 0x00000000, model64: 0x1f3e00001f3e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f9, match64: 0x00000000, model64: 0x1f3e70001f3f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fa, match64: 0x00000000, model64: 0x1f3f30001f3fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fb, match64: 0x00000000, model64: 0x1f3fa0001f3ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fc, match64: 0x00000000, model64: 0x1f3ff0001f402},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fd, match64: 0x00000000, model64: 0x1f4020001f407},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4070001f40d, model64: 0x1f40d0001f414},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fe, match64: 0x00000000, model64: 0x1f4140001f41c},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ff, match64: 0x00000000, model64: 0x1f41c0001f41f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2400, match64: 0x00000000, model64: 0x1f41f0001f42a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2401, match64: 0x00000000, model64: 0x1f42a0001f432},
		modelTuple{type64: 0x2700000027, matchRI: 0x2402, match64: 0x00000000, model64: 0x1f4320001f439},
		modelTuple{type64: 0x2700000027, matchRI: 0x2403, match64: 0x00000000, model64: 0x1f4390001f43d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2404, match64: 0x00000000, model64: 0x1f43d0001f444},
		modelTuple{type64: 0x2700000027, matchRI: 0x2405, match64: 0x00000000, model64: 0x1f4440001f450},
		modelTuple{type64: 0x2700000027, matchRI: 0x2406, match64: 0x00000000, model64: 0x1f4500001f457},
		modelTuple{type64: 0x2700000027, matchRI: 0x2407, match64: 0x00000000, model64: 0x1f4570001f462},
		modelTuple{type64: 0x2700000027, matchRI: 0x2408, match64: 0x00000000, model64: 0x1f4620001f46e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2409, match64: 0x00000000, model64: 0x1f46e0001f474},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4740001f47b, model64: 0x1f47b0001f485},
		modelTuple{type64: 0x2700000027, matchRI: 0x240a, match64: 0x00000000, model64: 0x1f4850001f48e},
		modelTuple{type64: 0x2700000027, matchRI: 0x240b, match64: 0x00000000, model64: 0x1f48e0001f499},
		modelTuple{type64: 0x2700000027, matchRI: 0x240c, match64: 0x00000000, model64: 0x1f4990001f4a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x240d, match64: 0x00000000, model64: 0x1f4a00001f4aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4aa0001f4af, model64: 0x1f4af0001f4b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4b80001f4c1, model64: 0x1f4c10001f4c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4c50001f4cb, model64: 0x47dc000047e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4cb0001f4d1, model64: 0x1f4d10001f4db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4db0001f4e1, model64: 0x80b8000080c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x240e, match64: 0x00000000, model64: 0x1f4e10001f4e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x240f, match64: 0x00000000, model64: 0x1f4e80001f4f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4f30001f4f9, model64: 0x1f4f90001f4ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4ff0001f509, model64: 0x1f5090001f514},
		modelTuple{type64: 0x2700000027, matchRI: 0x2410, match64: 0x00000000, model64: 0x12f9900012f9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f5140001f51e, model64: 0x12f9900012f9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f51e0001f524, model64: 0x1e95e0001e961},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f5240001f52a, model64: 0x1e9730001e976},
		modelTuple{type64: 0x2700000027, matchRI: 0x2411, match64: 0x00000000, model64: 0x1f52a0001f52d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2412, match64: 0x00000000, model64: 0x1f52d0001f530},
		modelTuple{type64: 0x2700000027, matchRI: 0x2413, match64: 0x00000000, model64: 0x1f5300001f538},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f5380001f53e, model64: 0x1f53e0001f541},
		modelTuple{type64: 0x2700000027, matchRI: 0x2414, match64: 0x00000000, model64: 0x1f5410001f544},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f5440001f54a, model64: 0x1ea050001ea08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f54a0001f550, model64: 0x1f5500001f553},
		modelTuple{type64: 0x2700000027, matchRI: 0x2415, match64: 0x00000000, model64: 0x47e8000047ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2416, match64: 0x00000000, model64: 0x1f5530001f55d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2417, match64: 0x00000000, model64: 0x1f55d0001f563},
		modelTuple{type64: 0x2700000027, matchRI: 0x2418, match64: 0x00000000, model64: 0x1f5630001f56e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f56e0001f578, model64: 0x1f1d60001f1df},
		modelTuple{type64: 0x2700000027, matchRI: 0x2419, match64: 0x00000000, model64: 0x1f5780001f57c},
		modelTuple{type64: 0x2700000027, matchRI: 0x241a, match64: 0x00000000, model64: 0x1f57c0001f582},
		modelTuple{type64: 0x2700000027, matchRI: 0x241b, match64: 0x00000000, model64: 0x1f5820001f588},
		modelTuple{type64: 0x2700000027, matchRI: 0x241c, match64: 0x00000000, model64: 0x1f5880001f58e},
		modelTuple{type64: 0x2700000027, matchRI: 0x241d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x241f, match64: 0x00000000, model64: 0x1f5960001f59d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2420, match64: 0x00000000, model64: 0x37200000375},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f59d0001f5ad, model64: 0x1f5ad0001f5b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2421, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2422, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2423, match64: 0x00000000, model64: 0x1f5b40001f5be},
		modelTuple{type64: 0x2700000027, matchRI: 0x2424, match64: 0x00000000, model64: 0x1f5be0001f5c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f5c50001f5ce, model64: 0x4a0000004a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f5d30001f5df, model64: 0x1f5df0001f5eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2427, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2428, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f5f50001f5fc, model64: 0x1f5fc0001f604},
		modelTuple{type64: 0x2700000027, matchRI: 0x242a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x242b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x242c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x242e, match64: 0x00000000, model64: 0x1f60b0001f612},
		modelTuple{type64: 0x2700000027, matchRI: 0x242f, match64: 0x00000000, model64: 0x1f6120001f615},
		modelTuple{type64: 0x2700000027, matchRI: 0x2430, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2431, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2432, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2434, match64: 0x00000000, model64: 0x90790000907b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f6240001f628},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2438, match64: 0x00000000, model64: 0x1f63d0001f64a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2439, match64: 0x00000000, model64: 0x1f64a0001f652},
		modelTuple{type64: 0x2700000027, matchRI: 0x243a, match64: 0x00000000, model64: 0x1f64a0001f652},
		modelTuple{type64: 0x2700000027, matchRI: 0x243b, match64: 0x00000000, model64: 0x1f6520001f65c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x243c, match64: 0x00000000, model64: 0x1f65c0001f66d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x243d, match64: 0x00000000, model64: 0x1f66d0001f675},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f67d0001f684},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f6890001f68e, model64: 0x1f68e0001f695},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f6950001f69a, model64: 0x1f69a0001f69f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f69f0001f6a8, model64: 0x1f6a80001f6b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f6b20001f6b7, model64: 0x1f6b70001f6bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f6bc0001f6c1, model64: 0x1f6c10001f6c7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f6ce0001f6dd, model64: 0x1f6dd0001f6e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f6e40001f6f3, model64: 0x1f6f30001f6fe},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f7060001f712},
		modelTuple{type64: 0x2700000027, matchRI: 0x2444, match64: 0x00000000, model64: 0x1f7180001f721},
		modelTuple{type64: 0x2700000027, matchRI: 0x2445, match64: 0x00000000, model64: 0x1f7210001f726},
		modelTuple{type64: 0x2700000027, matchRI: 0x2446, match64: 0x00000000, model64: 0x59690000596e},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2447, match64: 0x00000000, model64: 0x1f7260001f72e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2448, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f7330001f73a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f7460001f750},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f7560001f766, model64: 0x1f7660001f770},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f7700001f77c, model64: 0x1f77c0001f782},
		modelTuple{type64: 0x20d00000213, matchRI: 0x244d, match64: 0x00000000, model64: 0x1f7820001f78a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x244e, match64: 0x00000000, model64: 0x1f78a0001f795},
		modelTuple{type64: 0x20d00000213, matchRI: 0x244f, match64: 0x00000000, model64: 0x1f7950001f79f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2450, match64: 0x00000000, model64: 0x1f79f0001f7a9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2451, match64: 0x00000000, model64: 0x1f7a90001f7b4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2452, match64: 0x00000000, model64: 0x1f7b40001f7c0},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f7c00001f7cf, model64: 0x1f7cf0001f7d8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f7d80001f7e1, model64: 0x1f7e10001f7eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2453, match64: 0x00000000, model64: 0x1f7eb0001f7f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2454, match64: 0x00000000, model64: 0x1e6df0001e6e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f7f20001f7fb, model64: 0x1f7fb0001f802},
		modelTuple{type64: 0x2700000027, matchRI: 0x2455, match64: 0x00000000, model64: 0x1f8020001f809},
		modelTuple{type64: 0x2700000027, matchRI: 0x2456, match64: 0x00000000, model64: 0x1f8090001f812},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f8120001f820, model64: 0x1f8200001f82e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2457, match64: 0x00000000, model64: 0x1f82e0001f836},
		modelTuple{type64: 0x2700000027, matchRI: 0x2458, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x245a, match64: 0x00000000, model64: 0x1f83c0001f843},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f8430001f84d, model64: 0x1f84d0001f857},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f8570001f866, model64: 0x1f8660001f875},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f8750001f880, model64: 0x1f8800001f88b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f88b0001f89c, model64: 0x1f89c0001f8ad},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f8ad0001f8b9, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f8c40001f8ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f8cd0001f8d8, model64: 0x1f8d80001f8e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f8e00001f8f1, model64: 0x1f8f10001f8ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f8ff0001f907, model64: 0x1f9070001f90a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f90a0001f916, model64: 0x1f9160001f91f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f91f0001f929, model64: 0x1f9290001f930},
		modelTuple{type64: 0x2700000027, matchRI: 0x245e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x245f, match64: 0x00000000, model64: 0x1f9380001f93e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2466, match64: 0x00000000, model64: 0x1e7fc0001e7ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2467, match64: 0x00000000, model64: 0x1e8560001e859},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f9650001f96c, model64: 0x1f96c0001f96f},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2468, match64: 0x00000000, model64: 0x1f8ca0001f8cd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x246b, match64: 0x00000000, model64: 0x1f97f0001f990},
		modelTuple{type64: 0x2700000027, matchRI: 0x246c, match64: 0x00000000, model64: 0x4ee000004ee6},
		modelTuple{type64: 0x2700000027, matchRI: 0x246d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x246e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x246f, match64: 0x00000000, model64: 0x1f9900001f99f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2470, match64: 0x00000000, model64: 0x1f99f0001f9a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2471, match64: 0x00000000, model64: 0x1f9a70001f9b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2472, match64: 0x00000000, model64: 0x1f9b80001f9c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2473, match64: 0x00000000, model64: 0x1f9c50001f9d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2475, match64: 0x00000000, model64: 0x1f9d60001f9e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9e10001f9e7, model64: 0x1f9e70001f9f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2476, match64: 0x00000000, model64: 0x1f9f70001fa04},
		modelTuple{type64: 0x2700000027, matchRI: 0x2477, match64: 0x00000000, model64: 0x1fa040001fa15},
		modelTuple{type64: 0x2700000027, matchRI: 0x2478, match64: 0x00000000, model64: 0x1fa150001fa22},
		modelTuple{type64: 0x2700000027, matchRI: 0x2479, match64: 0x00000000, model64: 0x1fa220001fa33},
		modelTuple{type64: 0x2700000027, matchRI: 0x247a, match64: 0x00000000, model64: 0x1fa330001fa43},
		modelTuple{type64: 0x2700000027, matchRI: 0x247b, match64: 0x00000000, model64: 0x1fa430001fa57},
		modelTuple{type64: 0x2700000027, matchRI: 0x247c, match64: 0x00000000, model64: 0x1fa570001fa68},
		modelTuple{type64: 0x2700000027, matchRI: 0x247d, match64: 0x00000000, model64: 0x1fa680001fa75},
		modelTuple{type64: 0x2700000027, matchRI: 0x247e, match64: 0x00000000, model64: 0x1fa750001fa82},
		modelTuple{type64: 0x2700000027, matchRI: 0x247f, match64: 0x00000000, model64: 0x1fa820001fa93},
		modelTuple{type64: 0x2700000027, matchRI: 0x2480, match64: 0x00000000, model64: 0x1fa930001faa1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2481, match64: 0x00000000, model64: 0x1faa10001faaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2482, match64: 0x00000000, model64: 0x1faaa0001fab3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2483, match64: 0x00000000, model64: 0x1fab30001fab9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2484, match64: 0x00000000, model64: 0x1fab90001fac4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2485, match64: 0x00000000, model64: 0x1fac40001facc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2486, match64: 0x00000000, model64: 0x1facc0001fad7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fad70001fae0, model64: 0x1fad70001fae0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2487, match64: 0x00000000, model64: 0x1fae00001fae7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2488, match64: 0x00000000, model64: 0x1fae70001faee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2489, match64: 0x00000000, model64: 0x1faee0001faf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x248a, match64: 0x00000000, model64: 0x1faf20001fafa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fafa0001fb14, model64: 0x1fb140001fb2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x248b, match64: 0x00000000, model64: 0x1fb2f0001fb3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x248c, match64: 0x00000000, model64: 0x1fb3a0001fb41},
		modelTuple{type64: 0x2700000027, matchRI: 0x248d, match64: 0x00000000, model64: 0x1fb410001fb46},
		modelTuple{type64: 0x2700000027, matchRI: 0x248e, match64: 0x00000000, model64: 0x1fb460001fb4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x248f, match64: 0x00000000, model64: 0x1fb4f0001fb54},
		modelTuple{type64: 0x2700000027, matchRI: 0x2490, match64: 0x00000000, model64: 0x1fb540001fb66},
		modelTuple{type64: 0x2700000027, matchRI: 0x2491, match64: 0x00000000, model64: 0x1fb660001fb6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2492, match64: 0x00000000, model64: 0x1fb6c0001fb76},
		modelTuple{type64: 0x2700000027, matchRI: 0x2493, match64: 0x00000000, model64: 0x1fb760001fb83},
		modelTuple{type64: 0x2700000027, matchRI: 0x2494, match64: 0x00000000, model64: 0x1fb830001fb91},
		modelTuple{type64: 0x2700000027, matchRI: 0x2495, match64: 0x00000000, model64: 0x1fb910001fb9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2496, match64: 0x00000000, model64: 0x1fb9a0001fba8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2497, match64: 0x00000000, model64: 0x1fba80001fbae},
		modelTuple{type64: 0x2700000027, matchRI: 0x2498, match64: 0x00000000, model64: 0x1fbae0001fbbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2499, match64: 0x00000000, model64: 0x1fbbb0001fbc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x249a, match64: 0x00000000, model64: 0x1fbc10001fbc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x249b, match64: 0x00000000, model64: 0x1fbc70001fbd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x249c, match64: 0x00000000, model64: 0x1fbd10001fbd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x249d, match64: 0x00000000, model64: 0x1fbd70001fbe7},
		modelTuple{type64: 0x2700000027, matchRI: 0x249e, match64: 0x00000000, model64: 0x1fbe70001fbf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x249f, match64: 0x00000000, model64: 0x1fbf40001fbfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a0, match64: 0x00000000, model64: 0x1fbfe0001fc09},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a1, match64: 0x00000000, model64: 0x1fc090001fc12},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a2, match64: 0x00000000, model64: 0x1fc120001fc18},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a3, match64: 0x00000000, model64: 0x1fc180001fc1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a4, match64: 0x00000000, model64: 0xc87a0000c885},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a5, match64: 0x00000000, model64: 0x1fc1a0001fc1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a6, match64: 0x00000000, model64: 0x1fc1d0001fc2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a7, match64: 0x00000000, model64: 0x1fc2d0001fc34},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a8, match64: 0x00000000, model64: 0x1fc340001fc3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a9, match64: 0x00000000, model64: 0x1fc3b0001fc3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x24aa, match64: 0x00000000, model64: 0x1fc3e0001fc47},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ab, match64: 0x00000000, model64: 0x1fc470001fc4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ac, match64: 0x00000000, model64: 0x1fc4e0001fc51},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ad, match64: 0x00000000, model64: 0x1fc510001fc57},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ae, match64: 0x00000000, model64: 0x1fc570001fc5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x24af, match64: 0x00000000, model64: 0x1fc5e0001fc60},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b0, match64: 0x00000000, model64: 0x1fc600001fc68},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b1, match64: 0x00000000, model64: 0x1fc680001fc71},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b2, match64: 0x00000000, model64: 0x1fc710001fc86},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b3, match64: 0x00000000, model64: 0x1fc860001fc8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b4, match64: 0x00000000, model64: 0x1fc8d0001fc96},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b5, match64: 0x00000000, model64: 0x1fc960001fca1},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b6, match64: 0x00000000, model64: 0x1fca10001fcb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b7, match64: 0x00000000, model64: 0x1fcb90001fcc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b8, match64: 0x00000000, model64: 0x1fcc30001fccd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fccd0001fcd8, model64: 0x1fcd80001fcdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b9, match64: 0x00000000, model64: 0x1fcdd0001fce1},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ba, match64: 0x00000000, model64: 0x1fce10001fce7},
		modelTuple{type64: 0x2700000027, matchRI: 0x24bb, match64: 0x00000000, model64: 0x1fce70001fcec},
		modelTuple{type64: 0x2700000027, matchRI: 0x24bc, match64: 0x00000000, model64: 0x1fcec0001fcf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x24bd, match64: 0x00000000, model64: 0x1fcf10001fcf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x24be, match64: 0x00000000, model64: 0x1fcf90001fd02},
		modelTuple{type64: 0x2700000027, matchRI: 0x24bf, match64: 0x00000000, model64: 0x1fd020001fd08},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c0, match64: 0x00000000, model64: 0x1fd080001fd12},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c1, match64: 0x00000000, model64: 0x1fd120001fd17},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c2, match64: 0x00000000, model64: 0x1fd170001fd1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c3, match64: 0x00000000, model64: 0x1fd1f0001fd2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c4, match64: 0x00000000, model64: 0x1fd2a0001fd33},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c5, match64: 0x00000000, model64: 0x1fd330001fd40},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c6, match64: 0x00000000, model64: 0x1fd400001fd49},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c7, match64: 0x00000000, model64: 0x1fd490001fd4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c8, match64: 0x00000000, model64: 0x1fd4f0001fd58},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c9, match64: 0x00000000, model64: 0x1fd580001fd64},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fd640001fd70, model64: 0x1fd640001fd70},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ca, match64: 0x00000000, model64: 0x1fd700001fd77},
		modelTuple{type64: 0x2700000027, matchRI: 0x24cb, match64: 0x00000000, model64: 0x1fd770001fd7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x24cc, match64: 0x00000000, model64: 0x1fd7e0001fd89},
		modelTuple{type64: 0x2700000027, matchRI: 0x24cd, match64: 0x00000000, model64: 0x1fd890001fd91},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ce, match64: 0x00000000, model64: 0x1fd910001fd99},
		modelTuple{type64: 0x2700000027, matchRI: 0x24cf, match64: 0x00000000, model64: 0x1fd990001fda0},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d0, match64: 0x00000000, model64: 0x1fda00001fda8},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d1, match64: 0x00000000, model64: 0x1fda80001fdb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d2, match64: 0x00000000, model64: 0x1fdb30001fdbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d3, match64: 0x00000000, model64: 0x1fdbc0001fdc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d4, match64: 0x00000000, model64: 0x1fdc50001fdcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d5, match64: 0x00000000, model64: 0x1fdcc0001fdd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d6, match64: 0x00000000, model64: 0x1fdd90001fde6},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d7, match64: 0x00000000, model64: 0x1fde60001fdee},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d8, match64: 0x00000000, model64: 0x1fdee0001fdf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d9, match64: 0x00000000, model64: 0x1fdf60001fdfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x24da, match64: 0x00000000, model64: 0x1fdfe0001fe07},
		modelTuple{type64: 0x2700000027, matchRI: 0x24db, match64: 0x00000000, model64: 0x1fe070001fe0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x24dc, match64: 0x00000000, model64: 0x1fe0f0001fe1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x24dd, match64: 0x00000000, model64: 0x1fe1b0001fe27},
		modelTuple{type64: 0x2700000027, matchRI: 0x24de, match64: 0x00000000, model64: 0x1fe270001fe32},
		modelTuple{type64: 0x2700000027, matchRI: 0x24df, match64: 0x00000000, model64: 0x1fe320001fe3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e0, match64: 0x00000000, model64: 0x1fe3a0001fe48},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e1, match64: 0x00000000, model64: 0x1fe480001fe51},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e2, match64: 0x00000000, model64: 0x1fe510001fe60},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e3, match64: 0x00000000, model64: 0x1fe600001fe72},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e4, match64: 0x00000000, model64: 0x1fe720001fe87},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e5, match64: 0x00000000, model64: 0x1fe870001fe95},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e6, match64: 0x00000000, model64: 0x1fe950001fea2},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e7, match64: 0x00000000, model64: 0x1fea20001feab},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e8, match64: 0x00000000, model64: 0x1feab0001feb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e9, match64: 0x00000000, model64: 0x1feb30001febe},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ea, match64: 0x00000000, model64: 0x1febe0001fecc},
		modelTuple{type64: 0x2700000027, matchRI: 0x24eb, match64: 0x00000000, model64: 0x1fecc0001fee9},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ec, match64: 0x00000000, model64: 0x1fee90001ff03},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ed, match64: 0x00000000, model64: 0x1ff030001ff13},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ee, match64: 0x00000000, model64: 0x1ff130001ff20},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ef, match64: 0x00000000, model64: 0x1ff200001ff2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f0, match64: 0x00000000, model64: 0x1ff2c0001ff38},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f1, match64: 0x00000000, model64: 0x1ff380001ff45},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f2, match64: 0x00000000, model64: 0x1ff450001ff4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f3, match64: 0x00000000, model64: 0x1ff4e0001ff58},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f4, match64: 0x00000000, model64: 0x1ff580001ff68},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f5, match64: 0x00000000, model64: 0x1ff680001ff76},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f6, match64: 0x00000000, model64: 0x1ff760001ff83},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f7, match64: 0x00000000, model64: 0x1ff830001ff92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff920001ff9c, model64: 0x1ff9c0001ffa5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ffa50001ffae, model64: 0x1ffae0001ffb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ffb80001ffc1, model64: 0x1ffc10001ffcb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ffcb0001ffd4, model64: 0x1ffd40001ffe1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ffe10001ffeb, model64: 0x1ffeb0001fff4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fff40001fffe, model64: 0x1fffe00020008},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2000800020012, model64: 0x200120002001f},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f8, match64: 0x00000000, model64: 0x2001f0002002c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2002c0002003f, model64: 0x2002c0002003f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2003f0002004f, model64: 0x2004f0002005a},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f9, match64: 0x00000000, model64: 0x2005a00020061},
		modelTuple{type64: 0x2700000027, matchRI: 0x24fa, match64: 0x00000000, model64: 0x200610002006d},
		modelTuple{type64: 0x2700000027, matchRI: 0x24fb, match64: 0x00000000, model64: 0x2006d0002007a},
		modelTuple{type64: 0x2700000027, matchRI: 0x24fc, match64: 0x00000000, model64: 0x2007a00020083},
		modelTuple{type64: 0x2700000027, matchRI: 0x24fd, match64: 0x00000000, model64: 0x200830002008b},
		modelTuple{type64: 0x2700000027, matchRI: 0x24fe, match64: 0x00000000, model64: 0x2008b00020093},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x200930002009d, model64: 0x2009d000200a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ff, match64: 0x00000000, model64: 0x200a6000200af},
		modelTuple{type64: 0x2700000027, matchRI: 0x2500, match64: 0x00000000, model64: 0x200af000200b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2501, match64: 0x00000000, model64: 0x200b4000200b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2502, match64: 0x00000000, model64: 0x200b8000200bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2503, match64: 0x00000000, model64: 0x200bc000200c2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2504, match64: 0x00000000, model64: 0x200c2000200ce},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2505, match64: 0x00000000, model64: 0x200ce000200d6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2506, match64: 0x00000000, model64: 0x200d6000200e5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2507, match64: 0x00000000, model64: 0x200e5000200ee},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2508, match64: 0x00000000, model64: 0x200ee000200f3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2509, match64: 0x00000000, model64: 0x200f300020100},
		modelTuple{type64: 0x20d00000213, matchRI: 0x250a, match64: 0x00000000, model64: 0x2010000020108},
		modelTuple{type64: 0x20d00000213, matchRI: 0x250b, match64: 0x00000000, model64: 0x2010800020110},
		modelTuple{type64: 0x20d00000213, matchRI: 0x250c, match64: 0x00000000, model64: 0x2011000020118},
		modelTuple{type64: 0x20d00000213, matchRI: 0x250d, match64: 0x00000000, model64: 0x201180002011e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x250e, match64: 0x00000000, model64: 0x2011e00020127},
		modelTuple{type64: 0x5db000005e5, matchRI: -0x0001, match64: 0x201270002012f, model64: 0x2012f00020146},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x250f, match64: 0x00000000, model64: 0x2014600020152},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2510, match64: 0x00000000, model64: 0x201520002015b},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2511, match64: 0x00000000, model64: 0x2015b00020164},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2512, match64: 0x00000000, model64: 0x201640002016b},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2513, match64: 0x00000000, model64: 0x2016b00020172},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2514, match64: 0x00000000, model64: 0x201720002017c},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2515, match64: 0x00000000, model64: 0x2017c00020189},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2516, match64: 0x00000000, model64: 0x2018900020190},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2517, match64: 0x00000000, model64: 0x2019000020197},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2518, match64: 0x00000000, model64: 0x2016b00020172},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2519, match64: 0x00000000, model64: 0x201970002019e},
		modelTuple{type64: 0x2700000027, matchRI: 0x251a, match64: 0x00000000, model64: 0x2019e000201a9},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x251b, match64: 0x00000000, model64: 0x201a9000201b0},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x251c, match64: 0x00000000, model64: 0x201b0000201bb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x251d, match64: 0x00000000, model64: 0x201bb000201c5},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x251e, match64: 0x00000000, model64: 0x201c5000201cf},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x251f, match64: 0x00000000, model64: 0x201cf000201de},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2520, match64: 0x00000000, model64: 0x201de000201eb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2521, match64: 0x00000000, model64: 0x201eb000201f7},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x201f7000201fc, model64: 0x201fc00020208},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x202080002021b, model64: 0x202080002021b},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x2021b0002022d, model64: 0x2021b0002022d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2522, match64: 0x00000000, model64: 0x2022d00020239},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2523, match64: 0x00000000, model64: 0x2023900020246},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2524, match64: 0x00000000, model64: 0x2024600020254},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2525, match64: 0x00000000, model64: 0x2025400020262},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2526, match64: 0x00000000, model64: 0x2026200020272},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2527, match64: 0x00000000, model64: 0x2027200020281},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2528, match64: 0x00000000, model64: 0x2028100020294},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2529, match64: 0x00000000, model64: 0x20294000202a4},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x252a, match64: 0x00000000, model64: 0x202a4000202b6},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x252b, match64: 0x00000000, model64: 0x202b6000202ca},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x252c, match64: 0x00000000, model64: 0x202ca000202d7},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x252d, match64: 0x00000000, model64: 0x202d7000202e5},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x252e, match64: 0x00000000, model64: 0x2025400020262},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x252f, match64: 0x00000000, model64: 0x202e5000202f5},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2530, match64: 0x00000000, model64: 0x202f500020306},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2531, match64: 0x00000000, model64: 0x2030600020316},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2532, match64: 0x00000000, model64: 0x2031600020327},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2533, match64: 0x00000000, model64: 0x2032700020338},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2534, match64: 0x00000000, model64: 0x2033800020346},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2535, match64: 0x00000000, model64: 0x2034600020353},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2536, match64: 0x00000000, model64: 0x2035300020361},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2537, match64: 0x00000000, model64: 0x2036100020375},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2538, match64: 0x00000000, model64: 0x203750002038a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2539, match64: 0x00000000, model64: 0x2038a000203a1},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x253a, match64: 0x00000000, model64: 0x203a1000203b3},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x253b, match64: 0x00000000, model64: 0x2034600020353},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x253c, match64: 0x00000000, model64: 0x203b3000203c4},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x253d, match64: 0x00000000, model64: 0x203c4000203d6},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x253e, match64: 0x00000000, model64: 0x203d6000203e4},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x253f, match64: 0x00000000, model64: 0x203e4000203f6},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2540, match64: 0x00000000, model64: 0x203f600020409},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2541, match64: 0x00000000, model64: 0x204090002041d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2542, match64: 0x00000000, model64: 0x2041d00020432},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2543, match64: 0x00000000, model64: 0x2043200020444},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2544, match64: 0x00000000, model64: 0x2044400020454},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2545, match64: 0x00000000, model64: 0x2045400020465},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2546, match64: 0x00000000, model64: 0x2046500020475},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2547, match64: 0x00000000, model64: 0x2047500020485},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2548, match64: 0x00000000, model64: 0x2048500020493},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2549, match64: 0x00000000, model64: 0x20493000204a4},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x254a, match64: 0x00000000, model64: 0x204a4000204b5},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x254b, match64: 0x00000000, model64: 0x204b5000204c1},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x254c, match64: 0x00000000, model64: 0x204c1000204d4},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x254d, match64: 0x00000000, model64: 0x204d4000204e4},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x254e, match64: 0x00000000, model64: 0x204e4000204f1},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x254f, match64: 0x00000000, model64: 0x204f1000204fe},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2550, match64: 0x00000000, model64: 0x204fe0002050e},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2551, match64: 0x00000000, model64: 0x2050e00020523},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2552, match64: 0x00000000, model64: 0x2052300020534},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2553, match64: 0x00000000, model64: 0x2053400020541},
		modelTuple{type64: 0x2700000027, matchRI: 0x2554, match64: 0x00000000, model64: 0x2054100020549},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x2054900020554, model64: 0x205540002055f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2555, match64: 0x00000000, model64: 0x2055f0002056d},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x2056d0002057c, model64: 0x2056d0002057c},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x2057c00020586, model64: 0x2057c00020586},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2556, match64: 0x00000000, model64: 0x2058600020590},
		modelTuple{type64: 0x2700000027, matchRI: 0x2557, match64: 0x00000000, model64: 0x2059000020597},
		modelTuple{type64: 0x2700000027, matchRI: 0x2558, match64: 0x00000000, model64: 0x20597000205a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2559, match64: 0x00000000, model64: 0x205a2000205ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x255a, match64: 0x00000000, model64: 0x205ab000205b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x255b, match64: 0x00000000, model64: 0x205ab000205b0},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x255c, match64: 0x00000000, model64: 0x8e9c00008ea0},
		modelTuple{type64: 0x2700000027, matchRI: 0x255d, match64: 0x00000000, model64: 0x205b0000205b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x255e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2560, match64: 0x00000000, model64: 0x205b9000205bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x205c1000205ca, model64: 0x205ca000205d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2562, match64: 0x00000000, model64: 0x205d2000205dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2563, match64: 0x00000000, model64: 0x205dc000205e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2564, match64: 0x00000000, model64: 0x205e3000205ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x2565, match64: 0x00000000, model64: 0x205ed000205f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2566, match64: 0x00000000, model64: 0x205f3000205f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2567, match64: 0x00000000, model64: 0x205f900020601},
		modelTuple{type64: 0x2700000027, matchRI: 0x2568, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2569, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x256a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x256c, match64: 0x00000000, model64: 0x2060500020615},
		modelTuple{type64: 0x2700000027, matchRI: 0x256d, match64: 0x00000000, model64: 0x206150002061f},
		modelTuple{type64: 0x2700000027, matchRI: 0x256e, match64: 0x00000000, model64: 0x2061f0002062e},
		modelTuple{type64: 0xa0d50000a0ea, matchRI: 0x256f, match64: 0x00000000, model64: 0x2062e00020634},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2570, match64: 0x00000000, model64: 0x206340002063b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2573, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2574, match64: 0x00000000, model64: 0x206480002064a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2575, match64: 0x00000000, model64: 0x2064a00020651},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x206510002065a, model64: 0x2065a00020663},
		modelTuple{type64: 0x2700000027, matchRI: 0x2577, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x2066b00020670, model64: 0x206700002067f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x2067f00020686, model64: 0x2067f00020686},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2068b00020692},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206a5000206ae, model64: 0x206ae000206b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x257d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x257e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2581, match64: 0x00000000, model64: 0x43450000434b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206c9000206d7, model64: 0x206d7000206e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206e0000206eb, model64: 0x206eb000206f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206f1000206fd, model64: 0x206fd00020704},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2070400020710, model64: 0x2071000020717},
		modelTuple{type64: 0x2700000027, matchRI: 0x2582, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x207290002073c, model64: 0x2073c00020742},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2586, match64: 0x00000000, model64: 0x2074200020749},
		modelTuple{type64: 0x2700000027, matchRI: 0x2587, match64: 0x00000000, model64: 0x2074900020753},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2075900020768, model64: 0x207680002076e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2589, match64: 0x00000000, model64: 0x2076e00020775},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2077500020780, model64: 0x2076e00020775},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207800002078b, model64: 0x2078b00020792},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20792000207a0, model64: 0x207a0000207a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207a8000207b1, model64: 0x207b1000207ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207ba000207c3, model64: 0x207c3000207cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207cd000207d6, model64: 0x207d6000207e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x258a, match64: 0x00000000, model64: 0x207e0000207e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207e8000207f1, model64: 0x207f1000207fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207fa00020803, model64: 0x208030002080c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2080c00020818, model64: 0x2081800020820},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2082000020828, model64: 0x2082800020833},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208330002083c, model64: 0x2083c00020848},
		modelTuple{type64: 0x2700000027, matchRI: 0x258b, match64: 0x00000000, model64: 0x2084800020852},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208520002085b, model64: 0x2085b00020864},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208670002086c, model64: 0x2086c00020874},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208740002087c, model64: 0x2087c00020886},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208860002088c, model64: 0x2088c00020896},
		modelTuple{type64: 0x2700000027, matchRI: 0x258d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x258f, match64: 0x00000000, model64: 0xb1c80000b1cb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2590, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2592, match64: 0x00000000, model64: 0x208a0000208a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208a7000208b1, model64: 0x208b1000208b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208b9000208c1, model64: 0x208c1000208ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208ca000208ce, model64: 0x208ce000208d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208d3000208da, model64: 0x208da000208e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208e3000208e9, model64: 0x208e9000208ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208ef000208f3, model64: 0x208ef000208f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208f3000208f9, model64: 0x208f3000208f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2593, match64: 0x00000000, model64: 0x208f900020901},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x209010002090b, model64: 0x2090b00020915},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x209150002091e, model64: 0x2091e00020928},
		modelTuple{type64: 0x2700000027, matchRI: 0x2594, match64: 0x00000000, model64: 0x2092800020932},
		modelTuple{type64: 0x2700000027, matchRI: 0x2595, match64: 0x00000000, model64: 0x209320002093f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2596, match64: 0x00000000, model64: 0x2092800020932},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x209460002094d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x128970001289f},
		modelTuple{type64: 0x2700000027, matchRI: 0x259a, match64: 0x00000000, model64: 0x16a7300016a7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x259b, match64: 0x00000000, model64: 0x2095500020961},
		modelTuple{type64: 0x2700000027, matchRI: 0x259d, match64: 0x00000000, model64: 0x209660002096d},
		modelTuple{type64: 0x2700000027, matchRI: 0x259f, match64: 0x00000000, model64: 0x209730002097a},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a4, match64: 0x00000000, model64: 0x2098100020989},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a5, match64: 0x00000000, model64: 0x2098900020992},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a6, match64: 0x00000000, model64: 0x2099200020999},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a7, match64: 0x00000000, model64: 0x209990002099f},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a8, match64: 0x00000000, model64: 0x2099f000209a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a9, match64: 0x00000000, model64: 0x209a7000209b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x25aa, match64: 0x00000000, model64: 0x209b2000209b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ab, match64: 0x00000000, model64: 0x6e2000006e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x209b9000209c0, model64: 0x209c0000209cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x209d2000209d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x25af, match64: 0x00000000, model64: 0x209dd000209e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b1, match64: 0x00000000, model64: 0x209e9000209ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x209f4000209f9, model64: 0x209f4000209f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b7, match64: 0x00000000, model64: 0x20a0200020a12},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b8, match64: 0x00000000, model64: 0x20a1200020a1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b9, match64: 0x00000000, model64: 0x20a1c00020a28},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ba, match64: 0x00000000, model64: 0x20a2800020a33},
		modelTuple{type64: 0x2700000027, matchRI: 0x25bb, match64: 0x00000000, model64: 0x20a3300020a40},
		modelTuple{type64: 0x2700000027, matchRI: 0x25bc, match64: 0x00000000, model64: 0x20a4000020a4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x25bd, match64: 0x00000000, model64: 0x20a4c00020a59},
		modelTuple{type64: 0x2700000027, matchRI: 0x25be, match64: 0x00000000, model64: 0x20a5900020a66},
		modelTuple{type64: 0x2700000027, matchRI: 0x25bf, match64: 0x00000000, model64: 0x20a6600020a71},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c0, match64: 0x00000000, model64: 0x20a7100020a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c1, match64: 0x00000000, model64: 0x20a8000020a8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c2, match64: 0x00000000, model64: 0x20a8d00020a9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c3, match64: 0x00000000, model64: 0x20a9a00020aa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c4, match64: 0x00000000, model64: 0x20aa600020ab4},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c5, match64: 0x00000000, model64: 0x20ab400020ac0},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c6, match64: 0x00000000, model64: 0x20ac000020acd},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c7, match64: 0x00000000, model64: 0x20acd00020adf},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c8, match64: 0x00000000, model64: 0x20adf00020aec},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c9, match64: 0x00000000, model64: 0x20aec00020af8},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ca, match64: 0x00000000, model64: 0x20af800020b04},
		modelTuple{type64: 0x2700000027, matchRI: 0x25cb, match64: 0x00000000, model64: 0x20b0400020b0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b0f00020b1b, model64: 0x20b1b00020b27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b2700020b33, model64: 0x20b3300020b3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b3f00020b4b, model64: 0x20b4b00020b57},
		modelTuple{type64: 0x2700000027, matchRI: 0x25cd, match64: 0x00000000, model64: 0x2790000027e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d0, match64: 0x00000000, model64: 0x20b6200020b70},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d1, match64: 0x00000000, model64: 0x20b7000020b82},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d2, match64: 0x00000000, model64: 0x20b8200020b8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d3, match64: 0x00000000, model64: 0x20b8b00020b98},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d4, match64: 0x00000000, model64: 0x20b9800020ba2},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d5, match64: 0x00000000, model64: 0x20ba200020baa},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d6, match64: 0x00000000, model64: 0x20baa00020bb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d7, match64: 0x00000000, model64: 0x20bb200020bbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d8, match64: 0x00000000, model64: 0x20bbb00020bc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d9, match64: 0x00000000, model64: 0x20bc700020bd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x25da, match64: 0x00000000, model64: 0x20bd400020bde},
		modelTuple{type64: 0x2700000027, matchRI: 0x25db, match64: 0x00000000, model64: 0x2f5000002f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x25dc, match64: 0x00000000, model64: 0x20bde00020be7},
		modelTuple{type64: 0x2700000027, matchRI: 0x25dd, match64: 0x00000000, model64: 0x20be700020bef},
		modelTuple{type64: 0x2700000027, matchRI: 0x25de, match64: 0x00000000, model64: 0x20bef00020bfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x25df, match64: 0x00000000, model64: 0x20bfe00020c0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e0, match64: 0x00000000, model64: 0x20c0b00020c19},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e1, match64: 0x00000000, model64: 0x20c1900020c29},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e2, match64: 0x00000000, model64: 0x20c2900020c38},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e3, match64: 0x00000000, model64: 0x20c3800020c48},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e4, match64: 0x00000000, model64: 0x20c4800020c51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20c5100020c57, model64: 0x20c5700020c61},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e5, match64: 0x00000000, model64: 0x20c6100020c6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20c6a00020c6f, model64: 0x20c6f00020c7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e6, match64: 0x00000000, model64: 0x20c7b00020c88},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e7, match64: 0x00000000, model64: 0x20c8800020c90},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e8, match64: 0x00000000, model64: 0x20c9000020c9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e9, match64: 0x00000000, model64: 0x20c9d00020cab},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ea, match64: 0x00000000, model64: 0x20cab00020cb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x25eb, match64: 0x00000000, model64: 0x20cb900020cbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ec, match64: 0x00000000, model64: 0x20cbf00020cc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ed, match64: 0x00000000, model64: 0x20cc900020cd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ee, match64: 0x00000000, model64: 0x20cd700020ce6},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ef, match64: 0x00000000, model64: 0x20ce600020cf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f0, match64: 0x00000000, model64: 0x20cf000020cf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f1, match64: 0x00000000, model64: 0x20cf700020d04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20d0400020d0a, model64: 0x20d0a00020d14},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f2, match64: 0x00000000, model64: 0x20d1400020d1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20d1b00020d21, model64: 0x20d2100020d2f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20d2f00020d36, model64: 0x20d3600020d43},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20d4300020d49, model64: 0x20d4900020d57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20d5700020d5c, model64: 0x20d5c00020d67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20d6700020d6d, model64: 0x20d6d00020d7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20d7a00020d80, model64: 0x20d8000020d8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f3, match64: 0x00000000, model64: 0x20d8b00020d95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20d9500020d9a, model64: 0x20d9a00020da4},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f4, match64: 0x00000000, model64: 0x20da400020dac},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f5, match64: 0x00000000, model64: 0x20dac00020db3},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f6, match64: 0x00000000, model64: 0x20db300020dbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f7, match64: 0x00000000, model64: 0x20dbd00020dc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f8, match64: 0x00000000, model64: 0x20dc400020dcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f9, match64: 0x00000000, model64: 0x20dcc00020dcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fa, match64: 0x00000000, model64: 0x20dcf00020dd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fb, match64: 0x00000000, model64: 0x20dd200020dd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fc, match64: 0x00000000, model64: 0x20dd800020de0},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fd, match64: 0x00000000, model64: 0x20de000020dec},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fe, match64: 0x00000000, model64: 0x20dec00020df0},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ff, match64: 0x00000000, model64: 0x20df000020df8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2600, match64: 0x00000000, model64: 0x20df800020e00},
		modelTuple{type64: 0x2700000027, matchRI: 0x2601, match64: 0x00000000, model64: 0x1f2600001f2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2602, match64: 0x00000000, model64: 0x1ab540001ab5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2603, match64: 0x00000000, model64: 0x20e0000020e0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2604, match64: 0x00000000, model64: 0x20e0a00020e11},
		modelTuple{type64: 0x2700000027, matchRI: 0x2605, match64: 0x00000000, model64: 0x1e6e80001e6ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x2606, match64: 0x00000000, model64: 0x20e1100020e18},
		modelTuple{type64: 0x2700000027, matchRI: 0x2607, match64: 0x00000000, model64: 0x20e1800020e22},
		modelTuple{type64: 0x2700000027, matchRI: 0x2608, match64: 0x00000000, model64: 0x20e2200020e2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2609, match64: 0x00000000, model64: 0x20e2d00020e35},
		modelTuple{type64: 0x2700000027, matchRI: 0x260a, match64: 0x00000000, model64: 0x20e3500020e3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x260b, match64: 0x00000000, model64: 0x20e3d00020e48},
		modelTuple{type64: 0x2700000027, matchRI: 0x260c, match64: 0x00000000, model64: 0x20e4800020e51},
		modelTuple{type64: 0x2700000027, matchRI: 0x260d, match64: 0x00000000, model64: 0x20e5100020e5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x260e, match64: 0x00000000, model64: 0x20e5a00020e60},
		modelTuple{type64: 0x2700000027, matchRI: 0x260f, match64: 0x00000000, model64: 0x20e6000020e69},
		modelTuple{type64: 0x2700000027, matchRI: 0x2610, match64: 0x00000000, model64: 0x20e6900020e73},
		modelTuple{type64: 0x2700000027, matchRI: 0x2611, match64: 0x00000000, model64: 0x20e7300020e79},
		modelTuple{type64: 0x2700000027, matchRI: 0x2612, match64: 0x00000000, model64: 0x20e7900020e7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2613, match64: 0x00000000, model64: 0x20e7e00020e89},
		modelTuple{type64: 0x2700000027, matchRI: 0x2614, match64: 0x00000000, model64: 0x20e8900020e97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20e9700020e9c, model64: 0x20e9c00020ea7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20ea700020eab, model64: 0x20eab00020eb2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20eb200020eb6, model64: 0x20eb600020ebe},
		modelTuple{type64: 0x2700000027, matchRI: 0x2615, match64: 0x00000000, model64: 0x20ebe00020ecb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2616, match64: 0x00000000, model64: 0x20ecb00020ed4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20ed400020ee0, model64: 0x20ed400020ee0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20ee000020eed, model64: 0x20eed00020ef6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2617, match64: 0x00000000, model64: 0x20ef600020f01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20f0100020f05, model64: 0x20f0500020f09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20f0900020f0e, model64: 0x20f0e00020f16},
		modelTuple{type64: 0x2700000027, matchRI: 0x2618, match64: 0x00000000, model64: 0x20f1600020f1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2619, match64: 0x00000000, model64: 0x20f1d00020f25},
		modelTuple{type64: 0x2700000027, matchRI: 0x261a, match64: 0x00000000, model64: 0x20f2500020f29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20f2900020f2e, model64: 0xafa90000afaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x261b, match64: 0x00000000, model64: 0x20f2e00020f36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20f3600020f3a, model64: 0x20f3a00020f46},
		modelTuple{type64: 0x2700000027, matchRI: 0x261c, match64: 0x00000000, model64: 0x20f4600020f4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20f4f00020f5c, model64: 0x20f5c00020f64},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20f6400020f69, model64: 0x20f6900020f71},
		modelTuple{type64: 0x2700000027, matchRI: 0x261d, match64: 0x00000000, model64: 0x20f7100020f75},
		modelTuple{type64: 0x2700000027, matchRI: 0x261e, match64: 0x00000000, model64: 0x20f7500020f7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x261f, match64: 0x00000000, model64: 0x20f7a00020f87},
		modelTuple{type64: 0x2700000027, matchRI: 0x2620, match64: 0x00000000, model64: 0x20f8700020f97},
		modelTuple{type64: 0x2700000027, matchRI: 0x2621, match64: 0x00000000, model64: 0x20f9700020fa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2622, match64: 0x00000000, model64: 0x20fa600020fb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2623, match64: 0x00000000, model64: 0x20fb200020fbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2624, match64: 0x00000000, model64: 0x20fbf00020fc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2625, match64: 0x00000000, model64: 0x20fc900020fd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2626, match64: 0x00000000, model64: 0x20fd700020fe4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2627, match64: 0x00000000, model64: 0x20fe400020fec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2628, match64: 0x00000000, model64: 0x20fec00020ff9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2629, match64: 0x00000000, model64: 0x20ff900021006},
		modelTuple{type64: 0x2700000027, matchRI: 0x262a, match64: 0x00000000, model64: 0x210060002100e},
		modelTuple{type64: 0x2700000027, matchRI: 0x262b, match64: 0x00000000, model64: 0x2100e00021016},
		modelTuple{type64: 0x2700000027, matchRI: 0x262c, match64: 0x00000000, model64: 0x2101600021022},
		modelTuple{type64: 0x2700000027, matchRI: 0x262d, match64: 0x00000000, model64: 0x210220002102f},
		modelTuple{type64: 0x2700000027, matchRI: 0x262e, match64: 0x00000000, model64: 0x2102f00021037},
		modelTuple{type64: 0x2700000027, matchRI: 0x262f, match64: 0x00000000, model64: 0x2103700021040},
		modelTuple{type64: 0x2700000027, matchRI: 0x2630, match64: 0x00000000, model64: 0x2104000021049},
		modelTuple{type64: 0x2700000027, matchRI: 0x2631, match64: 0x00000000, model64: 0x2104900021057},
		modelTuple{type64: 0x2700000027, matchRI: 0x2632, match64: 0x00000000, model64: 0x210570002105f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2633, match64: 0x00000000, model64: 0x2105f0002106f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2634, match64: 0x00000000, model64: 0x2106f00021077},
		modelTuple{type64: 0x2700000027, matchRI: 0x2635, match64: 0x00000000, model64: 0x20fc900020fd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2636, match64: 0x00000000, model64: 0x20ebe00020ecb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2637, match64: 0x00000000, model64: 0x210770002107f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2638, match64: 0x00000000, model64: 0x2107f0002108b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2639, match64: 0x00000000, model64: 0x2108b00021098},
		modelTuple{type64: 0x2700000027, matchRI: 0x263a, match64: 0x00000000, model64: 0x21098000210a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x263b, match64: 0x00000000, model64: 0x210a5000210ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x263c, match64: 0x00000000, model64: 0x210ad000210b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x263d, match64: 0x00000000, model64: 0x210b9000210c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x263e, match64: 0x00000000, model64: 0x210c1000210cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210cc000210d6, model64: 0x210cc000210d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x263f, match64: 0x00000000, model64: 0x210d6000210de},
		modelTuple{type64: 0x2700000027, matchRI: 0x2640, match64: 0x00000000, model64: 0x210de000210eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2641, match64: 0x00000000, model64: 0x210eb000210f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2642, match64: 0x00000000, model64: 0x210f700021104},
		modelTuple{type64: 0x2700000027, matchRI: 0x2643, match64: 0x00000000, model64: 0x2110400021111},
		modelTuple{type64: 0x2700000027, matchRI: 0x2644, match64: 0x00000000, model64: 0x2111100021119},
		modelTuple{type64: 0x2700000027, matchRI: 0x2645, match64: 0x00000000, model64: 0x2111900021122},
		modelTuple{type64: 0x2700000027, matchRI: 0x2646, match64: 0x00000000, model64: 0x211220002112a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2647, match64: 0x00000000, model64: 0x2112a00021133},
		modelTuple{type64: 0x2700000027, matchRI: 0x2648, match64: 0x00000000, model64: 0x211330002113e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2649, match64: 0x00000000, model64: 0x2113e00021147},
		modelTuple{type64: 0x2700000027, matchRI: 0x264a, match64: 0x00000000, model64: 0x211470002114f},
		modelTuple{type64: 0x2700000027, matchRI: 0x264b, match64: 0x00000000, model64: 0x2114f00021157},
		modelTuple{type64: 0x2700000027, matchRI: 0x264c, match64: 0x00000000, model64: 0x2115700021160},
		modelTuple{type64: 0x2700000027, matchRI: 0x264d, match64: 0x00000000, model64: 0x211600002116b},
		modelTuple{type64: 0x2700000027, matchRI: 0x264e, match64: 0x00000000, model64: 0x2116b00021178},
		modelTuple{type64: 0x2700000027, matchRI: 0x264f, match64: 0x00000000, model64: 0x2117800021185},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x211850002118d, model64: 0x2118d0002119b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2119b000211a3, model64: 0x211a3000211b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x211b1000211ba, model64: 0x211ba000211c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x211c3000211cb, model64: 0x211cb000211d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x211d4000211dd, model64: 0x211dd000211ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x211ec000211f5, model64: 0x211f500021204},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212040002120c, model64: 0x2120c0002121a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2121a00021223, model64: 0x2122300021231},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2123100021239, model64: 0x2123900021246},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212460002124e, model64: 0x2124e0002125e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2125e00021266, model64: 0x212660002126f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2650, match64: 0x00000000, model64: 0x2126f0002127d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2651, match64: 0x00000000, model64: 0x2111900021122},
		modelTuple{type64: 0x2700000027, matchRI: 0x2652, match64: 0x00000000, model64: 0x2127d0002128a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2653, match64: 0x00000000, model64: 0x2128a00021292},
		modelTuple{type64: 0x2700000027, matchRI: 0x2654, match64: 0x00000000, model64: 0x212920002129a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2129a0002129e, model64: 0x2129e000212a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212a6000212ab, model64: 0x212ab000212b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212b6000212bc, model64: 0x212bc000212c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212c8000212ce, model64: 0x212ce000212dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212dc000212e0, model64: 0x212e0000212eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212eb000212ef, model64: 0x212ef000212fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212fb000212ff, model64: 0x212ff0002130c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2130c00021312, model64: 0x2131200021321},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2132100021326, model64: 0x213260002132f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2132f00021333, model64: 0x213330002133a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2133a00021340, model64: 0x213400002134c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2134c00021350, model64: 0x213500002135f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2135f00021363, model64: 0x213630002136e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2136e00021372, model64: 0x213720002137d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2655, match64: 0x00000000, model64: 0x2137d00021388},
		modelTuple{type64: 0x2700000027, matchRI: 0x2656, match64: 0x00000000, model64: 0x2138800021394},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2139400021399, model64: 0x21399000213a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213a3000213a9, model64: 0x213a9000213b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213b5000213bb, model64: 0x213bb000213c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213c7000213cd, model64: 0x213cd000213d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213d7000213e1, model64: 0x213e1000213eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213eb000213f0, model64: 0x213eb000213f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2657, match64: 0x00000000, model64: 0x213f0000213ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213ff00021405, model64: 0x2140500021419},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214190002141f, model64: 0x2141f0002142f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2658, match64: 0x00000000, model64: 0x2142f00021436},
		modelTuple{type64: 0x2700000027, matchRI: 0x2659, match64: 0x00000000, model64: 0x214360002143b},
		modelTuple{type64: 0x2700000027, matchRI: 0x265a, match64: 0x00000000, model64: 0x2143b00021443},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2144300021447, model64: 0x2144700021450},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2145000021454, model64: 0x214540002145b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2145b0002145f, model64: 0x2145f00021467},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214670002146b, model64: 0x2146b00021472},
		modelTuple{type64: 0x2700000027, matchRI: 0x265b, match64: 0x00000000, model64: 0x214720002147e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2147e00021483, model64: 0x214830002148d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2148d00021491, model64: 0x214910002149a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2149a0002149e, model64: 0x2149e000214a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214a7000214ab, model64: 0x214ab000214b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214b1000214b5, model64: 0x214b5000214be},
		modelTuple{type64: 0x2700000027, matchRI: 0x265c, match64: 0x00000000, model64: 0x214be000214c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214c9000214cf, model64: 0x214cf000214da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214da000214e0, model64: 0x214e0000214eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x265d, match64: 0x00000000, model64: 0x214eb000214f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214f6000214fc, model64: 0x214fc0002150a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2150a00021510, model64: 0x215100002151e},
		modelTuple{type64: 0x2700000027, matchRI: 0x265e, match64: 0x00000000, model64: 0x2151e00021524},
		modelTuple{type64: 0x2700000027, matchRI: 0x265f, match64: 0x00000000, model64: 0x215240002152a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2660, match64: 0x00000000, model64: 0x2152a00021531},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2153100021537, model64: 0x2153700021542},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2154200021546, model64: 0x215460002154f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2154f00021555, model64: 0x2155500021561},
		modelTuple{type64: 0x2700000027, matchRI: 0x2661, match64: 0x00000000, model64: 0x2156100021568},
		modelTuple{type64: 0x2700000027, matchRI: 0x2662, match64: 0x00000000, model64: 0x215680002156e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2663, match64: 0x00000000, model64: 0x2156e00021577},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215770002157c, model64: 0x2157c00021587},
		modelTuple{type64: 0x2700000027, matchRI: 0x2664, match64: 0x00000000, model64: 0x20cb900020cbf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215870002158c, model64: 0x2158c00021596},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215960002159b, model64: 0x2159b000215a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215a2000215a8, model64: 0x215a8000215b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2665, match64: 0x00000000, model64: 0x215b3000215be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215be000215c3, model64: 0x215c3000215c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215c9000215d0, model64: 0x215c9000215d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2666, match64: 0x00000000, model64: 0x215d0000215d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215d4000215da, model64: 0x2137d00021388},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe02b0000e02f, model64: 0x215da000215df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215df000215e3, model64: 0x215e3000215e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2667, match64: 0x00000000, model64: 0x198200001985},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215e9000215ee, model64: 0x215ee000215f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2668, match64: 0x00000000, model64: 0x215f5000215fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2669, match64: 0x00000000, model64: 0x215fa000215fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x266a, match64: 0x00000000, model64: 0x215fe00021603},
		modelTuple{type64: 0x2700000027, matchRI: 0x266b, match64: 0x00000000, model64: 0x2160300021610},
		modelTuple{type64: 0x2700000027, matchRI: 0x266c, match64: 0x00000000, model64: 0x216100002161f},
		modelTuple{type64: 0x2700000027, matchRI: 0x266d, match64: 0x00000000, model64: 0x2161f00021625},
		modelTuple{type64: 0x2700000027, matchRI: 0x266e, match64: 0x00000000, model64: 0x2162500021631},
		modelTuple{type64: 0x2700000027, matchRI: 0x266f, match64: 0x00000000, model64: 0x2163100021642},
		modelTuple{type64: 0x2700000027, matchRI: 0x2670, match64: 0x00000000, model64: 0x2164200021648},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2164800021651, model64: 0x216510002165f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2165f00021667, model64: 0x2166700021672},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x216720002167a, model64: 0x2167a0002168a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2168a00021692, model64: 0x216920002169a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2671, match64: 0x00000000, model64: 0x2169a000216a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2672, match64: 0x00000000, model64: 0x2169a000216a7},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2673, match64: 0x00000000, model64: 0x216a7000216b1},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x216b1000216b9, model64: 0x216b9000216ca},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2674, match64: 0x00000000, model64: 0x216ca000216d6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2675, match64: 0x00000000, model64: 0x216d6000216e4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2676, match64: 0x00000000, model64: 0x216e4000216f2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2677, match64: 0x00000000, model64: 0x216f200021702},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2678, match64: 0x00000000, model64: 0x2170200021708},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2679, match64: 0x00000000, model64: 0x2170800021711},
		modelTuple{type64: 0x2700000027, matchRI: 0x267a, match64: 0x00000000, model64: 0x217110002171d},
		modelTuple{type64: 0x2700000027, matchRI: 0x267b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x267c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x267d, match64: 0x00000000, model64: 0x2128a00021292},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2171d0002172a, model64: 0x2172a00021733},
		modelTuple{type64: 0x2700000027, matchRI: 0x267e, match64: 0x00000000, model64: 0x2111100021119},
		modelTuple{type64: 0x2700000027, matchRI: 0x267f, match64: 0x00000000, model64: 0x211220002112a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2680, match64: 0x00000000, model64: 0x2112a00021133},
		modelTuple{type64: 0x2700000027, matchRI: 0x2681, match64: 0x00000000, model64: 0x2128a00021292},
		modelTuple{type64: 0x2700000027, matchRI: 0x2682, match64: 0x00000000, model64: 0x2128a00021292},
		modelTuple{type64: 0x2700000027, matchRI: 0x2683, match64: 0x00000000, model64: 0x217330002173d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2684, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2685, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2686, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2174000021744, model64: 0x944d0000944f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2174400021749, model64: 0x2174900021751},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2175100021756, model64: 0x217560002175d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2175d00021762, model64: 0x2176200021769},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x217690002176e, model64: 0x217690002176e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2176e00021773, model64: 0x2176e00021773},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2177300021778, model64: 0x217780002177e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2177e00021783, model64: 0x217830002178a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2178a0002178f, model64: 0x2178f00021796},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x217960002179b, model64: 0x217960002179b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2179b000217a2, model64: 0x217a2000217a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x217a9000217ad, model64: 0x217ad000217b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x217b5000217b9, model64: 0x217b9000217be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x217be000217c1, model64: 0x217c1000217c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2688, match64: 0x00000000, model64: 0x217c6000217cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2689, match64: 0x00000000, model64: 0x217cd000217d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x268a, match64: 0x00000000, model64: 0x217d1000217db},
		modelTuple{type64: 0x2700000027, matchRI: 0x268b, match64: 0x00000000, model64: 0x217db000217e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x268c, match64: 0x00000000, model64: 0x217e4000217ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x268d, match64: 0x00000000, model64: 0x217ed000217f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x268e, match64: 0x00000000, model64: 0x217f4000217f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x268f, match64: 0x00000000, model64: 0x217f800021803},
		modelTuple{type64: 0x2700000027, matchRI: 0x2690, match64: 0x00000000, model64: 0x2180300021808},
		modelTuple{type64: 0x2700000027, matchRI: 0x2691, match64: 0x00000000, model64: 0x2180800021817},
		modelTuple{type64: 0x2700000027, matchRI: 0x2692, match64: 0x00000000, model64: 0x2181700021822},
		modelTuple{type64: 0x2700000027, matchRI: 0x2693, match64: 0x00000000, model64: 0x2182200021826},
		modelTuple{type64: 0x2700000027, matchRI: 0x2694, match64: 0x00000000, model64: 0x2182600021830},
		modelTuple{type64: 0x2700000027, matchRI: 0x2695, match64: 0x00000000, model64: 0x2183000021839},
		modelTuple{type64: 0x2700000027, matchRI: 0x2696, match64: 0x00000000, model64: 0x2183900021842},
		modelTuple{type64: 0x2700000027, matchRI: 0x2697, match64: 0x00000000, model64: 0x218420002184a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2698, match64: 0x00000000, model64: 0x2184a0002184f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x2184f00021858, model64: 0x2185800021861},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x2186100021868, model64: 0x218680002186b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x269c, match64: 0x00000000, model64: 0x107380001073f},
		modelTuple{type64: 0x2700000027, matchRI: 0x269d, match64: 0x00000000, model64: 0x2187c00021880},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x218800002188b, model64: 0x2188b00021897},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21897000218a2, model64: 0x218a2000218af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x218af000218ba, model64: 0x218ba000218c5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x218c5000218cb, model64: 0x218cb000218cf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1507000015076},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a0, match64: 0x00000000, model64: 0x218dc000218e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x218e3000218eb, model64: 0x218eb000218f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x26a3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x26a4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x940000009f, matchRI: 0x26a5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2190c00021916, model64: 0x2191600021921},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ab, match64: 0x00000000, model64: 0x219210002192e},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ac, match64: 0x00000000, model64: 0x2192e0002193d},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ad, match64: 0x00000000, model64: 0x2193d0002194d},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ae, match64: 0x00000000, model64: 0x2194d0002195d},
		modelTuple{type64: 0x2700000027, matchRI: 0x26af, match64: 0x00000000, model64: 0x2195d0002196a},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b0, match64: 0x00000000, model64: 0x2196a00021975},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b1, match64: 0x00000000, model64: 0x219750002197f},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b2, match64: 0x00000000, model64: 0x2197f0002198b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b3, match64: 0x00000000, model64: 0x2198b0002199a},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b4, match64: 0x00000000, model64: 0x2199a000219a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b5, match64: 0x00000000, model64: 0x219a6000219b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b6, match64: 0x00000000, model64: 0x219b3000219c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x219c5000219ca, model64: 0x219ca000219d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x219d2000219d7, model64: 0x219d7000219df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x219df000219e4, model64: 0x219e4000219e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x219e7000219ec, model64: 0x219ec000219f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x219f5000219fa, model64: 0x218f3000218f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x26bb, match64: 0x00000000, model64: 0x21a0300021a0d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x21a1300021a17},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21a2000021a26, model64: 0x21a2600021a2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21a3200021a42, model64: 0x21a4200021a55},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21a5500021a60, model64: 0x21a6000021a6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c1, match64: 0x00000000, model64: 0x13ccc00013cd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c2, match64: 0x00000000, model64: 0x21a6f00021a7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c3, match64: 0x00000000, model64: 0x21a7a00021a82},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c4, match64: 0x00000000, model64: 0x21a8200021a8e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21a8e00021a9b, model64: 0x21a8e00021a9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c5, match64: 0x00000000, model64: 0x21a9b00021aa3},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x21aa800021aad, model64: 0x21aad00021ab2},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x21ab700021abb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26cc, match64: 0x00000000, model64: 0x21ac800021acd},
		modelTuple{type64: 0x2700000027, matchRI: 0x26cd, match64: 0x00000000, model64: 0x21acd00021ad5},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ce, match64: 0x00000000, model64: 0x21ad500021adb},
		modelTuple{type64: 0x2700000027, matchRI: 0x26cf, match64: 0x00000000, model64: 0x1f6dd0001f6e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d0, match64: 0x00000000, model64: 0x21adb00021ae7},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d1, match64: 0x00000000, model64: 0x21ae700021aed},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d2, match64: 0x00000000, model64: 0x21aed00021af4},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d3, match64: 0x00000000, model64: 0x21af400021afb},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d4, match64: 0x00000000, model64: 0x21afb00021b05},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d5, match64: 0x00000000, model64: 0x7aa100007aa7},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d6, match64: 0x00000000, model64: 0x21b0500021b0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d7, match64: 0x00000000, model64: 0x21b0e00021b14},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d8, match64: 0x00000000, model64: 0x21b1400021b1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d9, match64: 0x00000000, model64: 0x21b1b00021b22},
		modelTuple{type64: 0x2700000027, matchRI: 0x26da, match64: 0x00000000, model64: 0x21b2200021b2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x26db, match64: 0x00000000, model64: 0x21b2a00021b35},
		modelTuple{type64: 0x2700000027, matchRI: 0x26dc, match64: 0x00000000, model64: 0x21b3500021b40},
		modelTuple{type64: 0x2700000027, matchRI: 0x26dd, match64: 0x00000000, model64: 0x21b4000021b47},
		modelTuple{type64: 0x2700000027, matchRI: 0x26de, match64: 0x00000000, model64: 0x21b4700021b50},
		modelTuple{type64: 0x2700000027, matchRI: 0x26df, match64: 0x00000000, model64: 0x21b5000021b55},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e0, match64: 0x00000000, model64: 0x21b5500021b5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e1, match64: 0x00000000, model64: 0x21b5c00021b61},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e2, match64: 0x00000000, model64: 0x21b6100021b69},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e3, match64: 0x00000000, model64: 0x21b6900021b76},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e4, match64: 0x00000000, model64: 0x21b7600021b7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b8000021b88, model64: 0x21b8800021b90},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e7, match64: 0x00000000, model64: 0x21b9000021b97},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e8, match64: 0x00000000, model64: 0x21b9700021b9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b9d00021bab, model64: 0x21bab00021bb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21bb900021bc2, model64: 0x21bc200021bcb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21bcb00021bd5, model64: 0x21bd500021bdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e9, match64: 0x00000000, model64: 0x21bdf00021be6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21be600021bf0, model64: 0x21bf000021bfa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21bfa00021c01, model64: 0x21c0100021c08},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ea, match64: 0x00000000, model64: 0x21c0800021c0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c0f00021c15, model64: 0x21c1500021c1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c1b00021c1f, model64: 0x14a3f00014a43},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c1f00021c24, model64: 0x21c2400021c29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c2900021c34, model64: 0x21c3400021c3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c3f00021c4b, model64: 0x21c4b00021c57},
		modelTuple{type64: 0x2700000027, matchRI: 0x26eb, match64: 0x00000000, model64: 0x21c5700021c61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c6100021c6d, model64: 0x21c6d00021c79},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c7900021c84, model64: 0x21c8400021c8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c8f00021c96, model64: 0x21c9600021c9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ec, match64: 0x00000000, model64: 0x21c9d00021ca7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21ca700021cb3, model64: 0x21ca700021cb3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21cb300021cc0, model64: 0x21cc000021cce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21cce00021cda, model64: 0x21cda00021ce7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21ce700021cef, model64: 0x21cef00021cf7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21cf700021cfd, model64: 0x21cfd00021d03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d0300021d07, model64: 0x21d0700021d0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d0b00021d12, model64: 0x21d1200021d19},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ed, match64: 0x00000000, model64: 0x21d1900021d22},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ee, match64: 0x00000000, model64: 0x21d2200021d26},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ef, match64: 0x00000000, model64: 0x21d2600021d2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d2b00021d30, model64: 0x21d3000021d35},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f5, match64: 0x00000000, model64: 0x21d3900021d41},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f6, match64: 0x00000000, model64: 0x21d3900021d41},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x21d4600021d4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d6500021d6b, model64: 0x21d6500021d6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26fa, match64: 0x00000000, model64: 0x21d6b00021d70},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x21d7000021d76, model64: 0x21d7000021d76},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x21d7900021d82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d8600021d8e, model64: 0x21d8e00021d9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d9b00021da5, model64: 0x21da500021db2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21db200021dbc, model64: 0x21dbc00021dc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21dc900021dd6, model64: 0x21dd600021de3},
		modelTuple{type64: 0x2700000027, matchRI: 0x26fd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ff, match64: 0x00000000, model64: 0x21de500021def},
		modelTuple{type64: 0x2700000027, matchRI: 0x2700, match64: 0x00000000, model64: 0x21def00021dff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2701, match64: 0x00000000, model64: 0x21dff00021e10},
		modelTuple{type64: 0x2700000027, matchRI: 0x2702, match64: 0x00000000, model64: 0xcfb20000cfb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2703, match64: 0x00000000, model64: 0x506300005068},
		modelTuple{type64: 0x2700000027, matchRI: 0x2704, match64: 0x00000000, model64: 0x21e1000021e17},
		modelTuple{type64: 0x2700000027, matchRI: 0x2705, match64: 0x00000000, model64: 0x21e1700021e1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2706, match64: 0x00000000, model64: 0x21e1e00021e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x2707, match64: 0x00000000, model64: 0x21e2500021e2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2708, match64: 0x00000000, model64: 0x7a7b00007a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x2709, match64: 0x00000000, model64: 0x21e2b00021e2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x270a, match64: 0x00000000, model64: 0x21e2e00021e37},
		modelTuple{type64: 0x2700000027, matchRI: 0x270b, match64: 0x00000000, model64: 0x707300007079},
		modelTuple{type64: 0x2700000027, matchRI: 0x270c, match64: 0x00000000, model64: 0x21e3700021e3e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x270d, match64: 0x00000000, model64: 0x1aa400001aa46},
		modelTuple{type64: 0x2700000027, matchRI: 0x270e, match64: 0x00000000, model64: 0x21e3e00021e4d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21e4d00021e55, model64: 0x21e5500021e60},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21e6000021e68, model64: 0x21e6000021e68},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21e6800021e70, model64: 0x14e9d00014ea0},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21e7000021e78, model64: 0x21e7800021e7e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21e7e00021e86, model64: 0x21e8600021e8c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x270f, match64: 0x00000000, model64: 0x21e8c00021e91},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21e9100021e99, model64: 0x21e9900021e9d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21e9d00021ea5, model64: 0x21ea500021eab},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2710, match64: 0x00000000, model64: 0x21eab00021eb1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21eb100021eb9, model64: 0x12c8600012c89},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21eb900021ec1, model64: 0x3670000036a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21ec100021ec9, model64: 0x21ec900021ece},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21ece00021ed5, model64: 0x21ed500021edc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2711, match64: 0x00000000, model64: 0x707300007079},
		modelTuple{type64: 0x2700000027, matchRI: 0x2712, match64: 0x00000000, model64: 0x361d00003621},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21edc00021ee4, model64: 0x21ee400021ef1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21ef100021ef9, model64: 0x21ef900021f03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21f0300021f0b, model64: 0x1737c00017380},
		modelTuple{type64: 0x2700000027, matchRI: 0x2713, match64: 0x00000000, model64: 0x21f0b00021f13},
		modelTuple{type64: 0x2700000027, matchRI: 0x2714, match64: 0x00000000, model64: 0x21f1300021f1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2715, match64: 0x00000000, model64: 0x21f1a00021f1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2716, match64: 0x00000000, model64: 0x21f1f00021f29},
		modelTuple{type64: 0x2700000027, matchRI: 0x2717, match64: 0x00000000, model64: 0x21f2900021f2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2718, match64: 0x00000000, model64: 0x1350d00013514},
		modelTuple{type64: 0x2700000027, matchRI: 0x2719, match64: 0x00000000, model64: 0x21f2f00021f34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21f3400021f3b, model64: 0x5bab00005baf},
		modelTuple{type64: 0x2700000027, matchRI: 0x271a, match64: 0x00000000, model64: 0x21f3b00021f3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x271b, match64: 0x00000000, model64: 0x21f3f00021f48},
		modelTuple{type64: 0x2700000027, matchRI: 0x271c, match64: 0x00000000, model64: 0x21f4800021f50},
		modelTuple{type64: 0x2700000027, matchRI: 0x271d, match64: 0x00000000, model64: 0x21f5000021f58},
		modelTuple{type64: 0x2700000027, matchRI: 0x271e, match64: 0x00000000, model64: 0x21f5800021f5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x271f, match64: 0x00000000, model64: 0x21f5c00021f60},
		modelTuple{type64: 0x2700000027, matchRI: 0x2720, match64: 0x00000000, model64: 0x408000004084},
		modelTuple{type64: 0x2700000027, matchRI: 0x2721, match64: 0x00000000, model64: 0x21f6000021f6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2722, match64: 0x00000000, model64: 0x21f6e00021f73},
		modelTuple{type64: 0x2700000027, matchRI: 0x2723, match64: 0x00000000, model64: 0x21f7300021f7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2724, match64: 0x00000000, model64: 0x21f7c00021f8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2725, match64: 0x00000000, model64: 0x21def00021dff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2726, match64: 0x00000000, model64: 0x21f8f00021f97},
		modelTuple{type64: 0x2700000027, matchRI: 0x2727, match64: 0x00000000, model64: 0x21f9700021f9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2728, match64: 0x00000000, model64: 0x21f9f00021fb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2729, match64: 0x00000000, model64: 0x21fb000021fb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x272a, match64: 0x00000000, model64: 0x21fb600021fba},
		modelTuple{type64: 0x2700000027, matchRI: 0x272b, match64: 0x00000000, model64: 0x21fba00021fc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x272c, match64: 0x00000000, model64: 0x9b2600009b2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x272d, match64: 0x00000000, model64: 0x21fc300021fcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x272e, match64: 0x00000000, model64: 0x21fcb00021fd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x272f, match64: 0x00000000, model64: 0xac000000ac7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2730, match64: 0x00000000, model64: 0x21fd400021fdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2731, match64: 0x00000000, model64: 0x21fdc00021fe7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2732, match64: 0x00000000, model64: 0x21fe700021ff2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2733, match64: 0x00000000, model64: 0x21ff200021ff8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2734, match64: 0x00000000, model64: 0x21ff800021fff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2735, match64: 0x00000000, model64: 0x21fff0002200c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2736, match64: 0x00000000, model64: 0x1aa400001aa46},
		modelTuple{type64: 0x2700000027, matchRI: 0x2737, match64: 0x00000000, model64: 0x2200c00022016},
		modelTuple{type64: 0x2700000027, matchRI: 0x2738, match64: 0x00000000, model64: 0x4b3600004b3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2739, match64: 0x00000000, model64: 0x220160002201d},
		modelTuple{type64: 0x2700000027, matchRI: 0x273a, match64: 0x00000000, model64: 0x2201d00022023},
		modelTuple{type64: 0x2700000027, matchRI: 0x273b, match64: 0x00000000, model64: 0x2202300022027},
		modelTuple{type64: 0x2700000027, matchRI: 0x273c, match64: 0x00000000, model64: 0x220270002202d},
		modelTuple{type64: 0x2700000027, matchRI: 0x273d, match64: 0x00000000, model64: 0x2202d00022033},
		modelTuple{type64: 0x2700000027, matchRI: 0x273e, match64: 0x00000000, model64: 0x220330002203d},
		modelTuple{type64: 0x2700000027, matchRI: 0x273f, match64: 0x00000000, model64: 0x2203d00022049},
		modelTuple{type64: 0x2700000027, matchRI: 0x2740, match64: 0x00000000, model64: 0x220490002205a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2741, match64: 0x00000000, model64: 0x2205a00022062},
		modelTuple{type64: 0x2700000027, matchRI: 0x2742, match64: 0x00000000, model64: 0x7a7b00007a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x2743, match64: 0x00000000, model64: 0x2206200022069},
		modelTuple{type64: 0x2700000027, matchRI: 0x2744, match64: 0x00000000, model64: 0x2206900022073},
		modelTuple{type64: 0x2700000027, matchRI: 0x2745, match64: 0x00000000, model64: 0x4b0b00004b12},
		modelTuple{type64: 0x2700000027, matchRI: 0x2746, match64: 0x00000000, model64: 0xffe50000ffea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220730002207b, model64: 0x2207b00022080},
		modelTuple{type64: 0x2700000027, matchRI: 0x2747, match64: 0x00000000, model64: 0x100390001003d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2748, match64: 0x00000000, model64: 0x408000004084},
		modelTuple{type64: 0x2700000027, matchRI: 0x2749, match64: 0x00000000, model64: 0x220800002208f},
		modelTuple{type64: 0x2700000027, matchRI: 0x274a, match64: 0x00000000, model64: 0x2208f00022095},
		modelTuple{type64: 0x2700000027, matchRI: 0x274b, match64: 0x00000000, model64: 0x220950002209a},
		modelTuple{type64: 0x2700000027, matchRI: 0x274c, match64: 0x00000000, model64: 0x2209a000220a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x274d, match64: 0x00000000, model64: 0x72580000725f},
		modelTuple{type64: 0x2700000027, matchRI: 0x274e, match64: 0x00000000, model64: 0x220a4000220ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x274f, match64: 0x00000000, model64: 0x220ac000220b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2750, match64: 0x00000000, model64: 0x220b0000220b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2751, match64: 0x00000000, model64: 0x2202d00022033},
		modelTuple{type64: 0x2700000027, matchRI: 0x2752, match64: 0x00000000, model64: 0x220b5000220b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2753, match64: 0x00000000, model64: 0x220b9000220c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2754, match64: 0x00000000, model64: 0x220c1000220cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2755, match64: 0x00000000, model64: 0x220cc000220d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2756, match64: 0x00000000, model64: 0x220d0000220db},
		modelTuple{type64: 0x2700000027, matchRI: 0x2757, match64: 0x00000000, model64: 0x220db000220e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2758, match64: 0x00000000, model64: 0x4b2300004b28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220e1000220e9, model64: 0x220e9000220f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220f5000220fd, model64: 0x9dd600009dda},
		modelTuple{type64: 0x2700000027, matchRI: 0x2759, match64: 0x00000000, model64: 0x220fd00022103},
		modelTuple{type64: 0x2700000027, matchRI: 0x275a, match64: 0x00000000, model64: 0x1bb880001bb8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x275b, match64: 0x00000000, model64: 0x9b8100009b85},
		modelTuple{type64: 0x2700000027, matchRI: 0x275c, match64: 0x00000000, model64: 0x221030002210e},
		modelTuple{type64: 0x2700000027, matchRI: 0x275d, match64: 0x00000000, model64: 0x2210e00022115},
		modelTuple{type64: 0x2700000027, matchRI: 0x275e, match64: 0x00000000, model64: 0x1d68b0001d690},
		modelTuple{type64: 0x2700000027, matchRI: 0x275f, match64: 0x00000000, model64: 0x221150002211e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2760, match64: 0x00000000, model64: 0x21e2b00021e2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2761, match64: 0x00000000, model64: 0x2211e00022125},
		modelTuple{type64: 0x2700000027, matchRI: 0x2762, match64: 0x00000000, model64: 0x221250002212f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2763, match64: 0x00000000, model64: 0x2212f00022136},
		modelTuple{type64: 0x2700000027, matchRI: 0x2764, match64: 0x00000000, model64: 0x221360002213b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2765, match64: 0x00000000, model64: 0x2213b00022140},
		modelTuple{type64: 0x2700000027, matchRI: 0x2766, match64: 0x00000000, model64: 0x2214000022145},
		modelTuple{type64: 0x2700000027, matchRI: 0x2767, match64: 0x00000000, model64: 0x221450002214d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2768, match64: 0x00000000, model64: 0x2214d00022153},
		modelTuple{type64: 0x2700000027, matchRI: 0x2769, match64: 0x00000000, model64: 0x2215300022159},
		modelTuple{type64: 0x2700000027, matchRI: 0x276a, match64: 0x00000000, model64: 0x2215900022161},
		modelTuple{type64: 0x2700000027, matchRI: 0x276b, match64: 0x00000000, model64: 0x221610002216a},
		modelTuple{type64: 0x2700000027, matchRI: 0x276c, match64: 0x00000000, model64: 0x2216a0002216f},
		modelTuple{type64: 0x2700000027, matchRI: 0x276d, match64: 0x00000000, model64: 0x2216f00022173},
		modelTuple{type64: 0x2700000027, matchRI: 0x276e, match64: 0x00000000, model64: 0x83bf000083c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x276f, match64: 0x00000000, model64: 0x221730002217b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2770, match64: 0x00000000, model64: 0x141f4000141f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2771, match64: 0x00000000, model64: 0x1d75e0001d764},
		modelTuple{type64: 0x2700000027, matchRI: 0x2772, match64: 0x00000000, model64: 0x2217b00022184},
		modelTuple{type64: 0x2700000027, matchRI: 0x2773, match64: 0x00000000, model64: 0x1bb0d0001bb13},
		modelTuple{type64: 0x2700000027, matchRI: 0x2774, match64: 0x00000000, model64: 0x221840002218c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2775, match64: 0x00000000, model64: 0x2218c00022194},
		modelTuple{type64: 0x2700000027, matchRI: 0x2776, match64: 0x00000000, model64: 0x2219400022199},
		modelTuple{type64: 0x2700000027, matchRI: 0x2777, match64: 0x00000000, model64: 0x22199000221a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x221a1000221b1, model64: 0x221b1000221b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2778, match64: 0x00000000, model64: 0x221b8000221c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2779, match64: 0x00000000, model64: 0x221c0000221c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x277a, match64: 0x00000000, model64: 0x221c7000221d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x277b, match64: 0x00000000, model64: 0x221d1000221dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x277c, match64: 0x00000000, model64: 0x221dc000221df},
		modelTuple{type64: 0x2700000027, matchRI: 0x277d, match64: 0x00000000, model64: 0x1af3a0001af3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x277e, match64: 0x00000000, model64: 0x221df000221e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x277f, match64: 0x00000000, model64: 0x221e6000221ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2780, match64: 0x00000000, model64: 0x221ee000221f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2781, match64: 0x00000000, model64: 0x221f6000221fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2782, match64: 0x00000000, model64: 0x221fb00022205},
		modelTuple{type64: 0x2700000027, matchRI: 0x2783, match64: 0x00000000, model64: 0x222050002220b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2784, match64: 0x00000000, model64: 0x2220b0002220f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2785, match64: 0x00000000, model64: 0x2220f00022215},
		modelTuple{type64: 0x2700000027, matchRI: 0x2786, match64: 0x00000000, model64: 0x222150002221f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2787, match64: 0x00000000, model64: 0x2221f00022225},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2788, match64: 0x00000000, model64: 0x2222500022233},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x222330002223b, model64: 0x2223b00022247},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2789, match64: 0x00000000, model64: 0x2224700022251},
		modelTuple{type64: 0x20d00000213, matchRI: 0x278a, match64: 0x00000000, model64: 0x222510002225f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x278b, match64: 0x00000000, model64: 0x2225f00022268},
		modelTuple{type64: 0x20d00000213, matchRI: 0x278c, match64: 0x00000000, model64: 0x2226800022275},
		modelTuple{type64: 0x20d00000213, matchRI: 0x278d, match64: 0x00000000, model64: 0x222750002227c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x278e, match64: 0x00000000, model64: 0x2227c00022283},
		modelTuple{type64: 0x20d00000213, matchRI: 0x278f, match64: 0x00000000, model64: 0x2228300022289},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2790, match64: 0x00000000, model64: 0x222890002228e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2791, match64: 0x00000000, model64: 0x2228e00022298},
		modelTuple{type64: 0x2700000027, matchRI: 0x2792, match64: 0x00000000, model64: 0x22298000222a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2793, match64: 0x00000000, model64: 0x21f2900021f2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2794, match64: 0x00000000, model64: 0x1d2750001d27c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2795, match64: 0x00000000, model64: 0x14c8e00014c92},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2796, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2797, match64: 0x00000000, model64: 0x222a5000222a9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x222a9000222b1, model64: 0x222b1000222bf},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x222bf000222c7, model64: 0x222c7000222d1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2798, match64: 0x00000000, model64: 0x222d1000222d5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2799, match64: 0x00000000, model64: 0x222d5000222dd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x279a, match64: 0x00000000, model64: 0x222dd000222e2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x279b, match64: 0x00000000, model64: 0x222e2000222e9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x279c, match64: 0x00000000, model64: 0x222e9000222ef},
		modelTuple{type64: 0x20d00000213, matchRI: 0x279d, match64: 0x00000000, model64: 0x222ef000222f4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x279e, match64: 0x00000000, model64: 0x222f4000222fa},
		modelTuple{type64: 0x20d00000213, matchRI: 0x279f, match64: 0x00000000, model64: 0x222fa00022305},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27a0, match64: 0x00000000, model64: 0x1dac00001daca},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27a1, match64: 0x00000000, model64: 0x14c9800014c9c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27a2, match64: 0x00000000, model64: 0x2230500022310},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27a3, match64: 0x00000000, model64: 0x2231000022316},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27a4, match64: 0x00000000, model64: 0x1158d00011592},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27a5, match64: 0x00000000, model64: 0x223160002231c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27a6, match64: 0x00000000, model64: 0x2231c00022321},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27a7, match64: 0x00000000, model64: 0x223210002232b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27a8, match64: 0x00000000, model64: 0x2232b0002232f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27a9, match64: 0x00000000, model64: 0x2232f00022334},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27aa, match64: 0x00000000, model64: 0x2233400022342},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27ab, match64: 0x00000000, model64: 0x223420002234b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27ac, match64: 0x00000000, model64: 0x2234b00022354},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27ad, match64: 0x00000000, model64: 0x223540002235d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27ae, match64: 0x00000000, model64: 0x2235d00022362},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27af, match64: 0x00000000, model64: 0x223620002236a},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b0, match64: 0x00000000, model64: 0x2228e00022298},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b1, match64: 0x00000000, model64: 0x2236a00022371},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27b2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x223710002237c, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x2238100022391, model64: 0x223910002239c},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b4, match64: 0x00000000, model64: 0x223a1000223b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b6, match64: 0x00000000, model64: 0x223b3000223c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x223c7000223d2, model64: 0x223d2000223d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x223d7000223eb, model64: 0x223eb000223ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x223ff00022418, model64: 0x224180002242b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2242b00022442, model64: 0x2244200022456},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2245600022471, model64: 0x2247100022486},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b7, match64: 0x00000000, model64: 0x224860002248d},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2248d00022494, model64: 0x224940002249b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27bc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x224ad000224b9, model64: 0x224b9000224c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x27be, match64: 0x00000000, model64: 0x224ca000224d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x27bf, match64: 0x00000000, model64: 0x224d3000224dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c0, match64: 0x00000000, model64: 0x224dc000224e6},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x27c1, match64: 0x00000000, model64: 0x224e6000224f1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27c2, match64: 0x00000000, model64: 0x224f1000224f8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27c3, match64: 0x00000000, model64: 0x224f8000224fe},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27c4, match64: 0x00000000, model64: 0x224fe00022502},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c5, match64: 0x00000000, model64: 0x225020002250b},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27c9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x27ca, match64: 0x00000000, model64: 0x2251900022523},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x27cb, match64: 0x00000000, model64: 0x2252300022528},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2252800022530, model64: 0x2253000022538},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2253800022543, model64: 0x225430002254e},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x27cc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27cd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ce, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x225530002255f, model64: 0x225530002255f},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2255f0002256f, model64: 0x2255f0002256f},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d1, match64: 0x00000000, model64: 0x1f3520001f357},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d2, match64: 0x00000000, model64: 0x2256f0002257b},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d3, match64: 0x00000000, model64: 0x2257b0002258c},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d4, match64: 0x00000000, model64: 0x2258c00022594},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x225940002259d, model64: 0x2259d000225a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x225a6000225b3, model64: 0x225b3000225c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d5, match64: 0x00000000, model64: 0x225c0000225c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d6, match64: 0x00000000, model64: 0x225c8000225d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d7, match64: 0x00000000, model64: 0x225d3000225e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d8, match64: 0x00000000, model64: 0x225e3000225f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27db, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27dc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27de, match64: 0x00000000, model64: 0xa7900000a7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x225fd00022603, model64: 0x226030002260a},
		modelTuple{type64: 0x2700000027, matchRI: 0x27df, match64: 0x00000000, model64: 0x2260a00022611},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e0, match64: 0x00000000, model64: 0x226110002261a},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e1, match64: 0x00000000, model64: 0x1f2600001f2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e2, match64: 0x00000000, model64: 0x2261a00022624},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e3, match64: 0x00000000, model64: 0x226240002262b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2262b00022631, model64: 0x2263100022638},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e4, match64: 0x00000000, model64: 0x226380002263c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2264600022650},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x226560002265f, model64: 0x2265f00022668},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2266800022670, model64: 0x2266800022670},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e8, match64: 0x00000000, model64: 0x2267000022677},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ea, match64: 0x00000000, model64: 0x2267b00022685},
		modelTuple{type64: 0x2700000027, matchRI: 0x27eb, match64: 0x00000000, model64: 0x406800004070},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2268a00022696, model64: 0x22696000226a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x226a2000226b0, model64: 0x226b0000226c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ed, match64: 0x00000000, model64: 0x226c0000226cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x226cf000226e0, model64: 0x226e0000226f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x226f3000226fd, model64: 0x226fd00022705},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ee, match64: 0x00000000, model64: 0x227050002270f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2270f0002271f, model64: 0x2271f0002272f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2272f00022742, model64: 0x2274200022755},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2275500022769, model64: 0x227690002277f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2277f00022793, model64: 0x22793000227a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x227a9000227b8, model64: 0x227b8000227c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ef, match64: 0x00000000, model64: 0x227c7000227d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x227d2000227dc, model64: 0x227dc000227e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x227e6000227f1, model64: 0x227f1000227fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x227fc00022804, model64: 0x227fc00022804},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f0, match64: 0x00000000, model64: 0x228040002280b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2280b00022812, model64: 0x2281200022819},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2281900022823, model64: 0x2202300022027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x228230002282d, model64: 0x228230002282d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2282d0002283f, model64: 0x2283f00022853},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2285300022865, model64: 0x2285300022865},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x228650002287b, model64: 0x2287b00022893},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22893000228a1, model64: 0x228a1000228b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x228b4000228c4, model64: 0x228c4000228d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x228d4000228e0, model64: 0x228d4000228e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x228e0000228f0, model64: 0x228f000022902},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2290200022913, model64: 0x2291300022926},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2292600022932, model64: 0x229320002293e},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f1, match64: 0x00000000, model64: 0x2293e00022946},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229460002294d, model64: 0x2294d00022954},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2295400022961, model64: 0x2296100022970},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f2, match64: 0x00000000, model64: 0x2297000022985},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2298500022996, model64: 0x22996000229a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229a9000229b2, model64: 0x229b2000229bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229bb000229c3, model64: 0x229c3000229cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229cb000229e1, model64: 0x229e1000229f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f7, match64: 0x00000000, model64: 0x432900004330},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a0f00022a19, model64: 0x22a1900022a23},
		modelTuple{type64: 0x2700000027, matchRI: 0x27fb, match64: 0x00000000, model64: 0x22a2300022a2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x27fc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a2a00022a34, model64: 0x22a2a00022a34},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x27fd, match64: 0x00000000, model64: 0x22a3400022a3d},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x27fe, match64: 0x00000000, model64: 0x22a3d00022a46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a4900022a4f, model64: 0x22a4f00022a56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a5600022a5f, model64: 0x22a5f00022a69},
		modelTuple{type64: 0x2700000027, matchRI: 0x2800, match64: 0x00000000, model64: 0x22a6900022a6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2801, match64: 0x00000000, model64: 0x22a6f00022a77},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a8000022a8d, model64: 0x22a8d00022a94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a9400022a9a, model64: 0x22a9a00022aa0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22aa000022aac, model64: 0x22aac00022ab8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2805, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2806, match64: 0x00000000, model64: 0x22abc00022ac4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ace00022ad7, model64: 0x22ad700022ade},
		modelTuple{type64: 0x2700000027, matchRI: 0x280a, match64: 0x00000000, model64: 0x22ae200022ae5},
		modelTuple{type64: 0x2700000027, matchRI: 0x280b, match64: 0x00000000, model64: 0x22ae500022ae9},
		modelTuple{type64: 0x2700000027, matchRI: 0x280c, match64: 0x00000000, model64: 0x22ae900022af0},
		modelTuple{type64: 0x2700000027, matchRI: 0x280d, match64: 0x00000000, model64: 0x22af000022af3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x280e, match64: 0x00000000, model64: 0x22af300022afd},
		modelTuple{type64: 0x2700000027, matchRI: 0x280f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b0700022b12, model64: 0x22b1200022b19},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b1900022b1f, model64: 0x131ba000131bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b1f00022b25, model64: 0x35b7000035b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b2b00022b30, model64: 0x22b2b00022b30},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b3000022b3b, model64: 0x22b3b00022b46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b4600022b4d, model64: 0x22b4d00022b54},
		modelTuple{type64: 0x2700000027, matchRI: 0x2812, match64: 0x00000000, model64: 0x22b5400022b5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2813, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2814, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2815, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2817, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2819, match64: 0x00000000, model64: 0x22b7700022b81},
		modelTuple{type64: 0x2700000027, matchRI: 0x281a, match64: 0x00000000, model64: 0x22b8100022b89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b8900022b91, model64: 0x22b9100022b9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b9a00022ba1, model64: 0x22ba100022ba9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ba900022bb0, model64: 0x22ba900022bb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x281b, match64: 0x00000000, model64: 0x22bb000022bb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22bb800022bc3, model64: 0x22bc300022bcf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22bcf00022bd5, model64: 0x22bd500022bdc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22bdc00022be3, model64: 0x22be300022beb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22beb00022bf6, model64: 0x22bf600022c02},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c0200022c09, model64: 0x22c0900022c11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c1100022c17, model64: 0x22c1700022c1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c1e00022c25, model64: 0x22c2500022c2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c2d00022c38, model64: 0x22c3800022c44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c4400022c4a, model64: 0x22c4a00022c51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c5100022c59, model64: 0x22c5900022c62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c6200022c68, model64: 0x22c6200022c68},
		modelTuple{type64: 0x2700000027, matchRI: 0x281c, match64: 0x00000000, model64: 0x22c6800022c73},
		modelTuple{type64: 0x2700000027, matchRI: 0x281d, match64: 0x00000000, model64: 0x22c7300022c7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x281e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x22c7b00022c80, model64: 0x22c8000022c86},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x22c9200022c9a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2823, match64: 0x00000000, model64: 0x22ca500022cae},
		modelTuple{type64: 0x2700000027, matchRI: 0x2824, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2825, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2827, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2828, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x282a, match64: 0x00000000, model64: 0x22cb800022cbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x282b, match64: 0x00000000, model64: 0x22cbd00022cc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x282c, match64: 0x00000000, model64: 0x22cc300022cc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x282d, match64: 0x00000000, model64: 0x22cc700022ccb},
		modelTuple{type64: 0x2700000027, matchRI: 0x282e, match64: 0x00000000, model64: 0x106750001067b},
		modelTuple{type64: 0x2700000027, matchRI: 0x282f, match64: 0x00000000, model64: 0x22ccb00022cd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2830, match64: 0x00000000, model64: 0x1189200011895},
		modelTuple{type64: 0x2700000027, matchRI: 0x2831, match64: 0x00000000, model64: 0x7c2c00007c31},
		modelTuple{type64: 0x2700000027, matchRI: 0x2833, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2834, match64: 0x00000000, model64: 0x22cde00022ce3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x22cec00022cf1, model64: 0x1e67c0001e67f},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x22cf100022cf6, model64: 0x22cf600022cfd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22cfd00022d02, model64: 0x13b5400013b57},
		modelTuple{type64: 0x2700000027, matchRI: 0x2837, match64: 0x00000000, model64: 0x22d0200022d05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d0500022d0b, model64: 0x22d0b00022d0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d0f00022d14, model64: 0x22d1400022d17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d1700022d1c, model64: 0x22d1c00022d1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d1f00022d24, model64: 0x31c00000321},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d2400022d29, model64: 0x13b6f00013b72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d2900022d2e, model64: 0x22d2e00022d31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d3100022d36, model64: 0x22d3600022d3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2838, match64: 0x00000000, model64: 0x1e5e30001e5e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2839, match64: 0x00000000, model64: 0x22d3e00022d46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d4600022d4d, model64: 0x22d4d00022d5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d5a00022d5f, model64: 0x22d5f00022d62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d6200022d67, model64: 0xa1500000a153},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d6700022d6c, model64: 0x1e6970001e69e},
		modelTuple{type64: 0x2700000027, matchRI: 0x283a, match64: 0x00000000, model64: 0x22d6c00022d6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d6f00022d74, model64: 0x22d7400022d7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d7b00022d80, model64: 0x22d8000022d83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d8300022d88, model64: 0x22d8800022d90},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d9000022d95, model64: 0x22d9500022d9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d9c00022da1, model64: 0x22da100022da4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22da400022daa, model64: 0x13b2900013b2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22daa00022daf, model64: 0x22daf00022db7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22db700022dbc, model64: 0x22dbc00022dbf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22dbf00022dc4, model64: 0x22dc400022dc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22dc700022dcc, model64: 0x22dcc00022dcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x283b, match64: 0x00000000, model64: 0x22dcf00022dd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22dd700022ddc, model64: 0x22ddc00022de3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22de300022de8, model64: 0x22de800022deb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22deb00022df0, model64: 0x22df000022df3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22df300022df8, model64: 0x22df800022dfb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22dfb00022e00, model64: 0x22e0000022e03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e0300022e09, model64: 0x22e0900022e10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e1000022e16, model64: 0x1e65a0001e661},
		modelTuple{type64: 0x2700000027, matchRI: 0x283c, match64: 0x00000000, model64: 0x22cf600022cfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x283d, match64: 0x00000000, model64: 0x22e1600022e1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e1d00022e23, model64: 0x22e2300022e2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e2a00022e2f, model64: 0x22e2f00022e32},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e3200022e38, model64: 0x22df800022dfb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e3800022e3d, model64: 0x22e3d00022e40},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e4000022e45, model64: 0x22e4500022e48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e4800022e4e, model64: 0x22e4e00022e55},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e5500022e5b, model64: 0x22e5b00022e62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e6200022e67, model64: 0x13bcc00013bcf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e6700022e6c, model64: 0x22e6c00022e74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e7400022e7a, model64: 0x22e7a00022e7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e7e00022e84, model64: 0x22e8400022e87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e8700022e8c, model64: 0x22e8c00022e90},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e9000022e95, model64: 0x22e9500022e9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e9d00022ea2, model64: 0x22ea200022ea9},
		modelTuple{type64: 0x2700000027, matchRI: 0x283e, match64: 0x00000000, model64: 0x22ea900022eb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22eb000022eb5, model64: 0x22eb500022ebd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ebd00022ec3, model64: 0x13b5a00013b5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ec300022ec8, model64: 0x13b9600013b99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ec800022ecd, model64: 0x13bac00013baf},
		modelTuple{type64: 0x2700000027, matchRI: 0x283f, match64: 0x00000000, model64: 0x13b3700013b3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2840, match64: 0x00000000, model64: 0x7eba00007ebd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ecd00022ed2, model64: 0x22ed200022eda},
		modelTuple{type64: 0x2700000027, matchRI: 0x2841, match64: 0x00000000, model64: 0x22eda00022ee7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ee700022eec, model64: 0x22eec00022ef3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ef300022ef8, model64: 0x22ef800022f01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f0100022f06, model64: 0x22f0600022f13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f1300022f18, model64: 0x22f1800022f24},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f2400022f29, model64: 0xc4310000c439},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f2900022f32, model64: 0x22f2900022f32},
		modelTuple{type64: 0x2700000027, matchRI: 0x2842, match64: 0x00000000, model64: 0x22f3200022f3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2843, match64: 0x00000000, model64: 0x22f3200022f3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2844, match64: 0x00000000, model64: 0x22f3a00022f3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2845, match64: 0x00000000, model64: 0x22f3e00022f47},
		modelTuple{type64: 0x2700000027, matchRI: 0x2846, match64: 0x00000000, model64: 0x22f4700022f4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2847, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x22f4f00022f5a, model64: 0x22f5a00022f65},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x22f6500022f6f, model64: 0x22f6f00022f77},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x22f7700022f81, model64: 0x22f8100022f8b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2848, match64: 0x00000000, model64: 0x22f8b00022f99},
		modelTuple{type64: 0x2700000027, matchRI: 0x2849, match64: 0x00000000, model64: 0x22f9900022fa1},
		modelTuple{type64: 0x2700000027, matchRI: 0x284a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x284b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x22fa700022fae},
		modelTuple{type64: 0x2700000027, matchRI: 0x284e, match64: 0x00000000, model64: 0x22fb100022fb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x284f, match64: 0x00000000, model64: 0xebda0000ebdc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22fbe00022fc9, model64: 0x22fc900022fd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2851, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22fda00022fe2, model64: 0x22fe200022fea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22fea00022ff0, model64: 0x22ff000022ff4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ff400022ffb, model64: 0x22ffb00023002},
		modelTuple{type64: 0x2700000027, matchRI: 0x2853, match64: 0x00000000, model64: 0x2300200023004},
		modelTuple{type64: 0x2700000027, matchRI: 0x2854, match64: 0x00000000, model64: 0x2300400023009},
		modelTuple{type64: 0x2700000027, matchRI: 0x2855, match64: 0x00000000, model64: 0x230090002300e},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x2857, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x285b, match64: 0x00000000, model64: 0x2302700023034},
		modelTuple{type64: 0x2700000027, matchRI: 0x285c, match64: 0x00000000, model64: 0x2303400023040},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2304a0002305b, model64: 0x2305b00023067},
		modelTuple{type64: 0x2700000027, matchRI: 0x285f, match64: 0x00000000, model64: 0xdd280000dd2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2860, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2863, match64: 0x00000000, model64: 0x230730002307a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2864, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2865, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2868, match64: 0x00000000, model64: 0x230850002308a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2869, match64: 0x00000000, model64: 0x2308a0002308d},
		modelTuple{type64: 0x2700000027, matchRI: 0x286a, match64: 0x00000000, model64: 0x2308d0002308f},
		modelTuple{type64: 0x2700000027, matchRI: 0x286c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x230a5000230ac, model64: 0x230ac000230bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x230bd000230c4, model64: 0x230c4000230d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x230d3000230da, model64: 0x230da000230eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x230eb000230f2, model64: 0x230f2000230ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x230ff00023106, model64: 0x2310600023116},
		modelTuple{type64: 0x2700000027, matchRI: 0x286f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231160002311f, model64: 0x2311f00023129},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2312900023130, model64: 0x2313000023141},
		modelTuple{type64: 0x2700000027, matchRI: 0x2870, match64: 0x00000000, model64: 0x2314100023154},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2315400023164, model64: 0x2316400023177},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2317700023186, model64: 0x2318600023198},
		modelTuple{type64: 0x2700000027, matchRI: 0x2871, match64: 0x00000000, model64: 0x23198000231aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231aa000231ba, model64: 0x231ba000231cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231cd000231d9, model64: 0x231d9000231e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2872, match64: 0x00000000, model64: 0x231e5000231f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231f3000231fa, model64: 0x231fa0002320e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2873, match64: 0x00000000, model64: 0x2320e00023222},
		modelTuple{type64: 0x2700000027, matchRI: 0x2874, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2875, match64: 0x00000000, model64: 0x2322200023234},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x232340002323b, model64: 0x2323b0002324d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2876, match64: 0x00000000, model64: 0x2324d0002325f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2877, match64: 0x00000000, model64: 0x2325f00023270},
		modelTuple{type64: 0x2700000027, matchRI: 0x2878, match64: 0x00000000, model64: 0x2327000023283},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x232830002328a, model64: 0x2328a0002329c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2329c000232a3, model64: 0x232a3000232b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x232b5000232bc, model64: 0x232bc000232ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x232ce000232d5, model64: 0x232d5000232e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2879, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x232e8000232ef, model64: 0x232ef000232f5},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x287a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x232f5000232fc, model64: 0x232fc00023302},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2330200023309, model64: 0x2330900023310},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2331000023317, model64: 0x233170002331e},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x287b, match64: 0x00000000, model64: 0x2331e00023325},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x287c, match64: 0x00000000, model64: 0x2332500023331},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2333100023338, model64: 0x2333800023343},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x233430002334a, model64: 0x2334a00023356},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x233560002335d, model64: 0x709000007094},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2335d00023364, model64: 0x233640002336b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x287d, match64: 0x00000000, model64: 0x2336b00023373},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x233730002337a, model64: 0x2337a00023381},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2338100023388, model64: 0x233880002338f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x287e, match64: 0x00000000, model64: 0x2338f00023396},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x233960002339d, model64: 0x2339d000233a5},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x233a5000233ad, model64: 0x233ad000233ba},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x233ba000233c1, model64: 0x233c1000233c7},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x233c7000233ce, model64: 0x233ce000233d5},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x287f, match64: 0x00000000, model64: 0x233d5000233dc},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2880, match64: 0x00000000, model64: 0x233dc000233e2},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2881, match64: 0x00000000, model64: 0x233e2000233ef},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x233ef000233f6, model64: 0x233f6000233fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2883, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2884, match64: 0x00000000, model64: 0x234050002340b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2886, match64: 0x00000000, model64: 0x2340f00023415},
		modelTuple{type64: 0x2700000027, matchRI: 0x2887, match64: 0x00000000, model64: 0x234150002341d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2888, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2341d00023425, model64: 0x2341d00023425},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x974600009749, model64: 0x974600009749},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2342500023433, model64: 0x2342500023433},
		modelTuple{type64: 0x2700000027, matchRI: 0x2889, match64: 0x00000000, model64: 0x234330002343f},
		modelTuple{type64: 0x2700000027, matchRI: 0x288a, match64: 0x00000000, model64: 0x406800004070},
		modelTuple{type64: 0x2700000027, matchRI: 0x288b, match64: 0x00000000, model64: 0x2343f0002344d},
		modelTuple{type64: 0x2700000027, matchRI: 0x288d, match64: 0x00000000, model64: 0x2344d0002345b},
		modelTuple{type64: 0x2700000027, matchRI: 0x288e, match64: 0x00000000, model64: 0x2345b00023468},
		modelTuple{type64: 0x2700000027, matchRI: 0x288f, match64: 0x00000000, model64: 0x234680002346e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2891, match64: 0x00000000, model64: 0x2346e00023473},
		modelTuple{type64: 0x2700000027, matchRI: 0x2892, match64: 0x00000000, model64: 0x2347300023477},
		modelTuple{type64: 0x2700000027, matchRI: 0x2893, match64: 0x00000000, model64: 0x2347700023487},
		modelTuple{type64: 0x2700000027, matchRI: 0x2894, match64: 0x00000000, model64: 0x2348700023497},
		modelTuple{type64: 0x2700000027, matchRI: 0x2895, match64: 0x00000000, model64: 0x23497000234a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2896, match64: 0x00000000, model64: 0x234a3000234a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2897, match64: 0x00000000, model64: 0x234a9000234af},
		modelTuple{type64: 0x2700000027, matchRI: 0x2898, match64: 0x00000000, model64: 0x234af000234b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2899, match64: 0x00000000, model64: 0x234b5000234bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234bc000234ca, model64: 0x234bc000234ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234ca000234d7, model64: 0x234ca000234d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234d7000234e2, model64: 0x234d7000234e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234e2000234ed, model64: 0x234e2000234ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234ed0002350d, model64: 0x2350d00023521},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x235210002353a, model64: 0x2353a00023545},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2354500023557, model64: 0x2355700023563},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2356300023584, model64: 0x235840002359c},
		modelTuple{type64: 0x2700000027, matchRI: 0x289c, match64: 0x00000000, model64: 0x2359c000235a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x289d, match64: 0x00000000, model64: 0x96be000096c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x235a8000235c3, model64: 0x235c3000235cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x235cf000235e3, model64: 0x235e3000235eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x235eb00023606, model64: 0x2360600023612},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x2361200023630, model64: 0x2363000023656},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x236560002365d, model64: 0x2365d0002368e},
		modelTuple{type64: 0x2700000027, matchRI: 0x289f, match64: 0x00000000, model64: 0x2368e000236a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a0, match64: 0x00000000, model64: 0x236a1000236a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a1, match64: 0x00000000, model64: 0x236a7000236b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a2, match64: 0x00000000, model64: 0x236b8000236c3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x236cc000236e5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x236e5000236fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a5, match64: 0x00000000, model64: 0x1ce600001ce6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a6, match64: 0x00000000, model64: 0x1ce600001ce6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a8, match64: 0x00000000, model64: 0x2370c00023719},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a9, match64: 0x00000000, model64: 0x2371900023726},
		modelTuple{type64: 0x2700000027, matchRI: 0x28aa, match64: 0x00000000, model64: 0x2372600023732},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ab, match64: 0x00000000, model64: 0x237320002373e},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ac, match64: 0x00000000, model64: 0x2373e0002374a},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ad, match64: 0x00000000, model64: 0x2374a00023756},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ae, match64: 0x00000000, model64: 0x2375600023762},
		modelTuple{type64: 0x2700000027, matchRI: 0x28af, match64: 0x00000000, model64: 0x237620002376c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2377500023781, model64: 0x2377500023781},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b1, match64: 0x00000000, model64: 0xc4580000c45b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x237960002379d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b6, match64: 0x00000000, model64: 0x237a2000237a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b7, match64: 0x00000000, model64: 0x974600009749},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b9, match64: 0x00000000, model64: 0x237a8000237b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x237b9000237bf, model64: 0x237bf000237d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x237d0000237d6, model64: 0x237d6000237e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x237e7000237ed, model64: 0x237ed000237fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x237fe00023804, model64: 0x2380400023815},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238150002381b, model64: 0x2381b0002382b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2382b00023833, model64: 0x2383300023848},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ba, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c0, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239540002395e, model64: 0x239540002395e},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239740002397b, model64: 0x239740002397b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x239910002399a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2399a000239a7, model64: 0x2399a000239a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x239ae000239b4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x239b7000239bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239d1000239d3, model64: 0x239d1000239d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239d3000239dd, model64: 0x239d3000239dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239dd000239e7, model64: 0x239dd000239e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239e7000239f1, model64: 0x239e7000239f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239f1000239fa, model64: 0x239f1000239fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239fa00023a04, model64: 0x239fa00023a04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a0400023a0d, model64: 0x23a0400023a0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a0d00023a1a, model64: 0x23a0d00023a1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a1a00023a21, model64: 0x23a1a00023a21},
		modelTuple{type64: 0x2700000027, matchRI: 0x28da, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a2600023a2e, model64: 0x23a2e00023a37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a3700023a3f, model64: 0x23a3f00023a48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a4800023a50, model64: 0x23a5000023a59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a5900023a61, model64: 0x23a6100023a6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a6a00023a72, model64: 0x23a7200023a7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x28db, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28dd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28de, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28df, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xce2c0000ce34, model64: 0x23a8b00023a94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a9800023a9f, model64: 0x23a9800023a9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23aa200023aac, model64: 0x23aa200023aac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23aac00023ab7, model64: 0x23aac00023ab7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23ab700023ac2, model64: 0x23ab700023ac2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23ac200023acf, model64: 0x23ac200023acf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23acf00023ada, model64: 0x23acf00023ada},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e3, match64: 0x00000000, model64: 0x23ada00023ae5},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ea, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28eb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23ae500023aea, model64: 0x23ae500023aea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23aea00023aee, model64: 0x23aea00023aee},
		modelTuple{type64: 0x2700000027, matchRI: 0x28f0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28f3, match64: 0x00000000, model64: 0x23b0400023b0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x28f5, match64: 0x00000000, model64: 0x23b0b00023b19},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f1d00001f1d2, model64: 0x1f1d00001f1d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x28f7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28f8, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b3300023b3e, model64: 0x23b3300023b3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x28fc, match64: 0x00000000, model64: 0x23b5200023b5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x28fd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28fe, match64: 0x00000000, model64: 0x23b5c00023b63},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ff, match64: 0x00000000, model64: 0x23b6300023b70},
		modelTuple{type64: 0x2700000027, matchRI: 0x2901, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2902, match64: 0x00000000, model64: 0x1537900015385},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b7400023b7b, model64: 0x23b7400023b7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b7b00023b82, model64: 0x23b7b00023b82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b8900023b92, model64: 0x23b8900023b92},
		modelTuple{type64: 0x2700000027, matchRI: 0x290c, match64: 0x00000000, model64: 0x23b9c00023b9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x290d, match64: 0x00000000, model64: 0x23b6300023b70},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b9e00023ba8, model64: 0x23ba800023bb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x290e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x290f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2911, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x2912, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2913, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2914, match64: 0x00000000, model64: 0x23bc100023bc6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23bc600023bcc, model64: 0x23bc600023bcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2915, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2917, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2918, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23be500023bec, model64: 0x23be500023bec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2919, match64: 0x00000000, model64: 0x23bec00023bf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x291a, match64: 0x00000000, model64: 0x23bf400023bfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x291b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x291c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x291d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x291f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2921, match64: 0x00000000, model64: 0x23b6300023b70},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23c0200023c0d, model64: 0x23c0200023c0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2923, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23c1800023c22, model64: 0x23c2200023c2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2925, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2928, match64: 0x00000000, model64: 0x23c3f00023c47},
		modelTuple{type64: 0x2700000027, matchRI: 0x2929, match64: 0x00000000, model64: 0x23c4700023c4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x292a, match64: 0x00000000, model64: 0x23c4f00023c57},
		modelTuple{type64: 0x2700000027, matchRI: 0x292b, match64: 0x00000000, model64: 0x23c5700023c5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x292c, match64: 0x00000000, model64: 0x23c5f00023c67},
		modelTuple{type64: 0x2700000027, matchRI: 0x292d, match64: 0x00000000, model64: 0x23c6700023c6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23c6f00023c77, model64: 0x23c6f00023c77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23c7700023c7e, model64: 0x23c7700023c7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x292e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2933, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2934, match64: 0x00000000, model64: 0x23c8900023c94},
	}
	__dr_re = []*regexp.Regexp{
		regexp.MustCompile(`(?i)EK-G[CN][0-9]{3}`),
		regexp.MustCompile(`(?i)EK-GC([0-9]{3})`),
		regexp.MustCompile(`(?i)(?:Tesla/(?:(?:develop|feature|terminal-das-fsd-eap)-)?[0-9.]+|QtCarBrowser)`),
		regexp.MustCompile(`(?i)Tesla/[0-9.]+`),
		regexp.MustCompile(`(?i)Archos.*GAMEPAD([2]?)`),
		regexp.MustCompile(`(?i)Nintendo (([3]?DS[i]?)|Wii[U]?|Switch|GameBoy)`),
		regexp.MustCompile(`(?i)Retroid Pocket 2(?:Plus|\+)`),
		regexp.MustCompile(`(?i)PlayStation ?(2|3|4 Pro|4|5|Portable|Vita)`),
		regexp.MustCompile(`(?i)10moons[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:E500A_2019|2E E450 2018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E500A_2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2E E450 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:180[1379]-A01|1713-A01|1707-A01|1509-A00|1603-A03|1607-A01|1503-A01|1505-A0[12]|1605-A01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1807-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1803-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1809-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1713-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1707-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1801-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1509-A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1503-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1605-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1603-A03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1607-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1505-A0[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)3GNET[ _]`),
		regexp.MustCompile(`(?i)3GNET[ _](U8|T800|U6s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)3GNET[ _]T ?900`),
		regexp.MustCompile(`(?i)(?:Aplay ?[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aplay ?([34])`),
		regexp.MustCompile(`(?i)AC0731B|AC1024C|AC7803C|BC9710AM|EL72B|LC0720C|LC0723B|LC0725B|LC0804B|LC0808B|LC0809B|LC0810C|LC0816C|LC0901D|LC1016C|MT0724B|MT0729[BD]|MT0811B|OC1020A|RC07(?:09B|10B|18C|19H|2[16]B|22C|27H|34H|43H)|RC0817C|RC1018C|RC1019G|RC1025F|RC1301C|RC780[24]F|RC9711B|RC9712C|RC9716B|RC9717B|RC9724C|RC9726C|RC9727F|RC9730C|RC9731C|TS0807B|TS1013B|VM0711A|VM1017A|RC0813C|QS9719D|QS9718C|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT7801C|TS9708B|AC0732C|MT0739D|MT0812E|(?:3Q_)?ER71B`),
		regexp.MustCompile(`(?i)MT0724B|LC0901D|LC0816C|LC0810C|LC0809B|LC0808B|LC0804B|LC0725B|LC0723B`),
		regexp.MustCompile(`(?i)VM1017A|TS1013B|TS0807B|RC9731C|RC9730C|RC9727F|RC9726C|RC9724C|RC9717B|RC9716B|RC9712C|RC9711B|RC1301C|RC1025F|RC1019G|RC1018C|RC0817C|RC0813C|RC0743H|RC0734H|RC0726B|RC0722C|RC0721B|RC0719H|RC0718C|RC0710B|RC0709B|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT0811B|MT0739D|MT0729[BD]|LC1016C|LC0720C|BC9710AM|AC1024C|AC0731B`),
		regexp.MustCompile(`(?i)MT7801C|QS9718C|QS9719D|VM0711A|OC1020A`),
		regexp.MustCompile(`(?i)AC7803C|AC0732C|RC0727H`),
		regexp.MustCompile(`(?i)MT0812E|RC7802F`),
		regexp.MustCompile(`(?i)EL72B|(?:3Q_)?ER71B`),
		regexp.MustCompile(`(?i)(RC7804F)`),
		regexp.MustCompile(`(?i)4Good[ _]|S450m [43]G|S555m 4G|S501m 3G|T700i_3G|People (?:G503|G410|GT300)|Light (?:A10[34]|B100|AT300)|Light_AT200`),
		regexp.MustCompile(`(?i)(T700i|T100m|T70[34]m)[_ ]?3G`),
		regexp.MustCompile(`(?i)Light[_ ](AT[23]00)`),
		regexp.MustCompile(`(?i)People (GT300|AT100)`),
		regexp.MustCompile(`(?i)S555m[_ ]4G`),
		regexp.MustCompile(`(?i)(S(?:450m|501m)[_ ][43]G|Light (?:A10[34]|B100)|People (?:G503|G410))`),
		regexp.MustCompile(`(?i)4Good[ _]([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)4ife (4K Smart TV Box)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tarzan F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SWEGUE|DRENA|Kamba(?:_2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8848 (M[3-6])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G4040)`),
		regexp.MustCompile(`(?i)(?:A1 (?:Alpha|Alpha 20\+)|Alpha 20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1 Alpha 20\+`),
		regexp.MustCompile(`(?i)A95X MAX \+`),
		regexp.MustCompile(`(?i)A95X ?Z2PLUS`),
		regexp.MustCompile(`(?i)A95X[ _-]?(F[1-4]|R[1235]|[AWZ]2|A1)`),
		regexp.MustCompile(`(?i)(TK701)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)elite Aquarius(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hashtag|Shine|Chacer)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM[ _]([^/;)]+)(?: Build|[;)])|AG[_ ]Go[_-]Tab|(?:Flair|Ultra 2|Freedom Access)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AG[_ ]Go[_-]Tab[_ ]Access(_2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Flair|Ultra 2|Freedom Access)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM A9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM_H3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM_H5_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM[ _]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:AIDATA ELDE 10 TABLET|ADT_?1061(?:_1)?|ADT1012L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADT_?1061(?:_1)?`),
		regexp.MustCompile(`(?i)AIRBOOK PRO 8S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris708|Kingcomm C500`),
		regexp.MustCompile(`(?i)ALDINORD, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)ALDISUED, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)ALLINmobile_ARENA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMA[ _](A703)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LE-3[29]ZTHS25)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AM(350|355|40[257]|41[025]|450|50[689]|52[037]|51[58]|53[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AM(355|407)`),
		regexp.MustCompile(`(?i)AM([0-9]{3})`),
		regexp.MustCompile(`(?i)ANS/|UL40 Build`),
		regexp.MustCompile(`(?i)(AnPad_U2)`),
		regexp.MustCompile(`(?i)AOC,|(?:Q10107L-ME)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Q10107L-ME)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LE(?:32|43)S5970(?:s)?-20|LE55U7970-30|LE43S5977-20|U60856)`),
		regexp.MustCompile(`(?i)AOYODKG[_ ](A38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(WT(?:22|19)M-FI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARRIS[,;] ([^),;/]+)`),
		regexp.MustCompile(`(?i)ASSE[-._ ](Q[35]s?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EA1002|EA21100[125]|U(?:202|304|31[89]|328|626|668|705)AA|QS5509A|V340U|V350U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U304AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U705AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA211001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QS5509A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U318AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U319AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U328AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U202AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA1002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V350U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U626AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA211002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U668AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V340U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATMAN[ _-]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:ATOL (?:150F)|Smart_(?:Prime|SLIM_Plus))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATOL (150F)`),
		regexp.MustCompile(`(?i)(TB-703G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUX[ _]([^/;)]+)(?:_TD)`),
		regexp.MustCompile(`(?i)Excer[ _]`),
		regexp.MustCompile(`(?i)Excer[ _]G5.([236])`),
		regexp.MustCompile(`(?i)Excer[ _]G5`),
		regexp.MustCompile(`(?i)Excer[ _]10[ _]PRO`),
		regexp.MustCompile(`(?i)Excer[ _]8`),
		regexp.MustCompile(`(?i)AXXA[ _]`),
		regexp.MustCompile(`(?i)AXXA[ _](S\d+)[ _]PLUS`),
		regexp.MustCompile(`(?i)AXXA[ _](S\d+)`),
		regexp.MustCompile(`(?i)AYYA[ _](T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ACCENT[_ ]NEON|FAST7 ?3G|PEARL[_ ]A[24567]|TANK_P55|CAMELEON[_ ](?:C[456]|A1|H2)(?:[_ ]PLUS)?|Speed[- ](?:[AXYM]2|X2\+)|SURF1000|KIDZY70|SPEED_S8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ACCENT[_ ]NEON(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAMELEON[_ ]C([65])[_ ]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Speed[- _]([AXYM]2|S8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Speed-X2\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAMELEON[_ ](C[456]|A1|H2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL A4 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL A4 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL[_ ]A([24567])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TANK_P55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FAST7 ?3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURF1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KIDZY70(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U43EY1500B|F32EY1500B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BUZZ [123]|CLEVER 1|URBAN [13](?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BUZZ ([12]) Lite`),
		regexp.MustCompile(`(?i)BUZZ ([123]) Plus`),
		regexp.MustCompile(`(?i)BUZZ ([123])`),
		regexp.MustCompile(`(?i)URBAN ([13])`),
		regexp.MustCompile(`(?i)acer|ACTAB|TravelMate|a(?:101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)|Android.*V3[67]0(?:[);/ ]|$)|Android.*Z1[23456]0 Build|Android.*Z5\d{2} Build|Android.*T0[234678] Build|Android 5(?:[\d.]*);(?: [\w-]+;)? S59|Android.*S55(?:[);/ ]|$)|(?:A1-(713(HD)?|7[23]4|830|841|840(?:FHD)?|81[01])|A3-A[1-5][01]|B1-(7[1235-9][01](HD)?|7[23]3|7A0|8[1235]0|A71|860A)|TPA60W|B3-(A[125]0|A3[02]|A40FHD)|E39)(?:[);/ ]|$)|S5[12]0 Build|(DA[0-9]+HQ?L|Aspire (?:V5-121|XC-704G|V5-573G|4349)|Chromebook 14 \(CB3-431\)|Predator G9-793|GT-810|B1-870|B3-A20B|B3-A4[02]|B3-A50FHD|ET-108-11A|AC?TAB(?:721E?|1422E|821|1021(?:E|_A)|1022)|A3-A20FHD|E380|Swift SF113-31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DA220HQL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DA241HL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DA[0-9]+HQ?L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1-81[01]`),
		regexp.MustCompile(`(?i)ATAB(102[12]|721|1422)E`),
		regexp.MustCompile(`(?i)ACTAB1021(?:_A)?`),
		regexp.MustCompile(`(?i)ACTAB(821|1022)`),
		regexp.MustCompile(`(?i)A1-84(1|0(?:FHD)?)`),
		regexp.MustCompile(`(?i)A1-713(HD)?`),
		regexp.MustCompile(`(?i)A1-7[23]4`),
		regexp.MustCompile(`(?i)A3-A[12][01]`),
		regexp.MustCompile(`(?i)A3-A[345]0`),
		regexp.MustCompile(`(?i)B1-7(?:[5-9]0|30HD|A0)`),
		regexp.MustCompile(`(?i)B1-7[123][01]|B1-A71`),
		regexp.MustCompile(`(?i)B1-7[23]3`),
		regexp.MustCompile(`(?i)B1-8[123567]0`),
		regexp.MustCompile(`(?i)B3-A([125]0|3[02]|[45]0FHD|4[02])`),
		regexp.MustCompile(`(?i)A50[01]`),
		regexp.MustCompile(`(?i)(ACTAB721)`),
		regexp.MustCompile(`(?i)E39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E310(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E320(?:-orange)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*V360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*V370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E380(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?P400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?P300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?S200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?E100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z1([234])0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z150(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z160(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z(5\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*S57(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T07(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T08(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*S55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) S59(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer )?(Chromebook R1[13])`),
		regexp.MustCompile(`(?i)TravelMate Spin (B118-G2-R)`),
		regexp.MustCompile(`(?i)TravelMate (P653-M|5760G|8371|B118-M)`),
		regexp.MustCompile(`(?i)(?:Acer )?(Chromebook 1[45])`),
		regexp.MustCompile(`(?i)Aspire (V5-121|XC-704G|V5-573G|A515-51G|4349|E5-511)`),
		regexp.MustCompile(`(?i)(Predator G9-793|Swift SF113-31)`),
		regexp.MustCompile(`(?i)a(101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Acer; ?([^;()/]+)`),
		regexp.MustCompile(`(?i)Acer[ _-]?([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)acer[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)BLECK|AT723C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Adronix[ _]?(?:MT[0-9]+|X1001|Mini ?Tab ?7 ?3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Adronix ?Mini ?Tab ?7 ?3G`),
		regexp.MustCompile(`(?i)Adronix[ _]?(MT[0-9]+|X1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ADVAN (?:M4|S40|T5C)|i7U|S45E|S50H|I7D|i55[KD]|i4U|S7D|S4Z|i5[KE]|S5E[ _]NXT|S5J\+|S4\+|1011|E1C_3G)(?:[);/ ]|$)| (?:E1C Pro|5505|5202|50(?:[46]1|5[89]|62)|600[234]|6[25]01|Android [56].*; (?:i5C|i7A)|i5G|E1C 3G)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)S5E[ _]NXT`),
		regexp.MustCompile(`(?i)i(55[KD]|5[KE])`),
		regexp.MustCompile(`(?i) 5505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 5202(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 6201(?: Build|[;)])`),
		regexp.MustCompile(`(?i) 6501(?: Build|[;)])`),
		regexp.MustCompile(`(?i) i5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i) 6004(?: Build|[;)])`),
		regexp.MustCompile(`(?i) 6002(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(S45E|50[46]1|505[89]|5062|S50H|I7D|S7D|S4Z|S5J\+|S4\+|i5C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E1C[_ ]3G`),
		regexp.MustCompile(`(?i)(T5C|i7A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADVAN 1011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hollogram|(?:HL(?:4[79]36|6246|5576|5585|[56]575|5[67]67|6[05]77|6256|7257|9000)|IntroTr3544|Pr(?:61(?:4[56]|50)|60[27]0|5[69]50)|Tr3845|TR7989|SP[345]701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IntroTr3544|Tr3845`),
		regexp.MustCompile(`(?i)SP([345]701)`),
		regexp.MustCompile(`(?i)Pr(61(?:4[56]|50)|60[27]0|5[69]50)`),
		regexp.MustCompile(`(?i)HL(4[79]36|6246|[56]575|5576|5585|5[67]67|6[05]77|6256|7257|9000)`),
		regexp.MustCompile(`(?i)Hollogram ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(PIC7GS8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CYGNUSX?|Gravity Z2|ChampionPro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CYGNUSX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CYGNUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gravity Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ChampionPro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy|novo[0-9]|Novo 10 Hero|AX10PRO|NUMY3GAX9|NOVO10 Spark|Aurora-II|Rainbow(?:II)? 3G`),
		regexp.MustCompile(`(?i)Numy[_ ]?3G[_ ]?Sword`),
		regexp.MustCompile(`(?i)NUMY3GAX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy3G_AX10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Novo 10 Hero QuadCore)`),
		regexp.MustCompile(`(?i)Novo7 ?Flame(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)novo ?7[_ ]ELF(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOVO7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Novo([0-9]+)[_ \-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)AIRIS|PhonePAD 83G`),
		regexp.MustCompile(`(?i)TM50QZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AIRNESS-([\w]+)`),
		regexp.MustCompile(`(?i)(?:Halo3_Pro|Halo4 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo([34])[ _]Pro`),
		regexp.MustCompile(`(?i)Airtel[ _]`),
		regexp.MustCompile(`(?i)(AT702)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AW790|M300|AWM(?:53[39]|50[19]|561|999)|AW500|Android 7(?:[\d.]*);(?: [\w-]+;)? Z9 PLUS|JA2-SMP0601)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AW790(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AW500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AWM(53[39]|50[19]|561|999)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(JA2-SMP0601)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AKAI,|Akai[ _-]|Eco[ _]E2|Glory[ _](?:G[1235]|L[123]|O[125])|(?:TAB-[79]8[03]0Q?|X[56] METAL|AKTB-703MZ|FZ70[13]|X5_PRO|X3[_ ]PRO[_ ]SLIM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB-([79]8[03]0Q?)`),
		regexp.MustCompile(`(?i)(FZ70[13])`),
		regexp.MustCompile(`(?i)X([56]) METAL`),
		regexp.MustCompile(`(?i)X3[_ ]PRO[_ ]SLIM`),
		regexp.MustCompile(`(?i)Glory[ _](G[1235]|L[123]|O[125])`),
		regexp.MustCompile(`(?i)Eco[ _]E2`),
		regexp.MustCompile(`(?i)Akai[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)AKAI,(AK3219NF)`),
		regexp.MustCompile(`(?i)Alba ?(?:7Q|10Q|57|4|10 TABLET|(?:[78]|10)(?:Nou|Pie))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alba (4)`),
		regexp.MustCompile(`(?i)Alba((?:[78]|10)(?:Nou|Pie)|7Q|10Q)`),
		regexp.MustCompile(`(?i)Alcatel|Alc[a-z0-9]+|One[ _]?Touch|idol[3X]|TIMXL|(?:(?:4003[AJ]|4009[ADEFIKMSX]|4013[DEJKMX]|4014[ADEKMX]|4015[ADNTX]|4016[ADX]|4017[ADEFSX]|4018[ADEFMX]|4024[DEX]|4027[ADNX]|4028[AEJS]|4032[ADEX]|4034[ADEFGLTX]|4035[ADXY]|4045[ADELX]|4047[ADFGNX]|4049[DEGMX]|4060[SW]|4063F|4065F|4087U|4114E|5001[ADJTU]|5002[ABDEFHJLMRSUWX]|5003[ADGU]|5006[ADG]|5007[AGUOS]|5008[ADTUY]|5009[AD]|5010[DEGSUX]|5011A|5012[DFG]|5015[ADEX]|5016[AJX]|5017[ABDEOX]|5019D|5022[DEX]|5023[EF]|5024[ADFIJ]|5025[DEG]|5026[ADJ]|5027B|5028[ADY]|5029[ADEFY]|5030[ADEFJMU]|5031[ADGJ]|5032[OW]|5033(?:[DFTXY]R|[EFM]P|[ADEFGJMOQSTXY])|5034D|5036D|5038[ADEX]|5039[DY]|5041[CD]|5042[ADEFGTWX]|5044[ADGIKOPSTY]|5045[ADFGIJTXY]|5046[ADGIJSTUY]|5047[DIUY]|5048[AIUY]|5049[EGSWZ]|5050[ASXY]|5051[ADEJMTWX]|5052[ADY]|5053[ADKY]|5054[ADNSTWX]|5056[ADEGIJMNTUWX]|5057M|5058[AIJY]|5059[ADIJSTXYZ]|5060[ADJ]|5061[AKU]|5065[ADNWX]|5070D|5080[ADFQUX]|5085[ABCDGHIJNOQY]|5086[ADY]|5090[AIY]|5095[IKY]|5098[OS]|5099[ADIUY]|5116J|5145A|6002[AD]|6016[ADEX]|6025[ADH]|6027A|6036[AXY]|6037[BKY]|6039[AHJKSY]|6042D|6043[AD]|6044D|6045[BFIKOXY]|6050[AFY]|6055[ABDHIKPUYZ]|6056[ADH]|6058[ADX]|6060[SXC]|6062W|6070K|7040[ADEFKRT]|7041[DX]|7042A|7043[AEKY]|7044[AX]|7045Y|7048[ASWX]|7053D|7055A|7070X|7071[ADX]|8030Y|8050[DEGX]|8063|8088[MQX]|8094[MTX]|9001[DIX]|9002X|9003[AX]|9005X|9007[ATX]|9008[ADIJNTUX]|9009[AG]|9010X|9013[ATX]|9020A|9022X|9024O|9026X|9027[FQTWX]|9029[ZW]|9032[TWXZ]|9203A|9309X|A(?:46[46]BG|57[04]BL|576CC|621BL|50[13]DL|57[17]VL)|I213|I216[AX]|80(?:[89]2|84|91|6[78]|5[124567]))(?:_(?:EEA|RU|TR))?|P3[36]0X|AM-H200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5022[EDX]|5070D`),
		regexp.MustCompile(`(?i)4015[ATX]|4016A`),
		regexp.MustCompile(`(?i)4015[DN]|4016[DX]`),
		regexp.MustCompile(`(?i)4032[AX]`),
		regexp.MustCompile(`(?i)4032[DE]`),
		regexp.MustCompile(`(?i)7040[AFK]|7041X|7042A`),
		regexp.MustCompile(`(?i)7040[DE]|7041D`),
		regexp.MustCompile(`(?i)4018[ADEFMX]`),
		regexp.MustCompile(`(?i)4035[ADXY]`),
		regexp.MustCompile(`(?i)5038[ADEX]`),
		regexp.MustCompile(`(?i)4045[AXL]`),
		regexp.MustCompile(`(?i)4045[DE]`),
		regexp.MustCompile(`(?i)5042[AFGWX]`),
		regexp.MustCompile(`(?i)5042[DE]`),
		regexp.MustCompile(`(?i)7043[AY]|7044[AX]`),
		regexp.MustCompile(`(?i)7043[EK]`),
		regexp.MustCompile(`(?i)50[16]5X`),
		regexp.MustCompile(`(?i)5015[AE]|5016[AJ]|5065[ADWX]|5116J`),
		regexp.MustCompile(`(?i)5025[DEG]|5054[ADSTX]`),
		regexp.MustCompile(`(?i)5051[AEJMTWX]`),
		regexp.MustCompile(`(?i)5095[IKY]`),
		regexp.MustCompile(`(?i)5056[ADEGJMTUX]`),
		regexp.MustCompile(`(?i)5050[ASXY]`),
		regexp.MustCompile(`(?i)6037[BKY]`),
		regexp.MustCompile(`(?i)7071[ADX]`),
		regexp.MustCompile(`(?i)5002[ABDEHJLMSUWX]`),
		regexp.MustCompile(`(?i)5031[ADGJ]`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5008R`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5002R`),
		regexp.MustCompile(`(?i)5034D|6056[ADH]`),
		regexp.MustCompile(`(?i)7040[RT]`),
		regexp.MustCompile(`(?i)5056[NW]`),
		regexp.MustCompile(`(?i)6016[AX]`),
		regexp.MustCompile(`(?i)6016[DE]`),
		regexp.MustCompile(`(?i)6036[AXY]`),
		regexp.MustCompile(`(?i)6050[AFY]`),
		regexp.MustCompile(`(?i)6039[AHJKYS]|idol3`),
		regexp.MustCompile(`(?i)6045[BFIKOYX]|AM-H200`),
		regexp.MustCompile(`(?i)6055[ABDHIKPUYZ]`),
		regexp.MustCompile(`(?i)6058[ADX]`),
		regexp.MustCompile(`(?i)6060[SX]`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?6060C`),
		regexp.MustCompile(`(?i)6043[AD]`),
		regexp.MustCompile(`(?i)4024[DEX]`),
		regexp.MustCompile(`(?i)4009[AFIKMSX]`),
		regexp.MustCompile(`(?i)4009[DE]`),
		regexp.MustCompile(`(?i)4003[AJ]|4013[DEJKMX]|4014[AEKMX]|4114E`),
		regexp.MustCompile(`(?i)4027[ADNX]|4028[AEJS]|5019D`),
		regexp.MustCompile(`(?i)5017[ABDEOX]`),
		regexp.MustCompile(`(?i)9007[TX]`),
		regexp.MustCompile(`(?i)(?:9009G|9013[AT])`),
		regexp.MustCompile(`(?i)808[24](?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8092(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8091(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8052(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8051(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)805[4567](?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:806[78]|9013X)(?:_(?:EEA|RU))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4017[ADEFSX]`),
		regexp.MustCompile(`(?i)4034[ADEFGXL]`),
		regexp.MustCompile(`(?i)4060[SW]`),
		regexp.MustCompile(`(?i)5023[EF]`),
		regexp.MustCompile(`(?i)5010[DEGSUX]`),
		regexp.MustCompile(`(?i)5012[DFG]`),
		regexp.MustCompile(`(?i)5045[ADFGIJTXY]|5145A`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5004R`),
		regexp.MustCompile(`(?i)5046[ADIJTUY]`),
		regexp.MustCompile(`(?i)5011A|5049[EG]`),
		regexp.MustCompile(`(?i)9008[ADIJNTUX]`),
		regexp.MustCompile(`(?i)(?:9027[QFTWX]|9032[TX])`),
		regexp.MustCompile(`(?i)5085[BQ]`),
		regexp.MustCompile(`(?i)5085[ADHIJY]`),
		regexp.MustCompile(`(?i)5090[AIY]`),
		regexp.MustCompile(`(?i)5046[GS]`),
		regexp.MustCompile(`(?i)5085[GO]`),
		regexp.MustCompile(`(?i)5048[AYUI]`),
		regexp.MustCompile(`(?i)8050[GX]`),
		regexp.MustCompile(`(?i)8050[ED]`),
		regexp.MustCompile(`(?i)5098S|9001[DIX]`),
		regexp.MustCompile(`(?i)9003[AX]`),
		regexp.MustCompile(`(?i)I216[AX]`),
		regexp.MustCompile(`(?i)7048[ASWX]`),
		regexp.MustCompile(`(?i)(?:Alcatel-)?OT-802`),
		regexp.MustCompile(`(?i)(?:TRIBE_)?3075A`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch[ _]((?:T[0-9]+|TAB[^/;]+|EVO[78](?:HD)?)) Build`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch([^/;\)]*)\)`),
		regexp.MustCompile(`(?i)5080[ADFQUX]`),
		regexp.MustCompile(`(?i)4049[DEGMX]`),
		regexp.MustCompile(`(?i)5044[ADIKOPTY]`),
		regexp.MustCompile(`(?i)4047[DFXN]`),
		regexp.MustCompile(`(?i)5047[DIUY]`),
		regexp.MustCompile(`(?i)4044[CV]`),
		regexp.MustCompile(`(?i)(?:Alcatel)?4044[MNT]`),
		regexp.MustCompile(`(?i)5044[GS]`),
		regexp.MustCompile(`(?i)5033[DFTXY]R(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5033MP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5033(?:[ADJEFGMOTXYQS]|[EF]P)(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5009[AD]`),
		regexp.MustCompile(`(?i)5008[ADUYT]`),
		regexp.MustCompile(`(?i)5007[AGUS]`),
		regexp.MustCompile(`(?i)6002[AD]`),
		regexp.MustCompile(`(?i)5003[ADGU]`),
		regexp.MustCompile(`(?i)5006[ADG]`),
		regexp.MustCompile(`(?i)5024[ADFIJ]|5028Y|6025[ADH]`),
		regexp.MustCompile(`(?i)(?:5028[AD]|5007O)`),
		regexp.MustCompile(`(?i)5030[ADFJMU]`),
		regexp.MustCompile(`(?i)5001[ADJTU]`),
		regexp.MustCompile(`(?i)5059[ADJXYZIT]`),
		regexp.MustCompile(`(?i)5060[ADJ]`),
		regexp.MustCompile(`(?i)5052[ADY]|5053[ADKY]`),
		regexp.MustCompile(`(?i)5029[ADFY]`),
		regexp.MustCompile(`(?i)5032[OW]|5099[ADYUI]`),
		regexp.MustCompile(`(?i)5026[ADJ]`),
		regexp.MustCompile(`(?i)5039[DY]`),
		regexp.MustCompile(`(?i)5058[AIJY]`),
		regexp.MustCompile(`(?i)5061[AKU]`),
		regexp.MustCompile(`(?i)5086[ADY]`),
		regexp.MustCompile(`(?i)8088[XQM]`),
		regexp.MustCompile(`(?i)8094[MTX]`),
		regexp.MustCompile(`(?i)9029[ZW]`),
		regexp.MustCompile(`(?i)9032[WZ]`),
		regexp.MustCompile(`(?i)(?:ALCATEL_)?A383G`),
		regexp.MustCompile(`(?i)ALCATEL([^/;]+) Build`),
		regexp.MustCompile(`(?i)ALCATEL[ \-]?([^/;\)]+)`),
		regexp.MustCompile(`(?i)ALCATEL_([^/;\)]+)`),
		regexp.MustCompile(`(?i)Alc([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Access_Q784C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Alfawise (?:A9)|(?:A95X_R1|Z28Pro))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A95X_R1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z28Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfawise (A9)`),
		regexp.MustCompile(`(?i)ALIGATOR[_ ]|(?:RX[67]00|S5710|RX460)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ALIGATOR[ _])?(S4080|S50(?:6[56]|[678]0)|S55[24]0|S5710|RX510|S6[05]00|RX710|RX[678]00|RX460)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AllCall_|Heat[34]|(?:Rio_X|S5500)(?:[);/ ]|$)|Hot ?[125][^;/]+ Build`),
		regexp.MustCompile(`(?i)AllCall_(Alpha|Atom|Bro|Madrid)`),
		regexp.MustCompile(`(?i)Heat([34])`),
		regexp.MustCompile(`(?i)Rio_X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S5500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hot ?([125][^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:T1001XS?|T1006S?|T1001|iPlay[_ ][2345]0|U1006H?|U63PLUS|iPlay8|iPlay_?[89]T|iPlay[134]0|iPlay_40H|iPlay50 Pro|iPlay_?20[SP]|kPad|X_Game|T806MHE?|Power M3|Smile_X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smile_X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001XS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kPad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1006S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U63PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U1006H?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T806MHE?`),
		regexp.MustCompile(`(?i)iPlay[_ ]?([1-5]0|[89]T?|40H|20[sP])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X_Game(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power M3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Allview|A4You|H1003_LTE_PRO|A5_(?:Easy(?:_TM)?|Ready(?:_TM)?|Quad|Quad_Plus_TM)|A[5-9]_Lite|A5Smiley|A6_Duo|A10_Lite_(?:2019|2GB)|A10_(?:Plus|Max)|AX2_Frenzy|AX4Nano|AX5NanoQ|AX50(?:[23]|1Q)|C6_Duo|E[23]_Living|E[23]_(?:Jump|Sign)|E4_Lite|M9_Connect|P(?:43_Easy|[5689]_Energy|6_Energy_Lite|[68]_Energy_Mini(?:_TM)?|(41|[4568])_eMagic(?:_TM)?|[589](?:_)?Life(?:_TM)?|[567]_Lite(?:_TM)?|6_plus|[45678]_Pro|7_Seon|10_Life|10_Max|10_Style|7_Xtreme|6_Qmax|4_Quad)|V(?:[1345]_Viper|1_Viper_I|2_Viper_(?:[EISX]|X_plus|Xe))|X4_Soul_Vision|X(?:[1-46]_Soul_Xtreme|[1-5]_Soul|3_Soul_Lite|[2-6]_Soul_Mini(?:_TM)?|4_Soul_Mini_S(?:_TM)?|[2-58]_Soul_Style(?:_TM)?|2_Soul_Style_Plus|2_Twin)|Viva_(?:H801|100[13]G|(?:H100[124]|H701|H802)_LTE|C701|i701G|803G)|VivaH(?:10|[78])|X7_Soul_Style|X[78]_Soul_Pro|Viva_(?:Home|i7G)|H1004_LTE`),
		regexp.MustCompile(`(?i)E([23])_Living`),
		regexp.MustCompile(`(?i)E([23])_Jump`),
		regexp.MustCompile(`(?i)P(41|[4568])_eMagic(?:_TM)?`),
		regexp.MustCompile(`(?i)P([567])_Lite(?:_TM)?`),
		regexp.MustCompile(`(?i)P([45678])_Pro`),
		regexp.MustCompile(`(?i)P([69])_Energy_Lite`),
		regexp.MustCompile(`(?i)P([689])_Energy_mini(?:_TM)?`),
		regexp.MustCompile(`(?i)P([5689])_Energy`),
		regexp.MustCompile(`(?i)P([589])(?:_)?Life(?:_TM)?`),
		regexp.MustCompile(`(?i)V([12])_Viper_I4G(?:_TM)?`),
		regexp.MustCompile(`(?i)V([1345])_Viper`),
		regexp.MustCompile(`(?i)V2_Viper_(E|I|S|X(?:e)?)`),
		regexp.MustCompile(`(?i)X([1246])_Soul_Xtreme`),
		regexp.MustCompile(`(?i)X4_Soul_Infinity_(L|N|S|Z)`),
		regexp.MustCompile(`(?i)X4[_ ]Soul[_ ]Infinity[_ ]Plus`),
		regexp.MustCompile(`(?i)X([34])_Soul_Lite`),
		regexp.MustCompile(`(?i)X4_Soul_Mini_S(?:_TM)?`),
		regexp.MustCompile(`(?i)X([23456])_Soul_Mini(?:_TM)?`),
		regexp.MustCompile(`(?i)X([357])_Soul_Pro`),
		regexp.MustCompile(`(?i)X([23458])_Soul_Style(?:_TM)?`),
		regexp.MustCompile(`(?i)X([12345])_Soul`),
		regexp.MustCompile(`(?i)A5_Easy(?:_TM)?`),
		regexp.MustCompile(`(?i)A([56789])_Lite`),
		regexp.MustCompile(`(?i)A5_Ready(?:_TM)?`),
		regexp.MustCompile(`(?i)Viva_(i7G)`),
		regexp.MustCompile(`(?i) H1003_LTE_PRO([13])`),
		regexp.MustCompile(`(?i)Viva[_ ]?H([78]|10)[_ ]?LTE`),
		regexp.MustCompile(`(?i)Viva_?((?:H80[12]|H100[12]|H701)_LTE|C701|i701G|803G|H10|H7|H801|100[13]G)`),
		regexp.MustCompile(`(?i)ALLVIEW ?SPEEDI`),
		regexp.MustCompile(`(?i)ALLVIEW ?SPEED`),
		regexp.MustCompile(`(?i)AX4Nano[_ ]plus`),
		regexp.MustCompile(`(?i)AX(50[23]|501Q)`),
		regexp.MustCompile(`(?i)Allview[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Allview[ _-]([^;/]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:QUAD-CORE (?:T3 p1|A64 p3|A33 y3|T3 K2001M|T3 k2001o|T3 k2001-nwd)|ZY-07B|UltraOcta-T8|OCTA-CORE T8|OCTOPUS-CORE T8|QUAD-CORE T3 p3|QuadCore-R16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUAD-CORE T3 K(2001M?)`),
		regexp.MustCompile(`(?i)QUAD-CORE T3 p([13])`),
		regexp.MustCompile(`(?i)(?:FF-5000|ZQ8003|825X_Pro|03_v89_jbl|benz_hy1920x720|8227L_demo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FF-5000)`),
		regexp.MustCompile(`(?i)(ZQ8003|825X_Pro|benz_hy|8227L_demo)(?:1920x720)?`),
		regexp.MustCompile(`(?i)Altice[ _]|(SX41|Android 9;(?: [\w-]+;)? (?:S32|S42|S32_(?:Plus|NFC)))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (SX41|S32|S42|S32_Plus|S32_NFC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Altice[ _](S62|S31|S43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AFT[ABMNRST]|AFTSSS?|AFTKA|SD4930UR|AEO(?:BC|C[HW]|KN)|KF(?:OT|ONWI|TT|JWI|JWA|[DFS]OWI|A[PRSU]WI|T[BH]WI|TRP?WI|SAW[IA]|GIWI|KAWI|MAWI|MEWI|MUWI|SUWI))(?:[);/ ]|$)|Kindle|AlexaMediaPlayer|Amazon (?:Tate|Jem)|Silk/\d+\.\d+|Echo/1|.+FIRETVSTICK`),
		regexp.MustCompile(`(?i)AFT[MST]`),
		regexp.MustCompile(`(?i).+FIRETVSTICK2018`),
		regexp.MustCompile(`(?i)KFFOWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFJWI(?:[);/ ]|$)|Amazon Jem`),
		regexp.MustCompile(`(?i)KFJWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSOWI(?:[);/ ]|$)|Amazon Tate`),
		regexp.MustCompile(`(?i)KFTHWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTHWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAPWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAPWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFARWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFASWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFQUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMEWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFRAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFGIWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFDOWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFKAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFONWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSAWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTBWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTRWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTRPWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFOT|Kindle Fire|Silk/\d+\.\d+`),
		regexp.MustCompile(`(?i)Echo/1|AEO(?:BC|KN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AEOC[HW](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMIGOO (R300|R9 Max|M1 Max|X15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Amigo7x?(?:YUF|SCB)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amoi|(?:A862W|Clever[ -]?(?:Gem S52|Gleam S45|Pad P7|Wave S50|Touch S46|JOY S40|Lite S41))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Clever[ -]?(Gleam S45|Gem S52|Wave S50|Touch S46|Lite S41)`),
		regexp.MustCompile(`(?i)Amoi[-_ /](CA6)`),
		regexp.MustCompile(`(?i)Amoi[-_ /]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Amoisonic-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:ANDOWL-)?(Q[45]|QG9|QK9MAX)(?:[);/ ]|$)|Andowl`),
		regexp.MustCompile(`(?i)angelcare[ _]`),
		regexp.MustCompile(`(?i)F20 ?pro`),
		regexp.MustCompile(`(?i)angelcare[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)AFTMM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANRY-(RS10|[SX]20|E30|1006)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AOCOS ([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Aoro[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:aoson ?(?:R10[1-3]|S[78]|M707TG|M96T)(?:[_ ]?Pro)?|R103)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:aoson ?)?R10([1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?S7_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?S7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?S8Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?(M707TG|M96T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:iTunes-)?Apple[ _]?TV|Apple\/|(?:Apple-|iTunes-)?[^l][^i][^k][^e][^\s](?:iPad|iPhone)|iPh(?:[0-9]|1[0-4]),[0-9]|CFNetwork|HomePod|AirPlay|Watch ?OS|Watch1,[12]|MDCR_Mac|ICRU_iP(?:ad|hone)|Mac OS X[,;]|macOS,`),
		regexp.MustCompile(`(?i)Watch3,[13]`),
		regexp.MustCompile(`(?i)Watch3,[24]`),
		regexp.MustCompile(`(?i)Watch5,(?:9|11)`),
		regexp.MustCompile(`(?i)Watch5,1[02]`),
		regexp.MustCompile(`(?i)Watch6,1[02]`),
		regexp.MustCompile(`(?i)Watch6,1[13]`),
		regexp.MustCompile(`(?i)Watch6,1[46]`),
		regexp.MustCompile(`(?i)Watch6,1[57]`),
		regexp.MustCompile(`(?i)Watch([456]),[13]`),
		regexp.MustCompile(`(?i)Watch([456]),[24]`),
		regexp.MustCompile(`(?i)Watch6,[68]`),
		regexp.MustCompile(`(?i)Watch6,[79]`),
		regexp.MustCompile(`(?i)Watch7,[13]`),
		regexp.MustCompile(`(?i)Watch7,[24]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac11(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac11(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac11(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac12(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac13(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac13(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac14(?:%2C|,)[13]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac14(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac14(?:%2C|,)4`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac17(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac18(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac18(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac19(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac19(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac20(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac21(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMacPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook[45](?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir3(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir4(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir6(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir7(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro1(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro2(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro[34](?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)[34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)5`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro6(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro8(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro9(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro10(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro11(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro11(?:%2C|,)[23]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro11(?:%2C|,)[45]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro13(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro13(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro14(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro14(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)4`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro16(?:%2C|,)[14]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro16(?:%2C|,)[23]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro17(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro18(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro18(?:%2C|,)[34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini5(?:%2C|,)[123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini6(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac7(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac7(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerBook5(?:%2C|,)6`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerBook6(?:%2C|,)7`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?1[C,_]1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?1[C,_]2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?2[C,_]1| 3GS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?3[C,_][123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?4[C,_]1|1C2%254enohPi| 4S\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?5[C,_][12]| 5\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?5[C,_][34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?6[C,_][12]| 5S\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?7[C,_]1|1C2%257enohPi| 6PLUS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?7[C,_]2| 6\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?8[C,_]2| 6SPLUS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?8[C,_]1|iPhone[ /]6s| 6S\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?8[C,_]4| SE\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?9[C,_][13]|iphone7 | 7\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?9[C,_][24]| 7PLUS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?10[C,_][14]| 8\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?10[C,_][25]| 8PLUS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?10[C,_][36]|iPhone X| X\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?11[C,_]2| XS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?11[C,_][46]|iPhoneXSMax| XSMAX\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?11[C,_]8| XR\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]1|iPhone 11| 11\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]3| 11PRO\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]5| 11PROMAX\)$|iPhone_11_Pro_Max`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]8| SE2\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]1| 12MINI\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]2| 12\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]3| 12PRO\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]4| 12PROMAX\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]2| 13PRO\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]3| 13PROMAX\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]4| 13MINI\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]5| 13\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]6`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]8| 14PLUS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]2| 14PRO\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]3| 14PROMAX\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]7| 14\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]5| 15PLUS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?16[C,_]1| 15PRO\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?16[C,_]2| 15PROMAX\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]4| 15\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad1[C,_]1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad2[C,_][1-4]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad2[C,_][567]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad3[C,_][123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad3[C,_][456]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad4[C,_][123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad4[C,_][456]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad4[C,_][789]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad5[C,_][12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad5[C,_][34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad6[C,_][34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad6[C,_][78]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad6[C,_](?:11|12)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_][12](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_][34](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_][56](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_](?:11|12)(?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_](?:9|10)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]4`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_][5-7]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_]1[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_][1-4]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_][5-8]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad11[C,_][12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad11[C,_][34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad11[C,_][67]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad12[C,_]1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad12[C,_]2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]8`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_](?:9|10|11)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]16`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]17`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]2`),
		regexp.MustCompile(`(?i)Apple-?TV2[C,_]1`),
		regexp.MustCompile(`(?i)Apple-?TV3[C,_][12]`),
		regexp.MustCompile(`(?i)Apple-?TV5[C,_]3|Apple TV 4`),
		regexp.MustCompile(`(?i)Apple-?TV6[C,_]2`),
		regexp.MustCompile(`(?i)Apple-?TV11[C,_]1`),
		regexp.MustCompile(`(?i)(?:iTunes-)?Apple[ _]?TV`),
		regexp.MustCompile(`(?i)iTunes-iPad/[0-9]+(?:\.[0-9]+)* \(([^;]+);`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad`),
		regexp.MustCompile(`(?i)iTunes-iPhone/[0-9]+(?:\.[0-9]+)* \(([^;]+);`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPhone ?(3GS?|4S?|5[CS]?|6(:? Plus)?)?`),
		regexp.MustCompile(`(?i)(NS220)`),
		regexp.MustCompile(`(?i)Aquarius[_ ]CMP[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Aquarius[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos|(?:A50TI|AC101BHE|AC50BHE|AC45NE|X67 5G|AC45BHE|AC101PL3GV2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos (Oxygen (?:63|57|68XL))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A50TI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC45NE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X67 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos ?5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC101BHE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC50BHE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos 80 Oxygen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos 101 Oxygen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Access 70 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Oxygen 101S ARDOIZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Oxygen 101S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos T ?(101X?) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Core (101) 3G Ultra`),
		regexp.MustCompile(`(?i)Archos Core (70|101) 3G`),
		regexp.MustCompile(`(?i)Archos Hello 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Sense 101 X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos ([^/;]*(?:PAD)[^/;]*) Build`),
		regexp.MustCompile(`(?i)Archos ((?:[789]|10)[0-9]?[a-z]* ?(?:G9|Access|Magnus|G10|Helium|Titanium|Copper|Cobalt|Platini?um|Xenon|Carbon|Neon|XS|IT)[^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos ([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\))|Impulse[ _]P[12]|(?:EDGE A5HD|Elf_S8|ICON (R40\+|R45)|Wizard_[12]|UKOZI U[56]|L925)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)Impulse[ _]P1\+`),
		regexp.MustCompile(`(?i)Impulse[ _](P[12])`),
		regexp.MustCompile(`(?i)EDGE (A5HD)`),
		regexp.MustCompile(`(?i)ICON (R40\+|R45)`),
		regexp.MustCompile(`(?i)Wizard_([12])`),
		regexp.MustCompile(`(?i)Elf_S8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UKOZI U([56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L925(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TSD Octa A0520P|TSD Quadra A050[59]P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arnova|ARCHM901|AN7CG2|AN7IG3|AN7G2(DTE|I)?|AN7[BCDFH]?G3|A80KSC|AN8G2|AN8[BC]?G3|AN9G2I?|AN9G3|A101[BC]|AN10G2|AN10BG2(DT|I)?|AN10BG3(DT)?|AN10[CD]G3`),
		regexp.MustCompile(`(?i)AN7G2I|AN7G2|AN7G2DTE`),
		regexp.MustCompile(`(?i)A101B2|A101C|AN10G2`),
		regexp.MustCompile(`(?i)AN10BG2|AN10BG2DT|AN10BG2I`),
		regexp.MustCompile(`(?i)AN10BG3|AN10BG3DT|AN10BG3-LZ`),
		regexp.MustCompile(`(?i)Arnova ([^/;]*) Build`),
		regexp.MustCompile(`(?i)ARTLINE[ _-](KMX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artel[_ ]|\w+_ARTEL_\w+|(?: GAP|GAP YOQ| ALO|U1 MINI|Android 8(?:[\d.]*);(?: [\w-]+;)? U[124]|U3_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) GAP|GAP YOQ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U1 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U3_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) U([124])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) ALO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artel[_ ](Quadro(?: Pro)?|Tesla|Air|Tomchi|Premium|U3_4G|Z5|Sentinel (?:X 8G|X D5|X)|T10|T21)`),
		regexp.MustCompile(`(?i)Artel[_ ]Komi3`),
		regexp.MustCompile(`(?i)Artel[_ ]Q21_PRO`),
		regexp.MustCompile(`(?i)Artel[_ ]Q21`),
		regexp.MustCompile(`(?i)Artel[_ ](Star|Nova|Connect|Choice|Style)`),
		regexp.MustCompile(`(?i)(?:\w+_)?ARTEL_([FVM]5|X[45])_\w+`),
		regexp.MustCompile(`(?i)Artizlee[ _]S9|ATL-(?:16|21(?:PLUS|[XT])?|31|26)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATL-21PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ATL-(?:16|21[XT]?|31|26))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artizlee[ _]S9`),
		regexp.MustCompile(`(?i)(?:32LH7010T|32LH8[10]10T|32LH7030S|32LF7130S|28LH701[10]T|43LU8010T|24LH7011T|24LH7020T|24LH8010T|40LF7030S|5[05]LU8120T|42LF7110T|32LF7120T|32LF8120T|50LU8110T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2})(L[FHU]\d+[ST])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASANZO[ _](?:A2|S[23]|[SZ]5|S3_PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASANZO[ _]S3[ _]PLUS`),
		regexp.MustCompile(`(?i)ASANZO[ _](A2|S[23]|[SZ]5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASK[ _]`),
		regexp.MustCompile(`(?i)ASK[ _]791SP[ _]3G`),
		regexp.MustCompile(`(?i)ASK[_ ]([^/;]*) Build`),
		regexp.MustCompile(`(?i)ASPERA|(?:Wren|Jazz 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASPERA[ _](R5h|R9|RT3|A4[02]|A50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wren(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jazz 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AS[-_](?:50[123]|543[1-6]|44[12]1|541[12]|54[23]1|6431|[46]01L)|AP-(?:109|115G|721N|753G|7[25]7G|10[68]|107G|110N|941|719))[;/)_ ]`),
		regexp.MustCompile(`(?i)AS[-_]401L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5432(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS[-_](?:5434|501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS_601L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5433 Secret(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5433(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5421(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-44[12]1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5435(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5436[ _]`),
		regexp.MustCompile(`(?i)AS-6431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5411[_ ]`),
		regexp.MustCompile(`(?i)AS-5412 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-721N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-941(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-108(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-106(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AP-(?:109|115G|7[25]7G|753G|107G|110N|719))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AS-(?:\d+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[- ](S451|S501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Asus|Transformer|ZenFone Max|MeMOPad 10|TF300T|Slider SL101|PadFone|ME302(?:C|KL)|ME301T|ME371MG|ME17(?:1|2V|3X)|(?:K0[01][0-9a-z]|(?:P(?:00[128ACIL]|01[MTVWYZ]|01MA|01T_1|02[13478])(?: Build|\))|X015D|X018D|X003|X00[7ABT]D|Z00D|Z00[MTY]D|Z01[7FGHKMR]D)|K01[579N]|AST21|K50IJ)(?:[);/ ]|$)|G55[023]KL|ZB(631|602|633|55[135]|50[01])KL|ZC(55[134]|520|600)KL|ZA550KL|ZE(5[02]0|620|55[2345])KL|ZD55[23]KL|ZS6(?:61|7[02136])KS|ZS(6[0236]0|55[10])KL|ZS590KS|ZB(500KG|601KL)|MeMo Pad FHD 10 LTE|Z00[SV]D|P01Y_S|Zenfone 5Z?|AOSP on Duma|Tinker Board(?: S)?|TX201LA|I005DA`),
		regexp.MustCompile(`(?i)XPad 10 ?LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME171(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASUS Z906(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME302C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ME302KL|MeMOPad 10FHD LTE|MeMo Pad FHD 10 LTE|AOSP on Duma)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME301T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z101 Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X Pad 10 LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[3A7]|K007|K00R)(?:[);/ ]|$)|MeMO Pad 7`),
		regexp.MustCompile(`(?i)K01E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00U|ME173X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[15]|K00L|AST21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TF300T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K01B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TX201LA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P01[YZ](?:_S)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00J`),
		regexp.MustCompile(`(?i)P01[VW]|P002`),
		regexp.MustCompile(`(?i)(?:P024|P00A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P01MA?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASUS_(w706)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00I`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P008`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00C|P02[138]|P00L|P01T_1`),
		regexp.MustCompile(`(?i)ME371MG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[2N9]|K00E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K016(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A001D|ZB634KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00N`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00[CE]`),
		regexp.MustCompile(`(?i)(?:ASUS[-_])?T00T`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A002(A)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I006D|ZS590KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I004D|ZS672KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2202)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A006`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A009`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z007`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00P[SD]|ZB555KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZB60[12]KL)|ZenFone Max Pro M1`),
		regexp.MustCompile(`(?i)(?:ASUS[_-])?(X01([AB]D)|ZB633KL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z00[AD]|Z008D|Z008|Z00AD[AB]?|ZE551ML)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZenFone 2E)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:A007|Z00YD|ZA550KL|ZB553KL|ZB501KL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00RD|G552KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z00[ERLMTW]D|Z011D|ZE500KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00[IQ1]|Z01KD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00P`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00K|X017DA|X017D|ZC600KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z01RD|ZS620KL)|Zenfone 5Z`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00[JF]|X00QD|X00QSA|ZE620KL)|Zenfone 5`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00G|Z002|ZS630KL|I01WD[X]?)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZS671KS`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZS670KS|I002D|AI2205_[AC])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z010D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X018D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X00TD?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X01BDA|ZB631KL|Zenfone Max Pro M2)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X014D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(L001|X00[7AB]D|X009[DB][DA]|X009D|Z00[SV]D|ZB500K[LG]|ZB551KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:G550KL|X013DB)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X013D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00[SV]D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00[23])`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X005`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X550`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00GD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00D[DS]|X008D)|ZC553KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X008)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(ZE553KL|Z01HDA?)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZS550KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00UD`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(Z016[DS]|Z01FD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z(?:017DA|E520KL|E552KL|017D|012(?:DC?|S))`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z01B[DS]|ZC551KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A001`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZD552KL|Z01MDA?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00LDA|ZD553KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00LD|Z01KS|Z01KDA|ZE554KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X00(?:[HIK]D|IS)|ZC554KL|ZC520KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X015D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(:?Z01G[DS]|ZS551KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00XS`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z01QD|ZS600KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I001D[ABCE]?|ZS660KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I003DD?|ZS661KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I005D[AC]?|ZS67[36]KS|ROG Phone 5)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2201)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2203)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2205)`),
		regexp.MustCompile(`(?i)(K50IJ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tinker Board( S)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZenWatch( 2)?`),
		regexp.MustCompile(`(?i)Asus(?:-|;)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(PadFone(?: [^;/]+)?) Build`),
		regexp.MustCompile(`(?i)(PadFone(?: [a-z0-9]+)?)`),
		regexp.MustCompile(`(?i)(?:Asus|Transformer) ((?:Pad |Prime )?TF[0-9a-z]+)`),
		regexp.MustCompile(`(?i)Chromebook Flip (C10[01]PA|C302)`),
		regexp.MustCompile(`(?i)(?:AP570[12]|AP5705S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AP570[12]|AP5705S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATOM-(108AM|216RK|216AM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Magic_1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(100011886BK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Audiovox|CDM|UTS(?:TARCOM)?\-|audio[a-z0-9\-]+`),
		regexp.MustCompile(`(?i)Audiovox[_\-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)CDM(?:-)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)UTS(?:TARCOM)?-([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)audio([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)R2021W2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(R2021W2)`),
		regexp.MustCompile(`(?i)Avaya Vantage(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avenzo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOB4 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOB4PRO 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avvio[ _]?([a-z0-9\-]+)|(?:CHIVAS_55|Colombia_2018|Mint_M353)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avvio[ _]PAD`),
		regexp.MustCompile(`(?i)Avvio[ _]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(?:AWOW_)?(UTBook|CreaPad_100[39]_EEA)`),
		regexp.MustCompile(`(?i)(?:AWOW_)?(UTBook|CreaPad_100[39])`),
		regexp.MustCompile(`(?i)Axioo[_ ]|PICOp(?:hone|ad)[_-]`),
		regexp.MustCompile(`(?i)Axioo[_ ](AX[45])`),
		regexp.MustCompile(`(?i)PICOphone_(L1|M4N|M4P_M3|M4U_M2_M)`),
		regexp.MustCompile(`(?i)PICOpad[_-](7H_7|7H|GGT)(?:_3G)?`),
		regexp.MustCompile(`(?i)Axxion ATAB-[0-9]+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Axxion ATAB-([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azumi[_ -]|(?:SPEED55|A50_Style_Plus|LT50\+|KIREI A5Q PLUS|NOBU[ _]A55[ _]PRO|IRO A55 QL?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azumi[_ -]AKANE`),
		regexp.MustCompile(`(?i)Azumi[_ -]A4\+`),
		regexp.MustCompile(`(?i)Azumi[_ -]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Azumi[_ -]([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)LT50\+`),
		regexp.MustCompile(`(?i)NOBU[ _]A55[ _]PRO`),
		regexp.MustCompile(`(?i)BAFF\d{2}`),
		regexp.MustCompile(`(?i)BAFF(\d{2})YFHD`),
		regexp.MustCompile(`(?i)BAFF(\d{2})Y(STV-R)`),
		regexp.MustCompile(`(?i)Pixavi[ _](Phone)`),
		regexp.MustCompile(`(?i)BASE[_ ](Varia)`),
		regexp.MustCompile(`(?i)bb-mobile|Techno[-_ ](8\.0|9\.7|TQ863Q|X595BT|X800BJ|S700BF|I700AJ|10.1 LTE TQ060X|7.0 LTE TQ763I|I785AP|I101BI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]S700BF(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]10.1 LTE TQ060X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]TQ863Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]I700AJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[-_ ]I785AP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]X800BJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[-_ ]I101BI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]7.0 LTE TQ763I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FirstTab TP-17)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ](9\.7|8\.0) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ](?:X595BT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:32LEX-7272|([65]5|50|4[03]|3[29]|2[48])LEX[-_](81(?:27|39|45|58|6[12]|7[34])|71(?:[23]7|4[345]|5[45]|6[2368]|[57]8|7[15])|7202|725[79]|7225|7287|8243)[_/]?([FU]?TS2C)|(?:39|24)LEX-7289)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2})LEX[-_](\d{3,4})[_/]?([FU]?TS2C)`),
		regexp.MustCompile(`(?i)(39|24)LEX-7289(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2})LEX[-_](\d{3,4})`),
		regexp.MustCompile(`(?i)(?:BDF[- ](?:819|P10|M107|K107H|KT107|MT6753|X20|P30)|K960N_MT(?:6580|6753)(?:_32_N)?|m107_\d+a_64_q|ZL80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BDF[- ](819|P10|M107|K107H|KT107|MT6753|X20|P30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)m107_\d`),
		regexp.MustCompile(`(?i)K960N_MT(6580|6753)(_32_N)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SMART_B19|Destiny)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BGH ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Y([17]00|2[01]0|1010)`),
		regexp.MustCompile(`(?i)BGH (\+Simple|Mini|M840)`),
		regexp.MustCompile(`(?i)BGH ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(ZBH-)?BIHEE`),
		regexp.MustCompile(`(?i)(A1[1268]|A[78]\+|A[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BPM9727)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:I11|I10(Plus)?)_EEA|Android 11;(?: [\w-]+;)? I11|I10_Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I10_?(Plus|Pro)?(?:_(?:EEA|ROW))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) I11(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BMXC[_ ]?(?:80[01])| M863(?:-EEA)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M863)`),
		regexp.MustCompile(`(?i)BMXC[_ ]?(80[01])`),
		regexp.MustCompile(`(?i)(BT7X1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BROR[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:RUNE III?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RUNE (III?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BK2021)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Nook|BN[TR]V[0-9]+`),
		regexp.MustCompile(`(?i)Nook([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Nook[ _]([^/;]+)[ _]Build`),
		regexp.MustCompile(`(?i)(BN[TR]V[0-9]+)`),
		regexp.MustCompile(`(?i)(?:Class_C250|TW10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TW10)`),
		regexp.MustCompile(`(?i)(Class_C250)`),
		regexp.MustCompile(`(?i)Becker-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Beeline|(?:A239s|SWG2001A-A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beeline[_ ]Pro[_ ]([2436])`),
		regexp.MustCompile(`(?i)Tab (Fast(?: 2)?|Pro)`),
		regexp.MustCompile(`(?i)Tab ([0-9])`),
		regexp.MustCompile(`(?i)E([67]00)`),
		regexp.MustCompile(`(?i)(?:Beeline[_ ])?Smart[ _]?([0-9])`),
		regexp.MustCompile(`(?i)(?:Beeline[_ ])?Fast[_ ]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fast(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A239s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SWG2001A-A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Beelink (?:G[ST]1|LAKE I|SEA I|A1)|GTKing(?:_AT)?|GT1mini-2|GT1-mini(?:[-_]AT)?|R68 II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beelink (G[ST]1|LAKE I|SEA I|A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT1-mini(?:-AT)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT1mini-2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTKing PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTKing(?:_AT)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R68 II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beetel ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(X104)-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bp100 X-Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BENQ(?:[ \-])?([a-z0-9]+)|(?:F52_09|F5_15|T47_09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F(?:52|5)|T47)_(?:15|09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BENQ(?:[ \-])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)BENQ-SIEMENS - ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)BenWee[ _-]?(?:[^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)BenWee W5 ?pro`),
		regexp.MustCompile(`(?i)BenWee[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Benco[_ ]|(?:AE9010|AE9950|AH9110)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB-A03-(?:BR2|BS))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Class S300 LTE|G-PADLITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Class S300 LTE)`),
		regexp.MustCompile(`(?i)(?:SURVE(10|[26-8]|[12] PRO)|Home9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURVE([12]) PRO`),
		regexp.MustCompile(`(?i)SURVE(10|[26-8])`),
		regexp.MustCompile(`(?i)BEZKAM (BK-RAM2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAMETAB-ONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BilimBook mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Capture\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MD09TV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BioWolf 8-F30|BIOWOLF8F30|Ruggbo 20 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BioWolf 8-F30|BIOWOLF8F30`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+)`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+)`),
		regexp.MustCompile(`(?i)Bitel[ _-]([^/;]+) Build|(?:B(?:840[5-9]|841[0456]|850[2346]|860[146]|9401|950[1-5])|S8402L?|S8501L?|BPRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B(?:840[5789]|841[0456]|850[2346]|860[146]|9401|950[12345])|S8402L?|S8501L?)`),
		regexp.MustCompile(`(?i)BPRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bitel[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:Mobitab10c-3G|Tab1011Q_II|Colortab[ _]?(10(?:M| II)?|816i))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Mobitab)(10)c-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab1011Q_II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Colortab[ _]?(10(?:M| II)?|816i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tough Mobile 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bphone[ _](B111[45]|B2017)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B6 Master|B6 Note X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BMM[ _-]?(?:44[123]D|431B|441[AWB]|44[12]S|431[SD]|53[23]D|54[12]S|541[ABW]|54[123]D|543S|531[ABD]|532 S|531S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BMM441[AS]`),
		regexp.MustCompile(`(?i)BMM442S|BMM441B`),
		regexp.MustCompile(`(?i)BMM543[DS]`),
		regexp.MustCompile(`(?i)BMM[ _-]?(53[23]D|431[DS]|54[12]S|531S|431B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EO104K)[-_]BL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blackview|(BL8800|BV([24-9]000|8800|[46]900|(5[1589]|9[135689])00|6[1368]00|7100)(?:[ _](?:PRO))?|(P10000(?:[ _](?:PRO))?)|omega[ _]pro|Alife[ _][PS]1|Heatwave|DM550|BV9700Pro|A[68]0(?:Pro)?\))|(?:SOLID 4 G2|A[86]0Plus|A80S|BL6000Pro|BL8800Pro|R6 Lite|P2Lite|A8 MAX|A30-RU|A20Pro|Android 10;(?: [\w-]+;)? Tab[89]|Android 10(?:[\d.]*);(?: [\w-]+;)? (?:A80)|Android 11(?:[\d.]*);(?: [\w-]+;)? (?:A95)|Android 1[12];(?: [\w-]+;)? (?:A[79]0|A70 Pro|A55 Pro|Tab 1[01356]|Tab 6)|BV500|BV[579]200|SOLID_4G1|BV5300 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A([2678]0|55) ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A([6798]0|95)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)A8 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A80S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A[86]0|BV[59]500)Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BV6000S|BL8800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P2|R6) ?Lite`),
		regexp.MustCompile(`(?i)(BL6000|BL8800|BV(?:[0-9]+))Pro`),
		regexp.MustCompile(`(?i)Blackview (A[78]|E7S)`),
		regexp.MustCompile(`(?i)(BV6[13]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BV\d+[\w]?|P10000)[ _]?PRO(?:[-_](?:RU|F))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BV\d+[\w]?|P10000)(?:[-_](?:RU|F))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab (1[05]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) Tab ?(6 Kids)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab 11 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) Tab ?([689]|1[01356])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)omega[ _]pro`),
		regexp.MustCompile(`(?i)(Alife[ _][PS]1|DM550|Heatwave)`),
		regexp.MustCompile(`(?i)Blaupunkt|(?:Soundphone S2|Atlantis[_ ](?:1001A|1010A|A10[._]G40[23])|SLplus02|Discovery[_ ](?:A10_302|10[28]C|111C|1000C|1001A?)|Endeavour[_ ](?:785|101[GLM]|1000|1001|101[03]|1100)|Polaris[_ ]80[38](?:_BE)?|BP_(?:6010|6110)|B-STREAM|SL05|SM 02 2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Discovery[_ ](1000|111|10[28])C`),
		regexp.MustCompile(`(?i)Discovery[_ ]A10_302`),
		regexp.MustCompile(`(?i)Discovery[_ ]1001A`),
		regexp.MustCompile(`(?i)Discovery[_ ]1001`),
		regexp.MustCompile(`(?i)Endeavour[_ ](101[GLM]|785|100[01]|101[03]|1100)`),
		regexp.MustCompile(`(?i)Polaris[_ ](808[_ ]BE|80[38])`),
		regexp.MustCompile(`(?i)Atlantis[_ ](1001A|1010A|A10\.G40[23])`),
		regexp.MustCompile(`(?i)BP_(6010|6110)`),
		regexp.MustCompile(`(?i)Blaupunkt[_ ](SL[_ ]0[124]|SM[_ ]0[12])`),
		regexp.MustCompile(`(?i)(SF02|SL05)`),
		regexp.MustCompile(`(?i)(4K Android TV)`),
		regexp.MustCompile(`(?i)(?:BE_(xl|se|o2|fr|et|dg)|BL-919845)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE_(xl|se|o2|fr|et|dg)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Zero18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LaserTAB10|PlatinumTAB10_4G_V\d|BlackTab7_3G_V2|BlackTAB7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PlatinumTAB10_4G_(V\d)`),
		regexp.MustCompile(`(?i)BLU[ _]|(?:blu|Dash)[ _]([^/;)]+)(?: Build|[;)])|(?:Studio[ _](G3|J8M|X10L|X12|5.0K|5.5|View(?: XL)?|Mega(?: LTE)?|C 8\+8|[CGM][ _]HD|G2 HD|G4|[CGX]|SELFIE|Selfie LTE|Touch|M[45] Plus|J[1258]|X[89] HD|X10\+?|XL(?: 2)?)|Advance (4.0 ?[LM]|5.[02](?: HD)?|A4|L[45])|M6 2021|ENERGY (DIAMOND|XL)|ENERGY[_ ]DIAMOND[_ ]MINI|Energy X 2|LIFE XL|B110DL|Dash (?:X[2L]|L3)|PURE (?:X[LR]|MINI|View)|Life One X2|G50 (?:Mega|Plus)|G51 Plus|G90(?: PRO)?|G91 Pro|GRAND (?:M3|Max|5.5 HD|XL LTE|Mini|Energy)|R1 (?:HD|PLUS)|R2 (?:LTE|Plus)|Tank Xtreme [45].0|Tank Xtreme(?: Pro)?|Touchbook M7 Pro|DASH X PLUS|C[456] 2019|BOLD (?:M7|N1)|B1[34]0DL|Vivo (?:5 Mini|One Plus|5R|XL[234]| Plus|8L|XI[+]?|GO)|C[56]L(?: 2020)?|C6 2020|G9 PRO|D701|VIEW 1|B131DL|R2 3G|Grand (?:M2X?|XL|M2 LTE)|D600|D5[01]0|DIAMOND M|M8L Plus|STUDIO ENERGY|M8L 2022|LIFE X8|M10L Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Advance (4.0 ?[LM]|4.0|5.[02](?: HD)?|A4|L[54])`),
		regexp.MustCompile(`(?i)M6 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Studio[ _](G3|J8M|5.0 C|5.5|C 5\+5 LTE|View(?: XL)?|Mega(?: LTE)?|C 8\+8|G HD LTE|[CG][ _]HD|C|G|Touch|M HD|G2 HD|M[45] Plus|J[1258]|X[89] HD|X5|X10\+?|XL(?: 2)?|X|G4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Studio[ _]5.0 ?K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STUDIO[_ ](X10L|X12)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STUDIO SELFIE ([23]|LTE)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?NEO_ENERGY_MINI`),
		regexp.MustCompile(`(?i)ENERGY[_ ]DIAMOND[_ ]MINI`),
		regexp.MustCompile(`(?i)DASH[ _]X[ _]PLUS[ _]LTE`),
		regexp.MustCompile(`(?i)DASH 4.5`),
		regexp.MustCompile(`(?i)PURE (X[LR]|View)`),
		regexp.MustCompile(`(?i)BOLD (M7|N1)`),
		regexp.MustCompile(`(?i)LIFE ONE (X2?)`),
		regexp.MustCompile(`(?i)NEO (XL|X|5\.5)`),
		regexp.MustCompile(`(?i)G(90?) PRO`),
		regexp.MustCompile(`(?i)(G90|D701|R2 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRAND 5.5 HD`),
		regexp.MustCompile(`(?i)Grand (M2X?|XL)`),
		regexp.MustCompile(`(?i)B13[01]DL`),
		regexp.MustCompile(`(?i)R([12]) PLUS`),
		regexp.MustCompile(`(?i)C([456]) 20(19|20)`),
		regexp.MustCompile(`(?i)Tank Xtreme ([45]).0`),
		regexp.MustCompile(`(?i)C([56])L 20(20|21)`),
		regexp.MustCompile(`(?i)C([56])L`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?VIVO[ _]SELFIE`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo 5 Mini`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo (One|XL3|XI)(?: Plus|[+])`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo (5R|XI|XL[234]|8L)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?VIVO GO`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?(D600|D5[01]0)`),
		regexp.MustCompile(`(?i)M(8|10)L Plus`),
		regexp.MustCompile(`(?i)M(10)L Pro`),
		regexp.MustCompile(`(?i)M8L (2022)`),
		regexp.MustCompile(`(?i)STUDIO 7.0 II`),
		regexp.MustCompile(`(?i)DASH (L[45] LTE|5.0|L[45]X|L3|X2|[LMX])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DASH[ _]([^)/;]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)blu[ _]([^/;]+)( Build|[);])`),
		regexp.MustCompile(`(?i)BLUSLATE([67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bluboo|Maya Build|(?:Picasso(?: 4G)?|Xfire2?|D6 Lite|D1_Pro|D6 Pro|S8_plus_a| S8a|Android 8(?:[\d.]*);(?: [\w-]+;)? D6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Picasso(?: 4G)?`),
		regexp.MustCompile(`(?i)D([16])[_ ]Pro`),
		regexp.MustCompile(`(?i)(?:Bluboo[_ ])?S8[_ ]plus`),
		regexp.MustCompile(`(?i) D6(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Bluboo[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Bluboo[ _-]?([^;/)]+)`),
		regexp.MustCompile(`(?i)BSS(45|50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VF550|EF501R?)(:_RU)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLUEDOT[_ ]|(?:BNT-71|BNT-801W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLUEDOT[_ ])?(BNP-500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BNT-71|BNT-801W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:33GT HD|WV8R-M|WV8R[_-]N|WV8-[ML])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WV8R[_-]N`),
		regexp.MustCompile(`(?i)Bmobile[_ ]|B60Pro(?:_MV03)?|BL50P_TG0[567]|BL51_MV05|BL54_?Pro|(?:B50Pro|BL5[02]|BL60_TG(?:05|17)|BL60M_MV05|FUN 4 2018|AX686A|AX-?(?:[1-9][0-9]{2,3}[eEO+]?|7OO))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AX-?([1-9][0-9]{2,3}[eAEO+]?)`),
		regexp.MustCompile(`(?i)B60Pro(?:_MV03)?`),
		regexp.MustCompile(`(?i)BL60_TG(?:05|17)`),
		regexp.MustCompile(`(?i)BL50P_TG0[567](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL(5[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL51_MV05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL54_?Pro`),
		regexp.MustCompile(`(?i)Bmobile[_ ]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Bmobile[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:K10[ ]?SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B_TAB1021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cybook)[ -]Tablet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Pulse Retro|Pulse Sky|Pulse Glide|Cabana|StrikaPlay)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Pulse Retro|Pulse Sky|Pulse Glide)`),
		regexp.MustCompile(`(?i)(Cabana)`),
		regexp.MustCompile(`(?i)(?:sprd-)?(BOWAY)`),
		regexp.MustCompile(`(?i)BOWAY[ _-]([^/;]+)[ _]Build`),
		regexp.MustCompile(`(?i)([^/;]+) Build/BOWAY`),
		regexp.MustCompile(`(?i).*BOWAY[ _-]([^/;]+)/`),
		regexp.MustCompile(`(?i)(?:L1f-pluss|Brandcode B6S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BPRIME|BSTAR\+?|BPRIMES|B-ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bravis[ _]|A501 Bright|A552 JOY Max|A504 Trace|A505 JOY Plus|A503 Joy|NB(?:106M|10[1-8]|751|7[145]|8[57]1|76)|NP101|NB961|NP 104 3G|B501|N1-570 Space|Atlas A551|A511 Harmony|A512 Harmony Pro|A510_Jeans_4G|A509_Jeans|N1_550_Cruiser|N1_551 Gloss`),
		regexp.MustCompile(`(?i)Bravis[_ ]X500`),
		regexp.MustCompile(`(?i)Bravis[_ ]A506`),
		regexp.MustCompile(`(?i)Bravis[_ ]A553`),
		regexp.MustCompile(`(?i)BRAVIS[ _]TAU`),
		regexp.MustCompile(`(?i)BRAVIS[ _]DELTA`),
		regexp.MustCompile(`(?i)BRAVIS[ _]TREND`),
		regexp.MustCompile(`(?i)BRAVIS[ ]A554`),
		regexp.MustCompile(`(?i)BRAVIS[ ]S500`),
		regexp.MustCompile(`(?i)BRAVIS[ _]SPARK`),
		regexp.MustCompile(`(?i)BRAVIS[ _]SLIM[ _]3G`),
		regexp.MustCompile(`(?i)Bravis[_ ]([^;\)]+) Build`),
		regexp.MustCompile(`(?i)(NB(?:106M|10[1-8]|75[134]|7[145]|8[57]1|76)|NP101|NB961)`),
		regexp.MustCompile(`(?i)(HD1023|XD233|XD230|XD1030|XD1132|XT114[34]|4K1142|LS424)`),
		regexp.MustCompile(`(?i)Brondi[ _]|(?:CENTURION|GLADIATOR| GLORY|LUXURY|SENSUELLE|VICTORY|AMICO SMARTPHONE XL|AMICO_SMARTPHONE_4G|MIDNIGHT_SKY|501 SZ|850_4G)(?:[ _-]?[2-6])?(?:[);/ ]|$)|Surfing Tab`),
		regexp.MustCompile(`(?i)(?:Brondi[ _])?(620 SZ|730_4G_HD|501 SZ|850_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CENTURION(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLADIATOR(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUXURY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIDNIGHT_SKY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SENSUELLE(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VICTORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Surfing Tab ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Surfing Tab ([^;/)]+)[;/)]`),
		regexp.MustCompile(`(?i)(BUB6R-3T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BTOUCH7_PLUS|SWEET 5\+ 2019|SWEET ?[56]\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET 5\+ 2019`),
		regexp.MustCompile(`(?i)SWEET ?([65])\+`),
		regexp.MustCompile(`(?i)Bush[ ,_-]|Bush10Nou`),
		regexp.MustCompile(`(?i)Spira B1 (8|10\.1)`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+)Tablet(?: Build|[);])`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+) Smartphone`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)BUSH, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(XR4500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:noa X2 Plus|noa_G1|noaXPower|NOATAB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAGI-([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)(?:CG_OMEGA6|Omega (?:[38])|CG_EON_Blaze_Pro|CG\|EON Blaze GOLD|Blaze [GN])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Omega ([38])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG_OMEGA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG_EON_Blaze_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG\|EON Blaze GOLD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blaze ([GN])`),
		regexp.MustCompile(`(?i)CGV_(Ultimate T8)`),
		regexp.MustCompile(`(?i)CKK (Inspire 1|Garnet)`),
		regexp.MustCompile(`(?i)BlueS10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN[_ ]|(?:C55 Pro|C60 Ultra|Fenix8_3G|Note1|Tronik_[123]|Star7 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C55 Pro|C60 Ultra|Star7 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fenix8_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN Note1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN R([124])0`),
		regexp.MustCompile(`(?i)Tronik_(\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN[_ ]X(4|55|5)`),
		regexp.MustCompile(`(?i)COYOTE[ _]`),
		regexp.MustCompile(`(?i)(?i)CUBOT|[^QUMOlike\s]QUEST(?: LITE)?|[^RedmiTegra ](?:NOTE 7|[^Galaxy ]NOTE 20(?: PRO)?|RAINBOW 2|KING_KONG_3|KINGKONG [5679]|KINGKONG 5 Pro|ZORRO 001|KINGKONG[_ ](?:MINI2?|POWER)|KING KONG CS|R15_PRO|S550 Pro| CHEETAH| [RX]19|X19 S|[^m][i]\s*MAX 3|Android 9;(?: [\w-]+;)? (?:J5|MAX 2|X20 PRO)|Android [89](?:[\d.]*);(?: [\w-]+;)? R15|Android 11;(?: [\w-]+;)? (?:Pocket|NOTE 9|P50)|POCKET 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCKET (3)`),
		regexp.MustCompile(`(?i)CHEETAH( 2)?`),
		regexp.MustCompile(`(?i)KINGKONG MINI ?([23])`),
		regexp.MustCompile(`(?i)KING[_ ]?KONG[_ ]([35679])`),
		regexp.MustCompile(`(?i)CUBOT[ _]Echo`),
		regexp.MustCompile(`(?i)CUBOT[ _]MANITO`),
		regexp.MustCompile(`(?i)CUBOT[ _]MAGIC`),
		regexp.MustCompile(`(?i)MAX ([23])`),
		regexp.MustCompile(`(?i)CUBOT[ _]MAX`),
		regexp.MustCompile(`(?i)NOTE (20|9)`),
		regexp.MustCompile(`(?i)(R15|S550|J3)[_ ]PRO`),
		regexp.MustCompile(`(?i)CUBOT[_ ]NOTE[_ ]S`),
		regexp.MustCompile(`(?i)CUBOT[ _](A5|C6W|H3|J3|P7|P20|[RXJ]9|R11|X18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (X19 S|[RX]19|R15|J5|P[56]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUBOT ([^;/]+) Build`),
		regexp.MustCompile(`(?i)([^;/]+) Build/CUBOT`),
		regexp.MustCompile(`(?i)CVTE[_ ](MSD338_(:?1G|512M))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Camfone (?:SE)|Hero[_ ](?:H5\+|SE2|H9|(?:H7|XR)_Plus|SX|1[123]|SE3[ _]Max)|Honey (?:Y1|Y2s)|Mega 10|Furious 7 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hero[_ ](?:H5\+|SE2|H9|(?:H7|XR)_Plus|SX|1[123]|SE3[ _]Max)|Honey (?:Y1|Y2s)|Mega 10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Camfone (SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S70CDS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M75TG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Capitel-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Captiva[ _-]([^;/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)CT(?:10[0123]0|7[12]0|820|735_16GB|1056_32GB|1005)(?:W|FR)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT(10[0123]0(?:W|FR)?)`),
		regexp.MustCompile(`(?i)CT(7[12]0(?:W|FR)?|735|1005|1056)`),
		regexp.MustCompile(`(?i)(C811|C7[57]1)(?: 4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C751(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C771(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C811 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASPER[_ ]|VIA[- _](X30 Plus|[XF]20|T7D|A[34]|E[43]|E30|F[123]|G[345]|M4|[LS]8|S7|P[23]|V8C|A[13]_Plus(?:_64)?|A1(?:_1)?|S[13]0|S48|S|T17_M|T1[07]|T7|[ST]7-3G|T8B|T8D-3G|S1[78]|S48_0|[LS]30_0|L30|F30 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CASPER[_ ])?VIA[_ ](A1|X30)[_ ]Plus(?:_64)?`),
		regexp.MustCompile(`(?i)(?:CASPER[_ ])?VIA[_ ]([XF]20|G1_Plus|F30 Plus|A3_Plus|G[135]|E[14]|E30|[AE]2|M[123]|V[35689]|V10|G3|V6X|A[34]|E3|F[123]|G4|M4|P[23]|S|V8C|A1(?:_1)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASPER_L10_4.5G`),
		regexp.MustCompile(`(?i)CASPER_(S[23]8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIA[- _]([ST]7|T8D)-3G`),
		regexp.MustCompile(`(?i)VIA[- _](T7D|S[13]0|S48|[LS]8|S7|T17_M|T1[07]|T7|T8B|S1[78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIA[- _](S48|[LS]30)(?:_0)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B30_Dorado|Cat ?(tablet|stargate|nova)|(?:B15Q|CAT B35|CAT-B100|S62 Pro|S48c|Android 9;(?: [\w-]+;)? S52|Android 10;(?: [\w-]+;)? S42)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (S48c|S[45]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cat ?(?:tablet)? ?((?:Galactica|Nova|StarGate|PHOENIX)[^/;]*) Build`),
		regexp.MustCompile(`(?i)Cat ?tablet`),
		regexp.MustCompile(`(?i)CAT-(B100)`),
		regexp.MustCompile(`(?i)(B30)_Dorado`),
		regexp.MustCompile(`(?i)(?:Cavion[_ ](?:Solid[_ ]4[\._]5|Base[ _](?:7|7_3G_Silver|5[._]0|10|7.2 Quad)|10_3GRQ)|base10_3g_silver|Cavion7.1quad|M1092Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cavion[_ ]Solid[_ ]4[._]5`),
		regexp.MustCompile(`(?i)Cavion[ _]BASE[ _]5[._]0`),
		regexp.MustCompile(`(?i)Cavion(?:7.1quad)`),
		regexp.MustCompile(`(?i)Cavion Base 7.2 Quad`),
		regexp.MustCompile(`(?i)(?:Cavion_)?Base_?(7|10)_3G_Silver`),
		regexp.MustCompile(`(?i)(M1092Q)`),
		regexp.MustCompile(`(?i)(?:ACRUX|BELLATRIX|BETELGEUSE|Kil-82WFDC|U800B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U800B)`),
		regexp.MustCompile(`(?i)CELCUS, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Celkon|Android 7.+ UNIQ(?: Build|[);])|(?:Millennia Hero|2GBStar|2GBXpress|CliQ2|Campus Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Celkon[ _*](C[78]20)`),
		regexp.MustCompile(`(?i)Celkon[_ ]4G_TAB-8`),
		regexp.MustCompile(`(?i)CliQ2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4GPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 7.+ UniQ(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Campus Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Celkon[ _*](CT[^;/]+) Build`),
		regexp.MustCompile(`(?i)Celkon[ _*]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Celkon[\. _*]([^;/\)]+)[\)/]`),
		regexp.MustCompile(`(?i)Cell_?C_|(?:Android 5(?:[\d.]*);(?: [\w-]+;)? (?:Summit|Fantasy))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cell_C_(Summit_Plus|Fame|Evolve)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Summit(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fantasy(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Cool_Extreme_2|Earn|Fashion2Plus|Fashion[ _]C|Cool Duo|CHIC_X1|Miracle XS|Miracle 6.0 S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cool_Extreme_2|Earn|Fashion[ _]C|Cool Duo|Miracle XS|Miracle 6.0 S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cellacom|(?:S51_lite|X501_Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cellacom_S62(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S51_lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X501_Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cosmas|CT_Cosmas_V|PADUA`),
		regexp.MustCompile(`(?i)(?:CT_)?Cosmas_(TF|[VF])`),
		regexp.MustCompile(`(?i)(?:Centric[- ]CM(?:5001|33[23]1|3321Plus)|CM4331|CM2221)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM5001`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3321Plus`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3321`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3331`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM4331`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM2221`),
		regexp.MustCompile(`(?i) (?:C66)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (C66)`),
		regexp.MustCompile(`(?i)Changhong|HON H01|GHONGV12`),
		regexp.MustCompile(`(?i)Changhong[ ]?(X1-K|X6|R8|Z9S?|Z1S|S18|R9|S07)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ChangHong Andr[o0]id TV`),
		regexp.MustCompile(`(?i)changhong,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:Opera TV.+)Changhong-([^);/]+)`),
		regexp.MustCompile(`(?i)Cherry|Superion[_ ](?:S2|Radar Deluxe|S1 DTV|S1 Plus DTV|Tab Pro)|Flare([ _])?(2.[01]|2X|4|A[123]|J[1235678]|P[13]|S[4-8]|X2|Y[3567]|S[ _]Play|HD|LITE|XL|X_V[23]|Y3s|Tab|INFINITY)(?:[ _](?:Pro|Plus|Max|LTE))?|Fusion Aura 3s|Radar Deluxe 2|Desire R[678]|Desire_R[67]_Lite|Fusion Bolt|Omega[_ ](?:Icon 2|Icon Lite 2|lite[_ ][243][Cs]?|HD [45]|HD_Duo|X)|Spin Max 2|Selfie_Two|Flare X Lite|Flare_5|Android 1.*Aqua S9|Omega_HD_4|MAIA PAD PLUS|COSMOS THREE| Revel 3G|Touch XL 2`),
		regexp.MustCompile(`(?i)(Flare2X|Aqua S9(?: (?:Max|Lite|Pro))?)`),
		regexp.MustCompile(`(?i)Flare[_ ]HD[_ ]([345])`),
		regexp.MustCompile(`(?i)Flare[ _]S[ _]Play`),
		regexp.MustCompile(`(?i)Flare (2\.[01])`),
		regexp.MustCompile(`(?i)Flare[_ ]J([2356])S`),
		regexp.MustCompile(`(?i)Flare_([A-Z]\d+)_Prime`),
		regexp.MustCompile(`(?i)Flare_([A-Z]\d+)_Deluxe`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Power`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Pro`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Lite`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Plus`),
		regexp.MustCompile(`(?i)Flare ?J3 ?Plus`),
		regexp.MustCompile(`(?i)Cherry[_ ]X740`),
		regexp.MustCompile(`(?i)Flare[ _]X[_ ]V([23])`),
		regexp.MustCompile(`(?i)Flare[ _]XL[_ ]?2`),
		regexp.MustCompile(`(?i)Flare[ _]([A-Z]\d+)[ _]mini`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Max`),
		regexp.MustCompile(`(?i)Flare[_ ]J2[_ ]DTV`),
		regexp.MustCompile(`(?i)Flare[_ ]INFINITY`),
		regexp.MustCompile(`(?i)Flare[_ ]Lite[_ ]3S`),
		regexp.MustCompile(`(?i)Flare(?:[ _])?(A1_Roam|A[123]|J8 LTE|J1s|J[1235678]|P[13]|S[4-8]|X2|Y3s|Y7_LTE|Y[3567]|[45])`),
		regexp.MustCompile(`(?i)OMEGA[ _]HD[ _]([45])`),
		regexp.MustCompile(`(?i)Omega[_ ]Lite[_ ](3[Cs]|[24])`),
		regexp.MustCompile(`(?i)Omega[_ ]X`),
		regexp.MustCompile(`(?i)Desire[ _]R(\d)[ _]Lite`),
		regexp.MustCompile(`(?i)Flare Tab Pro V(\d)`),
		regexp.MustCompile(`(?i)(Fusion Bolt|Flare Tab Pro|Flare Tab|Superion[_ ](?:S2|Radar Deluxe|S1 DTV))`),
		regexp.MustCompile(`(?i)Cherry(?:[ _]?Mobile)?[ _]?([^/;]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:ALTO (?:Bombo|classic|Estrella|JUEGO|SUBIR|[235])|FUEGO MAX|OJOS[ _](?:CIELO|CAMBIO|NUBE|[68i]|ORO|VIVIR|Plus|DOS mini|DOS|LUNA|X1)|AVANCE classic)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALTO ([235])`),
		regexp.MustCompile(`(?i)OJOS[ _]([68i]|X1)`),
		regexp.MustCompile(`(?i)E-Board[ -]MX05[45]`),
		regexp.MustCompile(`(?i)E-Board[ -](MX05[45])`),
		regexp.MustCompile(`(?i)(M812C|1501_M02|9930i|A1303|A309W|M651CY|M653|CMCC[ -]M(?:670|860)|M762G)(?: Build|[);]|$)`),
		regexp.MustCompile(`(?i)(M812C|1501_M02|9930i|A1303|A309W|M670)`),
		regexp.MustCompile(`(?i)Build/Tianyi|(?:TYH61[12]M|TYH211U|TYH201H|TYH622M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-(Hi8-super|Hi12|V99i?|V17HD3G|VX8-3G|V88-QUAD|V9-DUAL|V88S|Vi[78]|[HV]i10 (?:pro|plus))|Hi10 (?:Pro|plus)|HiPad[ -](?:X|X?Pro|Air|Max)|HiPadX|HiBox-hero|HiBook(?: pro)?|Hi(?:[89]|10) ?(?:Air|X?Pro)|HiPad ?Plus|Hi8SE|Vi8 plus|Vi10(?: ?Pro)?|Surpad|HiPadPro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CW-Hi8-super)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-)?(Vi10|Hi10|Vi8) plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V88)-QUAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V9)-DUAL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V17HD|VX8)-?(3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-)?(Hi10) pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBook pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBook(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?XPro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad-Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi([89]) ?Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi8SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi10 ?XPro`),
		regexp.MustCompile(`(?i)Hi([89]) ?pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10 ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Surpad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBox-hero(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(Vi[78]|Hi12|V99i?|V88S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RK25WO|RK[29]5|RS35|RS51_HS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Life X6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Claresta[ _]|(?:AirPhoneS[56]|AirPhone K6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AirPhone ?(S[56]|K6)`),
		regexp.MustCompile(`(?i)Claresta (F3) PRO`),
		regexp.MustCompile(`(?i)Claresta[ _](F4)`),
		regexp.MustCompile(`(?i)Clarmin|(?:B8Lite|B8Plus|Android 7(?:[\d.]*);(?: [\w-]+;)? B5Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Clarmin[_ ](B[65]|C1)`),
		regexp.MustCompile(`(?i)ClearPHONE ([246]20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CLEMPAD[_ ](?:6_XL|HR_Plus|HR|[68]|7_S|201[89])|ClemPhone_7|MFC_(?:2018|8))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLEMPAD_(201[89])`),
		regexp.MustCompile(`(?i)Clempad[_ ](6_XL|HR_Plus|HR|[68])`),
		regexp.MustCompile(`(?i)ClemPhone[ _](7)`),
		regexp.MustCompile(`(?i)(?:Cirrus_C2|Cyclone_C4|Storm_C3|Stratus_C[57](?:_Elite)?|Sunshine_T1|Typhoon_C6|Sunshine_T1_Elite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cirrus_C2|Cyclone_C4|Storm_C3|Stratus_C[57]|Typhoon_C6)`),
		regexp.MustCompile(`(?i)(Sunshine_T1(?:_Elite)?)`),
		regexp.MustCompile(`(?i)CloudFone[ _]|(?:Thrill[ _](?:Boost[ ]?(2|3)?|Power|Snap|Access|Plus 16GB|Lite|HD)|Excite Prime 2 Pro|Excite Prime|ExciteC|NBA Edition|Go SP|Next Infinity Plus|Next Infinity|Next Lite|Go Connect)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Boost 2 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Boost (2|3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill[ _]Boost(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Snap(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Plus 16GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Access(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill HD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NBA Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Go SP(?: 2)?|Next Infinity (?:Pro|Plus)|Next Infinity|Go Connect(?: Lite)?(?: 2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Next Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Next(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)\+VT(?:107C|Q007C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)\+VT(107C)`),
		regexp.MustCompile(`(?i)\+VTQ(007C)`),
		regexp.MustCompile(`(?i)Hind[ _]5\.1|X417[ _]Amaze|X418[ _]Zest|X421[ _]Nova|X422[ ]Exotic|X425[ _]Shavit|X428[ _]Astute`),
		regexp.MustCompile(`(?i)Hind[ _]5\.1`),
		regexp.MustCompile(`(?i)X417[ _]Amaze`),
		regexp.MustCompile(`(?i)X418[ _]Zest`),
		regexp.MustCompile(`(?i)X421[ _]Nova`),
		regexp.MustCompile(`(?i)X422[ _]Exotic`),
		regexp.MustCompile(`(?i)X425[ _]Shavit`),
		regexp.MustCompile(`(?i)X428[ _]Astute`),
		regexp.MustCompile(`(?i)CnM[ \-](?:Touchpad|TP)[ \-]([0-9\.]+)`),
		regexp.MustCompile(`(?i)Cobalt[ _-](?:SM|T)`),
		regexp.MustCompile(`(?i)Cobalt[ _-]SM_(55?|6)`),
		regexp.MustCompile(`(?i)Cobalt[ _-]T((?:7|10))[ _]3G`),
		regexp.MustCompile(`(?i)Cobalt[ _-]T((?:7|10))[ _]wifi`),
		regexp.MustCompile(`(?i)(MID(?:1024|112[56]|1045|1048|106[05]|4331|701[26]|7015A?|70[32]2|703[56]|704[278]|7052|7065|7120|8024|80[47]2|8048|8065|8125|812[78]|9724|974[02])|CTB761)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Colors[ _](S(?:[19]|11)|P70|P[456]5|P32|E15|P50 Plus)|Pride_1A|P52_Pride5C|P90_Pride5X|P95_Pride_7s|P77_Pride_1E|P88_Pride_1X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pride_1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P95_Pride_7s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P77_Pride_1E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P52_Pride5C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P90_Pride5X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P88_Pride_1X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Colors[ _](S(?:[19]|11)|P70|E15|P[456]5|P32|P50 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tesla|Impulse 7.85 3G|Impulse 10.1 OCTA|Smartphone_6.1|SP(?:6.2|6.2_Lite)|TTL(?:713G|8)`),
		regexp.MustCompile(`(?i)TeslaEvo5.0`),
		regexp.MustCompile(`(?i)(Gravity 9.7 SHD)`),
		regexp.MustCompile(`(?i)(Impulse 7.85 3G)`),
		regexp.MustCompile(`(?i)Impulse 10.1 OCTA`),
		regexp.MustCompile(`(?i)Tesla_SP([^/;)]+)L(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Smartphone_6.1`),
		regexp.MustCompile(`(?i)SP6.2_Lite`),
		regexp.MustCompile(`(?i)Tesla_SP(\d+)[_.](\d+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Tesla_SP([^/;]+) Build`),
		regexp.MustCompile(`(?i)SP([^/;]+) Build`),
		regexp.MustCompile(`(?i)Smartphone ([36])`),
		regexp.MustCompile(`(?i)(L7.1)`),
		regexp.MustCompile(`(?i)(L7 Quad) Build`),
		regexp.MustCompile(`(?i)(L7 Quad Lite)`),
		regexp.MustCompile(`(?i)(L8.1)`),
		regexp.MustCompile(`(?i)TESLA,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Comio|(?:CT701G PLUS|CT701W|GT100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Comio[ _-]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Compal-[a-z0-9]+`),
		regexp.MustCompile(`(?i)(?:CT101|CT1085_32GB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CT1085)_32GB`),
		regexp.MustCompile(`(?i)(CT101)`),
		regexp.MustCompile(`(?i)ConCorde ([^/;]+) Build|Concorde_Raptor_Z55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Concorde_(Raptor_Z55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ConCorde Tab ?([^/;]+) Build`),
		regexp.MustCompile(`(?i)ConCorde ReadMan ?([^/;]+) Build`),
		regexp.MustCompile(`(?i)ConCorde ([^/;]+) Build`),
		regexp.MustCompile(`(?i)(GoCAM_G301)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Concord[ _-]|(?:Flyfix 6|C-721|Plus-7_C777|Plus_M19_C779|Plus-9_C778|Dream_Edition_C-754)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Plus[-_]([79]|M19)_(C77[789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Allure (?:A55 Slim|M[123]|X)|Griffe T[235-9]|TFX71[12]G|TFX71[34]L|TMK715L|TRA-901G|TGW[-]?(710G|709|102L|801[GL])|(?:PGN\-?[456][012][0-9]|PHS\-601|PHQ519|PAM412|PHQ52[056]|TB105L|TB717G|PKT\-301|Plume (?:H1|L[1-68]|P8|P6 PRO LTE)|Infinity E5|Infinity a4|Infinity_i[45]|PKT411|SP413)(?:[);/ ]|$)|CTAB[^/;]+ Build`),
		regexp.MustCompile(`(?i)CTAB([^/;]+) Build`),
		regexp.MustCompile(`(?i)(TGW)-?(710G|709|801[GL]|102L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TFX71[12]G|TFX71[34]L|TB105L|TB717G|TMK715L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TRA)-(901G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGN-?403`),
		regexp.MustCompile(`(?i)PGN-?404`),
		regexp.MustCompile(`(?i)PGN-?409`),
		regexp.MustCompile(`(?i)PKT-?301`),
		regexp.MustCompile(`(?i)PGN-?504`),
		regexp.MustCompile(`(?i)PGN-?505`),
		regexp.MustCompile(`(?i)PGN-?506`),
		regexp.MustCompile(`(?i)(Allure \w+) Plus`),
		regexp.MustCompile(`(?i)(Allure \w+) Lite`),
		regexp.MustCompile(`(?i)(Allure (?:M[123]|X))`),
		regexp.MustCompile(`(?i)PGN\-?507`),
		regexp.MustCompile(`(?i)PGN-?508`),
		regexp.MustCompile(`(?i)PGN\-?509`),
		regexp.MustCompile(`(?i)PGN-?511`),
		regexp.MustCompile(`(?i)PAM-?412`),
		regexp.MustCompile(`(?i)PGN-?513`),
		regexp.MustCompile(`(?i)PGN-?514`),
		regexp.MustCompile(`(?i)PGN-?515`),
		regexp.MustCompile(`(?i)PGN-?516`),
		regexp.MustCompile(`(?i)PGN-?51[78]`),
		regexp.MustCompile(`(?i)Infinity_i([45])`),
		regexp.MustCompile(`(?i)PGN-?521`),
		regexp.MustCompile(`(?i)Griffe T3 ?pro`),
		regexp.MustCompile(`(?i)Griffe T([0-9]) Plus`),
		regexp.MustCompile(`(?i)Griffe T([0-9])`),
		regexp.MustCompile(`(?i)PGN-?522`),
		regexp.MustCompile(`(?i)PGN-?523`),
		regexp.MustCompile(`(?i)PGN-?527`),
		regexp.MustCompile(`(?i)PGN-?528|PLUME P6 PRO LTE`),
		regexp.MustCompile(`(?i)PGN-?605`),
		regexp.MustCompile(`(?i)PGN-?606`),
		regexp.MustCompile(`(?i)PGN-?607`),
		regexp.MustCompile(`(?i)PGN-?608|Allure A55 Slim`),
		regexp.MustCompile(`(?i)PGN-?609`),
		regexp.MustCompile(`(?i)PGN-?610`),
		regexp.MustCompile(`(?i)PGN-?611`),
		regexp.MustCompile(`(?i)PGN-?612`),
		regexp.MustCompile(`(?i)PGN-?613`),
		regexp.MustCompile(`(?i)Plume L([2468]) Pro`),
		regexp.MustCompile(`(?i)Plume L([13]) Plus`),
		regexp.MustCompile(`(?i)Plume L([1-5])`),
		regexp.MustCompile(`(?i)PGN-?([0-9]{3})`),
		regexp.MustCompile(`(?i)(?:CP6001A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CTAB1044hn|CTAB-1044|SEN_1055_ARM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CTAB1044hn|CTAB-1044)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Conquest[-_ ](?:S\d+|F2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Conquest[-_ ]S(\d+)`),
		regexp.MustCompile(`(?i)Contixo|(?:CX-1045 3G|KT995 3G|CX1045|B108_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CX-?1045(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CONTIXO GX 1035(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Contixo GT1160 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B105(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B108(?:[_ ]4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT107(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT715 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT995(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT ?1100GT(?: 4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad|(?:Cool_9S|1824-S0|8190Q|1831-A0|8676-[AM]01|1872-A0|CP8298_I00|CP3648AT?|CP8676_I0[23]|REVVLPLUS C3701A|VCR-[AI]0|C105-(?:8|E0)|C106-[789]|C107-9| C106|MTS-T0|cp3705A[S]?|ORL-C0|DLS-E0|182[56]-I01|1825-E0| 1825|8298-(?:M02|A01)|5560S|CP3320AS2|CP3667AT|CP3706AS|CP3669AS|CP3321AT|CP350[34]L|C103|CP03|C1-U02|SAC-A0| 203[29]|CP05)(?:[);/ ]|$)|(8295|5860S) Build`),
		regexp.MustCompile(`(?i)VCR-[AI]0`),
		regexp.MustCompile(`(?i)1831-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1872-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 2032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8190Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DLS-E0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1824-S0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3321AT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3705A[S]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3648AT?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3320AS2?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3706AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3669AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MTS-T0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:C106-[789]|R116|C10[36]|C1-U02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 2039(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C107-9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C105-(?:E0|8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1826-I01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1825-I01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 1825(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ORL-C0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cool_9S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SAC-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5560S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(5860S|8295) Build`),
		regexp.MustCompile(`(?i)Coolpad[_ ]2041`),
		regexp.MustCompile(`(?i)CP8676_I02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COR-I0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP8676_I03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP8298_I00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CP350[34]L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(8676-[AM]01|8298-(?:M02|A01))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad[ _\-]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(CP20)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cosmote?[_ ]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(CP-J55a|CP-J55aW|CP-J55aX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WING 5|WING9|Venus[ _][14]`),
		regexp.MustCompile(`(?i)Venus[ _]([14])`),
		regexp.MustCompile(`(?i)Cricket-([a-z0-9]+)|(?:U304AC|U325AC|U705AC|V350C|EC1002|EC21100[1-4]|SL100EA|SL101AE|WTCKT01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cricket-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Q7A\+?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRONY-7021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Crosscall|ODYSSEY_Plus|Odyssey S1|Trekker-[MSX][1-4]|Action-X[35]|Core-(?:M[45]|T[45]|X[345])`),
		regexp.MustCompile(`(?i)Action-X3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Action-X([35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Core-(M4) GO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Core-(M[45]|X[345])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Crosscall ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Trekker-([MSX][1-4]) Core`),
		regexp.MustCompile(`(?i)Trekker-([MSX][1-4](?: Core)?)`),
		regexp.MustCompile(`(?i)Core-T([45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CROWN, ([a-z0-9_ \-]+), (?:wired|wireless)|BlossomB902(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CROWN, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:SNOOK-X10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(<!myPhone ?)Cube|(U[0-9]+GT|K8GT)|(?:T8-PLUSM?S?|T8PLUSML|I1-TF[BD]?|I1-TC|i15-T[CG]?|I1_3GD|i1002S|Iwork10 Flagship|iwork10 Pro|T10 PLUS|CUBE-T970|U55GT_C8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U27GT-C8X?`),
		regexp.MustCompile(`(?i)U25GT-C4YT|U25GT-W4`),
		regexp.MustCompile(`(?i)U30GT ?2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U51GT-SL|U51GT-C8`),
		regexp.MustCompile(`(?i)(?:T8-PLUSM?S?|T8PLUSML)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1-TF[BD]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1_3GD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1-TC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i15-TG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i15-T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:i1002S|iwork10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Iwork10 Flagship|i15-TC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUBE-T970(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U[0-9]+GT[^;/]*) Build`),
		regexp.MustCompile(`(?i)(U[0-9]+GT(?:[0-9]|[\-_][a-z]+)?)`),
		regexp.MustCompile(`(?i)(K8GT)`),
		regexp.MustCompile(`(?i)C70W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C70W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cyrus[ _-]|CyrusApel|CM17XA|CS(?:22|45)XA(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CM17XA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CS(22|45)XA(?:_EEA)?`),
		regexp.MustCompile(`(?i)Cyrus[ _-]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Cyrus[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DTB-7168G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:D5-L|DT07-TAB4G|LM-01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LM-01)`),
		regexp.MustCompile(`(?i)(D5-L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DASS[-_ ](H-ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BOXD7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP|(?:Ursus|Ixion)[ _]([^;/)]+)|H135[ _]Build|Larus_TV1|Ixion(?:ML4.7|ES250)|M150Storm|(?:SENIOR|F4[38]D8000K|VA(?:[12]10|170)|ML450|MS[56]50|BL(?:[123]50|160|155)|BS(?:155|160|[1256]50)|S(?:3[78]0|2[89]0|670)|AL(?:[12]40|[23]50)|AS(?:155|[123]60)| (?:B260|B245|H[12]10|H270|L470|N280i|P310|P380i?|R1[18]0|Q110|E1[78]0|E[12]10|B(?:450|340|35[05])|M170|M445|M[12]10|T155|H32F8000C|U43F8000Q|A(?:1[456]0|340|[34]55)|GS15[035]|GL[23]55|G25[035]|G355|G550|G15[05]|ES750|XL150|Z[1-4]55|H[13]70|H[34]10|P[45]10|L2[17]0)|Z250|A440|A350|N[13]80i|L1[178]0|L3[17]0i|G450|G660|Q[123]10|Q[12]80|N[234]10|N[35]70|EX111|S[245]70|S[127]70i|S169|S110|S180i?|S770|A555|(?:U75H8000K|U50H8000E|U65H8000K|U50G8000QG|U55H8050E|U43G9000CG|U43F8100QG|U55G8000QG|U50G9000CG|H32H8001C|H32G8000CG|H32F8000QG?(?:-[abc])?|H32F8[01]00Q|H39F8000Q|F43H8000K|U43H8000E|U43F8000EG|F43F8000[CQ]G?|F32[FG]8000C|F43G8000C|H24H8000C|H24F8000Q|F43F8000Q-G)(?:-[AbcfedH])?|Android 8(?:[\d.]*);(?: [\w-]+;)? A240|android 10;(?: [\w-]+;)? (?:B[23]1|B38|B1[87]|K28|K[34]1)|android 9;(?: [\w-]+;)? (?:K18|K21|B11)|android 11;(?: [\w-]+;)? (?:D[12]1|T21|K[345]1|K[342]8|K61|C3[78]|B28|B27|H28)|H32H8051C-G|50UCY2-G|55UCY1|H3218000K|U50F8000QG|U50H8050EG|H32I8000K|U65G8000Q|U43G8100QG|Android 11;(?: [\w-]+;)? P11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DEXP_)?(ML450|MS[56]50|ES750|XL150|ES1050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IxionES250(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IxionML4.7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ixion[_ ]([^;/]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)M150Storm(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M445(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AL250(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AL350(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS155(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ursus[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i) (K[23456]1|K[234]8|[KB]18|B[23]1|B[12]7|B[23]8|[BD]11|D21|T21|C3[78]|P11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VA[21]10|VA170|E210|R1[18]0|Q110|M[12]10|N280i|P380i?|P[345]10|S2[89]0|S3[78]0|S[456]70|H[12]10|H[123]70|H[34]10|L1[178]0|L2[17]0|N[13]80i|N[234]10|E1[178]0|Q[123]10|Q[12]80|EX111|N[35]70|L3[17]0i|L470|S[127]70i|S270|S110|S169|S770|S180i?|M170)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (H28)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G450)[ _](2021)`),
		regexp.MustCompile(`(?i) (B260|B245|A440|A[345]55|B450|B340|B35[05]|BL155|BL160|A160|A[23]40|A350|T155|Z[1-4]55|G25[035]|G355|Z250|G450|G550|G660)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SENIOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP[_ ]Freya`),
		regexp.MustCompile(`(?i)([HFU]\d{2}[A-Z]\d{4}[A-Z]{1,2}|AL-2020|H32F8000Q|H32[1I]8000K|H32H8051C-G|F43F8000Q-G|50UCY2-G|55UCY1)(?:-[AbcfedH]|U50H8050EG|U65G8000Q)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H135[ _]Build`),
		regexp.MustCompile(`(?i)(BL[123]50|BS155|BS160|BS[1256]50|AL[12]40|A1[45]0|GS15[035]|AS160|GL[23]55|G15[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)DEXP[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEYI-?(10M18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JAGUAR|SATURN|TIGER|PUMA)-0\dC?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SATURN-(02C?)`),
		regexp.MustCompile(`(?i)DG101TBIPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DG101TBIPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGICOM[_ ]`),
		regexp.MustCompile(`(?i)DIGICOM[_ ](A10_LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Digicom[_ ]DTOK`),
		regexp.MustCompile(`(?i)DIGIFORS (400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIJITSU[_ ]Smart[_ ]A11s`),
		regexp.MustCompile(`(?i)(8800i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DINGDING[ _-](SK\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WTCELERO5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIXON_|(?:ACK1010|KT5512|HK7-3502|DN6015|DFM48|TS-M105G-1|TS_M103A|TS-M704F-1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ACK1010|KT5512|DFM48)`),
		regexp.MustCompile(`(?i)TS-(M105G|M704F)-1`),
		regexp.MustCompile(`(?i)DIXON_XK1_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smartphone[ _]DL|DL_Horizon_Selfie|Tablet_DL_\d{4}|Smartphone[_ ](?:YZU[_ ]DS53)`),
		regexp.MustCompile(`(?i)Smartphone[_ ]YZU[_ ]DS53`),
		regexp.MustCompile(`(?i)DL[_ ]Horizon[ _]H8`),
		regexp.MustCompile(`(?i)Tablet_DL_(\d{4})`),
		regexp.MustCompile(`(?i)(?:DNS|AirTab)[ _\-]([^;/)]+)|(?:S4505M|S4004M|SD01M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DNS[_ ])?(S4505M|S4004M|SD01M|S4502|S4003|S4003)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-4003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AirTab[ _\-]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)DNS[ _\-]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Aloha_5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DPA_ZETA|DPA H3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DPA (H3)`),
		regexp.MustCompile(`(?i)DRAGON[_ ](OTT)`),
		regexp.MustCompile(`(?i)(DSCS9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RD86QE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUNNS[ _]`),
		regexp.MustCompile(`(?i)DUNNS[ _](?:MOBILE[ _])?(703GDC|AT1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Daewoo|(DTA-07IDRF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DTA-07IDRF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Daewoo (Android TV 638)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dslide|Konnect_?(?:402|50[246]|556|60[1278])|GEODROID_A5|Dbook[_ ]110`),
		regexp.MustCompile(`(?i)Konnect[_ ]?(402|50[246]|556|60[1278])`),
		regexp.MustCompile(`(?i)Dbook[_ ](110)`),
		regexp.MustCompile(`(?i)Dslide[ _]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Signature-S8|Monster 4GXX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Signature-S8)`),
		regexp.MustCompile(`(?i)(?:MEMOR )([12]0|1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K908H4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DATANG[ _-])+([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:DATANG[ _-])+([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)DW-[A-Z0-9]{5}(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DW-PS3G5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DBTEL(?:[\-/])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)DS-(?:BD1|CR1|CL2 Pro|X1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DS-(X1)`),
		regexp.MustCompile(`(?i)DeWalt (MD501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dell[^a-z]|Venue|XCD35|Latitude E?\d{4}|Inspiron N?\d{4}|Inspiron 13|Vostro (?:3546|14-3468)`),
		regexp.MustCompile(`(?i)Venue ((?:10|[78]) [0-9]{4}|[78] HSPA\+)`),
		regexp.MustCompile(`(?i)(?:Dell )?Venue(?: Build|[);])`),
		regexp.MustCompile(`(?i)Dell; Venue Pro`),
		regexp.MustCompile(`(?i)(OptiPlex (?:3050|7010))`),
		regexp.MustCompile(`(?i)Vostro (3546|14-3468)`),
		regexp.MustCompile(`(?i)Chromebook (\d{2} \(\d{4}\))`),
		regexp.MustCompile(`(?i)(?:Dell )?(Streak|Venue) ?([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:Dell Inc./)?(XPS 13 9360|Latitude (?:7480|7390|E4310)|Inspiron N?\d{4}|Inspiron 13-\d{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dell; ((?:Streak|Venue)[^;/\)]*)`),
		regexp.MustCompile(`(?i)Dell; ([^;/\)]+)`),
		regexp.MustCompile(`(?i)Dell[ _\-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(DT0704K08|DT070[25]W08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TAQ_10[4G]|TA[CDQ]-[0-9]+)|P(?:.+)TAQ-(?:[0-9]+)|SDQ[_-](?:550[24]4L|52001G|50002G|57004L)`),
		regexp.MustCompile(`(?i)TAQ_(10[4G])`),
		regexp.MustCompile(`(?i)P(?:.+)TAQ-(10213GMK2|10172MK3|10242MK2|70242MK2|[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA[CDQ]-[0-9]+)`),
		regexp.MustCompile(`(?i)SDQ[_-](550[24]4L|52001G|50002G|57004L)`),
		regexp.MustCompile(`(?i)Desay[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Desay[ _-]?([^;/)]+)`),
		regexp.MustCompile(`(?i)Dialog ?([^;/]+)(?: Build|[;)])|(?:M50E-1A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M50E-1A)`),
		regexp.MustCompile(`(?i)Dialog ?([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)DICAM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Digi[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGICEL|(?:DL3(?:PlusPro)?|DL501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DL3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DL(755|501)`),
		regexp.MustCompile(`(?i)DIGICEL[ _]([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:DS502|DS6018|DS6261)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DS502|DS6018|DS6261)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGIHOME, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:DL721-RB|DL(?:1016|1023|1025GH|1036|900[23]|[78]006|1008M)|Compumax Blue)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DL(1016|1025GH|1023|1036|900[23]|[78]006|721-RB)`),
		regexp.MustCompile(`(?i)(Compumax Blue)`),
		regexp.MustCompile(`(?i)Digit(?:4G|play1)`),
		regexp.MustCompile(`(?i)Digitplay1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Digit4G[ -](Energy|Pro)`),
		regexp.MustCompile(`(?i)Digma[_ ]([^;/]+) Build|iD[sr]Q\d+|DiMagic|HIT HT707[10]MG|CITI (?:7 E401 4G|8 E400 4G|ATL 4G|Kids|Octa [178]0|1902 3G|10 E402|Z530 3G|13 X703 4G)|(CITI[_ ](?:[A-Z0-9]+)[_ ][34]G)[ _][TC][ST](?:[0-9]{4}[PM][LG])|HIT 4G|HT7074ML|IDX5|(iDx10|iDx7)|MVM900H(?:WZ|C)|MVM908HCZ|(iDxD8 3G|iDxD10 3G|iDrQ10 3G|iDxD[45]|iDxQ5|iD[nx]D7(?:[_ ]3G)?)|PS604M|PT452E|Linx.+ [34]G L[TS][0-9]{4}[PM][GL]|Linx PS474S|PS1043MG|HT7071MG|HT5035PG|HT4039PG|NS6902QL|NS9797MG|TS7854M|TS1012E 3G|TT1004PG|TT702[045]MG|TT1002MG|TT7026MW|WS8251PL|VRL42|((?:Optima(?: Kids 7)?|Platina|Plane)[ _](?:[EM])?(?:[0-9\.ST]+|Prime)(?:[ _][43]G)?)|(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)|DM-LED(?:32SR21|43SR23|42SR24|24SR20|55UR31)|RS1248PL|RS1253PL|RS1249PL|RS1267PL|WS1250PL|WS1262RW`),
		regexp.MustCompile(`(?i)HIT(?: 3G)? HT707[10]MG`),
		regexp.MustCompile(`(?i)(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)`),
		regexp.MustCompile(`(?i)Linx ([A-Z][0-9]{3}) 3G (?:LT4028PG|LS4019PG|LT4001PG|LT5001PG|LT4038PG|LT5037MG|LT4030PG)`),
		regexp.MustCompile(`(?i)(Linx PS474S)`),
		regexp.MustCompile(`(?i)(CITI Z530 3G)`),
		regexp.MustCompile(`(?i)(CITI [A-Z0-9]+ [34]G) C[ST](?:606[32]ML|4024PG|5009PL|5021ML|502[56]PL)`),
		regexp.MustCompile(`(?i)MVM900H(?:WZ|C)`),
		regexp.MustCompile(`(?i)(iD(?:xD10|rQ10|xD7)[_ ]3G)`),
		regexp.MustCompile(`(?i)(iDx10|iDx7)`),
		regexp.MustCompile(`(?i)(iDxD[45]|iDxQ5)`),
		regexp.MustCompile(`(?i)PRO (1[46]00E 4G)`),
		regexp.MustCompile(`(?i)DIGMA[_ ]IDSD`),
		regexp.MustCompile(`(?i)CITI[_ ](1902 3G|Kids(?:[_ ](?:8[01]|10))?|8527_4G|Octa [178]0|10 E402 4G|8 E400 4G|7 E401 4G|13 X703 4G|1312C 4G|8443E 4G)`),
		regexp.MustCompile(`(?i)(CITI[ _](?:[A-Z0-9]+)[ _][34]G)[ _][TC][ST](?:106[24]ML|111[46]ML|1115MG|1117PG|1207MG|1210MG|3001ML|500[67]PG|7052PG|706[567]MG|7097MG|720[48]MG|820[69]MG|11[459]4MG|1195MG|1196ML|3001ML|8152ML|1050PL|709[68]PL|7113PL|7193MG|7216MG|8205PG|7203MG|8143MG|7153MG|7141MG|7140ML|8268PL)`),
		regexp.MustCompile(`(?i)(iDnD7)`),
		regexp.MustCompile(`(?i)Optima ([0-9]+ [AXZE][0-9]+[SC]?) ([43])G`),
		regexp.MustCompile(`(?i)Optima ([0-9]+ A500S) 3G`),
		regexp.MustCompile(`(?i)iD([sr])Q(\d+)[_ ]3G`),
		regexp.MustCompile(`(?i)iD([sr])Q(\d+)`),
		regexp.MustCompile(`(?i)((?:Optima|Platina|Plane)[ _](?:[EM])?(?:[0-9\.STNMEVCD]+|Prime(?:[ _][345])?)(?:[ _][43]G)?)`),
		regexp.MustCompile(`(?i)Digma[_ ]([^;/]+) Build`),
		regexp.MustCompile(`(?i)DiMagic Cube ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)VRL42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DM-LED(\d+[SU]R\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DX_TA_?(7001|SL83)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MARVEL|FROZEN|Toy_story)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MARVEL|FROZEN)`),
		regexp.MustCompile(`(?i)(M1092R(?:-[12]|V[45])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QC-(?:703GN|704GA|803GN|1013G|7BHD)|QC7704GM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DiverMax SpeedBox 3 SB1800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Divisat|X-MEDIA|DVS X3|OPTIMA_T-II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DVS )?(J-Link|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X-MEDIA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPTIMA_T-II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DoCoMo|\;FOMA|KGT/1\.0`),
		regexp.MustCompile(`(?i)DoCoMo/.+MST.+(SH2101V)`),
		regexp.MustCompile(`(?i)DoCoMo/[12]\.0[/ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)([a-z0-9]+)(?:_W)?\;FOMA`),
		regexp.MustCompile(`(?i)KGT/1\.0 ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(24DHS54|32GHS57|40KFS57|32KHS57|43KUS65)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dolamee[_ -](D[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Movix Pro(?: Voice)?|Movix Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DOOGEE[/ _-]|Valencia2_Y100(?:_?(?:pro|plus))?|Y100_Plus|X5max(?:[_ ]PRO)?|Shoot_[12]|x5_doogee|(KISSME|BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)|(?:BL12000|BL5500[_ ]Lite| Y6C|X9 Mini|LEO_DG280|Y9Plus|Y8 Plus|Hitman_DG850|S(?:4[01]|[568]8|9[05678]|59|61|8[69])Pro|X9[567]Pro|S[478]0Lite|S88Plus|BL[579]000|N[24]0Pro|S90C|Ibiza_F2|S55_Lite|T5_Lite|S60 ?Lite|Iron-bone DG750|X10S|X[569]0L|MIX2|Y6 Max|Y6_Piano(?:_black)?|S100Pro|X[679]pro|S96GT|android 10;(?: [\w-]+;)? (?:S59|S35|X95i?|X93|N30)|android 12;(?: [\w-]+;)? (?:S98|S61|S89|V Max|S100|V30T?)|Y7Plus|S35T|Android 9(?:[\d.]*);(?: [\w-]+;)? (?:N100|Y8)|D60 Pro|Turbo_mini_F1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Valencia2_)?Y100_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Valencia2[_ ]Y100pro`),
		regexp.MustCompile(`(?i)Valencia2_Y100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO_(DG280)`),
		regexp.MustCompile(`(?i)Iron-bone (DG750)`),
		regexp.MustCompile(`(?i)(X95i?|BL[579]000|S90C|X10S|X[569]0L|X93|V30T?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X(9[567])Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N([24]0)Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL5500[_ ]Lite`),
		regexp.MustCompile(`(?i)S([568]8|9[05678]|59|61|4[01]|8[69]|100)Pro`),
		regexp.MustCompile(`(?i)S(88)Plus`),
		regexp.MustCompile(`(?i)S([4-8]0|55)[_ ]?Lite`),
		regexp.MustCompile(`(?i)Doogee X5MP|x5MaxPro`),
		regexp.MustCompile(`(?i)Shoot_([12])`),
		regexp.MustCompile(`(?i)(?:Doogee[_ ])?X([679])[_ ]?pro`),
		regexp.MustCompile(`(?i)Y([89]) ?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (S59|S35T?|S98|S89|Y8|Y6C|S61|N30|[NS]100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X5max(?:[_ ]PRO)?)`),
		regexp.MustCompile(`(?i)(?:DOOGEE[ _-])?(BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|Valencia2_Y100pro|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DOOGEE[ _-]([^);/]+) Build`),
		regexp.MustCompile(`(?i)DOOGEE[ _-]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doopro P3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]| (?:20200308|20190808)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20200308(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190808(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dopod(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Doppio DP355(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doppio ([0-9a-z]+)`),
		regexp.MustCompile(`(?i)Doro|DSB-02[23]0`),
		regexp.MustCompile(`(?i)DSB-0230(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DSB-0220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doro[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Doro[ _-]([0-9a-z]+)`),
		regexp.MustCompile(`(?i)(?:Notepad[_ ](?:K10|102|Y80)|MAX 10|T12M_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Notepad[_ ](K10|102|Y80)`),
		regexp.MustCompile(`(?i)DREAMSTAR([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(DRN-[78]09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sens 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sens 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DROXIO (C40|A47|B45|KENTIA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dtac[_ ]?Phone[_ ]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)DuneHD|SOLO 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLO 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DuneHD/\d.\d \([a-z]+__([a-z0-9_-]+);`),
		regexp.MustCompile(`(?i)DuneHD/\d.\d \(([a-z0-9_-]+);`),
		regexp.MustCompile(`(?i)(Diamond R8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Duubee[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)E-Boda|Eclipse_(?:G400M|G500)|Revo R77 GPS`),
		regexp.MustCompile(`(?i)E-Boda ((?:Revo|Izzycomm(?: Z80)?|Essential|Intelligence|Supreme)[^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Eclipse_(G400M|G500)`),
		regexp.MustCompile(`(?i)E-Boda ([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:CT9716(?:-B)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT9716(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT9716-B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E-tel[-_ ](?:i2[45]0|i300|i7c|N[67]|Q4|O9)`),
		regexp.MustCompile(`(?i)E-tel[-_ ]i(7c|\d+)`),
		regexp.MustCompile(`(?i)E-tel[-_ ]N([67])`),
		regexp.MustCompile(`(?i)E-tel[-_ ]O9`),
		regexp.MustCompile(`(?i)E-tel[-_ ]Q4`),
		regexp.MustCompile(`(?i)EBEN[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)EBEST[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)EBEST[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EX-32HS016B|EX-39HS004B)`),
		regexp.MustCompile(`(?i)ECOO[ _]E0[45]`),
		regexp.MustCompile(`(?i)ECOO[ _]E04[ _]3GB\+|Ecoo E04_PLUS`),
		regexp.MustCompile(`(?i)ECOO[ _]E04[ _]3GB`),
		regexp.MustCompile(`(?i)ECOO[ _](E0[45])`),
		regexp.MustCompile(`(?i)(?:TA10CA3|TM105A?|TR10[CR]S1|TF10EA2|TR10CS2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TA10CA3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TR10[CR]S1|TF10EA2|TR10CS2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM105A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM105(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Harrier(?: Tab)?|Hawk|Rook)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)(Harrier Tab)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)Rook[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)(Harrier|Hawk)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)EFT_(H[234])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:E8_Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EKO|Star (?:\d\.\d) (?:G65|G5[05]|G40)`),
		regexp.MustCompile(`(?i)Star (\d\.\d) (G65|G5[05]|G40)`),
		regexp.MustCompile(`(?i)EKO[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)EKO[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EK-(?:5040|5336|5540|5937|6020|8680|MII|T7020)`),
		regexp.MustCompile(`(?i)EK-(MII|T7020)`),
		regexp.MustCompile(`(?i)EK-(5040|5336|5540|5937|6020|8680)`),
		regexp.MustCompile(`(?i)KidPhone4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PIXBA2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:8.*; E4Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EVBOX-PLUS\+|EVPAD-[35]S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVBOX-PLUS\+`),
		regexp.MustCompile(`(?i)EVPAD-([35]S)`),
		regexp.MustCompile(`(?i)(?:OCTA T720Q|OCTA-T700M-T2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EX7SL?4|EX10S4|EX7W1 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Tablet)?(?:EXO_)?(Wave[_-]i101[GLR]|Wave[_ ]i007[BT]?|Wave i101[Hb]|Wave i007Kids)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EYU[ _-](T53|T7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eagle[ _](Classic Pro|Elite|Gold)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EasyPad|EasyPhone`),
		regexp.MustCompile(`(?i)(EasyPhone[^/;]+) Build`),
		regexp.MustCompile(`(?i)EasyPad ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)ECHO[ _](HOLI|HORIZON|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION|PUSH|PRISM|STUDIO)|(?:HORIZON_M|Stellar [34]G|FEELING|MOON|LOOK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HORIZON_M|FEELING|MOON|LOOK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STELLAR ([34])G`),
		regexp.MustCompile(`(?i)ECHO[ _](HOLI|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION|PUSH|PRISM|STUDIO)`),
		regexp.MustCompile(`(?i)Einstein(T3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S5[UL]S|X4UPlus|S45U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S5[UL]S|S45U)`),
		regexp.MustCompile(`(?i)Meeplus_1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)electroneum(M1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(?:4[238]S[AM]{2}RT|5[05](?:CV_)?SMART_UHD|32SMART)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(4[238])S[AM]{2}RT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-55CV_SMART_UHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(50)SMART_UHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(32)SMART(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TAB(?:101|728)[ _]3G|TAB7(?:[03]8|16|40|3[30])|STB0819)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(STB0819)`),
		regexp.MustCompile(`(?i)(TAB(?:101|728)[ _]3G|TAB7(?:[03]8|16|40|3[30]))`),
		regexp.MustCompile(`(?i)Elephone|Vowney(?: Lite)?|P6000( ?Pro| ?Plus|\+| ?02| 5.0 01)?|Soldier|C1_Max|(?:Trunk 1|P8_3D|P8_Max|P8_Mini|A6_mini|P9000(?:_Lite)?|Android 9;(?: [\w-]+;)? PX|PX_Pro| U3H|U_Pro|Android 10;(?: [\w-]+;)? (?:E10_Pro|E10))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Elephone[_ ])?Trunk(?: 1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vowney Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vowney(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000(\+| ?Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 5.0 01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P(\d+)[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Soldier(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A6_mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P8_Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U|PX|E10)_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) U3H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C1_Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 9;(?: [\w-]+;)? PX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P8_3D|P8_Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Elephone[ _])?(P[7689]000|S2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elephone[ _\-]([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:LUNA (V57|V55A|G58|G62|G60X)|V55C|G55 LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V55C)`),
		regexp.MustCompile(`(?i)(G55)[_ ]LITE`),
		regexp.MustCompile(`(?i)LUNA (V57|V55A|G58|G62|G60X)`),
		regexp.MustCompile(`(?i) (6CS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NV5(?:01|10)WAC|NV501|NV510WB|NV720WB|NV711WAC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV(501|510|711)WAC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV(510|720)WB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EGQ101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)emporia[_ ]|(?:Android 9;(?: [\w-]+;)? S3mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)emporia[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)PowerMax|HARDCASEH5[05]0S|ENERGY[_ ]?(?:[45]00|400S|S[56]00|E12|E5[02]0S?)(?:[_ ](?:LTE|EU))?`),
		regexp.MustCompile(`(?i)PowerMax(P[0-9]+S?)`),
		regexp.MustCompile(`(?i)ENERGY[_ ]([45]00|E520)[_ ]LTE`),
		regexp.MustCompile(`(?i)ENERGY[_ ]400S`),
		regexp.MustCompile(`(?i)ENERGY[_ ]S([56]00)`),
		regexp.MustCompile(`(?i)ENERGY[_ ]?(E500S|E500|E12)`),
		regexp.MustCompile(`(?i)HARDCASE(H5[05]0S)`),
		regexp.MustCompile(`(?i)ENERGY[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Energy Phone ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Energy Tablet ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)ENERGY[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(EN1007Q)plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Enot[ _-](E102|J101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ENT11QF12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ClickTabDSh18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EP19_star|EP19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ePad 7i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K501 Plus|[ ]K5(?:0[0-4]|1[01]|03[TS]|3[456]|4[05]|73|03HD)|[ ]K60[01]|[ ]X507T|[ ]K40[56]|[ ]T700|Android 8([\d.]*);(?: [\w-]+;)? X400|RS550)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Projector(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Axis(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ERGO|(V550[_ ]Vision|B502 Basic|B504[_ ]Unit|A502[_ ]Aurum|A503[ _]Optima|Prime B400|A551 Sky 4G|A553 Power|A555 Universe|Force F500|GoTab GBT9|GoTab Gti8|F501_Magic|V551[ _]Aura|V540_Level|V570_BIG_BEN|B506[_ ]INTRO|A503-Optima|B505_Unit_4G|LE32CT5515AK)`),
		regexp.MustCompile(`(?i)B506[_ ]INTRO`),
		regexp.MustCompile(`(?i)V550[_ ]Vision`),
		regexp.MustCompile(`(?i)B504[_ ]Unit`),
		regexp.MustCompile(`(?i)V551[ _]Aura`),
		regexp.MustCompile(`(?i)(ERGO_)?A500[ _]Best`),
		regexp.MustCompile(`(?i)(ERGO_)?A550[ _]Maxx`),
		regexp.MustCompile(`(?i)A502[_ ]Aurum`),
		regexp.MustCompile(`(?i)A503[ _]Optima`),
		regexp.MustCompile(`(?i)ERGO[_ ]A556`),
		regexp.MustCompile(`(?i)ERGO[_ ]F500`),
		regexp.MustCompile(`(?i)ERGO[_ ]F501`),
		regexp.MustCompile(`(?i)ERGO[_ ]Tab[ _]Crystal[ _]Lite`),
		regexp.MustCompile(`(?i)ERGO[_ ]Tab[ _]Hero[ _]II`),
		regexp.MustCompile(`(?i)ERGO[_ ](B700)`),
		regexp.MustCompile(`(?i)(LE32CT5515AK)`),
		regexp.MustCompile(`(?i)(?:Ericsson(?:/ )?[a-z0-9]+)|(?:R380 2.0 WAP1.1)`),
		regexp.MustCompile(`(?i)Ericsson(?:/ )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)R380 2.0 WAP1.1`),
		regexp.MustCompile(`(?i)Ericy-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(42FLEA73T2SM|42FLX9060T2|39LES80T2SM|32LX9051T2|55ULES92T2SM|32LEA73T2SM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PH-1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wooze[_ ]?(?:I55?|I45|X?L)|HEYOU(?:[135]|20PLUS|[1-7]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEYOU20PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEYOU([135]|[1-7]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wooze[_ ]?((?:I55?|I45|X?L))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eton[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Eton[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ETL-S(?:3520|4521|5042|5084|6022)|ETL-T(?:752G|850|882G|9[78]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ETL-S(?:[^/); ]+))`),
		regexp.MustCompile(`(?i)(ETL-T(?:[^/); ]+))`),
		regexp.MustCompile(`(?i)(EUTB_758G?)`),
		regexp.MustCompile(`(?i)(ET7002C-H12|ET8183GQ-HM15|ET7184GQ-B15|ET7183GQ-H16|Onyx-[13]S|T40SG?LED-A1[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onyx-([13]S)`),
		regexp.MustCompile(`(?i)(ET8183GQ-HM15|ET7184GQ-B15|ET7183GQ-H16)`),
		regexp.MustCompile(`(?i)(T40SG?LED-A1[45])`),
		regexp.MustCompile(`(?i)EVERCOSS[ _]|(U6 PRIME|A75A\*|AT8B|U50A_PLUS|M50 (?:MAX|STAR)|A75 MAX|M55[ABC]|M50A|R40K|R70A|7.*; (?:R70|R5C)|S55[AB]|U70[CB])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A75A\*(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A75|M50A) MAX*(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U50A_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M50 STAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M50 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (M50A|R40K|R70|R5C|S55[AB]|M55[ABC])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT8B|R70A|U70[CB])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVERCOSS[ _](A7[BRLZ]|A65|A74A|A5Z)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DC-(?:1032|121[56]|110[24]|1028|1545|70[59]|71[48]|85[56]|971[45])|(?:EVERPAD )?DC-709|DC-9712-8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DC-(1032|1028|121[56]|110[24]|1545|70[59]|71[48]|85[56]|971[45]|9712)`),
		regexp.MustCompile(`(?i)Fine 7B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ever(?:Allure|Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Solo|Smart|Star)[^/);]*)(?: Build|[;)])|(?:E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E1014HG|E7224HG|E7914HG|V5_Nano|M10\+Max|M10 Nano|V4 Nano| V4\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E7914HG|E7224HG|E1014HG)`),
		regexp.MustCompile(`(?i)(M10|V[45])[_ ]Nano`),
		regexp.MustCompile(`(?i)M10\+Max`),
		regexp.MustCompile(`(?i) V4\+`),
		regexp.MustCompile(`(?i)EverTrendy\+4G`),
		regexp.MustCompile(`(?i)Ever(Shine|Allure|Glory) ?II`),
		regexp.MustCompile(`(?i)(Ever(?:Allure|Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Solo|Smart|Star)[^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Evolio|M4MAGIC`),
		regexp.MustCompile(`(?i)Evolio[ _](M6|S4 Cobalt|S5|X10|Yuppi)`),
		regexp.MustCompile(`(?i)EVOLVEO|StrongPhone`),
		regexp.MustCompile(`(?i)EVOLVEO Android Box (H[48])`),
		regexp.MustCompile(`(?i)Smart TV ([^;/]*) Build`),
		regexp.MustCompile(`(?i)EVOLVEO StrongPhone G(\d)`),
		regexp.MustCompile(`(?i)(?:EVOLVEO[ _])?StrongPhone[ _]?Q([679])(_LTE)?`),
		regexp.MustCompile(`(?i)EVOLVEO[ _]([^;/]*) Build`),
		regexp.MustCompile(`(?i)(EVM4G3|EVM4G6|EVMFV2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVROMEDIA|Playpad[ _]|PLAY_PAD_PRO_XL|3G NOTE XL`),
		regexp.MustCompile(`(?i)(?:EX(?:29|45)i|CHAT_5\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHAT_5+`),
		regexp.MustCompile(`(?i)EX(29|45)i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Exmart[ _](K1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Explay|[\w]+-EXPLAY-FIN|ActiveD[ _]|Atlant |Informer[ _][0-9]+|CinemaTV 3G|Surfer[ _][0-9\.]|Surfer7773G|sQuad[ _][0-9\.]|Onliner[1-4]|RioPlay|Leader|Pulsar|Infinityll|Joy_TV|Imperium[78]|Winner[78]|Indigo|Lagoon|Tornado(?:3G)?|Onyx(?:[);/ ]|$)|android 4([\d.]*);(?: [\w-]+;)? Discovery.+Safari/|Party|Scream 3G|A350 TV`),
		regexp.MustCompile(`(?i)ActiveD[ _]7.4[ _]3G`),
		regexp.MustCompile(`(?i)Imperium([78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ActiveD[ _]8.2[ _]3G`),
		regexp.MustCompile(`(?i)CinemaTV[ _]3G`),
		regexp.MustCompile(`(?i)Informer[ _]([0-9]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Surfer[ _]([0-9\.]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Surfer([0-9\.]+)[ _]?3G`),
		regexp.MustCompile(`(?i)sQuad[ _]([0-9\.]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Onliner([1-4])`),
		regexp.MustCompile(`(?i)Winner([78])`),
		regexp.MustCompile(`(?i)Discovery(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Atlant(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Indigo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pulsar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tornado(?:3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onyx(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy_TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[\w]+-EXPLAY-FIN`),
		regexp.MustCompile(`(?i)Lagoon(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A350 TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Party(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Explay[ _-]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)RioPlay(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rock[ _]X[89]+|ROCK_X11`),
		regexp.MustCompile(`(?i)Rock[ _]X([89])\+`),
		regexp.MustCompile(`(?i)EZIO-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)EZZE-|EZ[a-z0-9]+`),
		regexp.MustCompile(`(?i)EZZE-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)EZ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(SH6[05]|SA50|SP65)_(?:2[13]|66)\d{3}(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Bison2021|B2021|[HR]2022|Air1 Pro| Air1| B1 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([HR]2022|Air1 (?:Ultra\+?|Pro)|Air1|B1 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Bison2021|B2021)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z8PLUS|Z8POCKET|LT5216|F80s_plus|C8Finger|F80 PIABELLA|i8_ROKR|LT1[68])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LT5216|LT1[68])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K118)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FFFTAB10a4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FX4423)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fise_32433_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPTIMUM (500[1-4]|5501)`),
		regexp.MustCompile(`(?i)UNICUM (1002|8S|8003)`),
		regexp.MustCompile(`(?i)(?:16M4HI105024|FMT-NM7058-02|FXT113R|176HS1050(?:232|531)|175WT1050231|175HS1050231|175FT1050241|Global3 B01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FXT113R)`),
		regexp.MustCompile(`(?i)ConeXis (A[12]|X[12])|SP5045V`),
		regexp.MustCompile(`(?i)(?:ifive[_ ]?(?:mini[_ ][43]G?S|X2|Mini3|3|Air|Pro 2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ifive[_ ]mini[_ ]([43]G?S)`),
		regexp.MustCompile(`(?i)ifive(X2|3)`),
		regexp.MustCompile(`(?i)ifive ?Air`),
		regexp.MustCompile(`(?i)FOODO[ _-](X10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FORME[ _-]`),
		regexp.MustCompile(`(?i)FORME[ _-]F520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FORME[ _-](A[35]7|R7S?|P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)android 12;(?: [\w-]+;)? (?:F101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FPT[_ ](X1[05]|X[39]|X50|S68 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FTRW100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Q3_EEA|Q3pro)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Q3_EEA(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Q3pro(?:[);/]|$)`),
		regexp.MustCompile(`(?i)FLEET_7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (FP(?:1U?|[234]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FX[123]00)`),
		regexp.MustCompile(`(?i)Famous|Red Royal Edition`),
		regexp.MustCompile(`(?i)Red 5\+`),
		regexp.MustCompile(`(?i)Famous[_ ]TAB[_ ]10`),
		regexp.MustCompile(`(?i)FAN-M300H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart ?(601|550|50[59])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FAST81[08])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(vKB011B|vKB004L)`),
		regexp.MustCompile(`(?i)Fero[_ ]|Royale[_ ](?:[YX]2|A1)`),
		regexp.MustCompile(`(?i)Royale[_ ]([YX]2|A1)`),
		regexp.MustCompile(`(?i)Fero[ _](A4001|A450[23]|A5001|L100|Iris|Power|Mega LTE|Vibe|J1)`),
		regexp.MustCompile(`(?i)ATRIUM II F55L2|TRIO F40LT|CENTRIC S50G|EPIC F50G|Gravity X55L|Orion M50L|ULTRA M50G|UltraJ8|M405B|VIRTUE3|F55L Build|Orbit_ll|F40G2`),
		regexp.MustCompile(`(?i)(F55L)`),
		regexp.MustCompile(`(?i)(Gravity X55L|Orion M50L)`),
		regexp.MustCompile(`(?i)FIGI[_ ]|(?:Note_(?:[37]|11)_Pro|Note_(?:1C|5)|Note_1_Lite|Nopal|[MGF]two|Hola)(?:[);/ ]|$)|Android 8(?:[\d.]*);(?: [\w-]+;)? Fj(?: Build|[;)])`),
		regexp.MustCompile(`(?i)FIGI[_ ]P40 Max`),
		regexp.MustCompile(`(?i)FIGI[_ ]P40`),
		regexp.MustCompile(`(?i)([MGF])two`),
		regexp.MustCompile(`(?i)(FSE1020)`),
		regexp.MustCompile(`(?i) Fj(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Note_([37]|11)_Pro`),
		regexp.MustCompile(`(?i)Note_(1)_Lite`),
		regexp.MustCompile(`(?i)Figgers[_ ](F3|DragonX)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([AB][1-9]|[CD][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([AB][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([CD][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FINLUX, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:AURII[ _](?:FAME|VIVID|INSPIRE|MAGNUM|Passion|Virtuoso|RAZOR|ULTRA|Secret Lite|AMUSE[_ ]3G|FORCE|FUSION|F8[_ ]Premium|XCITE|DELIGHT|DREAM[_ ](?:MINI|One)|AMUSE_4G)|SECRET_XR?|INTENSE[ _](?:POWER|METAL_2|XT)|RAZOR_PLUS_4G|SUPER SWEET|SWEET MINI|Dream_One_8|INSPIRE_4G|S90_Q|INTENSE_METAL_4G|INTENSE (?:5|XL)|VIVID_PRO|VIVID_PREMIUM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FORCE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]VIVID(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]INSPIRE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]RAZOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RAZOR_PLUS_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DELIGHT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DREAM[_ ]MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FAME(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]AMUSE[ _]4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dream_One_8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DREAM[_ ]One(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]ULTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]AMUSE[_ ]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FUSION(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]MAGNUM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVID_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVID_PREMIUM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]XCITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SECRET_(XR?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]((?:Passion|Virtuoso|Secret Lite|F8[_ ]Premium))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE POWER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_XT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_METAL_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_METAL_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPER SWEET(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE (5|XL)`),
		regexp.MustCompile(`(?i)(S90_Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S554020|F_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly|Power Plus 5000|Power Plus 3|Photo Pro|Slimline|Cirrus (?:6|13)|Life (?:Ace|Jet|Sky|Compact 4G|Geo|Zen|Play)|(?:lineage_)?FS50[1-9]|FS51[0-8]|FS52[0-9]|FS530|FS55[134]|FS40[1-9]|FS45[1-9]|4FS06|MERIDIAN-|(?:Phoenix 2|(?:IQ[0-9]{3,}[i]?)[ _]?(?:Quad|Firebird|Quattro|Turbo|Magic)?|Tornado Slim|Android 8(?:[\d.]*);(?: [\w-]+;)? View Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ310(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ236(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?View Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slimline(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Plus 5000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Photo Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Ace(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Jet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Sky(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Geo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Zen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Buzz(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Compact 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS508|Cirrus 6`),
		regexp.MustCompile(`(?i)(?:lineage_)?FS504`),
		regexp.MustCompile(`(?i)FS518|Cirrus 13`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ237(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ238(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ240(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ255(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ270(?: Firebird)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ275(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ285(?: Turbo)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ432(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ436(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4490(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ434(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4406(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ436i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4490i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ440(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ441(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ442 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ442(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ443(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ444(?: Quattro)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ445(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ446(?: Magic)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ447(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ456(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4409 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ448(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ449(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ450(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ450[ _]Quattro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ451(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ452 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ454(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4404(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4410 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Phoenix 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4411(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4412 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4413[ _]Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4414 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4415 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4418(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4504 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tornado Slim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ([0-9]+[i]? ?(?:Quad|Firebird|Quattro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly[ _\-]?([a-z0-9_]+)/`),
		regexp.MustCompile(`(?i)Flylife[ _\-]?([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Fly[ _\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MERIDIAN-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Fondi[- _]([^;/)]+)|(T702|Q008B|Q010B|Q718B|Q902|T602B|T707G|T708B|T725B|T725B1|T907B)(?:\)| Build)`),
		regexp.MustCompile(`(?i)(T702|T602B)`),
		regexp.MustCompile(`(?i)(Q008B|Q010B|Q718B|Q902|T707G|T708B|T725B|T725B1|T907B)`),
		regexp.MustCompile(`(?i)Fondi[- _]([^;/)]+)`),
		regexp.MustCompile(`(?i)Fonos-|(?:Android 10;(?: [\w-]+;)? O3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fonos-(O\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Android 10;(?: [\w-]+;)? O3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Formuler[ _]|(?:S_TURBO_PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Formuler[ _](Z(?:8|10)(?: Pro)?|Z Alpha)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S_TURBO_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amosta ?3G5`),
		regexp.MustCompile(`(?i)Amosta ?3G5`),
		regexp.MustCompile(`(?i)(Apollo 5 Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Four[ _]?(S600|S300I|S185|K500|S61)|S62_Eco_3|S186_Sky_3|S710 Ruby)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Four[ _]?(S600|S300I|K500)`),
		regexp.MustCompile(`(?i)Four[ _]?S185`),
		regexp.MustCompile(`(?i)Four[ _]?S61`),
		regexp.MustCompile(`(?i)(?:EASYSMARTM3|EasySmart M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY ?SMART ?M([32])`),
		regexp.MustCompile(`(?i)InFocus M[0-9]+[a-z]?`),
		regexp.MustCompile(`(?i)InFocus M([0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)(L590A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FUN PLUS|FTJ17[AC]00|FTJ152[ABCD]|FTU18A00|FT141B|FT142D(?:_LTEXM)?|FT142A?|FTJ161[ABE](?:-VN)?|FTJ1[56]2E|FTJ162[BD]|FT162D|FTE161[GE]|SAKURA_FTE1|FTE171A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTJ17A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTJ17C00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTU18A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTE161E|FTJ161E`),
		regexp.MustCompile(`(?i)FT142D(?:_LTEXM)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FT142A?`),
		regexp.MustCompile(`(?i)FTJ?162D`),
		regexp.MustCompile(`(?i)(RubensTab_T11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:F-01[FHJKLM]|F-02[EFGHLK]|F-03[DEFGKHL]|F-04[EGFHKJ]|F-05[DEFJG]|F-06[EF]|F-07[DE]|F-08D|F-09[DE]|F-10D|F-[45]1A|F-41B|F-[45]2A|F-11D|F-12C|F-5[12]B|M532|FARTM933KZ|901FJ|arrows(?:RX|M03|M0[45](?:-PREMIUM)?)|801FJ|FJL2[12]|RM02|FCG01|A101FC|BZ02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-01[LM]|F-06F|F-03K|F-42A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FJL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FJL22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-52A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901FJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-41B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-06E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-07D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:F-51B|FCG01|A101FC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)801FJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-07E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-08D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-09D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-09E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-52B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-10D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-11D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-12C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-04[JF])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RM02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZ02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsRX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM04-PREMIUM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM(0[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-0[32]F|F-03G|F-04H|F-05E|F-02K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUNAI, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Fusion5|F104Bv2|F104EvII_PRO|F104EvII`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F104B)v2_PRO`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F104B)v2`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?F104EvII_PRO`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?F104EvII(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F704B|F105D|F104E)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FXT810R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QX1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G-TiDE|(?: EX10|EXTREME X9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G-TiDE[_ ](A1|S[34]|E520|Vans [89]c?|V7s)`),
		regexp.MustCompile(`(?i)E(57|60|66|72|77)`),
		regexp.MustCompile(`(?i)GTouch[_ ]|(?:Stella (?:XS?|Omega))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Stella (XS?|Omega)`),
		regexp.MustCompile(`(?i)GTouch[_ ]STELLA`),
		regexp.MustCompile(`(?i)GEOFOX[_ ]MID ?(743\+?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEOZON[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)GFIVE[_ ]|(?:PRESIDENT_GOLD_(9|10)|President Gpower 1|Stark|Gpad70[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRESIDENT_GOLD_(9|10)`),
		regexp.MustCompile(`(?i)GFIVE[_ ]President[_ ]Xhero[_ ](\d)`),
		regexp.MustCompile(`(?i)President (A97)`),
		regexp.MustCompile(`(?i)President Classic (\d)`),
		regexp.MustCompile(`(?i)President ?\(?G(\d)\)?`),
		regexp.MustCompile(`(?i)President Tango (\d)`),
		regexp.MustCompile(`(?i)GFIVE[_ ]President[_ ]Smart[_ ](A98|\d)`),
		regexp.MustCompile(`(?i)GPad(70[12])`),
		regexp.MustCompile(`(?i)(?:Android 8(?:[\d.]*);(?: [\w-]+;)? TAB5)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Quartz(T10-3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GLX (?:Aria|Dorna|Taban|Shine|Spark|ASA)|Maad\+?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maad\+`),
		regexp.MustCompile(`(?i)GLX (Aria|Taban|Shine|Spark)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLX (Dorna)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOCLEVER|QUANTUM_(?:[235]_)?[0-9]{3}|QUANTUM [0-9]{1}|QUANTUM 700N|Quantum2 500|QUANTUM_(1010N|1010M|900|II_500_N)|ARIES|INSIGNIA|ORION_|ELIPSO|LIBRA[ _]97|TERRA_7o[WL]|(?:TQ700|ORION7oL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUANTUM_(1010N|1010M|900)`),
		regexp.MustCompile(`(?i)INSIGNIA_(785_PRO|1010M|800M)`),
		regexp.MustCompile(`(?i)(ORION|ARIES|ELIPSO)[_ ](71|101|102)`),
		regexp.MustCompile(`(?i)TQ700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUANTUM_2_(1010|700|960)_Mobile`),
		regexp.MustCompile(`(?i)QUANTUM_([235])_(5[05]0)_RUGGED`),
		regexp.MustCompile(`(?i)QUANTUM_(\d+)_RUGGED_PRO`),
		regexp.MustCompile(`(?i)QUANTUM[_ ]([235])_([45]00)[_ ]LITE`),
		regexp.MustCompile(`(?i)QUANTUM[_ ]([45]00)[_ ]LITE`),
		regexp.MustCompile(`(?i)QUANTUM[ _]?([235])[ _]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)((?:QUANTUM|ARIES|INSIGNIA|ORION|ELIPSO)[ _-]?[^;/]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)TERRA_(7o[WL])`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]TAB[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)TAB ([^;/)]+) Build/GOCLEVER`),
		regexp.MustCompile(`(?i)([^;/)]+) Build/GOCLEVER`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?TAB[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)LIBRA[ _]97`),
		regexp.MustCompile(`(?i)(?:G10_EEA|CNOTE 50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GTCOMBO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Galactic[_ ](Astro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GI (?:UNI2|iTV912|Fly T2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EDU-7MT4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Garmin-Asus|Garminfone`),
		regexp.MustCompile(`(?i)Garminfone[ \-_]([^;/]*)Build`),
		regexp.MustCompile(`(?i)Garmin-Asus[ \-_]([^;/]+)Build`),
		regexp.MustCompile(`(?i)Garmin-Asus[ \-_]([^;/]+)[\)/]`),
		regexp.MustCompile(`(?i)(JT08-X1|JT10-90|JT10-81B|JT10-X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEANT[_ ](T\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Feel_7013N)`),
		regexp.MustCompile(`(?i)(GEM[0-9]+[a-z]*)`),
		regexp.MustCompile(`(?i)General_Mobile_|GM 5 Plus|GM8 go|GM[ _][568][ _]d|GM [86]|General Mobile 4G|GM6_Tur|GM 9 (?:Pro|Plus)|(?: GM 5|e-tab 20|Android 1[012];(?: [\w-]+;)? (?:G[35]01|G[35]10|G700)|Discovery (?:Air|Elite(?: Plus)?)|GM Discovery II|GM Discovery tab 8|Discovery II Mini| GM6|G300|G008|android 4([\d.]*);(?: [\w-]+;)? Discovery|e-?tab5|G512|G312)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GM[ _](\d+)[ _]d`),
		regexp.MustCompile(`(?i)GM6_Tur|GM ?6`),
		regexp.MustCompile(`(?i)GM ([58])`),
		regexp.MustCompile(`(?i)Discovery (Air|Elite(?: Plus)?)`),
		regexp.MustCompile(`(?i)Discovery(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)General[ _]Mobile[ _]4G[ _]Dual`),
		regexp.MustCompile(`(?i)e-?tab ?(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SK-Mtek GT730[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEOTEL[ _]?`),
		regexp.MustCompile(`(?i)GEOTEL[ _]?Note`),
		regexp.MustCompile(`(?i)GEOTEL[ _]AMIGO`),
		regexp.MustCompile(`(?i)(GTX-R10i Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G-Fone ?(\d{1,3})`),
		regexp.MustCompile(`(?i)GHIA|QS702|SVEGLIO[ _][QH]1|VECTOR10\.1|GTKIDS7[BVR]?|(?:A7_WF|GTA7(?:WF|PLUS)|VENUS7|TREO_TAB8G?|VECTOR_SLIM|GTAB718|GTABPND|GTABKIDS|GTVR10S|AXIS7_SLIM|AXIS7_LED)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SVEGLIO[ _]([QH]1)`),
		regexp.MustCompile(`(?i)GHIA[ _](L1)`),
		regexp.MustCompile(`(?i)VECTOR10\.1`),
		regexp.MustCompile(`(?i)GTKIDS7[ABVR]?|GTABKIDS`),
		regexp.MustCompile(`(?i)GHIA[ _]?(47458|VECTOR_3G)`),
		regexp.MustCompile(`(?i)(GTAB718)`),
		regexp.MustCompile(`(?i)GHONG(V10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GHOST G03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GSmart[ _][a-z0-9 ]+(?: Build|\))|Gigabyte-[a-z0-9]+|Simba SX1|Roma R2|Boston 4G|GSmart_Classic_Lite|Classic[_ ](?:Joy|Pro)`),
		regexp.MustCompile(`(?i)(GSmart[ _][a-z0-9 ]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Gigabyte-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Classic[ _](?:Joy|Pro)|GSmart_Classic_Lite|Boston 4G)`),
		regexp.MustCompile(`(?i)Gigaset|(?: GX290|GS80|GS1[0189]0|GS1[89]5|GS2[89]0|GS5[357]-6|GS[23]70(?:_Plus)?|E940-2795-00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gigaset QV(1030|830)`),
		regexp.MustCompile(`(?i)G(S[23]70)[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GS([23]70|1[0189]0|1[89]5|2[89]0|80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GX290)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gigaset ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Gigaset ([^;/)]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Gini[ _]|(?:SW17W13|SW17W08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gini[ _]W(7)`),
		regexp.MustCompile(`(?i)Gini[ _]n(8)`),
		regexp.MustCompile(`(?i)Gini[ _]s5Pro|SW17W13`),
		regexp.MustCompile(`(?i)Gini[ _]Tab[ _](V[78])`),
		regexp.MustCompile(`(?i)GINZZU[_ ]|((?:RS(?:7[14]|81|9[67])D)|S5002|S5021|S5230|S50[45]0|S51[24]0|RS(6[12]|9[45])D|S40[23]0|RS850[12]|RS9602)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GINZZU[_ ]?(S40[17]0|S4710|ST60[14]0|ST6120)`),
		regexp.MustCompile(`(?i)GINZZU[_ ]?(GT-(?:1050|7105|70[1-4]0|7115|7210|[WX]831|X[78]70|7810|8[01]10|X853|X890))`),
		regexp.MustCompile(`(?i)(RS6[12]D) ULTIMATE`),
		regexp.MustCompile(`(?i)(?:GINZZU[ _])?((?:RS(?:7[14]|81|9[14-7]|7)D)|S50[45]0|S5002|S5021|S5230|S51[24]0|S40[23]0|RS850[12]|RS9602|RS94D|R8 Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]?[a-z0-9]+|(?:Dream_D1|V188S?|GN[0-9]{3,4}[a-z]?)(?:[);/ ]|$)|F103(?: Pro)?(?: Build|\))|P5 mini Build|(M7 Power|F106L|F100A|F103S|F103 Pro|M6 mirror|20190620G|20190619G|20190418Q|GNP21M02|GNS2161B|GAU0820|Android 6(?:[\d.]*);(?: [\w-]+;)? (?:P8 Max|P7 Max)|Android 5(?:[\d.]*);(?: [\w-]+;)? M5 (?:mini|Plus)|Android 11;(?: [\w-]+;)? P61|WBL7519|WBL7361|20190419Q|M5 lite CDMA|GLY1620|M2mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GN810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GIONEE[_ ]MAX Pro`),
		regexp.MustCompile(`(?i)GN([0-9]{3,4}[a-z]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F106L|F100A|V188S|V188|F103S|F8 Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7 Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M([25]) ?mini`),
		regexp.MustCompile(`(?i)20190620G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S11|F205|S10) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M6 mirror(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F9 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190419Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F103( Pro)?( BUILD|\))`),
		regexp.MustCompile(`(?i) (P61)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:GIO-)?GIONEE[ _-])?Dream_D1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+).*Android`),
		regexp.MustCompile(`(?i)Android.*(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+)[ _]Pro`),
		regexp.MustCompile(`(?i)Android.*(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(GU1011C|GU8012C|GU7013C|GU730C|GU-6012B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GU8012C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GU-6012B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GU1011C|GU7013C|GU730C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Gpad_U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO Onyx|GO[0-9]{3,4}`),
		regexp.MustCompile(`(?i)GO([0-9]{3,4})`),
		regexp.MustCompile(`(?i)(?:F10_PRIME|F3Prime|F9_PLUS|TEAM_7_3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Netta 2 Pro|Netta 3\.100m|BENGAL_6|DETROIT 3|i-910)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Netta 3\.100m`),
		regexp.MustCompile(`(?i)Goly[ _-]`),
		regexp.MustCompile(`(?i)Goly[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Goly[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:GOME[_ ](?:201[678].+|C7_Note(?:_Plus)?|U9|S[17])|Fenmmy_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018X38A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018X07A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017X05A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017X82A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2016G68A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2016M25A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017M27A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017M95A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018M29A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](C7_Note(?:_Plus)?|U9|S[17])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GOME[_ ])?(Fenmmy_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexus|GoogleTV|Google Fiber|Google Pixel|Glass|CrKey[^a-z0-9]|(?:Pixel|sailfish|taimen|blueline|Chromecast(?: HD)?)(?: Build|[)])|Pixel (?:XL|C|[2-7]|[2-4] XL)|Google 2XL|PIXEL4X|G011A|AOSP on (?:bramble|HammerHead|Manta|sunfish)|Pipit|ADT-2`),
		regexp.MustCompile(`(?i)(Nexus (?:2|S|4|5X?|One))`),
		regexp.MustCompile(`(?i)(Nexus (?:6P?))`),
		regexp.MustCompile(`(?i)(Nexus (?:7|9|10))`),
		regexp.MustCompile(`(?i)(GFHD[12]00)`),
		regexp.MustCompile(`(?i)CrKey[^a-z0-9]`),
		regexp.MustCompile(`(?i)(?:Pixel|sailfish)(?: Build|[)])`),
		regexp.MustCompile(`(?i)Pixel 2 XL|taimen`),
		regexp.MustCompile(`(?i)Pixel 4a \(?5G\)?|AOSP on bramble`),
		regexp.MustCompile(`(?i)pixel ([3-7])a`),
		regexp.MustCompile(`(?i)Pixel ([67]) Pro`),
		regexp.MustCompile(`(?i)pixel ([2-7])`),
		regexp.MustCompile(`(?i)Goophone[ _]|(?:M(G492|L7[JK]2)CH|MN(4A2|8J2)ZP|MGA92ZP|MKU82ZP|MNGW2CH|MNH02CH|MNRM2CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MG492CH|MGA92ZP)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML7[JK]2CH[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MKU82ZP[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MNGW2CH[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MN4A2ZP|MNH02CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MN8J2ZP|MNRM2CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S4 MEGA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Goophone i([69])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gooweel| M5 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gooweel; (S7);`),
		regexp.MustCompile(`(?i)Gplus[ _]([ZXP]10\+?|N809|F53|S9701|FW6950|A2_Plus|S10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRADIENTE-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)GRADIENTE ([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(?:Grape[ _])?GTM-5([^;/]+) Build`),
		regexp.MustCompile(`(?i)(E101GCM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:G0[256]15D|G0245D|G0335D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G0215D|G0245D|G0335D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GO 55303)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X1_Light(?:_Lte)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1_Light(?:_Lte)?`),
		regexp.MustCompile(`(?i)Gresso[ _]|(?:REGAL R2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gresso[ _]Regal(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gretel|(?:GT6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GT6000)`),
		regexp.MustCompile(`(?i)Gretel; (A[67])`),
		regexp.MustCompile(`(?i)GroBerwert[ _]?(HD7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GR?-TB[0-9]+[a-z]*|GRUNDIG|portalmmm/2\.0 G|AFTEU(?:011|014|FF014)`),
		regexp.MustCompile(`(?i)(GR?-TB[0-9]+[a-z]*)`),
		regexp.MustCompile(`(?i)GRUNDIG ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 G([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Gtel[ _]`),
		regexp.MustCompile(`(?i)Infinity 8s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity 9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gtel[ _-]X(\d) ?plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gtel[ _-]X(\d) ?mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gtel[ _-]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(XP9800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Betacrux(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Betacrux(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H96[ _]?Max`),
		regexp.MustCompile(`(?i)(?:H96[_ ]?)?Max[ _]RK(\d{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Max X2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H96[_ ]Max[ _]V11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SpaceTab_H20)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T2000)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:H10_ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIPER MEDIA|(?:U(?:43|50|65)YQ2200GR|H32YQ2200GR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MEDIA TV (i4 Pro|i4|[46]K)`),
		regexp.MustCompile(`(?i)(U(?:43|50|65)YQ2200GR|H32YQ2200GR)`),
		regexp.MustCompile(`(?i)HKPRO,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(SMB-H8009)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)HOTREALS(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Hewlett-Packard|HP/HP|HP Chromebook|HP EliteBook 820|TouchPad/\d+\.\d+|hp-tablet|HP ?iPAQ|webOS.*P160U|HP (?:Pro )?Slate|Slate 21|HP [78]|HP 10 Plus|Compaq [7|8]|HP; [^;/)]+|cm_tenderloin`),
		regexp.MustCompile(`(?i)HP ([78][^)/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)Compaq ([78][^/;]*) Build`),
		regexp.MustCompile(`(?i)HP Slate ?(.+) Build`),
		regexp.MustCompile(`(?i)HP Slate ?([0-9]+)`),
		regexp.MustCompile(`(?i)TouchPad/(\d+\.\d+)|hp-tablet`),
		regexp.MustCompile(`(?i)HP; ([^;/)]+)`),
		regexp.MustCompile(`(?i)HP ?iPAQ ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)webOS.*(P160U)`),
		regexp.MustCompile(`(?i)HP ProBook (6560b)`),
		regexp.MustCompile(`(?i)Chromebook (11 G5|x360 11 G1 EE|13 G1|x2)`),
		regexp.MustCompile(`(?i)HTC|Sprint (?:APA|ATP)|ADR[a-z0-9]+|NexusHD2|Amaze[ _]4G(?:[);/ ]|$)|(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|\))|(Amaze[ _]4G|One ?[XELSV\+]+)(?:[);/ ]|$)|SPV E6[05]0|(One M8|One Mini 2|X525a|PG86100|PC36100|XV6975|PJ83100|2PYB2|2PS64|2PZC5|0PJA10|0PJA2|HTV33|0PM92|0PCV1|601HT|0PAJ5|HTL2[23]|HTV3[12]|2PQ93|X2-HT|EXODUS 1|ISW13HT|710C|U Ultra|2Q8L10000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2PZF1|U Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ](?:U-2u|U Play|2PZM3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]U-1[wu](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:U11 plus|(?:HTC_)?2Q4D[12]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC (?:U12\+|2Q55[13]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U(1[12]) life(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:U11 Eyes|2Q4R100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XV6975(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PG86100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PC36100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ])?(?:HTV33|601HT|2PZC100|2PZC5|U-3[uw])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_)?(?:801e|802[wdt]|PN071)`),
		regexp.MustCompile(`(?i)PJ83100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]PO582(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_?)?(?:One[ _]?Mini[ _]?2|M8MINx)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X2-HT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC 2PXH3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ISW13HT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTL22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTL23|HTV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTCButterflys901s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ])?(?:M9pw|One M9 ?PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ]M9u|0PJA2|0PJA10|HTC One M9|HTC6535LVW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)One[ _](X9|[EM]8) dual sim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire[ _]([\d\w]+) dual sim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC(?: One m7|6500LVW|PN071)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:One M8|HTC6525LVW|HTC[_ ]M8[xd]|HTC[_ ]0P6B|HTCOneM8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC ?One ?M8 ?Eye(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_)?(?:0PAJ5|M8Sx)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]E9x(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(?:One[_ ])?E9(?:pw|PLUS dual sim)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_S9u(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC6515LVW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X525a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2PQ9(?:3|10)|HTC[_ ]A9u)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2PS64|HTC6545LVW|HTC[_ ]M10h`),
		regexp.MustCompile(`(?i)(710C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)0PM92(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_)?0PCV[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC ?D160LVW(?:PP)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]D310n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]v01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)608t(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_(?:0P9O2|D610x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(0P4E[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?D620h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(?:D626ph|D200LVWPP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?(?:0P9C2|D816[xd]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?D526h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2Q8L10000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire620G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EXODUS 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC 2Q7A100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire 10 compact(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_D10i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[ _](?:10[ _]evo|M10f)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire (\d+) pro 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire (\d+) pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire 10 lifestyle(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[ _-]P715a`),
		regexp.MustCompile(`(?i)HTC[ _-]Flyer Build`),
		regexp.MustCompile(`(?i)HTC[ _-](A103) Plus`),
		regexp.MustCompile(`(?i)HTC[ _-](A103)`),
		regexp.MustCompile(`(?i)HTC[ _-]Flyer[ _\-]([\w]{1,5})`),
		regexp.MustCompile(`(?i)HTC(?:[ _-])?(?:One[ _\-]max|6600LVW|0P3P7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)USCCHTC(\d+)`),
		regexp.MustCompile(`(?i)Sprint (ATP.*) Build`),
		regexp.MustCompile(`(?i)Sprint (APA.*) Build`),
		regexp.MustCompile(`(?i)Wildfire (E2?) plus`),
		regexp.MustCompile(`(?i)HTC[ _]([^/;]+) [0-9]+(?:\.[0-9]+)+ Build`),
		regexp.MustCompile(`(?i)HTC[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)HTC[ _]([a-z0-9]+[ _\-]?(?:[a-z0-9_+\-])*)`),
		regexp.MustCompile(`(?i)(?:HTC-)?HTC(?:[-/ ])?([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)HTC;(?: )?([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Amaze[ _]4G|One ?[XELSV\+]*) Build`),
		regexp.MustCompile(`(?i)(ADR[^;/]+) Build`),
		regexp.MustCompile(`(?i)(ADR[a-z0-9]+)`),
		regexp.MustCompile(`(?i)HTV32(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HAFURY|GT20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MIX|UMAX)`),
		regexp.MustCompile(`(?i)Haier|(?:M53-52401|I6_Infinity|Titan[ _]T[135]|(?:HW-)?W(?:71[67]|757|86[07]|970)|S5 Silk|(?:HM-)?(N505|N700|G(?:152|303|353|552|70[01])?-FL|HM-(?:I559|N50[15]|I560|G553|N70[01])-FL|HR-V101|G(?:303)?-W|I(?:557)?-FL)|(?:PAD[ _](?:D71|G781|d85))|A2_Lite_NFC|A4_Lite|HL810G|Andromax C46B2H|android 8([\d.]*);(?: [\w-]+;)? E13)(?:[);/ ]|$)|Android [67](?:[\d.]*);(?: [\w-]+;)? P2(?: Build|[;)])`),
		regexp.MustCompile(`(?i) E13(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) P2(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:HM-)?(G(?:152|353|552|70[01])|G(?:303)|I(?:557))`),
		regexp.MustCompile(`(?i)(Titan[_ ]T[135]|I6_Infinity)`),
		regexp.MustCompile(`(?i)(?:HW-)?W(71[67]|757|86[07]|970)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAD[ -_](D71|G781|d85)`),
		regexp.MustCompile(`(?i)(HL810G|HR-V101|M53-52401)`),
		regexp.MustCompile(`(?i)Haier[ _\-](H[WT]-[^/;]+) Build`),
		regexp.MustCompile(`(?i)Haier[ _\-](H[WT]-[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)Haier[ _\-](sy[0-9]+)`),
		regexp.MustCompile(`(?i)Haier[ _\-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Haipai ?noble S6`),
		regexp.MustCompile(`(?i)Hamlet[ _]|XZPAD412LTE`),
		regexp.MustCompile(`(?i)(?:Hamlet[ _])?XZPAD(412W|412LTE)`),
		regexp.MustCompile(`(?i)(?:Hammer[_ ](?:Construction|Explorer[_ ](?:Plus|Pro)|FORCE|Blade_3|Blade2_PRO|Blade_5G|IRON_[23](?:[_ ]LTE)?|IRON|Explorer|ENERGY(?:_18x9|_2_2022|_2)?|Titan 2|Active2?(?:_LTE)?)|Iron[_ ]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer[_ ]Construction`),
		regexp.MustCompile(`(?i)Hammer[_ ]Explorer[_ ]Plus`),
		regexp.MustCompile(`(?i)Hammer[_ ]Explorer[_ ]Pro`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY_2_2022`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY[ _](18x9|3G|\d+)`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY`),
		regexp.MustCompile(`(?i)Hammer[_ ]FORCE`),
		regexp.MustCompile(`(?i)(?:Hammer[ _])?Iron[ _]([23])`),
		regexp.MustCompile(`(?i)Hammer[ _]Iron`),
		regexp.MustCompile(`(?i)Hammer[ _]Explorer`),
		regexp.MustCompile(`(?i)Hammer Active(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer_Active2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer_Active2_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ALGIZ_RT8|NAUTIZ_X2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NAUTIZ_X2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ALGIZ_RT8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HSG[0-9]{4})|SN97T41W|SN1AT71W\(B\)|SN70T51A|SN70T31?|T7-QC`),
		regexp.MustCompile(`(?i)(HSG[0-9]{4})`),
		regexp.MustCompile(`(?i)SN1AT71W\(B\)`),
		regexp.MustCompile(`(?i)ODROID[-]?(C2|[NU]2|XU[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HARPER[_ ])?(ABX-332|ABX-[12]10|40F660TS|24R490TS|65U660TS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HTY-\d{2}\w+-(?:S2|HC22)|HTY-32HDR06G|HTY-43F06B-VZ|HTY-24H06W-VZ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hasee ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Hasee ([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DVB-ATV100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hpad([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Helio (S60|S5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HB_X7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HTB801)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Boost(?:[ _](?:Hypa|Max|Ultra))?(?: Build|[;)])|HMR(?:5012|5450)|Crusader|(?:VHIX-)?VHIX-\w+(?:-[A-Z])?|43FSY112X[cd]|32HSY119X|39HSY111X|55USY151X|50USY151X|65USY151X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost[ _](Hypa|Max|Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMR5012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HMR5450|Crusader)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VHIX-)?VHIX-(\w+)`),
		regexp.MustCompile(`(?i)(32HSY119X|39HSY111X|55USY151X|43FSY112X[cd]|50USY151X|65USY151X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Hebe|Hera)-BD00|(?:ALH-BD00|MGZ-BD00|FIO-BD00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLV-T([a-z0-9]+)`),
		regexp.MustCompile(`(?i)HIHI-(4[01])KH-TAB-0?1`),
		regexp.MustCompile(`(?i)HIKING[_ ]|(?:HK-MH501|Fun5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIKING[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)HK-(MH501)`),
		regexp.MustCompile(`(?i) HIMAX[_ ]`),
		regexp.MustCompile(`(?i)POLYMER( X)?`),
		regexp.MustCompile(`(?i)HIMAX[_ ]PURE[_ ]3S`),
		regexp.MustCompile(`(?i)(32Y_STV-R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ELT070[46]H|ELT0802H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIGHSCREEN|(Easy[- ]Power(?:[- ]Pro)?|Pure[_ ](?:Power|F)|Power Ice(?: Max)?|Easy[_ ]([SFL]|XL)(?:_Pro)?|Razar_Pro|Power Rage(?: Evo)?|Zera-S-Power|Zera[ _][UFS]|Power[ _]?Five[ _]?(?:Pro|Evo|Max|Max(?:Lite|2))|Power(?:Four|Five)|BOOST II(?:se)?|Fest(?:XL)?(?:-Pro)?|Tasty|Boost3|Boost 3(?: Pro)? SE|Expanse|Explosion|Hercules|Alpha Rage|VergeM|Ice2|Prime [LS]|Spade|Spark 2|Alpha GT[RX]|Wallet|Thunder|Razar|COSMO DUO|Prime Mini SE| Bay|Omega Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Power Ice(?:[ ](?:Max|Evo))?|Power Rage(?: Evo)?|Zera[ _][UFS]|Alpha GT[RX]|Wallet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFivePro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFiveMaxLite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFiveMax2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Five Evo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Five Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power[_ ]?Five(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spade(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spark 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FestXL-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FestXL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fest-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fest(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) Bay(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFour(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure[_ ]Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure[ _]F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Razar_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Razar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Easy[_ ]([SLF]|XL)[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Easy[_ ]([SFL]|XL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HIGHSCREEN )?Easy[- ]Power[- ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HIGHSCREEN )?Easy-Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST IIse(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost 3 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost 3 Pro SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zera-S-Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tasty(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VergeM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WinWin(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Expanse(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hercules(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alpha Rage(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ice2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime Mini SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime ([LS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_|10DTB12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_9DTB39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10DTB12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/]+) Build|Hisense [^);/]+|HISENSE; |HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9\-]*|HNR55[01]T|E270BSA|HWCD100E|HITV300C|HITV205N|M470BS[AE]|EG98|E2281|EG680|I46D1G|HAT4KDTV|HITV10[12]C|HLTE([237]00T|229T|200M|203T|202N|21[023567][TM]|22[67]T|22[13]E|230E|103E|310[TM]|31[16]T|500T|501N|510[TM]|7[23]0T|M800)|KS(?:907|964)|U972|U601S Pro|U972_Pro|HNR320T|HiSmart [24]K ATV4|HiSmartTV A4|HLTE556N`),
		regexp.MustCompile(`(?i)HITV10[12]C`),
		regexp.MustCompile(`(?i)M470BS[AE]`),
		regexp.MustCompile(`(?i)E50s \d+GB`),
		regexp.MustCompile(`(?i)HLTE221E|E MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE200T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE210T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE215T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE213T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE311T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE216[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE316T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE226T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F8 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE217T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE227T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HNR550T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HNR551T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE310[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE510[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE500T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HLTE230E|Infinity H40 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE720T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWCD100E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HLTE300T|HLTE200M|HLTE212T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HITV300C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E260T\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U972|U601S)[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity H([56]0) ZOOM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity E30SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9\-]*|U972)`),
		regexp.MustCompile(`(?i)(HAT4KDTV|HiSmart [24]K ATV4|HiSmartTV A4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HITV205N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KS964(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense (U3) 2021(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+) Pro(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+) Plus(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^/]+)/`),
		regexp.MustCompile(`(?i)HITACHI, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(Amaze[ _](?:S2_4G|S[56] 4G|S1|S[56](?: Plus)?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HOFFMANN|Neo[_ ]A[1379]00|X-Go|X-Play|X-Pro|X_Ultra|X-Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neo[_ ](A[1379]00)`),
		regexp.MustCompile(`(?i)HOFFMANN[ _]X[-_ ](Prime|Twist|Max)`),
		regexp.MustCompile(`(?i)X[-_](Play|Go|Pro|Ultra|Max)`),
		regexp.MustCompile(`(?i)(?:Ideal (?:10S|Tab [79]|8S)|ALFA(?:10T[BX]|7LM)|ALFA[_ ](?:10R[CX]|10BS|10TM?|8T|10MB|10YC|7RS|[78]M?RC|7M|8S[TL]|8RX|8MG)|HT[ _](?:7RT|8MZ))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ideal (?:10S|Tab 9|8S))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALFA[_ ]?(10R[CX]|10YC|10BS|10T[BMX]?|7RS|[78]M?RC|7L?M|10MB|8T|8S[TL]|8RX|8MG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ideal Tab 7 Ips( 3G)?`),
		regexp.MustCompile(`(?i)HT[ _](7RT|8MZ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Homtom|(?:HT[0-9]{1,2}(?: ?Pro)?|HT3_Pro|P30 Pro|android 8([\d.]*);(?: [\w-]+;)? S17)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Homtom[_ ])?HT ?([0-9]{1,2})[ _]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Homtom[_ ])?HT ?([0-9]{1,2}?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Homtom ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:EDA5[01]K?|EDA[47]0|EDA71_G|EDA5[12]|CK65|CT[46]0|CN80|EDA61K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EDA5[01]K?|EDA[47]0|EDA5[12]|EDA61K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CK65|CT[46]0|CN80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001)|MZ104|HZ0010J?|HZ1012|YK_P30(?:_EEA)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001|MZ104)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HZ0010J?|HZ1012)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YK_P30)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Horizont[_ ])?(32LE7011D|43LE7022D|32LE7052D|65LE7053D)`),
		regexp.MustCompile(`(?i)HOSIN[ _-]`),
		regexp.MustCompile(`(?i)HOSIN[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)HOSIN[ _-]([^;/]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:HPP-(GS1|L55B)|VLE5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Venus[_ ](?:X[12]|X1[0245679]|R8 PLUS|R[236-9]|R1[028]|X16-1)|Cosmos[ _](?:V8_lite|V19_Plus|V2[0-3]|U2?|V1[359]|V[45689]|V8-2)|Pearl K[123]|Magic Q8|Magic 5 Plus|Magic (?:[89]|1[13])|Hot[_ ]6|Symbol (?:M1|X|Max|R60|Pro|S4)|Symbol|Cyber [78]|Cyber 9 Pro|Cosmos|W10 Pro|TAB R6 Pro|T5 Pro| M5i)(?:[);/ ]|$)|(?:Android 8(?:[\d.]*);(?: [\w-]+;)? M5 Plus|Android 12;(?: [\w-]+;)? W10)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Cosmos[ _]V8_lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hot[_ ]6?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus R8 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus[_ ]X16(?:-1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus[_ ](X[12]|X1[0245679]|R[236-9]|R1[028])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cyber (\d*) Pro`),
		regexp.MustCompile(`(?i)Cyber (\d*)`),
		regexp.MustCompile(`(?i)Symbol (S4|M1)`),
		regexp.MustCompile(`(?i)(W10|T5) Pro`),
		regexp.MustCompile(`(?i) W10?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) M5i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cosmos[ _](?:V19_Plus|V2[0-3]|U2?|V1[359]|V[45689])|Pearl K[123](?: Prime)?|Magic Q8|Magic 5 Plus|Magic (?:[89]|1[13])|Symbol (?:X|Max)|Cosmos|M5 Plus)(?:-2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HT-705XS|705-G Go|1001-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HT-705XS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(1001-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(705-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huadoo[ _]|(?: HG11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huadoo[ _](HG0[46]|HG11|V[34])`),
		regexp.MustCompile(`(?i) HG11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huagan[ _]`),
		regexp.MustCompile(`(?i)Huagan[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)KHATAR H-(?:10 mini|20 PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KHATAR H-10 mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KHATAR H-20 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HW-)?(?:Huawei|MediaPad T1|Ultym5|Ideos|Honor[ _]?|(?:(?:AGS|AGS2|ALE|ALP|AMN|ANA|ANE|ARE|ARS|ASK|ATH|ATU|AUM|BAC|BAH[234]?|BG2|BGO|B[ZK]K|BKL|BL[ALN]|BND|BTV|CA[GMNZ]|CH[CM]|CHE[12]?|CLT|CMR|COL|COR|CPN|CRO|CRR|CUN|DIG|DLI|DRA|DUA|DUB|DUK|EDI|ELE|EML|EVA|EVR|FDR|FIG|FLA|FRD|FRL|GEM|GRA|HDN|HLK|HMA|Hol|HRY|HWI|H[36]0|INE|JAT|JEF|JDN|JDN2|JKM|JMM|JSN|KII|KIW|KNT|KOB|KSA|LDN|LEO|LIO|LLD|LND|LON|LRA|LUA|LY[AO]|MAR|MHA|MRD|MYA|NCE|NEN|NEM|NEO|NXT|PAR|PCT|PIC|PLE|PLK|POT|PPA|PRA|RIO|RNE|RVL|SCC|SCL|SCM|SEA|SHT|SLA|SNE|SPN|STF|STK|TAG|TIT|TNY|TRT|VCE|VEN|VIE|VKY|VNS|VOG|VRD|VTR|WAS|YAL|G(?:527|620S|621|630|735)|Y(?:221|330|550|6[23]5))-(?:[A-Z]{0,2}[0-9]{1,4}[A-Z]{0,3}?)|H1711|U(?:8230|8500|8661|8665|8667|8800|8818|8860|9200|9508))(?:[);/ ]|$))|hi6210sft|PE-(UL00|TL[12]0|TL00M)|T1-(A21?[Lw]|A2[23]L|701u|823L)|G7-(?:L01|TL00)|HW-01K|JNY-(LX[12]|AL10)|OXF-AN[01]0|TAS-(A[LN]00|L29|TL00)|WLZ-(AL10|AN00)|YOK-AN[10]0|NIC-LX1A|MRX-(AN19|AL[01]9|W[0-3]9)|CDY-(?:[AT]N00|AN[29][05]|NX9[AB]|TN[29]0)|GLK-(?:[AT]L00|LX1U)|JER-(?:[AT]N20|[AT]N10)|ELS-(?:[AT]N[10]0|NX9|N[23]9|N04)|AKA-(AL10|L29)|MON-(W|AL)19|BMH-(?:TN10|AN[12]0)|AQM-([AT]L[01]0|LX1)|MOA-([AT]L[02]0|LX9N)|NTS-AL00|ART-(?:[AT]L00[xm]|L29N?|L28)|MED-(?:[AT]L00|LX[29]N?|AL20)|EBG-(?:AN[01]0|TN00|N19)|ANA-(?:[AT]N00|NX9)|BZ[AK]-W00|BZT-(W09|AL[01]0)|HDL-(AL09|W09)|HWV3[123]|HW-02L|TEL-[AT]N(?:00a?|10)|KKG-AN[07]0|MXW-[AT]N00|JKM-AL00[ab]|TAH-(?:N29|AN00)m?|C8817D|T1-821W|d-01[JKH]|d-02[HK]|KRJ-(?:W09|AN00)|HWT31|Y320-U10|Y541-U02|VAT-L19|70[14]HW|60[58]HW|NOH-(?:NX9|AN0[01]|AN50|AL[01]0)|TNNH?-AN00|LIO-(?:[TA]L00|[LN]29|AN00)|KOB2K-L09|KOB2-(?:AL00|[LW]09|L03)|AGS3-(?:[WL]09|AL0[09]|W00[DE])|DNN-LX9|NEY-NX9|LON-AL00|HLK-L41|503HW|AGR-(?:[LW]09|AL09)|PPA-LX[12]|ANG-(?:AN00|LX[12])|NOP-AN00|ALA-AN70|DVC-[AT]N[02]0|302HW|Nexus 6P|DBY-W09|WKG-(?:LX9|[AT]N00)|JSC-(?:AN00|AL50)|OCE-A[NL][015]0|NZA-AL00|BRQ-A[LN]00|BZC-(?:AL|W)00|NEN-L(?:X1|22)|KOZ-AL[04]0|NTH-(?:AN00|NX9)|MRR-W[23]9|WGR-(?:W[10]9|AN19)|TET-AN[10]0|SCMR-(?:W09|AL09)|OXP-AN00|HJC-(?:AN90|LX9)|CDL-AN50|CND-AN00|NTN-(?:LX[13]|AN20|L22)|RNA-[AT]N00|CHL-(?:A[LN]00|AL60)|ELZ-AN[012]0|NAM-(?:LX9|AL00)|JLH-AN00|JAD-(?:AL[0568]0|LX9)|AGS5-(?:L09|W09)|AGS3K-(?:W20|[WL]0[09])|AGRK-[WL]09|MT2L03|LSA-AN00|KJR-W09|TET-A[NL][05]0|TYH601M|RTE-AL00|BAL-(?:AL00|L49)|BZI-(?:AL00|W00)|BZT3-(?:AL00|W09)|BZD-(?:W00|AL00)|MLD-AL[01]0|AGM3-(?:W09|AL09)HN|ABR-(?:AL[0689]0|LX9)|GIA-AN00|LEO-DLXXE?|BZA-L00|MGI-AN00|CMA-(?:LX[123]|AN[04]0)|NEW-AN90|KRJ2-(?:W09|AN00)|BRT-(?:W09|AN09)|ANY-(?:[LN]X1|LX[23]|AN00)|JLN-(?:LX[13]|AL00)|LGE-(?:NX[19]|AN[012]0)|TNA-AN00|TFY-(?:LX[123]|AN[04]0)|DIO-AN00|BZW-AL[01]0|MOGOLIA|CM990|MGA-(?:AL[04]0|LX[39])|60[56]HW|Peppa-(?:L2[23]B|L0[23]B)|KANT-\d{3}[BCS]?|Kobe3-L09|FNE-(?:NX9|AN00)|HPB-AN00|Mate ?(?:[34]0 RS|Xs|30)|Y530|SDY-AN00|EC6108V[89]|CTR-(?:LX[123]|AL00)|VNE-(?:LX[123]|N41|AN[04]0)|HMW-W09|GLA-(?:LX[13]|AL00)|HEY-W09|GOT-(?:AL09|W[02]9)|PAL-(?:AL00|LX9)|PAN-L29|NNH-AN00|P Smart S|NCO-(?:LX[13]|AL00)|DCO-(?:AL00|LX9)|CET-(?:AL[06]0|LX9)|ADT-AN00|RMO-(?:AN00|NX[13])|RKY-(?:AN00|LX[123])|M300-L09|EVE-LX9N?|BNE-(?:LX1|AL00)|dtab01|BZT4-W19|ROD-W09|ANP-AN00|WGRR-W09|HN3-U01|Holly-U19|BLM-00|ANN-AN00|VNA-(?:LX[23]|L29)|CRT-(?:NX1|LX[123]|AN00)|AGM-W09HN|PGT-(?:AN[12]0|N19)|GLL-AL01|MNA-(?:LX9|AL00)|LNA-(?:AL00|LX9)|ALT-L29|MAO-LX9N?|Enjoy 20 SE|ANB-AN00|STG-(?:AL00|LX1)|LTK-LX3|GOA-(?:LX9|AL80)|nova 6 5G| Angela-L|DBR-W09|WOD-LX1|REP-AN00|WDY-LX1|FOA-LX9|ALI-AN00|DBY2-(?:W09|L09)|REA-NX9`),
		regexp.MustCompile(`(?i)POT-[TA]L00a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z100-UL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y320-(?:U10|T00|U05)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y330-U05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y541-U02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8818(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G527-U081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G620S-L0[13]|C8817D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G630-U251(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G7-(?:L01|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P7-L(?:10|07)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6 ?S-U06`),
		regexp.MustCompile(`(?i)G730-C00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H1711(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y221-U(?:[12]2|[0345]3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y550-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y560-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huawei g700(?:-(?:U[012]0|T0[01]))?`),
		regexp.MustCompile(`(?i)ART-[AT]L00[xm](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MED-(?:[AT]L00|AL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG-[ACT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG-(?:L0[13]|L32|L13|L2[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NCE-(AL[10]0|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-(?:TL10|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SLA-(?:AL00|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIG-(?:[AT]L[10]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TRT-AL00[A]?|TRT-TL10A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LDN-(?:AL[12]0|TL[02]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLA-AL[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-[AT]L10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRD-[TA]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DVC-[AT]N20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DVC-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PPA-AL20|Enjoy 20 SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FRL-[AT]N00`),
		regexp.MustCompile(`(?i)MLD-AL[01]0`),
		regexp.MustCompile(`(?i)U8665(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MED-LX9N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G735-L(?:03|12|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHC-U(?:0[13]|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?G621-TL00M?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KII-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLL-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-L0[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-[UT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MNA-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)LNA-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)JAD-(?:AL[0568]0|LX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ABR-(?:AL[08]0|LX9)`),
		regexp.MustCompile(`(?i)ABR-AL[69]0`),
		regexp.MustCompile(`(?i)BAL-(?:AL00|L49)`),
		regexp.MustCompile(`(?i)U8860(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COL-(?:AL[01]0|TL[01]0|L29|L10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HRY-(?:[AT]L00[A]?|LX[12]|LX1MEB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HRY-LX1T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9508(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YAL-(?:L21|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LRA-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HRY-AL00T[a]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YAL-(L41|AL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MAR-LX1H|YAL-AL50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EBG-[AT]N00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EBG-AN10|EBG-N19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CDY-(?:AN9[05]|NX9A|TN90)|Honor 30S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LRA-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MXW-[AT]N00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BMH-(?:AN[12]0|TN10)|Honor 30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?H30-(?:C00|L01M?|L02|U10|T00|T10)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hol-U19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G750-T01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?SCL-(?:AL00|CL00|TL00H?)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CHM-U01(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Honor 4c Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CHE2?-[UT]L00[HM]?|CHE1-CL[12]0|CHE2-L(?:1[12]|23)|Che1-L04|CHE-TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CUN-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CAM-(?:AL00|TL00H|TL00)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-(?:AL10|L51|UL10|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-(?:L22|TL00H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?KIW-(?:AL10|TL00H|[TC]L00|L2[1-4]|UL00)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTH-(?:NX9|AN00)`),
		regexp.MustCompile(`(?i)JLH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTN-(?:LX[13]|L22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNA-[AT]N00`),
		regexp.MustCompile(`(?i)((?:Honor_|HW-)?H60-L(?:01|02|03|04|11|12)(?:_TD)?|HW-H60-J1|MOGOLIA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-TL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PE-(UL00|TL[12]0|TL00M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?DLI-(?:AL10|L[24]2|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L21HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JMM-L22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?BLN-(?:L2[124]|AL[1-4]0|TL[01]0(?:[);/ ]|$))`),
		regexp.MustCompile(`(?i)(?:Honor[_]?|HW-)?PLK-(?:AL10|CL00|TL00|TL01H?|UL00|L01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUM-(?:AL[20]0|L33[A]?|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUM-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?(?:LND-(?:AL[34]0|L29|TL[34]0)|AUM-L41)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATH-(?:[CAU]L00|TL00H?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?DUA-(?:L22|LX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?BND-(?:AL[01]0|TL10|L2[14]|L31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FRD-(?:AL[01]0|L0[249]|L1[49]|DL00)|VAT-L19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRA-(?:AL00X|AL00|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUK-(?:L09|TL30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEN-L22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JAT-L(29|X[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JAT-L41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKK-(?:AL[10]0|L21|L22|LX2|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KSA-(LX[239]|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JSN-L(?:2[123]|42)|JSN-[TA]L00[a]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARE-(?:AL[10]0|L22(?:HN)?|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STF-(?:AL[10]0|L09S?|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOA-LX9N|Honor 9A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AKA-L29|Honor 9C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LLD-(?:AL[01]0|L[23]1|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LLD-AL[23]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUA-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLK-AL00a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLK-(?:AL10|L4[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAM-UL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Holly-U19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTS-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNY-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGE-(?:AN10|NX9)`),
		regexp.MustCompile(`(?i)PGT-(?:AN10|N19)`),
		regexp.MustCompile(`(?i)RVL-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EDI-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VKY-TL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOG-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-(?:[AT]N00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-NX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COR-(?:AL[01]0|L29|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASK-AL(00x|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMA-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KSA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NNH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNNH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHM-[CUT]L00[HM]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OXP-AN00|Honor Play 4T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AKA-AL10|Honor Play 4T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RKY-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RKY-LX[123]`),
		regexp.MustCompile(`(?i)(?:NZA-AL00?|KOZ-AL40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHL-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMA-AN40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHL-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUA-[TA]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HJC-AN90(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KOZ-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HJC-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JAT-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOA-(?:AL[02]0|TL00))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKL-(?:AL00|AL20|AL30|L09|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCT-[TA]L10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOK-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KNT-(?:AL[12]0|[TU]L10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUK-AL20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JMM-[AT]L[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKL-L04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCT-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OXF-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OXF-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?SCL-L(0[1-4]|21|32)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?LYO-L[02]1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?LYO-L02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTN-AN20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TEL-(?:AN(?:00a?|10)|TN00)|Honor X10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Honor X10 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMA-LX[123]`),
		regexp.MustCompile(`(?i)TFY-LX[123]`),
		regexp.MustCompile(`(?i)CRT-LX[123]`),
		regexp.MustCompile(`(?i)VNE-LX[123]`),
		regexp.MustCompile(`(?i)WDY-LX[123]`),
		regexp.MustCompile(`(?i)(?:KKG-AN00|Honor X10 Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DNN-LX9|Honor X10 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANY-(?:NX1)`),
		regexp.MustCompile(`(?i)ANY-(?:LX[23])`),
		regexp.MustCompile(`(?i)VNA-LX[23]`),
		regexp.MustCompile(`(?i)ALA-AN70(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IDEOS[_ ]X5[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNN-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TAH-(?:N29|AN00)m|Mate Xs)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAL-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)TET-(?:A[NL]00|AN10)`),
		regexp.MustCompile(`(?i)ALP-(?:[TA]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNE-(?:AL00|L(?:01|03|21|23))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLA-(?:A09|L[02]9|[TA]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMA-(?:[AT]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SNE-(?:AL00|LX[0-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LYA-(?:AL[01]0|L[02]9|L0C|TL00)|PAN-L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LYA-AL00P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVR-(?:[TA]L00|L29|N29|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAS-([AT]L00|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAS-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LIO-AN00P|Mate30 RS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPN-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-(?:[TA]L00|L[02]9|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-(?:N29|TN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-AN00m(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOH-(?:NX9|AN0[01]|AN50|AL[01]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOP-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mate 40 RS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OCE-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OCE-(?:A[NL]50|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DCO-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)CET-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)NXT-(?:AL10|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MHA-(?:L[02]9|[AT]L00)|M300-L09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLL-L23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LON-(?:AL00(?:-PD)?|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRR-(?:L09|UL[20]0|CL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BND-L34(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CAZ-(?:AL[01]0|TL[12]0)|CAN-L[01][1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:608HW|PRA-LX[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-L1[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PIC-(?:[AT]L00|LX9)|HWV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704HW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-(?:L0[13]|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-(?:AL00|L2[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNE-L[02]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWI-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAR-(?:[AT]L00|LX[19]|LX1M|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANE-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INE-(?:AL00|LX[12]r|LX[12]|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCE-(L22|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAR-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEA-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLK-(?:[AT]L00|LX1U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPN-TL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WLZ-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WLZ-AN00|nova 6 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JNY-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JEF-(?:[AT]N00|[AT]N20|NX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JER-(?:[AT]N10|[AT]N20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CDY-(?:[AT]N00|NX9B|[AT]N20)|CDL-AN50|CND-AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOA-(?:LX9|AL80)`),
		regexp.MustCompile(`(?i)JNY-LX2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ANG-LX[12]|Angela-(?:L2[12]B|L02B))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEN-L(?:X[13]|22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANG-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BRQ-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BRQ-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAM-(?:AL00|LX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RTE-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JLN-(?:AL00|LX[13])`),
		regexp.MustCompile(`(?i)GLA-(?:LX[13]|AL00)`),
		regexp.MustCompile(`(?i)NCO-(?:AL00|LX[13])`),
		regexp.MustCompile(`(?i)BNE-(?:LX1|AL00)`),
		regexp.MustCompile(`(?i)DIG-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WAS-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WKG-[AT]N00`),
		regexp.MustCompile(`(?i)WKG-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MGA-LX[39]`),
		regexp.MustCompile(`(?i)CTR-LX[123]`),
		regexp.MustCompile(`(?i)FIG-L(?:A1|X[123]|11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-(?:LX(?:[13]|1T|2J|1AF)|AL00|L01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-LX1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PPA-LX[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P Smart S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VTR-(?:L[02]9|AL00|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WAS-(?:L(?:X1|X1A|X2|X2J|X3|03T)|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VKY-(?:AL00|L09|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EML-(?:[TA]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ANE-(?:LX[123]|LX2J|TL00)|HWV32)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CLT-(?:AL0[01]|TL0[01]|L0J|L(?:04|[02]9))l?|HW-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ELE-L(?:04|09|29)|ELE-[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MAR-(?:LX(?:1[BM]|2B|[13]Am?|2J?|3BM)|TL00|L21B|L21MEB)|NIC-LX1A|HWV33)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VOG-(?:L(?:04|09|29)|TL00|AL10)|HW-02L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-LX4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JNY-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L29N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ELS-(?:[AT]N00|NX9|N04)|NEY-NX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELS-(?:AN10|N[23]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRA-(?:L09|[TU]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HUAWEI P8max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRA-UL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ALE-L(?:02|21|23)|ALE-[TUC]L00|503HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PRA-L(?:A1|X[12])|hi6210sft)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVA-(?:AL[10]0|L[012]9|[TCD]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-L(?:[23]1|[26]2|53|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-L52(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SLA-L(?:02|03|22|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L(?:03|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIE-(?:AL10|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-TL[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATH-UL0[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U(8230|8661|8667)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARS-([AT]L00|L22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRO-(?:L[02]2|U00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAG-L[02]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUA-(U22|L2[12]|U03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-(?:L(?:02|03|2[23])|U29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-L(?:01|03|21|23|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMN-LX[1239](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-LX5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRO-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAG-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-(?:LX2|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-L13(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUN-(?:L(?:0[123]|2[123]|33)|U29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SCC-U21|SCL-U31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-L11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-(L41|AL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-L(?:11|21|22|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRD-L(?:X1[NF]?|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-L(?:31|42)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIT-(?:AL00|L01|U02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M[ER]D-LX2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y625-U03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y635-L0[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y635-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAM-L(?:03|21|23|32)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TRT-LX[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LDN-L(?:01|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HUAWEI[ _]?)?DUB-(?:LX[13]|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LDN-(?:AL00|L21)|TRT-TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LDN-(?:LX2|TL10)|TRT-(?:L21A|L53))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-(?:LX2|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-AL00a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-AL20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PPA-LX3|Peppa-(?:L2[23]B|L0[23]B))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L28(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLA-(LX[123]|AL20|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JKM-(?:[TA]L00[ab]?|LX[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-(L2[12]|LX3)|LTK-LX3`),
		regexp.MustCompile(`(?i)FRL-L2[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)302HW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NMO-L31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CM990(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultym5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G6-L11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexus 6P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWT31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HDN-[LW]09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH4-(?:L09|AL10)`),
		regexp.MustCompile(`(?i)BAH4-W(?:29|[03]9)`),
		regexp.MustCompile(`(?i)BAH3-(?:AL00|[LW]09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH3-W59(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH3-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DB[YR]-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOT-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOT-W[02]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCMR-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCMR-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-(L09|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS5-L09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS5-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMW-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HDL-(?:W09|AL09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JDN-(?:AL00|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KRJ-AN00|Honor V6 5G`),
		regexp.MustCompile(`(?i)KJR-W09|KRJ-W09|Honor V6 Wi-Fi`),
		regexp.MustCompile(`(?i)AGS3-AL09HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W09HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEY-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MON-(W|AL)19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZA-W00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZA-L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZC-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZC-W00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZW-AL[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZT4-W19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2-80[123]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2-A01L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2-801W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-AL[01]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-W[0-3]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRR-W[23]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-AN19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WGRR?-W[10]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WGR-AN19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMR-(?:AL[01]9|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMR-W19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCM-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEM-70[1-3]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JDN2-(:?[WL]09|AL[50]0|AL50HN)|BAH2-(?:AL[01]0|L09|W[01]9))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHT-(?:AL|W)09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VRD-(?:(AL|W)09|AL10|W10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCM-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BTV-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BAH-W09|CPN-(?:L|W)09|CPN-AL00|701HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH-(?:L09|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AGS2-AL00|JDN2-(?:AL00|W09))HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS2-(?:[LW]09|W09HN|W19|L03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KOB2-(?:[LW]09|L03)|Kobe3-L09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGR-[LW]09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS-(?:L0[39]|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KOB-(?:L|W)09|BZK-[LW]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BG2-(?:U0[13]|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BGO-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BGO-DL09|PLE-70[13]L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JDN-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FDR-(A01[LW]|A03L)|60[56]HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T1-(?:A21[LW]|A2[23]L)|MediaPad T1 10 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1-701u(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T1-82(?:3L|1W)|MediaPad T1 8.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3K-W0[90]`),
		regexp.MustCompile(`(?i)AGS2-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W00[DE](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZT-(?:AL[01]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZT-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:d-01J|d-02[HK])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:dtab)?(d-01[KH]|01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO-BX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO-DLXXE?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLM-00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EC6108V(8|9)`),
		regexp.MustCompile(`(?i)KANT-350[BC]`),
		regexp.MustCompile(`(?i)(MediaPad[^/;]*) Build`),
		regexp.MustCompile(`(?i)Ideos([^;/]*) Build`),
		regexp.MustCompile(`(?i)(?:HUAWEI )?MT([0-9]+)`),
		regexp.MustCompile(`(?i)Huawei[ _\-]?([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:HW-)?Huawei(?:/1\.0/0?(?:Huawei))?[_\- /]?([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)Huawei; ([a-z0-9 \-]+)`),
		regexp.MustCompile(`(?i)Hugerock|T101_2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hugerock[_ ](T70H)`),
		regexp.MustCompile(`(?i)(AIVI-N3000RV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hurricane[ _]|(?:Flame_Plus|Glaze|Cobra|Ridge Plus|Rush Plus|DZIRE|Android 7(?:[\d.]*);(?: [\w-]+;)? Beam|Vulcan|SAGE|Iris Plus 2021|VortexPlus|Excite|Flint|Panther|Slam|Epic)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hurricane[ _]IGNITE`),
		regexp.MustCompile(`(?i)Hurricane[ _]Bolt`),
		regexp.MustCompile(`(?i)Hurricane[ _]VORTEX`),
		regexp.MustCompile(`(?i)Hurricane[ _]GIGA`),
		regexp.MustCompile(`(?i)(?:VULKANO|ST-810)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ST-810)`),
		regexp.MustCompile(`(?i)(?:PTC760|PNC550)`),
		regexp.MustCompile(`(?i)(PTC760|PNC550)`),
		regexp.MustCompile(`(?i)Hyundai|(?:Ultra (?:Active|Air|Charm|Dream|Energy|Latitude|Link|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)|Ultra_Vision_Plus|E(?:475|504|603)|G(?:24027|2552[34])K|W25042L|HP554O|Seoul (ECO|S8|MIX|5 Plus|9)|L503F Plus|HT0701L16|HT0703K16|HT0704K08|HT100(?:4LI?16|2W32|3X16|2W16)|Koral_8W2|HT0701W16|Eternity[_ ](?:G25|H6[578])|HYMI 5S Plus|7GB1|7WD1|(?:Android 9;(?: [\w-]+;)? [EL]553)|10LB1|L601F|10WB1|E601F|E503F|E465GO|H-LED(?:55GU7003|55EU1311|24BS5000|40GS5003|43FS5003|32FS5005)|H-DMP100|HT070[34]W08|Koral 7W4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultra[_ ]Vision[_ ]Plus`),
		regexp.MustCompile(`(?i)Ultra (Active|Air|Charm|Dream|Energy Lite|Energy Plus|Energy|Latitude|Link|Live II|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)`),
		regexp.MustCompile(`(?i)Seoul (\d+)`),
		regexp.MustCompile(`(?i)Eternity[_ ](G25|H6[578])`),
		regexp.MustCompile(`(?i)E(475|504|503F|553|603|601F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L(553|601F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Hyundai[_ ])?(Eternity[_ ](?:G57L?|G[56]0W?)|H7|Aero Plus)`),
		regexp.MustCompile(`(?i)(H-LED\w+|H-DMP100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HT0704W08|Koral 7W4`),
		regexp.MustCompile(`(?i)7GB1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)7WD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hyundai ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Hyundai[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:Pryme 01|ST01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COMMUNICATOR[_ ]9.7[_ ]3G`),
		regexp.MustCompile(`(?i)(?:GO5_55|BLESS_GO55|BLESSPLUS|KF4Go|KF5bless|GO4\.5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO4\.5`),
		regexp.MustCompile(`(?i)(KF4Go|KF5bless)`),
		regexp.MustCompile(`(?i)(?:IKU[_ ](?:A22|A[45]0|T[123]|X2|K3|i[34]|T[_ ]MAX)|Powerful_K55i|Curvy C50L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Powerful_K55i|Curvy C50L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ](A22|A[45]0|X2|K3|i[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ](T[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ]T[_ ]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]\w`),
		regexp.MustCompile(`(?i)IMO[ _]Q([23]) Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q([4]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]FEEL A2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S80(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S89(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S88(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S99(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S98(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S87(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S67(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S78(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Discovery II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _](Y5|Z[67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO TAB X9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KZCAR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INQ[/ ]`),
		regexp.MustCompile(`(?i)INQ/([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)INQ ([^;/]+) Build`),
		regexp.MustCompile(`(?i)INSYS|(?:HK9-4010|IH9-L614|AC7_DJ17)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VI4-103|GU4-K147)`),
		regexp.MustCompile(`(?i)IQM (?:picasso|vivaldi|newton)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM picasso(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM vivaldi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM newton(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IRA_DUO|IRAW7258)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(IRAW7258)`),
		regexp.MustCompile(`(?i)IT-(?:1101S?|1101-QUAD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IT-(1101S?)`),
		regexp.MustCompile(`(?i)IUNI[ _]`),
		regexp.MustCompile(`(?i)IUNI[ _](U3|i1|N1)`),
		regexp.MustCompile(`(?i)IconBIT|NT-(3506M|1501C|0704S|0909T|1009T|10[01]1T|1017T|3601P/3602P|3603P|3702S|3805C|3905T|3701S|0701S|0805C|0902S|370[23]M)|XDS[789]4K|Omnicast UHD|Movie Smart 4K|Movie IPTV Quad|TOUCAN (?:Smart 3D Quad|(?:NANO|Stick) 4K)|NetTAB_Space_3G`),
		regexp.MustCompile(`(?i)NT-10[01]1T`),
		regexp.MustCompile(`(?i)(?:iconBIT )?(Movie (?:Smart 4K|UNO|Play|IPTV Quad|Ultra HD 4K)|XDS[789]4K|Omnicast UHD|Stick|XDS1[01]00?|Movie [XZ])`),
		regexp.MustCompile(`(?i)(?:Impression[ _\-]?([^/;]+)|A502|I10\-LE|ImPad[ _]?(.*)|ImSmart[ _]?(.*))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A502)`),
		regexp.MustCompile(`(?i)ImSmart[ _]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)ImPad[ _]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(I10\-LE)`),
		regexp.MustCompile(`(?i)Impression[ _\-]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(?:IF(900[1237]|902[19]|903[15]|236a|195a)|M370i?|InFocus M808i?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M370i?)`),
		regexp.MustCompile(`(?i)IF(236|195)a`),
		regexp.MustCompile(`(?i)InFocus M([0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)(?:INFONE (?:XE?)|GORILLA 9 PLUS|X_RAINBOW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INFONE (XE?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Inch (?:Regulus (?:7.85|II)|Avior 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Regulus 7.85)`),
		regexp.MustCompile(`(?i)(Regulus II|Avior 3)`),
		regexp.MustCompile(`(?i)(?:Inco[ _](Aurora II|Colors|Sphere|Plain[_ ]2S?|Plain2 S|Flex(?: 2S)?|S4|Bloom(?: 2)?)|(Horizon_S|Horizon \+|MATTER)|Bloom4|eco_s|Flex-3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bloom ?4`),
		regexp.MustCompile(`(?i)(?:Inco[ _])?(Plain[_ ]2S?|Colors|Horizon_S|Horizon \+|Aurora II|Flex(?: 2S)?|S4|Bloom(?: 2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Flex-(3)`),
		regexp.MustCompile(`(?i)Inco Sphere( 3)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INFINITON[_ -]|Earth 7.0'3G|EARTH10`),
		regexp.MustCompile(`(?i)INFINITON[_ -]T5`),
		regexp.MustCompile(`(?i)Earth 7.0'3G`),
		regexp.MustCompile(`(?i)Infinix[ _-]X260`),
		regexp.MustCompile(`(?i)Infinix[ _-]X502`),
		regexp.MustCompile(`(?i)Infinix[ _-]X570`),
		regexp.MustCompile(`(?i)Infinix[ _-]X350`),
		regexp.MustCompile(`(?i)Infinix[ _-]X351`),
		regexp.MustCompile(`(?i)Infinix[ _-]X352`),
		regexp.MustCompile(`(?i)Infinix[ _-]X403`),
		regexp.MustCompile(`(?i)Infinix[ _-]X503`),
		regexp.MustCompile(`(?i)Infinix[ _-]X511`),
		regexp.MustCompile(`(?i)Infinix[ _-]X400`),
		regexp.MustCompile(`(?i)Infinix[ _-]X401`),
		regexp.MustCompile(`(?i)Infinix[ _-]X450`),
		regexp.MustCompile(`(?i)Infinix[ _-]X451`),
		regexp.MustCompile(`(?i)Infinix[ _-]X454`),
		regexp.MustCompile(`(?i)Infinix[ _-]X500`),
		regexp.MustCompile(`(?i)Infinix[ _-]X501`),
		regexp.MustCompile(`(?i)Infinix[ _-]X506`),
		regexp.MustCompile(`(?i)Infinix[ _-]X509`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6821`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X552|Zero 3)`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X(?:574|602)|Zero 4 Plus)`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X555|Zero 4)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X603`),
		regexp.MustCompile(`(?i)Infinix[ _-]X603B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X620B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X620`),
		regexp.MustCompile(`(?i)Infinix[ _-]X687B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X687`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6815B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6811B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6815`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6811`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6810`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6820`),
		regexp.MustCompile(`(?i)Infinix[ _-]X507`),
		regexp.MustCompile(`(?i)Infinix[ _-]X510`),
		regexp.MustCompile(`(?i)Infinix[ _-]X55[34]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X669`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X6831|X6833B)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6835B?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X622`),
		regexp.MustCompile(`(?i)Infinix[ _-]X521`),
		regexp.MustCompile(`(?i)Infinix[ _-]X522`),
		regexp.MustCompile(`(?i)Infinix[ _-]X557`),
		regexp.MustCompile(`(?i)Infinix[ _-]X556`),
		regexp.MustCompile(`(?i)Infinix[ _-]X559[cF]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X559`),
		regexp.MustCompile(`(?i)Infinix[ _-]X606[BC]?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X623`),
		regexp.MustCompile(`(?i)Infinix[ _-]X608`),
		regexp.MustCompile(`(?i)Infinix[ _-]X624`),
		regexp.MustCompile(`(?i)Infinix[ _-]X625`),
		regexp.MustCompile(`(?i)Infinix[ _-]X650`),
		regexp.MustCompile(`(?i)Infinix[ _-]X655F`),
		regexp.MustCompile(`(?i)Infinix[ _-]X655`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680[BCEF]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680`),
		regexp.MustCompile(`(?i)Infinix[ _-]X688`),
		regexp.MustCompile(`(?i)Infinix[ _-]X682[BC]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X689C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X689F`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X659|PR652|X658)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X573B?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6812`),
		regexp.MustCompile(`(?i)Infinix[ _-]X675`),
		regexp.MustCompile(`(?i)Infinix[ _-]X662`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6816D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6816C?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X668C?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X665[EC]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6826`),
		regexp.MustCompile(`(?i)Infinix[ _-]X666`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6825`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6827`),
		regexp.MustCompile(`(?i)Infinix[ _-]X665`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6817`),
		regexp.MustCompile(`(?i)Infinix[ _-]X612`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5010`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5515[FI]?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X609`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5516`),
		regexp.MustCompile(`(?i)Infinix[ _-]X627`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5514D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X653`),
		regexp.MustCompile(`(?i)Infinix[ _-]X657`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X6823C?|X6511G)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6511`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6512`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6517`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6515`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6516`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X626`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652`),
		regexp.MustCompile(`(?i)Infinix[ _-]X660`),
		regexp.MustCompile(`(?i)Infinix[ _-]X551`),
		regexp.MustCompile(`(?i)Infinix[ _-]X600`),
		regexp.MustCompile(`(?i)Infinix[ _-]X601`),
		regexp.MustCompile(`(?i)Infinix[ _-]X572`),
		regexp.MustCompile(`(?i)Infinix[ _-]X571`),
		regexp.MustCompile(`(?i)Infinix[ _-]X604`),
		regexp.MustCompile(`(?i)Infinix[ _-]X605`),
		regexp.MustCompile(`(?i)Infinix[ _-]X610`),
		regexp.MustCompile(`(?i)Infinix[ _-]X690`),
		regexp.MustCompile(`(?i)Infinix[ _-]X656`),
		regexp.MustCompile(`(?i)Infinix[ _-]X692`),
		regexp.MustCompile(`(?i)Infinix[ _-]X683`),
		regexp.MustCompile(`(?i)Infinix[ _-]X695`),
		regexp.MustCompile(`(?i)Infinix[ _-]X693`),
		regexp.MustCompile(`(?i)Infinix[ _-]X663C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X677`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6819`),
		regexp.MustCompile(`(?i)Infinix[ _-]X676B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X671B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X672`),
		regexp.MustCompile(`(?i)Infinix[ _-]X663D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X671B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X663`),
		regexp.MustCompile(`(?i)Infinix[ _-]X697`),
		regexp.MustCompile(`(?i)Infinix[ _-]X698`),
		regexp.MustCompile(`(?i)Infinix[ _-]X670`),
		regexp.MustCompile(`(?i)Infinix[ _-]X676C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6716`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6710`),
		regexp.MustCompile(`(?i)Infinix[ _-]X678B`),
		regexp.MustCompile(`(?i)Infinix HOT ([a-z]?[1-6])( (?:Lite|Plus|Pro))?`),
		regexp.MustCompile(`(?i)Infinix[ _-](X[78]00)`),
		regexp.MustCompile(`(?i)Infinix[ _-](X\d+)`),
		regexp.MustCompile(`(?i)Infinix[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Infinix[ _-]([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)(TVB-906X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Inhon[_ ](V6)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)intki[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)InnJoo|(?:Halo Plus|Halo X|Halo 5 3G|Halo[ _]4(?:[ _]mini[ _]LTE)?|VISION LTE|Halo2 3G|Fire 4 ?(?:Pro|Plus)?|Fire_Plus_LTE|Fire3 mini|Fire2 (?:Air|Pro|Plus) LTE|Fire2 LTE|Superb(?:_PLus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]X3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo[ _]X[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo[ _]4[ _]mini[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo ?([25]) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]Pro2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Innjoo ONE 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Innjoo[ _]2[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]([2-4])`),
		regexp.MustCompile(`(?i)Innos_?(D6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INNO([a-z0-9]+)`),
		regexp.MustCompile(`(?i)INOI|(?:A126|A161|A170_Plus|A181_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)inoiPad mini 2\+32 Wi-Fi\+3G`),
		regexp.MustCompile(`(?i)inoiPad 2\+32 Wi-Fi\+3G`),
		regexp.MustCompile(`(?i)inoiPad mini 1\+16 Wi-Fi`),
		regexp.MustCompile(`(?i)INOI (2|5) Lite (2019|2021)`),
		regexp.MustCompile(`(?i)INOI[_ ]([123])[_ ]LITE`),
		regexp.MustCompile(`(?i) (A126)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) A161(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INOI ([257]) (?:\d\+\d+ )?(2019|202[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INOI[_ ]([^);/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)NS-(P11A8100|P10A8100|P10A6100|P16AT08|P16AT10|P16AT785HD|P08A7100|P10A7100)(?:[);/ ]|$)|AFTEAMR311|AFTJMST12`),
		regexp.MustCompile(`(?i)NS-(P10A6100|P16AT10)`),
		regexp.MustCompile(`(?i)NS-(P10A8100|P10A7100)`),
		regexp.MustCompile(`(?i)Intex|(Aqua|Cloud[ _][XY][0-9]{1}|Cloud (?:Fame|Glory) 4G)|(?:CLOUD TREAD|IM0318ND|IV0318ND)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _]LIONS[ _]T1[ _]LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _]LIONS[ _]([NT]1|[23]|E3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA (A4) PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _](A4|S[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Intex[ _]IM0118ND`),
		regexp.MustCompile(`(?i)AQUA CRYSTAL\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA FulVU e5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA JEWEL 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aqua[_ ]Life[_ ]?III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]4\.0[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]4G[_ ]MINI`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]LIONS[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]PRIME[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]ZENITH`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]POWER[_ ]IV`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]YOUNG[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]TREND[_ ]LITE`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]AMAZE\+`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]Supreme\+`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]STYLE (\d)`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]Strong 5\.1\+`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]CRYSTAL`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?ELYT[_ ]DUAL[_ ]PLUS`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?ELYT[_ ]DUAL`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?ELYT[_ ](E\d+)`),
		regexp.MustCompile(`(?i)Intex[ _]IV0118ND`),
		regexp.MustCompile(`(?i)Intex[ _]IP0418ND`),
		regexp.MustCompile(`(?i)Intex[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)CLOUD TREAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cloud (?:Fame|Glory) 4G)`),
		regexp.MustCompile(`(?i)(Aqua|Cloud)[ _\.]([^/;\)]+)(?:[ _]Build|/|\))`),
		regexp.MustCompile(`(?i)Intex[ _]([a-z0-9_+\-]+)`),
		regexp.MustCompile(`(?i)(?:Diamond D[56]|Fighter|Eager|Royal R[1-8]|Android 9(?:[\d.]*);(?: [\w-]+;)? (?:MAX[89]|MAX_2))(?: Build|[;)])`),
		regexp.MustCompile(`(?i)MAX[_ ]?([89]|2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Fighter|Eager|Royal R[1-8]|Diamond D[56])`),
		regexp.MustCompile(`(?i)INVIN[ _-]|(?:IPC002|KM5PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INVIN[ _-](X[24]|KM[678])`),
		regexp.MustCompile(`(?i)(IPC002)`),
		regexp.MustCompile(`(?i)IRBIS|TZ(1(?:0[04]|42|5[01]|84|65|7[01345-89]|8[356]|9[12578])|200|49|55|72|22|7(?:0[127]|1[1-46789]|2[021567]|3[025-8]|4[257]|5[23457]|6[12]|72|7[137]|8[1]|9[147])|8(?:[34]1|32|5[3-8]|6[2-5]|7[12478]|8[1-5]|9[0127])|96[0-9])|TZ199|TZ85|TZ13|TZ(?:one|art|HIT|81L)|(SP(?:0[56]|2[01]|4[1-36]|40[12]|45[345]|49[34]|50|51[0147]|531|54[12]|55[0124]|571)|32H1YDX000BS2|43F1YDX000BS2|50U1YDX000BS2|32H1YDX000FBS2|39H1YDX000BS2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TZ(?:[0-9]+)|TZ(?:one|art|HIT|81L))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SP[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(43F1YDX000BS2|50U1YDX000BS2|32H1YDX000BS2|32H1YDX000FBS2|39H1YDX000BS2)`),
		regexp.MustCompile(`(?i)(?:Vox[_ ](?:[45]S|Alpha|POP|STEEL Plus|Energy|FORTIS|VERO)|IS2_?Plus|IS[36]Plus|IS2S|Next_P(?:_PRO)?|NEXT U|NEXT P\+|IRS002-16|X1 mini|Iris_Pad_G8020|G7060|G7100|G8060)(?:[);/ ]|$)|android 9;(?: [\w-]+;)? (?:N30)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Vox[_ ]([45])S`),
		regexp.MustCompile(`(?i)N30(?: Build|[;)])`),
		regexp.MustCompile(`(?i)VOX[_ ]FORTIS`),
		regexp.MustCompile(`(?i)VOX[_ ]VERO`),
		regexp.MustCompile(`(?i)NEXT[_ ]([PU]\+?)`),
		regexp.MustCompile(`(?i)IS([236])_?Plus`),
		regexp.MustCompile(`(?i)(?:Iris_Pad_)?(G7060|G7100|G80[26]0)`),
		regexp.MustCompile(`(?i)TPC-[A-Z0-9]+|TPCY-TX[TE][^);/ ]+`),
		regexp.MustCompile(`(?i)TPC-PA10.1M`),
		regexp.MustCompile(`(?i)TPC-(XE10D-H)`),
		regexp.MustCompile(`(?i)TPC-([A-Z0-9]+)`),
		regexp.MustCompile(`(?i)(TPCY-TX[TE][^);/ ]+)`),
		regexp.MustCompile(`(?i)JFone[ _](JS501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JKL[_ ](A28)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(JP5s?) Inmate Media Device(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(JR-J71)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JVC[;,]|AV-10NT310|AFTSO001`),
		regexp.MustCompile(`(?i)JVC[;,](32D1290)`),
		regexp.MustCompile(`(?i)JVC, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(AV-10NT310)`),
		regexp.MustCompile(`(?i)Remix (?:Pro|Mini)`),
		regexp.MustCompile(`(?i)(?:JK(?:960|[71]03) 3G|JK702|JK101|JK[17]00 v2.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JK(960|[71]03) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JK(702|[17]00 v2.0|101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jesy_(J7)|J9S_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jesy_(J7)`),
		regexp.MustCompile(`(?i)JK-?(760)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JIAYU[ _-]|(?:JY-G4[\\_]G5|(?:JY-[a-z0-9]+)|JY_G4C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JIAYU G4_G5|JY-G4[\\_]G5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JIAYU[ _-](G4[S]?|G2F|G3[S]?|S[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JY[-_]([a-z0-9]+|G4C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga[-_ ]|(?:(?:Fresh|Optim)4G|Pass(?:Plus|3G)|PicassoNote|Hotz[_ ]M1|WinPRO|Touch4G|Start(?:3G|LTE)?|IGO[ _]L[41]|Basco[ _](?:L3|L[45]00|L45[01]|XS1|S2|M1)|M500-1|Hit4G|A450|Neon|IGO_L3|JoyPRO|Fresh|GoalPlus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Optim4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hotz[_ ]M1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hit4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PassPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pass3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GoalPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Win|Joy)PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Touch4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Start3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StartLTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Start(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PicassoNote(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Iron(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IGO_L3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Basco neo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M500-1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Jinga[ _])?Basco[ _](L[13]|L[45]00|XS1|S2|L45[01]|M1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Trezor S1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JINGA_IGO_L2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JINGA[_ ])?IGO[_ ]([ML]1|L4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JINGA[_ ])?(Neon|A450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS1542QWN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS1542QWN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Revolution TnT3|Xtreme_(?:[37]|3x)|Xtreme (?:XT84|XT309|XT309 Plus|1)|Opus S3|JSPQ65|Prime (?:P3[09]0|P4442?|P30))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Revolution (TnT3)`),
		regexp.MustCompile(`(?i)Xtreme (XT84)`),
		regexp.MustCompile(`(?i)Prime (P4442?|P3[09]0|P30)`),
		regexp.MustCompile(`(?i)Xtreme (XT309) Plus`),
		regexp.MustCompile(`(?i)Xtreme (XT309)`),
		regexp.MustCompile(`(?i)Xtreme[ _]([137]|3x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy (?:HH|JD)`),
		regexp.MustCompile(`(?i)Joy[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:TB-JS101A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EZpad ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER(s)?|COSMO[_ ](L707|L808)|BLASTER|FREEDOM[ _](C10[05]|M303|X1)|Freedom`),
		regexp.MustCompile(`(?i)COSMO[_ ](L707|L808)`),
		regexp.MustCompile(`(?i)FREEDOM[ _](C10[05]|M303|X1)`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER2s`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER2`),
		regexp.MustCompile(`(?i)K-?Touch[ _][a-z0-9]+|(?:Pace 2 Lite|KT202011(?:99|88)|LDXA-2[01]22|LDOX-2130|LDOX-212[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K-?Touch[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)K-?Touch[ _]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KATV-01) PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kddi-([a-z0-9]+)|(?:INFOBAR A01|HTX21|HTL21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kddi-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)INFOBAR (A01)`),
		regexp.MustCompile(`(?i)HTX21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KINGZONE_|K1[_ ]turbo`),
		regexp.MustCompile(`(?i)KINGZONE_(N5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K1[_ ]turbo`),
		regexp.MustCompile(`(?i)knmobile[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)J?KOPO[ _-]`),
		regexp.MustCompile(`(?i)J?KOPO[ _-]?([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)J?KOPO[ _-]?([^/;)]+)`),
		regexp.MustCompile(`(?i)KREZ[_ ]`),
		regexp.MustCompile(`(?i)KREZ[_ ](SL502)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KREZ[_ ](TM100[12]S8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KRIP_|K(?:4[bm]|5[bdm]|6b|55h?|57|65|700A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KRIP_)?K(4[bm]?|5[bdm]|6b|55h?|57|65|700A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NET1100|NET_(?:LITE|TITAN|VOLT|MAX|MATRIX|K7)|android 8([\d.]*);(?: [\w-]+;)? NETWORK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NET_(LITE|TITAN|VOLT)`),
		regexp.MustCompile(`(?i)(KM-[a-z0-9]+|EV-[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KZG[_ ](Scope)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KAAN[ _](N[12]|A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KaiCloud[ ]?(7[48]4|942)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KALLEY|(?:ELEMENT (?:4 Plus|MAX|PLAY|Q)|ELEMENT_PRO_2|K-BOOK(?:8MG|73G)|SILVER_MAX|Silver Max (?:Lite|Pro)|Black[ _][GXZ]|Black_G_2|BLACK_PRO|ATV R[12]|GOLD_PRO|KBOOK7M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Black[ _]([GXZ])`),
		regexp.MustCompile(`(?i)Silver Max (Lite|Pro)`),
		regexp.MustCompile(`(?i)K-?BOOK(8MG|73G|7M)`),
		regexp.MustCompile(`(?i)ATV (R[12])`),
		regexp.MustCompile(`(?i)KALLEY,(43D1800|55D1240)`),
		regexp.MustCompile(`(?i)KJ[-_](OB0[23]|YU_?BI|SMART4K|GOCHI|ALFARK|AC0[25])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KJ[-_]OB03`),
		regexp.MustCompile(`(?i)KJ[-_]OB02`),
		regexp.MustCompile(`(?i)KJ[-_]YU_?BI`),
		regexp.MustCompile(`(?i)KJ[-_]ALFARK`),
		regexp.MustCompile(`(?i)KJ-(AC0[25])`),
		regexp.MustCompile(`(?i)(SmartVision3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Browser-)?Karbonn|K9 Kavach 4G|K9[_ ](?:Viraat|Smart)[_ ]Plus|K9 Music 4G|K9 Smart|K9 VIRAAT 4G|Aura (?:Sleek Plus|Sleek 4G|Power 4G Plus|Note Play|Note 2|Storm|Champ)|Titanium[ _](?:3D-Plex|Octane Plus|Vista 4G|Jumbo|S360|S1[059]|S35|S20[13]|S22|S[15]|S200 HD|Frames S7|MOGHUL|S9)|MACHFIVE|MACHONE|Sparkle V|Alfa A114 Quad|Quattro[ _]L(?:45|5[025])[ _](?:HD|IPS|VR)|A41 Power|A(?:[19]|4[05])[ _]Indian|S2052GB|MACH SIX VR|K-Lite F3|Titanium Vista`),
		regexp.MustCompile(`(?i)K9[_ ]Smart[_ ]Plus`),
		regexp.MustCompile(`(?i)K9 Smart(?: 1GB)?`),
		regexp.MustCompile(`(?i)A([19]|4[05])[ _]Indian`),
		regexp.MustCompile(`(?i)K9[_ ]Viraat[_ ]Plus`),
		regexp.MustCompile(`(?i)(?:karbonn)?K9 Viraat 4G`),
		regexp.MustCompile(`(?i)Titanium[ _]S([29])[ _]?Plus`),
		regexp.MustCompile(`(?i)Titanium[_ ]S(99|360|1[059]|109|35|200 HD|20[13]|22|[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Titanium Vista(?: 4G)?`),
		regexp.MustCompile(`(?i)Titanium[ _]MOGHUL`),
		regexp.MustCompile(`(?i)Titanium[ _]3D-Plex`),
		regexp.MustCompile(`(?i)Quattro[ _]L(5[05])[ _]HD`),
		regexp.MustCompile(`(?i)Quattro[ _]L(45)[ _]IPS`),
		regexp.MustCompile(`(?i)Quattro[ _]L(52)[ _]VR`),
		regexp.MustCompile(`(?i)Karbonn ([a-z0-9]+) WAP-Browser`),
		regexp.MustCompile(`(?i)WAP Browser-Karbonn ([a-z0-9]+)/`),
		regexp.MustCompile(`(?i)Karbonn_([^;/)]+)`),
		regexp.MustCompile(`(?i)Karbonn ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Karbonn ([^;/]+)/`),
		regexp.MustCompile(`(?i)Kata[ _-]`),
		regexp.MustCompile(`(?i)Kata[ _-](C3|L1|M3s|M4s?|V[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata[ _-]i5-\w`),
		regexp.MustCompile(`(?i)Kata-(T5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata-Tmini4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata Box 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kazam|(?:Trooper_X[0-9][0-9]|Tornado 348|TROOPER 4\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TROOPER 4\.0`),
		regexp.MustCompile(`(?i)Trooper_X([0-9])([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kazam[; _]([^;/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Alumini_?3_?Plus|Alumini ?[23]|KEMPLER_(?:P[13]|TV|[X9]|8_PLUS)|P1[ _]Amateur`),
		regexp.MustCompile(`(?i)Alumini ?2`),
		regexp.MustCompile(`(?i)Alumini_?3_?Plus`),
		regexp.MustCompile(`(?i)KEMPLER_P([13])`),
		regexp.MustCompile(`(?i)P1[ _]Amateur`),
		regexp.MustCompile(`(?i) (O[76]1|E61Pro|O31 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(O[76]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KENEKSI|(?:Hemera|Teta Dual|Helios)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hemera|Teta Dual|Helios)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]liberty`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]FLASH`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]SUN`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]ZETA`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]SIGMA`),
		regexp.MustCompile(`(?i)KENEKSI[ _-](Moon|Libra_Dual|Glass|Amber|Chance|Amulet|Choice|Crystal|Dream|Delta[_ ]Dual|Norma 2|Norma|Sky|Fire 2|Fire|Flame|Flora|Rock|Solo|Soul|Step|Smart|Star|Storm|Wind)`),
		regexp.MustCompile(`(?i)Three[_ ]Proofings[_ ]W([5-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (VIM2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kiano|Elegance_[45]_[015](?:_PRO)?|ELEGANCE 5.0 Lite|Elegance_4.5|Elegance 6|CORE 10.1 DUAL 3G|Intelect ?(7|8|10)|Slim ?Tab ?\d+(?:[_ ]3GR?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slim ?Tab ?(\d+)(?:[_ ]3GR?)?`),
		regexp.MustCompile(`(?i)CORE 10.1 DUAL 3G`),
		regexp.MustCompile(`(?i)Elegance_(5)_([51])_Pro`),
		regexp.MustCompile(`(?i)ELEGANCE 5.0 Lite`),
		regexp.MustCompile(`(?i)Elegance_([45])[_.]([015])`),
		regexp.MustCompile(`(?i)(Kiano)?(Intelect|Elegance) ?(7|8|10)?`),
		regexp.MustCompile(`(?i)Kiano[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kingstar[-_ ]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Kingsun[ _-]`),
		regexp.MustCompile(`(?i)Kingsun[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kingsun[ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(KST103SD)`),
		regexp.MustCompile(`(?i)KIOWA[_ ]|(?:[AS]5|X4)_CRISTAL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X4|[AS]5)_CRISTAL`),
		regexp.MustCompile(`(?i)KIVI [24]K|(?:24H600G[RU]|24FR50WU|24HK30B|32HR55GU|32H700GU|32F700WU|4[39]UP50GU|40UR50G[RU]|40U600G[RU]|50U730GR|55U600(?:G[RU]|KD)|65UP50GU|55U[PC]50G[RU]|50U600G[RU]|50UX10S|55UR50G[RU]|40FK30G|40FR5[02]BR|43U(?:800B[RU]|600KD|K35G)|50FK30G|50UK35G|32HR50GR|32F700GR|55UC30G|55U730GR|32HK30G|40FK30G|32HR50GU|43UK30G|32FR50(?:WR|BU)|32FK3[02]G|32H600KD|40U600KD|32H600GR)(?:_-Ver0[0-9])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(55UC30G|40FK30G|43UK30G|32HR50G[RU]|32HK30G|32FK32G)_-Ver0([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2}(?:[HFU]|U[CPRXKX]|[BHF][RK])\d{2,3}(?:[GW][RU]|B[UR]|KD|[BGS]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KIVI ([24]K Android TV)`),
		regexp.MustCompile(`(?i)KLIPAD_|(?:KL-V905|KL(2108NBE|[46]889|489[08]|9878A?|3669|759[01]|500|601|988)?(?:_EEA)?|7589AN|KL628_HL|KL628KO|KL4898[_ -]A50|V356B?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KLIPAD_)?(V355B?|KL600|KL-V905|V356B?|KL500|KL601)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KL[46]889|7589AN|KL759[01]|KL9878A?|KL628KO|KL3669|KL489[08]|KL988|KL2108NBE)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KL4898[_ -]A50`),
		regexp.MustCompile(`(?i)Kocaso|(?:DX765 Pro|M(?:6200|729|7[357][026][hw]?|76[01236][bw]?|83[016]|8[567]0|1050s|106[012368]w?|1070|X736(?:-kit)?|X780))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DX765 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M6200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M729(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(7[357][026])[hw]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(76[01236])[bw]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX780(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(83[016])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(8[567]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1050S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(106[012368])W?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX736(?:-kit)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kocaso[ _\-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Kocaso[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)KODAK|(?:IM5|KD50|Ektra|Smartway[_ ](?:[FT]1|[LT]2)|D55L|D6[05]LX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KD50|D55L|D6[05]LX)`),
		regexp.MustCompile(`(?i)Ektra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KODAK[_ ])?SMARTWAY[_ ]L1 PRO`),
		regexp.MustCompile(`(?i)(?:KODAK[_ ])?SMARTWAY[_ ]([FLMTX]1|[LMTX]2|T3)`),
		regexp.MustCompile(`(?i)Tablet (7|10)`),
		regexp.MustCompile(`(?i)Kogan|(?:Agora (?:8 Plus|XI|Go|Lite|4G Pro))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kogan ?(SmarterTV(?: 2K)?|TV|TVAP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Agora ([68]) ?Plus`),
		regexp.MustCompile(`(?i)Kogan[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Kogan[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Komu[_ -]`),
		regexp.MustCompile(`(?i)Komu[_ -]([^;/).]+)(?: Build|[;).])`),
		regexp.MustCompile(`(?i)Komu[_ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)KONKA[_ ]([a-z0-9]+)|(?: R[EU]1|KC516(?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)W(9[67]0)`),
		regexp.MustCompile(`(?i)( R[EU]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KONKA[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)KONROW[_ ]|(?:LINK55|KTAB_1003|BIGCOOL|SOFT5|COOLFIVE|COOL-K|Just5|Link5|EASY ?(?:5|62|K55)|EASY_5_EEA|EASY55|CITY55?|Cool55|SKY_?55_EEA|android 11;(?: [\w-]+;)? SWEET5|SWEET 55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BIGCOOL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LINK55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COOL-K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cool55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOFT5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COOLFIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Just5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Link5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY ?(55?|62|K55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY_5_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CITY5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CITY55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY_?55_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET ?(55?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KONROW[_ ](701X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KTAB_1003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Koobee|F2_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F2[_ ]Plus`),
		regexp.MustCompile(`(?i)Koobee[ _\-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Koobee[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(K1 Trio)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kooper-mobile-W502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KORIDY[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(KL1071Z|KL1084)`),
		regexp.MustCompile(`(?i)(?:Kraft[_ -])?KTV-(\w+)`),
		regexp.MustCompile(`(?i)Kruger[ _&]Matz|KrugerMatz[ _]|K&M|EAGLE_(?:961|1068)|FLOW ?5PLUS|FLOW 4 PLUS|Flow 9|FLOW_5|FLOW7|FLOW6(?:S|Lite)?|DRIVE9|DRIVE 8|DRIVE[_ ]6S?|MOVE8mini|MOVE9|MOVE_|LIVE_6plus|LIVE 5 PLUS|Live [89]|LIVE4_KM043[89]|LIVE 7S?|Flow 7S|KM(?:106[679]|1065G|0701(?:_1)?|0702|080[45](?:_1)?|1070)`),
		regexp.MustCompile(`(?i)MOVE[_ ]([78]|6S?)`),
		regexp.MustCompile(`(?i)DRIVE[ _]?([45689][S]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW ?([54]) ?PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW6Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW[ _]?([4-7][S]?|9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE4_(KM043[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KrugerMatz_LIVE4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)_LIVE5_(KM0450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE 5 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE_6plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE ([79])S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Live ([789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOVE9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(106[679])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EAGLE_(961|1068)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(1070)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(1065G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(701)(?:_1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(80[45])(?:_1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(702)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K&M,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)KULIAO (K10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ambition|Beyond)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai[ _\-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Kurio|C15100m`),
		regexp.MustCompile(`(?i)C15100m(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kurio[_ ]?(10S|7S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kurio[_ ]?Phone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kyocera|KWC-|QC-[0-9]{4}|(?:QC6035|NP501KC|302KC|503KC|602KC|705KC|901KC|C51[27]0|C5155|C5215|C67[35]0|C6522N?|C6530N|C6740N?|C6743|E6[89]10|KYL2[13]|KYV3[1-9]|KYT3[123]|KYF3[1235789]|KYF4[012]|KYX31|KYG01|KYY2[1-4]|S2151|KC-S701|S[468]-KC|S9-KC|S10-KC|KYV40U?|KYY31|KYV4[1-8]|KYV4[47]|KC-S301AE|KC-S302|X3-KC|E6560[CT]|E6782[L]?|E6790(?:TM)?|SZJ-JS20[12]|KCP01K|[47]04KC|A[012]01KC|WX10K|URBANO PROGRESSO|E7110|E6921|KY-51B|C6930|A101BM)(?:[-_][uj]2?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A101BM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S([4689]|10)-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5155(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)503KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)404KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)302KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KC-S302(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP501KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WX10K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A101KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYX31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5170(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5215(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C6522N?`),
		regexp.MustCompile(`(?i)C6740(N)?`),
		regexp.MustCompile(`(?i)E6560[CT]`),
		regexp.MustCompile(`(?i)(?:KYOCERA-)?E68[12]0`),
		regexp.MustCompile(`(?i)(?:KYOCERA-)?(?:E69[12]0|E6921)`),
		regexp.MustCompile(`(?i)KYL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYL23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY24(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KYF32|KYF41)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF35(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF3[179](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KYV48|KYF42)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KYF38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV35(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV46(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV32?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV47(?:-[uj])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV43(?:_j)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)705KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV37(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV42(?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV44(?:_u2?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT32(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV40U?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV34(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV(?:45|38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Kyocera-)?E6790(?:TM)?`),
		regexp.MustCompile(`(?i)X3-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6782(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6782L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KCP01K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KC-S301AE|KY-51B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SZJ-JS20[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A001KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A201KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URBANO PROGRESSO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kyocera-KZ-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Kyocera(?:[\-/])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KWC|QC)-?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KA-E410W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ureki_U1|Victor V1|Lamia L01|DART KZ07|REX RX|Eva_E01|Majesty (?:M5|4G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Majesty (M5|4G)`),
		regexp.MustCompile(`(?i)(?:Sapphire 8|Sapphire[76]|Mega plus[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mega plus([23])`),
		regexp.MustCompile(`(?i)Sapphire ?([678])`),
		regexp.MustCompile(`(?i)LAIQ|(?:Monaco)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LAIQ_)?(Glam|New York|Dubai|Monaco)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LCT_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:LEM1[45]|LEM12Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LEM12)Pro`),
		regexp.MustCompile(`(?i)(LEM1[45])`),
		regexp.MustCompile(`(?i)LG|Web0S; Linux/SmartTV|portalmmm/2\.0 (?:KE|KG|KP|L3)|(?:VX[0-9]+|L-0[12]D|L-07C|P713|(LM-[A-Z][0-9]{3}[A-Z]{0,3}(?:\(FGN?\)|\(G\)|\.FN|\.F(?:GN?)?)?)|LM-(X625N1|G820QM[0127])|G Watch|lucye)(?:[);/ ]|$)|NetCast|RS98[78]|RS500|VS(?:50[01]|835|876|880|98[05-8]|99[056]|(410|415|425|500|880)PP)|VS820|VS870 4G|Nexsus 5|LML(41[34]D|211B|713D|212V)L|VK810 4G|VK815|X5-LG|L-05[DE]|L-03K|L-01[LJK]|L-52A|L-[45]1A|901LG|A001LG|80[12]LG|402LG|LGT32|L-02K|L-01F|LM-V40|DM-01K|DM-02H|LMX130IM|VS810PP|VS425|VM670|VS930 4G`),
		regexp.MustCompile(`(?i)DM-(01K|02H)`),
		regexp.MustCompile(`(?i)LG-?(?:D32[0159]|AS323|LS620)`),
		regexp.MustCompile(`(?i)LG-?(D315|L31L|F370)`),
		regexp.MustCompile(`(?i)LG-D4(?:[01]5|[01]0)`),
		regexp.MustCompile(`(?i)LG-D37[35]`),
		regexp.MustCompile(`(?i)LG-D12[05]`),
		regexp.MustCompile(`(?i)LG-?(?:X132|X130g)`),
		regexp.MustCompile(`(?i)LG-?(?:D157f|D150)`),
		regexp.MustCompile(`(?i)LG-D10[057]`),
		regexp.MustCompile(`(?i)LG-X14[057]`),
		regexp.MustCompile(`(?i)LG-X13[57]`),
		regexp.MustCompile(`(?i)LG-D28[05]`),
		regexp.MustCompile(`(?i)LG-?LS675`),
		regexp.MustCompile(`(?i)LG-?LS665`),
		regexp.MustCompile(`(?i)VS980|L-01F|LG-(?:F320[LKS]|D80[012356]|LS980)`),
		regexp.MustCompile(`(?i)LG-D6(?:1[08]|2[05])`),
		regexp.MustCompile(`(?i)LG-(?:D85[012568]|AS990|F400[LKS])|LG-?LS990|(?:LG-)?(?:VS985|LGUS990|LGL24|LGD85[05]|LGV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?LS885`),
		regexp.MustCompile(`(?i)LG-D722`),
		regexp.MustCompile(`(?i)LG-(?:D72[23568]|F470[LKS]|D722J)`),
		regexp.MustCompile(`(?i)LG-D693n?|LG-D690n`),
		regexp.MustCompile(`(?i)LG-?H81[012589]|LG-?[LU]S991|LGV32|LG-F500[LSK]|VS986`),
		regexp.MustCompile(`(?i)LG-H525n?`),
		regexp.MustCompile(`(?i)LG-H22[012]`),
		regexp.MustCompile(`(?i)LG-(?:H540|H542|H630)`),
		regexp.MustCompile(`(?i)LG-H73[46]`),
		regexp.MustCompile(`(?i)LG-H8(?:20|3[01]|5[08]|6[08])|VS987|(?:LG-)?RS988|LG-F700[SKL]|LG-?(?:[LU]S992|AS992)`),
		regexp.MustCompile(`(?i)LG-H84[05]`),
		regexp.MustCompile(`(?i)VS988|LG-H87(?:[01](?:DS|[SI]|AR)?|[23])|LG-?US997|LGM-G600[SKL]|LG-[AL]S993|lucye`),
		regexp.MustCompile(`(?i)LG-?(?:L23|D95[015689]|LS995|D950G|F340[LKS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:H95[059]|F510[KLS]|LS996|AS995)`),
		regexp.MustCompile(`(?i)LG-D68[0-6]`),
		regexp.MustCompile(`(?i)LM-G820([NV]|QM[0127]|UMB)?`),
		regexp.MustCompile(`(?i)LG-F310LR?`),
		regexp.MustCompile(`(?i)901LG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-H410(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:D486|F480[LKS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?T480[KS]`),
		regexp.MustCompile(`(?i)LG-F610[KS]`),
		regexp.MustCompile(`(?i)VS501|LM-X120`),
		regexp.MustCompile(`(?i)LGMS395|LG-D393`),
		regexp.MustCompile(`(?i)LG-(?:F520[LKS]|H788)`),
		regexp.MustCompile(`(?i)(?:LG-)?H50[02]`),
		regexp.MustCompile(`(?i)LGL16(?:3BL|4VL)`),
		regexp.MustCompile(`(?i)LG-(?:X15[05]|X165g)`),
		regexp.MustCompile(`(?i)LG-D33[157]`),
		regexp.MustCompile(`(?i)LG-D29[05]`),
		regexp.MustCompile(`(?i)(?:LG-)?H343`),
		regexp.MustCompile(`(?i)(?:LG-)?H650`),
		regexp.MustCompile(`(?i)(?:LG-)?M154`),
		regexp.MustCompile(`(?i)LGM-K120[LSK]`),
		regexp.MustCompile(`(?i)LG-K120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGM-X320[SKL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-F620[KLS]`),
		regexp.MustCompile(`(?i)LG-?L18VC`),
		regexp.MustCompile(`(?i)(?:LG-)?P500H`),
		regexp.MustCompile(`(?i)(?:LG-?)?VS450PP`),
		regexp.MustCompile(`(?i)LG-(?:E97[567]|F180[KLS]|E987|LS970)|LGL01E`),
		regexp.MustCompile(`(?i)LG-?L39C`),
		regexp.MustCompile(`(?i)LG-(?:F240[KLS]|E98[69]|E98[015])`),
		regexp.MustCompile(`(?i)LG-E435f?`),
		regexp.MustCompile(`(?i)LG-E4(?:70f|40|65f)`),
		regexp.MustCompile(`(?i)LG-E4(?:67f|45)`),
		regexp.MustCompile(`(?i)LG-?(?:D180f|D175f|D170|D165)`),
		regexp.MustCompile(`(?i)LG-E4[56]0`),
		regexp.MustCompile(`(?i)LG-E61[02]`),
		regexp.MustCompile(`(?i)LG-(?:E4[17]5f|E410)`),
		regexp.MustCompile(`(?i)LG-(?:D605)`),
		regexp.MustCompile(`(?i)LG-?(?:P655H|MS659)`),
		regexp.MustCompile(`(?i)LGMS500|LG-D505`),
		regexp.MustCompile(`(?i)(L-05[DE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-L160L|LG-F160`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:P713|P71[0245]|P713TR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-P716(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?MS323`),
		regexp.MustCompile(`(?i)L-01D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-02D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:F800[SKL]?|H990|H910(?:PR)?|US996|V34|LS997)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q710(?:\(FGN\)|[\.]?FGN)`),
		regexp.MustCompile(`(?i)LG-?(?:D22[17]|D213)`),
		regexp.MustCompile(`(?i)LG-?(?:K520|F720[KLS])`),
		regexp.MustCompile(`(?i)LG-(?:K53[05])`),
		regexp.MustCompile(`(?i)LM-Q[67]10\.FG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(Q72[57][KLS]|Q610.FGN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q815[KSL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGM-X800[KL]|LG-H970`),
		regexp.MustCompile(`(?i)LM-Q925[LKS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(?:Q730N|Q620)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q520N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGV33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-03K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-01L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGLS775|LGL8(?:2V|1A)L`),
		regexp.MustCompile(`(?i)VS835(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:MS550|K55[07])`),
		regexp.MustCompile(`(?i)L-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:MS63[14]|H63[145]|F560K|LS770)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:LS777|L84VL|M430|L83BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?([TM]P450|M470F?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q710|LML713DL|LG-Q710[AP]L`),
		regexp.MustCompile(`(?i)(?:LM-Q720|LGL722DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-G710(N|VM)?|LG-G710`),
		regexp.MustCompile(`(?i)LG-H44[35]`),
		regexp.MustCompile(`(?i)LM-X410\.FG?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGL455DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LML41[34]DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?L6(?:2V|1A)L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?L5(?:2V|1A)L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?L355DL`),
		regexp.MustCompile(`(?i)LM-X210[KLS]`),
		regexp.MustCompile(`(?i)LG-(?:K580|F690[LS])`),
		regexp.MustCompile(`(?i)LG-?K600`),
		regexp.MustCompile(`(?i)LG-(?:SP320|M32[27]|US601)`),
		regexp.MustCompile(`(?i)LG-?(?:LS676|L56VL|L53BL|K200)`),
		regexp.MustCompile(`(?i)LG-?(?:K500|F650|S02)`),
		regexp.MustCompile(`(?i)LG-(?:M710|H700|US701)`),
		regexp.MustCompile(`(?i)LM-X(?:41[05]K|410S)`),
		regexp.MustCompile(`(?i)LM-X(415[LS]|410L)`),
		regexp.MustCompile(`(?i)LM-X410(?:\.FN|\(FG\))`),
		regexp.MustCompile(`(?i)LM-X(?:320|410[UP]M)|LGL322DL`),
		regexp.MustCompile(`(?i)LG-?LS740`),
		regexp.MustCompile(`(?i)LG-?LS751`),
		regexp.MustCompile(`(?i)(?:VS425|LG-?(?:K120GT|K121|M151|X230))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-K130(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:M160|L57BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-X430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:802LG|LM-X520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LM-X510[KLS]|X5-LG)`),
		regexp.MustCompile(`(?i)LGMS210|LG-M210`),
		regexp.MustCompile(`(?i)LM-X210[G]?`),
		regexp.MustCompile(`(?i)LM-X220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-X220N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-V40(?:5|9N|5EBW)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(?:V500N?|V450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:RS987|H90[01]|H96[0218]|VS990|F600[LKS]|K428)`),
		regexp.MustCompile(`(?i)LG-(?:X240|M200)`),
		regexp.MustCompile(`(?i)(?:LG-)?RS500`),
		regexp.MustCompile(`(?i)(?:LG-)?VS500`),
		regexp.MustCompile(`(?i)LM-X212\(G\)|LGUS215`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:VS995|F800K|US999|LS997|H91[058]|H990(?:DS|[NT])?)`),
		regexp.MustCompile(`(?i)(?:VS996|LG-(?:H933|H93[012]|H930RE|H932PR|[LU]S998|AS998)|LGM-V300[KLS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L-01K|LGV35|LG-H930DS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L-52A|LM-G900(?:[NV]|TM)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-V700N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A001LG|LM-V600V?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?VS410PP`),
		regexp.MustCompile(`(?i)LM-V350[N]?`),
		regexp.MustCompile(`(?i)(?:LG-)?VS415PP`),
		regexp.MustCompile(`(?i)(?:LG-)?VS425PP`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K100|LS450)`),
		regexp.MustCompile(`(?i)LG-AS110|LGUS110`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K|MS)33[02]|LG-X210`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K|MS)350`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K420(?:N)?|K425|F670[KLS]?|K430(?:DS|DSF|DSY)?|K410|MS428)`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:M250N?|M257PR)`),
		regexp.MustCompile(`(?i)(?:LG-)?M255`),
		regexp.MustCompile(`(?i)(?:LG-?)?[MT]P260`),
		regexp.MustCompile(`(?i)LM-K200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K330(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K420(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LM-K500|LGL555DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K526(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q510N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) LM-Q310N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q630N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?M700(?:N|A|DSK|AN)?|LGM-X600[SLK]|LG-M703|LG-US700`),
		regexp.MustCompile(`(?i)LGV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-M257(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K220|LS755|F750K|US610)`),
		regexp.MustCompile(`(?i)(?:LG-?)?M320`),
		regexp.MustCompile(`(?i)(?:LG-)?K371`),
		regexp.MustCompile(`(?i)(?:LG-)?M150`),
		regexp.MustCompile(`(?i)(?:LG-)?F100[SL]`),
		regexp.MustCompile(`(?i)(?:LG-)?F200(?:[KLS]|LS)`),
		regexp.MustCompile(`(?i)(?:LG-)?VM670`),
		regexp.MustCompile(`(?i)(?:LG-)?P880`),
		regexp.MustCompile(`(?i)(?:LG-)?(H340n?|H32[04])`),
		regexp.MustCompile(`(?i)(?:LG-)?H34[25]|LGMS345`),
		regexp.MustCompile(`(?i)(?:LG-)?H4(?:40|2[02])`),
		regexp.MustCompile(`(?i)(?:LG)?C660`),
		regexp.MustCompile(`(?i)LML21(?:1B|2V)L`),
		regexp.MustCompile(`(?i)LG-?L4(?:4V|3A)L`),
		regexp.MustCompile(`(?i)VS880(PP)?|LG-(?:D690|D631)`),
		regexp.MustCompile(`(?i)LG-?(?:D838|F350[LKS])`),
		regexp.MustCompile(`(?i)LG-F300[LKS]`),
		regexp.MustCompile(`(?i)LG-D38[05]`),
		regexp.MustCompile(`(?i)LG-?(?:L16C|L15G)`),
		regexp.MustCompile(`(?i)LM-F100N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-T60[05]`),
		regexp.MustCompile(`(?i)LG-?(?:(?:UK|V)410|V411|V400Y7)`),
		regexp.MustCompile(`(?i)LG-?(?:LK430|V400)`),
		regexp.MustCompile(`(?i)LG-V49[56]`),
		regexp.MustCompile(`(?i)LG-V4[89]0`),
		regexp.MustCompile(`(?i)LGT01|LG-P490L`),
		regexp.MustCompile(`(?i)LG-V50(?:0|7L)`),
		regexp.MustCompile(`(?i)LGT02|LG-?V522`),
		regexp.MustCompile(`(?i)LG-V525(?:S[13])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?[VP]755`),
		regexp.MustCompile(`(?i)LG-V52[01]`),
		regexp.MustCompile(`(?i)LG-?UK750`),
		regexp.MustCompile(`(?i)\(LGE?, WEBOS[123], (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV.+\( ?;LGE? ?;(\d{2}\w+) ?;`),
		regexp.MustCompile(`(?i)\(LGE?, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)webOS.TV`),
		regexp.MustCompile(`(?i)LGE_DLNA_SDK|NetCast`),
		regexp.MustCompile(`(?i)G Watch( R)?`),
		regexp.MustCompile(`(?i)(LM-[A-Z]{1}[0-9]{3}([A-Z]{1,3})?)`),
		regexp.MustCompile(`(?i)LGE(?: |-LG| LG-AX|-)([a-z0-9]+)`),
		regexp.MustCompile(`(?i)FBDV/LG-([a-z0-9]+);FBSV`),
		regexp.MustCompile(`(?i)LGE;([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)LG[ _\-](V90.*|Optimus[ _\-]Pad.*) Build`),
		regexp.MustCompile(`(?i)LGM-([^/;]*)( Build|[;)])`),
		regexp.MustCompile(`(?i)LG(?:/|-LG| |-)?([^/;]*) Build`),
		regexp.MustCompile(`(?i)LG(?:/|-LG| |-)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)LG; ([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 ((?:KE|KG|KP|L3)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(VX[0-9]+)`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV`),
		regexp.MustCompile(`(?i)(H11)-EEA(?:[);/]|$)`),
		regexp.MustCompile(`(?i)(APPLLP Max|APPLLP2?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[ _-](?:P[89]|P10I|NOTE 10[SM]|NOTE 30|C1[45]00|C3[1235]00|S10[ _]Lite|S10|S9_NOTE|M[56]|M5_lite)|(?:C3[67]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[- ]NOTE ([13]0[SM]?)`),
		regexp.MustCompile(`(?i)LT[ _-]C3100`),
		regexp.MustCompile(`(?i)LT[ _-]C3200`),
		regexp.MustCompile(`(?i)LT[ _-]C1400`),
		regexp.MustCompile(`(?i)LT[ _-]C3500`),
		regexp.MustCompile(`(?i)(?:LT[ _-])?C3600`),
		regexp.MustCompile(`(?i)(?:LT[ _-])?C3700`),
		regexp.MustCompile(`(?i)LT[ _-](C3300|C1500)`),
		regexp.MustCompile(`(?i)LT[ _]S10[ _]Lite`),
		regexp.MustCompile(`(?i)LT[ _]S10`),
		regexp.MustCompile(`(?i)LT[ _]P10I`),
		regexp.MustCompile(`(?i)LT[ _]P([89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[ _]M([56])[_ ]lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[ _]M([56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LYF[ _])?LS-[456][0-9]{3}|LYF/[^/]+/`),
		regexp.MustCompile(`(?i)(LYF[ _])?LS-4006`),
		regexp.MustCompile(`(?i)LS-450[58]`),
		regexp.MustCompile(`(?i)LYF/([^/]+)/`),
		regexp.MustCompile(`(?i)Land[ ]?Rover[d]?[ _-](?:X1[0-9]|Explore|T878|L15\+|V18|V[168]|X)(?:[);/ ]|$)|Polar3|Vphone[- ]X3|ST11-A5`),
		regexp.MustCompile(`(?i)Land[ ]?Rover[d]?[ _-](X1[0-9]|Explore(?: R)?|T878|L15\+|V18|V[168]|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vphone[- ]X3`),
		regexp.MustCompile(`(?i)(ST11-A5)`),
		regexp.MustCompile(`(?i)XM[123]00|S6 Build`),
		regexp.MustCompile(`(?i)XM([123])00([^/;)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)lanin (T4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LANIX-([a-z0-9]+)|Ilium[ _]|LANIX_PAD|IliumPad|X120C|(?:Alpha 950(?:XL)?|Alpha [135]V|X540)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILIUM[ _]?PAD[ _]?([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Ilium[ _](Alpha [15]s|Alpha [379]|Alpha 1T|L(?:200|6[12]0|9[0125]0|1[0124]00|1050|1120)|LT5[012]0|M[579]s|M7T|M[13579]|S(?:106|520|6[27]0)|X(?:1[12]0|2[0126]0|400|5[12]0|500B|710))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILIUM[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Alpha (9500|950(?:XL)?)`),
		regexp.MustCompile(`(?i)Alpha ([135])V`),
		regexp.MustCompile(`(?i)(X540)`),
		regexp.MustCompile(`(?i)LANIX-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Lark|Cumulus|Evolution|FreeMe|Ultimate (?:X4|7i))[ _-]|Build/Lark|Bjorn[_ ]SP-500|FreeBird 5WiFi|Impress_Noda`),
		regexp.MustCompile(`(?i)Cumulus[ _](5\.5|[56])[ _]HD`),
		regexp.MustCompile(`(?i)FreeMe X2 ([79]) (?:ver|v)?\.([23])`),
		regexp.MustCompile(`(?i)FreeMe[ _]X2[ _]([7-9])`),
		regexp.MustCompile(`(?i)FreeMe X4[ _]7[_ ]?HD`),
		regexp.MustCompile(`(?i)FreeMe X4[ _]9`),
		regexp.MustCompile(`(?i)(?:Lark[ _-])?Evolution[ _](X2 7 3G-GPS|X4[_ ]10\.1|10|X4[_ ]7[ _]IPS)`),
		regexp.MustCompile(`(?i)Ul(?:ti|it)mate (X4 10\.1 3G IPS|X4 8s 3G|7i)`),
		regexp.MustCompile(`(?i)Phablet 6\.0`),
		regexp.MustCompile(`(?i)Bjorn[_ ]SP-500`),
		regexp.MustCompile(`(?i)Cirrus[ _](4\.5|[45])`),
		regexp.MustCompile(`(?i)Lark[ _](Stratus[_ ]5)`),
		regexp.MustCompile(`(?i)Lava[ _]|LAVA(?:A1|X10)|(?:DISCOVER136|KKT QUADRA)|iris[ _]?([^/;)]+)(?: Build|[;)])|A(?:67|76) Build|X1 Selfie Build|X41 Plus Build|X1_atom_L|(?:Flair (?:[ZS]1|P8)|PixelV1|Pixel V2\+?|Z60s|Z61_2GB|A97 IPS|A97 2GB PLUS|L[EH]9920(?:[_ ]P)?|L[NEH]9910|LH9810|Ivory(?:S1|S4G)?|A76Plus|Grand2c|AH9910| A3_mini|T71_w|V23GB|R1_Lite|Atom 2X|AF9030|Z50_Pro| Z(?:[56]1|92)|Android 6(?:[\d.]*);(?: [\w-]+;)? (:?X28|P7plus)|AF9020|Alfa L|T81N(?:_UP)?|LN982[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZX409(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Flair ([ZS]1|P8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AF9030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AF9020(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AH9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LXX501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z61P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A97 IPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF6810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A97 2GB PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A76Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) A3_mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixel V2\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixel ?V([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1_atom_L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1 Selfie(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X41 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LAVA[_ ]?)?A([13]|67|76)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVA_R(1s?)`),
		regexp.MustCompile(`(?i) Z(\d{2})(?:_2GB)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z50_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMX06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMG01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG403[ _]225(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z60s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V23GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9920[ _]P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9940(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF9810(?:_2GB)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF9820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9830(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH993[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9950(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9821(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Atom 2X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfa L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X\d+)[ _]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (X28)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris88[_ ]go`),
		regexp.MustCompile(`(?i)KKT40[ ]?Power[P\+]`),
		regexp.MustCompile(`(?i)Ivory(S1|S4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T81N_UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T81N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T71_w(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris[ _]?([^/;)]+)[_ ]lite(?: Build|[);])`),
		regexp.MustCompile(`(?i)iris[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lava[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)LAVA[ _]([^/;)]+)/MIDP`),
		regexp.MustCompile(`(?i)Le ?Pan|TC970 ([^;/]+)Build`),
		regexp.MustCompile(`(?i)TC970 ([^;/]+)Build`),
		regexp.MustCompile(`(?i)Le ?Pan ?(II|S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le ?Pan ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)LeBest[_ ](L9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Letv|LeEco|Le ?X[0-9][^;/]+|Le Max|Le [12]|Le2[_ ]x527|X900 Build|(?:X[89]00\+|X52[67]|lineage_c106)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X800\+`),
		regexp.MustCompile(`(?i)X900\+`),
		regexp.MustCompile(`(?i)X50[10]`),
		regexp.MustCompile(`(?i)LE ?(X62[26]|X522)`),
		regexp.MustCompile(`(?i)(X910)`),
		regexp.MustCompile(`(?i)LEX72[057](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEX65[0137](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE(X620)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Le ?X526|Le2[_ ]x527|Le 2|X52[67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEX82[019]|Le Max 2`),
		regexp.MustCompile(`(?i)Le ?X([^;/]+) Build`),
		regexp.MustCompile(`(?i)Le ?X([^) ;/]+)`),
		regexp.MustCompile(`(?i)Le ?([12][^;/]+) Build`),
		regexp.MustCompile(`(?i)Le Max([^;/]*) Build`),
		regexp.MustCompile(`(?i)Le Max([^ ;/]*)`),
		regexp.MustCompile(`(?i)LeEco ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(Vyper|N-5[07]|N-45|LP DAISY|LP_(?:Spectrum_S2|VEYRON|PRADO|Pro1|B-50|EVORA_light)|LP_T70|LP[ _]INFINITY\+?|LP T70 Lite|INFINITY_light|Alphatel_T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LP INFINITY\+`),
		regexp.MustCompile(`(?i)(?:LP_)?(Vyper|N-5[07]|N-45|Pro1|Alphatel_T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MY)?LEAGOO[ _-]?|(?:XRover(?: C)?|Shark (5000|1|6300)|M5 EDGE|KIICAA (POWER|MIX)|Leapad[ _](?:X|7s|7Pro)|Alfa [125]|Elite [15Y]|Venture 1|Z10-E|M9 Pro|Power 5|Power[ _]2(?: Pro)?|Android 9;(?: [\w-]+;)? M1[23]|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:Z9A|T8s)|Lead 3| T5c)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[- _])?M([89])[_-]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEAGOO[- _](Z[156]|Z5c|M[58]|T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[_ ])?Lead ?([357])`),
		regexp.MustCompile(`(?i)Elite ([15Y])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Shark (1|5000|6300)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power 2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:leagoo-)?Power[ _]([25])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venture 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfa ([125])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XRover( C)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[- _])?(Z10-E|M6|M1[23]|T5c|T8s|Z9A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:My)?Leagoo[- _](E4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO_)?Leapad[ _](7s|10|X|7I)`),
		regexp.MustCompile(`(?i)LECT-TAB(1011|0711)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ledstar[_ ])?(?:Trendy 5.0|Novus_Premium_6.0)`),
		regexp.MustCompile(`(?i)Trendy 5.0`),
		regexp.MustCompile(`(?i)Ledstar_Novus_Premium_6.0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Leelbox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Leelbox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(32H540S|32H5[235]0T|5[05]U540S|55U630S|40F540S|43F5[35]0T|32H511T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RST)_(B\d{4}HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Leke[ _]Pad-([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lemhoov[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Lenco (?:[^/);]*)(?: Build|[);])|(?:TDV900)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenco ([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:LNV-)?Lenovo|IdeaTab|IdeaPad|Thinkpad|Yoga Tablet|Tab2A[0-9]-[0-9]{2}[a-z]?|ZUK[ -_]|(?:TB2-X30L|TB3-710I|TB328FU|TB128FU|YT3-X50[MFL]|K50a40|TB-(?:X103F|8504F|X304F|X704V|X704A)|A5500-H|A2107A-H|A3500-HV|A2109A|S6000|Z2 Plus|Vibe[ _](?:P1|S6i Plus|S[23567]i|C|[ZX]2|K5(?: Plus)?|V7)|P2A42|L38011|L18011|[5-8]01LV|[67]02LV|Z2131|K350t|K31-t3|TAB 2 A8-50LC|S90-A|A101LV|P70-A|VR-1541F|d-42A|lineage_A6020|EveryPad2|A2010l36|F0CU0028RK|TB132FU|TB328XU|TB138FC|PB-6505Y|TB-X505[FL]|TB-8704V|TB3[05]0[FX]U|TB-X605[FL]|L38043|TB3-X70L|TB-X605[LF]C|A7600-HV?|YT-X703F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ?G780`),
		regexp.MustCompile(`(?i)Lenovo ?A3500-FL`),
		regexp.MustCompile(`(?i)(?:Lenovo ?)?A3500-(?:H|HV|F)`),
		regexp.MustCompile(`(?i)(?:Lenovo[ _])?A5500-[HF]`),
		regexp.MustCompile(`(?i)Lenovo ?A7600|A7600-H`),
		regexp.MustCompile(`(?i)TB2-X30[FL]`),
		regexp.MustCompile(`(?i)TB-X6C6[XF]`),
		regexp.MustCompile(`(?i)YT3-X50[FLM]`),
		regexp.MustCompile(`(?i)YT-J706[XF]`),
		regexp.MustCompile(`(?i)TB3-710[IF]`),
		regexp.MustCompile(`(?i)TB-8703[XF]`),
		regexp.MustCompile(`(?i)501LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB 2 A10-70L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TB3-850[FM]|601LV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X304[FL]`),
		regexp.MustCompile(`(?i)TB-8504[XL]`),
		regexp.MustCompile(`(?i)(?:TB-X704[FVL]|70[12]LV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)801LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X103F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X704A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X605F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X705[FL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J606[LF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-Q706[FZ](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J606[FN]`),
		regexp.MustCompile(`(?i)TB-J607F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J6C6F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J616[XF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J706[LF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB132FU(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB350[FX]U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J607Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7104[IF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-8304F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7504X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X606[FXV]A?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X605[FL]C`),
		regexp.MustCompile(`(?i)(?:Lenovo )?TB12[58][FX]U`),
		regexp.MustCompile(`(?i)(?:Lenovo )?TB328[FX]U`),
		regexp.MustCompile(`(?i)(?:Lenovo )?TB-X505`),
		regexp.MustCompile(`(?i)TB-7305[IXF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7306[XF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ?B8000(-[FH])?`),
		regexp.MustCompile(`(?i)Lenovo ?B8080(-[FH])?`),
		regexp.MustCompile(`(?i)YOGA Tablet 2 Pro-1380[FL]`),
		regexp.MustCompile(`(?i)YOGA Tablet 2-1050[FL]`),
		regexp.MustCompile(`(?i)YOGA Tablet 2-830(?:[FL]|LC)`),
		regexp.MustCompile(`(?i)Lenovo ?B6000(-[FH])?`),
		regexp.MustCompile(`(?i)YT3-X90(L|F|X)`),
		regexp.MustCompile(`(?i)YT3-850[FL]`),
		regexp.MustCompile(`(?i)YT-X703[FL]`),
		regexp.MustCompile(`(?i)YT-X705[FL]`),
		regexp.MustCompile(`(?i)YB1-X90[FL]`),
		regexp.MustCompile(`(?i)S6000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ([ASB][0-9]{4})[A-Z]?\-[EHF]`),
		regexp.MustCompile(`(?i)ThinkPadTablet_(A[0-9]{3})_`),
		regexp.MustCompile(`(?i)ThinkPad ?Tablet([^;/]*) Build`),
		regexp.MustCompile(`(?i)Lenovo ?A3300-(?:GV|H)`),
		regexp.MustCompile(`(?i)TAB 2 A7-30[HGD]C`),
		regexp.MustCompile(`(?i)TB-8704[FV]`),
		regexp.MustCompile(`(?i)TB-X505[FX]`),
		regexp.MustCompile(`(?i)TB-X104[FXL]`),
		regexp.MustCompile(`(?i)Tab2A([0-9]-[0-9]{2}[a-z]?)`),
		regexp.MustCompile(`(?i)IdeaTab[ \-_]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Yoga Tablet([^;/]+) Build`),
		regexp.MustCompile(`(?i)TB-8505[FX]S`),
		regexp.MustCompile(`(?i)TB-8505[FX]`),
		regexp.MustCompile(`(?i)TB-8506[FX]`),
		regexp.MustCompile(`(?i)TB300[FX]U`),
		regexp.MustCompile(`(?i)TB-8705[FX]`),
		regexp.MustCompile(`(?i)TB-9707F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo (TB[0-9]?\-[a-z0-9\-]+) Build`),
		regexp.MustCompile(`(?i)Lenovo S60-?a`),
		regexp.MustCompile(`(?i)Lenovo K30-W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L19111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L10041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78121(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z213[12]`),
		regexp.MustCompile(`(?i)ZUK[ -_]([^/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)K10a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:k50a40|K50-t5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K(1[30]) Note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7010(?:a48)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K350t(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L38041|K5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L39051(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A7020a4[08]|L38012|K52e78)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L19041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K31-t3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A6010Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A6020a46|Vibe K5 Plus|lineage_A6020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Lenovo-)?(?:A6020(?:a40|l36)|Vibe K5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIBE C|A2020a40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIBE X2|X2-(?:X+CU|TO|AP))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X3(?:a40|c[57]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo X3 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE V7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE S6i Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE[ _]S([23567])i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L79031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L70081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)k33a48(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38043(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L3808[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P2A42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)k53a48(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K33a42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P1ma40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vibe P1 Turbo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:P1(?:a42|c72)|Vibe P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2016a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1010a20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z90a40|Z90-7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S1a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S1La40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z6 Pro|L78051)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L58041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L58091(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB2-6(?:70M|50[YM])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB1-750M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB1-770M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S90-A|P70-A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IdeaPad ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)d-42A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo X2(?:-[ER]U)?`),
		regexp.MustCompile(`(?i)LENOVO/81W8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LENOVO/81MV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LENOVO/81SS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F0CU0028RK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo TAB ?([^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Lenovo ([^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:LNV-|Lenovo-)?Lenovo[ \-_]?([a-z0-9_+\-]+)`),
		regexp.MustCompile(`(?i)(LESPH501[14]|LESPH5003B|SUPERNOVA[ _](?:Qi16|i216|Qi32|i3G96[X]?|iS3G)|PULSAR QI3G|LETAB916|Titanium T355)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPERNOVA[ _](i216|Qi16|Qi32|i3G96[X]?|iS3G)`),
		regexp.MustCompile(`(?i)PULSAR (QI3G)`),
		regexp.MustCompile(`(?i)lephone[ _]|lephoneP1|S104G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)lephone[ _](K7|K10)`),
		regexp.MustCompile(`(?i)lephone_W7_plus|lephone W7+`),
		regexp.MustCompile(`(?i)lephone(?:[ _])?([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)ANOVA A5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lexand[ _]|(?:S[BC]7 PRO HD|S5A[1-4]|S4A[1-5]|S6A1|A811|A802|LPH7_Smarty)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A(811|802)`),
		regexp.MustCompile(`(?i)(S[CB]7) PRO HD`),
		regexp.MustCompile(`(?i)Lexand[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(MFC[0-9]{3}[a-z]{2,})`),
		regexp.MustCompile(`(?i)MFC17[05]FR`),
		regexp.MustCompile(`(?i)(MFC[0-9]{3}[a-z]{2,})`),
		regexp.MustCompile(`(?i)((?:24|32)TP1HDTA1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIFEMAXX, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Lingwin[ _\-]`),
		regexp.MustCompile(`(?i)Lingwin[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Lingwin[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)LI(22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LINSAY[_ ]|(?:F10XIPSQ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F10XIPSQ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LINSAY[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Webpad[_ ]?(100[123]|7007)`),
		regexp.MustCompile(`(?i)(?:LOGIC[_ ](X4 Plus|X50|X[135]|X4M|L4T|L5D|X5[AFT]|X60G|L50T?|L57|L6[0135]|X60_PLUS)(:?[_ ]LITE2?)?|L55[ABS]|Q-502)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ]X60_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](L65|X5|X4M)[_ ]LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](L65)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](X5)[_ ]LITE2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](X4 Plus|X50|X[13]|X4M|L4T|L5D|L6[013]|X5[AFT]|X60G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(L50T?|L55[ABS]|L57|Q-502)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Logic Instrument|Fieldbook K101`),
		regexp.MustCompile(`(?i)Fieldbook F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGICOM[_ ]|(TAB950|TAB1062|E731|E812|E912|E1031|POWER BOT|La[ _]?Tab[ _]?(?:7[24]|10[57]|11[345]|12[4789]|292|Stand(?:RB)?)|(?:[BCM]|ID|VR)[ _]?BOT[ _]?(?:TAB[ _])?([0-9]+\+?)(?:PLUS)?|KT712A_4\.4|L-?IXIR[0-9]*|L_IXIR_TAB_1047HD|L-ITE|L-EGANTONE(?:-R)?|Le Fizz|L-?EMENT.+|Le[ _]?(?:Up|Connect|Omega|Hop|Hello|Lift|Pulse|Prime|Swipe|Wave|Hola|Moov[2]?|Must(?: 2)?|Starter L|Fit FR|Spark|Prime|Smooth(?: FR)?)|LeFit|logikids4)(?:[);/ ]|$|_)`),
		regexp.MustCompile(`(?i)La[ _]?Tab[ _]?(7[24]|10[57]|11[345]|127 HD|12[89]|105_P|292|Stand)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LaTabStandRB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)La[_ ]Tab[_ ]124[_ ]HD[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT712A_4.4|L-IXIR TAB 701 3G`),
		regexp.MustCompile(`(?i)L-?IXIR[ _]TAB[ _]([^);/]+)( Build|[);])`),
		regexp.MustCompile(`(?i)L-ITE[ _](400M|452|50[46] HD|506R HD|552 HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-ITE[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)L-?EMENT[ _]?(350|451|40[103]|55[013]|50[15]|500L?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-?EMENT[ _](?:TAB)[ )]?([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)L-?EMENT[ _]?(74[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB950|TAB1062|E731|E812|E912|E1031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M bot (5[14])`),
		regexp.MustCompile(`(?i)VR bot (552) Plus`),
		regexp.MustCompile(`(?i)VR bot (552)`),
		regexp.MustCompile(`(?i)((?:[BCM]|ID|VR))[ _]?BOT[ _]?TAB[ _]([0-9]+(?:PLUS|\+)?)`),
		regexp.MustCompile(`(?i)((?:[BCM]|ID|VR))[ _]?BOT[ _]?((?:TAB[ _])?([0-9]+\+?)(?:PLUS)?)`),
		regexp.MustCompile(`(?i)Le[ _]Connect`),
		regexp.MustCompile(`(?i)Le[ _]Pulse`),
		regexp.MustCompile(`(?i)Le[ _]Prime`),
		regexp.MustCompile(`(?i)Le Hola FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Hola(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LeMoov2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LeMoov(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Fit FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]?Fit`),
		regexp.MustCompile(`(?i)Le Hop(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Hello(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Smooth FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Smooth(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Must 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Must(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Starter L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Spark(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Up(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lovme[-_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lumigon[ _](T3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(L950[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEO(SR620|SC600)|INNOSR545|Lumus[_ ]Ion|AEONSR570)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO(SR620|SC600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INNO(SR545)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lumus[_ ]Ion(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AEON(SR570)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LUNA[ _](?:[VG]55|G[56]0|G9|G6E)|TG-L800S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUNA[ _]([VG]55|G[56]0|G9|G6E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TG-L800S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUXOR, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)M-HORSE|(?:Pure (?:3|2A?)|Pure ?1|Power1|Top_(?:S[78]|P9|H740|10|i7|Note8)|Top-V30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure ?([13]|2A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Top[_ -](S[78]|P9|H740|10|i7|V30)`),
		regexp.MustCompile(`(?i)(?:Eros[_ ](4G|Star|Smart|Plus|Power)|MTECH (?:ACE9|TURBO L\d+|TEZ 4G|JAZBAA)|Foto3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eros[_ ]Star`),
		regexp.MustCompile(`(?i)Eros[_ ]Smart`),
		regexp.MustCompile(`(?i)Eros[_ ]Plus`),
		regexp.MustCompile(`(?i)Eros[_ ]Power`),
		regexp.MustCompile(`(?i)TURBO L(\d+)`),
		regexp.MustCompile(`(?i)M\.T\.T\.|MTT IDEAL`),
		regexp.MustCompile(`(?i)M\.T\.T\. ?Tablet([^;/)]+)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)M\.T\.T\. ?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)M3US20W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M4[ -]SS[0-9]{4}(?:-R)?|M4_B[23]|M4_R2|R2_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SS4458-R|M4-SS4458-R`),
		regexp.MustCompile(`(?i)M4_B([23])`),
		regexp.MustCompile(`(?i)M4_R(2)`),
		regexp.MustCompile(`(?i)MAXVI[ _](?:MS401)(?:[);/ ]|$)|\w*_?MAXVI?_\w+|MS502[_ ]Orion|MS531`),
		regexp.MustCompile(`(?i)MAXVI[ _](MS401)`),
		regexp.MustCompile(`(?i)MS502[_ ]Orion`),
		regexp.MustCompile(`(?i)\w*MAXVI_(P11|K10|X[358]00)_`),
		regexp.MustCompile(`(?i)(T1270G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MBI[_ ](R7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MBOX3?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Prime_S|M300 4G|MDC M5|Nova Pro|Grand Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime_S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M300) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MDC M5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MDTV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MEEG[ _-]`),
		regexp.MustCompile(`(?i)MEEG[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)MEEG[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)MEU ([a-z0-9]+) Build`),
		regexp.MustCompile(`(?i)(Caryota [1245789]|Jazz J[13] 2018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Caryota [1245789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jazz (J[13]) 2018`),
		regexp.MustCompile(`(?i)MIWANG[_ ](M2s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M35|M20|G7106|G7108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M[0-9]{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G[0-9]{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLAB[ _-]`),
		regexp.MustCompile(`(?i)MLAB[ _-]GLOWY([78]|10)`),
		regexp.MustCompile(`(?i)MLLED[ _]`),
		regexp.MustCompile(`(?i)MLLED[ _]([^;/]+)Build`),
		regexp.MustCompile(`(?i)MLLED[ _]([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)IQ(?:0705|L550|1017|1010w?|1012N?|1019N|1025|1060M|1380|1401|1436|1452a|1453|1470|1502a|1511|155[23]|1568|1570|1805N|180[68]|1810B_M|1832|1850|1890|5017|L626|9610|181011N|A27X_E|E[12]00|EL41|G550|GW516|L30|L5[01]|M801|M1001|N700|P50|R300|S300|S801|S1001|W503|W511T|W553N?|W60[38]|W626|M960|D10S|D700|9013_4N|F 200|T800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ0705(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQD10S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1010W?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1012N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ9013_4N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1019N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1805N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ181011N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1380(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1436(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1452a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1453(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1470(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1502a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1552(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1553(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1568(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1806(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1808(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1810B_M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1832(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1850(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1890(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ5017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ9610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQM960(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQS801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQG550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQGW516(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQE100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQE200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQA27X_E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQEL41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQN700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQP50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQS300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQS1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1060M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQR300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW608(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQW603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW626(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW511T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW553N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQL626?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQD700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQT800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQF ?200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MMI, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(TAB-S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo ?(?:9[13]|81|76)|Enjoy 7 Plus`),
		regexp.MustCompile(`(?i)Primo ?(9[13]|76|81)`),
		regexp.MustCompile(`(?i)MTC[ _](968|97[82]|970|982[OT]?|1078)|(?:MTC[_ ])?SMART[ _]?(?:Race[2]?|Sprint|Run|Turbo|Surf[2]?)[ _]4G|MTC975|Smart Bit|Smart_(?:LINE|Light)|(?:MTC[ _])?SMART[ _](?:Run|Start[_ ][23])|Redbox Mini 5\(MTS\)|MTS TV|DV8235|DV8304-C|Osmartphona`),
		regexp.MustCompile(`(?i)MTC[ _]?(97[258]|970[H]?|982[OT]?|968)`),
		regexp.MustCompile(`(?i)MTC[ _](1078)`),
		regexp.MustCompile(`(?i)SMART[ _]Race[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Race2[ _]4G`),
		regexp.MustCompile(`(?i)(?:MTC_)?SMART[ _]Sprint[ _]4G`),
		regexp.MustCompile(`(?i)(?:MTC_)?SMART[ _]Start[ _]([23])`),
		regexp.MustCompile(`(?i)SMART[ _]?Run(?:[ _]4G)?`),
		regexp.MustCompile(`(?i)SMART[ _]Surf2[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Surf[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Turbo[ _]4G`),
		regexp.MustCompile(`(?i)Redbox Mini 5\(MTS\)`),
		regexp.MustCompile(`(?i)MTS TV Box (\d{3})`),
		regexp.MustCompile(`(?i)(DV8235)`),
		regexp.MustCompile(`(?i)MTN-|(?:Kafit V900|Faith29|Ka ?Chocolate)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Faith29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ka ?Chocolate(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MTN-(L860|S620)`),
		regexp.MustCompile(`(?i)MTN-([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)(MC-X7MINI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mafe_(?:M8[12]0|M825)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mafe_(M810|M825)`),
		regexp.MustCompile(`(?i)(?:N5NOVA|IRON\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IRON\+`),
		regexp.MustCompile(`(?i)(?:Magnus[ _](?:bravoZ[23]0|Infinity_?(?:G8|G11))|bravo Z40|bravo[-_]Z[12]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)bravo[ _-]?(Z[234]0|Z[12]2)`),
		regexp.MustCompile(`(?i)(?:Magnus[ _])?Infinity_?(G8|G11)`),
		regexp.MustCompile(`(?i)MAJESTIC[ _-]|CRONO ?[0-9]+|(?:TAB (?:647|411) 3G|TAB_(?:81[12]|912)_4G|TAB_911_3G|TAB-714|TAB_814|TAB (711 4G|747 3G|[56]11 3G)|URANO27|URANO 47|URANO 77LTE|PLUTO__?26N?|JACK| JOE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JACK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) JOE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URANO 77LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URANO ?([24]7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLUTO__?(26N?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB[ _](\d{3})[ _]([34])G`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]Tab([^;/]+)Build`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]Tab([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]([^;/]+)Build`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]([^);/]+)(?:(?:[);/ ]|$)|$)`),
		regexp.MustCompile(`(?i)CRONO ?([0-9]+) Build`),
		regexp.MustCompile(`(?i)CRONO ?([0-9]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)(?:Build/)?Malata[ _]?([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mango[_ ](S5|SQ7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MANN[ _]|(ZUG 3|ZUG 5S(?: Q)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MANN[ _](8S)`),
		regexp.MustCompile(`(?i)(ZUG 3|ZUG 5S(?: Q)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MSP950(1[245]|2[01])|MSP96017|MSP94501|MSP95009|MSP96002|MSP450[79]|(MID713|MID(?:06[SN]|08[S]?|12|13|14|15|701|702|703|704|705(?:DC)?|706[AS]?|707|708|709|711|712|714|717|781|801|802|901|1001|1002|1003|1004(?: 3G)?|1005|1009|1010|7802|9701|9702))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID713|MID(?:06[SN]|08[S]?|12|13|14|15|701|702|703|704|705(?:DC)?|706[AS]?|707|708|709|711|712|714|717|781|801|802|901|1001|1002|1003|1004(?: 3G)?|1005|1009|1010|7802|9701|9702))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MSP450[79]|MSP95009)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MFSTAB(?:_74G)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mara(?: Phones)?[ _](Z1?|X1|S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Marshal[_ -]?ME`),
		regexp.MustCompile(`(?i)Marshal[_ -]?ME-(700A|720|617)`),
		regexp.MustCompile(`(?i)Marshal[_ -]?ME-(34[78]|352|36[456])`),
		regexp.MustCompile(`(?i)Mascom (S750|SS289|WS517)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Massgo[ _]`),
		regexp.MustCompile(`(?i)Massgo[ _]VI2S`),
		regexp.MustCompile(`(?i)Massgo[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Masstel|(?:Juno[ _]Q[567]|Tab10Ultra|Tab(?:[78]|10)Plus|Hapi10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel[_ ]Juno[_ ]Q5Plus`),
		regexp.MustCompile(`(?i)(?:Masstel_)?Hapi ?(1[05]|30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel[_ ]N660s`),
		regexp.MustCompile(`(?i)Masstel[_ ]\((M18)\)`),
		regexp.MustCompile(`(?i)Masstel_Tab7LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab10 WiFi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel_Tab10_?4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab([78]|10)Plus`),
		regexp.MustCompile(`(?i)(?:Masstel[ _])?Tab[ _]?([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Masstel[_ ]*)?(Juno[_ ]Q[3567]|Juno_S6|[MNXB]\d+|LT52|N600S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEOQC4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MASTERTECH,([a-z0-9_ \-]+),(?:wired|wireless)|QC77QPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MASTERTECH,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(QC77QPS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Maximus 3\.0)`),
		regexp.MustCompile(`(?i)(?:7116-A5|818 3G|MATRIX GRAVITY|Matrix7116)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(7116-A5|818 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Matrix7116(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS(?:45[036]|505|507_STRONG|514)|MS457(?:PLUS)?|RS-401|Neva Rise S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS457)PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS507)_STRONG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MS(45[0367]|505|514)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RS-401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Max80 Plus)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Maximus[ _]|(Noir X|G10 max|iX Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Maximus[ _])?(Noir X|D1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G10 max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maximus_(T2)`),
		regexp.MustCompile(`(?i)Maxtron[ _-](V[327]|V1[2357]|V20|S[89]|T1|Genio|Apollo|PLUTO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxtron[ _-]PLUTO`),
		regexp.MustCompile(`(?i)Maxtron[ _-](V[327]|S[89]|V1[2357]|V20|Apollo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxtron[ _-](T1|Genio)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Astro[_ ](?:Phablet_9|55?N[_ ]LTE|55R|5 PRO|5[sTX]|[45]P|X4|5_GO_LTE|X55s?|4\.5|4|X5|8R)|Astro6|Virtue Z5|Nitro[_ ](?:4S?|55[ARCMN]|5[XRPNM]|[45] GO|4[sN] LTE|55[ _]LTE)|Gravity_(?:55?_GO|6P)|Nitro_Phablet_9s|Nitro Phablet 7N|Nitro 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[_ ](55?)N[_ ]LTE`),
		regexp.MustCompile(`(?i)Astro[_ ]X55[_ ]LTE`),
		regexp.MustCompile(`(?i)Astro[_ ](55R|X55s?|5[sTX]|4|X[45]|[45]P|8R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[_ ](4\.5)`),
		regexp.MustCompile(`(?i)Astro[_ ]X4`),
		regexp.MustCompile(`(?i)Nitro ([45]) GO`),
		regexp.MustCompile(`(?i)Nitro[ _]4s`),
		regexp.MustCompile(`(?i)Nitro[_ ]((?:55|4N)[_ ]LTE|4|55[ARCNM]|5[XRPNM]|8)`),
		regexp.MustCompile(`(?i)Gravity_(55?)_GO`),
		regexp.MustCompile(`(?i)Nitro[_ ]Phablet[_ ](9s|7N)`),
		regexp.MustCompile(`(?i)(?:Alpha[_ ]X|Maze Alpha)(?:[);/ ]|$)|(?:Android [78].+ Blade|Comet)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Alpha[_ ]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maze Alpha(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Blade|Comet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SSB-(?:500|508)|SSB408D|SSB504R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SSB-?(500|508|408D|504R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MF716\+?|M785|800P3[12]C|101P51C|X1010|M7[67]QF6|M17QF[67][_-][43]G(?:plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M785(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M17QF6-3Gplus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M17QF([67])_([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7([76])QF6`),
		regexp.MustCompile(`(?i)MF716\+`),
		regexp.MustCompile(`(?i)Mecool[ _-]|(?:KM9 ?PRO|BB2 PRO|K[I]{1,3} PRO|KI PLUS|KM9_TV_BOX|M8SPROW|M8S (?:PLUS|PRO) (?:DVB|[LW]|PLUS)|M8S (?:MAX|PRO)| KM[13569]| KD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM9 ?PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM9_TV_BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BB2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K[I]{1,3}) PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KI PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8SPROW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PLUS DVB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PLUS ([LW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO ([LW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) K([MD]\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mecool[ _-]([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:SmartPad7503G|M-SP10MXA|M-PPAB500|SmartPad970s2(?:3G)?|M[_-][MPS]P[0-9a-z]+|M-IPRO[0-9a-z]+|10edge|1AZ2[TP]| (?:7[BCD]Y|8[AD]Y|1[AB]EC|1CY|1AZ|1[DI]Y4G|1AZ2TW|1EY4G|1HY4G)(?:_eea)?|Azimut ?[23](?: Lite|Pro)?|M-WPW801| 1EY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad7503G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad970s23G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad970s2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP84[02]M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP940M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP8MXA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP7HXAH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP7MXAH?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP8HXAH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP(?:710|720|725|726|740)GOx?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP876S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8S2[AB]?3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP(101|102|860|875)S2[BW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP85S23G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1[DEHI]Y4G`),
		regexp.MustCompile(`(?i)M-MP10[45][01]S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1S2[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8[24]S4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8S4[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP9S4A3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1[02]S4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP7S4A3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1040MC?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1S4[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10HXxH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXHA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXHL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8PA3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP10PA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP10PA3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-IPRO([18][01]0)[BW](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:1AZ2[TP]|Azimut2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azimut 3 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azimut ?3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azimut 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8DY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10edge(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 1EY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-WPW801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (7[BCD]Y|8AY|1BEC|1CY|1AZ|1AZ2TW)(?:_eea)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M-MP75S23G|M-MP72[01]M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP7S2[ABDK]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP5303G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxB400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAG550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAB500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2G530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPG700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS531(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S650C?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS551U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAG4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP[ABC]G500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S500[BC]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPx(S510|G551|G51[0125]|G415)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M[_-]PP[Ax]X(470|510|555|520)U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxG(400|501|[457][PM]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS(532[LU]|470|501|5P?|7P?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxG(4[15]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPA(S520|R450|G552)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPx([XS]5\d{2}[UL])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP([0-9a-z]+)`),
		regexp.MustCompile(`(?i)Medion|(?:MD_)?LIFETAB|([SPX]10[0-9]{2}X|E10[45]1X|X5001|P851X|P850X|E691X|E10[56]0X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MD_)?LIFETAB[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(E450[46]|E5004|S5004|X5001|E5020|P5015|P500[45]|X6001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B5530)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(E10[45]1X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([SPX]10[0-9]{2}X|P851X|P850X|E691X|E10[56]0X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Medion(?: Smartphone)? ([^/;]+) Build`),
		regexp.MustCompile(`(?i)MEDION, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)MegaFon|MFLoginPh|MegLogPh|(MFLogin[34]T?|MS3B|SP-A5|SP-A20i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MFLoginPh|MegLogPh`),
		regexp.MustCompile(`(?i)MFLogin3T|MegaFon Login 3`),
		regexp.MustCompile(`(?i)MS3B|Megafon Optima`),
		regexp.MustCompile(`(?i)(SP-A5|SP-W1)`),
		regexp.MustCompile(`(?i)MegaFon V9+`),
		regexp.MustCompile(`(?i)(?:Meitu[2]?|MP1503|MP1512|MP160[235]|MP170[19]|MP171[138]|MP1801)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MP1512|Meizu M6s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1602(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP17(?:01|13)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP17(?:09|11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meitu2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meitu (Kiss|[MV]4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meizu|MZ-[A-Z]|(M04[05]|MZ-16th(?: Plus)?|MZ-16[st]|M7[12]1C|M35[1356]|M612C|M578CA|M181[36]|M1822|M681C|M6T|MX[ -]?[2345](?: Pro)?|(?:MZ-)?m[1-6] note|M621C|M1852|M57[18]C|M3[ESX]|M3 Max|M031|m1 metal|M1 E|M2|M2 E|M5s Build|PRO [567]|PRO 7-[HS]| 15 Lite| 16th|MZ-15 (?:Lite|Plus)|15 Plus|MZ-16 X| 16 X| 16T|MX6| M5c|16s Pro|Android 8(?:[\d.]*);(?: [\w-]+;)? 16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M571C`),
		regexp.MustCompile(`(?i)(?:MZ-|Meizu-)?m([1-6])[_ ]note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M1 E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2 E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M578C[A]?|M2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M681C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M621C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M711C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M721C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M6T|MX6|M3E|M3X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M3S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M3 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M5S|M612C`),
		regexp.MustCompile(`(?i)(?:MZ-)?M5c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M04[05]|MX[ -]?2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M35[1356]|MX[ -]?3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX[ -]?4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX[ -]?4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Meizu[- _])?MX[ -]?5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1813(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M1816|M8 lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8c Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO 7-[HS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO ([76]) Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO ([567])`),
		regexp.MustCompile(`(?i)M031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1852(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1822(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16th Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?15 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-15 Lite| 15 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MZ-16th| 16th(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16 X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 16(?: Build|[;)]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16s Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meizu (17|C9) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MZ-?M3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Meizu[_ ])?note([89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?Meizu[_ ]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:MZ-)?Meizu[_ ]([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)MZ-([^/;]+) Build`),
		regexp.MustCompile(`(?i)MELROSE[_ ](?:S9\+?|S9P|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE[_ ]S9\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE[_ ](S9|S9P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE_2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SlidePad ?([^;/]*) Build|SPNG?[0-9]{2,4}[a-z]{0,2}(?:[);/ ]|$)|SP704CE?|SP-NG708-3G`),
		regexp.MustCompile(`(?i)SlidePad ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)SPNG([0-9]{2,4}[a-z]{0,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-NG(708)-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP704(CE?)`),
		regexp.MustCompile(`(?i)(?:Pacific|Quest).+OculusBrowser|Standalone HMD`),
		regexp.MustCompile(`(?i)(?:Quest 2|Standalone HMD)`),
		regexp.MustCompile(`(?i)(?:MiXzo[ _])?(?:ME ?10(?:2[35]|30)|MX1037|MX1024|MX10[24]1|MX1397)([ _][34]G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiXzo[_ ]ME ?(1023|1030)(?:[_ ]([34])G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiXzo[_ ]MX1021(?:[_ ]3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MiXzo[ _])?MX(1037|1041|1024|1397)[ _]4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME ?1025`),
		regexp.MustCompile(`(?i)(?:MicroMax[ \-\_]?[a-z0-9]+|Q327)|4560MMX|P70221|(?:YU(?:5012|5040|5530)|AQ5001(?: Canvas Power)?|Android 4(?:[\d.]*);(?: [\w-]+;)? A240|Android 8(?:[\d.]*);(?: [\w-]+;)? B5Pro|N8216|N8301|IN_2b|IN_Note1|ione note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A240(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A107(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q465(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E451(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4560MMX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN_2b(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6523(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQ4502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E453(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E481(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q462(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P70221(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q(3[25]7|30[13]|326|354|338|3[03]01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q402\+`),
		regexp.MustCompile(`(?i)YU5040(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Micromax_)?(Q333|S302|Q324)`),
		regexp.MustCompile(`(?i)Q402 ?Plus`),
		regexp.MustCompile(`(?i)Micromax[_ ]HS3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax[_ ]HS2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax[_ ]HS1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q440Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax[_ ]Q353P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q452(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q421(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E313(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q413(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4251(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax C1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C2APLS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bharat[ _](\d)[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bharat[ _](\d)[ _]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bharat (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ione note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN_Note1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E7533(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B5Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?(P681|P802)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?(X291|X246|X252|X458|X312)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?(P[a-z0-9]+)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)KIN\.(One|Two)|RM-(?:1010|1031|106[57]|107[23467]|1089|109[02]|1096|1099|1109|111[348]|1127|1141|115[24]|994)|Microsoft; Lumia|Lumia (?:1530|1320|950|850|650|640|550|535|435)|Corporation/Surface|Surface Duo|Surface 3`),
		regexp.MustCompile(`(?i)KIN\.(One|Two)`),
		regexp.MustCompile(`(?i)RM-1099|Lumia 430`),
		regexp.MustCompile(`(?i)RM-1114|Lumia 435`),
		regexp.MustCompile(`(?i)RM-1031|Lumia 532`),
		regexp.MustCompile(`(?i)RM-109[02]|RM-1089|Lumia 535`),
		regexp.MustCompile(`(?i)RM-1141|Lumia 540`),
		regexp.MustCompile(`(?i)RM-1127|Lumia 550`),
		regexp.MustCompile(`(?i)RM-106[57]|RM-1096|Lumia 640 XL`),
		regexp.MustCompile(`(?i)RM-1109|RM-1113|RM-107[23467]|Lumia 640`),
		regexp.MustCompile(`(?i)RM-1154|Lumia 650`),
		regexp.MustCompile(`(?i)Lumia 950|RM-1118`),
		regexp.MustCompile(`(?i)RM-994|Lumia 1320`),
		regexp.MustCompile(`(?i)Surface Pro( [34])?`),
		regexp.MustCompile(`(?i)Microsoft; Lumia ([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:ETL101(?:GB|AL)|ETW101GT(?:_C)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ETL101(?:GB|AL)`),
		regexp.MustCompile(`(?i)NEO[- ](?:X8-H|X8|U9-H|X[57]-mini|X8H?-PLUS|X88-?I|X7-216A|X5-116A|X[68]|U1|Z64|U22-XJ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X8-H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO U22-XJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X([57])-mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-(X8H?)-PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X88-?I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X7-216A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X5-116A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X([68])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-U1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-Z64(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-U9-H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Pearl_Neo|M4CRD?|Emerald_M55CR|Mint[ _](?:VirGo|Orion))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pearl_(Neo)`),
		regexp.MustCompile(`(?i)Emerald[_ ]M55CR`),
		regexp.MustCompile(`(?i)(?:Mint[_ ])?VirGo`),
		regexp.MustCompile(`(?i)(?:Mint[_ ])?Orion`),
		regexp.MustCompile(`(?i)(?:Coolmintt(?:A[35]|M2)?|Ultramintt(?:S2)?|FRESHMINTT(?:A7|A10)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Coolmintt ?(Blaze 2|[PM]1|P3|A[35]|M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultramintt ?([SR]1|S2|Y3|[AY]5|X[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FRESHMINTT ?(A7|A10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIO(?:/)?([a-z0-9]+)|(?:MOBIX M6|Mio TouchPad 7 Quad Core)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOBIX M6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIO(?:/)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Mione[_ ]`),
		regexp.MustCompile(`(?i)Hero (\d+)`),
		regexp.MustCompile(`(?i)Mione P2\+`),
		regexp.MustCompile(`(?i)Mione_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mione[_ ]N10pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIDM[_-]|MPM[_-]|TPM4G_WT8`),
		regexp.MustCompile(`(?i)MIDM[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MPM[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MITO[- _]`),
		regexp.MustCompile(`(?i)MITO[- _]3255(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITO[- _]A37[_ ]Z1plus`),
		regexp.MustCompile(`(?i)MITO[- _](A(?:19[_ ][12]GB|37[_ ]Z1|36[_ ]W1|[0-9]+)|311)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITO[- _](T(?:[0-9]+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITSU|portalmmm/[12]\.0 M`),
		regexp.MustCompile(`(?i)MITSU/[a-z0-9.]+ \(([a-z0-9]+)\)`),
		regexp.MustCompile(`(?i)MITSU[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12]\.0 (M[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(MC32020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Mobell[ _](?:S50)|NOVA P3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobell[ _](S50)`),
		regexp.MustCompile(`(?i)(?:MobiGo2|MobiPrint 4\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MobiGo2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MobiPrint 4\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Kiona|KANUNA|Halona|Kicka[_ ][45][ _]Plus|Kicka Zoom|Kohana|Kayeta|Kosumi|KWANITA|Lonan|Hotah|Kicka 5|Kiona|Smart ?(?:[CEN]11|N12)|Sakari)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart ?([CEN]11|N12)`),
		regexp.MustCompile(`(?i)(Kiona|Kicka[_ ][45][ _]Plus|Kohana|Kayeta|Kosumi|Lonan|Halona|Hotah|Kicka 5|Kicka Zoom|Kiona|Sakari)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobicel[_ ](R1|METRO2)|ASTRO(?: Build|[;)]|$)|(?:Android 8(?:[\d.]*);(?: [\w-]+;)? (?:BEAM|ZOOM|RUBY)|FAME(?:_DS)?|CLIK|R7_[12]|HYPE(?:_X)?|DANDY(?:_ZAM)?|Matrix|VENUS_G|TRENDY PLUS|FENDY_DS|TANGO_LITE|BLINK|BERRY|BERRY[_ ]?(?:[12]|PLUS)|R1PLUS_1|ZOOM-H|REBEL|LEGEND (?:MAX|PRO_1|Pro LTE)|HERO_DS|Switch[ _]GO|SWITCH1|switch plus|PULSE_1|TRENDY 2|TRENDY_LITE|FEVER_PLUS(?:_[HJ])?|RIO_(?:SS|ZAM|RW|BN)|Clik plus|(PURE|Fendy) PLUS|Neo[ _]LTE|Titan_1|ZOOM_1|R4 LTE|NEO_1|EPIC_[12]| GLO|EPIC PRO_[12]|OREO|Cosmo LTE|Neo_Plus|Android 1[12](?:[\d.]*);(?: [\w-]+;)? FORCE|VX20|VX19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EPIC PRO_([12])`),
		regexp.MustCompile(`(?i)EPIC_([12])`),
		regexp.MustCompile(`(?i)BERRY[_ ]PLUS`),
		regexp.MustCompile(`(?i)R7_[12]`),
		regexp.MustCompile(`(?i)GLO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neo[ _]LTE`),
		regexp.MustCompile(`(?i)RIO_(SS|ZAM|RW|BN)`),
		regexp.MustCompile(`(?i)Switch[ _]GO`),
		regexp.MustCompile(`(?i)VX(19|20) Pro`),
		regexp.MustCompile(`(?i)VX(19|20)`),
		regexp.MustCompile(`(?i)Mobicel_(R1)`),
		regexp.MustCompile(`(?i)FEVER_PLUS_([HJ])`),
		regexp.MustCompile(`(?i)Mobiistar|Zumbo[ _]S|(?:PRIME X MAX|X1 (?:Notch|Dual)|E1 Selfie|XQ[_ ]Dual|C1 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1 (Notch|Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E1 Selfie(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ[_ ]Dual(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mobiistar_LAI_Zumbo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zumbo[_ ]S[_ ]2017[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zumbo[_ ]S[_ ]2017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mobiistar ZUMBO S2( Dual)`),
		regexp.MustCompile(`(?i)Mobiistar_LAI_Zumbo_J_2017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobiistar_LAI_Zumbo_J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobiistar[_ ]Zumbo[_ ]J2`),
		regexp.MustCompile(`(?i)Mobiistar[_ ]Zumbo[_ ]S2`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]YUNA[ _]([1XCS])`),
		regexp.MustCompile(`(?i)mobiistar[ _](?:LAI[ _])?ZORO[ _]([235])`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]Zena`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]Z([12])?`),
		regexp.MustCompile(`(?i)mobiistar LAI 504([KC])`),
		regexp.MustCompile(`(?i)mobiistar[ _]PRIME[ _](X1|558|X[ _]Plus|X[ _]Grand) Build`),
		regexp.MustCompile(`(?i)mobiistar[ _]KOOL([ _]Lite)?`),
		regexp.MustCompile(`(?i)Mobiistar[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)GENESIS_126(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS5[50]X6|MS55X5|MS55L1|MS50L1|MS43A3000|MS45A4000|MS50A4000|MS50A4500|MS50A5000|MS50A6000|MS50B11000|MB-2900 QUATTRO|POLYS[_ ]MS45L1|Wave5)`),
		regexp.MustCompile(`(?i)POLYS[_ ]MS45L1`),
		regexp.MustCompile(`(?i)(Cynus[ _][^/;)]+)( Build|\))`),
		regexp.MustCompile(`(?i)(?:(?:MOBO[_ ]MB7005|MT7-421HD)|(?:MT7-442D|MT7-411D))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOBO[_ ])?(MB7005|MT7-421HD|MT7-442D|MT7-411D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TicWatch (C2|C2\+|Pro S|S2?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Modecom|Free(?:Way )?Tab|xino z[\d]+ x[\d]+|(?:ECHO LOLLY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)xino Z([\d]+) X([\d]+)`),
		regexp.MustCompile(`(?i)FreeTab[ _\-]?([^/;]+)? Build`),
		regexp.MustCompile(`(?i)FreeTab[ _\-]?([^);/ ]+)?`),
		regexp.MustCompile(`(?i)FreeWay Tab[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)FreeWay Tab[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)Mofut[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Mofut[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(?:momo3s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TurboPhone4G Compact 2108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOT[^T][^O]|[^A][^D]DROID ?(?:Build|[a-z0-9]+)|portalmmm\/2.0 (?:E378i|L6|L7|v3)|XOOM [^;\/]*Build|XT1941-2|XT1924-9|XT1925-10|XT1965-6|XT1970-5|XT1799-2|XT1021|XT2171-3|XT2071-4|XT2201-6|XT2175-2|XT2125-4|XT2143-1|XT2153-1|XT2201-2|XT2243-2|XT2241-1|XT2137-2|XT1710-08|XT180[3-5]|XT2335-3|XT194[23]-1|XT1929-15|[^Xtreme ](?:XT|MZ|MB|ME)[0-9]{3,4}[a-z]?(?:\(Defy\)|-0[1-5])?(?:[;]? Build|\))|lineage_osprey|ATRIX HD`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT300`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT30[35]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT31[16]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2125-4`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge \((202\d)\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2175-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2143-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2153-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT32[01]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT3(?:89|90)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT502`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT531`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT535`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT55[567]C?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT603`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT610`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT615`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT621`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT626`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT682`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT685`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT687`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?Atrix HD`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT720`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT800W`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT860`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT881`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT882`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT88[56]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT890`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT894`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT897`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT901`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT90[567]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT910S?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT91[4568]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT9(?:19|20)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT925`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT912`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT102[12]|XT830C|XT15[12]4|XT152[67])`),
		regexp.MustCompile(`(?i)Moto E \(XT2052DL\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1706`),
		regexp.MustCompile(`(?i)MotoE2\(4G-LTE\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1924-9`),
		regexp.MustCompile(`(?i)moto e\(?([0-9])\)? plus`),
		regexp.MustCompile(`(?i)Moto E([0-9]) Play`),
		regexp.MustCompile(`(?i)moto e6 \(XT2005DL\)`),
		regexp.MustCompile(`(?i)moto e5 cruise(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)moto e5 supra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E5 go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?(\di?)\)? Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?((?:[567]|22)i?)\)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?([567])s\)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E(\d+)\(?s\)?`),
		regexp.MustCompile(`(?i)Moto E(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1030`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1565`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1096`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT175[046]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT172[135]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1254`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT10(?:28|3[12349]|68|69)|lineage_osprey`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT106[34]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?g\(?(\d+)\)? 5G`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1609`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT180[1-6]|Moto G ?5S Plus|Moto G \(5S\) Plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1799-2|Moto G \(5S\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT168[57]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT167[06]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1925-10`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1965-6`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT10(?:49|5[23568]|6[04]|9[23457])|XT1093)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT156[234]|Moto X Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT157[02]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1575`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT158[01]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1080`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1585`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1650(?:-05)?`),
		regexp.MustCompile(`(?i)moto z4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto Z3 Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1635(?:-0[1-3])?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1710-(?:-0[28])?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1789-05|Moto Z2 Force(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1929-15|moto z3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT166[23]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2241-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2243-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2201-6`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1943-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1941-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1942-1|P30 Note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge plus 5G UW \(2022\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge plus \(?(202[23])\)?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge ([23]0) fusion`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge 20 lite`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge (\d+) pro`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge 5G UW \(2021\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge (\d+)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge \(2021\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one vision plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT1970-5|one vision)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one power`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one hyper`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one zoom`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one fusion\+`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one fusion`),
		regexp.MustCompile(`(?i)moto g stylus \(XT2115DL\)`),
		regexp.MustCompile(`(?i)moto g stylus \((202[12])\)`),
		regexp.MustCompile(`(?i)moto g stylus 5G \((2022)\)`),
		regexp.MustCompile(`(?i)moto g play \(XT2093DL\)`),
		regexp.MustCompile(`(?i)moto g play \(2021\)`),
		regexp.MustCompile(`(?i)moto g power \(XT2041DL\)`),
		regexp.MustCompile(`(?i)moto g power \(2021\)`),
		regexp.MustCompile(`(?i)moto g power \(2022\)`),
		regexp.MustCompile(`(?i)moto g 5G \(2022\)`),
		regexp.MustCompile(`(?i)moto g\(?40\)? fusion`),
		regexp.MustCompile(`(?i)moto g\(?60\)?s`),
		regexp.MustCompile(`(?i)moto g(\d+)\((\w)\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) \(XT1925DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) forge`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) optimo \(XT1952DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) optimo maxx\(XT1955DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) power lite`),
		regexp.MustCompile(`(?i)moto g\(([0-9]|10)\) power`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) supra`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) plus`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) play`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\)`),
		regexp.MustCompile(`(?i)moto g(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)moto e\(?([0-9]+)\)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)moto x\(?(4+)\)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)moto(?:rola)? one 5G`),
		regexp.MustCompile(`(?i)Moto MAXX|XT1225`),
		regexp.MustCompile(`(?i)Moto ([CGEXZ]) ?\(([a-z0-9]+)\)( Plus| Play)?`),
		regexp.MustCompile(`(?i)Moto ?([CGEXZ])([0-9]+)( Plus| Play)?`),
		regexp.MustCompile(`(?i)(?:Motorola-)?Moto[ _]?([CGEXZ])([ _](?:Plus|Play))?`),
		regexp.MustCompile(`(?i)Moto(?:rola)?[- _]F100`),
		regexp.MustCompile(`(?i)razr \(?(202[02])\)?`),
		regexp.MustCompile(`(?i)MOTORAZR[ _-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MOTORIZR[ _\-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Motorola[ _-]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Moto[ _-]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)MOT[O]?[_-]?([a-z0-9.]+)`),
		regexp.MustCompile(`(?i)DROID ?([a-z0-9 ]*) Build`),
		regexp.MustCompile(`(?i)DROID ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 ((?:E378i|L6|L7|V3)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(XOOM [^;/]*)Build`),
		regexp.MustCompile(`(?i)(MZ[0-9]{3})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:ME|MB|XT)[0-9]{3,4}(?:\(Defy\))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOVIC|F4502`),
		regexp.MustCompile(`(?i)MOVIC[ -]K(2)`),
		regexp.MustCompile(`(?i)MOVIC[ -]W([2345])`),
		regexp.MustCompile(`(?i)M(?:8421|9101[AB]|910[36]|841[4568]|8601)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(\d{4}[AB]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MH-T6000|MT-T800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MH-T6000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MT-T800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MPQC|MPDC)[0-9]+|PH(?:150|340|350|360|451|500|520|544|604)|(?:MID(?:7C|74C|82C|84C|801|811|701|711|170|77C|43C|102C|103C|104C|114C)|MP100i OCTA|MP(?:843|717|718|1010|7007|7008|843|888|959|969|QCG(1[01]|77)(?: 3G)?)|MGP7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:MPQC|MPDC)[0-9]+[^/;)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)MP100i OCTA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MPQCG10(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID(?:7C|74C|82C|84C|801|811|701|711|170|77C|43C|102C|103C|104C|114C)|MP(?:843|717|718|1010|7007|7008|843|888|959|969|QCG(?:11|77))|MGP7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PH(?:150|340|350|360|451|500|520|544|604))`),
		regexp.MustCompile(`(?i)MultiPOS[ _]?(X9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]|ML-TI-MS|(?:MS50[LGXM]|M7[_-]3G[_-](?:PLUS|QC_3|QUAD_CORE)|MS5\.V2|M9-3G|MS45S_A6|ML([02]1|12)-M7s[- ]?Quad-?Core| ML01-M7-SD|MS45S|MS50S|MS60[XZ]|M7SQC_Plus|MS80X|MS40[GS]|MS55M|MS70|M7_3G_A10|M7_3G|M7S_PLUS|M10A?_3G|M7-3G QUAD CORE|M7s_?Lite|M[79]_WIFI|ML-(?:SO|WI)-M9-3G|M10A-Lite|M10_4G_PRO|MS50L?_4G|MS60F(?:_PLUS)?|MS45S_A6_(?:Teen|Senior)|MLX8|ML-WI-M7_3G_PLUS|KIDPAD_LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]([EFG])[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]F[_ ]Pro[ _]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G[_ ]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]GMAX_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G[ _]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]E[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]([FEH])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MS60F_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS50[LGXSM]|MS45S_A6|MS40[GS]|MS55M|MS60F|MS70|MS60[XZ]|MS45S|MS80X|MS50L?_4G|MS5\.V2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ML-WI-)?M7[_-]3G[_-]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M([79])_WIFI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M10_4G_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7SQC_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7-3G_QC_3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7-3G[ _]QUAD[ _]CORE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML([02]1|12)-M7s[- ]?Quad-?Core(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7s_?Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML01-M7-SD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M10A-Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ML-(?:SO|WI)-)?M9-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7_3G_A10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLX8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(10A?|7)_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KIDPAD_LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML-TI-(MS\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MP01A3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyGica[_ ]`),
		regexp.MustCompile(`(?i)HDR (Quad Core|Smart TV) Box`),
		regexp.MustCompile(`(?i)ATV(19[60]0|495 Pro 16G)`),
		regexp.MustCompile(`(?i)MY MOBILE (708)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MyPhone|MyPad|MyTab)[ _][^;/)]+( Build|[);])|(?:HAMMER_)?AXE[_ ]M[_ ]LTE|Hammer[_ ](?:Axe)|Cube_LTE|myTab10II|LUNA_II|C-Smart_pix|myPhone_Fun_8|FUN_18x9|MyPhoneMY27|Prime_4_Lite|myA1[78]|myX12|Pocket_2|Prime_18x9|Prime3Lite|myG1|myA10|myA(10|[789]) DTV|myT[356] DTV|myWX1 Plus|myXI1(?:[ _](?:Plus|Pro))?|my(?:XI[3]|NX1|X[23589]|A1[12356]|29S|807)|Q_Smart_BE|Brown [12]|Q-Smart_Plus|Q-Smart_III_Plus|SmartView_(?:[78]|9_6)_(?:LTE|[34]G)|Android 6(?:[\d.]*);(?: [\w-]+;)? Pocket|Infinit 2|SmartView_9\.6_3G|A898 DUO`),
		regexp.MustCompile(`(?i)myT([356]) DTV`),
		regexp.MustCompile(`(?i)SmartView_9[_.]6_3G`),
		regexp.MustCompile(`(?i)myA([789]|10) DTV`),
		regexp.MustCompile(`(?i)Cube_LTE|Cube 16GB`),
		regexp.MustCompile(`(?i)INFINITY (LTE|3G)`),
		regexp.MustCompile(`(?i)Pocket_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pocket(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun[_ ]?(\d)[_ ]?Lite`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun[_ ]?(\d)[_ ]?LTE`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun_?([48]|18x9)`),
		regexp.MustCompile(`(?i)(?:HAMMER_)?AXE[_ ]M[_ ]LTE`),
		regexp.MustCompile(`(?i)myXI1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myXI1 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myXI([13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)my(X[23589]|NX1|A1[12356]i?|29S|G1|X12|A1[078])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myWX1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q_Smart_BE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Smart_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime_18x9(_LTE)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime3Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Brown 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)brown 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myPhone[_ ]Pocket[_ ]Pro`),
		regexp.MustCompile(`(?i)MyPhone[ _]([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)MyPad[ _]([^;/(]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)MyTab[ _]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:MyTAB[ _-](?:8 MINI Dual Core|U55GT)|U103GT1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyTAB[ _-]8 MINI Dual Core(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyTAB-U55GT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U103GT1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyWigo[ _]([^;/)]+)( Build|\))`),
		regexp.MustCompile(`(?i)MygPad[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(MOVE_S201)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (Myria[_ ][^/;]+|502M|Cozy|Easy tab 9|Grand|Compact_E2_Plus)(?: Build|[;)])|Myria_FIVE|Myria_Grand_4G|Myria_Wide_2|Myria_Wide_4G`),
		regexp.MustCompile(`(?i)(502M|Grand|Compact_E2_Plus)`),
		regexp.MustCompile(`(?i)(Cozy|Easy tab 9)`),
		regexp.MustCompile(`(?i)Myria[_ ]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(E70 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYSTERY|(MID-(?:123G|72[12]|7[01348]3G|753G|8[23]3G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MID-(123G|72[12]|7[01348]3G|753G|8[23]3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYSTERY[_ ]TV[_ ](D\d{4}[A-Z]{2}\d{2})`),
		regexp.MustCompile(`(?i)(?:NASCO (?:TANGO 7)|SNAP_PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEC[ _\-]|KGT/2\.0|portalmmm/1\.0 (?:DB|N)|(?:portalmmm|o2imode)/2.0[ ,]N|(?:PC-T[SE]\d{3}[\w]{2,3}|N-06C|N-02E|LAVIE T11 (?:11QHD1|112K1)|LAVIE Tab E (?:10|8)FHD[12]|7SD1|8HD1|LAVIE Tab (?:10FHD3|T12 12QHD1))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N-06C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEC[ _\-]|KGT/2\.0 )([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/1\.0 ((?:DB|N)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:portalmmm|o2imode)/2\.0[ ,](N[a-z0-9]+)`),
		regexp.MustCompile(`(?i)LAVIE Tab E ((?:10|8)FHD[12]|7SD1|8HD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE Tab 10FHD3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE Tab T12 12QHD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE T11 (11QHD1|112K1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE T7 (7SD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE T8 (8HD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PC-TE(\d+)`),
		regexp.MustCompile(`(?i)PC-TS(\d+)`),
		regexp.MustCompile(`(?i)(?:NEKO_(?:W_)?LT[-_](\w+)|LT-\d{2}N(?:H8020S|F7021S))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEKO_)?(?:W_)?LT[-_](\w+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MXQ|MXQ-Pro)-NEXBOX|NEXBOX-([^) ]+)`),
		regexp.MustCompile(`(?i)NEXBOX-([^) ]+)`),
		regexp.MustCompile(`(?i)NEXON (X[13]\+|X[123589])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Discovery_XT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NG3128HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NGM[_ ][a-z0-9]+|(Forward|Dynamic)[ _]?[^/;]+(?:Build|/)|Smart5Plus32GB|Android 5(?:[\d.]*);(?: [\w-]+;)? (?:P50[89]|P55[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P(50[89]|55[01])`),
		regexp.MustCompile(`(?i)(Forward|Dynamic)[ _]?([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(Forward|Dynamic)[ _]?([^/;]+)/`),
		regexp.MustCompile(`(?i)NGM ([^;/]+) Build`),
		regexp.MustCompile(`(?i)NGM_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Android 4(?:[\d.]*);(?: [\w-]+;)? (3188HD)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:NOA-)?NOA[ _]|Hummer(?:_2019_R|LE)|NextSE|Vivo 4G_r|SPRINT4G|SparkSE`),
		regexp.MustCompile(`(?i)NOA[_ ]CORE[_ ]FORTE`),
		regexp.MustCompile(`(?i)NOA[_ ]Hummer[_ ]Lite`),
		regexp.MustCompile(`(?i)NOA[_ ]HUMMER`),
		regexp.MustCompile(`(?i)NOA[_ ]MOVEse`),
		regexp.MustCompile(`(?i)NOA[_ ]NEXT`),
		regexp.MustCompile(`(?i)NOA[_ ]VISION[_ ]H3SE`),
		regexp.MustCompile(`(?i)NOA[_ ]VISION[_ ]H3`),
		regexp.MustCompile(`(?i)NOA[_ ]LOOP`),
		regexp.MustCompile(`(?i)(?:NOA-)?NOA[_ ]H4se`),
		regexp.MustCompile(`(?i)NOA[_ ]Mg12`),
		regexp.MustCompile(`(?i)NOA[_ ]H44SE`),
		regexp.MustCompile(`(?i)NOA[_ ]H10LE`),
		regexp.MustCompile(`(?i)NOA[_ ](M108K|P497)`),
		regexp.MustCompile(`(?i)(?:NOA[_ ])?Vivo 4G_r`),
		regexp.MustCompile(`(?i)NOA[_ ]([^;)/ ]+)`),
		regexp.MustCompile(`(?i)SMART_VOLT_NX5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NOGAPC (?:LIVE|PRO)|NOGAPAD ?(?:7G|10\.1GHD))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPAD ?7G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPAD ?10\.1GHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPC PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPC LIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Bonvi Note|Bonvi Prime|Bonvi Pro|Borneo_Pro|Vi_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HB-(2000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_|(?:(?:N(570[24]|500[12])L|S5701L|S6001L|[SN]5501L)|A6L-[CG]|N5502L|S6303L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_A([13]L?)`),
		regexp.MustCompile(`(?i)NUU_M([32])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_X5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NUU_)?(N5001L|A6L-[CG]|Q500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NYX[ _]|(?:GLAM|ARGON|TQ14|GO-X|orbis)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NYX[_ ]ALTER`),
		regexp.MustCompile(`(?i)NYX[ _]REX`),
		regexp.MustCompile(`(?i)(TQ14|GO-X)`),
		regexp.MustCompile(`(?i)(?:DMTAB-(?:IN08A|NV08B|NV2[04]A)|NBTY07SMKG|NBFP07PMKG|SNB02-NV7A|NABI2-NV7A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DMTAB-(?:IN08A|NV08B)`),
		regexp.MustCompile(`(?i)DMTAB-NV(2[04])A`),
		regexp.MustCompile(`(?i)android 7(?:[\d.]*);(?: [\w-]+;)? (?:F101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NAOMIPHONE Ambar|DAMMAR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAOMIPHONE Ambar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DAMMAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NX-32THS100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEXO (?:Smarty|handy|SMART DUO|Evo)|MOVIO 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP-752Go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NeoTab)[ _-]((?:S1[23]0|S125|H85|H11[05]|KID741|S9700))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _]|(?:T737PRO|T505PRO|T500 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NAVITEL[ _])?(T70[07]|T500) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _](T757)LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _](A73[0157]|A650)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T(505|737)PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RE900 Full HD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ]|(?:Vision_Tab_(?:7|10)|Pure Micro|Superme_Max|Raptor3G8GB|Predator (?:10|3G)|Platinum[_ ]?10[_ ]?3G(?:_V2|2019)?|Supreme[_ ](?:Fine(?:[_ ]Micro)?|Chief|Pure|Pro)(?:[_ ](?:Mini|Plus))?|T400 3G 2017|Spirit_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M505 LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F552|D504)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Superme_Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine_Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine_Micro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Fine[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Chief(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Pure[ _]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme Pure(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure Micro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spirit_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ]Infinity(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ](D405)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Platinum[ _]10[ _]3G(_V2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Platinum103G2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Orpheus[ _]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon_)?Predator[_ ](3G|10|7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Raptor3G8GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vision_Tab_(7|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M002[DGQK]-2|M002N|M002N-3T|M002W-2T|6M-3T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEDAPHONE[ _](V9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neffos|(TP601[ABCE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:C57|TP601[ABCE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neffos[_ ]Y50`),
		regexp.MustCompile(`(?i)Neffos[_ ]((?:[YNCXA])[0-9][A-Z]?(?: Max| Lite| Plus)?)`),
		regexp.MustCompile(`(?i)NEO, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Neolix[ _-]`),
		regexp.MustCompile(`(?i)Neolix[ _-]T7[_ ]`),
		regexp.MustCompile(`(?i)Neolix[ _-]1-C-`),
		regexp.MustCompile(`(?i)Neolix[ _-]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)NEO[ ]?(90[689])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NQT-(?:101|7)[34]GIQ|NQT-7W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NQT-101([34])GIQ`),
		regexp.MustCompile(`(?i)NQT-7([34])GIQ`),
		regexp.MustCompile(`(?i)NM-NETPAD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NIM-(450D|550O|600Q)`),
		regexp.MustCompile(`(?i)neutab ?k1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)neutab ?k1`),
		regexp.MustCompile(`(?i)NB (RunIQ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NBTB10[12])(?:[);/]|$)`),
		regexp.MustCompile(`(?i)NEWGEN\-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NLS-(?:MT90|NFT10|MT65)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Newman[ _](P308|K1|G5i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CarPad-(?:II|III)-P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Newsday[_ ](E1|A[12]|N2\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexa[ _](?:Atlas|Vega N1)`),
		regexp.MustCompile(`(?i)Nexa[ _](Vega N1)`),
		regexp.MustCompile(`(?i)Nexa[ _](Atlas)`),
		regexp.MustCompile(`(?i)S?Nexian`),
		regexp.MustCompile(`(?i)S?Nexian[ ]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)S?Nexian-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Next[0-9]|NX(?:785QC8G|M900MC|008HD8G|010HI8G|M908HC|M726|16A8116K|A8QC116|A8LTE116|16A10132S|16A11264|A116QC164|A101LTE116)`),
		regexp.MustCompile(`(?i)Next([0-9]+[^;/]+) Build`),
		regexp.MustCompile(`(?i)TAB (A40[13]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nextbit|(?:Robin)(?: Build|\))`),
		regexp.MustCompile(`(?i)(Robin)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOAIN[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)NOAIN[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)Nobby[ ](S500|X800(?: Pro)?|S300(?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Noblex|NBX-|(?:A[56]0UNS|T7A6INC|T7A6N)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:Noblex|NBX)[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Noblex|NBX)[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(A[56]0)UNS`),
		regexp.MustCompile(`(?i)(T7A6INC|T7A6N)`),
		regexp.MustCompile(`(?i)Nokia|Lumia|Maemo RX|portalmmm/2\.0 N7|portalmmm/2\.0 NK|nok[0-9]+|Symbian.*\s([a-z0-9]+)$|RX-51 N900|TA-[0-9]{4}|N(?:1374|1530|15[012])DL|ARM; 909`),
		regexp.MustCompile(`(?i)TA-10(07|23|29|35)`),
		regexp.MustCompile(`(?i)TA-10(20|28|32|38)`),
		regexp.MustCompile(`(?i)TA-10(24|27|44|53)`),
		regexp.MustCompile(`(?i)TA-10(00|03|21|25|33|39|54)`),
		regexp.MustCompile(`(?i)TA-10(04|12|52)`),
		regexp.MustCompile(`(?i)Nokia 6\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 5\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 3\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 2 V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nokia[_ ]Xplus`),
		regexp.MustCompile(`(?i)Nokia ?X2DS`),
		regexp.MustCompile(`(?i)(?: )?(Nokia500|nokiaasha500(?:dualsim)?)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia5130c(?:-2)?`),
		regexp.MustCompile(`(?i)Nokia8800e?`),
		regexp.MustCompile(`(?i)Nokia808 ?PureView`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})c(?:-)?`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})s(?:-)?`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})`),
		regexp.MustCompile(`(?i)(?: )?Nokia([235][0-9]{2})(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia([CEX]-?[0-9]{1,2}i?)-[0-9]{1,2}u?(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia;? 520T`),
		regexp.MustCompile(`(?i)RM-91[45]`),
		regexp.MustCompile(`(?i)RM-997|Nokia 526`),
		regexp.MustCompile(`(?i)RM-97[68]`),
		regexp.MustCompile(`(?i)RM-97[45]`),
		regexp.MustCompile(`(?i)NOKIA;? 710`),
		regexp.MustCompile(`(?i)Nokia;? 720T`),
		regexp.MustCompile(`(?i)RM-103[89]`),
		regexp.MustCompile(`(?i)Nokia;? 800C`),
		regexp.MustCompile(`(?i)Nokia;? 800`),
		regexp.MustCompile(`(?i)Nokia;? 900`),
		regexp.MustCompile(`(?i)(RM-82[12]|Nokia;? 920)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)(RM-89[23]|RM-910|Nokia;? 925)(?: Build|[a_);/])`),
		regexp.MustCompile(`(?i)(ARM; 909|NOKIA;? 909|NOKIA; id300)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)NOKIA;? 1520\.1`),
		regexp.MustCompile(`(?i)Nokia T([12]0|21)`),
		regexp.MustCompile(`(?i)Nokia ([A-Za-z0-9\. ]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Nokia(N[0-9]+)`),
		regexp.MustCompile(`(?i)Nokia-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NOKIA; ([a-z0-9\- ]+)`),
		regexp.MustCompile(`(?i)NOKIA[ _]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)NOKIA/([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(Lumia [a-z0-9\-]+ XL)`),
		regexp.MustCompile(`(?i)(Lumia [a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Maemo RX-51 ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NokiaInternal|Nokia-WAP-Toolkit|Nokia-MIT-Browser|Nokia Mobile|Nokia Browser|Nokia/Series`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 (N7[37]|NK[a-z0-9]+)`),
		regexp.MustCompile(`(?i)nok([0-9]+)`),
		regexp.MustCompile(`(?i)Symbian.*\s([a-z0-9]+)$`),
		regexp.MustCompile(`(?i)Nomi[ _-]|(C101010 Ultra2|i501[234]|i5032|i50[537]0|i5031|i55[13]0|i5532|C0(700(?:[02358]|2HD)|7850)|C1010[0-3]|i(?:50[0158]|450|40[01]|55[02])|i504 Dream|AB5116-01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i501[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i506(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i6030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I5070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[_ ]I4070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i4510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i4500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[_ ]i5511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i5710(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i508(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi[ _])?i(50[015]|450|40[01]|55[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i507(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi[ _]i504|i504 Dream)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _](\w+)[ _]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AB5116-01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101040`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101030`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101014`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101034`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101044`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070010`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070020`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070011`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070030`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070014L`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C0700[13]4`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070044`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080010`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080034`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080014`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C07008`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C10105`),
		regexp.MustCompile(`(?i)(?:Nomi[ _])?(C0(?:700(?:[0235]|2HD)|7850|9600)|C1010[0-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Nomi[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:Nomu[ _-](?:T18|S30mini|S10)|(?:V1600S|S10 PRO|S50_Pro)|LMCV1|Xeno V1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]T18(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]s10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]S30mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMCV1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S([15]0)[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1600S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Xeno V1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NT-TP10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nos (?:FIVE|NOVU|NEVA|Roya)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS FIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NEVA 80(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS Roya(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A063)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NS(?:[356]|500[2-68]|5511|5502)|NS 5511)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NS 5511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NS[0-9]{1,4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NWX-40F171MSY|NVX-32H219MSY|NVX-43U329MSY|NVX-39H211MSY|NWX-43F149MSYv?|NWX-24H121MSY|NWX-32H171MSY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Novey (L2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO \[Reloaded\](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TM800A620M|TM101A620M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nubia[ _]|(?:NX(?:403A|404H|406E|40[X2]|503A|50[5678]J|51[0123]J|521J|523J_V1|529Jq?|5[345]1J|5[48]9J|569[HJ]|5[67]3J|575J|59[157]J|60[1689]J|61[12679]J|62[79]J|65[19]J|6[126]9J|66[67]J|679[JS]|70[129]J|71[12]J|729J|709S|907J))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NX679[JS]`),
		regexp.MustCompile(`(?i)NX40[X2]`),
		regexp.MustCompile(`(?i)NX(403[AE]|406E|404H)`),
		regexp.MustCompile(`(?i)(NX5[12]1J|Nubia Z9 mini)`),
		regexp.MustCompile(`(?i)(NX510J|Nubia Z9 Max)`),
		regexp.MustCompile(`(?i)(?:NX549J|Nubia Z11 mini S)`),
		regexp.MustCompile(`(?i)(?:NX529Jq?|Nubia Z11 mini)`),
		regexp.MustCompile(`(?i)NX569[HJ]`),
		regexp.MustCompile(`(?i)NX6(?:08|17)J`),
		regexp.MustCompile(`(?i)Nubia[_ ]([^;)/]+)( build|[;)])`),
		regexp.MustCompile(`(?i)Nuvo[_ ](NS35|Blue ND40|Green[_ ]ND[_ ]45)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nuvo[_ ](NS35)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blue (ND40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Green[_ ]ND[_ ]45(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NVIDIA|SHIELD|Tegra(Note-P1640| Note 7)|wx_na_wf|wx_un_do`),
		regexp.MustCompile(`(?i)wx_na_wf|wx_un_do`),
		regexp.MustCompile(`(?i)(SHIELD Tablet(?: K1)?|Tegra Note 7)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)SHIELD Andr[o0]id TV`),
		regexp.MustCompile(`(?i)O\+[ _](Presto 700 LTE|FAB GO|360|8\.(?:3[178]z|[15]2|37y|3[38]|9[12378]|1[75]|6)|Air|Grande|Crunch|Ultra|Xfinit|Upsized|Venti|EVO 4G|Sonic|360[ _]ALPHA[ _]PLUS[ _]2\.0|360[ _]HD[ _]2\.0|Stream HDTV)`),
		regexp.MustCompile(`(?i)O\+[ _](Presto 700 LTE|Grande|Crunch|Ultra 2.0|Xfinit|Ultra Lite|Ultra|Sonic|Upsized|Venti 4G|EVO 4G|8\.(?:3[178]z|37y|3[38]|[15]2|9[12378]|1[75]|6))`),
		regexp.MustCompile(`(?i)O\+_AIR`),
		regexp.MustCompile(`(?i)O\+[ _]360[ _]HD[ _]2\.0`),
		regexp.MustCompile(`(?i)O\+[ _]360[ _]HD`),
		regexp.MustCompile(`(?i)O\+[ _]360[ _]ALPHA[ _]PLUS[ _]2\.0`),
		regexp.MustCompile(`(?i)O\+[ _]360 ALPHA Plus`),
		regexp.MustCompile(`(?i)O\+[ _]360 ALPHA`),
		regexp.MustCompile(`(?i)O\+[ _]360`),
		regexp.MustCompile(`(?i)O\+ Stream HDTV`),
		regexp.MustCompile(`(?i)O\+ FAB GO`),
		regexp.MustCompile(`(?i)Xda|O2[ \-]|COCOON`),
		regexp.MustCompile(`(?i)(Xda[ _][a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(COCOON)`),
		regexp.MustCompile(`(?i)O2-(X[12]i|X4)`),
		regexp.MustCompile(`(?i)O2 ([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)O2-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(TEG9300)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OINOM[_ ](V9D|V7H|V[679])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GEN-10|GT1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OKWU SIGMA|PI[_ ]Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PI[_ ]Plus`),
		regexp.MustCompile(`(?i)OLTO-(43ST20U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OMIX[ _]|(?:X600 NFC|Android 11;(?: [\w-]+;)? X400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X(\d*)`),
		regexp.MustCompile(`(?i)(ONA19TB00[327]|10000356[12]|10000520[6-9]|O8HD|100011886A|10001188[56]|100015685-[AE]|100026191|100043279|100044018G|10007148[1356]|TBBVNC10000520[78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KON_TIKI(2)?|Nova3Color|Lomonosov|Poke2Color|NovaAirC|NoteAir2P?|LIVINGSTONE2|MC_FAUST[23]|DARWIN9|MC_DARWIN[678]|MC_GAMA4|MC_Cristo4|MC_NovaPro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KON_TIKI(2)?`),
		regexp.MustCompile(`(?i)MC_FAUST([23])`),
		regexp.MustCompile(`(?i)(?:MC_)?DARWIN([6789])`),
		regexp.MustCompile(`(?i)(?:OB-)?OPPO[ _]?([a-z0-9]+)|N1T|R8001|R820[16]|A101OP|OPG0[1-4]|A00[12]OP|(?:X90[07][0679]|U70[57]T?|X909T?|R(?:10[01]1|2001|201[07]|6007|7005|7007|80[13579]|81[13579]|82[01379]|83[013]|800[067]|8015|810[679]|811[13]|820[057]|15 Neo)[KLSTW]?|N520[79]|N5117|A33[wf]|A33fw|A37fw?|PAAM00|PAAT00|PAC[TM]00|R7kf|R7plus[fmt]?|A1601|CPH[0-9]{4}|CPH19(69|79|23|1[179])|PB(A[TM]00|CT10|BT30|CM[13]0|[FD]M00)|P(E[RFHG]M\d{2}|E[GH]T\d{2}|DAM10|ADM00|AF[TM]00|ADT00|AHM00|BBM[03]0|BBT00|BDT00|BFT00|[CB]E[MT]00|CA[MT]00|C[CDG]M00|CA[MT]10|[CD]PM00|CRM00|CDT00|CD[TM]10|CHM[013]0|CKM[08]0|CLM[15]0|DEM[13]0|DHM00|D[RK][TM]00|DPT00|DB[TM]00|DCM00|[CD]NM00|DVM00|DY[TM][12]0|DNT00|EA[TM]00|CRT01|EDM00)|PFDM00|PEG[MT]10|PEM[MT][02]0|PDCT00|PDET10|PDS[TM]00|PEC[MT]30|PE[QYPEXNLU]M00|PCHT30|PCRT00|PFGM00|PF[VU]M10|A102OP|PFCM00|PFJM10|PGCM10|PECM20|PDAT10|A103OP|PCCT00|PFTM[12]0|PFFM20|OW19W[123]|OW20W1|PGJM10|PGAM10|PF[EF]M10|Reno[45] Z 5G|Reno5 Pro 5G|Reno[56] 5G|Find X[23]|Find N| R7sf| 1201|[56].*; (?:R7[gf])|OPD210[12]A?|OPD2201|PFZM10|PGIM10|A1603|A201OP|PESM10|PGBM10|PHA120|PGGM10|PHM110|PG[WX]110|PGU110|PHJ110|PCCM40|PHQ110|CHP1723|PGT110|PGEM10|RX17Neo|R15 Dream Mirror|R9 Plustm A|PGFM10|Reno5 K 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCHM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHQ110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCHT30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2083|CPH2077)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2179)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2271)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2185)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCHM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1923(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1925(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH22(?:69|75)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(CPH1837|PAD[TM]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A37f(w)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A37f(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PESM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH20(?:81|73|31|15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2137(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH18(?:0[35]|53)|PBBM30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1809|PBA[TM]00|PBBT30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH19(?:3[13]|43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEC[MT]30|PECM20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDVM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEFM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDA[TM]10|CPH2069|CPH2061)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH(?:2127|213[19])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2135(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2321(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2195|OPG02|CPH2303)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2239|CPH2241)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2273(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEM[MT][02]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2325(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A102OP|CPH2309)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH170[15]|CPH2407)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PFTM20|CPH2387`),
		regexp.MustCompile(`(?i)CPH19(?:09|1[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH190[15]|PBF[TM]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1717(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDY[TM]20|CPH2067)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH(?:2161|2099)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2219(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2263(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDY[TM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1715)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2339|CPH2385)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2495|CPH2483)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2565`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A79kt`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2473`),
		regexp.MustCompile(`(?i)PCD[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PBBT00|PBBM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDBM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1729(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1827(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PCA[TM]10|CPH193[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CPH1937|CPH1941|PCHM30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCPM00|CPH20[02]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2059(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDK[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEH[MT]00|CPH212[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PFGM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2203|CPH2333)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2197)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2365|PELM00`),
		regexp.MustCompile(`(?i)PCE[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1903(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2455|CPH2461`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X9009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH191[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH19(?:69|87)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2095`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2119)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A1601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1613(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH172[37]|CHP1723)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1725(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH18(?:[15]9|21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1825|CPH1881)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1823(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2223(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2285|F19 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2213(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X909T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R827T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X907[067](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X900[067](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PEUM00`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?Find N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGU110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2437|PGT110)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R815[TW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8015(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R821T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?U707T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?U705T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH187[15]|PAF[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PAHM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDE[TM]10|CPH2023)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2005|Find X2 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDEM30|OPG01|CPH2025|Find X2 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEDM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Find X3 Neo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEEM00|CPH2173|OPG03|Find X3 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Find X3 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2307|PFFM10`),
		regexp.MustCompile(`(?i)CPH2305|PFEM10|PFFM20`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R1011 Build`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PBC(?:M30|T10))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1955(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PCNM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PCLM50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PERM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGCM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGGM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PERM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2373`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PGJM10|CPH2337)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGIM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?N5117(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?N520[79](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R831T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R831K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:R831[SL]|1201)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A33[wf](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A33fw(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8113(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R11 Plusk?t?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R8001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R820[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1721|R11s Plust?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1719|R11st?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1835|PAC[TM]00|PAAM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH183[13]|PAAT00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PBCM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1879|PBE[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1893)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1877|PBD[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R800[07](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R810[679](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7kf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7sPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7sf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7[gf](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7Plus[mt]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7Plusf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:X9079|R9 Plustm A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1607|R9sk)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1611|R9s Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1917|PCA[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1983(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1919|PCCM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCKM00|CPH1907)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1989(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCKM80|CPH1945|CPH1951)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2043|PDCT00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2013|A002OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDCM00|A001OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCR[MT]00|CPH203[567]|CPH2009)`),
		regexp.MustCompile(`(?i)PCRT01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2113(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2125(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDP[TM]00|CPH2091)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEA[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDN[TM]00|CPH2089)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2065|Reno4 Z 5G`),
		regexp.MustCompile(`(?i)CPH2209(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2159(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2199|A10[13]OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2205(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEG[MT]00|CPH2145|Reno5 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEG[MT]10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2217(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2211|Reno5 Z 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDS[TM]00|CPH220[17]|Reno5 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDR[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1921|PCCM40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2235|PEQM00|CPH2251|Reno6 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2237(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEPM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH224[79](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PENM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PFJM10|CPH2371|CPH2363`),
		regexp.MustCompile(`(?i)CPH2353|OPG04|A201OP`),
		regexp.MustCompile(`(?i)(?:PFDM00|CPH2293)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH235[79]|PGAM10`),
		regexp.MustCompile(`(?i)CPH2481|CPH2505`),
		regexp.MustCompile(`(?i)(?:PEYM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEXM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCLM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDHM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCGM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1979|PCD[TM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A59st(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPD2102A?`),
		regexp.MustCompile(`(?i)OW19W[13]`),
		regexp.MustCompile(`(?i)N1T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R([0-9]{3,4}[KSTW]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CPH[0-9]{4})`),
		regexp.MustCompile(`(?i)(?:OB-)?OPPO[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:S60Pro|android 12;(?: [\w-]+;)? (?:C80|Pad 10))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (C80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OTTO (CR05)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OUJIA(?:2018)?[-_ ]S20`),
		regexp.MustCompile(`(?i)OUJIA[ _](S10|S8|S11|T50|S2[79]|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OYSIN[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Apex(?:[123])|CC1 PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CC1) PRO`),
		regexp.MustCompile(`(?i)Apex([123])`),
		regexp.MustCompile(`(?i)(Tab_A6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OBA_?(?:SMART_3|Conecta_Max|Conecta_4G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBA_(Conecta_(?:Max|4G))`),
		regexp.MustCompile(`(?i)OBER[_ ](Primo E8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Obi[ _-]|(?:(?:SJ1\.5|SJ2\.6|S(400|452\+|45[13]|50[127]|503\+?|520|55[01])|falcon)|SJ1-5|SJ[23]\.2| SF1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SJ(\d)[.-](\d)`),
		regexp.MustCompile(`(?i)(?:Obi_)?S400`),
		regexp.MustCompile(`(?i)(?:Obi_)?S451|falcon`),
		regexp.MustCompile(`(?i)(?:Obi_)?S452\+`),
		regexp.MustCompile(`(?i)(?:Obi_)?S453`),
		regexp.MustCompile(`(?i)(?:Obi[_ ])?(SF1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Obi_)?S501`),
		regexp.MustCompile(`(?i)(?:Obi_)?S502`),
		regexp.MustCompile(`(?i)(?:Obi_)?S503\+`),
		regexp.MustCompile(`(?i)(?:Obi_)?S503`),
		regexp.MustCompile(`(?i)(?:Obi_)?S507`),
		regexp.MustCompile(`(?i)(?:Obi_)?S520`),
		regexp.MustCompile(`(?i)(?:Obi_)?S550`),
		regexp.MustCompile(`(?i)(?:Obi_)?S551`),
		regexp.MustCompile(`(?i)(?:Obi_)?S454`),
		regexp.MustCompile(`(?i)Obi[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Obi[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:FIRE_V[78]|POMELO-MAX\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIRE_V([78])`),
		regexp.MustCompile(`(?i)POMELO-MAX\+`),
		regexp.MustCompile(`(?i)ODYS[ _-]|IEOS[_ ]([^/;]+)|NOON(?:_PRO)? Build|SPACE10_(?:PLUS|PRO)_3G|THOR_?10|TAO_X10|RAPID_?(?:10|7)_?LTE|MAVEN_?10_|CONNECT[78]|ELEMENT10_PLUS_3G|XELIO[_0-9P]|PACE_10_LTE|(?:ADM816HC|ADM8000KP|NEO6_LTE|EOS10|AEON|FALCON_10_PLUS_3G|SPACE_ONE10|FUSION|THANOS_10|MAVEN_X10_HD(?:_LTE)?|JUNIOR_8_PRO|JuniorT8Pro|(?:NOVA|PYRO)_X?7_PLUS_3G|UNO_X8|MAVEN_[GT]10(?:_pro)?|MAVEN_7_PLUS|SLADE_X55|XELIO_PRO_10_LTE|GOAL_10_PLUS_3G|NOTOSplus3G|PACE ?10|Titan_10_LTE|PEDI_PLUS_W|NoteTab_Pro|UNO_X10|NERON)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XELIO[_ ]HD10[_ ]LTE`),
		regexp.MustCompile(`(?i)XELIO[_ ](HD10|A10)`),
		regexp.MustCompile(`(?i)MAVEN_?10_PRO_PLUS_3G`),
		regexp.MustCompile(`(?i)MAVEN_?10_?PLUS`),
		regexp.MustCompile(`(?i)MAVEN_?10_?PRO`),
		regexp.MustCompile(`(?i)MAVEN_?10_?HD`),
		regexp.MustCompile(`(?i)RAPID_?7_?LTE`),
		regexp.MustCompile(`(?i)RAPID_?10_?LTE`),
		regexp.MustCompile(`(?i)THOR_?10 Build`),
		regexp.MustCompile(`(?i)PACE ?10`),
		regexp.MustCompile(`(?i)UNO[_ ]X(8|10)`),
		regexp.MustCompile(`(?i)THOR_?10_PLUS_3G`),
		regexp.MustCompile(`(?i)IEOS[_ ]QUAD[_ ]W`),
		regexp.MustCompile(`(?i)IEOS[_ ]NEXT[_ ]10`),
		regexp.MustCompile(`(?i)IEOS[_ ]QUAD[_ ]PRO`),
		regexp.MustCompile(`(?i)NEO6[_ ]LTE`),
		regexp.MustCompile(`(?i)IEOS[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:ODYS[ _-])?NOON Build`),
		regexp.MustCompile(`(?i)(?:ODYS[ _-])?NOON_PRO`),
		regexp.MustCompile(`(?i)Odys[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)AFTWI001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Okapia|Signature (?:L|Pro|Touch)`),
		regexp.MustCompile(`(?i)Signature (L|Pro|Touch)`),
		regexp.MustCompile(`(?i)Okapia X1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Okapia[_ ]Mirage(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OK-(?:LS[12]|smart11|LX[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OK-(LS[12]|LX[56])`),
		regexp.MustCompile(`(?i)Olax Prime 12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Olkya (Liger 71G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ollee008twoa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TREK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TREK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onda|(?:(?:V820w|V891[w]?|V919(?: 3G)? Air)[ _-]DualOS|(?:V919 4G Air|V989 Air|V972) Core[48]|T2101L2B1C| V10 4G|OBOOK20[_ ]PLUS|OBOOK (?:20 SE|20 DualOS|20 PLUS(?: DUALOS)?)|OBOOK10 SE|V10_4G|V919 Air CH DualOS| T9S|V116w-DualOS|V80[ _]SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?: T9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONDA[ _]MID`),
		regexp.MustCompile(`(?i)V820w[ _-]DualOS`),
		regexp.MustCompile(`(?i)V891W[ _-]DualOS`),
		regexp.MustCompile(`(?i)V891[ _-]DualOS`),
		regexp.MustCompile(`(?i)V919 3G Air[ _-]DualOS`),
		regexp.MustCompile(`(?i)V919 Air[ _-]DualOS`),
		regexp.MustCompile(`(?i)T2101L2B1C|OBOOK 20 PLUS DUALOS`),
		regexp.MustCompile(`(?i)OBOOK[_ ]?20[_ ]PLUS`),
		regexp.MustCompile(`(?i) V10 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V80[ _]SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK 20 DualOS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK 20 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK10 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V10_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([a-z0-9]+)[ _]Onda`),
		regexp.MustCompile(`(?i)Onda ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)X-music II pro|X-music (?:S|Ⅲ|III)`),
		regexp.MustCompile(`(?i)X-music (?:Ⅲ|III)`),
		regexp.MustCompile(`(?i)X-music (S)`),
		regexp.MustCompile(`(?i)OneLern(DB\d{3})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:du_)?ONEPLUS|(?:PGKM10|CPH2493|CPH244[79]|CPH240[19]|CPH24[12]3|CPH246[579]|CPH2487|CPH241[157]|CPH2419|CPH2459|CPH2399|CPH2381|A0001|A200[135]|AC200[13]|A300[03]|A3010|A5000|A600[03]|A601[03]|BE201[1235]|BE202[5689]|E100[135]|GM191[03517]|GM190[0135]|GM192[05]|HD191[0137]|HD190[01357]|HD1925|IN201[013579]|IN202[0135]|KB200[01357]|LE211[01357]|LE212[035]|GN2200|Nord N10 5G|LE210[01]|LE212[17]|DE211[78]|DN210[13]|EB210[13]|MT211[01]|IV2201|NE221[01357]|PGZ110|PGP110|PHK110|PHB110|PHP110)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:CPH244[79]|PHB110)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2487(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGKM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHK110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHP110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGP110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGZ110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC200[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2399|CPH2401)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EB210[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH(?:2381|2409)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH246[57](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE201[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DE211[78](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GN2200|CPH2459)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2469(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BE202[69]|Nord N10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DN210[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IV2201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN202[0135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KB2000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OnePlus 8 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IN201[01357]|OnePlus 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE211[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MT211[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE210[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2423(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2411(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH241[3579](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE212[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NE2210(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NE221[1357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GM191[01357]|OnePlus 7 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GM190[0135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HD190[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HD191[0137]|OnePlus 7T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HD1925|GM192[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KB200[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KB2007|OnePlus ?8TMO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A200[135]|OnePlus2`),
		regexp.MustCompile(`(?i)E100[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A3010|OnePlus3T`),
		regexp.MustCompile(`(?i)A300[03]|OnePlus3`),
		regexp.MustCompile(`(?i)A5010|OnePlus[ ]?5T`),
		regexp.MustCompile(`(?i)A5000|OnePlus5`),
		regexp.MustCompile(`(?i)A600[03]|OnePlus6`),
		regexp.MustCompile(`(?i)A601[03](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:du_)?ONEPLUS[ _]?([^;/,)(]+)(?: Build|[;,)])`),
		regexp.MustCompile(`(?i)(?:ONIX S405|AT101-1116|ONIX_8_3G_01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT101-1116)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONIX_8_3G_01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S405)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DP-CMX1|TA2C-M8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA2C-M8)`),
		regexp.MustCompile(`(?i)(DP-CMX1)`),
		regexp.MustCompile(`(?i)Opel ?Mobile|(?:OpelMobile_Smart(?:JX|X1)|Easy_Smart_2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Openbox (?:A[34](?: (?:Pro|Lite))?)|AS1_HD|AS_?4K[_-](?:CI(?:_PRO|_Lite)?(?:_PLUS)?|PLUS|2X)|AS_?4K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Openbox (A[34](?: (?:Pro|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS_?4K_CI_PRO`),
		regexp.MustCompile(`(?i)AS_?4K[_-](2X|CI)`),
		regexp.MustCompile(`(?i)AS_?4K[_-]PLUS`),
		regexp.MustCompile(`(?i)AS_?4K`),
		regexp.MustCompile(`(?i)(?:(?:Sigma|Beeta)_4_0|Active 5\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active 5\.0`),
		regexp.MustCompile(`(?i)Opsson|IUSAI`),
		regexp.MustCompile(`(?i)IUSAI[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)IUSAI[ _]([^/;\)]+)[/;\)]`),
		regexp.MustCompile(`(?i)Opsson[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:Opsson-)?Opsson[ -_]([^/;]+)/`),
		regexp.MustCompile(`(?i)Optoma[-_ ]`),
		regexp.MustCompile(`(?i)SPV[ \-]?([a-z0-9]+)|Orange[ _-]([^/;]+)( Build|\))|SC/IHD92|Nura 2|FunTab ([^/;]+) Build|Orange Mahpee|Dive 50|MouveTab7WIFI`),
		regexp.MustCompile(`(?i)FunTab ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Orange[ _-](Rise)(3[12]|5[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Orange[ _-])?Dive ?(\d+) Dual(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Orange[ _-])?Dive ?(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Orange[ _-](Daytona|Dublin|Fova|Gova|Hi 4G|Hiro|Kivo|Monte Carlo|Neva 80|Neva play|Nura|Reyo|Rise[_ ](3[034]|40|5[345])|Rono|Roya|San Francisco|Tactile internet 2|Tado|Yomi|Yumo|Zali|Mahpee|Neva leaf|Sanza touch|Viking L508|Zilo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPV[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:RC(?:2200|501|545|555|608)L|R678EL|R8L5T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(OT-DVB\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Orbsmart[_ ]`),
		regexp.MustCompile(`(?i)Orbsmart[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(LeNumero[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ORION, ([a-z0-9_ \-]+), (?:wired|wireless)|CRANE-EVB`),
		regexp.MustCompile(`(?i)ORION, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(CRANE-EVB)`),
		regexp.MustCompile(`(?i)OUKI|OK[AU][0-9]+[a-z]* Build|OKP6 Pro`),
		regexp.MustCompile(`(?i)OUKI[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)([^;/)]+) Build/OUKI`),
		regexp.MustCompile(`(?i)OUKI[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(OK[AU][0-9]+[a-z]*) Build`),
		regexp.MustCompile(`(?i)OU[Kc]ITEL|(?:Android 10;(?: [\w-]+;)? (?:C19|C22)|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:C11|U23)|Android 11(?:[\d.]*);(?: [\w-]+;)? (?:C25)|Android 12(?:[\d.]*);(?: [\w-]+;)? (?:C32)|Android 7(?:[\d.]*);(?: [\w-]+;)? (?:U1[78]|U22)|(?:C1[569]|K10000|K[46]000)(?:[ _]Pro)|K4000Pro|C1[18]_Pro|C1[0237] Pro|C2[13] Pro|C12 Plus|[UK]15 Pro|K15_Plus|U16 Max|C11_F|U7 Max|U7 Plus|U11[_ ]Plus|U20_Plus|OK6000 Plus|WP5000|WP[58] Pro|K[46]000[ _](?:Plus|Lite)|K9 Pro|Y4800|K10000|K7 Power|K[4-8]000| RT[123]| WP(?:[15-79]|1[02356789]|2[0123])|K[37]_Pro|K13_Pro|U25_Pro|OKT1|UniverseTap)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C1[0-9]|C2[13]|K10000|K[46]000|WP[258]|WP1[28]|WP20|U[12]5|K[379]|K1[35])[ _]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OUKITEL K([37])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K10000|U16|U7)[ _]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U20|K[46]000|U7|U11|OK6000|K15|C12)[_ ]?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K4000)[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K10000)[_ ]Mix(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K7 Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UniverseTap(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Oukitel-)?(Y4800|K10000|K[4-8]000|WP5000|[CU]2|U1[078]|U2[23]|C1[19]|C[23]2|C3|WP15 S|C25)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (RT[123]|OKT1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OUKITEL)? (WP\d+|C11_F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OUKITEL; ([^;]+);`),
		regexp.MustCompile(`(?i)OV-[a-z]+(?:[^;(/]*)[();/ ]|Qualcore 10(?:10|27)|Livecore7032|Vertis 5021 Aim|Vertis 4004 You|OV1027[34]G`),
		regexp.MustCompile(`(?i)OV-Vertis[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)OV(\d+)([34])G`),
		regexp.MustCompile(`(?i)(?:OV-)?Qualcore[-_ ](\d+)[-_ ]([34])G`),
		regexp.MustCompile(`(?i)(OV-[a-z]+(?:[^/();]+))(?: Build|[();])`),
		regexp.MustCompile(`(?i)(?:OWWO[ _]?(?:[1457]S|Q[78])|CARNIVAL B5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OWWO[ _]?([1457]S|Q[78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CARNIVAL B5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Oysters|T84ERI[ _]3G|T72HM(s_)?3G|T102MS_3G|T102ER3G|T72ER3G|(T74HMi|T84Bi)[_ ]4G|T74MR4G|T74RD|T84Ni[_ ][34]G|Pacific(?:[ ]?800i|E)|T104B_[34]G|IndianV|T72HA_3G|T12V? 3G|T74D_3G|T74N_3G|T74SC_3G|T74Mai_3G|T74MRi3G|T104MBi_3G|T104SCi_3G|T104ER4G|Arctic450|Atlantic(?:4G|454|[EV])|AntarcticE|Life4G|T7V 3G|Pacific(?:VS?|I?4G|454)`),
		regexp.MustCompile(`(?i)Pacific[ ]?800i`),
		regexp.MustCompile(`(?i)(?:Oysters[_ ])?Pacific(VS?|I?4G|454)`),
		regexp.MustCompile(`(?i)Atlantic(454|[EV]|4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Arctic(450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AntarcticE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Oysters ((?:Arctic|Indian|Atlantic|Pacific)[^/;]+) Build`),
		regexp.MustCompile(`(?i)(T84ERI[ _]3G|T72HM(s_)?3G|(?:(T74HMi|T84Bi)[_ ]4G)|T84Ni[_ ][34]G)`),
		regexp.MustCompile(`(?i)(T74MR|T102MS|T104B|T74SC|T74[DN]|T72HA|T102ER|T72ER|T104SCi|T104MBi|T104ER|T7V|T12V?|T74MRi)[ _]?([34]G)`),
		regexp.MustCompile(`(?i)(T74RD)`),
		regexp.MustCompile(`(?i)Oysters ([^/;]+)( Build|\))`),
		regexp.MustCompile(`(?i)OYYUT11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ozone HD|OzoneHD[ _](T2 WiFi|4K(?: TV)?|Fun)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-0[143]P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-04P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-03P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-01P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAPYRE[_ ]`),
		regexp.MustCompile(`(?i)PAPYRE[_ ]pad_7.1`),
		regexp.MustCompile(`(?i)Art-PCB-V116|Bee-PCB-V216|Clap-PCB-I316|PCB-T(?:103|715|750)|Kova[ _-]PCB-\w+|Kova_Plus_PCB_T735`),
		regexp.MustCompile(`(?i)PCB-T(715|750)`),
		regexp.MustCompile(`(?i)Kova[ _-]PCB-T730`),
		regexp.MustCompile(`(?i)PH4001|PCD[ _](?:PL5507|PH4002|PH3501|E400)`),
		regexp.MustCompile(`(?i)(?:PCD[ _])?(P[HL]\d{4}|E400)`),
		regexp.MustCompile(`(?i)PCD[ ]?50[689]|PL620(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCD[ ]?(50[689])`),
		regexp.MustCompile(`(?i)(PL620)`),
		regexp.MustCompile(`(?i)PINE ([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)PIRANHA[_ ]|(?:Ultra 4 Tab 9.0|Ultra 5 Tab White)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro II Tab 7.0`),
		regexp.MustCompile(`(?i)Ultra 4 Tab 9.0`),
		regexp.MustCompile(`(?i)(?:POCO[ _](?:X[2-5](?:_SN)?|F2 PRO|M[3245]|M5s|F[35]|F4(?: GT)?|C40|C3)|M2010J19(?:C[GI]|GC)|M2007J20C[ITG]|M2012K11AG|M2006C3MI|M2004J19PI|M2102J20S[GI]|M2103K19P[IGY]|21091116AG|21061110AG|M2104K10I|211033MI|2201117P[GI]|camellian?|2201116P[GI]|21121210G|22031116AI|22021211R[GI]|2204121(?:6U?G|9P[GI])|220333QPG|22071219C[GI]|2207117BPG|22101320[GI]|22111317P[GI]|23013PC75G|23049PCD8G|2305EPCC4G|22127PC95I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCO X2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K11AG|POCO F3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23013PC75G|POCO F5 Pro`),
		regexp.MustCompile(`(?i)23049PCD8G|POCO F5`),
		regexp.MustCompile(`(?i)M2004J19PI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2103K19P[IGY]|M3 Pro 5G|camellian?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCO M([23]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116AG|M4 Pro 5G`),
		regexp.MustCompile(`(?i)22041219P[IG]|POCO M4 5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)22071219C[IG]|POCO M5(?: Build|[;)])`),
		regexp.MustCompile(`(?i)2207117BPG|POCO M5s`),
		regexp.MustCompile(`(?i)2201117P[GI]|POCO M4 Pro`),
		regexp.MustCompile(`(?i)(?:M2010J19C[GI]|POCO M3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J20C[GT]|POCO X3 NFC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2102J20S[GI]|POCO X3 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061110AG|POCO X3 GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J20CI|POCO X3(?:_SN)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041216G|POCO X4 GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22111317P[GI]|POCO X5 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041216UG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101320[GI]|POCO X5 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201116P[GI]|POCO X4 Pro 5G`),
		regexp.MustCompile(`(?i)(?:M2104K10I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21121210G|POCO F4 GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22021211R[GI]|POCO F4`),
		regexp.MustCompile(`(?i)(?:M2006C3MI|POCO C3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:211033MI|22031116AI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:220333QPG|POCO C40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCO F2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X5 GT PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POPTEL|P9000_MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P9000_MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POPTEL K1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KING 7S?)`),
		regexp.MustCompile(`(?i)PRIME (O8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PULID[ _]|F1[01357]\+? Build`),
		regexp.MustCompile(`(?i)F(1[01357]\+?) Build`),
		regexp.MustCompile(`(?i)PULID[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)PULID[ _]([a-z0-9_]+)\)`),
		regexp.MustCompile(`(?i)(PB1009|M10[45]00|M7500|M7600-D|DAYTONA-G12|MONZA-T7|SILVERSTONE-T10|EasyNote TV11HC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PB1009|M10[45]00|M7500|M7600-D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Pre|Pixi)/(\d+)\.(\d+)|Palm|Treo|Xiino|PVG100(?:E_RU|E)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:Pre|Pixi))/(\d+\.\d+)`),
		regexp.MustCompile(`(?i)Palm(?:[ \-])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Treo([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Xiino|Palmscape`),
		regexp.MustCompile(`(?i)Panasonic|PANATV[0-9]+|Viera/|(?:P902i|P-0[28]D|FZ-B2D|FZ-[NX]1|FZ-A2A|DMC-CM1|P-01[JK]|P-0[23]E|P55 Max)(?:[);/ ]|$)|Eluga[ _]|P55 Novo 4G`),
		regexp.MustCompile(`(?i)P-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P-03E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eluga[ _]I7(?:_EE)?`),
		regexp.MustCompile(`(?i)(?:Panasonic_)?Eluga[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Panasonic_)?Eluga[ _-]([^);/]+)[;/)]`),
		regexp.MustCompile(`(?i)(DMC-CM1)`),
		regexp.MustCompile(`(?i)P-02D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FZ-[XN]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FZ-(B2D|A2A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P(\d*) NXT`),
		regexp.MustCompile(`(?i)P902i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PANATV[0-9]+|Viera/`),
		regexp.MustCompile(`(?i)(43D1200|(?:32|43)D1270|32D1280)`),
		regexp.MustCompile(`(?i)PANASONIC, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Panasonic[ _\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 (P[a-z0-9]+)`),
		regexp.MustCompile(`(?i)P-08D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Boom P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Panoramic[_ ](FQ-058/2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pantech|P[GN]-|PT-[a-z0-9]{3,}|TX[T]?[0-9]+|IM-[a-z0-9]+(?:[);/ ]|$)|ADR910L`),
		regexp.MustCompile(`(?i)Pantech[ -]?(P4100)`),
		regexp.MustCompile(`(?i)Pantech[ -]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Pantech_([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(P[GTN]-[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(TX[T]?[0-9]+) Pro`),
		regexp.MustCompile(`(?i)(TX[T]?[0-9]+)`),
		regexp.MustCompile(`(?i)(IM-[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Xplorer_2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EV1 PRO|Partner[_ ]Evolution(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Partner[_ ]Evolution`),
		regexp.MustCompile(`(?i)Pelitt[ _]`),
		regexp.MustCompile(`(?i)Pendoo|A5X MAX(?:[\.-]\w+)?\.01\.d4|(?:PNDP60L10BLK|PNDP60M7PUR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pendoo ?(T95Z|X10) PLUS`),
		regexp.MustCompile(`(?i)Pendoo ?X8PRO+`),
		regexp.MustCompile(`(?i)Pendoo[ \.]?(X9[29]|T95)`),
		regexp.MustCompile(`(?i)A5X MAX(?:[\.-]\w+)?\.01\.d4`),
		regexp.MustCompile(`(?i)(PNDP60L10BLK|PNDP60M7PUR)`),
		regexp.MustCompile(`(?i)Penta[ _]|(?:PS650)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pentagram|Quadra|Monster X5`),
		regexp.MustCompile(`(?i)(?:PENTAGRAM[_ ])?EON[_ ]PRIX`),
		regexp.MustCompile(`(?i)Quadra 7(?: UltraSlim)?`),
		regexp.MustCompile(`(?i)Monster X5?`),
		regexp.MustCompile(`(?i)Quadra ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)Pentagram ?TAB ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)Pentagram ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)(PHICOMM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C630 \(CLUE L\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E653\(ENERGY L\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHICOMM ENERGY 3\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLUE (2S|M|C230)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHILCO |(PCS0[12]|PH350B|PTB[78]R|PTB7PAP_PTB7PAB_PTB7PAR|Hit Max|Hit P1[023]|HIT P8|HIT P10a|TP7A4|TP10A1I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hit (P1[023]|P8)`),
		regexp.MustCompile(`(?i)(PCS0[12]|PH350B|Hit Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PTB[78]R|TP7A4|TP10A1I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHILCO Android TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PTB7PAP_PTB7PAB_PTB7PAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Philips|NETTV/|2020/2021 UHD Android|10BDL4151T|Xenium S[25]66|(?:PI3210G|TPM1[79]1E|70PUH6774_96|QM152E|QM16[134]E|TLE(?:821L|722G)|AND1E|S397|W5510|S410J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(10BDL4151T)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?Xenium[ _](S[25]66|V787)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?(X818|X588)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?(S397|W5510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AND1E(?: TV)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PI3210G)`),
		regexp.MustCompile(`(?i)(TPM1[79]1E)`),
		regexp.MustCompile(`(?i)QM152E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QM16[134]E)`),
		regexp.MustCompile(`(?i)(70PUH6774)_96`),
		regexp.MustCompile(`(?i)(202[01])/(?:20)?(2[12]) (?:Philips )?UHD Android`),
		regexp.MustCompile(`(?i)(TLE821L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TLE722G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S410J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Philips, BDP([0-9]{4})`),
		regexp.MustCompile(`(?i)Philips, ([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)(NETTV/[0-9\.]{5})`),
		regexp.MustCompile(`(?i)Philips-FISIO ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Philips[ _-]?([a-z0-9\-@]+)`),
		regexp.MustCompile(`(?i)(?:PHONEMAX[_ ](?:Saturn(?:[_ ]X)?|Mars|Venus X)|Rocky 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Saturn[_ ]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Saturn(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Mars(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Venus X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rocky 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pipo[_ ]|PipoM9Pro`),
		regexp.MustCompile(`(?i)Pipo[_ ]([TP]9)`),
		regexp.MustCompile(`(?i)PIPO[_ ](X10|X9S)`),
		regexp.MustCompile(`(?i)Pico (G2 4K|Neo 3|4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pioneer|.*; R1 Build|(?:dvr700pi|XDP-300R|F9212[AB]|SDA-835TAB|SDA-80TAB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i).*; R1 Build`),
		regexp.MustCompile(`(?i)(XDP-300R)`),
		regexp.MustCompile(`(?i)(F9212[AB]|SDA-835TAB|SDA-80TAB)`),
		regexp.MustCompile(`(?i)Pioneer, ?([a-z0-9_ \-]+), ?(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Pioneer[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Pioneer[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)PIONEER COMPUTERS (DreamBook)`),
		regexp.MustCompile(`(?i)Infineum[_ ](Z4?5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixelphone S1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixus|(hiPower|Touch_7_3G|Ride[_ ][34]G|Play[ _]Three[ _]v(?:[234].0|3.1))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ride[_ ]([34])G`),
		regexp.MustCompile(`(?i)Play[ _]Three[ _]v([234].0|3.1)`),
		regexp.MustCompile(`(?i)Pixus[ _]Sprint`),
		regexp.MustCompile(`(?i)(?:Pixus_)?Touch[ _]7[ _]3G`),
		regexp.MustCompile(`(?i)Pixus[ _]hiMax`),
		regexp.MustCompile(`(?i)Pixus[ _]Blast`),
		regexp.MustCompile(`(?i)Pixus[ _]Joker`),
		regexp.MustCompile(`(?i)Pixus Blaze 10.1 3G`),
		regexp.MustCompile(`(?i)(?:Cosmo_Communicator|Gemini_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cosmo_Communicator)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Gemini_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PLT-[12]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOMO([0-9]|[ ]?mini[ ]?(?:S|3GS)?)`),
		regexp.MustCompile(`(?i)MOMO([0-9][^);/]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)PLUM[ _]|(?:Z51[89])(?:[);/]|$)`),
		regexp.MustCompile(`(?i)PS_TAB_(WB01)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Pluzz[_-](Z552|PL5[05]10|PL4010|PL501[46]|Elite_Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook[ _/]`),
		regexp.MustCompile(`(?i)A7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A10 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURFpad2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook SURFpad 3 \(([\d]+).([\d]+)["]?\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURFpad 4 ([LMS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook/(515|614|62[23467]|63[012]|64[01]|650|740|801|840|970)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POV_TV|POV_TAB|MOB-5045|TAB-P10232-3G`),
		regexp.MustCompile(`(?i)POV_TAB[_-]NAVI7[_-]3G[_-]M`),
		regexp.MustCompile(`(?i)POV_TAB-PROTAB25XXL8?`),
		regexp.MustCompile(`(?i)POV_TAB-PROTAB([a-z0-9]+)`),
		regexp.MustCompile(`(?i)POV_TAB-P?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Polar(?:_WK?)?[_ ](P32L32T2CSM|P24L51T2CSM|P40L33T2CSM|P43U51T2SCSM|P39L21T2CSM|P32L21T2SCSM|P65U51T2CSM|P42L21T2CSM|P50U51T2SCSM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PolarLine[_ ](?:W?K?[_ ])?(24PL51TC-SM|32PL1[34]TC-SM|40PL(?:52|11)TC-SM|55PU11TC-SM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Polaroid|POLPAROID|(?:PMID|MIDC)[0-9a-z]+(?:[);/ ]|$)|MID(?:1014|0714)|PRO[VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z])|(?:P(?:400[56]|4526|500[56]|502[56]|504[67]|552[56])A|P902/A900|PSPC(?:505|550|[MZL]20A0|K2[01]NA)|SIGMA 5|MIDI109PDE|MIDI156PDE|MIDB1048PHE|MIDS145PXE|MIDS747PX|MID4004JBL|MIDS185PR|PSPTD21NA|POMDTB00[56]|PSPCL30A0|PSN-H116|BDL0232PR|Mobility3G|BDL1064PR001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PSPC(505|550)`),
		regexp.MustCompile(`(?i)PRO4611(?:PR201)?`),
		regexp.MustCompile(`(?i)SIGMA 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO([VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z]))`),
		regexp.MustCompile(`(?i)POLAROID, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)MIDS185PR|POLPAROID PURE`),
		regexp.MustCompile(`(?i)(MID(?:1014|0714|S145PXE|S747PX|4004JBL|B1048PHE|I109PDE|I156PDE)|POMDTB00[56]|BDL0232PR|BDL1064PR001)`),
		regexp.MustCompile(`(?i)((?:PMID|MIDC)[0-9a-z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P902/A900)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Polestar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POLY ?PAD`),
		regexp.MustCompile(`(?i)POLY ?PAD[_ \.]([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POLY ?PAD[_\.]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)POLYTRON|W8480|W7430|PW1100S|W7550|W7531|W8570|R2401|R255B`),
		regexp.MustCompile(`(?i)POLYTRON[ _]R1500`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2402`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2403`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2406`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2407`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2452`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2457`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2501`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2507`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2509SE`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2509`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R250A`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2506`),
		regexp.MustCompile(`(?i)POLYTRON[ _-](?:R3450|W1400)`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R3500`),
		regexp.MustCompile(`(?i)POLYTRON[ _]L501`),
		regexp.MustCompile(`(?i)POLYTRON[ _]P520`),
		regexp.MustCompile(`(?i)POLYTRON[ _]P552`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G501`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G502`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G503`),
		regexp.MustCompile(`(?i)POLYTRON[_ ]?[ _]4G550`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G551`),
		regexp.MustCompile(`(?i)POLYTRON[ _]T7800`),
		regexp.MustCompile(`(?i)POLYTRON[ _]T7700`),
		regexp.MustCompile(`(?i)POMP[ _-]`),
		regexp.MustCompile(`(?i)POMP[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)POMP[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:YPY_S450|Twist 4(?: Fit|Pro)?|Twist 4G|T1085|Positivo (?:Q20|Slim)|M10 4G PRO X|UP 32|YOLO|Android 4([\d.]*);(?: [\w-]+;)? X400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Positivo (Q20|Slim)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 4 (Fit|Pro)`),
		regexp.MustCompile(`(?i)(?:T1060B|S455|Positivo (?:Twist|Ypy|Mini I)|Twist[ _](?:\(2018\)|2 (?:Fit|Pro)|Mini|Tab|Metal(?: 32GB)?|Max|XL|SE|[23SM])|KC770|G1101T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S455(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist \(2018\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Metal 32GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Metal(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist[ _]Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Fit(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist XL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Positivo )?Twist ([23SM])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Positivo )Mini I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T1060B|KC770|G1101T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Positivo Ypy (AB7F|AB10H|L1050E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Tab(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MAXI 20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AXE_II|186HS2080531|186HS1050531|186HS1050232|186FT1080231|185FT5050231|X70-2021|PREMIO[ _](?:S50|P420|P451)|Android 8(?:[\d.]*);(?: [\w-]+;)? Axe)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PREMIO[ _](S50|P420|P451)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prestigio 5500 DUO|(?:PMP|PAP|PMT|PSP|PGPS)[0-9]+[a-z0-9_]+(?:[);/ ]|$)|Muze C3|PTV50SS04X_CIS_BK|PTV32SS08Z|PTV40SS04Y_CIS_ML|PTV32SS04Z_CIS_(?:ML|BK)|SILVER POS|PAB4411`),
		regexp.MustCompile(`(?i)P[AS]P(5517|5503|550[578])DUO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAP(7500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Muze C3|PSP3504DUO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGPS7799CIS08GBPG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGPS7797(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PMT(3118|38[74]8|3[123]01|3[12]57|778[18]|4[789]91|5588|5718|5791|577[18]|4327|3768)[_ ]([34])G`),
		regexp.MustCompile(`(?i)PMT(1177|3208|3618|31[357]1|1157|1196|3[10]96|3[17]61|3407)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PMT(1107|3[456]37|3[34]27|3317|4638|4311|413[17]|411[178]|3771)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PMT(3231|37[01]8|4231|4667|38[3678]1)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PSP7546DUO([ _][A-Z]{2})?`),
		regexp.MustCompile(`(?i)PSP7610DUO([ _][A-Z]{2})?`),
		regexp.MustCompile(`(?i)PTV(\w+)_CIS_(ML|BK)`),
		regexp.MustCompile(`(?i)(PAB4411)`),
		regexp.MustCompile(`(?i)(PTV32SS08Z)`),
		regexp.MustCompile(`(?i)(PM[PT][0-9]+[a-z0-9_]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:PAP|PSP)[0-9]+[a-z0-9_]+(?: DUO)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PD\-(3127NC|3127) Build`),
		regexp.MustCompile(`(?i)PD\-3127NC Build`),
		regexp.MustCompile(`(?i)PD\-3127 Build`),
		regexp.MustCompile(`(?i)Primux|SirocoY|Omega6_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_ioxphone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxDelta6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxKappa(P50[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxKappa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_Beta2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_?Omega([57])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Omega6_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxUP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) PrimuxZonda4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_Siroco6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SirocoY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pritom_|(?:K7_A101(?:_EEA)?|Android 1[01];(?: [\w-]+;)? (?:M10_Lite|M10_(?:PLUS|Air)(?:_EEA)?|P7_EEA)|P7PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pritom[_ ]M10`),
		regexp.MustCompile(`(?i)(?:T1700Q-)?PRIXTON|(T7012Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRIXTON (C18)`),
		regexp.MustCompile(`(?i)(T701[24]Q|T1700Q)`),
		regexp.MustCompile(`(?i)PLT([^;/]+) Build|PLT(?:777[045]|9774|1074|9999)G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLT([^;/]+) Build`),
		regexp.MustCompile(`(?i)PLT(777[045]|9774|1074|9999)G`),
		regexp.MustCompile(`(?i)ProVision (S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Proline_|(?:H10882M-TN|H1088[28]M|H1010|M504)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Proline[_ ]FalconXL`),
		regexp.MustCompile(`(?i)(H10882M-TN|H1088[28]M|H1010)`),
		regexp.MustCompile(`(?i)(MPC-(?:[57]0|65|100)|MPC-110DSP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PROTRULY[ _](D[78]|V10S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Punos (10)`),
		regexp.MustCompile(`(?i)QBOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qtouch_|[ ](Q09|QS701|Q0[15]A|QS31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Qtouch[_ ])?[ ]?(Q09|QS701|Q0[15]A|Q85|QS31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QPHONE[_ ](?:10.1|9.[12]|7.1|5.[246])|QTAB10EW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QPHONE[_ ](?:10.1|9.[12]|7.1|5.[246]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TLW-100[BG]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Scepter[ _]8(?: Tablet)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Scepter[ _]8)`),
		regexp.MustCompile(`(?i)QMobile|QTab|Q-?Smart|(?:Mark [25]|E2 Noir|Noir[ _](A[18]|X1S)|LUNA PRO|NICE S|JazzX JS(?:[27]|10)(?: PRO)?|LT[57]00[ _]PRO|LT950|Infinity (?:Cinema 2|triple|santos|Prime 2)|Q Infinity|Hot 5|Hot Pro 2|VITA S|i7i 2020|i10[ _]20(?:20|19)|V2 2018|Z12 PRO|Smart HD Pro|V[67]_Metal|Rocket (?:Lite|Pro)| GLi|i6i 2020|Android 6(?:[\d.]*);(?: [\w-]+;)? (?:J5|S2 Pro|J7 PRO|M350 Pro)|Android 5(?:[\d.]*);(?: [\w-]+;)? Z9 Plus|i8i Dual|View Max Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JazzX JS(2|10)`),
		regexp.MustCompile(`(?i)Noir[ _](A[18]|X1S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A600(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(J7|S2) Pro`),
		regexp.MustCompile(`(?i)LT([57]00)[ _]PRO`),
		regexp.MustCompile(`(?i)V([67])_Metal`),
		regexp.MustCompile(`(?i)i(\d+)i 20(20|1[89])`),
		regexp.MustCompile(`(?i)i10[ _]20(20|19)`),
		regexp.MustCompile(`(?i)Mark ([25])`),
		regexp.MustCompile(`(?i)QSmart (X[124]0)`),
		regexp.MustCompile(`(?i)Q Infinity ([FCB])`),
		regexp.MustCompile(`(?i) (LT950|J5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLi Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) GLi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QMobile ENERGY (X[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QTab[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)QTab[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:QMobile|Q-?Smart)[ _-]([^;/)]+) Plus(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:QMobile|Q-?Smart)[ _-]([^;/)]+) PRO(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:QMobile|Q-?Smart)[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:QMP_K8| QMP-M1-N-IP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QMP[_-](K8|M1)`),
		regexp.MustCompile(`(?i)Qilive [0-9][^;/]*|Q(7S5[5]?IN4G|T19101|T21101|7T10INP|T19101HV|8T10IN|8S55IN4G2|8S[56]IN4G|9T9IN|9T(?:7|10)IN4G|9S55IN4G|10S5[37]IN4G|10S[56]IN4G|10S[56]IN4GR|9S5IN4G|6T7IN)`),
		regexp.MustCompile(`(?i)Q10S5IN4G[R]?`),
		regexp.MustCompile(`(?i)(QT19101HV|QT19101)`),
		regexp.MustCompile(`(?i)Qilive (1\d+[^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Qilive ([0-5][^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Qilive ([0-5]*)/`),
		regexp.MustCompile(`(?i)Qilive ([6-9][^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i) Passion[ _]P|Hynex plus|Stark K1|Hynex H[356]|Levin V[12]|Aston A[357]\+`),
		regexp.MustCompile(`(?i)Passion[ _](P[0-9]+)`),
		regexp.MustCompile(`(?i)Hynex plus( 2)?`),
		regexp.MustCompile(`(?i)Hynex (H[356])\+`),
		regexp.MustCompile(`(?i)Hynex (H[35])`),
		regexp.MustCompile(`(?i)Levin (V[12])`),
		regexp.MustCompile(`(?i)Aston A([357])\+`),
		regexp.MustCompile(`(?i)Qtek[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:Quantum (?:Fit|Five|Fly|UP|MUV (?:PRO|UP)|Go|Mini|M|V|You [2E])|GO 2|Q20|LIO\+|Q-TITANO(_007i|-H2)?|Q-Pulse70M|Q-Wave(?:101|71M))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum (Fit|Five|Go|Mini|[MV]|Fly|You [2E]|Q20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum MUV PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum MUV UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-TITANO[ _-](BOS|X|M1|007i|H[12]|AK47)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Pulse70M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Wave(101|71M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quatro (8|10|FSM1453)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Cronos|MINERVA(?:_32GB)?|X668_64GB|X626_4G|Hermes)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MINERVA(?:_32GB)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X668_64GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cronos|Hermes|X626_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RAPTOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TINKU LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TINKU LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUMO[ _]?|(?:Quest[ _]?(?:408|410|45[56]|50[679])|Vega[ _]?78[23]|Sirius[ _]?(?:1001|890))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _]?)?Vega[ _]?(78[23]|8002)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Yooda(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sirius[ _]?(1001|890)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _]?)?(Sirius 101-4G 8GB Black|Altair 701 8GB Black|Altair 71 4GB Black|Altair 700[24]|Altair 70[16]|Vega_803i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _])?Quest[ _]?(35[34]|40[268]|410|45[2568]|47[46]|50[679]|5[137]0|574|600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QW[ _-]TB-\w+`),
		regexp.MustCompile(`(?i)QW[ _-](TB-\w+)`),
		regexp.MustCompile(`(?i)R-TV BOX[ _]?(MINI\+|X99|X10 PRO|[RXS]10)`),
		regexp.MustCompile(`(?i)RCT([^;/]+) Build|RCA RLTP4028|RLTP5567|RLTP5573|RC7T3G21|RCT6B06P23|RCT6613W23P|RCT6513W87|DRP(?:29101|2091)|RCT6973W43(?:MD)?|RCT6703W12|RCT(?:6A06P22|6603W47M7|6303W87(?:DK|M)|6773W22B|6203W46L|6873W42B?M|6K03W13|6876Q22N|6A06Q22)`),
		regexp.MustCompile(`(?i)(?:RCA[ _])?(RLTP4028|RLTP5567|RLTP5573)`),
		regexp.MustCompile(`(?i)RCT6873W42M|RCT6876Q22N?|RCT6873W42BMF9E`),
		regexp.MustCompile(`(?i)RCT6973W43(?:MD)?`),
		regexp.MustCompile(`(?i)RCT6703W12|RCT6B06P23`),
		regexp.MustCompile(`(?i)RCT(?:6303W87(?:DK|M)|6K03W13)`),
		regexp.MustCompile(`(?i)(DRP29101|DRP2091)`),
		regexp.MustCompile(`(?i)RCT([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)RC([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:H1A1000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Regal (TAB 10\.1)`),
		regexp.MustCompile(`(?i)BB10;|BlackBerry|rim[0-9]+|PlayBook|STV100-[1234]|STH100-[12]|BBA100-[12]|BBB100-[1234567]|BBD100-[126]|BB[EF]100-[123456789]|BB[CGH]100-1`),
		regexp.MustCompile(`(?i)BBA100-[12]`),
		regexp.MustCompile(`(?i)BBB100-[1234567]`),
		regexp.MustCompile(`(?i)BBD100-[126]`),
		regexp.MustCompile(`(?i)BBE100-[123456789]`),
		regexp.MustCompile(`(?i)BBF100-[1234567]`),
		regexp.MustCompile(`(?i)(?:BlackBerry )?(9000|9790)`),
		regexp.MustCompile(`(?i)STV100-[1234]`),
		regexp.MustCompile(`(?i)STH100-[12]`),
		regexp.MustCompile(`(?i)BB10; ([a-z0-9\- ]+)\)`),
		regexp.MustCompile(`(?i)PlayBook.+RIM Tablet OS`),
		regexp.MustCompile(`(?i)BlackBerry(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)rim([0-9]+)`),
		regexp.MustCompile(`(?i)(8520|8530|9220|9320|9360)`),
		regexp.MustCompile(`(?i)(9800|9860)`),
		regexp.MustCompile(`(?i)FORTIUS QUAD 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ROiK ?(10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Shock ?(?:5|5\.5)|popper2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Shock ?(5\.5|5)`),
		regexp.MustCompile(`(?i)(?:ZR01|3917JR|P710|C330)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ramos ?([^/);]+)(?: Build|[);])|(?:MOS1(?:max)?|W22PRO 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ramos[ _])?(R10|R9|M7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MOS1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ramos ?([^/;]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Raspberry (Pi [0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RAVOZ[ _](Z[357] (?:Lite|Pro)|Z[3-7]|R[4789]|V[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XPOWER_P6000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Allure[_ ](?:Ultra(?:[_]Curve)?|Secure|Admire|Rise)|Opulent X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Readboy[ _-]`),
		regexp.MustCompile(`(?i)Readboy[ _-]C18Max`),
		regexp.MustCompile(`(?i)Readboy[ _-]C(\d+)Pro`),
		regexp.MustCompile(`(?i)Readboy[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Realme[ _]|(?:RMX(?:18(0[13579]|11|3[13]|2[1257]|[45]1|53|45)|19(03|4[1235]|19|9[23]|2[1579]|[01379]1|73)|20(?:[025-7]1|42|[0357]2|03|2[257]|63|7[56]|63L1|8[1356]|[2-5]0)|21(?:0[13]|1[27]|[12]1|4[24]|5[156]|6[13]|7[036]|8[0359]|9[345])|220[0125]|30(?:[3468]1|4[23]|9[23]|63|85)|31(?:15|2[125]|42|51|6[16]|71|9[1357])|32(?:0[13]|35|42|[346]1|6[0235689]|86)|33(?:[0157]0|[17]2|71|6[036]|[0186]1|57|88|9[12356])|34(?:30|78|[69]1|[67]2|7[145]|9[23])|35(?:0[1236]|1[1367]|21|[578]1|6[0123]|7[24])|36(?:1[01257]|[39]0|2[347]|8[67]|6[013])|370[0689]|37[146]0|37[47]1|3830)|(?:OPPO[ _]?)?CPH1861|RMP210[235-8]|4K Google TV Stick)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX370[68]`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?RMX3142(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1861(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX180[59]`),
		regexp.MustCompile(`(?i)RMX180[137]`),
		regexp.MustCompile(`(?i)RMX(1833|182[125])`),
		regexp.MustCompile(`(?i)RMX185[13]`),
		regexp.MustCompile(`(?i)RMX190[13]|Realme X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX199[12]`),
		regexp.MustCompile(`(?i)RMX1931|Realme X2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2176(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2121(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX1921|Realme XT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX19(1[19]|27)`),
		regexp.MustCompile(`(?i)RMX197[13]`),
		regexp.MustCompile(`(?i)RMX203[02]`),
		regexp.MustCompile(`(?i)RMX200[13]`),
		regexp.MustCompile(`(?i)RMX204[02]`),
		regexp.MustCompile(`(?i)RMX206[13](?:L1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX215[15]`),
		regexp.MustCompile(`(?i)RMX3151|Realme 8i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX349[123]`),
		regexp.MustCompile(`(?i)RMX3388|RMX3474`),
		regexp.MustCompile(`(?i)RMX339[23]`),
		regexp.MustCompile(`(?i)RMX347[12]`),
		regexp.MustCompile(`(?i)RMX36(?:30|15)`),
		regexp.MustCompile(`(?i)RMX366[01]`),
		regexp.MustCompile(`(?i)RMX368[67]`),
		regexp.MustCompile(`(?i)RMX1925(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX1811(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX194[1235](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RMX202[1207]|Realme G70 Series)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2185(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2189(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX218[03](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX219[45](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX306[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX320[13]`),
		regexp.MustCompile(`(?i)RMX326[123]`),
		regexp.MustCompile(`(?i)RMX319[13]|realme C25 Series`),
		regexp.MustCompile(`(?i)RMX319[57]`),
		regexp.MustCompile(`(?i)RMX326[589]`),
		regexp.MustCompile(`(?i)RMX350[123]`),
		regexp.MustCompile(`(?i)RMX(?:3581|3623)`),
		regexp.MustCompile(`(?i)RMX362[47]`),
		regexp.MustCompile(`(?i)RMX351[13]`),
		regexp.MustCompile(`(?i)RMX330[01]`),
		regexp.MustCompile(`(?i)RMX331[012]`),
		regexp.MustCompile(`(?i)RMX3031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX356[012](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3563(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3371(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3357(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX336[0136]`),
		regexp.MustCompile(`(?i)RMX3350(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX216[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX351[67]`),
		regexp.MustCompile(`(?i)RMX1831(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX(?:20(?:51|[2]5)|2144)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2052(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX207[56](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2072(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX(2142|2081)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX208[56]`),
		regexp.MustCompile(`(?i)RMX346[12]`),
		regexp.MustCompile(`(?i)RMX211[12]`),
		regexp.MustCompile(`(?i)RMX220[01]`),
		regexp.MustCompile(`(?i)RMX312[12]`),
		regexp.MustCompile(`(?i)RMX304[123]`),
		regexp.MustCompile(`(?i)RMX309[23]`),
		regexp.MustCompile(`(?i)RMX361[01]`),
		regexp.MustCompile(`(?i)Realme[ _]([1-9])[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP210[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP210[78]`),
		regexp.MustCompile(`(?i)RMP210[56](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Space_M10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(i-Jupiter)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Wizpad_)?Valuer_V8`),
		regexp.MustCompile(`(?i)(?:Wizpad_)?Valuer_V8`),
		regexp.MustCompile(`(?i)(?:Redway_7|redway7_pro|redway10_lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:reeder[_ ](?:3G_Tablet|A7iC|A[78]i[_ ]Quad|A8i Q2|M8 Plus|[TM]8|M10 Plus|P11SE|M7_Go)|M8_Go|M10SPlus|P12Curve|M10 Pro LTE|M10 Blue Max|P13_Blue_Plus|P13_Max_Blue|P13[_ ]Blue[_ ]Ma(?:ks|x|xL)|P13_Blue|P13 Blue 202[12]|M7Plus|A8i-Q2|M7Go_2019|M10 GO|S19 Max 64GB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)reeder[_ ](3G_Tablet|A7iC|A[78]i[_ ]Quad|A8i Q2|M8 Plus|[TM]8|M10 Plus|P11SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:reeder_)?(?:M7Go_2019|M7_Go)`),
		regexp.MustCompile(`(?i)(?:reeder_)?(M8|M10)[_ ]Go`),
		regexp.MustCompile(`(?i)P13 Blue 202([12])`),
		regexp.MustCompile(`(?i)P13 Blue MaxL? 202([012])`),
		regexp.MustCompile(`(?i)P13[_ ]Blue[_ ]Max|P13_Max_Blue`),
		regexp.MustCompile(`(?i)RelNAT[_ ](Premier)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RD(?:16Q|86E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RD(16Q|86E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Revo[_ ](?:Youplus|555)|RevoYou`),
		regexp.MustCompile(`(?i)Revo[ _]?(You|555)`),
		regexp.MustCompile(`(?i)(?:S6523(?:[ _]RU)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RKM[_ ])?MK(902II|902|80[28][^/;]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Rinno (R(?:400|505))`),
		regexp.MustCompile(`(?i)(RMD[-_](?:10(?:2[689]|30|5[089])|1121|75[017]|726|85[57]|870)|RMP-(?:450|50[56]|530|600))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMD[-_](10(?:2[689]|30|5[089])|1121|75[017]|726|85[57]|870)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP[-_](450|50[56]|530|600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RITZVIVA[_ ]S500C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIVIERA[ _]`),
		regexp.MustCompile(`(?i)RIVIERA[ _](F23|U963)`),
		regexp.MustCompile(`(?i)PHANTOM (?:PZ|RX)|RHYTHM[ _]RX|(?:STORM_S8(?: ?plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHANTOM PZ ?(2[05]|[13]5|4|18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHANTOM RX ?(298|387)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RHYTHM[ _]RX ?([15-9]0|[467]5|[12]80|150|[14]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NovaTab_R10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ROAM[_ ]CAT[ _](M8)`),
		regexp.MustCompile(`(?i)IO (?:Pro|3D|Light)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Roku(?:OS|4640X)?/(?:DVP|Pluto)?-?|QSP; Roku`),
		regexp.MustCompile(`(?i)Rombica[_ ]|(SSQ-A0500|Smart Box v[0-9]+|Smart Box (?:[ABCDXYZ]1|[GDFQ]2|[AF]3|H4))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SSQ-A0500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Rombica[_ ])?Cinema4K_v01`),
		regexp.MustCompile(`(?i)(Infinity K8|Smart Box (?:Q1|v00[3-9]|Quad|Ultra HD v002|4K V001|[ABCDXYZ]1|[AGDFQL]2|[AF]3|H4)|TV (?:Ultima|Fly)|Smart Stick Pro|TV Mercury|TV Air)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RM(D)?[-_](974R|600|550|790)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rover ([0-9]+)`),
		regexp.MustCompile(`(?i)(?:Rover[ ]?Pad|RoverPhone|(?:Air|Art|Sky) 7.85 3G|Pro_Q(?:8|10)_LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RoverPhone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro_Q(8|10)_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Rover[ ]?Pad)?sky 7.85(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Air|Art) 7.85 3G`),
		regexp.MustCompile(`(?i)RoverPad (10.4|Air S70|9.7 3G|Sky 9.7|3W A73|3W7|3WT70|3W9.4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RQ[ -](Regal R8|713S|712|768)|Bishop-RQ451)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RQ (Regal R8)`),
		regexp.MustCompile(`(?i)RQ-(713S|712|768)`),
		regexp.MustCompile(`(?i)(?:RugGear|RG(?:310|500|65[05]|702|7[13]0|850)|RG725)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RG[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FieldPad 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FieldPad 8)`),
		regexp.MustCompile(`(?i)Rhino-Quest(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rhino-Quest(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ruio[ _]|(?:M671M4|i7Plus|S5[05]06|S518)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ruio[ _](S4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ruio[ _])?(S5|i7)Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S5[05]06|S518)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Runbo|F1-TT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Runbo[ _-]?(X5-W|F1 Plus|[PF]1-TT|F1-EN|[FH]1|TT|Q5-S|X5-King|X6|Q5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RYTE U55 LTE|RT701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RYTE (U55 LTE)`),
		regexp.MustCompile(`(?i)(RT701)`),
		regexp.MustCompile(`(?i)S-TELL|(?:M630|M55[78]|P760|P750i|M555i|M580|M457|M655)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P760|P750i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S-TELL[ _])?M([0-9]{3}|555i|M580|M655)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S2TEL[ _-]`),
		regexp.MustCompile(`(?i)S2TEL-(Q8)`),
		regexp.MustCompile(`(?i)(S2[23])_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEEWO[ _](SD02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GO[35]E|5101J|GO3C(?: Plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5101J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO3C Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO3C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GO[35]E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem|StarTab|(?:Android 8(?:[\d.]*);(?: [\w-]+;)? (?:AURA (?:PLUS|ULTRA)|AURA))(?: Build|[;)])`),
		regexp.MustCompile(`(?i)StarXtrem II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarXtrem ?([3-6])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarXtrem(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail[ _]?([1-9])[ _]([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail[ _]?([1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURA PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aura ULTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT 6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT II Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarText II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarText(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarNaute II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARNAUTE ?([1-4])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarNaute(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem)[^;/]*) Build`),
		regexp.MustCompile(`(?i)SGIN_X10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BHX-UH200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Modern[ _](?:S10?|S[3679]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LYNX_LUXE|Hyper X Dragon|HYPER X BLADE(?: II)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Atractivo|SmartabS4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Atractivo)`),
		regexp.MustCompile(`(?i)SNAMI[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)SOLE[_ ]POP[_ ]S([45]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOLO[_ ](?:Aspire(?: M)?)|Inspire_U5(?:_PLUS)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOLO[_ ](Aspire(?: M)?))`),
		regexp.MustCompile(`(?i)(?:GRAVITY [34]G(?:_2019)?|GRAVITY2-4G|GRAVITY_OCTACORE|GRAVITY[ -](?:Max|SE|PRO|2-MAX|2)|SPC (?:GEN|SMART)|SPC_ALIEN(?:_STICK)?|SPC Glow9.7|Lightyear|Laika|L70_Lite|L60 Turbo|L60 Pro|FLOW 7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRAVITY ([34])G_2019`),
		regexp.MustCompile(`(?i)GRAVITY ([34])G`),
		regexp.MustCompile(`(?i)GRAVITY 2|GRAVITY2-4G`),
		regexp.MustCompile(`(?i)SPC Glow9.7`),
		regexp.MustCompile(`(?i)(L60 Turbo|L60 Pro)`),
		regexp.MustCompile(`(?i)(?: K700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SQOOL-V(41?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y777_Fire)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AERIAL(?: PLUS)?|BLOCK_MINI|BLOCK GO|BLOCK 3|Fractal|Joy Pro|Origins Pro|SLAY II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STG[ _](A[12] Pro|[AS]1|X[1-3]|X20|S[1-3]0|[BCP]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK[_ ]|(?:Storm 2e Pluz|Life 7S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK[_ ]Transporter[_ ]1`),
		regexp.MustCompile(`(?i)STK[_ ]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)STK[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)LEAP-S1|SH6B7CE_EU012`),
		regexp.MustCompile(`(?i)(SH6B7CE)_(EU012)`),
		regexp.MustCompile(`(?i)SUNWIND[_ ]|SUN[-_]LED\d+|(?:SKY 9 [EA]\d+ 3G|Sky (?:1262C|1123B|7143B|8244B|8421D|1430D) [43]G|SKY Kids 70 SS7238PG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY ([79]) ([EA]\d+) 3G`),
		regexp.MustCompile(`(?i)Sky (\d{4}[BCD]) ([34])G`),
		regexp.MustCompile(`(?i)SUN[-_]LED(\d+\w{1,2}\d+)`),
		regexp.MustCompile(`(?i)(?:SCHR9G[RL]|PRA(?:U8|100|557|507)|ZUR(?:722M|70016W?|700[RW]|805A))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCHR9G[RL]`),
		regexp.MustCompile(`(?i)PRA(U8|100|557|507)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZUR(70016W?|700[RW]|805A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Young (Y56|Y36\+|Y[35]5|Y51\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEON[_ ]RAY|(?:NEON_NOVA|NEON PLUS|NEON PLUS|NEON LITE|Neon Storm|SFCSTB2LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SAGEM|portalmmm/2.0 (?:SG|my)`),
		regexp.MustCompile(`(?i)SAGEM-(my[a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)SAGEM ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAGEM-([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 ((?:SG|my)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)Sagemcom_Broadband_SAS,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:STS5[57]0|STS502)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(STS5[57]0)`),
		regexp.MustCompile(`(?i)(STS502)`),
		regexp.MustCompile(`(?i)SAMSUNG|FamilyHub|Maple |Gear Live|(?:SEC_)?SC-(?:001|01[EFGHKLM]|02[CGHJKLMF]|03[EFJKL]|04[EFJLG]|05[GL]|(?:4[12]|5[1-4])A|5[1-5]B|5[1-5]C|56C)|N[57]100|N5110|N9100|S(?:CH|GH|PH|EC|AM|HV|HW|M)-|SMART-TV|GT-|Galaxy|(?:portalmmm|o2imode)/2\.0 [SZ]|sam[rua]|beyond[02]q?|crownq?lte|vollo Vi86(?:[);/ ]|$)|(?:lineage_|aokp_|rr_)?(?:serranoltexx|j5y17lte|Santos103G|fortuna3g)|(?:OTV-)?SMT-E5015|ISW11SC|40[34]SC|SC(?:G1[6789]|V3[1-9]|V4[0-9]|51Aa|-56B|T21|G0[1-9]|G1[0-5]|L2[234])(?:-[uj])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OTV-)?SMT-E5015`),
		regexp.MustCompile(`(?i)Samsung, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-)?N5100`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T677(?:[ATV]|N[KL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T670(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-)?N5110`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N5120`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT|SM)-N8000`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N8010`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N8020`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P1000M?|SCH-I800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P3100B?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P311[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5100|SCH-I915`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P511[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T217T`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5200|Santos103G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5210`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5220`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6201`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6810`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P7100`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P75[01]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T321`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T905`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P600`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P60[12]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P605|P607T)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P901`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P905`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P587|P588C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P583(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P205(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T307U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T297`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T505[CN]?|T507)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T50[03](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T22[57]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T11[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X205`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T830[X]?|T837R4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T837P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T835[CN]?|T837[VTA]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T725[CN]?|T720X|T727(?:R4|[AUV])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T720(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T865N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T867(?:R4|[VU])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P615[CN]?|P61[379])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P610X?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T860X?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T866N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T111`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T116(?:BU|NU|NY)?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T2105|T212)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T210R?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T21(?:[15]|7[AS])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T230(?:NU)?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T23[15]|403SC|SM-T321`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T239|T237[PV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T232(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T312`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T311`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T315`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T33[215]|T337[AVT])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T520`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T53[15]|T537[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T536(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T320`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T325`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T525`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T530(?:NU)?|T533)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T705|T707[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:T805|T807[PV]?)|SCT21)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T813|T810)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T719[CY]?|T715(?:N0|[CY])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T71[03]|T710X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T815|T817[ATW]?|T818[ATVW]?|T819[Y]?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T820`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T82[57]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T975N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T970(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T976[BN]|T978U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T870(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T875N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T878U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T73[57]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-T736|SM-T738[UTV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T733`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X906`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X80[68]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X706`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T280`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T285`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T3[58]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P350|T3[58]5|T357[TW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T387(?:AA|R4|VK|[TPVW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T295`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T290`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P355([MY])?|T550)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P550|P555(M)?|T555)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T58[05]|P58[05])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T587[P]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T59[057]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T51(?:7P|[057])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T37[57]|T378[KLSV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T56[02]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T561`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T567V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T365(?:F0|[MY])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T395[CN]?|T397U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T390(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T575N?|T577U?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T545|T547U?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T540(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P902|P907A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-T2519`),
		regexp.MustCompile(`(?i)SM-R8[76]0`),
		regexp.MustCompile(`(?i)SM-R90[05]`),
		regexp.MustCompile(`(?i)SM-R91[05]`),
		regexp.MustCompile(`(?i)Family ?Hub`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A245`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G850(?:8S|[AFKLMSWXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A605K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A202K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5510`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5512`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B7510`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5801`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8000`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7530`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8350`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?OMNIA7`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SGH-i677`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SGH-i917`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SGH-i937`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I8150|SM-T255S)`),
		regexp.MustCompile(`(?i)SC-01H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5830`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G357(?:FZ|M)|G310HN)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8160`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G313(?:HY|M[LUY]|[FM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G316M`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G313[HU]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G316U|G318(?:H|ML))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G9100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHV-E120`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8190`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I826[02]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHW-M570S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G386W`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3589W`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8320`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I85[23]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3858`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G600S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E426S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I855[028]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G381[28]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8580`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8730`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:E500(?:HQ|YZ|[0FHM])|S978L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E700[09FHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I90(?:00|08|18|88)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9001`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9003`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9010`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9070`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I910[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?ISW11SC`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9103`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9105`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G730(?:W8|[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I919[025]|SCH-I435)|(?:lineage_|aokp_)?serranoltexx`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9515`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9295`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9300|SCH-(?:I535|I939|L710))|SC-03E`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9305|SCH-R530)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S975L|GT-I950[025]|SC-04E|SCH-(?:I545|I959|R970)|SGH-M919N?|Galaxy-S4|SHV-E300K)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9506)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHV-E330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5280`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5301`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G110[BHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5360`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6312`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G130(?:BT|HN|[EHMU])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G130BU`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6790`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6810`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6812`),
		regexp.MustCompile(`(?i)SC-04J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SC-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7275`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7500`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-S7560|SCH-I699)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7390`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7580`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I739`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-S7562|SCH-I919)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7582`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G31[36]HU|G313HZ)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7710`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G388F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G389F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G390[FWY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G398FN`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G715(?:FN|U1|[AUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G889(?:YB|[AFG])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G525[FN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G736`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8500`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8530`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8600`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5380`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7250`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5250`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5780`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7230`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:C101|C105([AL])?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:C111(M)?|C115)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G318[HM]Z`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G355(?:6D|[89HM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G350`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G360[FH]?|S820L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G361[FH]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G386F|G3518(?:_TD)?|G3586V)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3568V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G5108Q?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3815`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G80[01]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G9009D`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G900FD`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G900|G906[KLS]|S902L|S903VL|G490F)|Galaxy-S5|SCL23|SC-04F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G901F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G870[AFW]|SC-02G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G903[FMW]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G860P`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G920(?:F[DQ]|W8|[089AFIKLPRSTVX])?|SM-S906L|SM-S907VL)|SC-05G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G890A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G925[0ADFJIKLPRSTVWX]|SCV31|404SC|SC-04G|SM-G828)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G928(?:7C|N0|R4|W8|[07ACFGIKLPSTVX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G930(?:AZ|FD|R[467]|T1|V[CL]|W8|[0AFKLPRSTUVX8])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G935(?:R4|W8|[0AFKLPSTUVX])|SC-02H|SCV33|Galaxy s7 edge`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G891A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G950[08FNUW]?|SCV36|SC-02J`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G8750`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G892[AU]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G955[0AFKLNPRTUVWX]?|SCV35|SC-03J`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G960[0FNUWX]?|SCV38|SC-02K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G965[0FNUWX]|SCV39|SC-03K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:G973|G977[BNPTU])|SCV41|SC-03L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S10 Lite|G770(?:U1|F))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G975[08FUNWX]|SCV42|SC-04L)`),
		regexp.MustCompile(`(?i)(?:(?:SAMSUNG-)?SM-G970(?:U1|[08FUNWX])|beyond0q?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G980F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G981(?:U1|[0BNUVW])|SCG01|SC-51A|SC51Aa`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G780`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G781(?:U1|[0BNUVW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G988(?:U1|[0BNQUW])|SCG03`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G985F|SCG02`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G986(?:U1|[0BNUW])|SC-52A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G991V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G991(?:U1|R4|[0ABNWQU])|SCG09`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G990`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SC-51B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G998(?:U1|[0BNUWTP])|SC-52B)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G996(?:U1|[0BNWUP])|SCG10`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S901(?:U1|[0BENUW])|SC-51C|SCG13`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S908(?:U1|[0BENUW])|SCG14|SC-52C`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S906(?:U1|[0BENUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S911|SCG19)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S916`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S918`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F700(?:U1|[0FNUW])|SCV47`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F707(?:U1|[0BNUW])|SCG04`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I829`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SCH-R740|SGH-S730)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-S738`),
		regexp.MustCompile(`(?i)vollo Vi86(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G386(?:T1|T)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A716S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A015(?:DL|[TU]1|[AFGMUV])|S111DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A013[FGM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A025(?:[AFGM]|AZ)?|S124DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A037[F]?|SM-S134DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A035[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A047`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A042[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A045`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A032[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A022[GMF]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A260[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S115(?:DL)?|SM-A115V)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A146)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A145)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A225[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A226L`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A226|SC-56B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A300(?:FU|YZ|XU|XZ|[09FGHMXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A310(?:N0|[FMXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A320(?:FL|[FXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A346`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A430F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A500(?:YZ|[9LSWY])?|SM-A5OOH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A500[0FGHKM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A500(?:FU|X)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A510[08FKLMSXY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A520[FKLSWX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A525`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SC-53B|SM-A526)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A528`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A600(?:AZ|FN|GN|T1|[AFGNPTUX])|SM-A6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A605(?:[FG]N|[08FGX])|SM-A6\+`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G6200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A606[0Y]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A700(?:YD|[09FHKLSX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A710[08FKLMSXY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A720[FMSX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A750(?:GN|[CFGNX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A71(?:5[FW])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A725[FM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A736`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A716(?:U1|[0BUVT])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A(?:530F|800[0FISXY])|SCV32`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G885[FSY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A810(?:YZ|[FS])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A8s|G887[0F])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A530[MNWX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A730[FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A900[0F]`),
		regexp.MustCompile(`(?i)SM-A9\[7\]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A920[0FXN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G885[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A9 Pro|A910[0F]|G887N)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A105[FGMN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A107[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S102DL|A102[NUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A115(?:A[PZ]|U1|[AFMUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A12(?:5[AFMNUWTPV]|7[FM])|S127DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A136(?:U1|[BMWUS])|S136DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A135|SM-A137F)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A205(?:U1|YN|[FGSWU])|S205DL)|SC-02M|SCV46`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A215(?:DL|R4|U1|[UWTP])|SM-S215DL|SC-42A|SCV49|SM-A102J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A217[FMN](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A202[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A207[0FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A235`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A23[36]|SC-56C|SCG18`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A305(?:[FGY]N|GT|[FGN])|SCV43)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A307(?:FN|GN|GT|[FG])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A315[FGN](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A325`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:A326(?:BR|U1|[BUWJ])|S326DL)|SCG08)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A336`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A405(?:F[NM]|S)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A305[018](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A415F|SC-41A|SCV48)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-[AS]426`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A505(?:F[GN]|U1|YN|[FGNUWX])|S506DL|505FN)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A5070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A507FN`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A515[FUW]|S515DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A516(?:U1|[0BNUVT])|SC-54A|SCG07)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A536V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A536|SC-53C|SCG15|SM-S536DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A546)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A705(?:GM|[MYF]N|[0FUWX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A707[0F]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A805[0FNX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A908[BN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A9080`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E025F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F127G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E135F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E225F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E236`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F415F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E426B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E5260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E625`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9301I`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S120VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J100(?:FN|VPP|MU|[FGHMY])|S777C)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J105[BFHYM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J106[BFHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J120(?:ZN|[AFGHMPTW])|J05H)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J110[FGHLM]|J111[FM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J200[FGHMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J200BT`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J260AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J260([AFGMY]|T1)|S260DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J(?:210F|250[FGMNY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S367VL|S357BL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J311(?:[09]|9S)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S320VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S327VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327(?:T1|[ATW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327(?:[FP]|R4)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337R4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327VPP`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S337TL`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J3109`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J300H|J320(?:[ZF]N|R4|W8|YZ|[AFGHMNPVY]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J330(?:FN|[08FGLN])|J327(?:R[76]|U))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337(?:VPP|[AWPUV])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G400[FG]|J400[FGM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J500(?:FN|N0|[78FGHMY])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J510(?:[FGMU]N|FQ|[8FGHKLSY])?|5108|G510H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J530[GY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J530|(?:lineage_)?j5y17lte`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G570[0FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J600[FGLN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J610[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J410[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J415(?:[FG]N|[FGN])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J710FN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J7[01]0(?:FN|MN|[8FHKM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J700P`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J700(?:T1|T)|J710GN|J7109?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J730[K]|J727(?:R4|[AFSU]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J737(?:R4|T1|VPP|[APSTUV])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C710F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G610[FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G611(?:FF|MT|M)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G615F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S727VL|S737TL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J7 Pro|J730(?:GM|[FG]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J701[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J720[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S767VL|S757BL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J727[PTV]`),
		regexp.MustCompile(`(?i)SM-J7\[7\]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J810|SM-J8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SM-J9\[7\] Prime`),
		regexp.MustCompile(`(?i)SM-J9\[8\] Pro`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M015[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-[EM]045F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M013F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M017F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M025F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M022[FGM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M105[FGMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M107F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M115[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M127[FGN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M135`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M136`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M146B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:M205(?:[FGMN]|FN)|M20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M215F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M215G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M225`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M236L`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M236`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:M307(?:FN|[0F])|M30s)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M305?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M315F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M325F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M326`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M336`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M317F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M405`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M426`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M515F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M526`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M536S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M536`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M546`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M625`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M546`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W201([689])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2022`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2020`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2021`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A826`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2015`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G910S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G550(?:FY|T[12]?)|S550TL|G55[01]0|G5520)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G5528`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G600(?:FY|[0F])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G610[0KLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G611[FKLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C500[0X]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C501[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C700[0X]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C701[08FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C710[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C900[08FY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z130H`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z200[FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z300H`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z400[FY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G150(?:N[0KLS])?|G155S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G16(?:0N|[05]0?|5N))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J321AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J326AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J336AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J727AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:F900[0FUW]|F907[BN])|SCV44`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W9023`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F711|SCG12|SC-54B)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F721|SC-54C|SCG17)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F731)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F916(?:U1|[0BNQUW])|SCG05`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F926|SC-55B|SCG11)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F936|SCG16|SC-55C)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F946)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9060(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9063`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9(?:080|128)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9168`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9082`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N7000`),
		regexp.MustCompile(`(?i)(?:SC-01G|SCL24)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N935[FSLK](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:(?:GT-)?N7100|SCH-(?:I605|N719|R950)|SPH-L900|Galaxy Note 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N7105`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G710(?:2T|5[HL]|[25689KLS])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G720(?:AX|N0|[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:SAMSUNG-)?SM-(?:G530(?:[689]W|[AF]Z|BT|MU|R[47]|[AFHMPTWY])|G531[FH]|S920L)|(?:rr_)?fortuna3g)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G531(?:BT|[MY])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532MT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532[MG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N7502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N750[05LQ]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N9002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-9005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-N900(?:W8|[05689][VQ]?|[AKLPSTV])?|SCL22|SC-01F|SC-02F)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:N910|910U)|N9100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N916[KLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N915`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N920(?:R[467]|W8|[0ACFGIKLPSTVX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N9208`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G750(?:8Q|[9AFH])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I915[028]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I920[05]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-N930(?:R[467]|W8|[0AFKLPSTUVX])|SCV34)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-N950|SCV37|SC-01K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N960|SCV40|SC-01L)|crownqlte`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N975(?:U1|XU|[0CFUWX])|SM-N976[0BVNQU]|SC-01M|SCV45)|Galaxy Note 10\+`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-(?:N970(?:U1|W8|[089DFJKLSUWX])|N971N)|Galaxy Note 10`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-N770[FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N981(?:B/DS|U1|[0BNUW]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N985(?:F/DS|F))|Galaxy Note 20 Ultra`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N980(?:F/DS|F)|Galaxy Note 20)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N986(?:B/DS|U1|[0BCNUW])|SC-53A|SCG06)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W750V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G310R5`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-E2152`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(GT-(P|N8|N5)[0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?((?:SM-[TNP]|GT-P)[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)((?:SCH|SGH|SPH|SHV|SHW|GT|SM)-[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)Galaxy ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Galaxy ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG[\-][ ]?([a-z0-9]+[\-_][a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG;[ ]?([a-z0-9]+[\-_][a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG[ _/\-]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)SAMSUNG;[ ]?([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)SEC_SC-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SEC-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:portalmmm|o2imode)/2\.0 ([SZ][a-z0-9]+)`),
		regexp.MustCompile(`(?i)sam([rua][0-9]+)`),
		regexp.MustCompile(`(?i)(T3G_04|TWIFI-06)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(55SA703)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:8312D|G(60[25]|70[3568]G?|785|803)|N83(?:-2cpu)?|N91) Build`),
		regexp.MustCompile(`(?i)G(60[25]|70[3568]G?|785|803)`),
		regexp.MustCompile(`(?i)Sansui[_ ]|(?:S505024)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sansui[_ ](Switch|Play|Fun|SA4[01]|U4[56]|U3[02]|Nova)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SANTIN|(?:BiTBiZ_V58|ACTOMA ACE|DREAMPLUS03A|Candy U7 Pro|GAAMII|RS635H|HY-002 Plus|HongQi HQ1|G101-OG|HEXIN-H2-A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BiTBiZ_V58(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAAMII G1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAAMII(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEXIN-H2-A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Candy U7 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DREAMPLUS03A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GreenOrange(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLASSONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)halove(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ACTOMA ACE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)monica(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HongQi HQ1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POWER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GALAZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEWDUN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEXIN[_ -](H2-A|H3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HY-002 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G101-OG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SANTIN[ _][#]?(Dante|Candy U7|Armor(?: 2)?|YSL-Y7|ANT.W|N[13]|JS|S6|V9(?:[ _]Pro)?|Life Shine|ovvi|D|11 XS Max|SHUGUO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RS635H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Santin[ _#]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Sanyo|MobilePhone[ ;]`),
		regexp.MustCompile(`(?i)SCP-?6750`),
		regexp.MustCompile(`(?i)SCP-?6760`),
		regexp.MustCompile(`(?i)SCP-?6780`),
		regexp.MustCompile(`(?i)SANYO[ /_-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)MobilePhone ([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i) (TB-PO1|TB-B01|TB-G01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SberBox)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Schok[ _]|FreedomTurboXL`),
		regexp.MustCompile(`(?i)(Pi 5\.5L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Seatel[ _](L2|V8[AE]|T[5-8]|R6|V[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Seeken[ _-]`),
		regexp.MustCompile(`(?i)Seeken[_ -](SG1|SJ1)`),
		regexp.MustCompile(`(?i)Seeken[_ -](ST-101)`),
		regexp.MustCompile(`(?i)Selecline[ _]|(?:S4T7IN|ST19101|S3T10IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ST19101|S4T7IN|S3T10IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Selecline 10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Selenga[ _](A[1345])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sencor|(?:ELEMENT[ _]?(?:(?:7|8|9\.7|10[ _]1)(?:[ _]?V[23])?|P[0-9]+|10.1 Q001)|10_1Q205|ELEMENT-P5501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?Element (10\.1) (Q001)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2[ _]BASIC`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT8`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT10[ _]1`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?(7Q105)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?(10)_(1Q205|1Q102)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _-]?P([0-9]+)`),
		regexp.MustCompile(`(?i)Sencor[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Sendo([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Senkatel[ _]|(?:MaximusT1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Senkatel[ _](T1009|T8002|T701[12]|T9702)`),
		regexp.MustCompile(`(?i)SENSEIT[ _]?([^;/)]+)( Build|\))`),
		regexp.MustCompile(`(?i)Senwa|(?:S\-?(?:471|7[12]5|6[01]5|915|905TL|1000|5018)|V705B|LS50F| LS50?|LS5518H|LS5718|LS5018F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?471(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?905TL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?5018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5018F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?(615|7[12]5|915)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V705B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS50F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) LS50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) LS5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5518H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Senwa[ _-]*([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:AUTOID ?(?:9N|Q[79])|CRUISE1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CRUISE1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUTOID ?(9N|Q[79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NBP-60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHARP|SBM|SH-?[0-9]+[a-z]?(?:[);/ ]|$)|AQUOS|(?:SH-T01|SH-M0[14-9]|SH-M1[1-7](?:-y)?|S[357]-SH|SH-[MZ]([12]0|01|22)|SH-[CL]02|SH-RM(?:1[1258]|02)|SH-R?M19s?|SH-R10A|[34]04SH|401SH|[45]02SH|306SH|[36]05SH|70[1246]SH|80[138]SH|90[1678]SH|50[3679]SH|SHL2[1235]|SHV4[0-8]|SHV3[1-9](?:[-_]u)?|FS80(?:1[08]|32|28|0[29])|TG-L900S|NP601SH|403SH|603SH|SHF3[1-4]|SHV4[035][-_]u|SW001SH|SHG0[1-8]|X4-SH|A002SH|DM-01[JH]|A[01]01SH|606SH|FS801[56]|d-41A|d-51C|NP80[567]SH|NP501SH|A00[34]SH|A102SH|IS05|SH-(?:S50|53A|51B|[HDA]01|01FDQ|S40P|M24)|LP-0[12]|FS8014|SBM00[35]SH|SBM103SH|A10[345]SH|lineage_ss2|LCD_xxSUFOC475A|A20[1248]SH|FS802[56]|ADS1|STTM21VAPP|NPA205SH|SHG10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)506SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)603SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)50[23]SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[34]04SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)606SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)507SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S3-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S5-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S7-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X4-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG06|A10[34]SH|SH-M20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-51C|A204SH|SHG08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M07(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A003SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) SH-S40P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-54B|SHG05|SH-R?M19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG07|SH-RM19s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A208SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-53C|SH-M24|SHG10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG03|A004SH|SH-M17|SH-53A|A105SH|SH-S50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-D01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M12(?:-y)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-H01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-[MZ]10|801SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-M13|906SH|SH-01M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG04|A102SH|SH-RM18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG02|A002SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-Z01|Aquos S2 4/64)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-02E|SH-01[GH]|SH-04H|SH-09D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-01FDQ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-?06D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHL2[1235]|SH-M01|SH-01E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(203SH|30[23]SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-L02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:605SH|SH-03J|SHV39)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:701SH|SHV41|SH-M06)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-M09|SHV42|706SH|SH-03K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)803SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:908SH|SHG01|SH-M14)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M16(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-C02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHF3[1-4])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A201SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-02J|SH-04G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-02H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)30[56]SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)402SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)403SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:509SH|SH-R10A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP601SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV40|SHV3[24])(?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)702SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aquos P6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV3[183](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8010|SH-M08|SHV43(?:-u)?|SH-01[KL]|lineage_ss2|Aquos S2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8016(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV46|SH-R?M11|901SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV44|808SH|SH-04L|SH-03G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8032|FS8015|SH-02M|SHV45(?:-U)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV48|907SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-RM12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-RM15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-51B|A101SH|SH-M22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A202SH|SH-52C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV3[57](?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TG-L900S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8026(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8002|SHV47)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SW001SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DM-01[JH])`),
		regexp.MustCompile(`(?i)NP80[56]SH`),
		regexp.MustCompile(`(?i)LP-0([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(00[35]SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(103SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM200SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-08E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(d-41A|d-51C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SH-T01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LC-(?:[0-9]{2})[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHARP-AQUOS|AQUOSBrowser`),
		regexp.MustCompile(`(?i)SHARP[ -]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)AQUOS[ _-]TV([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(?:SHARP|SBM)([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(SH-?[0-9]+[a-z]?|IS05|ADS1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHIFT6mq?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STV[-_](40LED25S|40LED42S|32LED42S|32LED30C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHTRIH-SMARTPOS-F2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PNT-704[025])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SICO[_ ](?:PLUS|e1002|Topaz)|(?:Express3-Max|SSR3-1-51-5M|SSD-1-53-13M|Mega2(?:max)?|Express3|Diamond 2|Plus3_4G|Plus2 4G|Infinity Max|Nile X|More_3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SICO[_ ]PLUS2|Plus2 4G`),
		regexp.MustCompile(`(?i)SICO[_ ]PLUS`),
		regexp.MustCompile(`(?i)SICO[_ ]Topaz`),
		regexp.MustCompile(`(?i)SICO[_ ]e1002`),
		regexp.MustCompile(`(?i)SIEMENS|SIE-|portalmmm/2\.0 SI|(?:S55|SL45i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SIE-)?(S[56]5|S40|C45|ME45|SLIK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SIEMENS[ \-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SIE(?:MENS )?[\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:SIE-)?(SL45i)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 (SI[a-z0-9]+)`),
		regexp.MustCompile(`(?i)Sigma|(X[_-]Style[ _]?Tab[_ ]A(\d+)|X[-_ ]?treme[-_ ]?PQ[0-9]{2}|X-Style_(?:S5501|S3502)|Tab A1015)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?treme[-_ ]?PQ([0-9]{2}) Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?treme[-_ ]?PQ([0-9]{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[_-]Style[ _]?Tab[_ ]A(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab (A1015)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?Style[-_ ]S([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Silelis[ _](T-1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TangoTab|Presto[ )]|PicassoTab_[X9]|Ultimax|Valumax|S72-B|SX2W`),
		regexp.MustCompile(`(?i)TangoTab[_ ]?(\d+|X)`),
		regexp.MustCompile(`(?i)PicassoTab_(XL?|9)`),
		regexp.MustCompile(`(?i)(NP602SI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Singtech|(?:Sapphire[_ ](?:H50S|H7S?|H90)|Infinity_I(?:1|_Mix))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sapphire[_ ](H50S|H7S?|H90)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Singtech[ _](Q2|S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity_I1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity_I_Mix(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Siragon|(?:SP-(?:5[0124]50|5[34]00|61[05]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Siragon[_ ])?(SP-(?:5[0124]50|5[34]00|61[05]0))`),
		regexp.MustCompile(`(?i)(?:FINNEY U1|SOLARIN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FINNEY U1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOLARIN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SKY|Elite|Fuego)[_ ][3-7]\.[05](?:[A-Z]{1,2})?|Elite[ _](?:PHOTOPRO|5_0T|M45|[45]T|45T|GO|M5Plus|T[46]|[ABCDHP]5|5_5_Octa|Octa|[BCEFGHJPTV]55|[AB]65|N55|T10)|Platinum[_ ](?:5.0M|5\.5C|[56]\.[05]\+?|[ABCMP]4|[ACGKV]55|[ABDEFGHJKM]5|A7|A57|P9|X|UNO|VIEW2|O|4\.0|4_0Plus)|PLATINUMVIEW|SKY[ _](?:55M|Pro_III|PAD10)|SKYVISION|SKY Black| SKY[ _]Prestige|Sky Vision2|PRO_SELFIE|Premier5`),
		regexp.MustCompile(`(?i)Platinum[_ ](?:5\.0M|M5)`),
		regexp.MustCompile(`(?i)Platinum[_ ]5\.5C`),
		regexp.MustCompile(`(?i)Platinum[_ ]([56])\.([05])\+`),
		regexp.MustCompile(`(?i)Platinum[ _]4\.0`),
		regexp.MustCompile(`(?i)Platinum[_ ](P9) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Platinum[_ ]([ABCMP]4|[ACGK]55|[ABDEFGHJKM]5|A7|A57|P9|X|UNO|O|6\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Platinum[_ ]?VIEW(2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY[ _]PAD10`),
		regexp.MustCompile(`(?i)Elite_Octaplus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite_OctaXS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite Octa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite OctaMax(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite[ _](M45|Go|[45]T|T[46]|[ABCDHP]5|[ABCEFGHJPTV]55|[AB]65|45T|N55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite (T10)`),
		regexp.MustCompile(`(?i)Elite[_ ]([3-7])[\._]([05](?:[A-Z]{1,2})?\+?)`),
		regexp.MustCompile(`(?i)Fuego[_ ]([3-7]\.[05](?:[A-Z]{1,2})?\+?)`),
		regexp.MustCompile(`(?i)SKY Black ?(2)?`),
		regexp.MustCompile(`(?i)SKY 5.0Pro II`),
		regexp.MustCompile(`(?i)SKY[ _]PrestigeX`),
		regexp.MustCompile(`(?i)SKY[ _]Prestige`),
		regexp.MustCompile(`(?i)SKY[_ ]([3-7]\.[05](?:[A-Z]{1,2})?)`),
		regexp.MustCompile(`(?i)SKYSTREAM_3Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SKYLINE[_ ])?(32YST5970|50UST5970|24YST5970|40LST5970|32YST5975|43LST5975)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sky_?worth|(?:FlowBox-F1|SWTV-20AE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SWTV-20AE)`),
		regexp.MustCompile(`(?i)Sky_?worth ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Android.+(?:Safari)(?: Build|\) AppleWebKit)|SMADL[ _]`),
		regexp.MustCompile(`(?i)Android.+(?:Safari)(?: Build|\) AppleWebKit)`),
		regexp.MustCompile(`(?i)SMADL[ _]Matri([2X])`),
		regexp.MustCompile(`(?i)Smailo_(2GO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Coral 4|Slide Lite|Notrino|Smart PRIME II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Coral 4|Slide Lite|Notrino|Smart PRIME II)`),
		regexp.MustCompile(`(?i)SK5501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SK5501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMARTBOOK[ _]S`),
		regexp.MustCompile(`(?i)SMARTBOOK[ _]SB ?13`),
		regexp.MustCompile(`(?i)SMARTBOOK[ _](S9Q9|S7QS)`),
		regexp.MustCompile(`(?i)(ST1009|ST7160|ST1009X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Android 7(?:[\d.]*);(?: [\w-]+;)? M512| M520| M700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M512|M520|M700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smartfren|Androtab|Andromax|PD6D1J|AD682J|AD68[89]G|AD6B1H|AD9A1H|AD682H|AD683G`),
		regexp.MustCompile(`(?i)Andromax[ _\-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Andromax[ _\-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Smartfren[ _\-]([^/;\)]+)(?: Build|[/;\)])`),
		regexp.MustCompile(`(?i)(Androtab[^/;]+) Build`),
		regexp.MustCompile(`(?i)Smartisan[_ ]|(SM(?:70[15]|[89]01|919)|OD10[35]|YQ60[1357]|DT2002C|DE106|DT190[12]A|O[CE]106|OS103|O[CS]105)[ /;\)]`),
		regexp.MustCompile(`(?i)SM70[15]`),
		regexp.MustCompile(`(?i)YQ60[1357]`),
		regexp.MustCompile(`(?i)OD10[35]`),
		regexp.MustCompile(`(?i)OS105[ /;\)]`),
		regexp.MustCompile(`(?i)DE106[ /;\)]`),
		regexp.MustCompile(`(?i)OE106[ /;\)]`),
		regexp.MustCompile(`(?i)OC10[56][ /;\)]`),
		regexp.MustCompile(`(?i)DT2002C[ /;\)]`),
		regexp.MustCompile(`(?i)DT190[12]A[ /;\)]`),
		regexp.MustCompile(`(?i)OS103[ /;\)]`),
		regexp.MustCompile(`(?i)Smarty[_ ]`),
		regexp.MustCompile(`(?i)Mini ?(7L?)`),
		regexp.MustCompile(`(?i)(?:Smooth ?(?:5.[05]|626|6.26 (?:Lite|Max|Pro)|6.[15])|S2 Advance)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth 5.5 lite`),
		regexp.MustCompile(`(?i)Smooth (5.[05]|6.[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth626(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth 6.26 (Lite|Max|Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smotreshka Box (115NA|413NA|213a?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)soda (?:S2|[SE]1|FIRE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)soda (S2|[SE]1)`),
		regexp.MustCompile(`(?i)Softbank|J-PHONE`),
		regexp.MustCompile(`(?i)Softbank/[12]\.0/([a-z0-9]+)`),
		regexp.MustCompile(`(?i)([a-z0-9]+);Softbank;`),
		regexp.MustCompile(`(?i)J-PHONE/[0-9]\.[0-9]/([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(SS5214G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLONE|(?:E1457|W145[02]|Sun_S5501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLONE[ _]Elite[ _]L5501`),
		regexp.MustCompile(`(?i)SOLONE[ _]SUMO[_ ]S5001`),
		regexp.MustCompile(`(?i)SOLONE[ _](SL-K40|S5002)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sonim[ -]|XP(?:[67]7|[358]8)00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP3400`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP3800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP3900(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP5800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP5700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP6700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP7700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP8800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sony(?: ?Ericsson)?|SGP|Xperia|(?:[4-9]0[12])SO|C1[569]0[45]|C2[01]0[45]|C230[45]|C530[236]|C550[23]|C6[56]0[236]|C6616|C68(?:0[26]|[34]3)|C69(?:0[236]|16|43)|D(?:200[45]|21(?:0[45]|14)|22(?:0[236]|12|43)|230[2356]|240[36]|2502|2533|510[236]|530[36]|5316|5322|5503|58[03]3|65(?:0[23]|43|63)|66[03458]3|66[14]6|6708)|E(?:20[0345]3|2006|210[45]|2115|2124|230[36]|2312|23[356]3|530[36]|53[3456]3|5506|55[356]3|56[46305][36]|58[02]3|6508|65[35]3|66[0358]3|68[358]3)|F(?:311[12356]|331[13]|321[12356]|5[13]21|5122|813[12]|833[12])|G(?:2299|312[135]|311[26]|322[136]|3212|331[123]|3412|3416|342[136]|823[12]|834[123]|8[14]4[12]|8188)|H(?:3113|3123|3133|3213|3223|3311|3321|3413|4113|4133|4213|4233|4311|4331|4413|4433|4493|8116|8166|82[1679]6|83[12]4|8416|9436|9493)|I(?:3[12]23|3213|[34]113|[34]312|4193|42[19]3|4332)|J(?:3173|3273|81[17]0|82[17]0|91[15]0|92[16]0)|(?:WT|LT|SO|ST|SK|MK)[0-9]+[a-z]+[0-9]*(?: Build|\))|X?L39H|XM50[ht]|XQ-[A-Z]{2}[0-9]{2}|W960|portalmmm/2\.0 K|S3[69]h|SOG0[1-9]|SOL2[2-6]|SOT[23]1|SOV3[1-9]|SOV4[0-3]|X10[ia]v?|E1[05][ai]v?|MT[0-9]{2}[a-z]? Build|SO-0(?:[12]C|[2-5]D|[1-4]E|[1-5]F|[1-5]G|[1-4]H|[1-4]J|[1-5]K|1M|[1-3]L)|R800[aix]|LiveWithWalkman|BRAVIA|SGP771|E3 Dual|A[012]01SO|A204SO|A[12]02SO|SO-[45]1[AB]|SO-5[1234][ABC]|A[12]03SO|A002SO|NW-(A[13]00|ZX500|Z1000)Series|NSZ-GS7|SmartWatch 3|SVP-DTV15`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E10[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E15[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(LT15[ai]?v?|SO-01C)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT18[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT11`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT15`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT27`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MK16[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST15[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST17[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-02L`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST18[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SK17[ai]?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?X10[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)M1`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?R800`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?WT19|LiveWithWalkman`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?CK13i`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?CK15[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F100i`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J105`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J108`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J10`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U10`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U100`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U1`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U5`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U8`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W100`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W150`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W960`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?WT13`),
		regexp.MustCompile(`(?i)SO-01E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ-BE[4-7]2`),
		regexp.MustCompile(`(?i)XQ-AQ[56]2`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I(?:4113|31[12]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J3173(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SO-41B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A203SO|SO-53C|SOG08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A001SO|XQ-AU42|XQ-AU51|XQ-A[TU]52|SO-41A|SOV43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A10[12]SO|SO-52B|SOG04|XQ-BT52)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ-BT44(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:XQ-CC72|XQ-CC[45]4|SOG07|SO-52C|A202SO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I(?:42[19]3|32[12]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I4193`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J(?:9110|81[17]0)|SOV40|SO-03L|802SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J9150)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG01|SO-51A|XQ-AT42|XQ-AT51|SO51Aa|XQ-AT72)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SO-51B|SOG03|XQ-BC[4567]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG06|XQ-CT72|SO-51C|A201SO|XQ-CT[45]4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT22i|Xperia P`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT25i|Xperia V`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J92[16]0`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J82[17]0|SO-01M|SOV41|901SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG02|A002SO|XQ-AS[4567]2|SO-52A)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SO-53B|A103SO|SOG05|XQ-BQ[4567]2)`),
		regexp.MustCompile(`(?i)(?:SOG09|XQ-CQ72|SO-54C|XQ-CQ[45]4|A204SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOV42|902SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J3273`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26ii`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26i|Xperia S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-02C`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-03D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26w`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT28[aih]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT29i|Xperia TX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT30a`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT30p`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST21[ia]2`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST21[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST23[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST25[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL22`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL21`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST26[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST27[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C150[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C160[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E210[45]|E2115|E2124)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E20[05]3|E2006`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C190[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C200[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C210[45]|S36h`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C230[45]|S39h`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C530[236]|Xperia SP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C550[23]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C650[236]|Xperia ZL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL25(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C66(?:0[236]|16)|SO-02E)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C68(?:0[26]|[34]3)|XL39H|SOL24)|Xperia Z Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xperia Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D200[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D21(?:0[45]|14)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D22(?:0[236]|43)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2212|E3 Dual`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E20[34]3`),
		regexp.MustCompile(`(?i)H33[12]1`),
		regexp.MustCompile(`(?i)H43[13]1`),
		regexp.MustCompile(`(?i)I43[13]2`),
		regexp.MustCompile(`(?i)XQ-AD5[12]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2302`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D230[356]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D240[36]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E230[36]|E23[35]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E2312|E2363)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E56[05][36]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E56[436]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2502`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2533`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E53[05]3|E5306`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E53[0346]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E5506|E5553`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E55[36]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D510[236]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D530[36]|D5316|XM50[ht])`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D5322`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D5503|Xperia Z1 Compact`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C69(?:0[236]|16|43)|SOL23|L39H|SO-0[12]F)|Xperia Z1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D58[03]3|SO-02G)|Xperia Z3 Compact(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP561|SOT21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D65(?:0[23]|43)|SO-03F)|Xperia Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D66[045]3|D66[14]6|SO-01G|SOL26|401SO)|Xperia Z3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D6633|D6683)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E65[35]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D6708)`),
		regexp.MustCompile(`(?i)SOV31|402SO|SO-03G`),
		regexp.MustCompile(`(?i)SGP771|SOT31|SO-05G`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E58[02]3|SO-02H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E66[05]3|SOV32|501SO|SO-01H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E66[38]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E68[58]3|SO-03H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E6833`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F311[135]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F311[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F321[135]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F321[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F833[12]|SOV34|601SO|SO-01J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:701SO|SOV36|G834[123]|SO-01K)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G8441|SO-02K`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F331[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G312[135]|G311[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G341[26]|G342[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G3426`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G322[136]|G3212`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H31[123]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H41[13]3`),
		regexp.MustCompile(`(?i)H44[19]3|H3413`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H(?:3213|3223|4213|4233)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G823[12]|SOV35|602SO|SO-03J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:G814[12]|G8188|SO-04[JK])`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:H83[12]4|H82[17]6|SOV37|SO-03K|H8296|702SO)`),
		regexp.MustCompile(`(?i)(?:H81[16]6|SOV38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:H(8416|9436|9493)|SO-01L|SOV39|801SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G331[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G3312`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-04E`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-04D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-05D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5121`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5122`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5321|SO-02J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:F8131|502SO|SOV33|SO-04H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F8132`),
		regexp.MustCompile(`(?i)(?:Sony)?(?:SGP(?:311|312|321)|(Sony)?SO-03E|Tablet Z LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP712(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP(?:511|512|521)(?:[);/ ]|$)|SO-05F`),
		regexp.MustCompile(`(?i)SGP(?:6[124]1|612)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGPT(?:12|121|122|123|13|131|132|133)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BRAVIA )(2K GB ATV3|[48]K UR[123]|4K GB ATV3|4K GB|4K VH2|4K 2015|2015|VH1|VU[12]|VU31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SVP-DTV15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NSZ-GS7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sony-BRAVIA-VH1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NW-(A[13]00|Z1000|ZX500)Series`),
		regexp.MustCompile(`(?i)SonyBDP|SonyDBV`),
		regexp.MustCompile(`(?i)(?:Sony-)?(KDL?-?[0-9a-z]+)`),
		regexp.MustCompile(`(?i)Opera TV Store.*(?:Sony-)([0-9a-z\-_]+)`),
		regexp.MustCompile(`(?i)((?:WT|SO|ST|SK|MK)[0-9]+[a-z]*[0-9]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)(MT[0-9]{2}[a-z]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 K([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SonyEricsson ?IS11S`),
		regexp.MustCompile(`(?i)Sony ?Ericsson?([^/;]*) Build`),
		regexp.MustCompile(`(?i)SonyEricsson([CGJKPTWZ][0-9]+[a-z]+)/`),
		regexp.MustCompile(`(?i)Sony ?Ericsson ?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Sony Corporation/([^/;]*)\)`),
		regexp.MustCompile(`(?i)Sony (Tablet[^/;]*) Build`),
		regexp.MustCompile(`(?i)(SGP[^/;]*) Build`),
		regexp.MustCompile(`(?i)Xperia ([^/;]*Tablet[^/;]*) Build`),
		regexp.MustCompile(`(?i)Xperia ([^;/]+) \(AOSP\) Build`),
		regexp.MustCompile(`(?i)Xperia ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(XQ-[A-Z]{2}[0-9]{2})`),
		regexp.MustCompile(`(?i)Sony[ -]?([^/;]*) Build`),
		regexp.MustCompile(`(?i)Sony[ -]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)((?:SM-LED32M(?:11|04)S)|SM-LED40M04S)(?:_-Ver01)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOYES[ _](?:[67]S|XS|XS11)|S10-H|XS12 PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOYES[ _]([67]S|XS11|XS)`),
		regexp.MustCompile(`(?i)Spark Plus 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sparx[ _]`),
		regexp.MustCompile(`(?i)(Versity (?:9640|9553))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CARBONO_5|CUARZO_6|DIAMANTE_5|VULCANO_55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VULCANO_55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CARBONO_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUARZO_6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIAMANTE_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice|(?:Xlife[-_ ](?:\d+Q?|Victor5|M5q\+|M5 Pro|Proton5|Electro55HD))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Spice_)?Xlife[-_ ](\d+Q?|M5\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xlife-M5q\+`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(7\d{2})N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(7\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(\d{3})N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(\d{3})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Spice[-_ ]?([^/;]+)(?:/|$)`),
		regexp.MustCompile(`(?i)AQT(100|8[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:N(?:9[5678]00|8800|9000|9977)|Star[ _]N9589)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Star_)?N(9[5678]00|8800|9977|9589)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starlight|(?:My_Star_X|RIO STAR|C_Note(?:_Pro)?|Star_Mix_2|I_STAR_PLUS|star_plus_plus|star_two|I star (?:one|two))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I star two|star_two`),
		regexp.MustCompile(`(?i)(?:Starmobile (?:Play (?:Neo|Spark|GO|Click|Max)|Astra)|DIAMOND D1|UP[_ ](?:Sense|Rave|Groove|Octa|Prime|Selfie|Snap|Xtreme|XL|Max|Vision|Neo)|PLAY (?:Club|Style|Click LTE)|ENGAGE7\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starmobile PLAY GO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starmobile ASTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIAMOND D1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Starmobile )?Play (Neo|Spark|Click|Club|Style|Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UP[_ ](Sense|Rave|Groove|Octa|Prime|Selfie|Snap|Xtreme|XL|Max|Vision|Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ENGAGE7\+`),
		regexp.MustCompile(`(?i)Andromeda[ _]S(707|84[05]|850|8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart_Starwind|(?:SW-LED(?:24SG303|32SB302|42SB300|40SG300|43SG30[20]|32SG30[012]|55UG400|50UB401))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SW-LED(\d{2}[SU][BG]\d{3})`),
		regexp.MustCompile(`(?i)STX[ -]([^;/]+)|STONE EVO`),
		regexp.MustCompile(`(?i)STX[ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)STX[ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)eZee[^a-z]*Tab ?([^;/]*) Build|STOREX LinkBox`),
		regexp.MustCompile(`(?i)eZee[^a-z]*Tab ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)StrawBerry[ _]`),
		regexp.MustCompile(`(?i)StrawBerry[ _](SX|QX15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B3 (?:Maxi|Simply)|B3Pro|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:B1s|HT28|HT16))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B3 (?:Maxi|Simply)|B1s|HT28|HT16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B3Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STYLO|(?:TARISTAB[234]|Luna|CPE91|VS571|VS5502|S57_A[ZL]URE|BOLD_PLUS|INKOSI(?:_PRO)?|INKULU_PRO|Ithemba|S56 MIST|S55 Nova|S40_VISTA|S50_JADE|S50_BOLD|S64_ALPHA|S53_STARK|S40_LIFE|LIFE_2|S49[_ ](?:MONO|POISE|ECO)| [27]21|721_PRO|DQR22|MOSCOW|STEP_UP|ARCTIC|S61 JAZZ|DVK87 Orion 8 Tab)(?:[);/ ]|$)| BRAVE(?: Build|[;)])`),
		regexp.MustCompile(`(?i)STYLO[ _](F1|Viva)`),
		regexp.MustCompile(`(?i) ([27]21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STYLO[ _]S9[_ ]TOPAZ`),
		regexp.MustCompile(`(?i)SV61 VECTOR\+`),
		regexp.MustCompile(`(?i)SM61 MAGIC\+`),
		regexp.MustCompile(`(?i)S49[_ ]POISE`),
		regexp.MustCompile(`(?i)S49[_ ]MONO`),
		regexp.MustCompile(`(?i)S49[_ ]ECO`),
		regexp.MustCompile(`(?i)Stylo[_ ](521)`),
		regexp.MustCompile(`(?i)(VS571|VS5502)`),
		regexp.MustCompile(`(?i)TARISTAB([2-4])`),
		regexp.MustCompile(`(?i)SUBOR[ _]`),
		regexp.MustCompile(`(?i)SUBOR[ _](S5|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUBOR[_ ]K10PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR[ _]`),
		regexp.MustCompile(`(?i)SUGAR Y([78]) MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR S60 pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR F7 Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR[ _]([^);/]+) ?Dual(?: Build|[);])`),
		regexp.MustCompile(`(?i)SUGAR[ _]([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Cyclone [^/;]+) Build`),
		regexp.MustCompile(`(?i)SUNVAN[ _\-]`),
		regexp.MustCompile(`(?i)SUNVAN[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)SUNVAN[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(Model Y)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1s-G|T2s_LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T2s_LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1s)-G`),
		regexp.MustCompile(`(?i)(?:SS4G9 Mira|SS4G7 Sole|SS4G1 Luna|SS4G8 Nora|SS4G6 Lola|SN7014S?|SN7016|SN10016|SUNNY (?:SS01|S52D))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SS4G9 Mira|SS4G7 Sole|SS4G1 Luna|SS4G8 Nora|SS4G6 Lola)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUNNY (SS01|S52D)`),
		regexp.MustCompile(`(?i)(SN7014S?|SN7016|SN10016)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB(?:2323GMQC|1081|918QC|917QC-(?:8|16)GB)|TAB1090)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T95ZPLUS|T95[KU]PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T95[KU])PRO`),
		regexp.MustCompile(`(?i)SuperBOX_S2PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SC-[0-9]+[a-z]+|SC-2110)`),
		regexp.MustCompile(`(?i)(?:SuperTab(?:A10|K7|S7G)|K7 Kids)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SuperTab(A10|K7|S7G)`),
		regexp.MustCompile(`(?i)SUPRA|NVTAB 7.0 3G|M74C 3G`),
		regexp.MustCompile(`(?i)SUPRA[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(NVTAB 7.0 3G|M74C 3G)`),
		regexp.MustCompile(`(?i)(SN10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOLT_(5XL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUZUKI[ _]|(?:ECOPAD7|SUMOPad10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUMOPAD(8100|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SBX604)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Slate2|Swipe_(?:Elite_3M?|Strike8)|Elite_(?:Grace|VR)|EliteDual|Elite (?:Prime|Star|Note|Sense)|Konnect (?:Prime|Power|Neo 4G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Swipe_)?Elite[_ ]?(Sense|VR|3M?|Grace|Star|Prime|Note|Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slate2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Swipe[_ ]Strike8`),
		regexp.MustCompile(`(?i)swisstone (SD 5[13]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)eSmart[_ ]([EM]2|M3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RS-403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SYMPHONY[ \_]([a-z0-9]+)|(?:(?:roar[ _](?:V20|A50|V78|E80|V150))|roarV95|ZVIII?|V10[25]|V1[23]0|V128|V14[012]|V1[45]5|SYMTAB\d+| (?:i97|i7[245]|i6[58]|i30|i1[58]|i120|Z30 pro|[ZR]30|V9[246789]|V75m)|INOVA|Android 7(?:[\d.]*);(?: [\w-]+;)? P11|Android 6.*; (?:V75|i2[015])|EASY_NAV_2|G10\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)roar[ _]?(V20|A50|E80|V78|V95|V150)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z30|P7) pro`),
		regexp.MustCompile(`(?i) G10\+`),
		regexp.MustCompile(`(?i) (V141|V1[23]0|V10[25]|V128|V14[012]|i97|i7[245]|i6[58]|i30|i1[58]|i120|V1[45]5|[ZR]30|V9[246789]|V75m?|i2[015]|P11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SYMPHONY[ \_]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SYMTAB(\d+)`),
		regexp.MustCompile(`(?i)(SYX-(?:T70[04]|T10[12]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T-Mobile[ _][a-z0-9 ]+|(?:REVVLRY\+?|REVVL V\+ 5G|REVVL 2(?: PLUS)?|5062[ZW]|5007[ZW]|T790[WZ]|Telekom Puls|TMAF0[23]5G|TMRVL4G|T Phone)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5062[ZW]`),
		regexp.MustCompile(`(?i)5007[ZW]`),
		regexp.MustCompile(`(?i)T790[WZ]`),
		regexp.MustCompile(`(?i)REVVL V\+ 5G`),
		regexp.MustCompile(`(?i)REVVL 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TMAF025G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TMAF035G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Telekom Puls(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T Phone Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T Phone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T-Mobile[ _]([a-z0-9_ ]+) Build`),
		regexp.MustCompile(`(?i)T-Mobile[ _]([a-z0-9_ ]+)`),
		regexp.MustCompile(`(?i)T96mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG[ -]TAB[ -]III?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG[ -]TAB[ -](III?)`),
		regexp.MustCompile(`(?i)Ignis [89]`),
		regexp.MustCompile(`(?i)Ignis ([89])`),
		regexp.MustCompile(`(?i)TCL,|TCL[_ -][a-z0-9]+|(?:TCL[_ -][^;/]+ Build)|(?:TCLGalaG60(?:\(9108A\))?|4163D|4187[DMU]|4188[CLRSVO]|5004S|5087Z|5101A|5102[BKLMOP]|5107G|5124J|5130[JMEI]|5133A|5148A|5152D|5159[AJ]|5164D|5199I|6102[ADH]|6125[ADFH]|6127[AI]|6156[ADH]|6159[AK]|6165[AHS]|7040N|8491X|9048S|9060[GX]|9080G|9081X|9295G|9296[GQ]|A(?:50[2789]|600)DL|T(?:60[123]|701)DL|T(?:506D|671[EFGHO]|676[HJK]|766[AHJSU]|767[GHW]|770[BH]|771K|773O|774[BH]|775[BH]|776[HO]|779W|780H|781SPP|781S|781|782H|790[SY]|799[BH]|810[HS])|Percee TV|9317X1|9161G| 9061| 8182| 8167| 8095|BeyondTV\d?|T507U|T610[KE]|9132G|9166G|9137W|T430W|T431[DU]|T501[CL]|T768S)(?:_(?:RU|EEA|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TCLGalaG60(?:\(9108A\))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5004S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T430W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T501[CL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T779W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4187D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:4163D|4188S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T431[DU](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6102[AD](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5164D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6102H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T506D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T507U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T610[KE](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T774[BH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T775B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T775H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6125[ADFH]`),
		regexp.MustCompile(`(?i)6127[AI]`),
		regexp.MustCompile(`(?i)6156[ADH]`),
		regexp.MustCompile(`(?i)6159[AK]`),
		regexp.MustCompile(`(?i)5199I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A509DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A600DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5102[LO](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5152D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5133A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5102[BKMP](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5159[AJ](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5101A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5107G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5124J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5130[JEI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4187[MU](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5148A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5130M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T780H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T782H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T790Y(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T790S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TCL[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)TCL[_ -]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(7040N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A502DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A507DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A508DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T601DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T770[HB](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T766[AHJSU](?:_(?:EEA|TR|RU))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T671[HFEO](?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T768S(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6165[AHS]`),
		regexp.MustCompile(`(?i)T676[KJ]`),
		regexp.MustCompile(`(?i)(?:4188[CLRO]|T602DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T781S|T781SPP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T776[HO]`),
		regexp.MustCompile(`(?i)T767[GW](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T671G|T701DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T767H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T773O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5087Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T781(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T810[SH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T799[BH]`),
		regexp.MustCompile(`(?i)T771K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 8095(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9048S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (?:9061|9081X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (?:8167)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (?:8182)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9060G|9161G`),
		regexp.MustCompile(`(?i)(Percee TV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BeyondTV(\d)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:43|55)S62FS|(?:43|50)P65US|U(?:43|60|65)P60|65P4USM|(?:40|49)S62|L32S6|55P610|50P8S|55S62|(?:43|50)P6US|55DP60)`),
		regexp.MustCompile(`(?i)(K(?:24|32)DLX9HS|K40DLM8FS|K40DLX9FS|K50DLX9US|K50DLJ10US|K43DLJ10US|K32DLX10HS|K32DLJ12HS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Build/TDTech|(?:NAT-TN70|TDT-MA01|AVA-PA00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TEENO[_ ](S9|A1|i12|S11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TENPLUS[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)TETC[ -](F\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIANYU ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TIANYU-KTOUCH/([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TIM_BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Metal_Tablet_10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOGO[_ ]`),
		regexp.MustCompile(`(?i)TOOGO[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(ArtiDiag800 BT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOPSHOWS[ _-](X[19])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:T1[235]|T151|T2[12])-EEA|W-?109)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T1[235]|T151|T2[12])-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)W-?109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TPS-(SC10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Magictab (?:9GX|7GE|718))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NuclearSX-SP5)`),
		regexp.MustCompile(`(?i)Amazing[ _](X[35]s|X[123567]|A5S|A3[025]|A[468]|A4S|A5[057]|P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](X[35])s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](A5S|X[123567]|A[468]|A4S|A5[057]|A3[025])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWZ[-_ ](?:TabPlay|Y6[08]|Y52|A49|A[59]5|A567|AA8|QQ[12])|TWZQQ1|(?:OX_X1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWZ[_ ]TabPlay[_ ](12[56])`),
		regexp.MustCompile(`(?i)TWZ[-_ ]?(Y6[08]|Y52|A49|A[59]5|A567|AA8|QQ[12])`),
		regexp.MustCompile(`(?i)(?:TP_1_3000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID211H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Nitro 551)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA-(?:2[_ ](?:3G|Pro)|5[05][_ ]Power|[1-4]|[1246]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TX[53] MAX|TX[69]s|TX3 Mini|TX3MINI|TX5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TX([69])s`),
		regexp.MustCompile(`(?i)TX([35]) MAX`),
		regexp.MustCompile(`(?i)TX3 Mini|TX3MINI`),
		regexp.MustCompile(`(?i)TeachTouch[_ ]`),
		regexp.MustCompile(`(?i)TeachTouch (Table)`),
		regexp.MustCompile(`(?i)TECTOY_5029Y(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tech[ _]?pad|XTAB[ _-]|(?:3G_16|Dual (?:C1081HD|C981HD)|S813G|NOTE[_ ]4CAM|M5(?:Go|Plus)|M6Plus|Android 8(?:[\d.]*);(?: [\w-]+;)? 816x?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tech ?Pad[_ ](10Y|9x|i700|10Z|7QC|10QC)`),
		regexp.MustCompile(`(?i)TechPad[_ ]3Gx`),
		regexp.MustCompile(`(?i)Android 8(?:[\d.]*);(?: [\w-]+;)? (816x?)`),
		regexp.MustCompile(`(?i)Dual (C981HD|C1081HD)`),
		regexp.MustCompile(`(?i)XTAB[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)M5(Go|Plus)`),
		regexp.MustCompile(`(?i)NOTE[ _]4CAM`),
		regexp.MustCompile(`(?i)Tech ?pad[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)TECHSMART[_ ]`),
		regexp.MustCompile(`(?i)TECHSMART[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)TechniPhone 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:UP10SI[34]6LA|UP918|UP7[67]8|UP1018|UP10_SH36LAG|Ultrapad_UP10\.S36LA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(UP10SI[34]6LA|UP918|UP778|UP768|UP1018)`),
		regexp.MustCompile(`(?i)(?:Ultrapad_)?UP10[_.](SH36LAG|S36LA)`),
		regexp.MustCompile(`(?i)Teclast|P80_G3M2|TLA00[12]|TLA016|X98 Air III|M20_4G|X98 Air II\(HG5N\)|Tbook|X80 Power\(B2N4\)|P80H\(D1C2\)|T20\(T2E1\)|(?:[TM]40 Plus|T30|P80[XH]|P20HD|P10[_ ]HD|M40|P10SE?|M30_Pro|M40SE|P8[05]|P25(?:_T)?|P[23]0S|P[34]0HD)_(?:ROW|EEA|RUS)|P20HD\(N6H5\)|T40 Plus\(M7T3\)|T40Pro|T40 PRO(?:\(T1A1\))?|T10\(E3C[56]\)|P10S\(N4H5\)|98\(M1E[45789]\)|98\(M3E3\)|X10 \(M1D3\)|M89 Pro|M40\(N9H[123]\)|P20HD\(N6H7\)|M40SE\(M5T3\)|M40(?:SE?|Pro|Air)_(?:ROW|EEA|RUS)| P80X|P30Air|P10HD_Lite|(?:T50|M40_Plus|M40 Pro|T50Pro_W)_(?:ROW|EEA)`),
		regexp.MustCompile(`(?i)Tbook[_ -]([^;/]+)(?: Build|[;)]|$)`),
		regexp.MustCompile(`(?i)T10\(E3C[56]\)`),
		regexp.MustCompile(`(?i)T20\(T2E1\)`),
		regexp.MustCompile(`(?i)X10 \(M1D3\)`),
		regexp.MustCompile(`(?i)P10S(?:\(N4H5\)|_(?:ROW|EEA))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P20HD_?(?:ROW|EEA|RUS)|P20HD\(N6H[57]\)`),
		regexp.MustCompile(`(?i)P40HD_?(?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)P10[_ ]HD_(?:ROW|EEA)`),
		regexp.MustCompile(`(?i)P80[_ ](?:ROW|EEA)|P80_G3M2`),
		regexp.MustCompile(`(?i)P30S[_ ](?:ROW|EEA)`),
		regexp.MustCompile(`(?i)P85[_ ](?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)M([43]0)[_ ]?Pro[_ ](?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)M40\(N9H[123]\)`),
		regexp.MustCompile(`(?i)M40[_ ]Plus`),
		regexp.MustCompile(`(?i)M40S[_ ](?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)T40 ?PRO`),
		regexp.MustCompile(`(?i)T40 Plus(?:_(?:ROW|EEA)|\(M7T3\))`),
		regexp.MustCompile(`(?i)P80H\(D1C2\)`),
		regexp.MustCompile(`(?i)(P80[Xh]|P30HD|T30|M40|P25(?:_T)?|P10SE|P20S|T50)[_ ](?:ROW|EEA)`),
		regexp.MustCompile(`(?i)98\(M1E[45789]\)|98\(M3E3\)`),
		regexp.MustCompile(`(?i)X80 Power\(B2N4\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X98 Air III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X98 Air II\(HG5N\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Teclast[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Tecno|Phantom[56]|Phantom6-Plus|Phantom6S|DP7C Pro-SGA1`),
		regexp.MustCompile(`(?i)Phantom([56])`),
		regexp.MustCompile(`(?i)TECNO[ _]AD8`),
		regexp.MustCompile(`(?i)TECNO[ _]AD9`),
		regexp.MustCompile(`(?i)TECNO[ _]AC8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AD10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AB7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AX8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]F4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IA5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID3k(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID5b(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID5a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN1 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]7C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P701(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DP7C Pro-SGA1|TECNO[ _]DP7CPRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P703(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P704a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]DP10A Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]P904(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]RC6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CB7[j]?`),
		regexp.MustCompile(`(?i)Tecno[- _]C9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CF7[kS]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CF8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CC7S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CC9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:CC6|KC3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD6S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD8j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:CE9h|CE7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD6j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE7j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG8h?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:Mobile )?CH9n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:Mobile )?CH6[nh]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CH7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:CH6i|CI6n?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CI8n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CI7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CK7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CK6n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CK8n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CK9n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA6S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA8S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]Camon CX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CX Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]F3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]SA2S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1[fg](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:RA8|KB2h)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB2j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BA2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB8S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB6S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]SC7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BB2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BB4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC2c?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC3?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC1s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD2[dp]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]L6502S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]W5006S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD4[ai]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD4[jh](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B(?:E7|F6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BE6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BE8[i]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BF7h?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]SA1S Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KG5[mh]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:Mobile )?BF7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KA7O?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]LB6?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KB7j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KB8?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:KC8S?|KC2j?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:KC6S?|KC1j)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]BB4k(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD6a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD7[hS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE5[jk]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:KF6(?:ks|[nhmjki])?|PR651[EH]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF7j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF6p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?KG6k?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG5[nkjq]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG7[nh]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO(?: Mobile)?[ _]KG6p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO(?: Mobile)?[ _]KG8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KH7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG5p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KH6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile[ _])?KI5[km]`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile[ _])?KI5`),
		regexp.MustCompile(`(?i)TECNO[ _]KI8`),
		regexp.MustCompile(`(?i)TECNO[ _]KI7`),
		regexp.MustCompile(`(?i)TECNO[ _]KC1h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE5S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KC1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]K9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KA9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]DP8D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](P702AS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA7 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LB7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LC6a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]LB8a?`),
		regexp.MustCompile(`(?i)TECNO[ _]LC7S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LC8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]J8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]RA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]W3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]WX3P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LD7j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE6h?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?LG6n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LH6n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LF7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LG7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LG8n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LH7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno (F2) ?LTE`),
		regexp.MustCompile(`(?i)(?:TECNO[-_])?L8Plus`),
		regexp.MustCompile(`(?i)TECNO[ _-]?(T611)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Tecno[ _-]?([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)Preo[ _]`),
		regexp.MustCompile(`(?i)Preo[ _]P([23])`),
		regexp.MustCompile(`(?i)Tele2[ _]|Tele2fon`),
		regexp.MustCompile(`(?i)Tele2fon[_ ]V6`),
		regexp.MustCompile(`(?i)Tele2[ _](Mi[dn]i)[ _]1.1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _]Midi[ _]2.0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _]((?:Maxi|Midi)(?:[_ ](?:Plus|LTE))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _](Mi[dn]i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TELEFUNKEN|Foxtrot|TEL-1013GIQA|TEL-1014GIQ|TEL-73GIQA|TEL-74GIQ|TF-SP(?:500[12]|4002)|(TF-MID(?:[78]02G|70[78]G|80[46]G|9705RG|9707G|7805G|100[57]G|1010G))| TF5X| TF6|TF500|TF501_EC|(TF-LED(?:50S04T2SU|50S25T2SU|58S06T2SU|65S75T2SU|32S39T2S|32S5[289]T2S|32S60T2S|32S7[045]T2S|40S63T2S|40S19T2S|40S41T2S|43S94T2S|43S22T2SU))|LTE_LIMA|LTE Mike|Diamond_LTE|Outdoor (?:LTE|WT4|WT4-S)|TELP-1013KBC`),
		regexp.MustCompile(`(?i)TEL-(1014GIQ|74GIQ|73GIQA(?:11)?)`),
		regexp.MustCompile(`(?i)(?:TELEFUNKEN)?(TF-SP(?:500[12]|4002)|Outdoor (?:LTE|WT4-S|WT4)|Foxtrot|TF5X|TF6)`),
		regexp.MustCompile(`(?i)(TF-MID(?:[78]02G|70[78]G|80[46]G|9705RG|9707G|7805G|100[57]G|1010G)|TF501_EC|TELP-1013KBC)`),
		regexp.MustCompile(`(?i)(TF-LED(?:50S04T2SU|50S25T2SU|58S06T2SU|65S75T2SU|32S39T2S|32S5[289]T2S|32S60T2S|32S7[045]T2S|40S63T2S|40S19T2S|40S41T2S|43S94T2S|43S22T2SU)|TF500)`),
		regexp.MustCompile(`(?i)TELEFUNKEN, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)TELEGO|Wise2_plus`),
		regexp.MustCompile(`(?i)Telego[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Telenor|(?:Infinity[_ ](?:E[2-5]|K2?|A2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Telenor[ _]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Infinity[ _](E[2-5]|K2?|A2)`),
		regexp.MustCompile(`(?i)Telit_Mobile_Terminals-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Telit[\-_]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Telma|(?:F1x4G|Feel_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TELMA F1\+4G`),
		regexp.MustCompile(`(?i)TELMA[_ ]FEEL`),
		regexp.MustCompile(`(?i)Telma[_ ](F2|Titan[_ ]4G|EGO)`),
		regexp.MustCompile(`(?i)TELO[_ ](?:TE6|M5|TE580_CO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TELO[_ ](TE6|TE580_CO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TPS3[29]0`),
		regexp.MustCompile(`(?i)TPS(3[29]0)`),
		regexp.MustCompile(`(?i)Teracube (2e|One)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hudl (?:[^/;]+)(?: Build|[;)])|W032i-C3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hudl ([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)W032i-C3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASEBOOK_3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ThL[ _-]|(?:Knight 2|THL5000|T200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)THL ?(5000)`),
		regexp.MustCompile(`(?i)(T200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Box 1 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Box 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ThL[ _-]*([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)ThL[ _-]*([^ ;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Primo(7|8)|QM73[45]-8G|QM734-2|QM736-8G\(HD\)|8950|MID1002|5014G|TEO(?:13P|10S|7RK|X10[23]|104G)|Friendly_TH101|Delight TH201|HERO10RK|SPTEO10BK16)(?:[);/ ]|$)|(?:Tlink|Every)[0-9]+|THOMSON[, ]`),
		regexp.MustCompile(`(?i)Primo(7|8)`),
		regexp.MustCompile(`(?i)QM736-8G\(HD\)`),
		regexp.MustCompile(`(?i)8950(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TEO(13P|10S|7RK|104G|X10[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(5014G|T510H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tlink([0-9]+)`),
		regexp.MustCompile(`(?i)Every([0-9]+)`),
		regexp.MustCompile(`(?i)THOMSON[ _]SEREA500`),
		regexp.MustCompile(`(?i)((?:49|55)UC6306|55UC63|32HD55|40FD54|55UD63)`),
		regexp.MustCompile(`(?i)Thuraya[ _](X5-Touch)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TiPhone ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TIVO[ ,]`),
		regexp.MustCompile(`(?i)Tibuta[_ ]`),
		regexp.MustCompile(`(?i)Tibuta[_ ]MasterPad-(E100)`),
		regexp.MustCompile(`(?i)TIS001[_-]|TIS_?001`),
		regexp.MustCompile(`(?i)TIS001[_-]S([34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIS001[_-]T2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIS_?001([ABC])?`),
		regexp.MustCompile(`(?i)(TC1050G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tmovi[ _]|(?:Infinit[ _](?:Lite[_ ]2|X[_ ]CAM)|Infinit MX(?: Pro)?|Vision_PRO|VISION ULTRA|Epix|Yeah_Go|Insignia Delta 2|Insignia_(?:Delta3|Lab))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tmovi[ _]Prime`),
		regexp.MustCompile(`(?i)Infinit[_ ]X[_ ]CAM`),
		regexp.MustCompile(`(?i)Infinit[_ ]Lite([_ ]2)?`),
		regexp.MustCompile(`(?i)Insignia_(Lab)`),
		regexp.MustCompile(`(?i)Insignia[ _]Delta[ _]?([32])`),
		regexp.MustCompile(`(?i)Tinai (K[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TiNMO[- _](A11|K3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tolino Tab ([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)TONE[ _-](e19|m1[57]|e2[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOKY (A19|W1|T8[368]|T1982)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOKY A9PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Coto[_ ]|X1013`),
		regexp.MustCompile(`(?i)TopDevice|TDTV\d{2}BS\d{2}[FHU]|TDT4518_4G`),
		regexp.MustCompile(`(?i)(?:TopDevice_)?(TDTV\d{2}BS\d{2}[FHU])`),
		regexp.MustCompile(`(?i)Toplux ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TOPSION|TP01_box(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOREX[- ](?:PS12|S18|S27|PAD 8 ?PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOREX-(PS12)`),
		regexp.MustCompile(`(?i)TOREX PAD 8 ?PRO`),
		regexp.MustCompile(`(?i)TOREX[- ](S18|S27)`),
		regexp.MustCompile(`(?i)(?:EGO[ _](?:Max[ _]S|Surf[_ ][iS]|Phab 3G|Note 4G)|DROIDZ (?:Drive\+|ATOM [SX]|Portal(?: X)?|Swivel|Smart|Trend|Force|Span|Play|Blast|Sport|Excel|Motion|Sky 3g|Rotate|Duo(?: Slim)?|Dash(?: X)?|Quad|Match TV|Beat TV|Avatar TV|Easy|Push i|Edge\+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DROIDZ (Duo(?: Slim)?|Dash(?: X)?|Push i|Edge\+|Drive\+|Portal(?: X)?)`),
		regexp.MustCompile(`(?i)DROIDZ (Swivel|Trend|Force|Span|Smart|Atom X|Blast|Sport|Quad|Beat TV|Avatar TV|Match TV|Easy|Excel|Play|Rotate|Motion)`),
		regexp.MustCompile(`(?i)EGO[ _](Max[ _]S|Surf[_ ][iS])`),
		regexp.MustCompile(`(?i)Toshiba|TSBNetTV/|portalmmm/[12].0 TS|(?:T-01C|T-0[12]D|IS04|IS11T|AT1S0|AT300SE|AFTDCT31|AT(?:7-C|10-A|10[PL]E-A|100|200|270|300|330|374|400|470|500a?|503|570|703|830)|AFTKMST12|AFTBAMR311|SATELLITE (?:C655|L50-C|Pro L300|A100))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AT(100|200|270|300|330|374|400|470|500|503|570|703|830)`),
		regexp.MustCompile(`(?i)AT10([PL])E-A`),
		regexp.MustCompile(`(?i)SATELLITE (C655|Pro L300|A100)`),
		regexp.MustCompile(`(?i)TOSHIBA, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Toshiba[ /_\-]?([a-z0-9_ \-]+) Build`),
		regexp.MustCompile(`(?i)Toshiba[ /_\-]?([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12].0 (TS[a-z0-9 ]+)`),
		regexp.MustCompile(`(?i) (770[NG]|1100AS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOUCHMATE|(TM-(?:MID870SB|MID1050WKD|MID1020A|MID794C|MID795|MID710|MID798|MID792|MID788D|SM500N|SM410|MID1010))`),
		regexp.MustCompile(`(?i)(TM-(?:MID1020A|MID794C|MID795|MID710|MID798|MID792|MID788D|MID10[14]0))`),
		regexp.MustCompile(`(?i)(TM-(?:SM500N|SM410))`),
		regexp.MustCompile(`(?i)Touchmate ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Transpeed[_ ]|(?:TR99 MINI\+|TR99)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TR99 MINI\+`),
		regexp.MustCompile(`(?i)(?:Transpeed[_ ])?(TR99|H616|6K|X4S?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TrekStor|Surftab) ([^/;]+)(?: Build|\))|Surftab[^;\)]*(?:[;\)]|$)|ST10216-2A|ST13416-1|VT10416-[12]|TFQCOAL01232|TFMTKAW01232|PEAQ PET 100|Xintroni10.1`),
		regexp.MustCompile(`(?i)ST10216-2A|VT10416-[12]`),
		regexp.MustCompile(`(?i)TrekStor ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Surftab ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Surftab[ _]([^;\)]*)(?:[;\)]|$)`),
		regexp.MustCompile(`(?i)(TFQCOAL01232)`),
		regexp.MustCompile(`(?i)Xintroni10.1`),
		regexp.MustCompile(`(?i)(PEAQ PET 100)`),
		regexp.MustCompile(`(?i)Trevi[ _]|TAB[ _]10[ _]3G[ _]V16|TAB[ _](7|8)[ _]3G[ _]V8|TAB9 3G|MINITAB 3GV|Phablet[ _](?:4|4\.5|5|5\,3|6)[ _]?[CSQ]|REVERSE[ _]5\.5[ _]?Q`),
		regexp.MustCompile(`(?i)TAB[ _]?(7|8)[ _]3G[ _]V8`),
		regexp.MustCompile(`(?i)TAB[ _]?9[ _]3G[ _]V8`),
		regexp.MustCompile(`(?i)TAB[ _]?9[ _]3G`),
		regexp.MustCompile(`(?i)TAB[ _]10[ _]3G[ _]V16`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4[ _]?C`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4[ _]?S`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4.5[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]5[ _]?S`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]5,3[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?REVERSE[ _]5.5[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]6[ _]?S`),
		regexp.MustCompile(`(?i)Trevi[_]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(A23 Max|A75 Pro Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Passion[-_](?:1S|PRO|PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Trio V51 DT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Orion R68G|Draco AW80|Draco H3|Vega S95_(?:Meta|Pro|Telos))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) TRUE BEYOND TAB 3G|HPH07|SMART[ _](4G Adventure(?: Pro)?|MAX 4.0 PLUS|4G[ _](?:GEN C [45]\.[05]|M1 Plus|Champion|Speedy 5\.0 Plus|Speedy[_ ]5inch|P1))|Alpha 5G|SMART Champ 4\.0|TRUE SMART 7.0 Quadcore|SMART 4G M1`),
		regexp.MustCompile(`(?i)Alpha 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART MAX 4.0 PLUS`),
		regexp.MustCompile(`(?i)SMART Champ 4\.0`),
		regexp.MustCompile(`(?i)SMART 4G Gen C ([45].[05])`),
		regexp.MustCompile(`(?i)SMART 4G Speedy 5.0 Plus`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]Speedy[_ ]5inch`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]Champion`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]P1 Prime`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]P1`),
		regexp.MustCompile(`(?i)SMART[ _]4G M1 Plus`),
		regexp.MustCompile(`(?i)TRUE SMART 7\.0 Quadcore`),
		regexp.MustCompile(`(?i)(SSB-508[ED])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TL554B|TC504B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail TT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Turbo[_ ]?(?:X5[_ ]?(?:Max|Black|Space|Hero)|X8|X6[ _]Z|X[ _]Ray)|Monsterpad7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX5Space(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX5Hero(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX[ _]Ray(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]?X5[ _]?Black(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X5[ _]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X6[ _]Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Monsterpad7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[-_]X|(?:TURBOX_I4G|Hive V 3G|Calltab10.1|Calltab2GB10|Calltab7inch|Turbox_S3|Fire_II_WiFi|Breeze IV|Aqua_II|RainbowIII3G|RubikII7|Rubik 10\.1 II|Rubik_10_III|QUAD-CORE A33 inet)(?:[);/ ]|$)|Mercury`),
		regexp.MustCompile(`(?i)Turbo-X_A2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo-X_e3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mercury`),
		regexp.MustCompile(`(?i)Turbo-X_pi_4G|Turbo_X_Pi 1 4G`),
		regexp.MustCompile(`(?i)Turbo-X Ice(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aqua_II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hive V 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fire_II_WiFi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Breeze IV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RubikII7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rubik 10.1 II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rubik_10_III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RainbowIII3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Calltab10.1`),
		regexp.MustCompile(`(?i)TURBO-X, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Turbo-X Tablet([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Turbo-X ([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:Turbokids[-_ ]?(TMNT|3G|S4|Princess|3GNEW)|Monsterpad 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbokids[-_ ]?3GNEW`),
		regexp.MustCompile(`(?i)Turbokids[-_ ]?(TMNT|3G|S4|Princess)`),
		regexp.MustCompile(`(?i)Turbopad[-_ ]?(72[34]|80[23]|912|101[456]|Pro)(?:NEW)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TURKCELL[_ ]`),
		regexp.MustCompile(`(?i)Turbo T50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T([124-8])0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxi Plus 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MaxiPRO5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turkcell_T_Tablet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TWOE[-_ ]E450R|F534L|F572L|E500A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWOE[-_ ](E450R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F534L|F572L|E500A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tymes[ _](V5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TT175(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Liantong)?(?:VP00[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP001`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP002`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP003`),
		regexp.MustCompile(`(?i)(USCC-[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)UMI(?:DIGI)?[ _]|(?:A[5]_Pro|.+; A[79] Pro|S3_Pro|ROME[_ ]X|BISON|hammer_S|S2 LITE|London|Z2_PRO|C NOTE 2|A11 Pro Max|Power 3|Android 10;(?: [\w-]+;)? (?:A3[SX]|A7S)|RP0[1234]|MT01|MP0[1-68]|MP1[78]|Plus E|S2_PRO|RP05|One Pro|Diamond_X|Android [67](?:[\d.]*);(?: [\w-]+;)? Z Pro|Android 8(?:[\d.]*);(?: [\w-]+;)? A1_PRO)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MT01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(A[13579]|Z2|S3)[_ ]Pro`),
		regexp.MustCompile(`(?i)MP01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP05(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)ROME[_ ]X`),
		regexp.MustCompile(`(?i)RP05(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP02(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP03(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP04(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)UMI[_ ]SUPER`),
		regexp.MustCompile(`(?i)UMI[_ ]ZERO`),
		regexp.MustCompile(`(?i)MP02(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP08(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP03(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP04(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP06(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i) (A3[SX]|A7S)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(?:UMI_)?(London|Diamond(?:_X)?)`),
		regexp.MustCompile(`(?i)UMI(?:DIGI)?[ _]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)UNIWA[ _]|(?:W888)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNIWA[ _](X5|F40)`),
		regexp.MustCompile(`(?i)(W888)`),
		regexp.MustCompile(`(?i)UNNO[_ ]`),
		regexp.MustCompile(`(?i)UNNO[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)UOOGOU[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)UTOK (45[01]D)|(?:Dorel \d|Dorel 3S|Hello 7Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UTOK (45[01]D)`),
		regexp.MustCompile(`(?i)Dorel (\d)`),
		regexp.MustCompile(`(?i)utstar[ _-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)UTIME[ _](U6|G7|U100|[TX]1|FX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uzbekistan(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGOOS-|(?:Android 11;(?: [\w-]+;)? UT8|TOX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGOOS-UT3 ?Plus`),
		regexp.MustCompile(`(?i)UGOOS-(\w{2}\d+\w?)`),
		regexp.MustCompile(`(?i) (UT8|TOX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A101S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uhappy|UP?580|UP350|UP[35679]20`),
		regexp.MustCompile(`(?i)UP([35679]20)`),
		regexp.MustCompile(`(?i)Uhappy[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Uhappy[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone|Gemini Pro|Power Armor14|Power 3S|Power_[356]|Power_5S|S(?:10|9)_Pro|(?:Note [89]P|Note 1[23]P|Armor(?:[ _](?:[2367]|2S|X[236]|6[SE]|3WT|3W|X))?|U00[78][ _]Pro|Be[ _]X|Be[ _]Touch(?:[ _][23])?|Be[ _](?:One|Pure)(?:[ _]Lite)?|Note 14|Note (?:11P|7T)|Tiger_lite|Note_7P|Note 10P|Paris_(?:Lite|X)|Paris|P6000_Plus|Vienna|Android 11;(?: [\w-]+;)? Note 6P?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S(10|9)_Pro`),
		regexp.MustCompile(`(?i)Be[ _]Touch([ _][23])?`),
		regexp.MustCompile(`(?i)Be[ _]Pure[ _]Lite`),
		regexp.MustCompile(`(?i)Be[ _]Pure`),
		regexp.MustCompile(`(?i)Be[ _]One[ _]Lite`),
		regexp.MustCompile(`(?i)Be[ _]One`),
		regexp.MustCompile(`(?i)Be[ _]X`),
		regexp.MustCompile(`(?i)U(00[78]) Pro`),
		regexp.MustCompile(`(?i)Power Armor ?(\d+) Pro`),
		regexp.MustCompile(`(?i)Power Armor (\d+|19T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]6S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([679])E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([25])S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]3W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]3WT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _](1\d|11T) 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _](8) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([236789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor([^;/)]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Gemini Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power[_ ]([356][SL]?)`),
		regexp.MustCompile(`(?i)Note[ _]([78]P|7T|6|14)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Note ([69]|1[123]|10)P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone[_ ]Tab[_ ]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Ulefone[_ ](X|S1[ _]Pro|S[17])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Ulefone[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)VisionBook[ _]|([78]Qa_3G|7A_3G|VB_10Q_Plus|10A_LTE_eea|(?:8|10)C_LTE|10L-PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VisionBook[ _](?:10Qi|7Q[i]?|8Q[ei]?|P70|8Qi_3G)(?:[ _](?:[34]G|Plus|LTE))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(7A(?:[ _](?:[34]G)))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([78])Qa_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_10Q_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(8|10)C_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_10Q_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10A_LTE_eea(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VB_10Q_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_P50Plus_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VisionBook[ _](?:P50 LTE|P55 X2 LTE|P55 LTE(?: Pro)?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S900PROBT|S900_Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uniden[ _](C505|Prime 500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Titan(_pocket)?|Jelly-Pro|Jelly2(?:_JP)?|Atom_X?L|Ticktock(?:-S)?|Titan Slim|TANK 01|TANK2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Jelly)-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jelly2(?:_JP)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Titan|Atom_X?L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U((?:67[013]|680)C|(?:452|504)TL|683CL|69[36]CL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNIQCELL_A4(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)Uniscope[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Uniscope[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(UT10)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(EA630)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Plasma Mobile|WebTV/(\d+\.\d+)|TV Bro|(?:M10 Ultra|FO-R15|TVBOX|Smart[ _]?TV|SmartATV|M8S\+ 4K|PCBox|rk(?:3128|322x|3368)(?:[_-]box)?|H10 PLAY|Smart AIO TV|TVBOX_L|L-BOX|TVBOX-5G|mips.+(?:Opera TV|wireless|wired)|smartbox|TV BOX|I12Pro Max|(?:audi_)?ks1280x480|AT&T TV|RealtekATV|AOSP on r33a0|hx322x_box|X98_S500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WebTV/(\d+\.\d+)`),
		regexp.MustCompile(`(?i)M10 Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FO-R15|X98_S500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Smart[ _]?TV|SmartATV|PCBox|hx322x_box|rk(?:3128|322x|3368)(?:[_-]box)?|TVBOX|Smart AIO TV|TVBOX_L|L-BOX|TVBOX-5G|AT&T TV|RealtekATV|TV Bro|AOSP on r33a0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S\+ 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H10 PLAY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Opera TV|wireless|wired|smartbox|TV BOX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I12Pro Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:audi_)?ks1280x480`),
		regexp.MustCompile(`(?i)Unnecto|(?:U513|U5151|U61[1356]|U7[12]0|U-830|U90[35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNSP7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNSP7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Unonu[ _-]|(?:U4001|UT3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U4001|UT3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Unonu[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Unonu[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QOOQ|QOOQ-V[1-5]0?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QOOQ-V([1-5])0?`),
		regexp.MustCompile(`(?i)(?:DT[45]0|i6200[AS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DT[45]0|i6200[AS])`),
		regexp.MustCompile(`(?i)(Albatros C2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(32LH1210|50LU1210|55LU1210|43LU1210|24LH1211)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V[- ]hope[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:VPA051|VA-10J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VA-10J)`),
		regexp.MustCompile(`(?i)VAVA[ _](X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Camellia_II|Cactus II|Maple III|Maple-II|Cactus-Pro|LavenderII|Jasmine-II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Camellia_II|Cactus II|Maple III)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Maple|Jasmine|Lavender)-?II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VDVD[_ ](P20|IX21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEON[_ ](C8680)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VETAS[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VGOTEL|(?:Venture V(?:[278]|12)|VentureV10|Ocean[_ ][689]|Ocean9L|NEW (?:11|22|[57])|i_Smart)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venture ?V([278]|1[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ocean[_ ]?([689]|9L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEW (\d+)`),
		regexp.MustCompile(`(?i)VIDA[-_ ](?:i-?([45]01|512|450)|V401)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIDA[-_ ](?:i-?(\d+))`),
		regexp.MustCompile(`(?i)VIDA[-_ ](V401)`),
		regexp.MustCompile(`(?i)(?:vi20220819)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVIMAGE[ _]([^/;)]+)(?:_EEA)?(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:LIGHT MINI|VIWA A5\+|LIGHT PLUS|LIGHT ONE|POWER P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIWA A5\+`),
		regexp.MustCompile(`(?i)VK-VK([79]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:VK700)-MAX|VK700 Pro|T5SE|VK700[0X]|vk6050|vk6735|vk700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VK700)-MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VK700) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T5SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VK(700[0X]|6050|6735|700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOGA[ _]`),
		regexp.MustCompile(`(?i)(VK-740-BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VucaPad_(\w+)`),
		regexp.MustCompile(`(?i)ZYVV1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vankyo[_ ]|(?:QTAB1010X|S10_ROW|S[23]0_EEA|Z[14]_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vankyo[_ ]S(10|[78])`),
		regexp.MustCompile(`(?i)(S[23]0|Z[14])_EEA`),
		regexp.MustCompile(`(?i)QTAB(1010X)`),
		regexp.MustCompile(`(?i)Vargo[; _]|(?:V210101|Android 8(?:[\d.]*);(?: [\w-]+;)? VX4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V210101|VX4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M910A|M783K|M783K-16G|M1072R-3G|KingPad_(?:[KM]10|SA10|SA8)(?:Pro)?)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KingPad_([KM]10|SA10|SA8)(Pro)?`),
		regexp.MustCompile(`(?i)(M910A|M783K|M783K-16G|M1072R-3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vega (Q7128)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LD-65SU8815BS|LD-32SR4850BS|LD-50SU8921BS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CX-508|CX-551|Reiv 500|Creon F5|Isprit U50|Isprit-U50-LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Isprit U50|Isprit-U50-LTE`),
		regexp.MustCompile(`(?i)(CX-508|CX-551|Reiv 500|Creon F5)`),
		regexp.MustCompile(`(?i)(ACE10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VCT([a-z0-9_-]+)|CT9A03W23|CT9A06P23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCT9B06Q22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CT9A03W23|CT9A06P23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCT([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:RP-UDM0[12]A|RP-UDP05A|JO-UQM10A|UQM1[23]A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RP-UDM0[12]A|RP-UDP05A|JO-UQM10A)`),
		regexp.MustCompile(`(?i)(UQM1[23]A)`),
		regexp.MustCompile(`(?i)QTA(SUN[12]|XIA1|QZ3|QZ3KID|IR7)|QMV7[AB]|WTVIS01`),
		regexp.MustCompile(`(?i)QTAXIA1|QTAIR7`),
		regexp.MustCompile(`(?i)QMV7[AB]`),
		regexp.MustCompile(`(?i)Vernee|(?:Mars Pro|Apollo[ _](?:Lite|X)|Thor (?:E|Plus)|X2_euro|M7_EEA|T3 Pro|V2 Pro|Apollo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Apollo[ _]Lite`),
		regexp.MustCompile(`(?i)Apollo[ _]X`),
		regexp.MustCompile(`(?i)(V2|T3) Pro`),
		regexp.MustCompile(`(?i)Vernee[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Vernee[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)MotionE11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V-Pad Pop)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vertex[_ -]|(?:Luck|Luck_L1[02]0_[34]G|Lion_Dual|V709X|TAB X8|TAB X10|Tab [43]G (?:7-2|8-1|10-1)|Tab_3G_7-1|Pro_P3[01]0_4G|Lion_DC|Baccara|Eagle[ _]4G|ImpressMAX|Lion [1-3])(?:[);/ ]|$)|Impress[ _]([^;/]+)(?:Build|\))`),
		regexp.MustCompile(`(?i)(?:Vertex_)?Luck[_ ]L[_ ](5045)[_ ]([34])G`),
		regexp.MustCompile(`(?i)(Lion_Dual|Lion_DC|Baccara|Eagle[ _]4G|Luck[_ ]L1[023]0(?:[_ ][34]G)?|Luck)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Impress ?MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMPRESS ECLIPSE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro_P(3[01]0)_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Impress_Luck[_ ]?4G_NFC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lion ([1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Impress[ _][a-z]+)([34])G(?:Build|\))`),
		regexp.MustCompile(`(?i)(Impress[ _](?:[^;/]+))(?:Build|\))`),
		regexp.MustCompile(`(?i)(V709X)`),
		regexp.MustCompile(`(?i)TAB X(8|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab[ _]([43])G[ _]([78]|10)-([21])`),
		regexp.MustCompile(`(?i)Vertu[ ]?([a-z0-9]+)|(?:ASTER(?: [PT])?|CONSTELLATION X|VTL-202[12]01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASTER( [PT])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VTL-202101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VTL-202201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CONSTELLATION X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vertu[ ]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5009`),
		regexp.MustCompile(`(?i)verykool[ _]?S5001`),
		regexp.MustCompile(`(?i)verykool[ _]?S5004`),
		regexp.MustCompile(`(?i)verykool[ _]?S5007`),
		regexp.MustCompile(`(?i)verykool[ _]?s5015`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5011`),
		regexp.MustCompile(`(?i)verykool[ _]?s5019`),
		regexp.MustCompile(`(?i)verykool[ _]?S5005`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5560`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5200`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5050`),
		regexp.MustCompile(`(?i)verykool[ _]?S5030`),
		regexp.MustCompile(`(?i)verykool[ _]?s5527`),
		regexp.MustCompile(`(?i)verykool[ _]?s5526`),
		regexp.MustCompile(`(?i)verykool[ _]?S5530`),
		regexp.MustCompile(`(?i)verykool[ _]?S5525`),
		regexp.MustCompile(`(?i)verykool[ _]?S5524`),
		regexp.MustCompile(`(?i)verykool[ _]?s5516`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5550`),
		regexp.MustCompile(`(?i)verykool[ _]?s5035`),
		regexp.MustCompile(`(?i)verykool[ _]?s5034`),
		regexp.MustCompile(`(?i)verykool[ _]?s5037`),
		regexp.MustCompile(`(?i)verykool[ _]?s5036`),
		regexp.MustCompile(`(?i)verykool[ _]?s6005x`),
		regexp.MustCompile(`(?i)verykool[ _]?SL6010`),
		regexp.MustCompile(`(?i)verykool[ _]?S4006[QT]?`),
		regexp.MustCompile(`(?i)verykool[ _]?S4007`),
		regexp.MustCompile(`(?i)verykool[ _]?S4008`),
		regexp.MustCompile(`(?i)verykool[ _]?s5017|Dorado s5017`),
		regexp.MustCompile(`(?i)verykool[ _]?s4510`),
		regexp.MustCompile(`(?i)verykool[ _]?s5204`),
		regexp.MustCompile(`(?i)verykool[ _]?s5205`),
		regexp.MustCompile(`(?i)verykool[ _]?s5528Jr`),
		regexp.MustCompile(`(?i)verykool[ _]?s5528`),
		regexp.MustCompile(`(?i)verykool[ _]?s5702`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5029`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5565`),
		regexp.MustCompile(`(?i)verykool[ _]?TL8010`),
		regexp.MustCompile(`(?i)verykool[ _]?T7440`),
		regexp.MustCompile(`(?i)verykool[ _]?T7445`),
		regexp.MustCompile(`(?i)verykool[ _]?([^/;)]+)(?:[ _]SL?[0-9]{4}[QT]?)(?: Build|[);])`),
		regexp.MustCompile(`(?i)verykool[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VESTA_SMART|VESTA32LD86(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vestel[ _]|Venus[ _](GO|E[2-5]|V[1-9]|Z[1-9]0)|V_?TAB|VP74|VT97PRO|VSP145M|VSP250[GS]|VSP355[GS]|V3_5580_Dual|V TAB Z[12]`),
		regexp.MustCompile(`(?i)V_TAB_([0-9]{4}[A-Z]?)`),
		regexp.MustCompile(`(?i)V[_ ]TAB[_ ](Z[12])`),
		regexp.MustCompile(`(?i)Venus[ _]V([1-9])([ _][0-9]{4})?`),
		regexp.MustCompile(`(?i)Venus[ _]Z([1-9]0)`),
		regexp.MustCompile(`(?i)Venus[ _]GO`),
		regexp.MustCompile(`(?i)Venus[ _]E2 Plus`),
		regexp.MustCompile(`(?i)Venus[ _]E([345])`),
		regexp.MustCompile(`(?i)Vestel[ _]5530[ _]Dual`),
		regexp.MustCompile(`(?i)Vestel[ _](5000|5530)`),
		regexp.MustCompile(`(?i)(?:Zippers Tab 10i 3G)|Vexia FCS E2 CLM`),
		regexp.MustCompile(`(?i)(Zippers Tab 10i 3G)`),
		regexp.MustCompile(`(?i)ViBox[ _](V[25])[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VI10[68]|VI86)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Videocon[_ \-]|(?:VT75C|V50DC|V406018|V512930|V50(?:2430|3630|4730|5024|5430|4630|5[98]20)|Z45_(?:Dazzle|Amaze)|Z45Q Star|Z50 Nova)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Videocon[_ \-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)VT75C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V502430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V50DC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505024(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V503630(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V504730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V406018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V512930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V505430|V504630)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z45_(Dazzle|Amaze)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z45Q Star(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z50 Nova(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ViewSonic|ViewPad|ViewPhone|(?:IFP(?:98|86|[67]5)50-3|VSD[0-9]+|vsi7q_1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?V500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ViewSonic A8\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?ViewPhone ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?ViewPad[ _]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(VSD[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IFP(98|86|[67]5)50-3`),
		regexp.MustCompile(`(?i)Vinabox[-_ ]X(\d*)[-_ ](2018)`),
		regexp.MustCompile(`(?i)Vinabox[-_ ]X(\d*)[-_ ]?Plus`),
		regexp.MustCompile(`(?i)Vinabox[-_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VMP-(015-162|021-82|041-162|011-81|025-324|045-664)(?:[);/ ]|$)|VMP023\.`),
		regexp.MustCompile(`(?i)VMP023\.`),
		regexp.MustCompile(`(?i)(XA Pro) Build`),
		regexp.MustCompile(`(?i)VMP0617(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z08MK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO PRO2X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vipro Edge 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO PRO[ _-]?([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V608C|V50[15]c|VT701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(50[15]|608)C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VT701)`),
		regexp.MustCompile(`(?i)Vision ?Touch`),
		regexp.MustCompile(`(?i)(?:Prime10(?:SE|ES)|Elite(?:9QL|8QI|7QS))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime10(SE|ES)`),
		regexp.MustCompile(`(?i)Elite(9QL|8QI|7QS)`),
		regexp.MustCompile(`(?i)Vitelcom|portalmmm/[12].0 TSM`),
		regexp.MustCompile(`(?i)TSM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TSM([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12].0 (TSM[a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(24LH1207|43LU1204)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SMART[_ ]EV[56]|EV7_Pro|EV6 ELITE|EV5 X|EV7_Play| EV7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EV7)_Pro`),
		regexp.MustCompile(`(?i)(EV6) ELITE`),
		regexp.MustCompile(`(?i)(EV7)_Play`),
		regexp.MustCompile(`(?i) EV7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART[_ ](EV[56])`),
		regexp.MustCompile(`(?i)VIVAX|(?:Fly4|Fly5[_ ]Lite|Fun[_ ]S500|Point[_ ](?:X[12]|X50[123]|X450)|PRO3|32LE77SM|40LE77SM|FUN S1|FUN_S20|TPC[-_ ](?:7121|80[56])3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly5[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Point_X([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fun[_ ]S500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUN[ _]S(10?|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[ _]Fly ?(\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[ _]Fly[ _]V(1|550)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIVAX )?(Point[ _](?:X551|X50[123]|X450))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART Point X5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[_ ]PRO[_ ]?(3|M1)`),
		regexp.MustCompile(`(?i)TPC[-_ ](7121|806)([34])G`),
		regexp.MustCompile(`(?i)(?:TABLET )?TPC[-_ ](\d+) ?([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIVAX-)?(40LE78T2S2SM|32LE77SM|40LE77SM)`),
		regexp.MustCompile(`(?i)((?:VIV-|BBG-)?vivo)|iQOO Neo \d|(?:V1730(D[AT]|GA)|V18(01A0|13B[AT])|1819|V1937|I(?:192[78]|201[28])|V(?:2006|202[2-9]|203[0-35-9]|204[0-3568]|205[02-5789]|206[015689]|2070|210[12459]|211[01]|212[0469])|V(?:2026|2031|2036|2043)_21|V1936AL|V(?:1732|1809|181[3468]|182[149]|183[1268]|1901|191[13469]|192[1-48]|193[0246]|194[15]|195[05]|196[235]|198[16]|1990|200[125]|201[12]|202[03-5]|203[146]|204[6789]|205[45679]|2066B|206[1568]|207[23]|208[05]|2099|2106|211[18]|212[135]|213[346]|214[1358]|2162)A|V1824BA|V(?:1731|1818|2020)CA|V(?:1818|1938)CT|V(?:1730|2031)EA|V(?:1732|1809|181[3468]|182[19]|183[1268]|1901|1913|1938)T|V2029_PK|V2044|V2069A|V217[12]A|I201[19]|I2126|X50 Pro\+|I220[12368]|I2127|V211[4-8]A?|V204[57]A?|V210[28]A?|I2009|I2017|I2022|V215[4678]A|V215[0-478]|V218[03568]A|V2180GA|V219[069]A|V213[012459]A?|V2023EA|V1962BA|V212[57]|V214[0-79]|V1930|V216[0289]|V2164[KP]A|V216[234568]A|V217[08]A|PA2170|V220[37]A|V220[1-9]|V221[789]A|V221[247]|V222[079]A|V222[189]|V22[34]1A|V224[234]A|V224[679]|V2266A|V2301A|V2302|V223[189]A|V223[0178]|V2253|V2254A?|V228[34]A|S7t 5G| (?:Y30g|Y20T|Y31s 5G|Y33s|Y50t|Y55s 5G)|V2166(?:BA)?|iQOO U[13]x?|NEX 3s 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PA2170(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2170A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (Y20T|Y30g)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1824[B]?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1955A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2171A|I2017)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2172A|I2022)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I192[78](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2165A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2049A|I2009)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2154A|iQOO Neo 5S`),
		regexp.MustCompile(`(?i)I2012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1922A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1916A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1914A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1981A|iQOO Neo 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1936A[L]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2055A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2118A|iQOO Neo 5 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2199A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1986A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2012A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2073A|I2011)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:I220[236]|I2127|V2220A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2126(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2208(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2023A|iQOO U1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2065A|iQOO U1x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2061A|iQOO U3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2143A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2106A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2024A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2025A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2136A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2141A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2025)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2066|V2108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2061(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2055(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2040(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo 1921(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo 1916(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1805(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1912|V1923A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1924A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1950A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEX 3s 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1821[AT]|vivo 1813)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo ONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2115A|V2141|V2157|V2150`),
		regexp.MustCompile(`(?i)V2203A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1831[AT]`),
		regexp.MustCompile(`(?i)V1832[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2121A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V211[56]`),
		regexp.MustCompile(`(?i)V220[19]`),
		regexp.MustCompile(`(?i)V22(?:31|46)`),
		regexp.MustCompile(`(?i)V1932[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1962A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2162A?`),
		regexp.MustCompile(`(?i)V2020C?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031EA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2080A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S7t 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2072A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2048A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1941A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1928A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1804(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1806(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1819(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1818(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 19(?:10|09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1907(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 19(?:20(?:_20)?|19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1933(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2022(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]1601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1611(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (1713|1612)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2166BA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1716|1850)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1723(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1727|V9Youth)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1851|V9Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo V3Max(?: [AL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X9s Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X9s(?: [AL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X5Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X20Plus UD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1721(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X20Plus(?: a)?|vivo 1720)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X21i(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X21UD(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1725|X21A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1814[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1809[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1816[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V18(38|29)[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1836[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1938CT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1938T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2001A|vivo 2004)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1937|V1937)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2005A|vivo 2006)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2011A|X50 Pro\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V20(?:46|59)A|V2045)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2085A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2047A|V2046)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2056A|V2047)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2134A|V2105)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2145A|V2114)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2133A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2104(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2144|V2183A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V218[56]A|V2145`),
		regexp.MustCompile(`(?i)V2208(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X([0-9])Plus(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1929|2015)(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1902(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V22[01]4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1906(?:_20)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2166(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2203|V222[19])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2254)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2217)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 19(?:04|40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2102(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1901(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V212[05]|V2139)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2147|V2212`),
		regexp.MustCompile(`(?i)vivo 1915(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V202[79](?:_PK)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2207|V2238)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2206(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1613(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2043_21|V2048)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V205[24]|V2070|V2101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2037(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2129(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2065(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2038(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2043(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(?:2041|2060)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2152(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2149(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2140(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V213[15](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2023(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1901[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1930A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 193[89]|V203[46]A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2160(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2099A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2066[B]?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2036(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2068A?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2228(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2057(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2109|Y33s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2146(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2166A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2205(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2247(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1934A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1965A|vivo 1935)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2023EA|Y50t)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(?:2024|203[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2054A|Y31s 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2057A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2053(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1606(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1606a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2058|V2111A|V2123A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2164A|Y55s 5G`),
		regexp.MustCompile(`(?i)vivo 1719(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1714|Y69A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2002A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1724|Y71A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1801i?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1731CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2059(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2124(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1913[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 180([38]|8i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1812(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1732[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:Y83A?|1802)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1726(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1730EA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1823|1908)(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 181[17](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1820(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1945A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2026|V2033|V2042)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V20[63]9|V2026_21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 18(16|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1818[AT]|vivo 181[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1818C[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1807(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1813[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1801A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1918|1951|Z1Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1730D[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1917(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1813B[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo Z3x|V1730GA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1921A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1911A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1990A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1963A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2142(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y75s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X710L?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X6SPlus(?: [AD])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X6S(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X([5679]|20)[ALD]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X5Pro(?: L)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y66i(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y(\d{2})[AL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay(\d)S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay(\d)[AL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Vizio|(?:VAP430|VTAB1008|XR6[PM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VTAB1008|XR6[PM]10)`),
		regexp.MustCompile(`(?i)VIZ(?:101|070)TAB[78]11`),
		regexp.MustCompile(`(?i)VIZ070TAB(\d{3})`),
		regexp.MustCompile(`(?i)VIZ101TAB(\d{3})`),
		regexp.MustCompile(`(?i)(?:Vodacom)[ _]|(?:Kicka 5 Plus 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Vodacom)[ _](Power Tab 10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _-]|Smart ?Tab ?(?:III? ?)?(?:|4G|7|10)[);/ -]|VodafoneSmartChat|Smart Ultra 6|(?:GigaTV|VFD[ _][0-9]+|VFD[37]20|VF6[89]5|VF-(696|1397|795|895N|1497))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD 50[012]`),
		regexp.MustCompile(`(?i)VFD 51[0123]`),
		regexp.MustCompile(`(?i)VFD 52[789]`),
		regexp.MustCompile(`(?i)Vodafone[ _]875(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]975N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]785(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD 525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]890N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]985N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart ?Tab ?3G`),
		regexp.MustCompile(`(?i)Smart ?Tab ?4G`),
		regexp.MustCompile(`(?i)Smart ?Tab ?4`),
		regexp.MustCompile(`(?i)SmartTab7[);/ -]`),
		regexp.MustCompile(`(?i)SmartTab10[);/ -]`),
		regexp.MustCompile(`(?i)Smart ?Tab ?II ?7`),
		regexp.MustCompile(`(?i)Smart ?Tab ?II ?10`),
		regexp.MustCompile(`(?i)Smart ?Tab ?III ?7`),
		regexp.MustCompile(`(?i)Smart ?Tab ?III ?10`),
		regexp.MustCompile(`(?i)Vodafone TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD[ _]([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Vodafone[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)VOLT[_ ](SV451[_ ]Vision)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vonino|Epic (?:E8|P7)|Epic_(?:M8|P7)|Gyga[ _](?:X|S|QS|XS)|Jax[ _](?:QS|[SXQN]|Mini)|Magnet[ _](?:M[19]|G[135]0|W10)|Navo_QS|Navo S|Onyx_(QS|Z)|Orin_QS|Pluri[ _](?:[BCMQ]7|[CQM]8)|Sirius_QS|Volt[ _][XS]|Xavy[_ ]([GT]7|L8)|Xylo[ _][XSPQT]|Zun[ _](?:N|X[OS]?)|JAX_N|Druid_L10|iMart_Pro|MusicPAD_[HM]1`),
		regexp.MustCompile(`(?i)Zun[ _](N|X[OS]?)`),
		regexp.MustCompile(`(?i)Xylo[ _]([PSXQT])`),
		regexp.MustCompile(`(?i)Volt[ _]S_A7`),
		regexp.MustCompile(`(?i)Volt[ _]S`),
		regexp.MustCompile(`(?i)Volt[ _]X`),
		regexp.MustCompile(`(?i)Gyga[ _]QS`),
		regexp.MustCompile(`(?i)Gyga[ _]XS`),
		regexp.MustCompile(`(?i)Gyga[ _](S|X)`),
		regexp.MustCompile(`(?i)Jax[ _]QS`),
		regexp.MustCompile(`(?i)Jax[ _]S_A7`),
		regexp.MustCompile(`(?i)Jax[ _]([SQXN])`),
		regexp.MustCompile(`(?i)Jax[ _]Mini`),
		regexp.MustCompile(`(?i)Epic[_ ]([EM]8|P7)`),
		regexp.MustCompile(`(?i)Pluri[ _]([BCMQ])7`),
		regexp.MustCompile(`(?i)Pluri[ _]([CQM])8`),
		regexp.MustCompile(`(?i)Druid[_ ](L10)`),
		regexp.MustCompile(`(?i) Magnet[_ ]M10[_ ]2020`),
		regexp.MustCompile(`(?i)Magnet[ _](M[19]|G[135]0|W10)`),
		regexp.MustCompile(`(?i)Navo[_ ](Q?S)`),
		regexp.MustCompile(`(?i)Onyx_(QS|Z)`),
		regexp.MustCompile(`(?i)Xavy[_ ]([GT]7|L8)`),
		regexp.MustCompile(`(?i)MusicPAD_([HM]1)`),
		regexp.MustCompile(`(?i)(HK1 (?:Max|MINI\+?|PLUS|PRO)|KK MAX|VONTAR[ -](?:Z[58]|[VH]1|KIII|MX-4K|X[234]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VONTAR[ -](Z[58]|[VH]1|KIII|MX-4K|X[234])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KK MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 MINI\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VORAGO|(?:PAD-7-V5|PAD-7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PAD-7-V5|PAD-7)`),
		regexp.MustCompile(`(?i)(?:SXPro|S7-classic|SXPRO_classic)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VORKE (Z[157]|Z6(?: Plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VORMOR-X5-pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SYNQ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOTO[ _\-]|VT8[89]8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOTO[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)VOTO[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(VT8[89]8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Voxtel_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:VOYO[_ ](?:A15)|i8-Max|Q101-4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i8-Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Q101)-4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOYO[_ ](A15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Joy [123]\+|Joy [34]|Active 1\+|Bee 3|Active [13]|V341U|Bee Lite|Aris| Bee|Star [34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy ([123])\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy ([34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active 1\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bee 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bee(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Star (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V341U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VSUN (?:ILLUSION|RACE|V9|TOUCH)|Aqua Tough|MERCURY Tough|MARS TOUCH|MARS NOTE|MARS NOCAM|SATURN SELFIE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILLUSION(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MARS TOUCH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SATURN SELFIE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RACE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VSUN TOUCH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (81V)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VP5004A|VS5513|VS4011|VR6031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VP5004A|VR6031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS5513(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS4011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexo-TAB-7(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Nexo-TAB-7(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(F808NM|F803YM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(WUD55H7762SN|WUD55G7762S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WE (A[15]0|B3|F[12]0|E[12]|L[3469]|R[34]|V[34]|S1|X[13]|T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WIWA DREAM PLAYER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Walton|Walpad|RX7 Mini|Primo[ _](C[1234]?|D[1-689]|E[1-589]|F8s|EF[23]?|EM|F[1-79]i?|G[1-9]|GF[234]?|GH[23]?|GM|H[2-689M]|H10|H7s|N[F1]?|NX2?|R[1-68]|R[HM]2?|RX[23]?|S[1-8]|V1|X[1-4]|Z|[ZV]X)`),
		regexp.MustCompile(`(?i)Walpad[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Primo H8 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo (RM2|ZX2|NX4) mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo H8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RX7 Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo[ _]([^;/)]+)[ _]Plus(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Primo[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Walton[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Waltter NEO 10\.1`),
		regexp.MustCompile(`(?i)(?:ZC-339)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZC-339)`),
		regexp.MustCompile(`(?i)PRO 8475(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(WM1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C81W)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WELLCOM[ _\-/]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Westerndigital|WDSimpleBrowser`),
		regexp.MustCompile(`(?i)WESTPOINT[;,]`),
		regexp.MustCompile(`(?i)(TETS-4919SM)`),
		regexp.MustCompile(`(?i)Wexler|(?:ULTIMA 7 TWIST PLUS|ULTIMA 7|ULTIMA [78] TWIST|TAB10iQ3G|TAB[ _]10Q)(?:[);/ ]|$)|ZEN[ _](?:4\.[57]|5)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?ZEN[ _]4\.5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?ZEN[ _]4\.7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?ZEN[ _]5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZEN[ _]5\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[._-])?TAB[ _]?10Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB10iQ3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wexler[ _\-\.]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Wexler[ _\-\.]([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)(ULTIMA 7 TWIST PLUS|ULTIMA [78] TWIST|ULTIMA 7 OCTA|ULTIMA 7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AM1010V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wieppo (S6 Lite|S[658]|E1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wigor (V4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WIKO[_ -])|(?:WIKO-)?CINK_[a-z0-9_]+|(?:WIKO-)?HIGHWAY_[a-z0-9_]+|(?:WIKO-)?(?:Cink([^/;]*)|Highway([^/;]*)|Iggy|Stairway|Rainbow ?(Jam|Lite|Up)?|Darkside|Darkmoon|Darkfull|Darknight|Freddy|FEVER|Jerry[2]?|Sublim|Ozzy|JIMMY|Barry|Birdy|Bloom|Getaway|Goa|Kite|Robby|Lenny[2-9]?|Slide2?|Sunset[2-9]?|Sunny[2-9]?|Tommy[2-9]?|PULP(?: Fab)?|Wax|HARRY|Ridge(?: Fab)?|U FEEL(?: Prime| Lite)?|U PULSE(?: LITE)?|View2 (?:Go|Plus)|View XL|View Prime)(?: Plus)?(?: 4G)?(?: Build|$)?|W_(?:C8[06]0|K[346]00|P130|P200|C200SN)|WC300|W-(?:V7[23]0|V745|V755|V8[035]0|P[36]11|K130|K211|K3[68]0|K420|K510S?|K521|K560|K610|K630)-(?:BYT|EEA|FRA|OPE|SU[IN]|SWI|TIM|TMV|TVM|DU|T[HV]|ID)|WIM Lite|W-V851|W-V6[08]0|W-V750BN|W-V770|W-K200|W-U300|(?:U307AS|CINK PEAX 2|HIGHWAY PURE|C210AE|v3913|U614AS|V3991AN|v12fnlite|K-KOOL|p6901|U616AT|VHEM|KENNY|View Go| WIM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V770`),
		regexp.MustCompile(`(?i)(?:WIKO-)?VHEM`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U616AT`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V745`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V750`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V755-EEA`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Cink Peax 2`),
		regexp.MustCompile(`(?i)(?:Wiko-)?Cink([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?CINK_([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY PURE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY STAR`),
		regexp.MustCompile(`(?i)(?:Wiko-)?Highway([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY_([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Iggy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?FEVER`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Stairway`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge Fab 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Rainbow ([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Rainbow`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkside`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkmoon`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkfull`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darknight`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sublim`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ozzy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Barry`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Birdy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Bloom`),
		regexp.MustCompile(`(?i)(?:WIKO-)?JIMMY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Jerry2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Jerry`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Getaway`),
		regexp.MustCompile(`(?i)(?:WIKO-)?KENNY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Goa`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Freddy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Kite`),
		regexp.MustCompile(`(?i)C210AE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U307AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U316AT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)v3913(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?3 Max`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?4 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?([2-9])`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Slide2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Slide`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunset2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunset`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny3 Mini`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny3`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny2`),
		regexp.MustCompile(`(?i)W-K211-(?:TH|TVM)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny`),
		regexp.MustCompile(`(?i)(?:W_K600|Tommy3|W_C200SN)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Wax`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HARRY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?WIM Lite|p6901`),
		regexp.MustCompile(`(?i)(?:WIKO-)?WIM`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp Fab 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp Fab`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Robby(2)?`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U PULSE LITE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U PULSE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL LITE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL PRIME`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View2 Go`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View XL`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View Prime`),
		regexp.MustCompile(`(?i)W_P130|View Go`),
		regexp.MustCompile(`(?i)W-V800-(TVM|TIM|EEA|OPE|DU)`),
		regexp.MustCompile(`(?i)W-K130-(?:OPE|EEA|BYT)`),
		regexp.MustCompile(`(?i)W-K510-(?:TVM|EEA|OPE|SUN|BYT|TH)|W-K510S-SWI`),
		regexp.MustCompile(`(?i)W-K560-(?:EEA|TVM)`),
		regexp.MustCompile(`(?i)W-K610-(?:SUI|FRA)`),
		regexp.MustCompile(`(?i)W-V720-(?:EEA|OPE|SUN)`),
		regexp.MustCompile(`(?i)W-P311-(?:EEA|OPE|TVM)`),
		regexp.MustCompile(`(?i)W-P611-(?:EEA|OPE)`),
		regexp.MustCompile(`(?i)W-V830-(?:EEA|OPE|ID)`),
		regexp.MustCompile(`(?i)W-V730-(?:EEA|TVM|ID|OPE)`),
		regexp.MustCompile(`(?i)W-U300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U520AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U614AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K-KOOL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wiko ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Wileyfox|(?:Swift 2|crackling)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wileyfox Spark \+`),
		regexp.MustCompile(`(?i)Wileyfox; Pro`),
		regexp.MustCompile(`(?i)Wileyfox (Spark|Swift)`),
		regexp.MustCompile(`(?i)Wileyfox ([^/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Swift 2 (X|Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Swift 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NOTE GRACE V)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wink[_ ]`),
		regexp.MustCompile(`(?i)Wink[_ ]((?:Glory|World|Share|City)(?:[_ ](?:SE|S))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wink[ _](Primo|Highway)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Winmax[ _](?:XC14|XC[46]|TX30)|PolarH4)(?:[);/ ]|$)|MAUI.+Winmax_BD45`),
		regexp.MustCompile(`(?i)Winmax[ _](XC14|XC[46])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winmax[ _](TX30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAUI.+Winmax_(BD45)`),
		regexp.MustCompile(`(?i)Winnovo|(?:T10LTE|H(?:7|10)_US)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T10LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H(7|10)_US(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winnovo[ _]?(M866|M798|VTab|750[PK]|T2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winnovo[ _](V51)`),
		regexp.MustCompile(`(?i)Winnovo[ _](K5[46]|K43)[a-z]{2}`),
		regexp.MustCompile(`(?i)Winstar S-?5`),
		regexp.MustCompile(`(?i)Winstar S-?5`),
		regexp.MustCompile(`(?i)(WISENET5|WPOS-3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WIZARPOS[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)miSmart|miTab|WIAM[ _]\#?\d+|WOLDER`),
		regexp.MustCompile(`(?i)WIAM[_ ]\#?65[_ ]lite`),
		regexp.MustCompile(`(?i)(?:WOLDER_)?WIAM[ _]\#?(\d+)`),
		regexp.MustCompile(`(?i)WOLDER[_ ](\d+)`),
		regexp.MustCompile(`(?i)miSmart[ \-_]?([^/]+) Build`),
		regexp.MustCompile(`(?i)miTab[_ ]PRO[_ ]10[_ ]plus`),
		regexp.MustCompile(`(?i)miTab[ \-_]?([^/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)AT[ _-]AS([0-9A-Z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:W55SE|W626 LITE|WS067|WS5SE|WS626)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wonu ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SP5026i-Scorpio|SP5040-Casiopea`),
		regexp.MustCompile(`(?i)TERRA[ _]PAD[ _](\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]|Nimbus 101Q`),
		regexp.MustCompile(`(?i)Nimbus ?(101Q|115|1100RX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WOXTER[ _]I-101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]([SQ]X) ?([0-9A-Z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[_ ](?:Zielo[ _])?(Q27|Z800|Z420)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)G1LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[-]?BO (V[78]|V1[01]|V[89]\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:XM-SW1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[-_]TIGI|Hope(?:[78]|10)[_ ](?:Mate|Max|Pro|Plus|LTE)|JOY(?:10|8) Mate|JOY10_LTE|Photo_P15_Lite|SHARP_2|SHARP1|V18 pro_A`),
		regexp.MustCompile(`(?i)X[_ ]TIGI[_ ]JOY7_TV`),
		regexp.MustCompile(`(?i)(?:X_TIGI_)?JOY(10|[78])[ _]Mate`),
		regexp.MustCompile(`(?i)Hope([78])[_ ](Mate|Max)`),
		regexp.MustCompile(`(?i)Hope ?8 LTE`),
		regexp.MustCompile(`(?i)Hope10[_ ]Pro`),
		regexp.MustCompile(`(?i)Hope10[_ ]Plus`),
		regexp.MustCompile(`(?i)X-TIGI[_ ]V28[_ ]LTE`),
		regexp.MustCompile(`(?i)X[-_]TIGI[_ ]V19`),
		regexp.MustCompile(`(?i)X[-_]TIGI[_ ]A1[_ ]?Plus`),
		regexp.MustCompile(`(?i)X-TIGI[_ ]Photo[_ ]P11`),
		regexp.MustCompile(`(?i)SHARP_?([12])`),
		regexp.MustCompile(`(?i)X[-_]TIGI[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)X-View|ZEN_U5\+|AMBER_KIDS|Proton_Amber_HD|Proton_Neon|PROTON_JADE_2_PRO`),
		regexp.MustCompile(`(?i)ZEN_U5\+`),
		regexp.MustCompile(`(?i)(?:X96Air_A100|X96_X6_I|X96Max_Plus_Ultra|X96MATE_PLUS|X96MINI_11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X96Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XCOM[ _](?:X520|ISMART)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XCOM[ _](X520)`),
		regexp.MustCompile(`(?i)XCOM[ _]ISMART`),
		regexp.MustCompile(`(?i)(V1277)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGIMI TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YT5760[ABL]|YT5716C?|YT7216C?|YT7260[BL]|YT9216[BC]J|YT9213AJ|YT9270)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Enia)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(XDSR785HDR_AVANT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGODY|(?:Y19\(EU\)|XGT_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGODY Y17(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y19\(EU\)`),
		regexp.MustCompile(`(?i)XGODY_X96(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(XDH-(?:0F-A1|1[78]-A1|21-A1|29-B1|2A-B1)|XD-SDD05-2101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LA2-(?:L|S[N]?)|HLA Note(?:3|1-L)|L7620DE|20190416Q|20170608S|20180322D|20190325D|20190718Q|20190417Q|20180101M|20170605Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLA Note3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLA Note1-L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LA2-(?:L|S[N]?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(20190416Q|L7620DE|20180101M|20170605Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20170608S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20180322D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190325D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190718Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190417Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi| ONC(?: Build|[;)])|MiTV-\w|MiProjA1|Mi9 Pro 5G|(?:MI [a-z0-9]+|Mi-4c|MI-One[ _]?[a-z0-9]+|MIX(?: 2S?)?|MIX 2S ART|pomelo)(?:[);/ ]|$)|HM (?:[^/;]+) (?:Build|MIUI)|(?:2014501|2014011|201481[12378]|201302[23]|2013061) Build|Redmi|POCOPHONE|(?:SHARK )?KTUS-[AH]0|(?:SHARK )?(KLE|KSR|MBU|PAR)-[AH]0|SK[RW]-[AH]0|PRS-[AH]0|POCO F1|DLT-[AH]0|MIBOX[234]([_ ]PRO)?|MiTV4[ACSX]?|AWM-A0|MI CC 9 Meitu Edition|MiBOX1S|M2006J10C|M2006C3(?:L[IGC]|LVG|MN?G|MT)|M2007J1(?:7[CGI]|SC)|M2002(?:J9[SEG]|F4LG)|HM2014819|WT88047|210611(?:8C|19(?:BI|[AD]G|AL))|M2001(?:J2G|C3K3I)|M2004J1(?:5SC|9AG)|M2004J(?:7[AB]|19)[CG]|M2012K11(?:[CGI]|A[CI])|M2011K2[CG]|M2011J18C|M2006C3[ML]II|M2003J(?:15SC|15SS|6B2G|6A1G)|M2007J3S[ICYGP]|M2007J22[CG]|M2103K19[CGYI]|M2101K(?:[79]AG|7AI|7B[GI]|6[GIRP]|7BNY|9[GCR])|M2010J19S[CGYIL]|M2102(?:K1AC|K1[CG]|J2SC)|HM NOTE 1(?:LTE|W)|MI[_ ]PLAY|XIG01|Qin 1s\+|Qin ?2(?: Pro)?|MI_(NOTE_Pro|5X|4i|(?:A2|8)_Lite)|A001XM|lancelot|XIG02|2107119DC|M2101K(?:7BL|9AI)|A101XM|M2012K10C|M2104K10AC|M19(?:01F7[1S]|10F4S|08(?:F1XE|C3JGG)|08C3J[IH]|06F9S[IH]|02F1G)|21051182[CG]|21081111RG|2109119D[GI]|21091116(?:AI|[AU]?C|i|U[GI])|220111(?:7T[LGIY]|19TI|19UY|6S[IRC]|6TG|[67]SG|7SL)|21121(?:119S[CG]|23A[CG]|119VL|210C)|2204121(?:6[CI]|6UC|9[CGI]|9NY|1AC)|220333Q(?:AG|NY|L|BI)|2107113S[IGR]|22031(?:29G|116BG|21C)|PAR-H0|M2105K81A?C|2109119BC|2202(?:1119KR|1211RC|33L2[CGI])|22011(?:2[23][CG]|211C|16TI|17S[YI])|joyeuse|galahad|hydrogen|begonia|kenzo|willow|beryllium|rosemary| MDG1|KLE-AO|Mi ?Pad \d|220612(?:18C|[23]SC)|2207(?:12(?:2MC|12AG|19AI)|33S(?:F?G|[IL])|43FI)|2208(?:7RA4DI|1212(?:U?G|C)|128(?:1AC|3[GC]))|Black Shark|MZB8298IN|2210(?:1317C|1316(?:U[PG]|UCP?|[CIG])|1(?:29SG|32[CG]))|2211(?:13(?:3[CG]|17I)|1317G)|23013RK75C|23053RN02[AYL]|2209(?:5RA98C|116AG|129SC)|2212(?:0RN86[GI]|6RN91Y|ARNC4L|2RK93C|7RK46C)|2302(?:6RN54G|1RAA(?:EG|2Y)|8R(?:N4DG|A60L|NCAG))|angelican|vnd_camellia|2304(?:9RAD8C|FPN6D[GC])|2303(?:0RAC7Y|CRA44A|ERA42L)|M1906G7G|Hongmi 4A|23046RP50C|M1912G7BC|23076RN4BI|23043RP34[GI]`),
		regexp.MustCompile(`(?i)SKR-[AH]0`),
		regexp.MustCompile(`(?i)SKW-[AH]0`),
		regexp.MustCompile(`(?i)DLT-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KLE-A[0O]`),
		regexp.MustCompile(`(?i)(?:SHARK )?KSR-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KLE-H0`),
		regexp.MustCompile(`(?i)(?:SHARK )?MBU-H0`),
		regexp.MustCompile(`(?i)(?:SHARK )?MBU-A0`),
		regexp.MustCompile(`(?i)(?:SHARK )?PRS-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?PAR-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KTUS-[AH]0`),
		regexp.MustCompile(`(?i)Black Shark ([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Xiaomi_2014501|2014501 Build`),
		regexp.MustCompile(`(?i)Xiaomi_2014011|2014011 Build`),
		regexp.MustCompile(`(?i)Xiaomi_201302[23]|201302[23] Build`),
		regexp.MustCompile(`(?i)Xiaomi[_-]2014818|2014818 Build`),
		regexp.MustCompile(`(?i)Xiaomi_2014817|2014817 Build`),
		regexp.MustCompile(`(?i)Xiaomi[_-]201481[123]|201481[123] Build`),
		regexp.MustCompile(`(?i)MI[_ ]PLAY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi 9 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xiaomi_)?M1902F1[GT]`),
		regexp.MustCompile(`(?i)MI CC 9e|MI CC9e`),
		regexp.MustCompile(`(?i)MI CC ?9 Pro`),
		regexp.MustCompile(`(?i)MI CC 9(?: Meitu Edition)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xiaomi_)?(?:M2001J2E_TD-LTE|M2001J2G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xiaomi_)?(?:Mi 10 Pro|M2001J1E(?:_TD-LTE)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2011K2[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116UI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11AI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J3S[GI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J3S[CYP](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J1SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2102J2SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2002J9[EGS]|XIG01|Mi 10 Lite 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2107113S[IGR]|Xiaomi 11T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21081111RG|Xiaomi 11T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2109119DI|(?:Xiao)?mi 11 Lite (?:5G )?NE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K9[GCR]|2109119DG|Mi 11 Lite 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K9A[GI]|Mi 11 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2102K1[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2102K1AC|Mi 11 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201122[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201123[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2209116AG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22071212AG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2207122MC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22081212(?:U?G|C)|Xiaomi 12T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2206122SC|Xiaomi 12S Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2206123SC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2203121C|Xiaomi 12S Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2203129G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2112123A[CG]|Xiaomi 12X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2210132[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2210129SG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2211133[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2304FPN6D[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI[ _]8[ _]?Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 8 Explorer Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 8 ([a-z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi 9T Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Mi ?9 Pro 5G|M1908F1XE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 9 Transparent Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI ([89]) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 5s Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi_2013061|2013061 Build`),
		regexp.MustCompile(`(?i)Mi[- ]([43])c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 4W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi_4i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 4 ?LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI MAX ([23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MI MAX|hydrogen)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi[ _]A2[ _]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1906F9S[IH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2106118C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi MIX 3 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX ([23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX 2S ART(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX 2S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi Note 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCOPHONE[ _]F1|POCO F1|beryllium`),
		regexp.MustCompile(`(?i)MDG1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WT88047(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM2014819(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 2A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 1S[CW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2001C3K3I|MZB8298IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 8A (Dual|Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J7AC|M2004J15SC|Redmi 10X (?:4G|LTE))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)220333Q(?:AG|NY|L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J19[CG]|M2006C3MII|lancelot|galahad|M2004J19AG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J19I|Redmi 9 Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2010J19SI|Redmi 9 Power)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3L[GCI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3LII(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3M[GT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3LVG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2010J19S[GYL]|pomelo|Redmi 9T, Note 9 4G, 9 Power)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 9T NFC(?:_SN)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2006C3MNG|Redmi 9C NFC|angelican)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041219(?:G|NY)|Redmi 10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061119D[CG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:220333QBI|Redmi 10 Power)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)220233L2[CGI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061119A[GL]|21121119(?:SG|VL)|22011119UY|Redmi 10 2022)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041219I|Redmi 10 Prime\+ 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22011119TI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061119[BT]I|Redmi 10 Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J7BC|Redmi 10X Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22120RN86[GI]|22126RN91Y|2212ARNC4L`),
		regexp.MustCompile(`(?i)23053RN02[AYL]`),
		regexp.MustCompile(`(?i)23076RN4BI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22071219AI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K20 Pro Premium Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30 Pro Zoom Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30S Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K([23]0) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1912G7BC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30i 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22021211RC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K10C|Redmi K40 Gaming)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K40 Pro\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K11C|Redmi K40 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2006J10C|Redmi K30 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Y1 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) ONC(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Redmi (\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 4 Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:220733SFG|Redmi A1\+|220743FI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)220733S[GIL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2302(?:8RN4DG|6RN54G)`),
		regexp.MustCompile(`(?i)Qin ?2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qin 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2107119DC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2109119BC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2209129SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2105K81AC|22081281AC|(?:Xiao)?mi Pad 5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21051182[CG]|(?:Xiao)?mi Pad 5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2105K81C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23046RP50C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23043RP34[GI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD ?4 ?PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI ?PAD 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22081283[GC](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIBOX3[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIBOX([234])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiBOX1S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MSSP[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MTEQ0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-AESP0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-(?:ANSP0|AYFR0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOOQ0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOSR1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOOQ1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MiTV-AXSO0|MiTV4(?:A|-ANSM0)|MiTV-MSSP0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-AXSO[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV(4[CSXI]|4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2011J18C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22061218C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM NOTE 1W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM NOTE 1TD (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)HM NOTE 1(?:LTE|S)(?:W|GLOBAL|TD)? (?:Build|MIUI)|HM NOTE 1LTE`),
		regexp.MustCompile(`(?i)Xiaomi[_ ]2015052`),
		regexp.MustCompile(`(?i)(?:M2010J19SC|M2003J15SS|Redmi Note 9 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2003J6A1G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2003J15SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K7BL|rosemary)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J22G|A001XM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J22C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:joyeuse|M2003J6B2G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note 10 Lite|M2002F4LG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note ?9 Pro Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2101K7A[GI]`),
		regexp.MustCompile(`(?i)M2103K19Y|22021119KR`),
		regexp.MustCompile(`(?i)M2101K7B(?:[GI]|NY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2103K19[GC]|Redmi Note 10 5G|vnd_camellia)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2103K19I|A101XM|Redmi Note 10T 5G`),
		regexp.MustCompile(`(?i)XIG02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K6[GIRP]|M2104K10AC|Redmi Note 10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101316[CIG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2303(?:0RAC7Y|CRA44A|ERA42L|Redmi Note 12S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101317C|23021RAA2Y|23021RAAEG|23028RA60L|22111317G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23049RAD8C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101316UC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101316UG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101316UP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22101316UCP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22111317I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21091116C|2201116T[IG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2201116SC|Redmi Note 11E Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041219C|Redmi Note 11E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041216C|Redmi Note 11T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22041216UC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2201116S[GR]|Redmi Note 11 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2201116SI|Redmi Note 11 Pro\+ 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21091116U[CG]|Redmi Note 11 Pro\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22095RA98C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21121119SC|2201117T[GILY]|Redmi Note 11 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22087RA4DI|Redmi Note 11 SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201117S[GIYL]`),
		regexp.MustCompile(`(?i)(?:22031116BG|Redmi Note 11S 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21091116(?:AI|I)|Redmi Note 11T 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1908C3J[IH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M1908C3JGG|Redmi Note 8 \(2021\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:begonia|M1906G7G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)willow(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1901F71(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1901F7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note (\d+) Pro Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note (\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi[ _]Note[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Redmi[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Mi Note 10 Pro|M1910F4S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI[ _]Note[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Qin 1s\+`),
		regexp.MustCompile(`(?i)MI[- ]One[ _]?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi[- ]One[ _]?([a-z0-9]+)?(?: Build|[);])`),
		regexp.MustCompile(`(?i)MI[ _]([^;/]*) Build`),
		regexp.MustCompile(`(?i)MI[ _]([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM Note ([^/;]+) (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)HM ([^/;]+) (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)Xiaomi[ _-]([^/;]+)(?: Build|$)`),
		regexp.MustCompile(`(?i)XI[_-]CE(?:655|U55|U[48])`),
		regexp.MustCompile(`(?i)XI[_-]CE(655|U55|U[48])`),
		regexp.MustCompile(`(?i)Xolo|(?:Q600|Q700s?|Q800|Q1000s|Q1000[ _]Opus|Q1010i|Q2000|Omega[ _]5.[05]|Era5X|Era[ _]2[VX](?:[_ ]3GB)?|era[ _]X|era_HD|era[_ ]4[GK]|Era_4?X(?:_2GB)?|BLACK-1XM|A1000s_Lite|cube 5\.0_2GB|Opus 3|era1X|era [2X]|era1Xpro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era[ _]?1X ?Pro`),
		regexp.MustCompile(`(?i)Era[_ ]?([145])X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era_4X_2GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era[ _]2V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)era[_ ](HD|4[GK]|2X?|X)`),
		regexp.MustCompile(`(?i)cube 5\.0_2GB`),
		regexp.MustCompile(`(?i)(Q600 Club|Q600|Q700s?|Q800|Q1000s Plus|Q1000s|Q1000[ _]Opus|Q1010i|Q2000|Omega[ _]5.[05]|A1000s_Lite|Opus 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xolo[ _]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Xolo[ _]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)XORO[ _]|(?:TelePAD(?:795|731|1032|10A3|7A3)|HMT(?:390Q?|400)|HST 260)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TelePAD(7|10)A3 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TelePAD(795|731|1032)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MegaPAD3204V5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMT(390Q?|400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HST 260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xshitou[_ ](P7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xtouch[ _](?:X10|A5|X)|XBot[_ ](?:Senior|Junior)|X9_16GB|XP10_Wifi)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xtouch[ _](X10|A5|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X9_16GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XBot[_ ](Senior|Junior)`),
		regexp.MustCompile(`(?i)(?:BRIO[_ ]X31|XM14G|X10MT16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BRIO[_ ]X31)`),
		regexp.MustCompile(`(?i)Xpad_(M9_3G)`),
		regexp.MustCompile(`(?i)YASIN (?:Android|2K) TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YY-\d{3}[a-z]?)`),
		regexp.MustCompile(`(?i)M20201419(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X109|(?:Y103|Q11)[-_]EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y103|Q11)[-_]EEA`),
		regexp.MustCompile(`(?i)(X109)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU Fly (\w+)`),
		regexp.MustCompile(`(?i)YUHO_|(?:Netra(?:[_ ](?:Plus|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YUHO_(O2|H2|Y[123])_PRO`),
		regexp.MustCompile(`(?i)(?:YUHO_)?(Vast2?|O[12]|Y2|Netra(?:[_ ](?:Plus|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(L211|N10|U221)-EEA(?:[);/]|$)`),
		regexp.MustCompile(`(?i)YUNDOO[ _-]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:YNDX-?(?:000SB|0007[12])|YandexModule2-00001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YNDX-?(0007[12])`),
		regexp.MustCompile(`(?i)YNDX-?000SB`),
		regexp.MustCompile(`(?i)Xenta[ \-]Tab|Luna TAB|TAB09-410|TAB10-410|TAB07-485|TAB0[78]-200|TAB08-201-3G|TAB9-200|TAB09-211|TAB10-2[01]1|TAB13-201`),
		regexp.MustCompile(`(?i)Luna TAB07-10[01]`),
		regexp.MustCompile(`(?i)Xenta-TAB07-21[01]`),
		regexp.MustCompile(`(?i)TAB10-2[01]1`),
		regexp.MustCompile(`(?i)M631Y|M685Y4|M651G_MY|YES (?:Altitude 4|MPY(?:48|54))`),
		regexp.MustCompile(`(?i)YES (Altitude 4|MPY(?:48|54))`),
		regexp.MustCompile(`(?i)yestel|(?:T5|X2)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)yestel P30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X2|T5)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Yezz|ANDY[ _]|(?: (?:4E4|5EQ)|A5EI|LIV 1S|LIV1|LIV2[_ ]?LTE|ART[12](?:_?PRO)?|MAX_1_PLUS|MAX2 PLUS|EPIC T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YEZZ[_-])?(4E4|5EQ|A4M|A5EI)`),
		regexp.MustCompile(`(?i)LIV2[_ ]?LTE`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9]\.[0-9][A-Z0-9]*)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9])([0-9][A-Z0-9]*)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9][A-Z0-9]+)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)KB2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YPAD(P70[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YD20[16]|YOTA 3[+])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YD20[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOTA 3[+](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOU-BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOU-BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Youwei[ _]`),
		regexp.MustCompile(`(?i)youwei[ _]mini5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YTONE[ _\-]`),
		regexp.MustCompile(`(?i)YTONE[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)YTONE[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(?:YU5[05]10[A]?|YU4711|AO5510|YU5050|YU501[14]|YU5551|YU Yureka Black|YU 6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5010[A]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AO5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5551(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5510[A]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU4711(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU (Yureka Black)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N101[ _]DUAL(?:[ _]CORE)?(?:[ _]?2)?(?:[ _]V11)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YS[78]pro|YS6 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YS([678]) ?pro`),
		regexp.MustCompile(`(?i)YUNO\.|ULX-55UTCS3234|ULX-32TCS226|ULX-43UTCS347|ULX-39TCS222`),
		regexp.MustCompile(`(?i)ULX-(\d{2}U?TCS\d{2,4})`),
		regexp.MustCompile(`(?i)Yusun|LA2-T`),
		regexp.MustCompile(`(?i)Yusun ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Yusun ([a-z0-9_\-\+]+)`),
		regexp.MustCompile(`(?i)YXTEL_([HU]1|U3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Odyssey[_ ](?:evo|DTV[67]|J[59]|J10|GLAZE\+?|RANGE|ACE|AEON|VICTORY|SACRED|SAGA|SWIFT|O2|ULTRA|FLAME|POPO|PERRI|TYTAN|HIGH|SOAR|ERA)|ODYSSEY[ _]?NEXT|INTENSE (?:RISE|Hype|GAME))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ODYSSEY[ _]J10[ _]Mini`),
		regexp.MustCompile(`(?i)ODYSSEY[ _](O2|J[95]|DTV[67]|J10)`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]AEON`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]ACE`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]ULTRA`),
		regexp.MustCompile(`(?i)ODYSSEY[ _]?NEXT`),
		regexp.MustCompile(`(?i)ODYSSEY[ _]PERRI`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]FLAME`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]evo`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]Victory`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]SWIFT`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]TYTAN`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]SAGA`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]SACRED`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]POPO`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]RANGE`),
		regexp.MustCompile(`(?i)Odyssey[_ ]GLAZE\+`),
		regexp.MustCompile(`(?i)Odyssey[_ ]GLAZE`),
		regexp.MustCompile(`(?i)Odyssey[_ ]HIGH`),
		regexp.MustCompile(`(?i)Odyssey[_ ]SOAR`),
		regexp.MustCompile(`(?i)Odyssey[_ ]ERA`),
		regexp.MustCompile(`(?i)ZIFRO|(?:ZT-97003G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZT-9700)3G`),
		regexp.MustCompile(`(?i)ZIK[_ ](W1027)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)ZTE|AxonPhone|([a-z0-9]+)_USA_Cricket|(?:Blade[ _](?:E01|V0820|L110|L[2357]|L7A|L8|S6|V[6789]|V8Q|V8 SE|V9 VITA|X7|A(310?|320|460|465|475|510|520|530|602|51|30|3)|V580|V Ultra|Q Lux)|N9[15]8St|N818S|N951[0579]|N91[38]0|N9101|N913[267]|N952[01]|N9560|N9810|N799D|[UV]9180|[UV]9815|Z(?:5151V|610DL|6250CC|6400C|6410S|233V|331|5031O|559DL|6621O|667T|6750M|768G|792|81[25]|818L|82[08]|83[12359]|85[125]|851M|992|(557|71[67]|798|836|861|916)BL|986DL|(232|718|828)TL|(?:233|353|558|717|799|837|862|899|917|963)VL|955A|95[678]|965|97[018]|98[1237]|986U|999|936L)|V769M|Blade Apex2|G (LTE|Lux)|Vec|Z959|V865M|Z3001S|902ZT|KIS II Max|Kis 3|K3DX-V5G|Z930L|Optus X|Blade[ _](A[357] 2019(?:-T)?|A[35] 2020-T|A7S 2020-T|A6 MAX|A0622|X9)|Z3153V|Z836F|Ctyon-A9|602ZT|MO-01[JK]|Z963U|402ZT|P545|P609|P650 Pro|dandelion|901ZT|A00[13]ZT|Z-01K|UZTE (?:GRAND V7|V808)|ZTG01|K8[37]CA|K87CC|VERGATARIO ?5(?:PLUS)?|Axon mini|KIS C341|A103ZT|Z335(?:1S|[23]CA)|Z5156CC|Z5157[VY]|B867RE|MEO Smart A[48]0|SmartA35|P65[10] 2021|Z6201V|Z6252CA|Z6251V?|A2020N3|A202ZT|Z719DL|Z5158|B2017G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P651 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P650 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)7530N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9040N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2122H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A001ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A003ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A103ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A202ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTG01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T221(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0616(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3352CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3353CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[_ ]Blade[_ ]A31[_ ]Plus`),
		regexp.MustCompile(`(?i)(?:A7020(?:RU)?|Blade A7S 2020-T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6252CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7030|A71 5G`),
		regexp.MustCompile(`(?i)Z5157[VY]`),
		regexp.MustCompile(`(?i)A0722(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6201V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade 10 Vita(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6251V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE (?:2050|V1050)(?:RU)?`),
		regexp.MustCompile(`(?i)ZTE Axon 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2019G? Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:902ZT|A2020N[23] Pro|A2020N3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2020 SP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2021[LGH]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2021E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9000N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2322|A2022L`),
		regexp.MustCompile(`(?i)ZTE[ _]?9047`),
		regexp.MustCompile(`(?i)N799D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z818L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3001S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3351S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ctyon-A9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K3DX-V5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE)?N918St(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N958St(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z963U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5156CC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5158(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9130(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9132(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9136(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9137(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9180(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5151V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9517(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z559DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)402ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE[_ ])?Blade[ _]Q[ _]Lux(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T320(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9515(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9519(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9521(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9560(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[UV]9180(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[UV]9815(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[_ ]Blade[_ ](C2|V7)[_ ]Plus`),
		regexp.MustCompile(`(?i)(?:ZTE[_ ])?BA521`),
		regexp.MustCompile(`(?i)(?:ZTE_)?V829`),
		regexp.MustCompile(`(?i)V970M?|V987`),
		regexp.MustCompile(`(?i)Z959(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:[RV]880H|V965)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z95[67]`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Grand[ _]Era`),
		regexp.MustCompile(`(?i)Z331(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N818S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[_ ]V0840(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5031O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P545(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Optus X Start(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BA520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A(5[12]) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L2 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Blade[ _]L2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3 Apex(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]T610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]Blade L4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Blade L5 Plus|BLADE L0510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L7A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L(\d+)(?:RU)?`),
		regexp.MustCompile(`(?i)Blade A([357]) (20(?:19|20))`),
		regexp.MustCompile(`(?i)ZTE BV0720(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A[35] 2020-T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE C880A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A([35]1?) Lite`),
		regexp.MustCompile(`(?i)Blade (S6|A[35]1?) Plus`),
		regexp.MustCompile(`(?i)BLADE A0622(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE (?:A6 MAX|A0605)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0622(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade S6 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade S6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE A5 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]T617(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Blade_A5_2019`),
		regexp.MustCompile(`(?i)BLADE V Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V6 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V6 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade (?:V7 Lite|V0720)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0710(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V([67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BV0800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE Blade V1000|(?:ZTE_)?V1000`),
		regexp.MustCompile(`(?i)Z6750M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade X([79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T630(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade (?:V8Q|V0840)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V8 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE (?:V0850|V8 Mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0920|ZTE-V9VITA`),
		regexp.MustCompile(`(?i)Blade V(9|10) Vita(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V([89]|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Blade[ _])?(Apex2|G (LTE|Lux)|Vec)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z768G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z717[BV]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z233VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z798BL|Z799VL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z792`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z812`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z719DL`),
		regexp.MustCompile(`(?i)Z851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z836BL|Z837VL|Z836F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z861BL|Z862VL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z958|Z955A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)dandelion(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6250CC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE[-_])?Z992`),
		regexp.MustCompile(`(?i)(?:Z999|Z-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B201[56]|Axon mini`),
		regexp.MustCompile(`(?i)A2017[GU]?`),
		regexp.MustCompile(`(?i)(?:A2020(?:RU|[GU])? Pro|Axon 10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V?975|geek`),
		regexp.MustCompile(`(?i)(?:ZTE-)?G-X991`),
		regexp.MustCompile(`(?i)Z936L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MO-01[JK](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V865M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6621O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P650 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V769M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VERGATARIO 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VERGATARIO5PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE V5 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MEO Smart A([48]0)`),
		regexp.MustCompile(`(?i)Smart ?A(35)`),
		regexp.MustCompile(`(?i)A2121[LE]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B867RE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K83CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K87CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K87CC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE-K88(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE-K92(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AxonPhone ([^;/]+) Build`),
		regexp.MustCompile(`(?i)([a-z0-9]+)_USA_Cricket`),
		regexp.MustCompile(`(?i)ZTE[- ](V98|V96A|V81|V70)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ](A(\d+)C?|L111|V580|E01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V0730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V0800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE B(A601|A910|A510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE Blade (A[35]1|A7s|C370)`),
		regexp.MustCompile(`(?i)ZTE BA610T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[- ]([a-z0-9\-_ ]+) Build`),
		regexp.MustCompile(`(?i)ZTE-(?:G |G-)?([a-z0-9 _]+)`),
		regexp.MustCompile(`(?i)U?ZTE[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)ZYQ-Q88|(Q(?:2602|262[436]|638|2688|272[89]|3022|3623|TAB Tab4|328 m9|328|668)|J77|Q[._](?:Up|Boss P99|Dee R09|Good M9|Hi|Hot|Me|Mate R99|Next|TOP-X8|You))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q\.Up C5`),
		regexp.MustCompile(`(?i)Q\.Up`),
		regexp.MustCompile(`(?i)Q\.Boss P99`),
		regexp.MustCompile(`(?i)Q[._]Dee R09`),
		regexp.MustCompile(`(?i)Q\.Good M9`),
		regexp.MustCompile(`(?i)Q[._]Hi S1`),
		regexp.MustCompile(`(?i)Q[._]Hi`),
		regexp.MustCompile(`(?i)Q[._]Hot P7 3G`),
		regexp.MustCompile(`(?i)Q[._]Hot`),
		regexp.MustCompile(`(?i)Q[._]Me Phone7 3G`),
		regexp.MustCompile(`(?i)Q[._]Me Plus7`),
		regexp.MustCompile(`(?i)Q[._]Me`),
		regexp.MustCompile(`(?i)Q[._]Mate R99`),
		regexp.MustCompile(`(?i)Q[._]Next B7`),
		regexp.MustCompile(`(?i)Q[._]Next J2`),
		regexp.MustCompile(`(?i)Q[._]TOP-X8`),
		regexp.MustCompile(`(?i)Q[._]You`),
		regexp.MustCompile(`(?i)(Z3211G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZXT-10HL323S|ZXT-10FL323G-PRO)`),
		regexp.MustCompile(`(?i)ZATEC[_ ]|(?:[ ]WIND|ZPAD_1|ZPLAY1_2018|Zpower_(?:Plus|2018))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZATEC[_ ]GRAVITY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[ ]WIND(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zealot(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(THOR 4 Plus|THOR S|THOR PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)THOR (S|4 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (MC2[27]00|TC15|TC2[0156]|TC5[1267]|TC7[05]x|TC7[57]|TC700H|ET51|MC33|MC93|EC30|TC55|PS20J|VC8300)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TC15|TC2[0156]|TC5[1267]|TC7[05]x|TC7[57]|TC700H|MC33|EC30|TC55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ET51)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MC2[27]00|MC93|PS20J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VC8300)`),
		regexp.MustCompile(`(?i)ZEEKER[ _](P10|T100)`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]([^/;)]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)(Admire[_ ][^/;]+|Cinemax[^/;)]+)(?:Build|\))|(?:AdmireGlam|M72 Smart)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SENSE\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SWADESH\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SENSE[_ ]DUO`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]CURVE[_ ]NEO`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]CURVE\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]NEO\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]DUO`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SHINE`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]INFINITY`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]Unity`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]STRONG`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]GLORY\+`),
		regexp.MustCompile(`(?i)(M72 Smart)`),
		regexp.MustCompile(`(?i)(Admire[_ ][^/;]+|Cinemax[^/;)]+)(?:Build|\))`),
		regexp.MustCompile(`(?i)Z5007|Z551[679]|Z6001`),
		regexp.MustCompile(`(?i)(?:C-723ULTRA|C-70[13] ?ULTRA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C-(\d+) ?Ultra`),
		regexp.MustCompile(`(?i)ZFINERY900(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIDOO[ _](H6 Pro|X6 Pro|X9S|Z10|X[1589]|X20 Pro|Z9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Eon45i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KidsLegacyTabPro|Zpad-X8-PRO`),
		regexp.MustCompile(`(?i)ZIOX[_ ]|(?:Astra Viva 4G|Astra (?:(?:NXT|Curve|Young) Pro|(?:Metal|Titan|Young|Curve) 4G|Star|Blaze)|Duo(?:tel|pix)[ _]\w\d{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIOX[_ ]F9[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (Viva|Titan|Young|Metal|Curve) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (Star|Blaze)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (NXT|Curve|Young) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Duo(tel|pix)[ _](\w\d{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZM(?:CK|EM|TFTV|TN)[a-z0-9]+)|ZA409`),
		regexp.MustCompile(`(?i)(ZM(?:CK|EM|TFTV|TN)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)K101_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 8(?:[\d.]*);(?: [\w-]+;)? (LitePro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LT600T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO|(?:ZOPO[_ ])?(HERO2|Flash X3|F2_Color5_5|F5_Color_M5|C2_Color_M4|ZP[0-9]{2,}[^/;]+)(?:\)| Build)`),
		regexp.MustCompile(`(?i)(?:ZOPO_C2_MOD|ZP998)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO 9xxQuad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?ZP980[+](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?ZP980(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP952(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HERO2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP951(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP955(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP950[+h]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP(?:900H?|910)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP(?:800H|810)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP500[+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP330(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F2_Color5_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F5_Color_M5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C2_Color_M4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP5(63|86)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP567(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP300[S+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP200[+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP1790(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP781(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO[_ ]ONE[_ ]([YXTP])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?(Flash X3|X1i|ZP[0-9]{2,}[^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Zuum[ _-]|Android 6.+ UNIQ(?: Build|[);])|(?:ROCKET III?|Akus (?:PRO|[ZP]1?)|AURA_Z|COVET|MAGNO(?:-S)?|ONIX(?: S)?|STEDI|STELLAR(?:[ _](?:Z|PRO|[MP]1|M2))?|GRAVITY [ZM]|AURA (?:PLUS JLO|PRO JLO|PRO|X)|COVET_PRO_LITE|RONI|Android.*; (?:GRANT|LIMIT)|Gravity Life|ULTRA Z)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AKUS ([ZP]1?)`),
		regexp.MustCompile(`(?i)AURA_Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COVET( Z)?`),
		regexp.MustCompile(`(?i)MAGNO( C1?)?`),
		regexp.MustCompile(`(?i)STELLAR ([MP]\d|Z)`),
		regexp.MustCompile(`(?i)GRAVITY ([MZ])`),
		regexp.MustCompile(`(?i)ROCKET (III?)`),
		regexp.MustCompile(`(?i)Android 6.+; UNIQ(?: Build|[);])`),
		regexp.MustCompile(`(?i)Android.+; LIMIT(?: Build|[);])`),
		regexp.MustCompile(`(?i)Zuum[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Zuum[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZYNC|(Cloud Z5|Z1000|Z18|Z99|Z99[_ ][23]G|Z99|Z900[_ ]Plus|Z909|Z930[+]|Z930)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z18| DuZ99al Core|Z99[_ ][23]G|Z99 Dual Core|Z99|Z900[_ ]Plus|Z909|Z930[+]|Z930)`),
		regexp.MustCompile(`(?i)(Z1000[^/;]+)Build`),
		regexp.MustCompile(`(?i)Cloud (Z5)`),
		regexp.MustCompile(`(?i)ZYNC Cloud[ _]([^;]+)Build`),
		regexp.MustCompile(`(?i)ZYNC[ _]([^;]+)Build`),
		regexp.MustCompile(`(?i)(Desk21T-03)`),
		regexp.MustCompile(`(?i)(AL-555|GI-626|OB[_-](?:421|728|627))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OB[_-](421|728|627)`),
		regexp.MustCompile(`(?i)Decade 53(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BO-(FRSP4|LFSPBS5|LFSP4|LFSPSL4|LFSPBS5|LFSPSL6QCI)`),
		regexp.MustCompile(`(?i)BO-(FRSP4)`),
		regexp.MustCompile(`(?i)Aquaris|bq [^/;]+ Build|BQS[-_]([0-9]{4})|(BQ(ru)?[_ -][0-9]{3,4})|BQ5059|BQ1008G|BQru_BQru-|Edison 3|Smart_TV_BQ`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5209L|5044)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:6035L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5535L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-6353L`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-(?:5070|6040L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-(?:6424L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5730L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5731L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-57[46]5L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5533G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5031G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5732L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-6430L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-6630L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-9011[G]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-8068L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(ru)?-(7082)`),
		regexp.MustCompile(`(?i)BQ-7022(G)?`),
		regexp.MustCompile(`(?i)BQ-6200L|BQ-6000L`),
		regexp.MustCompile(`(?i)BQ(?:ru|s)?-6631G`),
		regexp.MustCompile(`(?i)BQ(ru)?[ -]6015L`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5525|6030G|6010G)`),
		regexp.MustCompile(`(?i)BQ-6001L|BQ-6050`),
		regexp.MustCompile(`(?i)BQ-5707G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5702(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5700L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5591|551[89]G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5520L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5519L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5540L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5517L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5516L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5515|6868L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5515L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5512L|5528L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5511L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS[_ ]5505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5521|5594)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5508L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5507L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5504(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-6045L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4030G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5500L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5302G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5301(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5300G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(ru|S)?-(?:5211|5020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5206L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru|S)?-(?:5204|5050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5203(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5202(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5082(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5045L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5047L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:5065|5340)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5046L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-?(?:5059|5514G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BQru_)?BQ(?:ru)?-5058(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5057(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:5056|5030)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-6042l(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5055(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5054(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5052(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-6051G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-5045(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5037|5514L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5035(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5033(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5541L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5022(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5015L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5016G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5012L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5521L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5010G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5000G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5009L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-500[59](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5008L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5007L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5005L|5530L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5003L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5002G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5001L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru|S)?-5000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4702(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4701(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:4585|5011G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4583(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4560(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4555(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:4526|5004G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4516(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4515(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4501G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4077(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4072(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?[- ]402[68](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4008(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4001G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-3510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-3503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1085L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1084L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1083G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1082G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1077L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1057L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1051G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1050G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[-]?1008G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aquaris (M10 FHD|M10 4G|M8)`),
		regexp.MustCompile(`(?i)Aquaris_([AM])4.5`),
		regexp.MustCompile(`(?i)BQ(?:ru)?[_ -](?:5590|5740G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:6016L|5520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5701L|5060)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BQ-7850|BQ-700[12]G|BQ-8002G|BQ-905[12]G|BQ-9702G|BQ-7056G)`),
		regexp.MustCompile(`(?i)BQ-8006G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7062G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1081G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7802G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7008G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7064G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7050G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7000G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7040G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7038G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7005G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7098G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1045[G]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:1054L|1020L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7083G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-8077L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7083(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1056L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1022l(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1024L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7055L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1025L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Edison 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:bq )?Aquaris ([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:bq )?Aquaris`),
		regexp.MustCompile(`(?i)bq ([^/;]+) Build`),
		regexp.MustCompile(`(?i)eSTAR[_ ](?:Grand|GO\!?|Zoom Quad|Gemini|MINI[_ ]3G|BEAUTY|MOON)|(?:MERCURY HD Quad core|MID1020L|takee 1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)eSTAR (Grand|GO\!?) (HD Intel|IPS Intel|IPS|HD|Intel) Quad Core 3G`),
		regexp.MustCompile(`(?i)eSTAR (Zoom Quad|Gemini|GO)`),
		regexp.MustCompile(`(?i)eSTAR GRAND HD quad core( [34]G)?`),
		regexp.MustCompile(`(?i)eSTAR[_ ]MINI[_ ]3G`),
		regexp.MustCompile(`(?i)(MID1020L)`),
		regexp.MustCompile(`(?i)eTouch ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Smart-Ex02|Ex-Handy 10)(?: (?:ROW|RUS))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iCherry_?`),
		regexp.MustCompile(`(?i)iCherry[ _](C(?:25[1258]|21[16]|110|121|22[01379]|23[03])|X1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i-Joy|i-Call|(?:Neon[79]|Sygnus|Deox|Elektra (?:M|L|XL|XXL))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra XL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra XXL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neon([79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sygnus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Deox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i-Call ([^;/]+) Build`),
		regexp.MustCompile(`(?i)i-Joy ([^;/]+) Build`),
		regexp.MustCompile(`(?i)i-mate ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)i-mobile ?[a-z0-9]+|i-Style|IQ ?(9\.1|5\.5|5\.6A?)`),
		regexp.MustCompile(`(?i)i-mobile (i-note[^/;]*) Build`),
		regexp.MustCompile(`(?i)i-Style ?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)IQ ?(9\.1|5\.5|5\.6A?|II)`),
		regexp.MustCompile(`(?i)i-mobile (IQ[^/;]*) Build`),
		regexp.MustCompile(`(?i)i-mobile(?: )?([a-z0-9\- ]+) Build`),
		regexp.MustCompile(`(?i)i-mobile(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)iBall[ _]([^;/)]+)[ _]Build|iBall[_ ]Slide|(?:Snap[_ ]4G2|3G 1026-Q18|6351-Q400i|iT-KSA0003|iT-KSA0012|iT-KSA0066|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Brisk 4G2|Slide[_ ](?:Dazzle[_ ]3500|Skye_03)|Blaze_V4|Wondro 10|Q27 4G|Andi (?:Wink|5G Blink) 4G|Co-Mate|Nova_4G|Brace-X1|DD-1GB|Elan 4G2|Spirit_X2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Snap[_ ]4G2|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Blaze_V4|Wondro 10|Q27 4G|Brisk 4G2|Co-Mate|Nova_4G|Elan 4G2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6351-Q400i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DD-1GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slide[_ ]Dazzle[_ ]3500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1026-Q18(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Brace-X1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0066(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBall[ _]([^;/)]+)(?:[ _]Build|[;)])`),
		regexp.MustCompile(`(?i)AUXUS ([^/;]+) Build`),
		regexp.MustCompile(`(?i)AUXUS (Core[^/;]+) Build`),
		regexp.MustCompile(`(?i)AUXUS ([^/;]+) Build`),
		regexp.MustCompile(`(?i)IBRIT_|(?:SI5[12]|i5Plus|POWER_X|Z2Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IBRIT_I([57])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_POWER6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_Speed Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SI51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SI52(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POWER_X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_AF51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iData[ _](K1|50|i3AL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOTEBOOK6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:APACHE G6|iDroid Royal V5|BALR_?X7(?:_PAK)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BALR_?X7`),
		regexp.MustCompile(`(?i)iGET SMART|(?:SMART[_ ](?:L20X|G10[12]|S7[02]|G71|G81[H]?|L10[234]|W[12]0X|W101|W8X|W20[23]|L206)(?:_eea)?|Android 5(?:[\d.]*);(?: [\w-]+;)? (?:S100))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SMART[_ ])?S100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART[_ ](L20X|G10[12]|S7[02]|G71|G81[H]?|L10[234]|W[12]0X|W101|W8X|W20[23]|L206)`),
		regexp.MustCompile(`(?i)iHunt|One_ Love_|TIT?AN[_ ]P\d+|Like_(3|4U|3_Pro)|X300 Elite|S10_Tank_2019|S10 Tank PRO 2020|S60 Discovery Plus|S60_Discovery_2019|AlienXLite2020|Alien X (?:Lite|Pro)|Alien_X|(?:Titan ?P6000|S[23]0 Ultra ApeX 2021|S21 Ultra 4G 2021|Like 11 Panda Pro|Like_Hi10_2021|Like Hi5|S21 Plus 2021|Like_[78]|Cyber DOG 4G|S10 Tank 2020|(?:S100|S90_)Apex)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S10[_ ]Tank[_ ]20(19|20)`),
		regexp.MustCompile(`(?i)Tian[ _]P3000`),
		regexp.MustCompile(`(?i)Titan ?P6000`),
		regexp.MustCompile(`(?i)Like_([378])`),
		regexp.MustCompile(`(?i)S(90|100)_?Apex`),
		regexp.MustCompile(`(?i)S([23]0) Ultra ApeX 2021`),
		regexp.MustCompile(`(?i)iHunt ([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)iKoMo ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(IK-102[58]|IK-1106|IK-7108|IK-787)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:iLA[-_ ](?:Silk|X|R1)|R1 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(R1) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iLA[-_ ](Silk|X|R1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILEPO[ _](MXQ-4K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WTAB[ _]?\d{3}|(ITELL[_ ](?:K3300|K3500N?|K4700)|K3102 WIFI|FIVO (?:PLUS|Lite)|Zed Book G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WTAB[ _]?(\d{3}(?:[^;/)]*))(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(ITELL[_ ](?:K3300|K3500N?|K4700))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIVO PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIVO Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Vin 5|Vin3 S|Vin3(?: Lite)?|Messi No\.1|Messi 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vin ?(3|5)`),
		regexp.MustCompile(`(?i)Messi (No\.1|3)`),
		regexp.MustCompile(`(?i)(i5800C|i6800|Victor(?:_S)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IMARS VEGA X7|VIVI_8|MILKY_WAY_M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Revolution A8|muPAD[_ ][KT]10|muPAD104|muPADT7|muPAD 7S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Revolution A8|muPAD[_ ][KT]10)`),
		regexp.MustCompile(`(?i)muPAD[ _]?(104|T7|7S)`),
		regexp.MustCompile(`(?i)(EX1080)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ITP-XD80L)(?: Build|[);])`),
		regexp.MustCompile(`(?i)iNew|(?:V7A|V3 Plus|V3-?E|V3C|FIRE_Tab_6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3-?E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V7A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIRE_Tab_6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iNew[ -_]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:iNO SCOUT 2|SGINO6|iNO S9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iOCEAN|M6752|W180|X7[ _]?S|X8 mini`),
		regexp.MustCompile(`(?i)X7[ _]?S`),
		regexp.MustCompile(`(?i)(M6752|W180) Build`),
		regexp.MustCompile(`(?i)iOCEAN[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)iOCEAN[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)iOutdoor (X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iPEGTOP[ _](Z26)`),
		regexp.MustCompile(`(?i)(?:Kylin[ _]5.[05]S?|KYLIN(?:40|50i)|Jade[78]s|Amber[678]S?|Amber[58]S[ _]Pro|Benny10|Phonenix50S|Ruby5S|Zafiro|I9355A|Opal 4S|Perla|S[45]01A|WAVE 4.0 II|WAVE 5.0|MEGA7|SAMBA65S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kylin_5.0S`),
		regexp.MustCompile(`(?i)Kylin (5.[05])`),
		regexp.MustCompile(`(?i)Jade([78])s`),
		regexp.MustCompile(`(?i)WAVE 4.0 II`),
		regexp.MustCompile(`(?i)WAVE 5.0`),
		regexp.MustCompile(`(?i)(I9355A|S[45]01A|Perla)`),
		regexp.MustCompile(`(?i)(IFoo (?:U200|H55|S50))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Frog ?One(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PALADIN EVO)`),
		regexp.MustCompile(`(?i)iRola ([^/;]+) Build|(DX758|DX752|DX752|DX758[ _]?Pro) Build`),
		regexp.MustCompile(`(?i)DX758[ _]?Pro`),
		regexp.MustCompile(`(?i)(DX758|DX752)`),
		regexp.MustCompile(`(?i)iRola ([^/;]+) Build`),
		regexp.MustCompile(`(?i)iRULU[ _-](X11|V[34]|U2|AL101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iRULU[ _-](X11|V[34]|AL101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iRULU[ _](U2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ISWAG[ _]`),
		regexp.MustCompile(`(?i)iSWAG[_ ]ACTIV`),
		regexp.MustCompile(`(?i)iSWAG[_ ]KRONOS`),
		regexp.MustCompile(`(?i)iSWAG[_ ]Lynx`),
		regexp.MustCompile(`(?i)iSWAG[_ ]MEGA`),
		regexp.MustCompile(`(?i)iSWAG[_ ]MANTRA`),
		regexp.MustCompile(`(?i)iSWAG[_ ]NEMESIS`),
		regexp.MustCompile(`(?i)iSWAG[_ ]NEO`),
		regexp.MustCompile(`(?i)ISWAG[_ ]VIPER`),
		regexp.MustCompile(`(?i)(?:IS655|IS[35]30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(IS[35]30)`),
		regexp.MustCompile(`(?i)(IS655)`),
		regexp.MustCompile(`(?i)(I-T60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel|iNote|GP10X2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S665LN?`),
		regexp.MustCompile(`(?i)W6002E?`),
		regexp.MustCompile(`(?i)S663L[NC]`),
		regexp.MustCompile(`(?i)W5005P?`),
		regexp.MustCompile(`(?i)A509WM?`),
		regexp.MustCompile(`(?i)[LW]6503`),
		regexp.MustCompile(`(?i)L5006[CS]`),
		regexp.MustCompile(`(?i)[LW]6004`),
		regexp.MustCompile(`(?i)itel[ _]A15R`),
		regexp.MustCompile(`(?i)P662LN?`),
		regexp.MustCompile(`(?i)P682LPN?`),
		regexp.MustCompile(`(?i)iNote ([^/;]*)Build`),
		regexp.MustCompile(`(?i)iNote_([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)itel-it(1410|1512|1520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel-it1553(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S11Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel[- ](A14S?|A16 Plus|A44 Power|A23S|A52 Lite)`),
		regexp.MustCompile(`(?i)itel it170([23])`),
		regexp.MustCompile(`(?i)itel A(\d{1,2}) ?Plus`),
		regexp.MustCompile(`(?i)iTel ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)iTel[_ ]([a-z0-9\-_]*)`),
		regexp.MustCompile(`(?i)iTRUCK 7 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LAMCY (?:L3[05]0|C100|L400)|IVA S6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAMCY (L3[05]0|C100|L400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IVA S6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:733|730|766|930)TPC|769TPC(?:II)?|744TPC plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:733|730|766|930)TPC|769TPC(?:II)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Innelo_1|iV 505|Me 1\+|Me 3S|Me [2345]|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:i2_Lite|i2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) i2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Me 1\+`),
		regexp.MustCompile(`(?i)Me ([2345]S?)`),
		regexp.MustCompile(`(?i)(?:MC401_GWL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MC401)_GWL`),
		regexp.MustCompile(`(?i)(IX701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iYOU[_ ](M1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Mi7_HERO_(?:BETA|TAB))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi7[_ ]HERO[_ ]BETA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi7[_ ]HERO[_ ]TAB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M10ES11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ivvi[ _]`),
		regexp.MustCompile(`(?i)ivvi[ _](P60)[_ ](\w\d+)`),
		regexp.MustCompile(`(?i)ivvi[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)mPhone ?([68]|7 Plus|7s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _](?:C[12]|X10|X[126]|MG430|Q[145]|C[18]0C[18]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _]Q1 plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _](C[12]|X[126]|MG430|Q[145])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _](X10|C[18]0C[18]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:nJoy[_ ])?(Deimos 7|Kali_8|Turnus_8|Tityos_10|Arcas_7|Theia_10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)neocore_?`),
		regexp.MustCompile(`(?i)neocore_N1G1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)neocore E1-2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEOCORE_E2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NODROPOUT[_ ]`),
		regexp.MustCompile(`(?i)NODROPOUT[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)phoneOne[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Texet|(NaviPad [^/;]*) Build|TM-(?:1046|1058|1057|1067|3000|3200R|3500|400[34]|4071|450[34]|451[30]|4377|4082R|508[34]|550[358]|5010|5017|507[4-7]|5[23]77|6003|6906|702[13]|7055HD|709[69]|9747BT|9758|9751HD|9767|5513|520[410]|507[13]|558[134]|570[23]|7859|8044|9748[ _]3G|9720|7047HD[ _]3G|9757|9740|4982|4515|4083|500[3567]|5571|3204R|5016|8043|7047HD[ _]3G|8041HD|8066|705[23]|7041|8041HD|8051|8048|974[96]|973[78]W|974[170]|9743W|9750HD|7043XD|7049|7887|7037W|702[46])|TB-(771A|711A)|X Point|X-Force[\(-]?TM-5009\)?|X-Plus[\(-]?TM-5577\)?|TM_5011|X-pad (?:AIR 8|iX 7|NAVI 7.[35]|NAVI 10|SKY 8.1|STYLE 8|STYLE 10.1|HIT|LITE 7.[12]|QUAD (?:7.2|10|7)|SHINE 8.1)(?: 3G)?`),
		regexp.MustCompile(`(?i)(NaviPad [^/;]*) Build`),
		regexp.MustCompile(`(?i)X-pad SHINE 8.1 3G`),
		regexp.MustCompile(`(?i)X-pad QUAD 7.2 3G`),
		regexp.MustCompile(`(?i)X-pad LITE (7.[12])`),
		regexp.MustCompile(`(?i)X-pad STYLE 10.1 3G`),
		regexp.MustCompile(`(?i)(X-pad (?:AIR 8|iX 7) 3G)`),
		regexp.MustCompile(`(?i)TM-7096|X-pad NAVI 7.3 3G`),
		regexp.MustCompile(`(?i)X-pad NAVI 7.5 3G`),
		regexp.MustCompile(`(?i)X-pad SKY 8.1 3G`),
		regexp.MustCompile(`(?i)TM-1046|X-pad NAVI 10 3G`),
		regexp.MustCompile(`(?i)(TM-(?:1057|1067|6906|8043|9748[_ ]3G|9740|9757(?:[_ ]3G)?|7047HD[ _]3G|9747BT|9751HD|702[13]|705[23]|7041|9720|7047HD[_ ]3G|8044|8041HD|973[78]W|9743W|974[710]|9750HD|7043XD|7037W|702[46])|TB-(?:771A|711A|8041HD))`),
		regexp.MustCompile(`(?i)(TM-(?:3000|3200R|400[34]|4083|4377|4504|451[30]|500[35]|5[23]77|5571|3204R|520[04]|5581|5505|5017|507[13-7]|5081|6003|5513))`),
		regexp.MustCompile(`(?i)TM-508(3|4)`),
		regexp.MustCompile(`(?i)TM-558(3|4)`),
		regexp.MustCompile(`(?i)TM-(5016|3500)`),
		regexp.MustCompile(`(?i)TEXET[_ ]IX-MINI`),
		regexp.MustCompile(`(?i)X-Force[\(-]?TM-5009\)?`),
		regexp.MustCompile(`(?i)X-Plus[\(-]?TM-5577\)?`),
		regexp.MustCompile(`(?i)teXet[_ ]X-medium[_ ]plus`),
		regexp.MustCompile(`(?i)Vmobile[ _]`),
		regexp.MustCompile(`(?i)Vmobile[ _](J7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vmobile XS Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OWN[ _]|(?:S4035[ _][34]G|Smart8|SMART PLUS LTE|FUN VALUE (?:4G|Lite)|FUN_VALUE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUN ([67])`),
		regexp.MustCompile(`(?i)FUN 5\(4G\)`),
		regexp.MustCompile(`(?i)(?:OWN[ _])?(S3000D|S3010|S3020D|S4010|S4025|S4035[ _][34]G)`),
		regexp.MustCompile(`(?i)FUN[_ ]VALUE(?: 4G)?`),
		regexp.MustCompile(`(?i)Smart ?(8|9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART PLUS LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FBMD/(?:Aspire E5-421G|Z5WAL|One S1003);`),
		regexp.MustCompile(`(?i)FBMD/Aspire E5-421G;`),
		regexp.MustCompile(`(?i)FBMD/Z5WAL;`),
		regexp.MustCompile(`(?i)FBMD/One S1003;`),
		regexp.MustCompile(`(?i)FBMD/(?:K50IN|K54L|T100HAN|T103HAF|UX360CAK|X550LB|X553MA|X555LN|X556UQK);`),
		regexp.MustCompile(`(?i)FBMD/K50IN;`),
		regexp.MustCompile(`(?i)FBMD/K54L;`),
		regexp.MustCompile(`(?i)FBMD/T100HAN;`),
		regexp.MustCompile(`(?i)FBMD/T103HAF;`),
		regexp.MustCompile(`(?i)FBMD/UX360CAK;`),
		regexp.MustCompile(`(?i)FBMD/X550LB;`),
		regexp.MustCompile(`(?i)FBMD/X553MA;`),
		regexp.MustCompile(`(?i)FBMD/X555LN;`),
		regexp.MustCompile(`(?i)FBMD/X556UQK;`),
		regexp.MustCompile(`(?i)FBMD/(?:Latitude E4300|Inspiron 3541|XPS 15 95[35]0);`),
		regexp.MustCompile(`(?i)FBMD/((?:Compaq|HP) |23-f364)`),
		regexp.MustCompile(`(?i)HP EliteBook (25[67]0p)`),
		regexp.MustCompile(`(?i)HP ProBook (440 G5|6[35]60b)`),
		regexp.MustCompile(`(?i)FBMD/(?:37021C5|80E5|80SM|80VR);`),
		regexp.MustCompile(`(?i)FBMD/37021C5;`),
		regexp.MustCompile(`(?i)FBMD/80E5;`),
		regexp.MustCompile(`(?i)FBMD/80SM;`),
		regexp.MustCompile(`(?i)FBMD/80VR;`),
		regexp.MustCompile(`(?i)FBMD/SCL141CTP;`),
		regexp.MustCompile(`(?i)FBMD/TH360R12.32CTW;`),
		regexp.MustCompile(`(?i)Satellite (A[25]00|C650|C855|L650|S855)`),
		regexp.MustCompile(`(?i)Satellite ([^;\)]+);`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod1[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod2[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod3[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod4[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod5[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod7[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod9[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod`),
		regexp.MustCompile(`(?i)COWON ([^;/]+) Build`),
		regexp.MustCompile(`(?i)FiiO M(1[157]|6)`),
		regexp.MustCompile(`(?i)KuGou[_ -](P5)`),
		regexp.MustCompile(`(?i)(SV-MV100)`),
		regexp.MustCompile(`(?i)Sonos/.+\((?:ZP.+)\)|Sonos;`),
		regexp.MustCompile(`(?i)\((ZPS(?:[13569]|1[1-578]|2[03])|ZP90)\)`),
		regexp.MustCompile(`(?i)Sonos;Play5;`),
		regexp.MustCompile(`(?i)Sonos;One;`),
		regexp.MustCompile(`(?i)YP-(G[SIPB]?1|G[57]0|GB70D)`),
		regexp.MustCompile(`(?i)YP-G[B]?1`),
		regexp.MustCompile(`(?i)Shanling (M6\(21\))`),
		regexp.MustCompile(`(?i)(SLTDVD102[34])`),
		regexp.MustCompile(`(?i)(DV-PTB1080)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Erisson[_ ]Shell`),
		regexp.MustCompile(`(?i)ALDINORD[;,]`),
		regexp.MustCompile(`(?i)ALDISUED[;,]`),
		regexp.MustCompile(`(?i)ALDISUED, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(LE43S5970-20|S50856)`),
		regexp.MustCompile(`(?i)ARRIS[;,]`),
		regexp.MustCompile(`(?i)Airties; ?([^);/]+)`),
		regexp.MustCompile(`(?i)Altech UEC; ?([^);/]+)`),
		regexp.MustCompile(`(?i)Blaupunkt_UMC[;,]`),
		regexp.MustCompile(`(?i)BUSH[;,]`),
		regexp.MustCompile(`(?i)CELCUS[;,]`),
		regexp.MustCompile(`(?i)Changhong; ?([^);/]+)`),
		regexp.MustCompile(`(?i)DIGIHOME[;,]`),
		regexp.MustCompile(`(?i)ELECTRONIA[;,]`),
		regexp.MustCompile(`(?i)ESSENTIELB[;,]`),
		regexp.MustCompile(`(?i)FU[;,]`),
		regexp.MustCompile(`(?i)FINLUX[;,]`),
		regexp.MustCompile(`(?i)FUEGO[;,]`),
		regexp.MustCompile(`(?i)GOGEN[;,]`),
		regexp.MustCompile(`(?i)(OWB|Grundig|Arcelik)`),
		regexp.MustCompile(`(?i)(?:HHW_)?HAIER`),
		regexp.MustCompile(`(?i)HI-LEVEL[;,]`),
		regexp.MustCompile(`(?i)Hisense|Eurofins_Digital_Testing`),
		regexp.MustCompile(`(?i)(L[A-Z]{2,3}[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,6}[0-9]?[A-Z]?)`),
		regexp.MustCompile(`(?i)(H[A-Z]?[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,4})`),
		regexp.MustCompile(`(?i)Hitachi[;,]`),
		regexp.MustCompile(`(?i)HORIZON[;,]`),
		regexp.MustCompile(`(?i)HOTEL[;,]`),
		regexp.MustCompile(`(?i)Humax|hdr1000s`),
		regexp.MustCompile(`(?i)(HD-FOX C|HD (FOX\+|NANO)|iCord (HD\+|MINI|Cable)|(CX|IR)HD-5100(C|S)|HM9503HD)`),
		regexp.MustCompile(`(?i)Humax; ([^);/]+)`),
		regexp.MustCompile(`(?i)HYUNDAI[;,]`),
		regexp.MustCompile(`(?i)(Vantage|VT-100|VT-1)`),
		regexp.MustCompile(`(?i)inverto; ([^);/]+)`),
		regexp.MustCompile(`(?i)(Volksbox Web Edition|Volksbox Essential|Volksbox II|Volksbox)`),
		regexp.MustCompile(`(?i)AFTSO001|JVC[;,]`),
		regexp.MustCompile(`(?i)KUBO[;,]`),
		regexp.MustCompile(`(?i)KALLEY[;,]`),
		regexp.MustCompile(`(?i)KEY000000(2E|2F|3B|3F)`),
		regexp.MustCompile(`(?i)(NetCast [0-9]{1}.[0-9]{1}|GLOBAL_PLAT3)`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z0-9]{3}[A-Z]{2})`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z][0-9][A-Z])`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z0-9]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}[A-Z]{2}[0-9]{4}[A-Z0-9]{1}[A-Z]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}NANO[0-9]{3}[A-Z]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}NANO[0-9]{2})`),
		regexp.MustCompile(`(?i)LGE;? ?([0-9]{2}[A-Z]{2}[0-9]{2,4}[A-Z]?)`),
		regexp.MustCompile(`(?i)LAURUS[;,]`),
		regexp.MustCompile(`(?i)Lifemaxx[;,]`),
		regexp.MustCompile(`(?i)LINSAR[;,]`),
		regexp.MustCompile(`(?i)Loewe[^$]`),
		regexp.MustCompile(`(?i)([A-Z]{2}[0-9]{3})`),
		regexp.MustCompile(`(?i)LUXOR[;,]`),
		regexp.MustCompile(`(?i)MStar[;,]`),
		regexp.MustCompile(`(?i)([24])KTV18`),
		regexp.MustCompile(`(?i)MTC[;,]`),
		regexp.MustCompile(`(?i)([24])K_Android_TV_V01`),
		regexp.MustCompile(`(?i)MTK|MediaTek;`),
		regexp.MustCompile(`(?i)(MT[0-9]{4})`),
		regexp.MustCompile(`(?i)MEDION, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)NORDMENDE[;,]`),
		regexp.MustCompile(`(?i)OK[;,]`),
		regexp.MustCompile(`(?i)PROFILO[;,]`),
		regexp.MustCompile(`(?i)VIERA (201[1-9])`),
		regexp.MustCompile(`(?i)(DIGA [A-Z]{1}[0-9]{4})`),
		regexp.MustCompile(`(?i)DIGA Webkit ([A-Z]{1}[0-9]{4})`),
		regexp.MustCompile(`(?i)SmartTV(201[89]|202[0-1])`),
		regexp.MustCompile(`(?i)Philips|NETTV/`),
		regexp.MustCompile(`(?i)Philips[,;] ?([^),;/]+)`),
		regexp.MustCompile(`(?i)NETTV/[0-9\.]{5}`),
		regexp.MustCompile(`(?i)POLAROID[;,]`),
		regexp.MustCompile(`(?i)QILIVE[;,]`),
		regexp.MustCompile(`(?i)REGAL[;,]`),
		regexp.MustCompile(`(?i)SCBC[;,]`),
		regexp.MustCompile(`(?i)SEG[;,]`),
		regexp.MustCompile(`(?i)SWTV[;,]`),
		regexp.MustCompile(`(?i)Saba[;,]`),
		regexp.MustCompile(`(?i)Salora[;,]`),
		regexp.MustCompile(`(?i)Samsung.*Smart\s*TV|Tizen.*TV|Maple_2011`),
		regexp.MustCompile(`(?i)SmartTV(201[2-9]|202[0-1]):([^);/]+)`),
		regexp.MustCompile(`(?i)SmartTV(201[2-9]|202[0-1])`),
		regexp.MustCompile(`(?i)Selevision; (?:Selevision )?([^);/]+)`),
		regexp.MustCompile(`(?i)(EMC1000i)`),
		regexp.MustCompile(`(?i)(?:UMC-)?Sharp`),
		regexp.MustCompile(`(?i)SHARP, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Sharp[,;] ?([^),;/]+)`),
		regexp.MustCompile(`(?i)(LE[0-9]{3}[A-Z]{0,3})`),
		regexp.MustCompile(`(?i)LC-([^);/]+)`),
		regexp.MustCompile(`(?i)Sky_worth;([^);/]+)`),
		regexp.MustCompile(`(?i)Smart[;,]`),
		regexp.MustCompile(`(?i)Smart; ([^);/]+)`),
		regexp.MustCompile(`(?i)([A-Z]{2}[0-9]{2}|ZAPPIX)`),
		regexp.MustCompile(`(?i)KDL-GN([56])`),
		regexp.MustCompile(`(?i)(?:BRAVIA )(2K GB ATV3|[48]K UR[123]|4K GB ATV3|4K GB|4K VH2|4K 2015|2015|VH1|VU1)(?:[);/ ]|VH1|4K VH2|$)`),
		regexp.MustCompile(`(?i)(KDL?-?[0-9]{2}[A-Z]{1}[0-9]{4}[A-Z]{1})`),
		regexp.MustCompile(`(?i)(KDL?-?[0-9]{2}[A-Z]{1}[0-9]{3}[A-Z]{1})`),
		regexp.MustCompile(`(?i)(KDL?-?[0-9]{2}[A-Z]{1,2}[0-9]{1,5})`),
		regexp.MustCompile(`(?i)TCL[^\s]`),
		regexp.MustCompile(`(?i)(32D1820|(?:39|55)D2900|32D2930|(?:32|43)S4900)`),
		regexp.MustCompile(`(?i)TDSystems[;,]`),
		regexp.MustCompile(`(?i)SmartTV(2019|2020)`),
		regexp.MustCompile(`(?i)TOKYO[;,]`),
		regexp.MustCompile(`(?i)((DigiCorder|MultyVision|Digit) (ISIO S|ISIO C|ISIO))`),
		regexp.MustCompile(`(?i)TECHNIKA[;,]`),
		regexp.MustCompile(`(?i)([A-Z]{1}-[0-9]{3})`),
		regexp.MustCompile(`(?i)Techwood[;,]`),
		regexp.MustCompile(`(?i)THOMSON[,]?|THOM`),
		regexp.MustCompile(`(?i)(TB28D19DHS-01|T28D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T32RTM5040|T32D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T43FSL5031|T43D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T40D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T49D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T55D18[SD]FS-01B)`),
		regexp.MustCompile(`(?i)(([0-9]{2}|DTV_)[A-Z]{2}[0-9]{1,3})`),
		regexp.MustCompile(`(?i)OEM, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)VOX[;,]`),
		regexp.MustCompile(`(?i)(?:Vestel.+VESTEL|VESTEL;)`),
		regexp.MustCompile(`(?i)videoweb|tv2n`),
		regexp.MustCompile(`(?i)(tv2n)`),
		regexp.MustCompile(`(?i)(videowebtv)`),
		regexp.MustCompile(`(?i)WELLINGTON[;,]`),
		regexp.MustCompile(`(?i)X-VISION[;,]`),
	}
	__dr_buf = []byte{
		0x4e, 0x69, 0x6b, 0x6f, 0x6e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6f, 0x6c, 0x70,
		0x69, 0x78, 0x20, 0x53, 0x38, 0x30, 0x30, 0x63, 0x53, 0x61, 0x6d, 0x73, 0x75, 0x6e, 0x67, 0x45,
		0x4b, 0x2d, 0x47, 0x4e, 0x31, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x58,
		0x45, 0x4b, 0x2d, 0x47, 0x43, 0x31, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43,
		0x61, 0x6d, 0x65, 0x72, 0x61, 0x45, 0x4b, 0x2d, 0x47, 0x43, 0x31, 0x31, 0x30, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20,
		0x6f, 0x6e, 0x6c, 0x79, 0x45, 0x4b, 0x2d, 0x47, 0x43, 0x32, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x24, 0x31, 0x4d, 0x41, 0x43, 0x20, 0x41,
		0x55, 0x44, 0x49, 0x4f, 0x63, 0x61, 0x72, 0x20, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x4d,
		0x61, 0x63, 0x20, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x70, 0x72, 0x6f, 0x53, 0x70, 0x72,
		0x6f, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x51, 0x74, 0x43, 0x61, 0x72,
		0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x20, 0x53, 0x54, 0x6f,
		0x70, 0x77, 0x61, 0x79, 0x73, 0x70, 0x39, 0x38, 0x35, 0x33, 0x69, 0x5f, 0x31, 0x68, 0x31, 0x30,
		0x5f, 0x76, 0x6d, 0x6d, 0x54, 0x53, 0x39, 0x41, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x63, 0x6f, 0x6e,
		0x73, 0x6f, 0x6c, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4a, 0x58,
		0x44, 0x4a, 0x58, 0x44, 0x5f, 0x53, 0x36, 0x30, 0x31, 0x57, 0x49, 0x46, 0x49, 0x53, 0x36, 0x30,
		0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x58,
		0x62, 0x6f, 0x78, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x58,
		0x58, 0x62, 0x6f, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x4f,
		0x6e, 0x65, 0x58, 0x42, 0x4f, 0x58, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x45, 0x44, 0x58, 0x62, 0x6f,
		0x78, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x33, 0x36, 0x30, 0x4e,
		0x69, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x6f, 0x24, 0x31, 0x4f, 0x55, 0x59, 0x41, 0x52, 0x65, 0x74,
		0x72, 0x6f, 0x69, 0x64, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x65, 0x67, 0x61, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x63, 0x61, 0x73, 0x74, 0x53, 0x6f,
		0x6e, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31,
		0x31, 0x30, 0x6d, 0x6f, 0x6f, 0x6e, 0x73, 0x74, 0x76, 0x32, 0x45, 0x73, 0x6d, 0x61, 0x72, 0x74,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x45, 0x35, 0x30, 0x30, 0x41, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x45, 0x34, 0x35, 0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x33, 0x36, 0x30, 0x4e,
		0x37, 0x4e, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x36,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x36, 0x4e, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4e, 0x34, 0x4e, 0x35, 0x4e, 0x34, 0x41, 0x4e, 0x35, 0x53, 0x4e, 0x34,
		0x53, 0x33, 0x47, 0x4e, 0x45, 0x54, 0x54, 0x39, 0x30, 0x30, 0x33, 0x47, 0x4f, 0x74, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x41, 0x70, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x33, 0x51, 0x51, 0x6f, 0x6f,
		0x21, 0x20, 0x50, 0x2d, 0x50, 0x61, 0x64, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x51, 0x2d, 0x50, 0x61,
		0x64, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x53, 0x75, 0x72, 0x66, 0x54, 0x53, 0x39, 0x37, 0x30, 0x38,
		0x42, 0x53, 0x75, 0x72, 0x66, 0x20, 0x54, 0x53, 0x31, 0x30, 0x30, 0x39, 0x42, 0x51, 0x6f, 0x6f,
		0x21, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x51,
		0x6f, 0x6f, 0x21, 0x20, 0x51, 0x2d, 0x42, 0x6f, 0x6f, 0x6b, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x47,
		0x6c, 0x61, 0x7a, 0x65, 0x34, 0x47, 0x6f, 0x6f, 0x64, 0x24, 0x31, 0x20, 0x33, 0x47, 0x4c, 0x69,
		0x67, 0x68, 0x74, 0x20, 0x24, 0x31, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x50,
		0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4b, 0x49, 0x44, 0x53, 0x20, 0x53, 0x34, 0x35, 0x4b, 0x69, 0x64,
		0x73, 0x20, 0x53, 0x34, 0x35, 0x34, 0x69, 0x66, 0x65, 0x35, 0x49, 0x56, 0x45, 0x54, 0x61, 0x72,
		0x7a, 0x61, 0x6e, 0x20, 0x46, 0x31, 0x37, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x77,
		0x65, 0x67, 0x75, 0x65, 0x44, 0x52, 0x45, 0x4e, 0x41, 0x44, 0x72, 0x65, 0x6e, 0x61, 0x4b, 0x61,
		0x6d, 0x62, 0x61, 0x5f, 0x32, 0x4b, 0x61, 0x6d, 0x62, 0x61, 0x20, 0x32, 0x4b, 0x61, 0x6d, 0x62,
		0x61, 0x38, 0x38, 0x34, 0x38, 0x41, 0x26, 0x4b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x32, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x32, 0x30, 0x41, 0x6c, 0x70, 0x68,
		0x61, 0x20, 0x32, 0x31, 0x41, 0x31, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x41, 0x6c, 0x70, 0x68,
		0x61, 0x41, 0x39, 0x35, 0x58, 0x41, 0x39, 0x35, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x39, 0x35, 0x58, 0x20, 0x46, 0x33, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x46, 0x33,
		0x20, 0x53, 0x6c, 0x69, 0x6d, 0x4d, 0x61, 0x78, 0x2b, 0x41, 0x39, 0x35, 0x58, 0x5f, 0x46, 0x33,
		0x41, 0x69, 0x72, 0x5f, 0x49, 0x49, 0x46, 0x33, 0x20, 0x41, 0x69, 0x72, 0x20, 0x49, 0x49, 0x41,
		0x39, 0x35, 0x58, 0x20, 0x4d, 0x41, 0x58, 0x4d, 0x61, 0x78, 0x41, 0x39, 0x35, 0x58, 0x20, 0x50,
		0x52, 0x4f, 0x50, 0x72, 0x6f, 0x41, 0x39, 0x35, 0x58, 0x20, 0x46, 0x33, 0x20, 0x41, 0x69, 0x72,
		0x46, 0x33, 0x20, 0x41, 0x69, 0x72, 0x5a, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x45, 0x45,
		0x5a, 0x4f, 0x41, 0x46, 0x46, 0x49, 0x58, 0x65, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x41, 0x71, 0x75,
		0x61, 0x72, 0x69, 0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x41, 0x71, 0x75, 0x61, 0x72,
		0x69, 0x75, 0x73, 0x41, 0x47, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x47, 0x4d, 0x47,
		0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x24, 0x31, 0x41, 0x39,
		0x48, 0x33, 0x48, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x49, 0x44, 0x41, 0x54, 0x41, 0x41, 0x44,
		0x54, 0x20, 0x31, 0x30, 0x36, 0x31, 0x41, 0x44, 0x54, 0x31, 0x30, 0x31, 0x32, 0x4c, 0x41, 0x44,
		0x54, 0x20, 0x31, 0x30, 0x31, 0x32, 0x4c, 0x45, 0x4c, 0x44, 0x45, 0x20, 0x31, 0x30, 0x41, 0x49,
		0x52, 0x4f, 0x4e, 0x41, 0x69, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x38,
		0x53, 0x41, 0x49, 0x53, 0x69, 0x72, 0x69, 0x73, 0x37, 0x30, 0x38, 0x4c, 0x41, 0x56, 0x41, 0x20,
		0x50, 0x52, 0x4f, 0x20, 0x34, 0x2e, 0x35, 0x4b, 0x69, 0x6e, 0x67, 0x63, 0x6f, 0x6d, 0x6d, 0x20,
		0x43, 0x35, 0x30, 0x30, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x58, 0x33, 0x41, 0x4c, 0x44, 0x49, 0x20, 0x4e, 0x4f, 0x52, 0x44,
		0x41, 0x4c, 0x44, 0x49, 0x20, 0x53, 0xc3, 0x9c, 0x44, 0x41, 0x4c, 0x4c, 0x49, 0x4e, 0x6d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x41, 0x4d, 0x41, 0x41, 0x4d, 0x43, 0x56,
		0x41, 0x4d, 0x47, 0x4f, 0x4f, 0x41, 0x4d, 0x33, 0x35, 0x30, 0x4a, 0x61, 0x63, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x54, 0x69, 0x67, 0x6f, 0x41, 0x4d, 0x34, 0x30, 0x32, 0x50, 0x72, 0x6f, 0x6e, 0x74,
		0x6f, 0x41, 0x4d, 0x34, 0x31, 0x30, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x41, 0x4d, 0x34, 0x35, 0x30,
		0x53, 0x77, 0x69, 0x66, 0x74, 0x41, 0x4d, 0x35, 0x30, 0x38, 0x46, 0x75, 0x65, 0x67, 0x6f, 0x41,
		0x4d, 0x35, 0x30, 0x39, 0x55, 0x6e, 0x6f, 0x41, 0x4d, 0x35, 0x31, 0x35, 0x44, 0x31, 0x41, 0x4d,
		0x35, 0x31, 0x38, 0x43, 0x31, 0x41, 0x4d, 0x35, 0x32, 0x30, 0x41, 0x4d, 0x35, 0x32, 0x33, 0x41,
		0x4d, 0x35, 0x32, 0x37, 0x47, 0x65, 0x6f, 0x41, 0x4d, 0x35, 0x33, 0x30, 0x41, 0x4d, 0x35, 0x33,
		0x35, 0x50, 0x31, 0x41, 0x4d, 0x24, 0x31, 0x41, 0x4e, 0x53, 0x55, 0x4c, 0x34, 0x30, 0x20, 0x42,
		0x75, 0x69, 0x6c, 0x64, 0x55, 0x4c, 0x34, 0x30, 0x41, 0x4e, 0x53, 0x2f, 0x4c, 0x35, 0x31, 0x4c,
		0x35, 0x31, 0x41, 0x4e, 0x58, 0x4f, 0x4e, 0x49, 0x54, 0x41, 0x4f, 0x43, 0x41, 0x4f, 0x59, 0x4f,
		0x44, 0x4b, 0x47, 0x41, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x64, 0x69,
		0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x54, 0x49, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x41, 0x52, 0x52,
		0x49, 0x53, 0x41, 0x53, 0x53, 0x45, 0x41, 0x54, 0x26, 0x54, 0x45, 0x41, 0x32, 0x31, 0x31, 0x30,
		0x30, 0x35, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x35, 0x47, 0x52, 0x61, 0x64, 0x69, 0x61,
		0x6e, 0x74, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x20, 0x4d,
		0x61, 0x78, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x35, 0x47,
		0x41, 0x78, 0x69, 0x61, 0x43, 0x61, 0x6c, 0x79, 0x70, 0x73, 0x6f, 0x43, 0x61, 0x6c, 0x79, 0x70,
		0x73, 0x6f, 0x20, 0x32, 0x43, 0x61, 0x6c, 0x79, 0x70, 0x73, 0x6f, 0x20, 0x33, 0x4d, 0x61, 0x65,
		0x73, 0x74, 0x72, 0x6f, 0x4d, 0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x4d,
		0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x61, 0x65, 0x73, 0x74,
		0x72, 0x6f, 0x20, 0x33, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x20, 0x32, 0x4d, 0x6f,
		0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e,
		0x20, 0x5a, 0x41, 0x54, 0x4d, 0x41, 0x4e, 0x41, 0x54, 0x4f, 0x4c, 0x70, 0x65, 0x72, 0x69, 0x70,
		0x68, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x5f, 0x53, 0x6c, 0x69, 0x6d, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x53, 0x6c, 0x69, 0x6d, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x55, 0x52, 0x49, 0x53, 0x41, 0x55,
		0x58, 0x41, 0x56, 0x48, 0x45, 0x78, 0x63, 0x65, 0x72, 0x20, 0x47, 0x35, 0x2e, 0x24, 0x31, 0x45,
		0x78, 0x63, 0x65, 0x72, 0x20, 0x47, 0x35, 0x45, 0x78, 0x63, 0x65, 0x72, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x45, 0x78, 0x63, 0x65, 0x72, 0x20, 0x38, 0x41, 0x58, 0x58, 0x41, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x59, 0x59, 0x41, 0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x4e,
		0x65, 0x6f, 0x6e, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x20, 0x43, 0x24, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x24, 0x31, 0x53, 0x70, 0x65, 0x65,
		0x64, 0x20, 0x58, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f,
		0x6e, 0x20, 0x24, 0x31, 0x50, 0x65, 0x61, 0x72, 0x6c, 0x20, 0x41, 0x34, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x50, 0x65, 0x61, 0x72, 0x6c, 0x20, 0x41, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x65,
		0x61, 0x72, 0x6c, 0x20, 0x41, 0x24, 0x31, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x50, 0x35, 0x35, 0x46,
		0x41, 0x53, 0x54, 0x37, 0x20, 0x33, 0x47, 0x53, 0x75, 0x72, 0x66, 0x20, 0x31, 0x30, 0x30, 0x30,
		0x4b, 0x69, 0x64, 0x7a, 0x79, 0x20, 0x37, 0x30, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74, 0x79,
		0x6c, 0x65, 0x41, 0x63, 0x65, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x75, 0x7a,
		0x7a, 0x20, 0x24, 0x31, 0x43, 0x4c, 0x45, 0x56, 0x45, 0x52, 0x20, 0x31, 0x43, 0x6c, 0x65, 0x76,
		0x65, 0x72, 0x20, 0x31, 0x55, 0x52, 0x42, 0x41, 0x4e, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x55,
		0x72, 0x62, 0x61, 0x6e, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x20,
		0x24, 0x31, 0x41, 0x63, 0x65, 0x72, 0x44, 0x41, 0x32, 0x32, 0x30, 0x48, 0x51, 0x4c, 0x44, 0x41,
		0x32, 0x34, 0x31, 0x48, 0x4c, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41, 0x41, 0x54, 0x41,
		0x42, 0x24, 0x31, 0x45, 0x41, 0x43, 0x54, 0x41, 0x42, 0x31, 0x30, 0x32, 0x31, 0x41, 0x43, 0x54,
		0x41, 0x42, 0x24, 0x31, 0x45, 0x54, 0x2d, 0x31, 0x30, 0x38, 0x2d, 0x31, 0x31, 0x41, 0x45, 0x6e,
		0x64, 0x75, 0x72, 0x6f, 0x20, 0x54, 0x31, 0x54, 0x50, 0x41, 0x36, 0x30, 0x57, 0x49, 0x63, 0x6f,
		0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x38, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x37, 0x41, 0x31, 0x2d, 0x38, 0x33, 0x30, 0x49, 0x63, 0x6f, 0x6e, 0x69,
		0x61, 0x20, 0x41, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x6c, 0x6b, 0x20,
		0x53, 0x41, 0x33, 0x2d, 0x41, 0x32, 0x30, 0x46, 0x48, 0x44, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61,
		0x20, 0x41, 0x33, 0x20, 0x46, 0x48, 0x44, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41, 0x33,
		0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x49, 0x63, 0x6f,
		0x6e, 0x69, 0x61, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20,
		0x42, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x37, 0x49,
		0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x38, 0x49, 0x63, 0x6f, 0x6e, 0x69,
		0x61, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x41, 0x31, 0x30, 0x31, 0x56, 0x61, 0x6e, 0x67,
		0x6f, 0x67, 0x68, 0x41, 0x32, 0x30, 0x30, 0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x45,
		0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x41, 0x63, 0x65, 0x72, 0x20, 0x4f, 0x6e, 0x65, 0x20,
		0x37, 0x20, 0x34, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x34, 0x47, 0x41, 0x63, 0x65, 0x72,
		0x20, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x47, 0x54, 0x2d, 0x38, 0x31,
		0x30, 0x50, 0x72, 0x65, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x38, 0x41, 0x63, 0x65, 0x72, 0x5f,
		0x6f, 0x6e, 0x65, 0x5f, 0x38, 0x5f, 0x54, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x54, 0x32,
		0x4f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x54, 0x34, 0x2d, 0x38, 0x32, 0x4c, 0x4c, 0x69, 0x71, 0x75,
		0x69, 0x64, 0x20, 0x45, 0x37, 0x30, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
		0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x45, 0x31, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71,
		0x75, 0x69, 0x64, 0x20, 0x45, 0x32, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
		0x20, 0x45, 0x33, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x53, 0x31, 0x4c, 0x69, 0x71, 0x75,
		0x69, 0x64, 0x20, 0x53, 0x32, 0x6e, 0x65, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x34,
		0x30, 0x30, 0x6e, 0x65, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x33, 0x30, 0x30, 0x6e,
		0x65, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x53, 0x32, 0x30, 0x30, 0x62, 0x65, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x45, 0x31, 0x30, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a,
		0x24, 0x31, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x31, 0x31, 0x30, 0x4c, 0x69, 0x71,
		0x75, 0x69, 0x64, 0x20, 0x5a, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
		0x20, 0x5a, 0x34, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4a, 0x61,
		0x64, 0x65, 0x20, 0x5a, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x35, 0x33, 0x30, 0x4c,
		0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x36, 0x33, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
		0x20, 0x5a, 0x36, 0x33, 0x30, 0x53, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73,
		0x74, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x20, 0x34, 0x47, 0x4c,
		0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c,
		0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4d, 0x33, 0x33, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
		0x20, 0x4d, 0x32, 0x32, 0x30, 0x41, 0x63, 0x65, 0x72, 0x54, 0x44, 0x36, 0x30, 0x30, 0x54, 0x44,
		0x36, 0x30, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4a, 0x61, 0x64, 0x65, 0x4c, 0x69,
		0x71, 0x75, 0x69, 0x64, 0x20, 0x58, 0x32, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x54, 0x72,
		0x61, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x53, 0x70, 0x69, 0x6e, 0x20, 0x24, 0x31,
		0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x41, 0x73, 0x70,
		0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x24, 0x31, 0x41, 0x63, 0x74, 0x65, 0x63, 0x6b, 0x41, 0x54, 0x37, 0x32, 0x33, 0x43,
		0x41, 0x69, 0x6b, 0x75, 0x6e, 0x20, 0x41, 0x54, 0x37, 0x32, 0x33, 0x43, 0x42, 0x4c, 0x45, 0x43,
		0x4b, 0x42, 0x6c, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x72, 0x6f, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x33, 0x47, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x41,
		0x44, 0x56, 0x41, 0x4e, 0x20, 0x4d, 0x34, 0x4d, 0x34, 0x41, 0x44, 0x56, 0x41, 0x4e, 0x20, 0x53,
		0x34, 0x30, 0x53, 0x34, 0x30, 0x69, 0x37, 0x55, 0x49, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x69,
		0x37, 0x55, 0x53, 0x35, 0x45, 0x20, 0x4e, 0x58, 0x54, 0x49, 0x24, 0x31, 0x69, 0x34, 0x55, 0x49,
		0x34, 0x55, 0x4e, 0x41, 0x53, 0x41, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x41, 0x53, 0x41, 0x47,
		0x35, 0x47, 0x35, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x53, 0x35, 0x30, 0x20, 0x34, 0x47, 0x47,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x31, 0x43, 0x20, 0x33,
		0x47, 0x45, 0x31, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6b, 0x65, 0x74, 0x73, 0x61, 0x20, 0x32,
		0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x54, 0x52, 0x37, 0x39,
		0x38, 0x39, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x53, 0x50, 0x24, 0x31, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x20, 0x50, 0x52, 0x24, 0x31, 0x48, 0x6f, 0x6c, 0x6c, 0x6f, 0x67, 0x72,
		0x61, 0x6d, 0x20, 0x48, 0x4c, 0x24, 0x31, 0x48, 0x6f, 0x6c, 0x6c, 0x6f, 0x67, 0x72, 0x61, 0x6d,
		0x20, 0x24, 0x31, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x41, 0x69, 0x72,
		0x41, 0x66, 0x72, 0x69, 0x4f, 0x6e, 0x65, 0x70, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x43, 0x79,
		0x67, 0x6e, 0x75, 0x73, 0x20, 0x58, 0x43, 0x79, 0x67, 0x6e, 0x75, 0x73, 0x47, 0x72, 0x61, 0x76,
		0x69, 0x74, 0x79, 0x20, 0x5a, 0x32, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x69, 0x6e, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x41,
		0x58, 0x31, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x41, 0x58,
		0x31, 0x20, 0x33, 0x47, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x53, 0x77, 0x6f, 0x72,
		0x64, 0x4e, 0x4f, 0x56, 0x4f, 0x31, 0x30, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x76,
		0x6f, 0x20, 0x31, 0x30, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x41, 0x58, 0x31, 0x30, 0x50, 0x52,
		0x4f, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x41, 0x58, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x75,
		0x6d, 0x79, 0x5f, 0x33, 0x47, 0x5f, 0x41, 0x58, 0x33, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x41, 0x58,
		0x33, 0x20, 0x53, 0x77, 0x6f, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x79, 0x33, 0x47, 0x54, 0x61, 0x6c,
		0x6f, 0x73, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x54, 0x61, 0x6c, 0x6f, 0x73, 0x4e,
		0x75, 0x6d, 0x79, 0x5f, 0x33, 0x47, 0x5f, 0x42, 0x57, 0x31, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33,
		0x47, 0x20, 0x54, 0x61, 0x6c, 0x6f, 0x73, 0x20, 0x32, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47,
		0x20, 0x41, 0x58, 0x39, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x41, 0x58, 0x31, 0x30,
		0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x49, 0x49, 0x20, 0x33, 0x47, 0x4e, 0x75, 0x6d, 0x79,
		0x20, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x2d, 0x49, 0x49, 0x52, 0x61, 0x69, 0x6e, 0x62,
		0x6f, 0x77, 0x20, 0x33, 0x47, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f,
		0x77, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x2d, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37,
		0x20, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x20, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x6f, 0x37, 0x46,
		0x69, 0x72, 0x65, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20, 0x46, 0x69, 0x72, 0x65, 0x4e, 0x6f,
		0x76, 0x6f, 0x20, 0x37, 0x20, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37,
		0x20, 0x45, 0x6c, 0x66, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x24,
		0x31, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x41, 0x69, 0x72, 0x69, 0x73,
		0x54, 0x4d, 0x35, 0x30, 0x51, 0x5a, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x41, 0x44, 0x20, 0x38,
		0x33, 0x47, 0x41, 0x69, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x69, 0x72, 0x70, 0x68, 0x61, 0x48,
		0x61, 0x6c, 0x6f, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x69, 0x72, 0x74, 0x65, 0x6c, 0x41,
		0x69, 0x72, 0x70, 0x61, 0x64, 0x20, 0x37, 0x2d, 0x73, 0x41, 0x69, 0x72, 0x50, 0x61, 0x64, 0x20,
		0x37, 0x53, 0x41, 0x69, 0x75, 0x74, 0x6f, 0x41, 0x69, 0x77, 0x61, 0x41, 0x57, 0x37, 0x39, 0x30,
		0x5a, 0x39, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x5a, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x57,
		0x35, 0x30, 0x30, 0x41, 0x57, 0x4d, 0x24, 0x31, 0x4d, 0x33, 0x30, 0x30, 0x41, 0x6b, 0x61, 0x69,
		0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x41, 0x4b, 0x54, 0x42, 0x2d, 0x37, 0x30, 0x33, 0x4d, 0x5a,
		0x69, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x58, 0x24, 0x31, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x69,
		0x4c, 0x69, 0x6b, 0x65, 0x20, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x6c, 0x69, 0x6d,
		0x58, 0x35, 0x5f, 0x50, 0x52, 0x4f, 0x69, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x58, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x20, 0x24, 0x31, 0x45, 0x63, 0x6f, 0x20, 0x45, 0x32,
		0x53, 0x69, 0x32, 0x31, 0x35, 0x37, 0x4c, 0x47, 0x33, 0x32, 0x41, 0x6c, 0x62, 0x61, 0x41, 0x6c,
		0x62, 0x61, 0x20, 0x35, 0x37, 0x35, 0x2e, 0x37, 0x31, 0x30, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45,
		0x54, 0x31, 0x30, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x41, 0x6c, 0x63, 0x61, 0x74, 0x65,
		0x6c, 0x34, 0x30, 0x38, 0x37, 0x55, 0x31, 0x53, 0x45, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x53, 0x74, 0x61,
		0x72, 0x36, 0x30, 0x34, 0x34, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x55, 0x70, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x43, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x43, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x32, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x32, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x35, 0x30, 0x33, 0x36, 0x44, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x35, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x43, 0x37, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x43, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x44, 0x31, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x44, 0x33, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x44, 0x35, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x34,
		0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32,
		0x20, 0x34, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x2e, 0x35, 0x22,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20,
		0x34, 0x2e, 0x35, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x35, 0x22, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x35,
		0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x20, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x35,
		0x30, 0x31, 0x35, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f,
		0x70, 0x20, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x35, 0x30, 0x35, 0x31, 0x44,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x2b, 0x37, 0x30, 0x37, 0x30, 0x58, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x36, 0x22, 0x35,
		0x30, 0x35, 0x37, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f,
		0x70, 0x20, 0x4d, 0x69, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x53, 0x33, 0x37, 0x30, 0x34, 0x35, 0x59, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x53, 0x37, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x35, 0x30, 0x34,
		0x32, 0x54, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x41, 0x73, 0x74, 0x72,
		0x6f, 0x49, 0x64, 0x6f, 0x6c, 0x58, 0x20, 0x36, 0x30, 0x34, 0x30, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x58, 0x35, 0x30, 0x32, 0x37, 0x42,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x44, 0x61, 0x77, 0x6e, 0x41, 0x37,
		0x20, 0x58, 0x4c, 0x31, 0x42, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x31, 0x42, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x32, 0x29, 0x4f, 0x6e, 0x79, 0x78, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x34, 0x30,
		0x33, 0x34, 0x54, 0x31, 0x45, 0x35, 0x30, 0x30, 0x32, 0x46, 0x31, 0x41, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x30, 0x29, 0x34, 0x30, 0x36, 0x33, 0x46, 0x31, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x34,
		0x30, 0x36, 0x35, 0x46, 0x31, 0x4c, 0x20, 0x50, 0x72, 0x6f, 0x33, 0x4c, 0x41, 0x35, 0x37, 0x36,
		0x43, 0x43, 0x4b, 0x6f, 0x72, 0x61, 0x20, 0x41, 0x35, 0x37, 0x36, 0x43, 0x43, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x20, 0x32, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x20,
		0x34, 0x35, 0x30, 0x35, 0x34, 0x4e, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x20, 0x58, 0x4c, 0x36, 0x30, 0x34, 0x32, 0x44, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x20, 0x6d, 0x69,
		0x6e, 0x69, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c,
		0x20, 0x32, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32,
		0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x33, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x34, 0x36, 0x30, 0x37,
		0x30, 0x4b, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c,
		0x20, 0x34, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f,
		0x6c, 0x20, 0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f,
		0x6c, 0x20, 0x35, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64,
		0x6f, 0x6c, 0x20, 0x58, 0x2b, 0x38, 0x30, 0x33, 0x30, 0x59, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x37, 0x30, 0x35, 0x35, 0x41, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x43,
		0x37, 0x30, 0x35, 0x33, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x58,
		0x31, 0x35, 0x30, 0x36, 0x35, 0x4e, 0x54, 0x52, 0x55, 0x41, 0x35, 0x37, 0x34, 0x42, 0x4c, 0x52,
		0x61, 0x76, 0x65, 0x6e, 0x41, 0x35, 0x37, 0x37, 0x56, 0x4c, 0x5a, 0x69, 0x70, 0x41, 0x34, 0x36,
		0x36, 0x42, 0x47, 0x50, 0x69, 0x78, 0x69, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x65, 0x35, 0x30, 0x35,
		0x36, 0x49, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x4f, 0x70, 0x74, 0x75,
		0x73, 0x20, 0x58, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x41, 0x35, 0x37, 0x30, 0x42, 0x4c, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x41, 0x76,
		0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x35, 0x37, 0x31, 0x56, 0x4c, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x41, 0x76, 0x69, 0x6f,
		0x6e, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x46, 0x69, 0x72, 0x73, 0x74, 0x41, 0x34, 0x36, 0x34,
		0x42, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x47, 0x6c, 0x69, 0x74, 0x7a, 0x41, 0x36, 0x32, 0x31, 0x42, 0x4c, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x47, 0x6c, 0x6f, 0x72, 0x79,
		0x34, 0x30, 0x31, 0x34, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x33, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x33, 0x2e, 0x35, 0x22, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x34, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x34, 0x2e, 0x35, 0x22,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33,
		0x20, 0x34, 0x2e, 0x35, 0x22, 0x20, 0x34, 0x47, 0x39, 0x30, 0x30, 0x32, 0x58, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x37, 0x22,
		0x39, 0x30, 0x30, 0x37, 0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x37, 0x22, 0x20, 0x34, 0x47, 0x31, 0x54, 0x31, 0x54, 0x20,
		0x31, 0x30, 0x31, 0x54, 0x20, 0x31, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x31, 0x54, 0x20,
		0x31, 0x30, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x45, 0x4b, 0x45, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20,
		0x33, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x39, 0x30, 0x30, 0x39, 0x41, 0x31, 0x54,
		0x20, 0x37, 0x39, 0x33, 0x30, 0x39, 0x58, 0x31, 0x54, 0x20, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x31, 0x54, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x39, 0x30, 0x32, 0x32, 0x58, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20,
		0x38, 0x22, 0x39, 0x30, 0x31, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x31, 0x30, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x33, 0x2e, 0x35, 0x22,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34,
		0x20, 0x34, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78,
		0x69, 0x20, 0x34, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78,
		0x69, 0x20, 0x34, 0x20, 0x35, 0x22, 0x20, 0x33, 0x47, 0x35, 0x30, 0x34, 0x31, 0x44, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x35,
		0x2e, 0x30, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78,
		0x69, 0x20, 0x34, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x20, 0x33, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x35, 0x22, 0x20, 0x34,
		0x47, 0x35, 0x30, 0x39, 0x38, 0x4f, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x69, 0x78, 0x69, 0x20, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x41, 0x35, 0x30, 0x31,
		0x44, 0x4c, 0x41, 0x35, 0x30, 0x33, 0x44, 0x4c, 0x41, 0x31, 0x58, 0x41, 0x78, 0x65, 0x6c, 0x41,
		0x33, 0x41, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x33, 0x20, 0x58, 0x4c, 0x39, 0x32, 0x30,
		0x33, 0x41, 0x41, 0x33, 0x20, 0x37, 0x22, 0x20, 0x33, 0x47, 0x33, 0x54, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x39, 0x30, 0x32, 0x36, 0x58, 0x41, 0x33, 0x20, 0x31, 0x30, 0x22, 0x41, 0x35, 0x41, 0x35,
		0x20, 0x4c, 0x45, 0x44, 0x35, 0x30, 0x38, 0x35, 0x4e, 0x41, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x4c, 0x45, 0x44, 0x41, 0x37, 0x41, 0x33, 0x30, 0x35, 0x30, 0x34, 0x39, 0x53, 0x41, 0x33, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x35, 0x30, 0x34, 0x39, 0x5a, 0x41, 0x33, 0x30, 0x20, 0x46, 0x69,
		0x65, 0x72, 0x63, 0x65, 0x41, 0x35, 0x30, 0x33, 0x58, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x35, 0x30, 0x34, 0x39, 0x57, 0x52, 0x65, 0x76, 0x76, 0x6c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x36, 0x22, 0x20, 0x33, 0x47,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34,
		0x20, 0x36, 0x22, 0x20, 0x33, 0x47, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20,
		0x36, 0x22, 0x20, 0x34, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x37, 0x22, 0x20, 0x33, 0x47, 0x38, 0x30, 0x36, 0x33, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20,
		0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x39, 0x30, 0x32, 0x34, 0x4f, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x35, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x37, 0x49, 0x32, 0x31, 0x33,
		0x39, 0x30, 0x30, 0x35, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x38, 0x50, 0x33, 0x32, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x38, 0x50, 0x33, 0x31, 0x30, 0x58, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x37, 0x50, 0x33, 0x33,
		0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x4f, 0x50, 0x20,
		0x37, 0x53, 0x39, 0x30, 0x32, 0x30, 0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x54, 0x72, 0x65, 0x6b, 0x20, 0x48, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x47, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x57, 0x61, 0x76, 0x65, 0x41, 0x4c, 0x43,
		0x41, 0x54, 0x45, 0x4c, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x5f, 0x37,
		0x36, 0x38, 0x54, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x54, 0x72, 0x69, 0x62, 0x65, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f,
		0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x35, 0x38, 0x35, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x35, 0x38, 0x35, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45,
		0x4c, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x5f, 0x38, 0x33, 0x38, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x33, 0x38, 0x41, 0x4c, 0x43, 0x41,
		0x54, 0x45, 0x4c, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x38, 0x31,
		0x33, 0x64, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x31, 0x33, 0x44,
		0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x63,
		0x68, 0x5f, 0x38, 0x31, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38,
		0x31, 0x33, 0x4f, 0x54, 0x38, 0x37, 0x31, 0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x38, 0x37, 0x31, 0x41, 0x50, 0x33, 0x36, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x31, 0x30, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x24, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x24, 0x31, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x49, 0x4d, 0x58,
		0x4c, 0x54, 0x49, 0x4d, 0x20, 0x58, 0x4c, 0x35, 0x30, 0x38, 0x35, 0x43, 0x50, 0x75, 0x6c, 0x73,
		0x65, 0x4d, 0x69, 0x78, 0x55, 0x33, 0x55, 0x35, 0x55, 0x35, 0x20, 0x33, 0x47, 0x55, 0x35, 0x20,
		0x48, 0x44, 0x34, 0x30, 0x34, 0x37, 0x47, 0x55, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x34, 0x30,
		0x34, 0x37, 0x41, 0x55, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x20,
		0x46, 0x6c, 0x69, 0x70, 0x34, 0x30, 0x34, 0x34, 0x4f, 0x43, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61,
		0x72, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x32, 0x47, 0x6f, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x55,
		0x35, 0x30, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x31, 0x31, 0x43, 0x31, 0x58, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x31, 0x56, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x31, 0x56, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x31,
		0x43, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x33, 0x43, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x31, 0x53, 0x31, 0x53, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x35, 0x30, 0x33, 0x30,
		0x45, 0x31, 0x53, 0x50, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x31, 0x53, 0x45, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x31, 0x56, 0x31, 0x58, 0x35, 0x30, 0x35, 0x39, 0x53, 0x41, 0x76,
		0x61, 0x6c, 0x6f, 0x6e, 0x20, 0x56, 0x35, 0x56, 0x33, 0x35, 0x30, 0x32, 0x39, 0x45, 0x33, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x33, 0x4c, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x33,
		0x56, 0x33, 0x43, 0x36, 0x30, 0x32, 0x37, 0x41, 0x33, 0x48, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x33,
		0x58, 0x33, 0x58, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x35, 0x36, 0x30, 0x36, 0x32, 0x57,
		0x37, 0x33, 0x54, 0x20, 0x31, 0x30, 0x22, 0x33, 0x54, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4a,
		0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x4a, 0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x41,
		0x6c, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x20, 0x55, 0x50, 0x42, 0x69, 0x67, 0x20, 0x45, 0x61, 0x73,
		0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x35, 0x30, 0x34, 0x31, 0x43, 0x54, 0x45, 0x54, 0x52, 0x41,
		0x41, 0x6c, 0x63, 0x6f, 0x72, 0x41, 0x6c, 0x66, 0x61, 0x77, 0x69, 0x73, 0x65, 0x5a, 0x32, 0x38,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x43,
		0x61, 0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x53, 0x31, 0x5f, 0x58, 0x53,
		0x31, 0x20, 0x58, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x53, 0x31, 0x53, 0x31, 0x41,
		0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52, 0x49, 0x4f, 0x5f, 0x53, 0x52, 0x69, 0x6f, 0x20,
		0x53, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52, 0x49, 0x4f, 0x5f, 0x50, 0x52, 0x4f,
		0x52, 0x69, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52,
		0x49, 0x4f, 0x52, 0x69, 0x6f, 0x48, 0x65, 0x61, 0x74, 0x20, 0x24, 0x31, 0x52, 0x69, 0x6f, 0x20,
		0x58, 0x48, 0x6f, 0x74, 0x20, 0x24, 0x31, 0x41, 0x6c, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x62, 0x65,
		0x53, 0x6d, 0x69, 0x6c, 0x65, 0x20, 0x58, 0x4d, 0x35, 0x58, 0x53, 0x6b, 0x50, 0x61, 0x64, 0x4d,
		0x35, 0x53, 0x4d, 0x35, 0x4d, 0x35, 0x58, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x33, 0x55,
		0x36, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38,
		0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x69,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x6c, 0x61, 0x79,
		0x20, 0x24, 0x31, 0x58, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77,
		0x41, 0x34, 0x59, 0x6f, 0x75, 0x41, 0x34, 0x20, 0x59, 0x6f, 0x75, 0x41, 0x58, 0x32, 0x5f, 0x46,
		0x72, 0x65, 0x6e, 0x7a, 0x79, 0x41, 0x58, 0x32, 0x20, 0x46, 0x72, 0x65, 0x6e, 0x7a, 0x79, 0x41,
		0x58, 0x35, 0x4e, 0x61, 0x6e, 0x6f, 0x51, 0x41, 0x58, 0x35, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20,
		0x51, 0x43, 0x36, 0x5f, 0x44, 0x75, 0x6f, 0x43, 0x36, 0x20, 0x44, 0x75, 0x6f, 0x45, 0x24, 0x31,
		0x20, 0x4c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x45, 0x24, 0x31, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x45,
		0x33, 0x5f, 0x53, 0x69, 0x67, 0x6e, 0x45, 0x33, 0x20, 0x53, 0x69, 0x67, 0x6e, 0x45, 0x34, 0x5f,
		0x4c, 0x69, 0x74, 0x65, 0x45, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x39, 0x5f, 0x43, 0x6f,
		0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d, 0x39, 0x20, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50,
		0x34, 0x33, 0x5f, 0x45, 0x61, 0x73, 0x79, 0x50, 0x34, 0x33, 0x20, 0x45, 0x61, 0x73, 0x79, 0x50,
		0x24, 0x31, 0x20, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x50, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x50, 0x36, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x36, 0x5f, 0x51, 0x6d, 0x61, 0x78, 0x50, 0x36, 0x20, 0x51, 0x6d, 0x61, 0x78, 0x50, 0x24, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x50, 0x34, 0x5f, 0x51, 0x75, 0x61, 0x64, 0x50, 0x34, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x50, 0x39, 0x5f, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x4c, 0x69, 0x74, 0x65,
		0x5f, 0x32, 0x30, 0x31, 0x37, 0x50, 0x39, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x50, 0x39, 0x5f, 0x45, 0x6e, 0x65,
		0x72, 0x67, 0x79, 0x5f, 0x53, 0x50, 0x39, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x53,
		0x50, 0x24, 0x31, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50,
		0x38, 0x5f, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x38, 0x20, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x24, 0x31, 0x20, 0x45, 0x6e, 0x65,
		0x72, 0x67, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x24, 0x31, 0x20, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x50, 0x37, 0x5f, 0x53, 0x65, 0x6f, 0x6e, 0x50, 0x37, 0x20, 0x53, 0x65, 0x6f, 0x6e,
		0x50, 0x37, 0x5f, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x50, 0x37, 0x20, 0x58, 0x74, 0x72, 0x65,
		0x6d, 0x65, 0x50, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x50, 0x31, 0x30, 0x5f, 0x4c, 0x69,
		0x66, 0x65, 0x50, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x50, 0x31, 0x30, 0x5f, 0x4d, 0x61,
		0x78, 0x50, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x31, 0x30, 0x5f, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x50, 0x31, 0x30, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x56, 0x24, 0x31, 0x20, 0x56, 0x69,
		0x70, 0x65, 0x72, 0x20, 0x49, 0x20, 0x34, 0x47, 0x56, 0x31, 0x5f, 0x56, 0x69, 0x70, 0x65, 0x72,
		0x5f, 0x49, 0x56, 0x31, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x49, 0x56, 0x34, 0x5f, 0x56,
		0x69, 0x70, 0x65, 0x72, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x34, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72,
		0x20, 0x50, 0x72, 0x6f, 0x56, 0x24, 0x31, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x56, 0x32, 0x5f,
		0x56, 0x69, 0x70, 0x65, 0x72, 0x5f, 0x58, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x56, 0x32, 0x20, 0x56,
		0x69, 0x70, 0x65, 0x72, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x32, 0x20, 0x56, 0x69,
		0x70, 0x65, 0x72, 0x20, 0x24, 0x31, 0x58, 0x34, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x58, 0x37, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x58,
		0x37, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x38, 0x5f, 0x53,
		0x6f, 0x75, 0x6c, 0x5f, 0x50, 0x72, 0x6f, 0x58, 0x38, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x50,
		0x72, 0x6f, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d,
		0x65, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
		0x79, 0x20, 0x24, 0x31, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75,
		0x6c, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x53, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x58, 0x33, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x58, 0x33, 0x20,
		0x53, 0x6f, 0x75, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75,
		0x6c, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x32, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x53, 0x74, 0x79,
		0x6c, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x32, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x53,
		0x74, 0x79, 0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75,
		0x6c, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x58,
		0x32, 0x5f, 0x54, 0x77, 0x69, 0x6e, 0x58, 0x32, 0x20, 0x54, 0x77, 0x69, 0x6e, 0x41, 0x35, 0x20,
		0x45, 0x61, 0x73, 0x79, 0x41, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x35, 0x20, 0x52,
		0x65, 0x61, 0x64, 0x79, 0x41, 0x35, 0x53, 0x6d, 0x69, 0x6c, 0x65, 0x79, 0x41, 0x35, 0x20, 0x53,
		0x6d, 0x69, 0x6c, 0x65, 0x79, 0x41, 0x35, 0x5f, 0x51, 0x75, 0x61, 0x64, 0x5f, 0x50, 0x6c, 0x75,
		0x73, 0x5f, 0x54, 0x4d, 0x41, 0x35, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x41, 0x35, 0x5f, 0x51, 0x75, 0x61, 0x64, 0x41, 0x35, 0x20, 0x51, 0x75, 0x61, 0x64, 0x41, 0x36,
		0x5f, 0x44, 0x75, 0x6f, 0x41, 0x36, 0x20, 0x44, 0x75, 0x6f, 0x41, 0x31, 0x30, 0x5f, 0x4c, 0x69,
		0x74, 0x65, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x41, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x32,
		0x47, 0x42, 0x41, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x31, 0x30, 0x5f, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x31, 0x30, 0x5f, 0x4d, 0x61,
		0x78, 0x41, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x20, 0x53,
		0x41, 0x4c, 0x4c, 0x56, 0x49, 0x45, 0x57, 0x20, 0x50, 0x34, 0x69, 0x41, 0x6c, 0x6c, 0x44, 0x72,
		0x6f, 0x20, 0x50, 0x34, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x50, 0x32, 0x41, 0x6c,
		0x6c, 0x44, 0x72, 0x6f, 0x56, 0x69, 0x76, 0x61, 0x20, 0x24, 0x31, 0x56, 0x69, 0x76, 0x61, 0x5f,
		0x48, 0x6f, 0x6d, 0x65, 0x56, 0x69, 0x76, 0x61, 0x20, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x6c, 0x6c,
		0x76, 0x69, 0x65, 0x77, 0x43, 0x69, 0x74, 0x79, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x69, 0x74, 0x79,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x43, 0x69, 0x74, 0x79,
		0x43, 0x69, 0x74, 0x79, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x41, 0x58, 0x32, 0x46, 0x72,
		0x65, 0x6e, 0x7a, 0x79, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x32, 0x53, 0x70, 0x65, 0x65,
		0x64, 0x44, 0x75, 0x6f, 0x41, 0x6c, 0x6c, 0x64, 0x72, 0x6f, 0x20, 0x32, 0x20, 0x53, 0x70, 0x65,
		0x65, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x33, 0x53, 0x70,
		0x65, 0x65, 0x64, 0x51, 0x75, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x64, 0x72, 0x6f, 0x20, 0x33, 0x20,
		0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x51, 0x75, 0x61, 0x64, 0x56, 0x69, 0x76, 0x61, 0x20, 0x48,
		0x31, 0x30, 0x30, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x48,
		0x31, 0x30, 0x30, 0x33, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x69, 0x76, 0x61,
		0x20, 0x48, 0x31, 0x30, 0x30, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69,
		0x76, 0x61, 0x5f, 0x31, 0x30, 0x30, 0x33, 0x47, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x76,
		0x61, 0x20, 0x31, 0x30, 0x30, 0x33, 0x47, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x31, 0x30, 0x30,
		0x34, 0x5f, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x76, 0x61, 0x20, 0x48, 0x31, 0x30, 0x30, 0x34, 0x20,
		0x4c, 0x54, 0x45, 0x56, 0x69, 0x76, 0x61, 0x20, 0x48, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x53,
		0x70, 0x65, 0x65, 0x64, 0x20, 0x49, 0x53, 0x70, 0x65, 0x65, 0x64, 0x41, 0x4c, 0x4c, 0x56, 0x49,
		0x45, 0x57, 0x53, 0x50, 0x45, 0x45, 0x44, 0x41, 0x58, 0x34, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x58, 0x34, 0x4e, 0x61, 0x6e, 0x6f, 0x41, 0x58, 0x34, 0x20, 0x4e,
		0x61, 0x6e, 0x6f, 0x41, 0x4c, 0x4c, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x54, 0x58, 0x31, 0x5f, 0x51,
		0x75, 0x61, 0x73, 0x61, 0x72, 0x54, 0x58, 0x31, 0x20, 0x51, 0x75, 0x61, 0x73, 0x61, 0x72, 0x41,
		0x58, 0x24, 0x31, 0x41, 0x6c, 0x6c, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x51, 0x55, 0x41, 0x44,
		0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x41, 0x36, 0x34, 0x20, 0x70, 0x33, 0x41, 0x36, 0x34, 0x20,
		0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x70, 0x33, 0x51, 0x55, 0x41, 0x44,
		0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x41, 0x33, 0x33, 0x20, 0x79, 0x33, 0x41, 0x33, 0x33, 0x20,
		0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x79, 0x33, 0x5a, 0x59, 0x2d, 0x30,
		0x37, 0x42, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4f, 0x63, 0x74, 0x61, 0x2d, 0x54, 0x38, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x20, 0x54, 0x38, 0x51, 0x55, 0x41, 0x44, 0x2d,
		0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x4b, 0x32, 0x30, 0x30, 0x31, 0x6f, 0x51, 0x55,
		0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x4b, 0x32, 0x30, 0x30, 0x31,
		0x4f, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x4b, 0x24,
		0x31, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x50, 0x24,
		0x31, 0x4f, 0x43, 0x54, 0x41, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x38, 0x4f, 0x43, 0x54,
		0x4f, 0x50, 0x55, 0x53, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x38, 0x51, 0x75, 0x61, 0x64,
		0x43, 0x6f, 0x72, 0x65, 0x2d, 0x52, 0x31, 0x36, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52,
		0x45, 0x20, 0x52, 0x31, 0x36, 0x41, 0x6c, 0x70, 0x73, 0x41, 0x6c, 0x74, 0x69, 0x63, 0x65, 0x41,
		0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x41, 0x46, 0x54, 0x41, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56,
		0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x31, 0x29, 0x41, 0x46, 0x54,
		0x52, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x28, 0x47,
		0x65, 0x6e, 0x20, 0x32, 0x29, 0x41, 0x46, 0x54, 0x4e, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56,
		0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x41, 0x46, 0x54, 0x54, 0x49, 0x34, 0x33, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x2d, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x41, 0x46, 0x54, 0x42, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54,
		0x56, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x31, 0x29, 0x41, 0x46, 0x54, 0x53, 0x53, 0x53, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x28, 0x47, 0x65,
		0x6e, 0x20, 0x33, 0x29, 0x41, 0x46, 0x54, 0x53, 0x53, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56,
		0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x47, 0x65, 0x6e,
		0x20, 0x31, 0x29, 0x41, 0x46, 0x54, 0x54, 0x49, 0x46, 0x46, 0x34, 0x33, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x54, 0x56, 0x20, 0x4f, 0x6d, 0x6e, 0x69, 0x20, 0x51, 0x4c, 0x45, 0x44, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x32, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63,
		0x6b, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34,
		0x4b, 0x41, 0x46, 0x54, 0x4b, 0x41, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74,
		0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x69, 0x72, 0x65, 0x20, 0x37,
		0x22, 0x46, 0x69, 0x72, 0x65, 0x20, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4b,
		0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x4b, 0x69, 0x6e,
		0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x2e, 0x39, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x20, 0x38, 0x2e, 0x39, 0x22, 0x20, 0x34, 0x47, 0x4b, 0x69, 0x6e, 0x64, 0x6c,
		0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58,
		0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x37, 0x22, 0x20, 0x34, 0x47, 0x4b, 0x69, 0x6e,
		0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39, 0x22, 0x20, 0x34, 0x47, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x48, 0x44, 0x20, 0x36, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x37, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x37, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x20, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58,
		0x20, 0x38, 0x2e, 0x39, 0x20, 0x34, 0x47, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31,
		0x30, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x37, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x44, 0x34, 0x39, 0x33, 0x30,
		0x55, 0x52, 0x46, 0x69, 0x72, 0x65, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4b, 0x69, 0x6e, 0x64,
		0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x45, 0x63, 0x68, 0x6f, 0x45, 0x63,
		0x68, 0x6f, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x38, 0x41, 0x6c, 0x65, 0x78, 0x61, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x78, 0x61, 0x41, 0x6d,
		0x69, 0x67, 0x6f, 0x6f, 0x41, 0x6d, 0x69, 0x6e, 0x6f, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x37, 0x78,
		0x41, 0x6d, 0x69, 0x67, 0x6f, 0x20, 0x37, 0x78, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x37, 0x41, 0x6d,
		0x69, 0x67, 0x6f, 0x20, 0x37, 0x41, 0x6d, 0x6f, 0x69, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x50, 0x37, 0x41, 0x38, 0x36, 0x32, 0x57, 0x43, 0x4c, 0x45, 0x56, 0x45,
		0x52, 0x20, 0x4a, 0x4f, 0x59, 0x20, 0x53, 0x34, 0x30, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20,
		0x4a, 0x6f, 0x79, 0x20, 0x53, 0x34, 0x30, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20, 0x24, 0x31,
		0x41, 0x6e, 0x64, 0x6f, 0x77, 0x6c, 0x41, 0x6e, 0x67, 0x65, 0x6c, 0x63, 0x61, 0x72, 0x65, 0x46,
		0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6e, 0x6b, 0x65, 0x72, 0x4e, 0x65, 0x62, 0x75, 0x6c,
		0x61, 0x20, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x62, 0x61, 0x72, 0x41, 0x6e, 0x72, 0x79, 0x41, 0x6f,
		0x63, 0x6f, 0x73, 0x41, 0x6f, 0x72, 0x6f, 0x41, 0x6f, 0x73, 0x6f, 0x6e, 0x52, 0x31, 0x30, 0x24,
		0x31, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x53, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x53, 0x37, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x6f, 0x64,
		0x41, 0x69, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x31, 0x2c, 0x31, 0x77,
		0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x38, 0x6d,
		0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x31, 0x2c, 0x32, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34,
		0x32, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x32, 0x2c, 0x36, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x31, 0x20, 0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x32, 0x2c, 0x37, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69,
		0x65, 0x73, 0x20, 0x31, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x32, 0x2c,
		0x33, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x32, 0x20,
		0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x32, 0x2c, 0x34, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x32, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57,
		0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x33, 0x20, 0x33, 0x38,
		0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x33,
		0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x45, 0x20, 0x34, 0x30,
		0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x45, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x57,
		0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x45, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x20,
		0x34, 0x30, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x45, 0x20, 0x28, 0x47, 0x65,
		0x6e, 0x20, 0x32, 0x29, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53,
		0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x38, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x38, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x57,
		0x61, 0x74, 0x63, 0x68, 0x36, 0x2c, 0x31, 0x38, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x57, 0x61, 0x74, 0x63, 0x68, 0x37, 0x2c, 0x35, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x32, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65,
		0x72, 0x69, 0x65, 0x73, 0x20, 0x24, 0x31, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x24, 0x31, 0x20, 0x34, 0x34, 0x6d, 0x6d,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x37, 0x20, 0x34,
		0x31, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20,
		0x37, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69,
		0x65, 0x73, 0x20, 0x39, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53,
		0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x39, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d,
		0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x32, 0x30, 0x31, 0x32, 0x29, 0x69, 0x4d, 0x61, 0x63,
		0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x31, 0x37, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x34, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x36, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29,
		0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20,
		0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x30, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x31, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x32, 0x2d, 0x32, 0x30, 0x31, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20,
		0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32,
		0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20,
		0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32,
		0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x34, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20,
		0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32,
		0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20,
		0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32,
		0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31,
		0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32,
		0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x34,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x2d, 0x32,
		0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x32, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61,
		0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x32, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69,
		0x72, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61,
		0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69,
		0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x33, 0x2d, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41,
		0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31,
		0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x2d, 0x32, 0x30,
		0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x2d, 0x32, 0x30, 0x31,
		0x33, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x2d, 0x32, 0x30, 0x31, 0x33, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30,
		0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x2d, 0x32, 0x30, 0x31,
		0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x2d, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x36, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x36, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29,
		0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d,
		0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61,
		0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x61,
		0x63, 0x69, 0x6e, 0x74, 0x6f, 0x73, 0x68, 0x20, 0x47, 0x35, 0x20, 0x28, 0x32, 0x30, 0x30, 0x33,
		0x29, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x63, 0x69, 0x6e, 0x74, 0x6f, 0x73, 0x68,
		0x20, 0x47, 0x35, 0x20, 0x28, 0x32, 0x30, 0x30, 0x34, 0x2d, 0x32, 0x30, 0x30, 0x35, 0x29, 0x69,
		0x4d, 0x61, 0x63, 0x20, 0x47, 0x35, 0x20, 0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x4d, 0x61, 0x63,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x47, 0x34, 0x20, 0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x34, 0x20, 0x28, 0x32, 0x30, 0x30,
		0x35, 0x29, 0x69, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x34, 0x20, 0x28, 0x32, 0x30, 0x30, 0x35,
		0x29, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x47,
		0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x34, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x35, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x43, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x35, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x36, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36,
		0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x45, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x37, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x38, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x38, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x58, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x53, 0x20, 0x4d,
		0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x52, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x31, 0x31, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d,
		0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x45, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x30, 0x29, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x53, 0x45, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x31, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x31, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x34,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31,
		0x34, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x31, 0x35, 0x69, 0x50, 0x61, 0x64, 0x69, 0x50, 0x61, 0x64, 0x20, 0x32,
		0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x33, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x34, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x33, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x39, 0x2e, 0x37, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e,
		0x39, 0x69, 0x50, 0x61, 0x64, 0x20, 0x35, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x32, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x69, 0x50, 0x61, 0x64, 0x20, 0x36, 0x20, 0x39, 0x2e,
		0x37, 0x69, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x20, 0x31, 0x31, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x31, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x34, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x35, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x33, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x39,
		0x20, 0x31, 0x30, 0x2e, 0x32, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x39, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x41, 0x69, 0x72, 0x20, 0x35, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x35, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x34, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x34, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x36, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x36, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54,
		0x56, 0x20, 0x32, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x33, 0x41, 0x70, 0x70,
		0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20,
		0x34, 0x4b, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x24, 0x31, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x61,
		0x72, 0x69, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f,
		0x2c, 0x20, 0x53, 0x74, 0x64, 0x2c, 0x20, 0x45, 0x6c, 0x74, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65,
		0x73, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x74, 0x64, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x53,
		0x65, 0x72, 0x69, 0x65, 0x73, 0x43, 0x4d, 0x50, 0x20, 0x24, 0x31, 0x41, 0x72, 0x63, 0x68, 0x6f,
		0x73, 0x20, 0x35, 0x35, 0x20, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x53, 0x65, 0x6c,
		0x66, 0x69, 0x65, 0x35, 0x35, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x35, 0x30, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20,
		0x34, 0x47, 0x34, 0x30, 0x43, 0x20, 0x54, 0x49, 0x76, 0x32, 0x34, 0x30, 0x63, 0x20, 0x54, 0x69,
		0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x76, 0x32, 0x34, 0x35, 0x42, 0x20, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x69, 0x75, 0x6d, 0x34, 0x35, 0x62, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75,
		0x6d, 0x41, 0x43, 0x34, 0x35, 0x42, 0x48, 0x45, 0x34, 0x35, 0x62, 0x20, 0x48, 0x65, 0x6c, 0x69,
		0x75, 0x6d, 0x34, 0x35, 0x20, 0x4e, 0x65, 0x6f, 0x6e, 0x58, 0x36, 0x37, 0x20, 0x35, 0x47, 0x31,
		0x30, 0x31, 0x42, 0x20, 0x48, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x34, 0x47, 0x54, 0x39, 0x36,
		0x20, 0x57, 0x49, 0x46, 0x49, 0x54, 0x39, 0x36, 0x20, 0x57, 0x69, 0x46, 0x69, 0x35, 0x30, 0x42,
		0x20, 0x48, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x34, 0x47, 0x38, 0x30, 0x20, 0x4f, 0x78, 0x79,
		0x67, 0x65, 0x6e, 0x31, 0x30, 0x31, 0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x20, 0x34, 0x47,
		0x37, 0x30, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x20, 0x33, 0x47, 0x41, 0x72, 0x63, 0x68,
		0x6f, 0x73, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x20, 0x31, 0x30, 0x31, 0x20, 0x33, 0x47,
		0x20, 0x56, 0x32, 0x31, 0x30, 0x31, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x20, 0x33, 0x47,
		0x20, 0x56, 0x32, 0x41, 0x43, 0x31, 0x30, 0x31, 0x50, 0x4c, 0x33, 0x47, 0x56, 0x32, 0x31, 0x30,
		0x31, 0x20, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x33, 0x47, 0x20, 0x56, 0x32,
		0x31, 0x30, 0x31, 0x73, 0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x20, 0x41, 0x72, 0x64, 0x6f,
		0x69, 0x7a, 0x31, 0x30, 0x31, 0x73, 0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x54, 0x24, 0x31,
		0x20, 0x34, 0x47, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x41, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33,
		0x67, 0x20, 0x76, 0x34, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x31, 0x30, 0x31, 0x20, 0x33, 0x47, 0x20,
		0x56, 0x34, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x48, 0x65, 0x6c, 0x6c,
		0x6f, 0x20, 0x37, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x31, 0x30, 0x31, 0x20, 0x58, 0x41, 0x72,
		0x69, 0x61, 0x6e, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x31, 0x30, 0x30, 0x20, 0x53, 0x54, 0x31,
		0x30, 0x30, 0x34, 0x50, 0x47, 0x31, 0x30, 0x30, 0x38, 0x30, 0x20, 0x53, 0x53, 0x38, 0x30, 0x30,
		0x33, 0x50, 0x47, 0x38, 0x30, 0x37, 0x31, 0x20, 0x53, 0x54, 0x37, 0x30, 0x30, 0x32, 0x50, 0x47,
		0x37, 0x31, 0x37, 0x30, 0x20, 0x53, 0x54, 0x37, 0x30, 0x30, 0x31, 0x52, 0x57, 0x37, 0x30, 0x41,
		0x72, 0x6b, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x20, 0x24, 0x31, 0x49, 0x6d, 0x70, 0x75,
		0x6c, 0x73, 0x65, 0x20, 0x50, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x6d, 0x70, 0x75, 0x6c,
		0x73, 0x65, 0x20, 0x24, 0x31, 0x45, 0x64, 0x67, 0x65, 0x20, 0x24, 0x31, 0x49, 0x63, 0x6f, 0x6e,
		0x20, 0x24, 0x31, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x20, 0x24, 0x31, 0x45, 0x6c, 0x66, 0x20,
		0x53, 0x38, 0x55, 0x6b, 0x6f, 0x7a, 0x69, 0x20, 0x55, 0x24, 0x31, 0x48, 0x65, 0x72, 0x63, 0x6c,
		0x73, 0x20, 0x4c, 0x39, 0x32, 0x35, 0x41, 0x72, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x72,
		0x6e, 0x6f, 0x76, 0x61, 0x41, 0x52, 0x43, 0x48, 0x4d, 0x39, 0x30, 0x31, 0x4d, 0x39, 0x30, 0x31,
		0x41, 0x4e, 0x37, 0x43, 0x47, 0x32, 0x37, 0x63, 0x20, 0x47, 0x32, 0x37, 0x20, 0x47, 0x32, 0x41,
		0x4e, 0x37, 0x47, 0x33, 0x37, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x49, 0x47, 0x33, 0x37, 0x69,
		0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x42, 0x47, 0x33, 0x37, 0x62, 0x20, 0x47, 0x33, 0x41, 0x4e,
		0x37, 0x43, 0x47, 0x33, 0x37, 0x63, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x44, 0x47, 0x33, 0x2d,
		0x43, 0x50, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x70, 0x61, 0x64, 0x41, 0x4e, 0x37, 0x44, 0x47, 0x33,
		0x37, 0x64, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x46, 0x47, 0x33, 0x37, 0x66, 0x20, 0x47, 0x33,
		0x41, 0x4e, 0x37, 0x48, 0x47, 0x33, 0x37, 0x68, 0x20, 0x47, 0x33, 0x41, 0x38, 0x30, 0x4b, 0x53,
		0x43, 0x38, 0x41, 0x4e, 0x38, 0x47, 0x32, 0x38, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x38, 0x47, 0x33,
		0x38, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x38, 0x42, 0x47, 0x33, 0x38, 0x62, 0x20, 0x47, 0x33, 0x41,
		0x4e, 0x38, 0x43, 0x47, 0x33, 0x38, 0x63, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x39, 0x47, 0x32, 0x49,
		0x39, 0x69, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x39, 0x47, 0x32, 0x39, 0x20, 0x47, 0x32, 0x41, 0x4e,
		0x39, 0x47, 0x33, 0x39, 0x20, 0x47, 0x33, 0x31, 0x30, 0x20, 0x47, 0x32, 0x41, 0x31, 0x30, 0x31,
		0x42, 0x31, 0x30, 0x31, 0x30, 0x62, 0x20, 0x47, 0x32, 0x31, 0x30, 0x62, 0x20, 0x47, 0x33, 0x41,
		0x4e, 0x31, 0x30, 0x43, 0x47, 0x33, 0x31, 0x30, 0x63, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x31, 0x30,
		0x44, 0x47, 0x33, 0x31, 0x30, 0x64, 0x20, 0x47, 0x33, 0x41, 0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20,
		0x39, 0x30, 0x47, 0x33, 0x39, 0x30, 0x20, 0x47, 0x33, 0x41, 0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20,
		0x39, 0x30, 0x20, 0x47, 0x34, 0x39, 0x30, 0x20, 0x47, 0x34, 0x41, 0x52, 0x4e, 0x4f, 0x56, 0x41,
		0x20, 0x39, 0x37, 0x47, 0x34, 0x39, 0x37, 0x20, 0x47, 0x34, 0x41, 0x52, 0x4e, 0x4f, 0x56, 0x41,
		0x20, 0x31, 0x30, 0x31, 0x20, 0x47, 0x34, 0x31, 0x30, 0x31, 0x20, 0x47, 0x34, 0x41, 0x72, 0x74,
		0x4c, 0x69, 0x6e, 0x65, 0x41, 0x72, 0x74, 0x65, 0x6c, 0x47, 0x61, 0x70, 0x20, 0x59, 0x6f, 0x20,
		0x51, 0x55, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x55, 0x33, 0x20, 0x34, 0x47, 0x55, 0x24, 0x31,
		0x41, 0x6c, 0x6c, 0x6f, 0x4b, 0x6f, 0x6d, 0x69, 0x20, 0x33, 0x51, 0x32, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x51, 0x32, 0x31, 0x41, 0x72, 0x74, 0x69, 0x7a, 0x6c, 0x65, 0x65, 0x41, 0x54, 0x4c, 0x2d,
		0x32, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x39, 0x41, 0x73, 0x61, 0x6e, 0x6f, 0x24, 0x31,
		0x24, 0x32, 0x20, 0x24, 0x31, 0x2e, 0x30, 0x22, 0x41, 0x73, 0x61, 0x6e, 0x7a, 0x6f, 0x53, 0x33,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x73, 0x6b, 0x37, 0x39, 0x31, 0x53, 0x50, 0x20, 0x33, 0x47,
		0x41, 0x73, 0x70, 0x65, 0x72, 0x61, 0x57, 0x72, 0x65, 0x6e, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x32,
		0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x41, 0x73, 0x70, 0x65, 0x72, 0x41, 0x67,
		0x69, 0x6f, 0x43, 0x6c, 0x75, 0x62, 0x41, 0x53, 0x2d, 0x36, 0x30, 0x31, 0x4c, 0x53, 0x65, 0x63,
		0x72, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x20, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x75, 0x72,
		0x66, 0x55, 0x6e, 0x61, 0x6d, 0x69, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x53, 0x68, 0x6f, 0x74, 0x54,
		0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x69, 0x64, 0x52, 0x69,
		0x64, 0x65, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x52, 0x69, 0x74, 0x6d, 0x41, 0x53, 0x2d, 0x35, 0x34,
		0x31, 0x32, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x50, 0x2d, 0x37, 0x32, 0x31, 0x4e, 0x20, 0x46, 0x6f,
		0x72, 0x63, 0x65, 0x41, 0x50, 0x2d, 0x39, 0x34, 0x31, 0x43, 0x65, 0x74, 0x75, 0x73, 0x41, 0x50,
		0x2d, 0x31, 0x30, 0x36, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x41,
		0x73, 0x75, 0x73, 0x58, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x65,
		0x65, 0x20, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x31, 0x37, 0x31, 0x5a, 0x39,
		0x30, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x45, 0x31, 0x37, 0x32, 0x56, 0x4d, 0x65,
		0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46,
		0x48, 0x44, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x48,
		0x44, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x31, 0x30, 0x5a, 0x31, 0x30, 0x31, 0x20, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x5a, 0x31, 0x30, 0x31, 0x58, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20,
		0x4c, 0x54, 0x45, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x4d, 0x65, 0x4d,
		0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4d, 0x45, 0x31, 0x30, 0x33, 0x4b, 0x4d,
		0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x48, 0x44, 0x20, 0x37, 0x4d, 0x65, 0x4d, 0x4f,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38,
		0x2e, 0x39, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x48, 0x44, 0x20, 0x37, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x54, 0x46, 0x37, 0x30, 0x31, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
		0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x31, 0x30, 0x33, 0x43, 0x54,
		0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54,
		0x46, 0x31, 0x30, 0x33, 0x43, 0x47, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65,
		0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x33, 0x30, 0x30, 0x54, 0x54, 0x72, 0x61, 0x6e,
		0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x33, 0x30,
		0x33, 0x4b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x54, 0x72, 0x69, 0x6f, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x20, 0x53, 0x4c,
		0x31, 0x30, 0x31, 0x45, 0x65, 0x65, 0x20, 0x50, 0x61, 0x64, 0x20, 0x53, 0x6c, 0x69, 0x64, 0x65,
		0x72, 0x20, 0x53, 0x4c, 0x31, 0x30, 0x31, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x43, 0x20,
		0x37, 0x2e, 0x30, 0x50, 0x30, 0x30, 0x38, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x5a, 0x65, 0x6e,
		0x50, 0x61, 0x64, 0x20, 0x5a, 0x38, 0x50, 0x30, 0x30, 0x31, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64,
		0x20, 0x5a, 0x31, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x5a, 0x38, 0x73, 0x5a, 0x65,
		0x6e, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x38,
		0x2e, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x53, 0x20, 0x38, 0x2e, 0x30, 0x50, 0x30,
		0x32, 0x37, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x33, 0x53, 0x20, 0x31, 0x30, 0x5a, 0x65,
		0x6e, 0x50, 0x61, 0x64, 0x20, 0x33, 0x53, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x65,
		0x6e, 0x50, 0x61, 0x64, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x41, 0x53, 0x55, 0x53, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x50,
		0x31, 0x38, 0x30, 0x31, 0x2d, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65,
		0x72, 0x20, 0x41, 0x69, 0x4f, 0x20, 0x50, 0x31, 0x38, 0x30, 0x31, 0x20, 0x31, 0x38, 0x2e, 0x34,
		0x22, 0x41, 0x53, 0x55, 0x53, 0x20, 0x54, 0x41, 0x42, 0x20, 0x41, 0x38, 0x54, 0x41, 0x42, 0x20,
		0x41, 0x38, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x36, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x37,
		0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53,
		0x49, 0x4d, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x38, 0x5a, 0x65, 0x6e, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x53, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x64, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x53, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x61,
		0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x54, 0x30, 0x30, 0x38, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x45, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x54, 0x30, 0x30, 0x34, 0x50,
		0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x41, 0x52, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x38, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x46, 0x6c, 0x69, 0x70,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x39, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x56, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x56, 0x20, 0x4c, 0x69, 0x76, 0x65,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x43, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x4d, 0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x4d, 0x32, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x32,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x45, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x69,
		0x76, 0x65, 0x20, 0x4c, 0x31, 0x47, 0x35, 0x35, 0x33, 0x4b, 0x4c, 0x5a, 0x65, 0x6e, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4c, 0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x32, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x34, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x5a, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4d, 0x31, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x32, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x47, 0x6f, 0x20, 0x54, 0x56, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x20,
		0x4c, 0x69, 0x66, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61,
		0x73, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73,
		0x75, 0x73, 0x20, 0x35, 0x30, 0x30, 0x30, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50,
		0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x20, 0x33, 0x53, 0x20,
		0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x4d, 0x61, 0x78,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75,
		0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x44, 0x65, 0x6c, 0x75, 0x78, 0x65, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20,
		0x4c, 0x61, 0x73, 0x65, 0x72, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x34, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x34, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34,
		0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x5a, 0x6f, 0x6f, 0x6d,
		0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x32, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x52,
		0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x36, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36,
		0x44, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x5a, 0x4e, 0x32, 0x32,
		0x30, 0x49, 0x43, 0x5a, 0x65, 0x6e, 0x20, 0x41, 0x69, 0x4f, 0x20, 0x5a, 0x4e, 0x32, 0x32, 0x30,
		0x49, 0x43, 0x54, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x20, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x24, 0x31,
		0x5a, 0x65, 0x6e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x24, 0x31, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
		0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x24, 0x31, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f,
		0x6f, 0x6b, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x24, 0x31, 0x41, 0x74, 0x68, 0x65, 0x73, 0x69,
		0x41, 0x74, 0x6d, 0x61, 0x63, 0x61, 0x20, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x6f, 0x6e, 0x69,
		0x6b, 0x41, 0x54, 0x4d, 0x41, 0x43, 0x41, 0x5f, 0x41, 0x74, 0x6f, 0x6d, 0x41, 0x74, 0x74, 0x69,
		0x6c, 0x61, 0x41, 0x74, 0x76, 0x69, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x76, 0x6f, 0x78, 0x43,
		0x44, 0x4d, 0x2d, 0x24, 0x31, 0x41, 0x75, 0x74, 0x61, 0x6e, 0x41, 0x76, 0x61, 0x79, 0x61, 0x56,
		0x61, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x4b, 0x31, 0x37, 0x35, 0x41, 0x76, 0x65, 0x6e, 0x7a,
		0x6f, 0x4d, 0x6f, 0x62, 0x20, 0x34, 0x20, 0x34, 0x47, 0x4d, 0x6f, 0x62, 0x20, 0x34, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x34, 0x47, 0x41, 0x76, 0x76, 0x69, 0x6f, 0x43, 0x48, 0x49, 0x56, 0x41, 0x53,
		0x5f, 0x35, 0x35, 0x43, 0x68, 0x69, 0x76, 0x61, 0x73, 0x20, 0x35, 0x35, 0x4d, 0x69, 0x6e, 0x74,
		0x5f, 0x4d, 0x33, 0x35, 0x33, 0x4d, 0x69, 0x6e, 0x74, 0x20, 0x4d, 0x33, 0x35, 0x33, 0x43, 0x6f,
		0x6c, 0x6f, 0x6d, 0x62, 0x69, 0x61, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x43, 0x6f, 0x6c, 0x6f, 0x6d,
		0x62, 0x69, 0x61, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x50, 0x41, 0x44, 0x41, 0x77, 0x6f,
		0x77, 0x41, 0x78, 0x69, 0x6f, 0x6f, 0x50, 0x69, 0x63, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x24, 0x31, 0x50, 0x49, 0x43, 0x4f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x4d, 0x32, 0x50, 0x69,
		0x63, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x32, 0x20, 0x4d, 0x50, 0x69, 0x63, 0x6f,
		0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x41, 0x78, 0x78, 0x69, 0x6f, 0x6e, 0x41,
		0x54, 0x41, 0x42, 0x2d, 0x24, 0x31, 0x41, 0x7a, 0x75, 0x6d, 0x69, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x41, 0x6b, 0x61, 0x6e, 0x65, 0x41, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x50,
		0x45, 0x45, 0x44, 0x35, 0x35, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x41,
		0x35, 0x30, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35, 0x30,
		0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x52, 0x4f, 0x20, 0x41,
		0x35, 0x35, 0x20, 0x51, 0x4c, 0x54, 0x35, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x49, 0x52,
		0x45, 0x49, 0x20, 0x41, 0x35, 0x51, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4b, 0x69, 0x72, 0x65, 0x69,
		0x20, 0x41, 0x35, 0x51, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x62, 0x75, 0x20, 0x41, 0x35,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x41, 0x46, 0x46, 0x24, 0x31, 0x59, 0x20, 0x46, 0x48, 0x44,
		0x24, 0x31, 0x59, 0x20, 0x24, 0x32, 0x42, 0x41, 0x52, 0x54, 0x45, 0x43, 0x50, 0x69, 0x78, 0x61,
		0x76, 0x69, 0x50, 0x69, 0x78, 0x61, 0x76, 0x69, 0x20, 0x24, 0x31, 0x42, 0x41, 0x53, 0x45, 0x42,
		0x42, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x20, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x20,
		0x53, 0x37, 0x30, 0x30, 0x42, 0x46, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x2e,
		0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x54, 0x51, 0x30, 0x36, 0x30, 0x58, 0x54, 0x65, 0x63,
		0x68, 0x6e, 0x6f, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x20,
		0x4c, 0x54, 0x45, 0x20, 0x54, 0x51, 0x38, 0x36, 0x33, 0x51, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f,
		0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x49,
		0x37, 0x30, 0x30, 0x41, 0x4a, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x38, 0x35,
		0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x49, 0x37, 0x38, 0x35, 0x41, 0x50, 0x54, 0x65, 0x63,
		0x68, 0x6e, 0x6f, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x58, 0x38,
		0x30, 0x30, 0x42, 0x4a, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x49, 0x31, 0x30, 0x31, 0x42, 0x49, 0x54, 0x65, 0x63, 0x68,
		0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4b, 0x61, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x4c,
		0x54, 0x45, 0x20, 0x54, 0x51, 0x37, 0x36, 0x33, 0x49, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20,
		0x24, 0x31, 0x22, 0x20, 0x33, 0x47, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x33, 0x47, 0x20, 0x58, 0x35, 0x39, 0x35, 0x42, 0x54, 0x42, 0x42, 0x4b, 0x24,
		0x31, 0x4c, 0x45, 0x58, 0x2d, 0x24, 0x32, 0x2f, 0x24, 0x33, 0x24, 0x31, 0x4c, 0x45, 0x58, 0x2d,
		0x37, 0x32, 0x38, 0x39, 0x2f, 0x54, 0x53, 0x32, 0x43, 0x24, 0x31, 0x4c, 0x45, 0x58, 0x2d, 0x24,
		0x32, 0x42, 0x44, 0x46, 0x4d, 0x31, 0x30, 0x37, 0x5a, 0x4c, 0x38, 0x30, 0x42, 0x4b, 0x39, 0x36,
		0x30, 0x4e, 0x20, 0x4d, 0x54, 0x24, 0x31, 0x42, 0x44, 0x51, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f,
		0x42, 0x31, 0x39, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x42, 0x31, 0x39, 0x44, 0x65, 0x73, 0x74,
		0x69, 0x6e, 0x79, 0x42, 0x44, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x44, 0x53, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x47, 0x48, 0x59, 0x24, 0x31, 0x59, 0x37, 0x31, 0x30, 0x20,
		0x4b, 0x49, 0x44, 0x53, 0x59, 0x37, 0x31, 0x30, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x4a, 0x4f, 0x59,
		0x20, 0x58, 0x32, 0x4a, 0x6f, 0x79, 0x20, 0x58, 0x32, 0x42, 0x49, 0x48, 0x45, 0x45, 0x42, 0x4c,
		0x49, 0x53, 0x53, 0x42, 0x4d, 0x41, 0x58, 0x4d, 0x61, 0x78, 0x50, 0x61, 0x64, 0x20, 0x49, 0x31,
		0x30, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x78, 0x50, 0x61, 0x64, 0x20, 0x49, 0x31, 0x31, 0x42, 0x4d,
		0x58, 0x43, 0x42, 0x52, 0x41, 0x56, 0x45, 0x42, 0x52, 0x4f, 0x52, 0x42, 0x53, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x52, 0x75, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x42, 0x61, 0x63, 0x6b, 0x63,
		0x65, 0x6c, 0x6c, 0x42, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x20, 0x26, 0x20, 0x4e, 0x6f, 0x62, 0x6c,
		0x65, 0x4e, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x42, 0x65, 0x61, 0x66, 0x6f, 0x6e, 0x54, 0x61,
		0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x42, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x42,
		0x65, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x54, 0x61, 0x62, 0x20,
		0x24, 0x31, 0x54, 0x61, 0x62, 0x45, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x46, 0x61, 0x73, 0x74, 0x20, 0x32,
		0x46, 0x61, 0x73, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x38, 0x20, 0x41, 0x32, 0x33, 0x39,
		0x73, 0x42, 0x65, 0x65, 0x62, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x42, 0x65, 0x65, 0x6c, 0x69, 0x6e,
		0x6b, 0x47, 0x54, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x54, 0x31, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x32, 0x47, 0x54, 0x20, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x54,
		0x20, 0x4b, 0x69, 0x6e, 0x67, 0x52, 0x36, 0x38, 0x20, 0x49, 0x49, 0x42, 0x65, 0x65, 0x74, 0x65,
		0x6c, 0x42, 0x65, 0x69, 0x73, 0x74, 0x61, 0x42, 0x65, 0x6c, 0x6c, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x42, 0x50, 0x20, 0x31, 0x30, 0x30, 0x20, 0x58, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x65, 0x6e,
		0x51, 0x42, 0x65, 0x6e, 0x51, 0x2d, 0x53, 0x69, 0x65, 0x6d, 0x65, 0x6e, 0x73, 0x42, 0x65, 0x6e,
		0x57, 0x65, 0x65, 0x57, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x65, 0x6e, 0x63, 0x6f, 0x41, 0x45,
		0x39, 0x39, 0x35, 0x30, 0x56, 0x36, 0x30, 0x41, 0x45, 0x39, 0x30, 0x31, 0x30, 0x56, 0x38, 0x30,
		0x41, 0x48, 0x39, 0x31, 0x31, 0x30, 0x59, 0x31, 0x31, 0x42, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x65,
		0x42, 0x65, 0x6e, 0x7a, 0x6f, 0x47, 0x2d, 0x50, 0x41, 0x44, 0x4c, 0x49, 0x54, 0x45, 0x47, 0x50,
		0x61, 0x64, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x65, 0x79, 0x6f, 0x6e, 0x64, 0x53, 0x75, 0x72,
		0x76, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x75, 0x72, 0x76, 0x65, 0x20, 0x24,
		0x31, 0x48, 0x6f, 0x6d, 0x65, 0x39, 0x48, 0x6f, 0x6d, 0x65, 0x20, 0x39, 0x42, 0x65, 0x7a, 0x6b,
		0x61, 0x6d, 0x42, 0x69, 0x67, 0x62, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x2d,
		0x4f, 0x6e, 0x65, 0x42, 0x69, 0x6c, 0x69, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x69, 0x6c, 0x69,
		0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6f,
		0x6e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x69, 0x6c,
		0x6c, 0x6f, 0x77, 0x42, 0x69, 0x6f, 0x52, 0x75, 0x67, 0x67, 0x65, 0x64, 0x42, 0x69, 0x6f, 0x57,
		0x6f, 0x6c, 0x66, 0x20, 0x38, 0x2d, 0x46, 0x33, 0x30, 0x52, 0x75, 0x67, 0x67, 0x62, 0x6f, 0x20,
		0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x69, 0x72, 0x64, 0x42, 0x69, 0x74, 0x65, 0x6c,
		0x42, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x69, 0x74, 0x6d, 0x6f, 0x72, 0x65, 0x24, 0x31, 0x20, 0x24,
		0x32, 0x43, 0x20, 0x33, 0x47, 0x54, 0x61, 0x62, 0x31, 0x30, 0x31, 0x31, 0x51, 0x20, 0x49, 0x49,
		0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x42, 0x69, 0x74, 0x74, 0x69,
		0x75, 0x6d, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x32,
		0x42, 0x6b, 0x61, 0x76, 0x42, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61,
		0x63, 0x6b, 0x20, 0x42, 0x65, 0x61, 0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x46, 0x6f, 0x78,
		0x42, 0x4d, 0x4d, 0x34, 0x34, 0x33, 0x44, 0x42, 0x37, 0x20, 0x46, 0x6f, 0x78, 0x2b, 0x42, 0x38,
		0x20, 0x46, 0x6f, 0x78, 0x42, 0x38, 0x20, 0x46, 0x6f, 0x78, 0x2b, 0x42, 0x4d, 0x4d, 0x34, 0x34,
		0x31, 0x57, 0x42, 0x38, 0x4d, 0x42, 0x4d, 0x4d, 0x34, 0x34, 0x32, 0x44, 0x42, 0x37, 0x42, 0x4d,
		0x4d, 0x35, 0x33, 0x31, 0x44, 0x42, 0x36, 0x42, 0x4d, 0x4d, 0x35, 0x33, 0x31, 0x41, 0x42, 0x35,
		0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31, 0x41, 0x42, 0x35, 0x2b, 0x42, 0x34, 0x42, 0x4d, 0x4d, 0x34,
		0x34, 0x31, 0x44, 0x42, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31,
		0x42, 0x42, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4e, 0x46, 0x43, 0x42, 0x4d, 0x4d, 0x35,
		0x33, 0x31, 0x42, 0x42, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x32, 0x44, 0x42, 0x33, 0x2b, 0x42, 0x4d, 0x4d, 0x35, 0x34,
		0x31, 0x44, 0x42, 0x33, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31, 0x57, 0x42, 0x37, 0x52, 0x20, 0x46,
		0x6f, 0x78, 0x42, 0x4d, 0x4d, 0x20, 0x35, 0x33, 0x32, 0x20, 0x53, 0x42, 0x4d, 0x4d, 0x20, 0x35,
		0x33, 0x32, 0x53, 0x42, 0x4d, 0x4d, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x70, 0x63,
		0x73, 0x24, 0x31, 0x2d, 0x42, 0x4c, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x76, 0x69, 0x65, 0x77, 0x41,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x24, 0x31, 0x41, 0x38, 0x20, 0x4d, 0x61, 0x78, 0x41,
		0x38, 0x30, 0x53, 0x41, 0x33, 0x30, 0x2d, 0x52, 0x55, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x42, 0x56, 0x39, 0x30, 0x30, 0x30, 0x50, 0x72, 0x6f, 0x2d, 0x46, 0x42, 0x56, 0x39, 0x30, 0x30,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4f, 0x4c, 0x49, 0x44,
		0x5f, 0x34, 0x47, 0x31, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x2d, 0x34, 0x20, 0x47, 0x31, 0x53, 0x4f,
		0x4c, 0x49, 0x44, 0x20, 0x34, 0x20, 0x47, 0x32, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x2d, 0x34, 0x20,
		0x47, 0x32, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20,
		0x31, 0x31, 0x20, 0x53, 0x45, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c,
		0x61, 0x75, 0x70, 0x75, 0x6e, 0x6b, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
		0x20, 0x24, 0x31, 0x43, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x41, 0x31,
		0x30, 0x2e, 0x33, 0x30, 0x32, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x31,
		0x30, 0x30, 0x31, 0x41, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x31, 0x30,
		0x30, 0x31, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x32, 0x45,
		0x6e, 0x64, 0x65, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x6c, 0x61, 0x72,
		0x69, 0x73, 0x20, 0x24, 0x31, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x73, 0x5f, 0x41, 0x31,
		0x30, 0x5f, 0x47, 0x34, 0x30, 0x33, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x73, 0x20, 0x41,
		0x31, 0x30, 0x2e, 0x47, 0x34, 0x30, 0x33, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x73, 0x20,
		0x24, 0x31, 0x53, 0x4c, 0x70, 0x6c, 0x75, 0x73, 0x30, 0x32, 0x53, 0x4c, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x30, 0x32, 0x42, 0x50, 0x20, 0x24, 0x31, 0x53, 0x4d, 0x20, 0x30, 0x32, 0x20, 0x32,
		0x30, 0x31, 0x39, 0x53, 0x4d, 0x20, 0x30, 0x32, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x42,
		0x2d, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x42, 0x6f, 0x78, 0x20, 0x53, 0x74, 0x72, 0x65, 0x61,
		0x6d, 0x42, 0x45, 0x20, 0x24, 0x31, 0x42, 0x4c, 0x2d, 0x39, 0x31, 0x39, 0x38, 0x34, 0x35, 0x42,
		0x45, 0x20, 0x63, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x42, 0x6c, 0x6c,
		0x6f, 0x63, 0x42, 0x6c, 0x6f, 0x77, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x54, 0x41, 0x42, 0x31, 0x30,
		0x4c, 0x61, 0x73, 0x65, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x50, 0x6c, 0x61, 0x74,
		0x69, 0x6e, 0x75, 0x6d, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20, 0x24,
		0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x37, 0x5f, 0x33, 0x47, 0x5f, 0x56, 0x32,
		0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x47, 0x20, 0x56, 0x32, 0x42,
		0x6c, 0x61, 0x63, 0x6b, 0x54, 0x41, 0x42, 0x37, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x33, 0x47, 0x42, 0x6c, 0x75, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x24,
		0x31, 0x4d, 0x36, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f,
		0x20, 0x58, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x58, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x58, 0x31, 0x30, 0x20, 0x32,
		0x30, 0x32, 0x32, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x58, 0x31, 0x30, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x32, 0x29, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x53, 0x74, 0x75,
		0x64, 0x69, 0x6f, 0x20, 0x35, 0x2e, 0x30, 0x20, 0x4b, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20,
		0x53, 0x45, 0x4c, 0x46, 0x49, 0x45, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f,
		0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x54, 0x55, 0x44, 0x49,
		0x4f, 0x20, 0x4f, 0x4e, 0x45, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x4f, 0x6e, 0x65, 0x53,
		0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x53, 0x74, 0x75, 0x64,
		0x69, 0x6f, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20,
		0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x24, 0x31, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20,
		0x53, 0x45, 0x4c, 0x46, 0x49, 0x45, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x65, 0x6c,
		0x66, 0x69, 0x65, 0x4e, 0x65, 0x6f, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x44, 0x49, 0x41, 0x4d,
		0x4f, 0x4e, 0x44, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e,
		0x64, 0x44, 0x49, 0x41, 0x4d, 0x4f, 0x4e, 0x44, 0x20, 0x4d, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e,
		0x64, 0x20, 0x4d, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x45,
		0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x58, 0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x58,
		0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x20, 0x32, 0x45, 0x4e, 0x45, 0x52, 0x47,
		0x59, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x20, 0x32, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
		0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20,
		0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x58, 0x4c, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x58,
		0x4c, 0x44, 0x61, 0x73, 0x68, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45,
		0x44, 0x41, 0x53, 0x48, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x44, 0x61, 0x73, 0x68, 0x20,
		0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x61, 0x73, 0x68, 0x20, 0x34, 0x2e, 0x35, 0x44, 0x61,
		0x73, 0x68, 0x20, 0x58, 0x4c, 0x50, 0x75, 0x72, 0x65, 0x20, 0x24, 0x31, 0x50, 0x55, 0x52, 0x45,
		0x20, 0x4d, 0x49, 0x4e, 0x49, 0x50, 0x75, 0x72, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x6f,
		0x6c, 0x64, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x32,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x24, 0x31,
		0x4c, 0x49, 0x46, 0x45, 0x20, 0x4f, 0x4e, 0x45, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e, 0x65,
		0x4c, 0x49, 0x46, 0x45, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x58,
		0x20, 0x4c, 0x54, 0x45, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x58, 0x38, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x58, 0x38, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x4d, 0x41, 0x52, 0x4b, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x4d, 0x61, 0x72, 0x6b, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4e, 0x65,
		0x6f, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x65, 0x6f, 0x20, 0x24, 0x31, 0x47, 0x35,
		0x30, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x47, 0x35, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x35,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x39, 0x31,
		0x20, 0x50, 0x52, 0x4f, 0x47, 0x39, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x72, 0x61, 0x6e, 0x64,
		0x20, 0x35, 0x2e, 0x35, 0x20, 0x48, 0x44, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x4c,
		0x54, 0x45, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x4c, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72,
		0x61, 0x6e, 0x64, 0x20, 0x4d, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20,
		0x24, 0x31, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x72, 0x61, 0x6e, 0x64,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x33, 0x42, 0x31, 0x31,
		0x30, 0x44, 0x4c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x56, 0x69, 0x65, 0x77,
		0x20, 0x32, 0x42, 0x31, 0x34, 0x30, 0x44, 0x4c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x56, 0x49,
		0x45, 0x57, 0x20, 0x31, 0x56, 0x69, 0x65, 0x77, 0x20, 0x31, 0x52, 0x31, 0x20, 0x48, 0x44, 0x52,
		0x32, 0x20, 0x4c, 0x54, 0x45, 0x52, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x24, 0x31,
		0x20, 0x28, 0x32, 0x30, 0x24, 0x32, 0x29, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72, 0x65,
		0x6d, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x30, 0x22, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72,
		0x65, 0x6d, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72, 0x65,
		0x6d, 0x65, 0x56, 0x49, 0x56, 0x4f, 0x20, 0x41, 0x49, 0x52, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69,
		0x76, 0x6f, 0x20, 0x41, 0x69, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x62,
		0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x37, 0x43, 0x24, 0x31, 0x4c, 0x20, 0x28, 0x32, 0x30, 0x24, 0x32,
		0x29, 0x43, 0x35, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x35, 0x4c, 0x20, 0x4d, 0x61, 0x78,
		0x43, 0x24, 0x31, 0x4c, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x56,
		0x69, 0x76, 0x6f, 0x20, 0x35, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x4f,
		0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x30, 0x31, 0x39, 0x56, 0x69, 0x76, 0x6f,
		0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x56, 0x69, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x76, 0x6f,
		0x20, 0x24, 0x31, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x47, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x62,
		0x6f, 0x6f, 0x6b, 0x20, 0x4d, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x24, 0x31, 0x4c, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x24, 0x31, 0x4c, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x38, 0x4c, 0x20, 0x28,
		0x24, 0x31, 0x29, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x49,
		0x49, 0x44, 0x61, 0x73, 0x68, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x75, 0x53, 0x6c, 0x61, 0x74, 0x65,
		0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x75, 0x62, 0x6f, 0x6f, 0x4d, 0x61, 0x79, 0x61, 0x20,
		0x42, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x61, 0x79, 0x61, 0x58, 0x66, 0x69, 0x72, 0x65, 0x32, 0x58,
		0x66, 0x69, 0x72, 0x65, 0x20, 0x32, 0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x34, 0x47,
		0x58, 0x66, 0x69, 0x72, 0x65, 0x44, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x38, 0x5f, 0x70,
		0x6c, 0x75, 0x73, 0x5f, 0x61, 0x53, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x53, 0x38, 0x61,
		0x53, 0x38, 0x61, 0x44, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x36, 0x42, 0x6c, 0x75, 0x65,
		0x53, 0x6b, 0x79, 0x42, 0x53, 0x53, 0x24, 0x31, 0x42, 0x6c, 0x75, 0x65, 0x62, 0x69, 0x72, 0x64,
		0x42, 0x6c, 0x75, 0x65, 0x64, 0x6f, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x67, 0x6f, 0x6f, 0x64, 0x42,
		0x4c, 0x55, 0x45, 0x47, 0x4f, 0x4f, 0x44, 0x56, 0x36, 0x42, 0x6c, 0x75, 0x65, 0x77, 0x61, 0x76,
		0x65, 0x33, 0x33, 0x47, 0x54, 0x20, 0x48, 0x44, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x20, 0x48,
		0x44, 0x2b, 0x57, 0x56, 0x38, 0x52, 0x2d, 0x4d, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x20, 0x52,
		0x65, 0x64, 0x20, 0x4d, 0x61, 0x72, 0x73, 0x68, 0x6d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x56,
		0x38, 0x2d, 0x4d, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x57, 0x56, 0x38, 0x2d, 0x4c, 0x57, 0x61,
		0x76, 0x65, 0x20, 0x38, 0x20, 0x52, 0x65, 0x64, 0x20, 0x4e, 0x6f, 0x75, 0x67, 0x61, 0x74, 0x42,
		0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x58, 0x37, 0x4f, 0x4f, 0x41, 0x58, 0x37, 0x30, 0x30,
		0x46, 0x55, 0x4e, 0x20, 0x34, 0x20, 0x32, 0x30, 0x31, 0x38, 0x46, 0x75, 0x6e, 0x20, 0x34, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x42, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x36,
		0x30, 0x42, 0x4c, 0x36, 0x30, 0x4d, 0x5f, 0x4d, 0x56, 0x30, 0x35, 0x42, 0x4c, 0x36, 0x30, 0x4d,
		0x42, 0x35, 0x30, 0x50, 0x72, 0x6f, 0x42, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x35,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x24, 0x31, 0x42, 0x4c, 0x35, 0x31, 0x42, 0x4c, 0x35,
		0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6f, 0x62, 0x61, 0x72, 0x72, 0x79, 0x4b, 0x31, 0x30, 0x20,
		0x53, 0x45, 0x42, 0x6f, 0x6c, 0x76, 0x61, 0x42, 0x2d, 0x54, 0x41, 0x42, 0x31, 0x30, 0x32, 0x31,
		0x42, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x6e, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x72, 0x69,
		0x6b, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x61, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x42, 0x6f, 0x77, 0x61, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x4c,
		0x31, 0x66, 0x2d, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x4c, 0x31, 0x66, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x42, 0x72, 0x61, 0x6e, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x42, 0x36, 0x53, 0x42, 0x36, 0x53,
		0x42, 0x72, 0x61, 0x6e, 0x64, 0x74, 0x42, 0x72, 0x61, 0x76, 0x69, 0x73, 0x41, 0x35, 0x30, 0x31,
		0x20, 0x42, 0x52, 0x49, 0x47, 0x48, 0x54, 0x41, 0x35, 0x30, 0x31, 0x20, 0x42, 0x72, 0x69, 0x67,
		0x68, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x72, 0x79, 0x73, 0x74,
		0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x54, 0x61, 0x75, 0x44, 0x65,
		0x6c, 0x74, 0x61, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x42, 0x35, 0x30, 0x31, 0x45, 0x61, 0x73, 0x79,
		0x4e, 0x31, 0x2d, 0x35, 0x37, 0x30, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x35, 0x35, 0x34, 0x20,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x35, 0x30, 0x30, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e,
		0x64, 0x41, 0x35, 0x30, 0x35, 0x20, 0x4a, 0x4f, 0x59, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35,
		0x30, 0x35, 0x20, 0x4a, 0x6f, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35, 0x35, 0x32, 0x20,
		0x4a, 0x4f, 0x59, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x35, 0x35, 0x32, 0x20, 0x4a, 0x6f, 0x79, 0x20,
		0x4d, 0x61, 0x78, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x20, 0x41, 0x35, 0x35, 0x31, 0x41, 0x35, 0x35,
		0x31, 0x20, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x41, 0x35, 0x30, 0x33, 0x20, 0x4a, 0x6f, 0x79, 0x41,
		0x35, 0x30, 0x34, 0x20, 0x54, 0x72, 0x61, 0x63, 0x65, 0x41, 0x35, 0x31, 0x32, 0x20, 0x48, 0x61,
		0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x35, 0x31, 0x31, 0x20, 0x48, 0x61,
		0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x41, 0x35, 0x31, 0x30, 0x5f, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x5f,
		0x34, 0x47, 0x41, 0x35, 0x31, 0x30, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x20, 0x34, 0x47, 0x41,
		0x35, 0x30, 0x39, 0x5f, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x41, 0x35, 0x30, 0x39, 0x20, 0x4a, 0x65,
		0x61, 0x6e, 0x73, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4e, 0x45, 0x4f, 0x41, 0x34, 0x30,
		0x31, 0x20, 0x4e, 0x65, 0x6f, 0x4e, 0x31, 0x5f, 0x35, 0x35, 0x30, 0x5f, 0x43, 0x72, 0x75, 0x69,
		0x73, 0x65, 0x72, 0x4e, 0x31, 0x2d, 0x35, 0x35, 0x30, 0x20, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65,
		0x72, 0x4e, 0x31, 0x5f, 0x35, 0x35, 0x31, 0x20, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x4e, 0x31, 0x2d,
		0x35, 0x35, 0x31, 0x20, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20,
		0x4f, 0x4d, 0x45, 0x47, 0x41, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53,
		0x20, 0x42, 0x49, 0x5a, 0x42, 0x69, 0x7a, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x50, 0x4f,
		0x57, 0x45, 0x52, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x53, 0x6c, 0x69,
		0x6d, 0x20, 0x33, 0x47, 0x4e, 0x50, 0x20, 0x31, 0x30, 0x34, 0x20, 0x33, 0x47, 0x4e, 0x50, 0x31,
		0x30, 0x34, 0x20, 0x33, 0x47, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4e, 0x50, 0x20, 0x31,
		0x30, 0x33, 0x4e, 0x50, 0x31, 0x30, 0x33, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4e, 0x50,
		0x20, 0x38, 0x34, 0x34, 0x4e, 0x50, 0x38, 0x34, 0x34, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x53,
		0x69, 0x67, 0x6e, 0x42, 0x72, 0x69, 0x67, 0x6d, 0x74, 0x6f, 0x6e, 0x42, 0x54, 0x50, 0x43, 0x2d,
		0x42, 0x54, 0x50, 0x43, 0x2d, 0x31, 0x30, 0x32, 0x32, 0x51, 0x43, 0x33, 0x47, 0x2d, 0x54, 0x56,
		0x42, 0x72, 0x6f, 0x6e, 0x64, 0x69, 0x43, 0x45, 0x4e, 0x54, 0x55, 0x52, 0x49, 0x4f, 0x4e, 0x20,
		0x24, 0x31, 0x47, 0x4c, 0x41, 0x44, 0x49, 0x41, 0x54, 0x4f, 0x52, 0x20, 0x24, 0x31, 0x47, 0x4c,
		0x4f, 0x52, 0x59, 0x20, 0x24, 0x31, 0x4c, 0x55, 0x58, 0x55, 0x52, 0x59, 0x20, 0x24, 0x31, 0x4d,
		0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x53, 0x6b, 0x79, 0x53, 0x45, 0x4e, 0x53, 0x55,
		0x45, 0x4c, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x56, 0x49, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x20, 0x24,
		0x31, 0x41, 0x4d, 0x49, 0x43, 0x4f, 0x5f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x50, 0x48, 0x4f, 0x4e,
		0x45, 0x5f, 0x34, 0x47, 0x41, 0x6d, 0x69, 0x63, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x47, 0x41, 0x4d, 0x49, 0x43, 0x4f, 0x20, 0x53, 0x4d, 0x41,
		0x52, 0x54, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x20, 0x58, 0x4c, 0x41, 0x6d, 0x69, 0x63, 0x6f, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x4c, 0x53, 0x55, 0x52,
		0x46, 0x49, 0x4e, 0x47, 0x20, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x42, 0x75, 0x62, 0x62, 0x6c,
		0x65, 0x67, 0x75, 0x6d, 0x42, 0x75, 0x6e, 0x64, 0x79, 0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x53, 0x77, 0x65, 0x65,
		0x74, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x37,
		0x5f, 0x50, 0x4c, 0x55, 0x53, 0x42, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x37, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x42, 0x75, 0x73, 0x68, 0x42, 0x75, 0x73, 0x68, 0x31, 0x30, 0x4e, 0x6f, 0x75,
		0x31, 0x30, 0x4e, 0x6f, 0x75, 0x53, 0x70, 0x69, 0x72, 0x61, 0x20, 0x42, 0x31, 0x20, 0x24, 0x31,
		0x22, 0x24, 0x31, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x42, 0x55, 0x53, 0x48, 0x20, 0x53, 0x70,
		0x69, 0x72, 0x61, 0x20, 0x42, 0x32, 0x20, 0x35, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68,
		0x6f, 0x6e, 0x65, 0x53, 0x70, 0x69, 0x72, 0x61, 0x20, 0x42, 0x32, 0x20, 0x35, 0x22, 0x42, 0x75,
		0x7a, 0x7a, 0x54, 0x56, 0x43, 0x35, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x6e, 0x6f, 0x61,
		0x20, 0x58, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x61, 0x20, 0x58, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x6e, 0x6f, 0x61, 0x5f, 0x47, 0x31, 0x4e, 0x6f, 0x61, 0x20, 0x47, 0x31, 0x6e,
		0x6f, 0x61, 0x58, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x6f, 0x61, 0x20, 0x58, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x4e, 0x4f, 0x41, 0x54, 0x41, 0x42, 0x4e, 0x6f, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x43, 0x41, 0x47, 0x49, 0x43, 0x41, 0x47, 0x49, 0x2d, 0x43, 0x41, 0x47, 0x49, 0x2d, 0x4f, 0x4d,
		0x45, 0x47, 0x41, 0x43, 0x47, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4f, 0x6d, 0x65, 0x67,
		0x61, 0x20, 0x24, 0x31, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x36, 0x45, 0x4f, 0x4e, 0x20, 0x42,
		0x6c, 0x61, 0x7a, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x4f, 0x4e, 0x20, 0x42, 0x6c, 0x61, 0x7a,
		0x65, 0x20, 0x47, 0x6f, 0x6c, 0x64, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x43, 0x47,
		0x56, 0x43, 0x4b, 0x4b, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x43, 0x4f, 0x4d, 0x50, 0x55,
		0x4d, 0x41, 0x58, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x31, 0x30, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x53,
		0x31, 0x30, 0x43, 0x4f, 0x52, 0x4e, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x38, 0x20, 0x33, 0x47,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x52, 0x24, 0x31, 0x30, 0x54, 0x72, 0x6f, 0x6e, 0x69, 0x6b,
		0x20, 0x24, 0x31, 0x58, 0x24, 0x31, 0x43, 0x4f, 0x59, 0x4f, 0x54, 0x45, 0x31, 0x30, 0x39, 0x30,
		0x20, 0x44, 0x56, 0x52, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f,
		0x43, 0x55, 0x42, 0x4f, 0x54, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x24, 0x31, 0x50, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x43, 0x68, 0x65, 0x65, 0x74, 0x61, 0x68, 0x24, 0x31, 0x52, 0x41, 0x49,
		0x4e, 0x42, 0x4f, 0x57, 0x20, 0x32, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x20, 0x32, 0x52,
		0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x44, 0x49, 0x4e,
		0x4f, 0x53, 0x41, 0x55, 0x52, 0x44, 0x69, 0x6e, 0x6f, 0x73, 0x61, 0x75, 0x72, 0x4b, 0x49, 0x4e,
		0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x4b, 0x69, 0x6e, 0x67, 0x20,
		0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4b, 0x49, 0x4e, 0x47, 0x4b, 0x4f,
		0x4e, 0x47, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67,
		0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x24,
		0x31, 0x4b, 0x49, 0x4e, 0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x4b, 0x69,
		0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x49, 0x4e, 0x47,
		0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b,
		0x6f, 0x6e, 0x67, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f,
		0x6e, 0x67, 0x20, 0x24, 0x31, 0x4b, 0x49, 0x4e, 0x47, 0x20, 0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x43,
		0x53, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x43, 0x53, 0x4b, 0x49, 0x4e,
		0x47, 0x20, 0x4b, 0x4f, 0x4e, 0x47, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x51,
		0x55, 0x45, 0x53, 0x54, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x51, 0x55, 0x45, 0x53, 0x54, 0x51, 0x75, 0x65, 0x73, 0x74, 0x58, 0x32, 0x30,
		0x20, 0x50, 0x52, 0x4f, 0x58, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x4f, 0x52, 0x52, 0x4f,
		0x20, 0x30, 0x30, 0x31, 0x5a, 0x6f, 0x72, 0x72, 0x6f, 0x20, 0x30, 0x30, 0x31, 0x4d, 0x61, 0x6e,
		0x69, 0x74, 0x6f, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4d, 0x61, 0x78, 0x20, 0x24, 0x31, 0x4e, 0x4f,
		0x54, 0x45, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4e, 0x4f, 0x54, 0x45, 0x20, 0x37, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x4e, 0x4f, 0x54, 0x45,
		0x20, 0x32, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x53, 0x43,
		0x55, 0x42, 0x4f, 0x54, 0x5f, 0x4e, 0x4f, 0x56, 0x41, 0x4e, 0x6f, 0x76, 0x61, 0x43, 0x55, 0x42,
		0x4f, 0x54, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x43, 0x55, 0x42, 0x4f, 0x54, 0x5f, 0x58, 0x31,
		0x38, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x31, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x56,
		0x54, 0x45, 0x43, 0x61, 0x6d, 0x66, 0x6f, 0x6e, 0x65, 0x46, 0x75, 0x72, 0x69, 0x6f, 0x75, 0x73,
		0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6e, 0x61, 0x6c, 0x20, 0x44, 0x69, 0x67, 0x69,
		0x74, 0x61, 0x6c, 0x4f, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x67, 0x75,
		0x72, 0x6f, 0x43, 0x61, 0x70, 0x69, 0x74, 0x65, 0x6c, 0x43, 0x61, 0x70, 0x74, 0x69, 0x76, 0x61,
		0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x20, 0x31, 0x20, 0x4d, 0x61, 0x72, 0x6b,
		0x20, 0x49, 0x49, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x72, 0x6b, 0x20, 0x49, 0x49, 0x43, 0x61,
		0x72, 0x72, 0x65, 0x66, 0x6f, 0x75, 0x72, 0x43, 0x54, 0x38, 0x32, 0x30, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4e, 0x65, 0x6f, 0x32, 0x43, 0x54, 0x24,
		0x31, 0x43, 0x61, 0x73, 0x69, 0x6f, 0x47, 0x27, 0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x61, 0x76,
		0x69, 0x6e, 0x65, 0x47, 0x27, 0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
		0x64, 0x6f, 0x47, 0x27, 0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
		0x6f, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x61, 0x73, 0x70, 0x65, 0x72, 0x56, 0x49,
		0x41, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31, 0x43,
		0x41, 0x53, 0x50, 0x45, 0x52, 0x5f, 0x56, 0x49, 0x41, 0x5f, 0x45, 0x31, 0x63, 0x56, 0x49, 0x41,
		0x20, 0x45, 0x31, 0x43, 0x4c, 0x31, 0x30, 0x20, 0x34, 0x2e, 0x35, 0x47, 0x56, 0x49, 0x41, 0x20,
		0x24, 0x31, 0x20, 0x33, 0x47, 0x43, 0x61, 0x74, 0x42, 0x31, 0x35, 0x51, 0x43, 0x41, 0x54, 0x20,
		0x42, 0x33, 0x35, 0x42, 0x33, 0x35, 0x53, 0x36, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x76,
		0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x42, 0x61, 0x73,
		0x65, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x43, 0x41, 0x56, 0x49, 0x4f, 0x4e, 0x5f, 0x31, 0x30, 0x5f,
		0x33, 0x47, 0x52, 0x51, 0x42, 0x61, 0x73, 0x65, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x52, 0x20,
		0x51, 0x75, 0x61, 0x64, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x31, 0x22, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x32, 0x22, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x31, 0x30, 0x42, 0x61,
		0x73, 0x65, 0x20, 0x31, 0x30, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x65,
		0x20, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x65,
		0x20, 0x37, 0x20, 0x51, 0x75, 0x61, 0x64, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x42, 0x61, 0x73, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x30, 0x22, 0x20,
		0x33, 0x47, 0x20, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x43, 0x65, 0x69, 0x62, 0x61, 0x6c, 0x41,
		0x43, 0x52, 0x55, 0x58, 0xc3, 0x81, 0x63, 0x72, 0x75, 0x78, 0x42, 0x45, 0x4c, 0x4c, 0x41, 0x54,
		0x52, 0x49, 0x58, 0x42, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x72, 0x69, 0x78, 0x42, 0x45, 0x54, 0x45,
		0x4c, 0x47, 0x45, 0x55, 0x53, 0x45, 0x42, 0x65, 0x74, 0x65, 0x6c, 0x67, 0x65, 0x75, 0x73, 0x65,
		0x4b, 0x69, 0x6c, 0x2d, 0x38, 0x32, 0x57, 0x46, 0x44, 0x43, 0x4b, 0x69, 0x6c, 0x61, 0x6e, 0x64,
		0x20, 0x54, 0x38, 0x43, 0x65, 0x6c, 0x63, 0x75, 0x73, 0x43, 0x65, 0x6c, 0x6b, 0x6f, 0x6e, 0x34,
		0x47, 0x20, 0x54, 0x61, 0x62, 0x20, 0x38, 0x4d, 0x69, 0x6c, 0x6c, 0x65, 0x6e, 0x6e, 0x69, 0x61,
		0x20, 0x48, 0x65, 0x72, 0x6f, 0x32, 0x47, 0x42, 0x53, 0x74, 0x61, 0x72, 0x32, 0x47, 0x42, 0x20,
		0x53, 0x74, 0x61, 0x72, 0x32, 0x47, 0x42, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x32, 0x47, 0x42,
		0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x51, 0x20, 0x32, 0x51, 0x34, 0x47,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x6e, 0x69, 0x51, 0x43, 0x65, 0x6c, 0x6c, 0x2d, 0x43, 0x53,
		0x75, 0x6d, 0x6d, 0x69, 0x74, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x43, 0x45, 0x4c, 0x4c,
		0x43, 0x5f, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x65,
		0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x32,
		0x50, 0x6c, 0x75, 0x73, 0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x43, 0x48, 0x49, 0x43, 0x5f, 0x58, 0x31, 0x43, 0x68, 0x69, 0x63, 0x20, 0x58, 0x31,
		0x43, 0x65, 0x6c, 0x6c, 0x61, 0x63, 0x6f, 0x6d, 0x53, 0x36, 0x32, 0x53, 0x35, 0x31, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x58, 0x35, 0x30, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x43, 0x65, 0x6c,
		0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x73, 0x6d, 0x61, 0x73, 0x20, 0x24, 0x31, 0x43,
		0x6f, 0x73, 0x6d, 0x61, 0x73, 0x50, 0x41, 0x44, 0x55, 0x41, 0x50, 0x61, 0x64, 0x75, 0x61, 0x43,
		0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x50, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x33, 0x47,
		0x31, 0x4c, 0x31, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x77, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67,
		0x68, 0x6f, 0x6e, 0x67, 0x48, 0x4f, 0x4e, 0x20, 0x48, 0x30, 0x31, 0x48, 0x4f, 0x4e, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x48, 0x30, 0x31, 0x47, 0x48, 0x4f, 0x4e, 0x47, 0x56, 0x31, 0x32, 0x56,
		0x31, 0x32, 0x43, 0x68, 0x65, 0x72, 0x72, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x46,
		0x6c, 0x61, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x24, 0x31, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x5f,
		0x48, 0x44, 0x5f, 0x4d, 0x41, 0x58, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x4d,
		0x61, 0x78, 0x46, 0x4c, 0x41, 0x52, 0x45, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x46, 0x6c, 0x61, 0x72,
		0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20,
		0x4a, 0x24, 0x31, 0x73, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x65, 0x6c, 0x75, 0x78,
		0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x46,
		0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x6c, 0x61, 0x72, 0x65,
		0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x58, 0x4c, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4a, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46,
		0x6c, 0x61, 0x72, 0x65, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65,
		0x20, 0x41, 0x35, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x58, 0x20, 0x56, 0x24, 0x31, 0x46, 0x6c,
		0x61, 0x72, 0x65, 0x20, 0x58, 0x4c, 0x20, 0x32, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x5f, 0x4a, 0x32, 0x5f, 0x32, 0x30,
		0x31, 0x38, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4a, 0x32, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38,
		0x29, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x54,
		0x45, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x6c, 0x61,
		0x72, 0x65, 0x53, 0x35, 0x4c, 0x69, 0x74, 0x65, 0x44, 0x54, 0x56, 0x46, 0x6c, 0x61, 0x72, 0x65,
		0x20, 0x53, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x44, 0x54, 0x56, 0x46, 0x6c, 0x61, 0x72,
		0x65, 0x20, 0x53, 0x32, 0x20, 0x44, 0x54, 0x56, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x53, 0x33, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x58, 0x4c, 0x20, 0x32, 0x4f, 0x6d, 0x65,
		0x67, 0x61, 0x20, 0x48, 0x44, 0x20, 0x24, 0x31, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x5f, 0x48, 0x44,
		0x5f, 0x44, 0x75, 0x6f, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x48, 0x44, 0x20, 0x44, 0x75, 0x6f,
		0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x32, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x32, 0x4f, 0x6d, 0x65,
		0x67, 0x61, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20,
		0x58, 0x53, 0x70, 0x69, 0x6e, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x53, 0x65, 0x6c, 0x66, 0x69,
		0x65, 0x5f, 0x54, 0x77, 0x6f, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x54, 0x77, 0x6f, 0x44,
		0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x52, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x44, 0x65,
		0x73, 0x69, 0x72, 0x65, 0x20, 0x52, 0x36, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x44, 0x65, 0x73, 0x69,
		0x72, 0x65, 0x20, 0x52, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65,
		0x20, 0x52, 0x36, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x45, 0x79, 0x65, 0x43, 0x4f, 0x53,
		0x4d, 0x4f, 0x53, 0x20, 0x54, 0x48, 0x52, 0x45, 0x45, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x20,
		0x33, 0x52, 0x65, 0x76, 0x65, 0x6c, 0x20, 0x33, 0x47, 0x52, 0x61, 0x64, 0x61, 0x72, 0x20, 0x44,
		0x65, 0x6c, 0x75, 0x78, 0x65, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x20,
		0x52, 0x61, 0x64, 0x61, 0x72, 0x20, 0x44, 0x65, 0x6c, 0x75, 0x78, 0x65, 0x20, 0x32, 0x53, 0x75,
		0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x32, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75,
		0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75,
		0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44,
		0x54, 0x56, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x61, 0x62, 0x20, 0x50,
		0x72, 0x6f, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x56, 0x24, 0x31, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x75, 0x72, 0x61, 0x20, 0x33,
		0x73, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x75, 0x72, 0x61, 0x20, 0x33, 0x53, 0x4d,
		0x41, 0x49, 0x41, 0x20, 0x50, 0x41, 0x44, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61, 0x69, 0x61,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x68, 0x69, 0x63, 0x6f, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x42, 0x6f, 0x6d, 0x62, 0x6f, 0x41,
		0x6c, 0x74, 0x6f, 0x20, 0x42, 0x6f, 0x6d, 0x62, 0x6f, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x63, 0x6c,
		0x61, 0x73, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
		0x63, 0x41, 0x56, 0x41, 0x4e, 0x43, 0x45, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x41,
		0x76, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x41, 0x4c, 0x54,
		0x4f, 0x20, 0x45, 0x73, 0x74, 0x72, 0x65, 0x6c, 0x6c, 0x61, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x45,
		0x73, 0x74, 0x72, 0x65, 0x6c, 0x6c, 0x61, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x4a, 0x55, 0x45, 0x47,
		0x4f, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x4a, 0x75, 0x65, 0x67, 0x6f, 0x41, 0x4c, 0x54, 0x4f, 0x20,
		0x53, 0x55, 0x42, 0x49, 0x52, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x53, 0x75, 0x62, 0x69, 0x72, 0x41,
		0x6c, 0x74, 0x6f, 0x20, 0x24, 0x31, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x24, 0x31, 0x4f, 0x4a, 0x4f,
		0x53, 0x20, 0x4e, 0x55, 0x42, 0x45, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x4e, 0x75, 0x62, 0x65, 0x4f,
		0x4a, 0x4f, 0x53, 0x20, 0x43, 0x41, 0x4d, 0x42, 0x49, 0x4f, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x43,
		0x61, 0x6d, 0x62, 0x69, 0x6f, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x4f, 0x52, 0x4f, 0x4f, 0x6a, 0x6f,
		0x73, 0x20, 0x4f, 0x72, 0x6f, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x4c, 0x55, 0x4e, 0x41, 0x4f, 0x6a,
		0x6f, 0x73, 0x20, 0x4c, 0x75, 0x6e, 0x61, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x43, 0x49, 0x45, 0x4c,
		0x4f, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x43, 0x69, 0x65, 0x6c, 0x6f, 0x4f, 0x4a, 0x4f, 0x53, 0x20,
		0x50, 0x4c, 0x55, 0x53, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x4a, 0x4f,
		0x53, 0x20, 0x56, 0x49, 0x56, 0x49, 0x52, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x56, 0x69, 0x76, 0x69,
		0x72, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x44, 0x4f, 0x53, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x4f, 0x6a,
		0x6f, 0x73, 0x20, 0x44, 0x4f, 0x53, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4f, 0x4a, 0x4f, 0x53, 0x20,
		0x44, 0x4f, 0x53, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x44, 0x4f, 0x53, 0x46, 0x55, 0x45, 0x47, 0x4f,
		0x20, 0x4d, 0x41, 0x58, 0x46, 0x75, 0x65, 0x67, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x68, 0x69,
		0x6c, 0x69, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x45, 0x2d, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x24,
		0x31, 0x43, 0x68, 0x69, 0x6e, 0x61, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x36, 0x35,
		0x31, 0x43, 0x59, 0x43, 0x4d, 0x43, 0x43, 0x2d, 0x4d, 0x38, 0x36, 0x30, 0x4e, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x36, 0x35, 0x33, 0x41, 0x33, 0x73, 0x4d, 0x37, 0x36, 0x32, 0x47, 0x43, 0x68,
		0x69, 0x6e, 0x61, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x54, 0x59, 0x48, 0x36, 0x32,
		0x32, 0x4d, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x31, 0x31, 0x20, 0x35, 0x47, 0x54,
		0x59, 0x48, 0x36, 0x31, 0x31, 0x4d, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x31, 0x30,
		0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x54, 0x59, 0x48, 0x36, 0x31, 0x32, 0x4d, 0x4d, 0x61, 0x69,
		0x6d, 0x61, 0x6e, 0x67, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x54, 0x59, 0x48, 0x32, 0x31, 0x31,
		0x55, 0x54, 0x69, 0x61, 0x6e, 0x79, 0x69, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x54, 0x59, 0x48, 0x32, 0x30, 0x31, 0x48, 0x54, 0x69, 0x61, 0x6e, 0x79, 0x69, 0x20,
		0x4f, 0x6e, 0x65, 0x43, 0x68, 0x75, 0x77, 0x69, 0x48, 0x69, 0x38, 0x24, 0x31, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x24, 0x31, 0x20, 0x24, 0x32, 0x48, 0x69,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x69, 0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x58, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41,
		0x69, 0x72, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x4d, 0x61, 0x78, 0x48, 0x69, 0x24, 0x31, 0x20, 0x41, 0x69, 0x72, 0x48, 0x69, 0x38,
		0x20, 0x53, 0x45, 0x48, 0x69, 0x31, 0x30, 0x20, 0x58, 0x50, 0x72, 0x6f, 0x48, 0x69, 0x24, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x31,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x31, 0x30, 0x53, 0x75, 0x72, 0x50, 0x61, 0x64, 0x48,
		0x69, 0x42, 0x6f, 0x78, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x4c,
		0x61, 0x62, 0x43, 0x69, 0x74, 0x79, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6c, 0x61, 0x72, 0x65, 0x73,
		0x74, 0x61, 0x41, 0x69, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x43, 0x6c, 0x61,
		0x72, 0x6d, 0x69, 0x6e, 0x42, 0x38, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x38, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x42, 0x38, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x35,
		0x50, 0x72, 0x6f, 0x42, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x50, 0x48,
		0x4f, 0x4e, 0x45, 0x43, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x6e, 0x69, 0x43, 0x6c, 0x65,
		0x6d, 0x70, 0x61, 0x64, 0x20, 0x28, 0x24, 0x31, 0x29, 0x4d, 0x46, 0x43, 0x5f, 0x32, 0x30, 0x31,
		0x38, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d,
		0x46, 0x43, 0x5f, 0x38, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x38, 0x43, 0x4c, 0x45,
		0x4d, 0x50, 0x41, 0x44, 0x5f, 0x37, 0x5f, 0x53, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20,
		0x37, 0x53, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x43, 0x6c, 0x65, 0x6d,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x74, 0x72,
		0x61, 0x74, 0x75, 0x73, 0x5f, 0x43, 0x35, 0x5f, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72,
		0x61, 0x74, 0x75, 0x73, 0x20, 0x43, 0x35, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x43, 0x6c, 0x6f,
		0x75, 0x64, 0x66, 0x6f, 0x6e, 0x65, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x42, 0x6f, 0x6f,
		0x73, 0x74, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20,
		0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x24, 0x31, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x42,
		0x6f, 0x6f, 0x73, 0x74, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x53, 0x6e, 0x61, 0x70, 0x54,
		0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x31, 0x36, 0x47, 0x42, 0x54,
		0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x68, 0x72, 0x69, 0x6c,
		0x6c, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x48, 0x44, 0x45, 0x78, 0x63, 0x69,
		0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x78,
		0x63, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x45, 0x78, 0x63, 0x69,
		0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x43, 0x45,
		0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x43, 0x4e, 0x42, 0x41, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69,
		0x6f, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x43,
		0x6c, 0x6f, 0x75, 0x64, 0x70, 0x61, 0x64, 0x2b, 0x56, 0x54, 0x24, 0x31, 0x2b, 0x56, 0x54, 0x51,
		0x24, 0x31, 0x43, 0x6c, 0x6f, 0x75, 0x74, 0x48, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x2e, 0x31, 0x58,
		0x34, 0x31, 0x37, 0x20, 0x41, 0x6d, 0x61, 0x7a, 0x65, 0x58, 0x34, 0x31, 0x38, 0x20, 0x5a, 0x65,
		0x73, 0x74, 0x58, 0x34, 0x32, 0x31, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x58, 0x34, 0x32, 0x32, 0x20,
		0x45, 0x78, 0x6f, 0x74, 0x69, 0x63, 0x58, 0x34, 0x32, 0x35, 0x20, 0x53, 0x68, 0x61, 0x76, 0x69,
		0x74, 0x58, 0x34, 0x32, 0x38, 0x20, 0x41, 0x73, 0x74, 0x75, 0x74, 0x65, 0x43, 0x6e, 0x4d, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x43, 0x6f, 0x62, 0x61, 0x6c, 0x74,
		0x53, 0x4d, 0x24, 0x31, 0x54, 0x24, 0x31, 0x20, 0x33, 0x47, 0x54, 0x24, 0x31, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x43, 0x6f, 0x62, 0x79, 0x20, 0x4b, 0x79, 0x72, 0x6f, 0x73, 0x43, 0x6f, 0x6c, 0x6f,
		0x72, 0x73, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x31, 0x41, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20,
		0x37, 0x53, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x31, 0x45, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20,
		0x35, 0x43, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x35, 0x58, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20,
		0x31, 0x58, 0x43, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x64, 0x65, 0x20, 0x54, 0x65, 0x73, 0x6c, 0x61,
		0x45, 0x76, 0x6f, 0x20, 0x35, 0x2e, 0x30, 0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x20, 0x4f, 0x43, 0x54, 0x41, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x2e, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x36, 0x2e, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x5f, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x37, 0x38, 0x35, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x54, 0x54,
		0x48, 0x37, 0x48, 0x37, 0x54, 0x54, 0x4c, 0x37, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x37,
		0x54, 0x65, 0x73, 0x6c, 0x61, 0x5f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x4c, 0x37, 0x5f,
		0x33, 0x47, 0x4c, 0x37, 0x20, 0x33, 0x47, 0x54, 0x54, 0x4c, 0x37, 0x31, 0x33, 0x47, 0x4c, 0x37,
		0x2e, 0x31, 0x20, 0x33, 0x47, 0x54, 0x54, 0x4c, 0x38, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c,
		0x38, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x54, 0x5f, 0x4d, 0x37,
		0x4d, 0x37, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x5f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x4d,
		0x38, 0x4d, 0x38, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x20, 0x58, 0x54, 0x35, 0x35, 0x30, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x42, 0x6f, 0x78, 0x20, 0x58, 0x54, 0x35, 0x35, 0x30, 0x43, 0x6f, 0x6d, 0x69,
		0x6f, 0x47, 0x54, 0x31, 0x30, 0x30, 0x43, 0x54, 0x37, 0x30, 0x31, 0x57, 0x43, 0x54, 0x37, 0x30,
		0x31, 0x47, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x43, 0x54, 0x37, 0x30, 0x31, 0x47, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x43, 0x6f,
		0x6e, 0x43, 0x6f, 0x72, 0x64, 0x65, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x6e, 0x20, 0x24, 0x31,
		0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x64,
		0x4d, 0x31, 0x30, 0x46, 0x6c, 0x79, 0x66, 0x69, 0x78, 0x20, 0x36, 0x43, 0x2d, 0x37, 0x32, 0x31,
		0x46, 0x6c, 0x79, 0x66, 0x69, 0x78, 0x20, 0x51, 0x50, 0x6c, 0x75, 0x73, 0x2d, 0x24, 0x31, 0x20,
		0x24, 0x32, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
		0x43, 0x2d, 0x37, 0x35, 0x34, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69,
		0x6f, 0x6e, 0x20, 0x43, 0x2d, 0x37, 0x35, 0x34, 0x43, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x64, 0x5f,
		0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x48, 0x53, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x48, 0x53,
		0x43, 0x6f, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x50, 0x48, 0x53,
		0x2d, 0x36, 0x30, 0x31, 0x43, 0x38, 0x43, 0x34, 0x2b, 0x20, 0x4e, 0x6f, 0x69, 0x72, 0x43, 0x37,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x34, 0x43, 0x32, 0x43,
		0x35, 0x43, 0x38, 0x53, 0x43, 0x37, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x39, 0x43,
		0x36, 0x2b, 0x43, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41,
		0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x32, 0x53, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20,
		0x47, 0x34, 0x53, 0x50, 0x34, 0x31, 0x33, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x54, 0x31,
		0x50, 0x4b, 0x54, 0x34, 0x31, 0x31, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x32, 0x50,
		0x48, 0x51, 0x35, 0x31, 0x39, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x34, 0x53, 0x50,
		0x48, 0x51, 0x35, 0x32, 0x30, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x35, 0x50, 0x48,
		0x51, 0x35, 0x32, 0x35, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x36, 0x50, 0x48, 0x51,
		0x35, 0x32, 0x36, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x36, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x37, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x34,
		0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x35, 0x50, 0x6c, 0x75, 0x6d,
		0x65, 0x20, 0x50, 0x36, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x61, 0x34, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x41, 0x34, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x79, 0x20, 0x65, 0x35, 0x20, 0x70, 0x72, 0x6f, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
		0x79, 0x20, 0x45, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
		0x20, 0x45, 0x35, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x49, 0x24, 0x31, 0x47,
		0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x72, 0x69,
		0x66, 0x66, 0x65, 0x20, 0x54, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65,
		0x20, 0x54, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20,
		0x54, 0x24, 0x31, 0x50, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20,
		0x50, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x36, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x38, 0x41,
		0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x35, 0x35, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20,
		0x41, 0x31, 0x30, 0x30, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x35, 0x35, 0x20, 0x53,
		0x6c, 0x69, 0x6d, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x31, 0x30, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x38, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20,
		0x41, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x35,
		0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x48, 0x31, 0x50, 0x6c,
		0x75, 0x6d, 0x65, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x6d, 0x65,
		0x20, 0x4c, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c,
		0x33, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x24, 0x31,
		0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x4e, 0x2d,
		0x24, 0x31, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
		0x63, 0x74, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x36, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x78, 0x53,
		0x45, 0x4e, 0x5f, 0x31, 0x30, 0x35, 0x35, 0x5f, 0x41, 0x52, 0x4d, 0x53, 0x65, 0x72, 0x65, 0x6e,
		0x69, 0x74, 0x79, 0x20, 0x31, 0x30, 0x35, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x43, 0x6f,
		0x6e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x24, 0x31, 0x43, 0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73,
		0x74, 0x2d, 0x46, 0x32, 0x46, 0x32, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x78, 0x6f, 0x43, 0x58, 0x2d,
		0x31, 0x30, 0x34, 0x35, 0x20, 0x33, 0x47, 0x47, 0x58, 0x2d, 0x31, 0x30, 0x33, 0x35, 0x20, 0x34,
		0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x54, 0x31, 0x31, 0x36, 0x30, 0x20, 0x34, 0x47,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42, 0x31, 0x30, 0x35, 0x20, 0x33, 0x47, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x42, 0x31, 0x30, 0x38, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x4b, 0x54, 0x31, 0x30, 0x37, 0x20, 0x33, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54,
		0x31, 0x30, 0x39, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54, 0x37, 0x31,
		0x35, 0x20, 0x33, 0x47, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4b, 0x54, 0x39, 0x39, 0x35, 0x20, 0x33,
		0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54, 0x31, 0x31, 0x30, 0x30, 0x47, 0x54, 0x43,
		0x6f, 0x6f, 0x6c, 0x70, 0x61, 0x64, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20,
		0x36, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x43, 0x37, 0x43, 0x6f, 0x6f,
		0x6c, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x37, 0x4e, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52,
		0x45, 0x56, 0x56, 0x4c, 0x50, 0x4c, 0x55, 0x53, 0x20, 0x43, 0x33, 0x37, 0x30, 0x31, 0x41, 0x52,
		0x45, 0x56, 0x56, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x50, 0x33, 0x36, 0x36, 0x37, 0x41,
		0x54, 0x54, 0x61, 0x73, 0x6b, 0x65, 0x72, 0x38, 0x31, 0x39, 0x30, 0x51, 0x31, 0x38, 0x32, 0x35,
		0x2d, 0x45, 0x30, 0x4e, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x35, 0x43, 0x42, 0x65, 0x6c,
		0x6c, 0x61, 0x7a, 0x61, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79,
		0x20, 0x53, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x53, 0x20, 0x53, 0x52, 0x4c, 0x65, 0x67,
		0x61, 0x63, 0x79, 0x20, 0x42, 0x72, 0x69, 0x73, 0x61, 0x53, 0x75, 0x76, 0x61, 0x4e, 0x32, 0x4d,
		0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x31, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x53, 0x43, 0x6f, 0x6f, 0x6c,
		0x20, 0x53, 0x31, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x35, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x33, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x33, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x39,
		0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x39, 0x53, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x32, 0x30, 0x43, 0x6f,
		0x6f, 0x6c, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x32, 0x36, 0x41, 0x72, 0x69, 0x73, 0x65,
		0x31, 0x30, 0x41, 0x45, 0x35, 0x30, 0x31, 0x4d, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x45, 0x35, 0x30,
		0x32, 0x4d, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x20, 0x32, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x36, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6f, 0x70, 0x65,
		0x72, 0x73, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x74, 0x65,
		0x5f, 0x4d, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x54, 0x61, 0x62, 0x4d, 0x79, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x54, 0x61, 0x62, 0x43, 0x6f, 0x76, 0x69, 0x61, 0x43, 0x72, 0x65, 0x73,
		0x63, 0x65, 0x6e, 0x74, 0x57, 0x49, 0x4e, 0x47, 0x20, 0x35, 0x57, 0x69, 0x6e, 0x67, 0x20, 0x35,
		0x57, 0x49, 0x4e, 0x47, 0x39, 0x57, 0x69, 0x6e, 0x67, 0x20, 0x39, 0x56, 0x65, 0x6e, 0x75, 0x73,
		0x20, 0x24, 0x31, 0x43, 0x72, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x4c, 0x31, 0x30, 0x31, 0x41,
		0x45, 0x44, 0x65, 0x62, 0x75, 0x74, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x45, 0x43, 0x32, 0x31,
		0x31, 0x30, 0x30, 0x31, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x35, 0x47, 0x55, 0x33, 0x30, 0x34,
		0x41, 0x43, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x33, 0x32, 0x35, 0x41, 0x43, 0x49, 0x63, 0x6f, 0x6e,
		0x20, 0x32, 0x45, 0x43, 0x32, 0x31, 0x31, 0x30, 0x30, 0x32, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x33,
		0x57, 0x54, 0x43, 0x4b, 0x54, 0x30, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x34, 0x56, 0x33, 0x35,
		0x30, 0x43, 0x49, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x45, 0x43, 0x32, 0x31, 0x31,
		0x30, 0x30, 0x34, 0x49, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x65, 0x20, 0x35, 0x47, 0x55, 0x37,
		0x30, 0x35, 0x41, 0x43, 0x4f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x43, 0x31, 0x30, 0x30,
		0x32, 0x4f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x45, 0x43, 0x32, 0x31, 0x31, 0x30,
		0x30, 0x33, 0x53, 0x70, 0x6c, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x53, 0x4c, 0x31, 0x30, 0x30, 0x45,
		0x41, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x72, 0x69, 0x75,
		0x73, 0x20, 0x4d, 0x65, 0x61, 0x43, 0x72, 0x6f, 0x6e, 0x79, 0x37, 0x30, 0x32, 0x31, 0x43, 0x72,
		0x6f, 0x73, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x58, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x58, 0x24, 0x31, 0x43, 0x6f,
		0x72, 0x65, 0x2d, 0x24, 0x31, 0x20, 0x47, 0x6f, 0x43, 0x6f, 0x72, 0x65, 0x2d, 0x24, 0x31, 0x4f,
		0x44, 0x59, 0x53, 0x53, 0x45, 0x59, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x44, 0x59, 0x53, 0x53,
		0x45, 0x59, 0x2b, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x53, 0x31, 0x4f, 0x44, 0x59,
		0x53, 0x53, 0x45, 0x59, 0x20, 0x53, 0x31, 0x54, 0x72, 0x65, 0x6b, 0x6b, 0x65, 0x72, 0x2d, 0x24,
		0x31, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x65, 0x6b, 0x6b, 0x65, 0x72, 0x2d, 0x24, 0x31,
		0x43, 0x6f, 0x72, 0x65, 0x2d, 0x54, 0x24, 0x31, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x42, 0x6c, 0x6f,
		0x73, 0x73, 0x6f, 0x6d, 0x42, 0x39, 0x30, 0x32, 0x42, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x20,
		0x42, 0x39, 0x30, 0x32, 0x43, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x71, 0x53, 0x4e, 0x4f, 0x4f, 0x4b,
		0x2d, 0x58, 0x31, 0x30, 0x53, 0x6e, 0x6f, 0x6f, 0x6b, 0x20, 0x58, 0x31, 0x30, 0x43, 0x75, 0x62,
		0x65, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x38, 0x58, 0x55, 0x32, 0x35, 0x47, 0x54, 0x55, 0x33, 0x30,
		0x47, 0x54, 0x32, 0x55, 0x32, 0x37, 0x47, 0x54, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x38, 0x55, 0x35,
		0x35, 0x47, 0x54, 0x5f, 0x43, 0x38, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x37, 0x39, 0x54, 0x61, 0x6c,
		0x6b, 0x20, 0x37, 0x58, 0x55, 0x33, 0x31, 0x47, 0x54, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x31, 0x30,
		0x54, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x55, 0x35, 0x35, 0x47, 0x54,
		0x54, 0x31, 0x30, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x55, 0x36, 0x35, 0x47, 0x54, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x39, 0x58, 0x69, 0x57, 0x6f, 0x72,
		0x6b, 0x20, 0x38, 0x20, 0x41, 0x69, 0x72, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x38, 0x20, 0x33,
		0x47, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74,
		0x65, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61,
		0x74, 0x65, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20,
		0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x46,
		0x6c, 0x61, 0x67, 0x73, 0x68, 0x69, 0x70, 0x54, 0x39, 0x37, 0x30, 0x20, 0x34, 0x47, 0x43, 0x77,
		0x6f, 0x77, 0x64, 0x65, 0x66, 0x75, 0x43, 0x37, 0x30, 0x57, 0x43, 0x79, 0x72, 0x75, 0x73, 0x43,
		0x4d, 0x31, 0x37, 0x58, 0x41, 0x43, 0x53, 0x24, 0x31, 0x20, 0x58, 0x41, 0x44, 0x2d, 0x4c, 0x69,
		0x6e, 0x6b, 0x44, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x44, 0x54, 0x30, 0x37, 0x2d, 0x54, 0x41, 0x42,
		0x34, 0x47, 0x44, 0x54, 0x30, 0x37, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x47, 0x44, 0x41, 0x53,
		0x53, 0x44, 0x45, 0x41, 0x4c, 0x44, 0x49, 0x47, 0x44, 0x45, 0x58, 0x50, 0x49, 0x78, 0x69, 0x6f,
		0x6e, 0x20, 0x24, 0x31, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x45, 0x53, 0x32, 0x35, 0x30, 0x20,
		0x52, 0x61, 0x67, 0x65, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x4c, 0x20, 0x34, 0x2e, 0x37,
		0x22, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x45, 0x53, 0x32, 0x20, 0x35, 0x49, 0x78, 0x69, 0x6f,
		0x6e, 0x20, 0x45, 0x53, 0x32, 0x20, 0x35, 0x22, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x31,
		0x35, 0x30, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x34,
		0x34, 0x35, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x32, 0x34, 0x2e, 0x35, 0x22, 0x20, 0x41, 0x4c,
		0x32, 0x35, 0x30, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x41, 0x4c, 0x33, 0x35, 0x30, 0x35, 0x2e, 0x34,
		0x35, 0x22, 0x20, 0x41, 0x53, 0x31, 0x35, 0x35, 0x35, 0x2e, 0x38, 0x35, 0x22, 0x20, 0x41, 0x53,
		0x32, 0x36, 0x30, 0x36, 0x2e, 0x32, 0x32, 0x22, 0x20, 0x41, 0x53, 0x33, 0x36, 0x30, 0x55, 0x72,
		0x73, 0x75, 0x73, 0x20, 0x39, 0x45, 0x56, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x47, 0x55,
		0x72, 0x73, 0x75, 0x73, 0x20, 0x39, 0x45, 0x56, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x47,
		0x55, 0x72, 0x73, 0x75, 0x73, 0x20, 0x24, 0x31, 0x24, 0x31, 0x20, 0x28, 0x24, 0x32, 0x29, 0x53,
		0x65, 0x6e, 0x69, 0x6f, 0x72, 0x4c, 0x61, 0x72, 0x75, 0x73, 0x5f, 0x54, 0x56, 0x31, 0x46, 0x72,
		0x65, 0x79, 0x61, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x44, 0x45, 0x59, 0x49, 0x44, 0x46, 0x4a, 0x41,
		0x47, 0x55, 0x41, 0x52, 0x2d, 0x30, 0x31, 0x4a, 0x61, 0x67, 0x75, 0x61, 0x72, 0x20, 0x30, 0x31,
		0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x24, 0x31, 0x54, 0x49, 0x47, 0x45, 0x52, 0x2d, 0x30,
		0x31, 0x54, 0x69, 0x67, 0x65, 0x72, 0x20, 0x30, 0x31, 0x50, 0x55, 0x4d, 0x41, 0x2d, 0x30, 0x31,
		0x50, 0x75, 0x6d, 0x61, 0x20, 0x30, 0x31, 0x44, 0x47, 0x54, 0x45, 0x43, 0x44, 0x47, 0x31, 0x30,
		0x31, 0x54, 0x42, 0x49, 0x50, 0x53, 0x44, 0x49, 0x47, 0x49, 0x43, 0x4f, 0x4d, 0x44, 0x54, 0x6f,
		0x6b, 0x44, 0x49, 0x47, 0x49, 0x46, 0x4f, 0x52, 0x53, 0x44, 0x49, 0x4a, 0x49, 0x54, 0x53, 0x55,
		0x44, 0x49, 0x4a, 0x49, 0x54, 0x53, 0x55, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x41, 0x31,
		0x31, 0x73, 0x44, 0x49, 0x4d, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x20, 0x44, 0x49, 0x4e, 0x47, 0x44,
		0x49, 0x53, 0x48, 0x57, 0x54, 0x43, 0x45, 0x4c, 0x45, 0x52, 0x4f, 0x35, 0x47, 0x43, 0x65, 0x6c,
		0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x44, 0x49, 0x58, 0x4f, 0x4e, 0x48, 0x4b, 0x37, 0x2d, 0x33,
		0x35, 0x30, 0x32, 0x53, 0x6f, 0x6c, 0x69, 0x73, 0x44, 0x4e, 0x36, 0x30, 0x31, 0x35, 0x41, 0x73,
		0x74, 0x72, 0x75, 0x6d, 0x54, 0x53, 0x2d, 0x24, 0x31, 0x2d, 0x31, 0x54, 0x53, 0x5f, 0x4d, 0x31,
		0x30, 0x33, 0x41, 0x54, 0x53, 0x2d, 0x4d, 0x31, 0x30, 0x33, 0x41, 0x58, 0x4b, 0x31, 0x20, 0x33,
		0x47, 0x44, 0x4c, 0x59, 0x5a, 0x55, 0x20, 0x44, 0x53, 0x35, 0x33, 0x48, 0x6f, 0x72, 0x69, 0x7a,
		0x6f, 0x6e, 0x20, 0x48, 0x38, 0x44, 0x4c, 0x5f, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x5f,
		0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x20, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x44, 0x4c, 0x5f, 0x33, 0x39,
		0x31, 0x30, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x44, 0x4e,
		0x53, 0x53, 0x34, 0x30, 0x30, 0x33, 0x41, 0x69, 0x72, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x44,
		0x4f, 0x52, 0x4c, 0x41, 0x4e, 0x44, 0x44, 0x50, 0x41, 0x44, 0x50, 0x41, 0x5f, 0x5a, 0x45, 0x54,
		0x41, 0x5a, 0x65, 0x74, 0x61, 0x44, 0x52, 0x41, 0x47, 0x4f, 0x4e, 0x44, 0x53, 0x44, 0x65, 0x76,
		0x69, 0x63, 0x65, 0x73, 0x44, 0x53, 0x49, 0x43, 0x44, 0x55, 0x4e, 0x4e, 0x53, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x65, 0x77, 0x6f, 0x6f, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
		0x65, 0x20, 0x37, 0x50, 0x44, 0x61, 0x6e, 0x65, 0x77, 0x4b, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
		0x20, 0x24, 0x31, 0x47, 0x45, 0x4f, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5f, 0x41, 0x35, 0x47, 0x65,
		0x6f, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x41, 0x35, 0x44, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24,
		0x31, 0x44, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x24, 0x31, 0x44, 0x61, 0x6e, 0x67, 0x63, 0x61,
		0x70, 0x48, 0x44, 0x44, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x61, 0x6e, 0x79, 0x4d, 0x6f, 0x6e,
		0x73, 0x74, 0x65, 0x72, 0x20, 0x34, 0x47, 0x58, 0x58, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72,
		0x20, 0x34, 0x47, 0x44, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x4d, 0x65, 0x6d, 0x6f,
		0x72, 0x20, 0x24, 0x31, 0x44, 0x61, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x69, 0x44, 0x61, 0x74, 0x61,
		0x6e, 0x67, 0x44, 0x41, 0x54, 0x41, 0x4e, 0x47, 0x44, 0x61, 0x74, 0x61, 0x77, 0x69, 0x6e, 0x64,
		0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x53, 0x75, 0x72, 0x66, 0x65, 0x72, 0x20, 0x33, 0x47,
		0x35, 0x44, 0x57, 0x2d, 0x55, 0x42, 0x54, 0x37, 0x57, 0x55, 0x62, 0x69, 0x73, 0x6c, 0x61, 0x74,
		0x65, 0x20, 0x37, 0x57, 0x44, 0x61, 0x74, 0x73, 0x75, 0x6e, 0x44, 0x41, 0x54, 0x53, 0x55, 0x4e,
		0x44, 0x41, 0x54, 0x53, 0x55, 0x4e, 0x5f, 0x44, 0x35, 0x35, 0x30, 0x30, 0x44, 0x35, 0x35, 0x30,
		0x30, 0x44, 0x61, 0x74, 0x73, 0x75, 0x6e, 0x5f, 0x44, 0x35, 0x30, 0x30, 0x31, 0x44, 0x35, 0x30,
		0x30, 0x31, 0x44, 0x61, 0x7a, 0x65, 0x6e, 0x64, 0x61, 0x7a, 0x65, 0x6e, 0x36, 0x41, 0x44, 0x62,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x44, 0x42, 0x38, 0x50, 0x4c, 0x55, 0x53, 0x44, 0x42, 0x38, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x44, 0x62, 0x74, 0x65, 0x6c, 0x44, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x53,
		0x2d, 0x43, 0x52, 0x31, 0x43, 0x79, 0x70, 0x68, 0x65, 0x72, 0x44, 0x53, 0x2d, 0x43, 0x4c, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x43, 0x79, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x44, 0x53, 0x2d, 0x42, 0x44, 0x31, 0x42, 0x6f, 0x6c, 0x64, 0x44, 0x65, 0x57, 0x61, 0x6c, 0x74,
		0x44, 0x65, 0x6c, 0x6c, 0x58, 0x43, 0x44, 0x33, 0x35, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x20, 0x24,
		0x31, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x56,
		0x6f, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f,
		0x6f, 0x6b, 0x20, 0x24, 0x31, 0x44, 0x65, 0x6e, 0x61, 0x6c, 0x69, 0x45, 0x2d, 0x54, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x44, 0x65, 0x6e, 0x76, 0x65, 0x72, 0x54, 0x41, 0x51, 0x2d, 0x24, 0x31, 0x53,
		0x44, 0x51, 0x2d, 0x24, 0x31, 0x44, 0x65, 0x73, 0x61, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
		0x44, 0x69, 0x63, 0x61, 0x6d, 0x44, 0x69, 0x67, 0x69, 0x44, 0x69, 0x67, 0x69, 0x63, 0x65, 0x6c,
		0x44, 0x4c, 0x33, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x44, 0x4c, 0x33, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x4c, 0x33, 0x44, 0x4c, 0x24, 0x31, 0x44, 0x4c, 0x38,
		0x31, 0x30, 0x44, 0x69, 0x67, 0x69, 0x64, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x44, 0x69, 0x67, 0x69,
		0x68, 0x6f, 0x6d, 0x65, 0x44, 0x69, 0x67, 0x69, 0x6c, 0x61, 0x6e, 0x64, 0x44, 0x4c, 0x31, 0x30,
		0x30, 0x38, 0x4d, 0x44, 0x69, 0x67, 0x69, 0x74, 0x34, 0x47, 0x50, 0x6c, 0x61, 0x79, 0x31, 0x44,
		0x69, 0x67, 0x6d, 0x61, 0x48, 0x49, 0x54, 0x20, 0x33, 0x47, 0x69, 0x44, 0x78, 0x35, 0x48, 0x54,
		0x35, 0x30, 0x33, 0x35, 0x50, 0x47, 0x48, 0x49, 0x54, 0x20, 0x51, 0x35, 0x30, 0x30, 0x20, 0x33,
		0x47, 0x48, 0x54, 0x34, 0x30, 0x33, 0x39, 0x50, 0x47, 0x48, 0x49, 0x54, 0x20, 0x51, 0x34, 0x30,
		0x31, 0x20, 0x33, 0x47, 0x56, 0x53, 0x35, 0x30, 0x33, 0x37, 0x50, 0x4c, 0x56, 0x4f, 0x58, 0x20,
		0x46, 0x69, 0x72, 0x65, 0x20, 0x34, 0x47, 0x50, 0x53, 0x36, 0x30, 0x34, 0x4d, 0x4c, 0x69, 0x6e,
		0x78, 0x20, 0x36, 0x2e, 0x30, 0x4c, 0x54, 0x34, 0x30, 0x34, 0x39, 0x50, 0x47, 0x4c, 0x69, 0x6e,
		0x78, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x33, 0x47, 0x4c, 0x54, 0x35, 0x30, 0x34, 0x38, 0x4d,
		0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x4a, 0x6f, 0x79, 0x20, 0x33, 0x47, 0x4c, 0x54, 0x35, 0x30,
		0x35, 0x32, 0x4d, 0x4c, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x34, 0x47,
		0x4c, 0x54, 0x34, 0x30, 0x34, 0x37, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x41, 0x6c, 0x66,
		0x61, 0x20, 0x33, 0x47, 0x4c, 0x53, 0x34, 0x30, 0x35, 0x30, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78,
		0x20, 0x58, 0x31, 0x20, 0x33, 0x47, 0x4c, 0x53, 0x34, 0x30, 0x35, 0x31, 0x4d, 0x47, 0x4c, 0x69,
		0x6e, 0x78, 0x20, 0x58, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x4c, 0x54, 0x34, 0x30,
		0x35, 0x34, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x41, 0x72, 0x67, 0x6f, 0x20, 0x33, 0x47,
		0x4c, 0x53, 0x35, 0x30, 0x34, 0x31, 0x50, 0x4c, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x54, 0x72, 0x69,
		0x78, 0x20, 0x34, 0x47, 0x4c, 0x53, 0x35, 0x30, 0x34, 0x30, 0x50, 0x4c, 0x4c, 0x69, 0x6e, 0x78,
		0x20, 0x52, 0x61, 0x67, 0x65, 0x20, 0x34, 0x47, 0x4c, 0x53, 0x35, 0x30, 0x35, 0x33, 0x4d, 0x4c,
		0x4c, 0x69, 0x6e, 0x78, 0x20, 0x50, 0x61, 0x79, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20,
		0x24, 0x31, 0x20, 0x33, 0x47, 0x50, 0x54, 0x34, 0x35, 0x32, 0x45, 0x4c, 0x69, 0x6e, 0x78, 0x20,
		0x34, 0x2e, 0x35, 0x43, 0x49, 0x54, 0x49, 0x20, 0x41, 0x54, 0x4c, 0x20, 0x34, 0x47, 0x20, 0x43,
		0x53, 0x35, 0x30, 0x32, 0x39, 0x4d, 0x4c, 0x43, 0x49, 0x54, 0x49, 0x20, 0x41, 0x54, 0x4c, 0x20,
		0x34, 0x47, 0x54, 0x53, 0x37, 0x38, 0x35, 0x34, 0x4d, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x38,
		0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x52, 0x53, 0x31, 0x32, 0x34, 0x39, 0x50, 0x4c, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x38, 0x30, 0x30, 0x46, 0x20, 0x34, 0x47, 0x50, 0x53, 0x31, 0x30, 0x34, 0x33,
		0x4d, 0x47, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x33, 0x22, 0x20, 0x33, 0x47,
		0x54, 0x53, 0x31, 0x30, 0x31, 0x32, 0x45, 0x20, 0x33, 0x47, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x69, 0x44, 0x78, 0x38, 0x4d, 0x56, 0x4d, 0x39,
		0x30, 0x38, 0x48, 0x43, 0x5a, 0x69, 0x44, 0x78, 0x39, 0x48, 0x49, 0x54, 0x20, 0x34, 0x47, 0x20,
		0x48, 0x54, 0x37, 0x30, 0x37, 0x34, 0x4d, 0x4c, 0x48, 0x49, 0x54, 0x20, 0x34, 0x47, 0x49, 0x44,
		0x73, 0x44, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x43, 0x49, 0x54, 0x49, 0x20, 0x24, 0x31, 0x57,
		0x53, 0x31, 0x32, 0x36, 0x32, 0x52, 0x57, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x31, 0x32, 0x31, 0x30,
		0x42, 0x69, 0x44, 0x78, 0x44, 0x38, 0x20, 0x33, 0x47, 0x44, 0x2d, 0x50, 0x6c, 0x61, 0x6e, 0x65,
		0x32, 0x20, 0x38, 0x4e, 0x53, 0x36, 0x39, 0x30, 0x32, 0x51, 0x4c, 0x50, 0x6c, 0x61, 0x74, 0x69,
		0x6e, 0x61, 0x20, 0x37, 0x2e, 0x32, 0x20, 0x34, 0x47, 0x4e, 0x53, 0x39, 0x37, 0x39, 0x37, 0x4d,
		0x47, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x61, 0x20, 0x37, 0x2e, 0x32, 0x20, 0x33, 0x47, 0x54,
		0x54, 0x31, 0x30, 0x30, 0x34, 0x50, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x31, 0x30,
		0x2e, 0x34, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x31, 0x30, 0x30, 0x32, 0x4d, 0x47, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x61, 0x20, 0x44, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x33, 0x47, 0x54,
		0x54, 0x37, 0x30, 0x32, 0x35, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e,
		0x35, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x37, 0x30, 0x32, 0x36, 0x4d, 0x57, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e, 0x36, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x37, 0x30, 0x32,
		0x30, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e, 0x33, 0x22, 0x20, 0x33,
		0x47, 0x54, 0x54, 0x37, 0x30, 0x32, 0x34, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20,
		0x37, 0x2e, 0x34, 0x22, 0x20, 0x33, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x24, 0x31,
		0x20, 0x24, 0x32, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47,
		0x69, 0x44, 0x24, 0x31, 0x51, 0x24, 0x32, 0x20, 0x33, 0x47, 0x69, 0x44, 0x24, 0x31, 0x51, 0x24,
		0x32, 0x54, 0x53, 0x37, 0x32, 0x30, 0x33, 0x52, 0x57, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20,
		0x4b, 0x69, 0x64, 0x73, 0x20, 0x37, 0x54, 0x54, 0x37, 0x30, 0x30, 0x30, 0x4d, 0x47, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x61, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x33, 0x47, 0x38, 0x34, 0x30,
		0x32, 0x44, 0x20, 0x34, 0x47, 0x31, 0x34, 0x30, 0x32, 0x44, 0x20, 0x34, 0x47, 0x20, 0x57, 0x53,
		0x31, 0x32, 0x35, 0x30, 0x50, 0x4c, 0x31, 0x34, 0x30, 0x32, 0x44, 0x20, 0x34, 0x47, 0x52, 0x53,
		0x31, 0x32, 0x36, 0x37, 0x50, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x34, 0x38, 0x30, 0x45, 0x20,
		0x34, 0x47, 0x44, 0x69, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x24,
		0x31, 0x56, 0x52, 0x20, 0x4c, 0x34, 0x32, 0x44, 0x4d, 0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31, 0x44,
		0x69, 0x6e, 0x61, 0x78, 0x44, 0x58, 0x20, 0x54, 0x41, 0x20, 0x24, 0x31, 0x44, 0x69, 0x73, 0x6e,
		0x65, 0x79, 0x54, 0x6f, 0x79, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x4f, 0x59, 0x20, 0x53,
		0x54, 0x4f, 0x52, 0x59, 0x44, 0x69, 0x74, 0x65, 0x63, 0x6d, 0x61, 0x44, 0x69, 0x76, 0x61, 0x44,
		0x69, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x65, 0x64, 0x42, 0x6f, 0x78, 0x20,
		0x33, 0x44, 0x69, 0x76, 0x69, 0x73, 0x61, 0x74, 0x58, 0x2d, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x54, 0x2d, 0x49, 0x49, 0x44, 0x6f, 0x43, 0x6f, 0x4d, 0x6f,
		0x44, 0x6f, 0x66, 0x66, 0x6c, 0x65, 0x72, 0x44, 0x6f, 0x6c, 0x61, 0x6d, 0x65, 0x65, 0x44, 0x6f,
		0x6d, 0x2e, 0x72, 0x75, 0x44, 0x6f, 0x6f, 0x67, 0x65, 0x65, 0x56, 0x20, 0x4d, 0x61, 0x78, 0x56,
		0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x32, 0x20, 0x59, 0x31, 0x30, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x32, 0x20, 0x59, 0x31, 0x30, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x32, 0x20, 0x59, 0x31,
		0x30, 0x30, 0x4c, 0x65, 0x6f, 0x20, 0x24, 0x31, 0x49, 0x72, 0x6f, 0x6e, 0x20, 0x42, 0x6f, 0x6e,
		0x65, 0x20, 0x24, 0x31, 0x58, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x24, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x42, 0x4c, 0x31, 0x32, 0x30, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x42, 0x4c, 0x31,
		0x32, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42,
		0x4c, 0x35, 0x35, 0x30, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x4c, 0x31, 0x32, 0x30, 0x30,
		0x30, 0x53, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x53, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x39, 0x36, 0x47, 0x54, 0x53, 0x39, 0x36,
		0x20, 0x47, 0x54, 0x4b, 0x49, 0x53, 0x53, 0x4d, 0x45, 0x2d, 0x44, 0x47, 0x35, 0x38, 0x30, 0x4b,
		0x69, 0x73, 0x73, 0x6d, 0x65, 0x20, 0x44, 0x47, 0x35, 0x38, 0x30, 0x48, 0x69, 0x74, 0x6d, 0x61,
		0x6e, 0x5f, 0x44, 0x47, 0x38, 0x35, 0x30, 0x48, 0x69, 0x74, 0x6d, 0x61, 0x6e, 0x20, 0x44, 0x47,
		0x35, 0x38, 0x30, 0x58, 0x39, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x78, 0x35, 0x5f, 0x64, 0x6f, 0x6f,
		0x67, 0x65, 0x65, 0x58, 0x35, 0x54, 0x35, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x35, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x58, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x6d,
		0x61, 0x78, 0x5f, 0x53, 0x58, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x53, 0x53, 0x68, 0x6f, 0x6f,
		0x74, 0x20, 0x24, 0x31, 0x49, 0x62, 0x69, 0x7a, 0x61, 0x5f, 0x46, 0x32, 0x49, 0x62, 0x69, 0x7a,
		0x61, 0x20, 0x46, 0x32, 0x59, 0x36, 0x5f, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x5f, 0x62, 0x6c, 0x61,
		0x63, 0x6b, 0x59, 0x36, 0x20, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x59, 0x36, 0x5f, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x59, 0x36, 0x20, 0x50, 0x69, 0x61, 0x6e, 0x6f,
		0x59, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x33, 0x44, 0x59, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x59,
		0x37, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x36, 0x70, 0x72,
		0x6f, 0x54, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x47, 0x35, 0x35, 0x30, 0x44, 0x47, 0x35, 0x35,
		0x30, 0x20, 0x44, 0x61, 0x67, 0x67, 0x65, 0x72, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x5f, 0x6d, 0x69,
		0x6e, 0x69, 0x5f, 0x46, 0x31, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x46, 0x31, 0x59, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x69, 0x78, 0x20, 0x32, 0x44,
		0x6f, 0x6f, 0x70, 0x72, 0x6f, 0x50, 0x33, 0x44, 0x6f, 0x6f, 0x76, 0x58, 0x31, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x6f, 0x70,
		0x6f, 0x64, 0x44, 0x6f, 0x70, 0x70, 0x69, 0x6f, 0x44, 0x6f, 0x70, 0x70, 0x69, 0x6f, 0x20, 0x44,
		0x50, 0x33, 0x35, 0x35, 0x44, 0x6f, 0x72, 0x6f, 0x38, 0x30, 0x35, 0x30, 0x38, 0x30, 0x38, 0x30,
		0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4d, 0x41, 0x58, 0x20,
		0x31, 0x30, 0x4d, 0x61, 0x78, 0x20, 0x31, 0x30, 0x54, 0x31, 0x32, 0x4d, 0x4e, 0x6f, 0x74, 0x65,
		0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x44,
		0x72, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x62, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x67, 0x61, 0x74, 0x65,
		0x53, 0x65, 0x6e, 0x73, 0x20, 0x35, 0x44, 0x72, 0x6f, 0x78, 0x69, 0x6f, 0x44, 0x74, 0x61, 0x63,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x44, 0x75, 0x6e, 0x65, 0x20, 0x48, 0x44, 0x53,
		0x6f, 0x6c, 0x6f, 0x20, 0x34, 0x6b, 0x44, 0x75, 0x72, 0x61, 0x62, 0x6f, 0x6f, 0x6b, 0x44, 0x75,
		0x75, 0x62, 0x65, 0x65, 0x45, 0x2d, 0x42, 0x6f, 0x64, 0x61, 0x52, 0x65, 0x76, 0x6f, 0x20, 0x52,
		0x37, 0x37, 0x20, 0x47, 0x50, 0x53, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x20, 0x24, 0x31,
		0x45, 0x2d, 0x43, 0x65, 0x72, 0x6f, 0x73, 0x52, 0x65, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
		0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x48, 0x44, 0x45, 0x2d,
		0x74, 0x65, 0x6c, 0x69, 0x24, 0x31, 0x4e, 0x24, 0x31, 0x43, 0x75, 0x72, 0x69, 0x6f, 0x73, 0x69,
		0x74, 0x79, 0x20, 0x4f, 0x39, 0x51, 0x34, 0x45, 0x42, 0x45, 0x4e, 0x45, 0x42, 0x45, 0x53, 0x54,
		0x45, 0x43, 0x4f, 0x4e, 0x45, 0x43, 0x4f, 0x4f, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x45, 0x43, 0x53, 0x54, 0x41, 0x31, 0x30,
		0x43, 0x41, 0x33, 0x54, 0x4d, 0x31, 0x30, 0x35, 0x41, 0x54, 0x4d, 0x31, 0x30, 0x35, 0x45, 0x45,
		0x52, 0x6f, 0x63, 0x6b, 0x45, 0x46, 0x54, 0x45, 0x47, 0x4c, 0x45, 0x47, 0x4c, 0x31, 0x31, 0x51,
		0x46, 0x36, 0x31, 0x31, 0x51, 0x46, 0x36, 0x45, 0x4b, 0x49, 0x4e, 0x4f, 0x58, 0x45, 0x38, 0x5f,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x45, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x45, 0x4b, 0x4f,
		0x45, 0x4b, 0x4f, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x32,
		0x4b, 0x32, 0x4b, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x53, 0x74,
		0x61, 0x72, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x45, 0x4b, 0x54, 0x45, 0x4b, 0x2d, 0x24, 0x31,
		0x45, 0x4c, 0x41, 0x52, 0x49, 0x4b, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x47,
		0x45, 0x4e, 0x41, 0x43, 0x4f, 0x4d, 0x45, 0x4e, 0x49, 0x45, 0x45, 0x34, 0x20, 0x50, 0x72, 0x6f,
		0x45, 0x56, 0x50, 0x41, 0x44, 0x45, 0x56, 0x42, 0x6f, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45,
		0x57, 0x49, 0x53, 0x4f, 0x43, 0x54, 0x41, 0x20, 0x54, 0x37, 0x32, 0x30, 0x51, 0x4f, 0x63, 0x74,
		0x61, 0x20, 0x54, 0x37, 0x32, 0x30, 0x51, 0x4f, 0x43, 0x54, 0x41, 0x2d, 0x54, 0x37, 0x30, 0x30,
		0x4d, 0x2d, 0x54, 0x32, 0x4f, 0x63, 0x74, 0x61, 0x20, 0x54, 0x37, 0x30, 0x30, 0x4d, 0x20, 0x54,
		0x32, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x58, 0x4f, 0x45, 0x59, 0x55, 0x45, 0x61, 0x67,
		0x6c, 0x65, 0x45, 0x61, 0x73, 0x79, 0x70, 0x69, 0x78, 0x45, 0x61, 0x73, 0x79, 0x50, 0x61, 0x64,
		0x20, 0x24, 0x31, 0x45, 0x63, 0x68, 0x6f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73, 0x45,
		0x43, 0x48, 0x4f, 0x5f, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x54, 0x45,
		0x48, 0x4f, 0x52, 0x49, 0x5a, 0x4f, 0x4e, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x54, 0x45, 0x4c,
		0x4c, 0x41, 0x52, 0x20, 0x24, 0x31, 0x47, 0x45, 0x43, 0x48, 0x4f, 0x5f, 0x53, 0x4d, 0x41, 0x52,
		0x54, 0x5f, 0x34, 0x47, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x34, 0x47, 0x45, 0x69, 0x6e, 0x73,
		0x74, 0x65, 0x69, 0x6e, 0x45, 0x6b, 0x73, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
		0x58, 0x34, 0x55, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x34, 0x55, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45,
		0x6c, 0x65, 0x63, 0x73, 0x6f, 0x6e, 0x4d, 0x65, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4f, 0x6e,
		0x65, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x65, 0x75, 0x6d, 0x45, 0x6c, 0x65, 0x6b,
		0x74, 0x61, 0x24, 0x31, 0x22, 0x20, 0x46, 0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x35, 0x35, 0x22, 0x20, 0x55, 0x48, 0x44, 0x20, 0x43, 0x75,
		0x72, 0x76, 0x65, 0x64, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54,
		0x56, 0x24, 0x31, 0x22, 0x20, 0x55, 0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x54, 0x56, 0x24, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41,
		0x46, 0x54, 0x52, 0x53, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x34, 0x4b, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x45, 0x6c, 0x65, 0x6e, 0x62, 0x65, 0x72, 0x67, 0x45, 0x6c, 0x65,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x56, 0x6f, 0x77, 0x6e, 0x65, 0x79,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x6f, 0x77, 0x6e, 0x65, 0x79, 0x50, 0x36, 0x30, 0x30, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x30, 0x32, 0x50, 0x36, 0x30,
		0x30, 0x30, 0x20, 0x30, 0x31, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6f,
		0x6c, 0x64, 0x69, 0x65, 0x72, 0x41, 0x36, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x38, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x55, 0x33, 0x48, 0x43, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x58, 0x45, 0x6c,
		0x65, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6e, 0x61,
		0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x45, 0x6c, 0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x45, 0x6c, 0x74, 0x65, 0x78, 0x4e, 0x56, 0x2d, 0x24, 0x31, 0x2d, 0x57,
		0x61, 0x63, 0x4e, 0x56, 0x2d, 0x35, 0x30, 0x31, 0x4e, 0x56, 0x2d, 0x24, 0x31, 0x2d, 0x57, 0x42,
		0x45, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x45, 0x6d, 0x70, 0x6f, 0x72, 0x69, 0x61, 0x53, 0x33, 0x6d,
		0x69, 0x6e, 0x69, 0x53, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x69,
		0x7a, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x24, 0x31, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x20, 0x34, 0x30, 0x30, 0x53, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x34, 0x30, 0x30,
		0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x34, 0x30, 0x30, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
		0x20, 0x53, 0x24, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x24, 0x31, 0x48, 0x61, 0x72,
		0x64, 0x20, 0x43, 0x61, 0x73, 0x65, 0x20, 0x24, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20,
		0x53, 0x69, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x24, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x24, 0x31, 0x20, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x69, 0x31, 0x30,
		0x20, 0x44, 0x55, 0x41, 0x4c, 0x69, 0x31, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x45, 0x6e, 0x67,
		0x65, 0x6c, 0x45, 0x6e, 0x6f, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x4e, 0x54, 0x31,
		0x31, 0x51, 0x46, 0x31, 0x32, 0x45, 0x6e, 0x76, 0x69, 0x7a, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x63,
		0x6b, 0x54, 0x61, 0x62, 0x20, 0x44, 0x53, 0x48, 0x31, 0x38, 0x45, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x45, 0x50, 0x31, 0x39, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x45, 0x50, 0x31, 0x39, 0x20, 0x53, 0x74,
		0x61, 0x72, 0x45, 0x50, 0x31, 0x39, 0x45, 0x70, 0x69, 0x63, 0x45, 0x70, 0x69, 0x6b, 0x20, 0x4f,
		0x6e, 0x65, 0x4b, 0x35, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x65, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x52, 0x53, 0x35, 0x35, 0x30, 0x4b, 0x35, 0x30, 0x31, 0x4c, 0x65, 0x6f, 0x4b,
		0x35, 0x30, 0x30, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4b, 0x35, 0x30,
		0x32, 0x4b, 0x35, 0x30, 0x33, 0x54, 0x4c, 0x65, 0x6f, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b,
		0x35, 0x30, 0x33, 0x53, 0x4c, 0x65, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x35, 0x30, 0x33, 0x48,
		0x44, 0x4c, 0x65, 0x6f, 0x20, 0x48, 0x44, 0x4b, 0x35, 0x30, 0x33, 0x4c, 0x65, 0x6f, 0x20, 0x4d,
		0x61, 0x78, 0x4b, 0x35, 0x30, 0x34, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x33, 0x47, 0x58, 0x35,
		0x30, 0x37, 0x54, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x49, 0x49, 0x4b, 0x35, 0x31, 0x30, 0x42,
		0x6f, 0x6c, 0x74, 0x4b, 0x35, 0x31, 0x31, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x4b,
		0x35, 0x33, 0x34, 0x48, 0x61, 0x64, 0x61, 0x4b, 0x35, 0x33, 0x35, 0x48, 0x61, 0x64, 0x61, 0x20,
		0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b, 0x35, 0x34, 0x35, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4b,
		0x35, 0x33, 0x36, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x4b, 0x35, 0x34, 0x30, 0x45, 0x78, 0x63, 0x61,
		0x6c, 0x69, 0x62, 0x75, 0x72, 0x58, 0x34, 0x30, 0x30, 0x50, 0x65, 0x62, 0x62, 0x6c, 0x65, 0x20,
		0x58, 0x34, 0x30, 0x30, 0x4b, 0x35, 0x37, 0x33, 0x50, 0x61, 0x6e, 0x74, 0x68, 0x65, 0x72, 0x4b,
		0x36, 0x30, 0x30, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x4b, 0x36, 0x30, 0x31, 0x4a, 0x75,
		0x70, 0x69, 0x74, 0x65, 0x72, 0x20, 0x4f, 0x6e, 0x65, 0x4b, 0x34, 0x30, 0x36, 0x50, 0x65, 0x62,
		0x62, 0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x34, 0x30, 0x35, 0x50, 0x65, 0x62, 0x62,
		0x6c, 0x65, 0x20, 0x49, 0x49, 0x54, 0x37, 0x30, 0x30, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65,
		0x45, 0x70, 0x73, 0x6f, 0x6e, 0x48, 0x41, 0x31, 0x34, 0x41, 0x20, 0x4c, 0x43, 0x44, 0x20, 0x50,
		0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x71, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x41,
		0x78, 0x69, 0x73, 0x45, 0x72, 0x67, 0x6f, 0x46, 0x35, 0x30, 0x31, 0x5f, 0x4d, 0x61, 0x67, 0x69,
		0x63, 0x46, 0x35, 0x30, 0x31, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x42, 0x35, 0x30, 0x32, 0x20,
		0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x35, 0x30, 0x33, 0x2d, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61,
		0x41, 0x35, 0x30, 0x33, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x42, 0x35, 0x30, 0x36, 0x20,
		0x49, 0x6e, 0x74, 0x72, 0x6f, 0x56, 0x35, 0x35, 0x30, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x42, 0x35, 0x30, 0x34, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x35, 0x30, 0x35, 0x5f, 0x55, 0x6e,
		0x69, 0x74, 0x5f, 0x34, 0x47, 0x42, 0x35, 0x30, 0x35, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x20, 0x34,
		0x47, 0x56, 0x35, 0x35, 0x31, 0x20, 0x41, 0x75, 0x72, 0x61, 0x56, 0x35, 0x34, 0x30, 0x5f, 0x4c,
		0x65, 0x76, 0x65, 0x6c, 0x56, 0x35, 0x34, 0x30, 0x20, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x56, 0x35,
		0x37, 0x30, 0x5f, 0x42, 0x49, 0x47, 0x5f, 0x42, 0x45, 0x4e, 0x56, 0x35, 0x37, 0x30, 0x20, 0x42,
		0x69, 0x67, 0x20, 0x42, 0x65, 0x6e, 0x45, 0x72, 0x67, 0x6f, 0x20, 0x46, 0x35, 0x30, 0x32, 0x46,
		0x35, 0x30, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x41, 0x35, 0x30, 0x30,
		0x20, 0x42, 0x65, 0x73, 0x74, 0x41, 0x35, 0x35, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x20, 0x42, 0x34, 0x30, 0x30, 0x41, 0x35, 0x30, 0x32, 0x20, 0x41, 0x75, 0x72,
		0x75, 0x6d, 0x41, 0x35, 0x35, 0x31, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x34, 0x47, 0x41, 0x35, 0x35,
		0x33, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x35, 0x35, 0x35, 0x20, 0x55, 0x6e, 0x69, 0x76,
		0x65, 0x72, 0x73, 0x65, 0x41, 0x35, 0x35, 0x36, 0x46, 0x35, 0x30, 0x30, 0x46, 0x35, 0x30, 0x31,
		0x42, 0x35, 0x30, 0x30, 0x20, 0x46, 0x69, 0x72, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20,
		0x46, 0x35, 0x30, 0x30, 0x47, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x47, 0x42, 0x54, 0x39, 0x47, 0x6f,
		0x54, 0x61, 0x62, 0x20, 0x47, 0x74, 0x69, 0x38, 0x47, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x47, 0x54,
		0x69, 0x38, 0x54, 0x61, 0x62, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x54, 0x61, 0x62, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x45, 0x52, 0x47,
		0x4f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x78, 0x20, 0x53, 0x58, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x42, 0x6f, 0x78, 0x20, 0x53, 0x58, 0x45, 0x72, 0x69, 0x63, 0x73, 0x73, 0x6f, 0x6e,
		0x52, 0x33, 0x38, 0x30, 0x45, 0x72, 0x69, 0x63, 0x79, 0x45, 0x72, 0x69, 0x73, 0x73, 0x6f, 0x6e,
		0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x48, 0x2d, 0x31, 0x45, 0x73, 0x73,
		0x65, 0x6e, 0x74, 0x69, 0x65, 0x6c, 0x62, 0x48, 0x45, 0x59, 0x6f, 0x75, 0x20, 0x32, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x48, 0x45, 0x59, 0x6f, 0x75, 0x20, 0x24, 0x31, 0x57, 0x6f, 0x6f, 0x7a,
		0x65, 0x20, 0x24, 0x31, 0x45, 0x74, 0x6f, 0x6e, 0x45, 0x74, 0x75, 0x6c, 0x69, 0x6e, 0x65, 0x45,
		0x75, 0x72, 0x6f, 0x63, 0x61, 0x73, 0x65, 0x45, 0x55, 0x54, 0x42, 0x5f, 0x37, 0x35, 0x38, 0x47,
		0x5f, 0x54, 0x41, 0x42, 0x49, 0x5f, 0x41, 0x72, 0x67, 0x6f, 0x73, 0x5f, 0x4b, 0x49, 0x44, 0x53,
		0x54, 0x41, 0x42, 0x49, 0x20, 0x41, 0x72, 0x67, 0x6f, 0x73, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20,
		0x37, 0x35, 0x38, 0x47, 0x45, 0x75, 0x72, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x4f, 0x6e, 0x79, 0x78,
		0x20, 0x24, 0x31, 0x45, 0x54, 0x37, 0x30, 0x30, 0x32, 0x43, 0x2d, 0x48, 0x31, 0x32, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x34, 0x53, 0x45, 0x76, 0x65, 0x72, 0x63, 0x6f, 0x73, 0x73, 0x41, 0x37, 0x35,
		0x41, 0x20, 0x53, 0x74, 0x61, 0x72, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x55, 0x35, 0x30, 0x41,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x35, 0x30, 0x20, 0x53, 0x74, 0x61, 0x72, 0x4d, 0x35, 0x30,
		0x20, 0x4d, 0x61, 0x78, 0x55, 0x36, 0x20, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x55, 0x36, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x72, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x72, 0x50,
		0x61, 0x64, 0x20, 0x44, 0x43, 0x2d, 0x24, 0x31, 0x45, 0x76, 0x65, 0x72, 0x65, 0x78, 0x46, 0x69,
		0x6e, 0x65, 0x20, 0x37, 0x42, 0x45, 0x76, 0x65, 0x72, 0x74, 0x65, 0x6b, 0x45, 0x76, 0x65, 0x72,
		0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x24, 0x31, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x4d, 0x31, 0x30,
		0x20, 0x4d, 0x61, 0x78, 0x45, 0x76, 0x65, 0x72, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x56, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x76, 0x65, 0x72, 0x54,
		0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x34, 0x47, 0x45, 0x76, 0x65, 0x72, 0x24, 0x31, 0x20, 0x49,
		0x49, 0x45, 0x76, 0x6f, 0x6c, 0x69, 0x6f, 0x4d, 0x34, 0x4d, 0x41, 0x47, 0x49, 0x43, 0x4d, 0x34,
		0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x45, 0x76, 0x6f, 0x6c, 0x69, 0x6f, 0x5f, 0x4d, 0x35, 0x50,
		0x72, 0x6f, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x6f, 0x45,
		0x56, 0x4f, 0x4c, 0x56, 0x45, 0x4f, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x34, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x34, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
		0x20, 0x42, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20,
		0x24, 0x31, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20,
		0x51, 0x34, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x51, 0x34, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x44, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x74, 0x72,
		0x6f, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x24, 0x31, 0x53, 0x74, 0x72, 0x6f,
		0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x51, 0x24, 0x31, 0x24, 0x32, 0x45, 0x76, 0x6f,
		0x6f, 0x45, 0x76, 0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x70, 0x61,
		0x64, 0x20, 0x33, 0x47, 0x20, 0x47, 0x4f, 0x4f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x33, 0x47, 0x20, 0x47, 0x6f, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x33, 0x47, 0x20, 0x32, 0x47, 0x6f, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x50, 0x52, 0x4f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x50,
		0x4c, 0x41, 0x59, 0x5f, 0x50, 0x41, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x58, 0x4c, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x58, 0x4c, 0x50, 0x6c, 0x61,
		0x79, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x54, 0x61, 0x62, 0x20, 0x58, 0x4c, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x20, 0x54, 0x61, 0x62, 0x20, 0x58, 0x4c, 0x33,
		0x47, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x58, 0x4c, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x33, 0x47, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x58, 0x4c, 0x45, 0x78, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45,
		0x58, 0x20, 0x24, 0x31, 0x69, 0x45, 0x78, 0x6d, 0x61, 0x72, 0x74, 0x45, 0x78, 0x70, 0x6c, 0x61,
		0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x20, 0x37, 0x2e, 0x34, 0x20, 0x33, 0x47, 0x53,
		0x63, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x33, 0x47, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x69, 0x75, 0x6d,
		0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x20, 0x38, 0x2e,
		0x32, 0x20, 0x33, 0x47, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x54, 0x56, 0x20, 0x33, 0x47, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
		0x79, 0x20, 0x49, 0x49, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x24, 0x31, 0x53,
		0x75, 0x72, 0x66, 0x65, 0x72, 0x20, 0x24, 0x31, 0x53, 0x75, 0x72, 0x66, 0x65, 0x72, 0x20, 0x24,
		0x31, 0x20, 0x33, 0x47, 0x73, 0x51, 0x75, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4f, 0x6e, 0x6c, 0x69,
		0x6e, 0x65, 0x72, 0x20, 0x24, 0x31, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x20, 0x24, 0x31, 0x41,
		0x74, 0x6c, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x67, 0x6f, 0x50, 0x75, 0x6c, 0x73, 0x61,
		0x72, 0x54, 0x6f, 0x72, 0x6e, 0x61, 0x64, 0x6f, 0x20, 0x33, 0x47, 0x46, 0x72, 0x65, 0x73, 0x68,
		0x4a, 0x6f, 0x79, 0x54, 0x56, 0x46, 0x69, 0x6e, 0x4c, 0x61, 0x67, 0x6f, 0x6f, 0x6e, 0x41, 0x33,
		0x35, 0x30, 0x54, 0x56, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x69, 0x6f, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x52, 0x6f, 0x63,
		0x6b, 0x20, 0x58, 0x24, 0x31, 0x2b, 0x52, 0x4f, 0x43, 0x4b, 0x5f, 0x58, 0x31, 0x31, 0x52, 0x6f,
		0x63, 0x6b, 0x20, 0x58, 0x31, 0x31, 0x45, 0x7a, 0x69, 0x6f, 0x45, 0x7a, 0x7a, 0x65, 0x45, 0x5a,
		0x24, 0x31, 0x46, 0x2b, 0x46, 0x31, 0x35, 0x30, 0x42, 0x32, 0x30, 0x32, 0x31, 0x46, 0x32, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5a, 0x38, 0x50, 0x4c, 0x55, 0x53, 0x5a, 0x38, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x69, 0x38, 0x5f, 0x52, 0x4f, 0x4b, 0x52, 0x69, 0x38, 0x20, 0x52, 0x6f, 0x6b,
		0x72, 0x5a, 0x38, 0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5a, 0x38, 0x20, 0x50, 0x6f, 0x63, 0x6b,
		0x65, 0x74, 0x46, 0x38, 0x30, 0x73, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x46, 0x38, 0x30, 0x73, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x46, 0x38, 0x30, 0x20, 0x50, 0x49, 0x41, 0x42, 0x45, 0x4c, 0x4c, 0x41,
		0x46, 0x38, 0x30, 0x20, 0x50, 0x69, 0x61, 0x62, 0x65, 0x6c, 0x6c, 0x61, 0x43, 0x38, 0x46, 0x69,
		0x6e, 0x67, 0x65, 0x72, 0x43, 0x38, 0x20, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x46, 0x45, 0x4f,
		0x4e, 0x41, 0x4c, 0x46, 0x46, 0x46, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x66, 0x65,
		0x54, 0x41, 0x42, 0x2d, 0x31, 0x30, 0x41, 0x34, 0x46, 0x49, 0x4c, 0x49, 0x58, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x20, 0x4d, 0x20, 0x46, 0x58, 0x34, 0x34, 0x32, 0x33, 0x46, 0x49, 0x53, 0x45, 0x46,
		0x69, 0x73, 0x65, 0x5f, 0x4d, 0x33, 0x32, 0x34, 0x33, 0x33, 0x20, 0x33, 0x47, 0x46, 0x4c, 0x59,
		0x43, 0x41, 0x54, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x55, 0x6e, 0x69,
		0x63, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x46, 0x4d, 0x54, 0x31, 0x36, 0x4d, 0x34, 0x48, 0x49, 0x31,
		0x30, 0x35, 0x30, 0x32, 0x34, 0x4e, 0x65, 0x74, 0x73, 0x75, 0x72, 0x66, 0x65, 0x72, 0x20, 0x53,
		0x74, 0x6f, 0x72, 0x6d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x33, 0x20, 0x42, 0x30, 0x31, 0x46,
		0x4d, 0x54, 0x2d, 0x4e, 0x4d, 0x37, 0x30, 0x35, 0x38, 0x2d, 0x30, 0x32, 0x46, 0x6c, 0x61, 0x73,
		0x68, 0x31, 0x37, 0x36, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x35, 0x33, 0x31, 0x46, 0x61, 0x6c,
		0x63, 0x6f, 0x6e, 0x31, 0x37, 0x36, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x32, 0x33, 0x32, 0x42,
		0x35, 0x32, 0x31, 0x37, 0x35, 0x57, 0x54, 0x31, 0x30, 0x35, 0x30, 0x32, 0x33, 0x31, 0x31, 0x37,
		0x35, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x32, 0x33, 0x31, 0x54, 0x6f, 0x6d, 0x63, 0x61, 0x74,
		0x31, 0x37, 0x35, 0x46, 0x54, 0x31, 0x30, 0x35, 0x30, 0x32, 0x34, 0x31, 0x56, 0x69, 0x70, 0x65,
		0x72, 0x46, 0x4e, 0x42, 0x53, 0x50, 0x35, 0x30, 0x34, 0x35, 0x56, 0x43, 0x6f, 0x6e, 0x65, 0x58,
		0x69, 0x73, 0x20, 0x41, 0x31, 0x43, 0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x41, 0x32, 0x43,
		0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x58, 0x31, 0x43, 0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73,
		0x20, 0x58, 0x32, 0x46, 0x4e, 0x46, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x24, 0x31, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x24, 0x31, 0x69, 0x66, 0x69, 0x76, 0x65,
		0x4d, 0x69, 0x6e, 0x69, 0x33, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x33, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x41, 0x69, 0x72, 0x69, 0x66, 0x69, 0x76, 0x65, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x32, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32,
		0x46, 0x4f, 0x4f, 0x44, 0x4f, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x46, 0x6f, 0x72, 0x65, 0x76, 0x65,
		0x72, 0x46, 0x4f, 0x53, 0x53, 0x69, 0x42, 0x4f, 0x54, 0x46, 0x31, 0x30, 0x31, 0x46, 0x50, 0x54,
		0x46, 0x61, 0x52, 0x61, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
		0x6b, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x54, 0x56, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x20,
		0x54, 0x56, 0x46, 0x61, 0x63, 0x65, 0x74, 0x65, 0x6c, 0x51, 0x33, 0x51, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x46, 0x61, 0x63, 0x69, 0x6d, 0x65, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x20, 0x37, 0x46, 0x61,
		0x69, 0x72, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x46, 0x61, 0x6d, 0x6f, 0x63, 0x6f, 0x46, 0x61, 0x6d,
		0x6f, 0x75, 0x73, 0x52, 0x65, 0x64, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x64,
		0x20, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x35, 0x50,
		0x6c, 0x75, 0x73, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x61, 0x6d, 0x6f, 0x75, 0x73, 0x20,
		0x35, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x46, 0x61, 0x6e, 0x74, 0x65, 0x63, 0x4d, 0x33, 0x30,
		0x30, 0x48, 0x46, 0x61, 0x72, 0x45, 0x61, 0x73, 0x54, 0x6f, 0x6e, 0x65, 0x46, 0x61, 0x72, 0x61,
		0x73, 0x73, 0x6f, 0x6f, 0x46, 0x65, 0x6e, 0x67, 0x78, 0x69, 0x61, 0x6e, 0x67, 0x46, 0x65, 0x72,
		0x6f, 0x46, 0x65, 0x72, 0x6f, 0x5f, 0x59, 0x31, 0x59, 0x31, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x65,
		0x20, 0x59, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x65, 0x20, 0x24,
		0x31, 0x46, 0x45, 0x52, 0x4f, 0x20, 0x50, 0x41, 0x43, 0x45, 0x50, 0x61, 0x63, 0x65, 0x41, 0x34,
		0x30, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x30, 0x31, 0x39, 0x41, 0x34, 0x30,
		0x30, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x34,
		0x30, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x69, 0x47, 0x4f, 0x41, 0x54, 0x52, 0x49,
		0x55, 0x4d, 0x20, 0x49, 0x49, 0x20, 0x46, 0x35, 0x35, 0x4c, 0x32, 0x41, 0x74, 0x72, 0x69, 0x75,
		0x6d, 0x20, 0x49, 0x49, 0x54, 0x52, 0x49, 0x4f, 0x20, 0x46, 0x34, 0x30, 0x4c, 0x54, 0x54, 0x72,
		0x69, 0x6f, 0x20, 0x46, 0x34, 0x30, 0x4c, 0x54, 0x45, 0x50, 0x49, 0x43, 0x20, 0x46, 0x35, 0x30,
		0x47, 0x45, 0x70, 0x69, 0x63, 0x20, 0x46, 0x35, 0x30, 0x47, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x20,
		0x4d, 0x35, 0x30, 0x47, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4d, 0x34, 0x30, 0x35, 0x42, 0x5f, 0x38,
		0x47, 0x42, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x49, 0x49, 0x20, 0x38, 0x47, 0x42, 0x4d,
		0x34, 0x30, 0x35, 0x42, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x49, 0x49, 0x56, 0x49, 0x52,
		0x54, 0x55, 0x45, 0x33, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x49, 0x49, 0x49, 0x43, 0x45,
		0x4e, 0x54, 0x52, 0x49, 0x43, 0x20, 0x53, 0x35, 0x30, 0x47, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x69,
		0x63, 0x20, 0x53, 0x35, 0x30, 0x47, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4a, 0x38, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x20, 0x4a, 0x38, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x5f, 0x6c, 0x6c, 0x4f, 0x72, 0x62,
		0x69, 0x74, 0x20, 0x49, 0x49, 0x46, 0x34, 0x30, 0x47, 0x32, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x46, 0x34, 0x30, 0x47, 0x32, 0x46, 0x69, 0x47, 0x69, 0x4e, 0x6f,
		0x70, 0x61, 0x6c, 0x50, 0x34, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x34, 0x30, 0x48, 0x6f, 0x6c,
		0x61, 0x24, 0x31, 0x74, 0x77, 0x6f, 0x46, 0x6a, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x31, 0x43, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x43, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x35, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x35, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73,
		0x46, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x6c, 0x75, 0x78, 0x46,
		0x69, 0x72, 0x65, 0x46, 0x6c, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x72,
		0x69, 0x69, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x56, 0x69,
		0x76, 0x69, 0x64, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
		0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x52, 0x61, 0x7a, 0x6f, 0x72, 0x41, 0x75, 0x72, 0x69, 0x69,
		0x20, 0x52, 0x61, 0x7a, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x69, 0x69,
		0x20, 0x44, 0x65, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x44, 0x72,
		0x65, 0x61, 0x6d, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x46, 0x61,
		0x6d, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x41, 0x6d, 0x75, 0x73, 0x65, 0x20, 0x34, 0x47,
		0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x4f, 0x6e, 0x65, 0x20,
		0x38, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x4f, 0x6e, 0x65,
		0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x41, 0x75, 0x72, 0x69, 0x69,
		0x20, 0x41, 0x6d, 0x75, 0x73, 0x65, 0x20, 0x33, 0x47, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x46,
		0x75, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x4d, 0x61, 0x67, 0x6e, 0x75,
		0x6d, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x56, 0x69, 0x76, 0x69, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x56, 0x69, 0x76, 0x69, 0x64, 0x20, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x75, 0x6d, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x78, 0x43, 0x69, 0x74, 0x65, 0x41, 0x75,
		0x72, 0x69, 0x69, 0x20, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x20, 0x24, 0x31, 0x41, 0x75, 0x72,
		0x69, 0x69, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x58, 0x54, 0x49, 0x6e, 0x74, 0x65,
		0x6e, 0x73, 0x65, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x34, 0x47, 0x49, 0x6e, 0x74, 0x65,
		0x6e, 0x73, 0x65, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65, 0x72,
		0x20, 0x53, 0x77, 0x65, 0x65, 0x74, 0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x34, 0x47, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72,
		0x65, 0x20, 0x34, 0x47, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x24, 0x31, 0x46, 0x6c,
		0x75, 0x6f, 0x53, 0x35, 0x35, 0x34, 0x30, 0x32, 0x30, 0x4c, 0x46, 0x5f, 0x50, 0x6c, 0x75, 0x73,
		0x46, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x79, 0x50, 0x61, 0x6e, 0x6f, 0x72, 0x61, 0x6d,
		0x61, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x69, 0x65, 0x77, 0x20, 0x4d, 0x61, 0x78,
		0x53, 0x6c, 0x69, 0x6d, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x35, 0x30, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x72, 0x6f,
		0x4c, 0x69, 0x66, 0x65, 0x20, 0x41, 0x63, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4a, 0x65, 0x74,
		0x4c, 0x69, 0x66, 0x65, 0x20, 0x53, 0x6b, 0x79, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x47, 0x65, 0x6f,
		0x4c, 0x69, 0x66, 0x65, 0x20, 0x5a, 0x65, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x42, 0x75, 0x7a, 0x7a, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x43,
		0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x20, 0x34, 0x47, 0x46, 0x53, 0x35, 0x30, 0x36, 0x43, 0x69,
		0x72, 0x72, 0x75, 0x73, 0x20, 0x33, 0x46, 0x53, 0x34, 0x30, 0x33, 0x43, 0x75, 0x6d, 0x75, 0x6c,
		0x75, 0x73, 0x20, 0x31, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x36, 0x46, 0x53, 0x35, 0x31,
		0x31, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x37, 0x46, 0x53, 0x35, 0x30, 0x39, 0x4e, 0x69,
		0x6d, 0x62, 0x75, 0x73, 0x20, 0x39, 0x46, 0x53, 0x34, 0x30, 0x36, 0x53, 0x74, 0x72, 0x61, 0x74,
		0x75, 0x73, 0x20, 0x35, 0x46, 0x53, 0x34, 0x30, 0x34, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73,
		0x20, 0x33, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53, 0x34, 0x30, 0x37, 0x53,
		0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x36, 0x46, 0x53, 0x34, 0x30, 0x31, 0x53, 0x74, 0x72,
		0x61, 0x74, 0x75, 0x73, 0x20, 0x31, 0x46, 0x53, 0x34, 0x30, 0x32, 0x53, 0x74, 0x72, 0x61, 0x74,
		0x75, 0x73, 0x20, 0x32, 0x46, 0x53, 0x35, 0x30, 0x31, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20,
		0x33, 0x46, 0x53, 0x35, 0x30, 0x32, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x46, 0x53,
		0x35, 0x30, 0x37, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x34, 0x46, 0x53, 0x35, 0x30, 0x35,
		0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x37, 0x46, 0x53, 0x35, 0x35, 0x31, 0x4e, 0x69, 0x6d,
		0x62, 0x75, 0x73, 0x20, 0x34, 0x46, 0x53, 0x35, 0x31, 0x34, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73,
		0x20, 0x38, 0x46, 0x53, 0x35, 0x35, 0x33, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x39, 0x46,
		0x53, 0x35, 0x35, 0x34, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x46,
		0x48, 0x44, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x46, 0x53,
		0x35, 0x31, 0x37, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x31, 0x46, 0x53, 0x35, 0x31,
		0x36, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x32, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73,
		0x20, 0x31, 0x33, 0x46, 0x53, 0x35, 0x32, 0x30, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x31,
		0x46, 0x53, 0x35, 0x32, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x31, 0x46, 0x53, 0x35, 0x32, 0x32, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x34, 0x46,
		0x53, 0x35, 0x32, 0x33, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x36, 0x46, 0x53, 0x35,
		0x32, 0x34, 0x4b, 0x6e, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x46, 0x53, 0x35, 0x32, 0x36, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53, 0x35, 0x32, 0x37,
		0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x37, 0x46, 0x53, 0x35, 0x32, 0x38, 0x4d, 0x65,
		0x6d, 0x6f, 0x72, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x53, 0x35, 0x32, 0x39, 0xd0, 0xa1,
		0x68, 0x61, 0x6d, 0x70, 0x46, 0x53, 0x35, 0x33, 0x30, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x58, 0x58, 0x4c, 0x46, 0x53, 0x34, 0x35, 0x34, 0x4e, 0x69, 0x6d, 0x62,
		0x75, 0x73, 0x20, 0x38, 0x46, 0x53, 0x34, 0x35, 0x32, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20,
		0x32, 0x46, 0x53, 0x35, 0x31, 0x32, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x30, 0x46,
		0x53, 0x35, 0x31, 0x30, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x32, 0x46, 0x53, 0x34,
		0x35, 0x31, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x46, 0x53, 0x34, 0x30, 0x35, 0x53,
		0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x34, 0x46, 0x53, 0x34, 0x30, 0x38, 0x53, 0x74, 0x72,
		0x61, 0x74, 0x75, 0x73, 0x20, 0x38, 0x46, 0x53, 0x34, 0x30, 0x39, 0x53, 0x74, 0x72, 0x61, 0x74,
		0x75, 0x73, 0x20, 0x39, 0x46, 0x53, 0x34, 0x35, 0x35, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20,
		0x31, 0x31, 0x46, 0x53, 0x34, 0x35, 0x36, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x34,
		0x46, 0x53, 0x34, 0x35, 0x37, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x35, 0x46, 0x53,
		0x34, 0x35, 0x39, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x36, 0x46, 0x53, 0x34, 0x35,
		0x38, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x37, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
		0x63, 0x4a, 0x61, 0x7a, 0x7a, 0x57, 0x68, 0x69, 0x7a, 0x7a, 0x50, 0x72, 0x69, 0x64, 0x65, 0x46,
		0x69, 0x72, 0x65, 0x62, 0x69, 0x72, 0x64, 0x4d, 0x61, 0x72, 0x61, 0x74, 0x68, 0x6f, 0x6e, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x45, 0x76, 0x6f, 0x6b, 0x65, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x45, 0x72,
		0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x31, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f,
		0x20, 0x33, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x34, 0x45, 0x72, 0x61, 0x20,
		0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x35, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x36,
		0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x39, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61,
		0x6e, 0x6f, 0x20, 0x31, 0x30, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x45, 0x72, 0x61, 0x20, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x32, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d,
		0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x44,
		0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x32, 0x47, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x45, 0x72,
		0x61, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x31, 0x45, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65,
		0x20, 0x32, 0x45, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x34, 0x43, 0x68, 0x69, 0x63,
		0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x20, 0x32,
		0x56, 0x69, 0x73, 0x74, 0x61, 0x45, 0x67, 0x6f, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20,
		0x31, 0x45, 0x76, 0x6f, 0x20, 0x54, 0x65, 0x63, 0x68, 0x20, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67,
		0x79, 0x20, 0x33, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69,
		0x78, 0x20, 0x32, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x32, 0x43, 0x6f, 0x72, 0x61, 0x6c,
		0x45, 0x76, 0x6f, 0x20, 0x43, 0x68, 0x69, 0x63, 0x20, 0x33, 0x45, 0x76, 0x6f, 0x20, 0x54, 0x65,
		0x63, 0x68, 0x20, 0x33, 0x45, 0x72, 0x61, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x33, 0x45,
		0x72, 0x61, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x34, 0x45, 0x76, 0x6f, 0x20, 0x45, 0x6e,
		0x65, 0x72, 0x67, 0x79, 0x20, 0x35, 0x54, 0x6f, 0x72, 0x6e, 0x61, 0x64, 0x6f, 0x20, 0x53, 0x6c,
		0x69, 0x6d, 0x49, 0x51, 0x24, 0x31, 0x46, 0x6c, 0x79, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x24, 0x31,
		0x46, 0x6f, 0x6e, 0x64, 0x69, 0x46, 0x6f, 0x6e, 0x6f, 0x73, 0x4f, 0x33, 0x46, 0x6f, 0x72, 0x6d,
		0x75, 0x6c, 0x65, 0x72, 0x53, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x46,
		0x6f, 0x72, 0x73, 0x74, 0x61, 0x72, 0x41, 0x6d, 0x6f, 0x73, 0x74, 0x61, 0x20, 0x33, 0x47, 0x35,
		0x46, 0x6f, 0x72, 0x74, 0x69, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x53, 0x31, 0x38, 0x35, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x32, 0x53, 0x31, 0x38, 0x36, 0x5f,
		0x53, 0x6b, 0x79, 0x5f, 0x33, 0x53, 0x31, 0x38, 0x36, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x33, 0x53,
		0x36, 0x31, 0x20, 0x45, 0x63, 0x6f, 0x20, 0x32, 0x53, 0x36, 0x32, 0x5f, 0x45, 0x63, 0x6f, 0x5f,
		0x33, 0x53, 0x36, 0x32, 0x20, 0x45, 0x63, 0x6f, 0x20, 0x33, 0x53, 0x37, 0x31, 0x30, 0x20, 0x52,
		0x75, 0x62, 0x79, 0x46, 0x6f, 0x75, 0x72, 0x65, 0x6c, 0x45, 0x61, 0x73, 0x79, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x4d, 0x24, 0x31, 0x46, 0x6f, 0x78, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x6e,
		0x46, 0x6f, 0x63, 0x75, 0x73, 0x20, 0x4d, 0x24, 0x31, 0x46, 0x6f, 0x78, 0x78, 0x44, 0x46, 0x72,
		0x65, 0x65, 0x74, 0x65, 0x6c, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x43, 0x53, 0x61, 0x6d, 0x75,
		0x72, 0x61, 0x69, 0x20, 0x4d, 0x69, 0x79, 0x61, 0x62, 0x69, 0x52, 0x65, 0x69, 0x20, 0x32, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x35, 0x43, 0x72, 0x69, 0x63,
		0x6b, 0x65, 0x74, 0x20, 0x57, 0x61, 0x76, 0x65, 0x46, 0x54, 0x4a, 0x31, 0x36, 0x31, 0x41, 0x4d,
		0x75, 0x73, 0x61, 0x73, 0x68, 0x69, 0x46, 0x54, 0x45, 0x31, 0x37, 0x31, 0x41, 0x49, 0x63, 0x65,
		0x20, 0x33, 0x49, 0x63, 0x65, 0x20, 0x32, 0x46, 0x54, 0x45, 0x31, 0x36, 0x31, 0x47, 0x49, 0x63,
		0x65, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x54, 0x4a, 0x31, 0x36, 0x32, 0x45, 0x52,
		0x61, 0x69, 0x6a, 0x69, 0x6e, 0x46, 0x54, 0x31, 0x34, 0x31, 0x42, 0x4e, 0x69, 0x63, 0x6f, 0x58,
		0x4d, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x32, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x41,
		0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x33, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x34,
		0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x42, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x33, 0x53,
		0x20, 0x4c, 0x54, 0x45, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x44, 0x53, 0x61, 0x6d, 0x75, 0x72,
		0x61, 0x69, 0x20, 0x4b, 0x69, 0x77, 0x61, 0x6d, 0x69, 0x46, 0x54, 0x4a, 0x31, 0x36, 0x32, 0x42,
		0x53, 0x61, 0x6d, 0x75, 0x72, 0x61, 0x69, 0x20, 0x4b, 0x69, 0x77, 0x61, 0x6d, 0x69, 0x20, 0x32,
		0x46, 0x54, 0x4a, 0x31, 0x36, 0x31, 0x42, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61, 0x69, 0x20, 0x52,
		0x65, 0x69, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x45, 0x4b, 0x61, 0x74, 0x61, 0x6e, 0x61, 0x20,
		0x31, 0x53, 0x41, 0x4b, 0x55, 0x52, 0x41, 0x5f, 0x46, 0x54, 0x45, 0x31, 0x53, 0x61, 0x6b, 0x75,
		0x72, 0x61, 0x20, 0x46, 0x54, 0x45, 0x31, 0x46, 0x55, 0x4e, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x46,
		0x75, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x72, 0x75, 0x6e, 0x73, 0x69, 0x46, 0x75, 0x6a,
		0x69, 0x74, 0x73, 0x75, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x35, 0x47, 0x20, 0x46, 0x2d,
		0x35, 0x31, 0x41, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30,
		0x31, 0x46, 0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x33,
		0x4c, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x31, 0x4a,
		0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x31, 0x4b, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x46, 0x69, 0x74, 0x20, 0x46, 0x2d, 0x30, 0x31, 0x48, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x32, 0x45, 0x41, 0x72, 0x72,
		0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x32, 0x47, 0x41, 0x72, 0x72, 0x6f,
		0x77, 0x73, 0x20, 0x45, 0x46, 0x20, 0x46, 0x4a, 0x4c, 0x32, 0x31, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x5a, 0x20, 0x46, 0x4a, 0x4c, 0x32, 0x32, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x32, 0x48, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e,
		0x58, 0x39, 0x20, 0x46, 0x2d, 0x35, 0x32, 0x41, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4b,
		0x69, 0x73, 0x73, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x44, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0x4b, 0x69, 0x73, 0x73, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x45, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x46, 0x41, 0x72, 0x72,
		0x6f, 0x77, 0x73, 0x20, 0x53, 0x56, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x48, 0x41, 0x72, 0x72, 0x6f,
		0x77, 0x73, 0x20, 0x4a, 0x20, 0x39, 0x30, 0x31, 0x46, 0x4a, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x56, 0x20, 0x46, 0x2d, 0x30, 0x34, 0x45, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e,
		0x58, 0x20, 0x46, 0x2d, 0x30, 0x34, 0x47, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x58, 0x20,
		0x4c, 0x54, 0x45, 0x20, 0x46, 0x2d, 0x30, 0x35, 0x44, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x35, 0x46, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42,
		0x65, 0x20, 0x46, 0x2d, 0x30, 0x35, 0x4a, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4b, 0x2d,
		0x74, 0x61, 0x69, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x65, 0x20, 0x46, 0x2d, 0x30,
		0x34, 0x4b, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x65, 0x20, 0x33, 0x20, 0x46, 0x2d,
		0x30, 0x32, 0x4c, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x65, 0x20, 0x34, 0x20, 0x46,
		0x2d, 0x34, 0x31, 0x41, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x65, 0x20, 0x34, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x46, 0x2d, 0x34, 0x31, 0x42, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x36, 0x45, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0xce, 0xbc, 0x20, 0x46, 0x2d, 0x30, 0x37, 0x44, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x57,
		0x65, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x55, 0x20, 0x38, 0x30, 0x31, 0x46, 0x4a, 0x44,
		0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x46, 0x2d, 0x30,
		0x37, 0x45, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20,
		0x46, 0x2d, 0x30, 0x38, 0x44, 0x41, 0x4e, 0x54, 0x45, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x20, 0x46,
		0x2d, 0x30, 0x39, 0x44, 0x52, 0x61, 0x6b, 0x75, 0x2d, 0x52, 0x61, 0x6b, 0x75, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d,
		0x20, 0x46, 0x2d, 0x30, 0x39, 0x45, 0x52, 0x61, 0x6b, 0x75, 0x2d, 0x52, 0x61, 0x6b, 0x75, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x46, 0x2d, 0x35, 0x32, 0x42,
		0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x58, 0x20, 0x46, 0x2d, 0x31, 0x30, 0x44, 0x41, 0x72,
		0x72, 0x6f, 0x77, 0x73, 0x20, 0x4d, 0x65, 0x20, 0x46, 0x2d, 0x31, 0x31, 0x44, 0x46, 0x2d, 0x31,
		0x32, 0x43, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4d, 0x30, 0x33, 0x41, 0x72, 0x72, 0x6f,
		0x77, 0x73, 0x20, 0x52, 0x4d, 0x30, 0x32, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x5a,
		0x30, 0x32, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x52, 0x58, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x4d, 0x30, 0x34, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x41, 0x72, 0x72,
		0x6f, 0x77, 0x73, 0x20, 0x4d, 0x24, 0x31, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x24, 0x31, 0x46, 0x41, 0x52, 0x54, 0x4d, 0x39, 0x33, 0x33, 0x4b, 0x5a, 0x41, 0x72,
		0x72, 0x6f, 0x77, 0x73, 0x20, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x35, 0x30, 0x34, 0x2f, 0x48, 0x41,
		0x34, 0x53, 0x74, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x63, 0x46, 0x75, 0x6e, 0x61, 0x69, 0x46,
		0x75, 0x73, 0x69, 0x6f, 0x6e, 0x35, 0x24, 0x31, 0x76, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x24, 0x31,
		0x76, 0x32, 0x46, 0x31, 0x30, 0x34, 0x45, 0x56, 0x49, 0x49, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31,
		0x30, 0x34, 0x45, 0x56, 0x49, 0x49, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x20, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x46, 0x78,
		0x74, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x31, 0x20, 0x58, 0x47, 0x2d, 0x54, 0x69, 0x44, 0x45, 0x53,
		0x68, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x37, 0x53, 0x68, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x37,
		0x47, 0x2d, 0x54, 0x69, 0x44, 0x45, 0x20, 0x56, 0x36, 0x45, 0x58, 0x54, 0x52, 0x45, 0x4d, 0x45,
		0x20, 0x58, 0x39, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x58, 0x39, 0x20, 0x45, 0x58,
		0x31, 0x30, 0x45, 0x58, 0x31, 0x30, 0x47, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x74, 0x65,
		0x6c, 0x6c, 0x61, 0x20, 0x24, 0x31, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x47, 0x45, 0x4f, 0x46,
		0x4f, 0x58, 0x4d, 0x49, 0x44, 0x24, 0x31, 0x47, 0x45, 0x4f, 0x5a, 0x4f, 0x4e, 0x47, 0x46, 0x69,
		0x76, 0x65, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x47, 0x6f, 0x6c, 0x64,
		0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x47, 0x70, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x47,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74,
		0x20, 0x58, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65,
		0x6e, 0x74, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x43,
		0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65,
		0x6e, 0x74, 0x20, 0x47, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64,
		0x65, 0x6e, 0x74, 0x20, 0x47, 0x31, 0x30, 0x20, 0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x50,
		0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x47, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73,
		0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x24, 0x31, 0x50, 0x72,
		0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31,
		0x53, 0x74, 0x61, 0x72, 0x6b, 0x47, 0x50, 0x61, 0x64, 0x24, 0x31, 0x47, 0x49, 0x52, 0x41, 0x53,
		0x4f, 0x4c, 0x45, 0x54, 0x41, 0x42, 0x35, 0x47, 0x4c, 0x4f, 0x4e, 0x59, 0x58, 0x51, 0x75, 0x61,
		0x72, 0x74, 0x7a, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x58, 0x47, 0x4c, 0x58, 0x20, 0x41, 0x53, 0x41,
		0x41, 0x73, 0x61, 0x4d, 0x61, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x61, 0x61, 0x64,
		0x47, 0x4f, 0x43, 0x4c, 0x45, 0x56, 0x45, 0x52, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x20,
		0x24, 0x31, 0x49, 0x4e, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x41, 0x20, 0x24, 0x31, 0x54, 0x51, 0x37,
		0x30, 0x30, 0x4e, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x20, 0x37, 0x30, 0x30, 0x4e, 0x4f,
		0x52, 0x49, 0x4f, 0x4e, 0x37, 0x6f, 0x4c, 0x4f, 0x52, 0x49, 0x4f, 0x4e, 0x20, 0x37, 0x30, 0x4c,
		0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x20, 0x37, 0x30, 0x30, 0x51, 0x55, 0x41, 0x4e, 0x54,
		0x55, 0x4d, 0x5f, 0x31, 0x30, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6e,
		0x74, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x75, 0x61,
		0x6e, 0x74, 0x75, 0x6d, 0x20, 0x32, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x20, 0x52, 0x75,
		0x67, 0x67, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x52,
		0x75, 0x67, 0x67, 0x65, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d,
		0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x55, 0x41, 0x4e, 0x54,
		0x55, 0x4d, 0x5f, 0x49, 0x49, 0x5f, 0x35, 0x30, 0x30, 0x5f, 0x4e, 0x51, 0x75, 0x61, 0x6e, 0x74,
		0x75, 0x6d, 0x20, 0x32, 0x20, 0x35, 0x30, 0x30, 0x20, 0x4e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75,
		0x6d, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d,
		0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x4e, 0x45, 0x54, 0x42, 0x4f, 0x4f, 0x4b, 0x20, 0x52, 0x31,
		0x30, 0x33, 0x4e, 0x65, 0x74, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x52, 0x31, 0x30, 0x33, 0x54, 0x65,
		0x72, 0x72, 0x61, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x39, 0x37, 0x47, 0x4f,
		0x4f, 0x44, 0x54, 0x45, 0x4c, 0x47, 0x31, 0x30, 0x5f, 0x45, 0x45, 0x41, 0x47, 0x31, 0x30, 0x43,
		0x4e, 0x4f, 0x54, 0x45, 0x20, 0x35, 0x30, 0x47, 0x54, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x47, 0x61,
		0x6c, 0x61, 0x63, 0x74, 0x69, 0x63, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x49, 0x6e, 0x6e,
		0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x49, 0x20, 0x69, 0x54, 0x56, 0x39, 0x31,
		0x32, 0x69, 0x54, 0x56, 0x39, 0x31, 0x32, 0x47, 0x49, 0x20, 0x55, 0x4e, 0x49, 0x32, 0x55, 0x6e,
		0x69, 0x20, 0x32, 0x47, 0x49, 0x20, 0x46, 0x6c, 0x79, 0x20, 0x54, 0x32, 0x46, 0x6c, 0x79, 0x20,
		0x54, 0x32, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x47, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x2d, 0x41, 0x73,
		0x75, 0x73, 0x47, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x47,
		0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x47, 0x57, 0x41, 0x54, 0x38, 0x2d, 0x31, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x38, 0x22, 0x47, 0x61, 0x7a, 0x65, 0x72, 0x47, 0x61, 0x7a, 0x65, 0x72,
		0x5f, 0x54, 0x56, 0x47, 0x65, 0x61, 0x6e, 0x65, 0x65, 0x47, 0x65, 0x61, 0x6e, 0x74, 0x47, 0x65,
		0x61, 0x72, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x47,
		0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47, 0x4d, 0x20,
		0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x33, 0x30, 0x30, 0x47, 0x4d, 0x20, 0x31, 0x30, 0x47,
		0x33, 0x31, 0x30, 0x47, 0x4d, 0x20, 0x32, 0x31, 0x47, 0x35, 0x31, 0x30, 0x47, 0x4d, 0x20, 0x32,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x33, 0x31, 0x32, 0x47, 0x4d, 0x20, 0x32, 0x32, 0x47,
		0x35, 0x31, 0x32, 0x47, 0x4d, 0x20, 0x32, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x37, 0x30,
		0x30, 0x47, 0x4d, 0x20, 0x32, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x33, 0x30, 0x31, 0x47, 0x4d,
		0x20, 0x32, 0x30, 0x47, 0x35, 0x30, 0x31, 0x47, 0x4d, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x47, 0x4d, 0x20, 0x24, 0x31, 0x44, 0x47, 0x4d, 0x20, 0x36, 0x47, 0x4d, 0x20, 0x24, 0x31, 0x47,
		0x4d, 0x38, 0x20, 0x67, 0x6f, 0x47, 0x4d, 0x20, 0x38, 0x20, 0x47, 0x6f, 0x47, 0x30, 0x30, 0x38,
		0x47, 0x4d, 0x20, 0x39, 0x20, 0x47, 0x6f, 0x47, 0x4d, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x47,
		0x4d, 0x20, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
		0x79, 0x20, 0x24, 0x31, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x49, 0x49,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x4d, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
		0x79, 0x20, 0x49, 0x49, 0x47, 0x4d, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
		0x20, 0x74, 0x61, 0x62, 0x20, 0x38, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x38, 0x34, 0x47, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x47, 0x65, 0x6e, 0x65,
		0x72, 0x61, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x34, 0x47, 0x34, 0x47, 0x47,
		0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x47, 0x65, 0x6f, 0x74, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x65,
		0x41, 0x6d, 0x69, 0x67, 0x6f, 0x47, 0x65, 0x6f, 0x74, 0x65, 0x78, 0x47, 0x66, 0x6f, 0x6e, 0x65,
		0x47, 0x68, 0x69, 0x61, 0x53, 0x76, 0x65, 0x67, 0x6c, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x51, 0x53,
		0x37, 0x30, 0x32, 0x47, 0x48, 0x49, 0x41, 0x5f, 0x5a, 0x45, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x5a,
		0x65, 0x75, 0x73, 0x20, 0x33, 0x47, 0x56, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x53, 0x4c, 0x49,
		0x4d, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x47, 0x48, 0x49, 0x41,
		0x5f, 0x41, 0x58, 0x49, 0x53, 0x37, 0x50, 0x41, 0x78, 0x69, 0x73, 0x20, 0x37, 0x50, 0x41, 0x58,
		0x49, 0x53, 0x37, 0x5f, 0x53, 0x4c, 0x49, 0x4d, 0x41, 0x78, 0x69, 0x73, 0x20, 0x37, 0x20, 0x53,
		0x6c, 0x69, 0x6d, 0x41, 0x58, 0x49, 0x53, 0x37, 0x5f, 0x4c, 0x45, 0x44, 0x41, 0x78, 0x69, 0x73,
		0x20, 0x37, 0x20, 0x4c, 0x45, 0x44, 0x47, 0x48, 0x49, 0x41, 0x5f, 0x41, 0x58, 0x49, 0x53, 0x37,
		0x5f, 0x33, 0x47, 0x41, 0x78, 0x69, 0x73, 0x20, 0x37, 0x20, 0x33, 0x47, 0x47, 0x48, 0x49, 0x41,
		0x5f, 0x41, 0x58, 0x49, 0x53, 0x37, 0x41, 0x78, 0x69, 0x73, 0x20, 0x37, 0x41, 0x37, 0x5f, 0x57,
		0x46, 0x41, 0x37, 0x20, 0x57, 0x69, 0x46, 0x69, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x47, 0x54, 0x41, 0x37, 0x57, 0x46, 0x41, 0x37, 0x20, 0x52, 0x4f, 0x4a,
		0x41, 0x47, 0x54, 0x41, 0x37, 0x50, 0x4c, 0x55, 0x53, 0x41, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x54, 0x52, 0x45, 0x4f, 0x5f, 0x54, 0x41, 0x42, 0x38, 0x47, 0x54, 0x52, 0x45, 0x4f, 0x20, 0x54,
		0x41, 0x42, 0x38, 0x47, 0x47, 0x54, 0x20, 0x4b, 0x49, 0x44, 0x53, 0x20, 0x37, 0x47, 0x54, 0x56,
		0x52, 0x31, 0x30, 0x53, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x53, 0x6c, 0x69, 0x6d, 0x47, 0x54, 0x41, 0x42, 0x50, 0x4e, 0x44, 0x4b, 0x69, 0x64, 0x73,
		0x20, 0x50, 0x61, 0x6e, 0x64, 0x61, 0x56, 0x45, 0x4e, 0x55, 0x53, 0x37, 0x56, 0x45, 0x4e, 0x55,
		0x53, 0x20, 0x37, 0x47, 0x68, 0x6f, 0x6e, 0x67, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x30, 0x33,
		0x47, 0x69, 0x67, 0x61, 0x62, 0x79, 0x74, 0x65, 0x52, 0x6f, 0x6d, 0x61, 0x20, 0x52, 0x32, 0x47,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x6f, 0x6d, 0x61, 0x20, 0x52, 0x32, 0x53, 0x69, 0x6d,
		0x62, 0x61, 0x20, 0x53, 0x58, 0x31, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x69, 0x6d,
		0x62, 0x61, 0x20, 0x53, 0x58, 0x31, 0x47, 0x69, 0x67, 0x61, 0x73, 0x65, 0x74, 0x47, 0x69, 0x67,
		0x61, 0x73, 0x65, 0x74, 0x20, 0x51, 0x56, 0x24, 0x31, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x47, 0x53, 0x24, 0x31, 0x47, 0x53, 0x35, 0x37, 0x2d, 0x36, 0x4d, 0x45, 0x20, 0x50, 0x72,
		0x6f, 0x47, 0x53, 0x35, 0x35, 0x2d, 0x36, 0x4d, 0x45, 0x45, 0x39, 0x34, 0x30, 0x2d, 0x32, 0x37,
		0x39, 0x35, 0x2d, 0x30, 0x30, 0x47, 0x53, 0x34, 0x47, 0x53, 0x35, 0x33, 0x2d, 0x36, 0x4d, 0x45,
		0x20, 0x50, 0x75, 0x72, 0x65, 0x47, 0x69, 0x6e, 0x69, 0x57, 0x24, 0x31, 0x53, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x57, 0x31, 0x37, 0x57, 0x30, 0x38, 0x53, 0x35, 0x47, 0x69, 0x6e, 0x7a, 0x7a,
		0x75, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x47, 0x69, 0x6f, 0x6e,
		0x65, 0x65, 0x47, 0x4e, 0x50, 0x32, 0x31, 0x4d, 0x30, 0x32, 0x4d, 0x31, 0x32, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4e, 0x38, 0x31, 0x30, 0x47, 0x4e, 0x38, 0x30, 0x30, 0x33,
		0x4c, 0x4d, 0x36, 0x4c, 0x57, 0x42, 0x4c, 0x37, 0x35, 0x31, 0x39, 0x53, 0x36, 0x73, 0x57, 0x42,
		0x4c, 0x37, 0x33, 0x36, 0x31, 0x4d, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x20,
		0x50, 0x72, 0x6f, 0x32, 0x30, 0x31, 0x39, 0x30, 0x36, 0x31, 0x39, 0x47, 0x4b, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x32, 0x30, 0x31, 0x39, 0x30, 0x34, 0x31, 0x38, 0x51, 0x4b, 0x36, 0x47, 0x4e, 0x38,
		0x30, 0x30, 0x33, 0x4d, 0x36, 0x47, 0x41, 0x55, 0x30, 0x38, 0x32, 0x30, 0x4b, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x4e, 0x53, 0x32, 0x31, 0x36, 0x31, 0x42, 0x4d, 0x31, 0x38, 0x47, 0x4e, 0x24,
		0x31, 0x4d, 0x37, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4d, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x31, 0x31, 0x50, 0x35, 0x20, 0x6d, 0x69,
		0x6e, 0x69, 0x4d, 0x35, 0x20, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x43, 0x44, 0x4d, 0x41, 0x4d, 0x35,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x43, 0x44, 0x4d, 0x41, 0x50, 0x37, 0x20, 0x4d, 0x61, 0x78,
		0x50, 0x38, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x36, 0x20, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x47,
		0x4c, 0x59, 0x31, 0x36, 0x32, 0x30, 0x4d, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x39, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x46, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x30, 0x33, 0x24,
		0x31, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x44, 0x31, 0x47, 0x6c, 0x6f, 0x62, 0x65, 0x78, 0x58,
		0x38, 0x47, 0x55, 0x36, 0x30, 0x31, 0x32, 0x42, 0x47, 0x6c, 0x6f, 0x66, 0x69, 0x69, 0x73, 0x68,
		0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x55, 0x47, 0x6f, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47,
		0x4f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x4f, 0x20, 0x4f, 0x6e,
		0x79, 0x78, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x6f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x47, 0x4f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x48, 0x44, 0x47, 0x6f, 0x20,
		0x4f, 0x6e, 0x79, 0x78, 0x20, 0x48, 0x44, 0x47, 0x4f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x47, 0x6f,
		0x20, 0x4f, 0x6e, 0x79, 0x78, 0x47, 0x6f, 0x24, 0x31, 0x47, 0x6f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
		0x48, 0x31, 0x2d, 0x43, 0x2d, 0x41, 0x4c, 0x41, 0x44, 0x45, 0x4e, 0x47, 0x57, 0x35, 0x47, 0x6f,
		0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x46, 0x31, 0x30, 0x5f, 0x50, 0x52, 0x49, 0x4d,
		0x45, 0x46, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x46, 0x33, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x46, 0x33, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x46, 0x39, 0x5f, 0x50, 0x4c, 0x55, 0x53,
		0x54, 0x45, 0x41, 0x4d, 0x5f, 0x37, 0x5f, 0x33, 0x47, 0x54, 0x65, 0x61, 0x6d, 0x20, 0x37, 0x2e,
		0x30, 0x20, 0x33, 0x47, 0x47, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65,
		0x74, 0x74, 0x61, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x2d, 0x39, 0x31, 0x30, 0x4e, 0x65,
		0x74, 0x74, 0x61, 0x20, 0x33, 0x42, 0x45, 0x4e, 0x47, 0x41, 0x4c, 0x5f, 0x36, 0x42, 0x65, 0x6e,
		0x67, 0x61, 0x6c, 0x20, 0x36, 0x44, 0x45, 0x54, 0x52, 0x4f, 0x49, 0x54, 0x20, 0x33, 0x44, 0x65,
		0x74, 0x72, 0x6f, 0x69, 0x74, 0x20, 0x33, 0x47, 0x6f, 0x6c, 0x79, 0x47, 0x6f, 0x6d, 0x65, 0x43,
		0x37, 0x32, 0x43, 0x37, 0x31, 0x43, 0x35, 0x31, 0x4b, 0x31, 0x55, 0x31, 0x55, 0x37, 0x55, 0x37,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x55, 0x39, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x47, 0x6c, 0x61,
		0x73, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x41, 0x4f,
		0x53, 0x50, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64,
		0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x35, 0x41, 0x4f, 0x53, 0x50, 0x20, 0x6f, 0x6e, 0x20, 0x4d,
		0x61, 0x6e, 0x74, 0x61, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x31, 0x30, 0x50, 0x69, 0x78, 0x65,
		0x6c, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x69, 0x62, 0x65, 0x72, 0x20, 0x24, 0x31, 0x43,
		0x68, 0x72, 0x6f, 0x6d, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x63,
		0x61, 0x73, 0x74, 0x20, 0x48, 0x44, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x63, 0x61, 0x73, 0x74,
		0x20, 0x48, 0x44, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65,
		0x63, 0x61, 0x73, 0x74, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
		0x65, 0x54, 0x56, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x58, 0x4c,
		0x62, 0x6c, 0x75, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x33, 0x50,
		0x69, 0x78, 0x65, 0x6c, 0x20, 0x33, 0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x32,
		0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x33, 0x61, 0x20, 0x58, 0x4c, 0x50, 0x69,
		0x78, 0x65, 0x6c, 0x20, 0x34, 0x20, 0x58, 0x4c, 0x50, 0x49, 0x58, 0x45, 0x4c, 0x34, 0x58, 0x50,
		0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x20, 0x58, 0x41, 0x4f, 0x53, 0x50, 0x20, 0x6f, 0x6e, 0x20,
		0x73, 0x75, 0x6e, 0x66, 0x69, 0x73, 0x68, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x61, 0x50,
		0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x61, 0x20, 0x28, 0x35, 0x47, 0x29, 0x50, 0x69, 0x78, 0x65,
		0x6c, 0x20, 0x24, 0x31, 0x61, 0x47, 0x30, 0x31, 0x31, 0x41, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20,
		0x32, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x20, 0x32, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c,
		0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x24, 0x31, 0x50,
		0x69, 0x70, 0x69, 0x74, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x43, 0x50, 0x69, 0x78, 0x65, 0x6c,
		0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x6f, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x62, 0x6f, 0x6f, 0x6b,
		0x41, 0x44, 0x54, 0x2d, 0x32, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65,
		0x72, 0x47, 0x6f, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x49, 0x36, 0x49, 0x36, 0x53, 0x49, 0x36, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x37, 0x49,
		0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x34, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x47, 0x6f, 0x6f,
		0x77, 0x65, 0x65, 0x6c, 0x47, 0x70, 0x6c, 0x75, 0x73, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e,
		0x74, 0x65, 0x47, 0x52, 0x41, 0x44, 0x49, 0x45, 0x4e, 0x54, 0x45, 0x47, 0x72, 0x61, 0x70, 0x65,
		0x47, 0x54, 0x4d, 0x2d, 0x35, 0x24, 0x31, 0x47, 0x72, 0x65, 0x61, 0x74, 0x20, 0x41, 0x73, 0x69,
		0x61, 0x47, 0x72, 0x65, 0x65, 0x47, 0x30, 0x35, 0x31, 0x35, 0x44, 0x54, 0x6f, 0x73, 0x6f, 0x74,
		0x20, 0x35, 0x47, 0x47, 0x30, 0x36, 0x31, 0x35, 0x44, 0x54, 0x6f, 0x73, 0x6f, 0x74, 0x20, 0x37,
		0x47, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x4f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x4f, 0x20,
		0x35, 0x35, 0x33, 0x30, 0x33, 0x43, 0x35, 0x20, 0x47, 0x4f, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x74,
		0x65, 0x6c, 0x58, 0x31, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72,
		0x65, 0x73, 0x73, 0x6f, 0x52, 0x45, 0x47, 0x41, 0x4c, 0x20, 0x52, 0x32, 0x52, 0x65, 0x67, 0x61,
		0x6c, 0x20, 0x52, 0x32, 0x52, 0x65, 0x67, 0x61, 0x6c, 0x47, 0x72, 0x65, 0x74, 0x65, 0x6c, 0x47,
		0x72, 0x6f, 0x42, 0x65, 0x72, 0x77, 0x65, 0x72, 0x74, 0x47, 0x72, 0x75, 0x6e, 0x64, 0x69, 0x67,
		0x47, 0x24, 0x31, 0x41, 0x46, 0x54, 0x45, 0x55, 0x30, 0x31, 0x34, 0x56, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x20, 0x37, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x46, 0x54,
		0x45, 0x55, 0x46, 0x46, 0x30, 0x31, 0x34, 0x4f, 0x4c, 0x45, 0x44, 0x20, 0x34, 0x4b, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x46, 0x54, 0x45, 0x55, 0x30, 0x31, 0x31, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x20, 0x36, 0x20, 0x48, 0x44, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x47,
		0x74, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x38, 0x73, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x39, 0x58, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x58, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x75, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x48, 0x31, 0x33, 0x33, 0x42, 0x65, 0x74, 0x61, 0x63, 0x72, 0x75, 0x78, 0x48, 0x39, 0x36, 0x4d,
		0x61, 0x78, 0x20, 0x52, 0x4b, 0x24, 0x31, 0x4d, 0x61, 0x78, 0x20, 0x58, 0x32, 0x4d, 0x61, 0x78,
		0x20, 0x56, 0x31, 0x31, 0x48, 0x41, 0x4f, 0x51, 0x49, 0x4e, 0x48, 0x41, 0x4f, 0x56, 0x4d, 0x48,
		0x44, 0x43, 0x48, 0x31, 0x30, 0x5f, 0x4f, 0x4e, 0x45, 0x48, 0x31, 0x30, 0x20, 0x4f, 0x6e, 0x65,
		0x48, 0x45, 0x52, 0x4f, 0x53, 0x50, 0x2d, 0x30, 0x30, 0x31, 0x48, 0x49, 0x50, 0x45, 0x52, 0x4d,
		0x45, 0x44, 0x49, 0x41, 0x20, 0x53, 0x54, 0x49, 0x43, 0x4b, 0x20, 0x34, 0x4b, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x20, 0x54, 0x56, 0x20, 0x24, 0x31, 0x48, 0x4b, 0x50, 0x72, 0x6f, 0x48, 0x4c, 0x4c, 0x4f, 0x48,
		0x4f, 0x54, 0x52, 0x45, 0x41, 0x4c, 0x53, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x50, 0x43,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48, 0x50, 0x48, 0x50, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65,
		0x20, 0x36, 0x20, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x20, 0x54, 0x61, 0x62, 0x53, 0x6c, 0x61, 0x74,
		0x65, 0x20, 0x36, 0x20, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x61, 0x62, 0x48, 0x50, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6c, 0x61,
		0x74, 0x65, 0x20, 0x24, 0x31, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x32, 0x31, 0x63, 0x6d, 0x5f,
		0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x20,
		0x24, 0x31, 0x48, 0x50, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x38,
		0x50, 0x72, 0x6f, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x38, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x50, 0x61, 0x64, 0x69, 0x50, 0x41, 0x51, 0x20, 0x24, 0x31, 0x56, 0x65, 0x65, 0x72, 0x50, 0x72,
		0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x48, 0x50, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x38, 0x32, 0x30, 0x20, 0x47, 0x32, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x38, 0x32, 0x30, 0x20, 0x47, 0x32, 0x5a, 0x32, 0x34, 0x30, 0x20,
		0x54, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
		0x6e, 0x48, 0x54, 0x43, 0x55, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x55, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x55, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x31, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x55, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x55, 0x31, 0x31, 0x20, 0x45, 0x79, 0x65,
		0x73, 0x49, 0x6d, 0x61, 0x67, 0x69, 0x6f, 0x45, 0x76, 0x6f, 0x20, 0x33, 0x47, 0x45, 0x76, 0x6f,
		0x20, 0x34, 0x47, 0x55, 0x31, 0x31, 0x4f, 0x6e, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x4f, 0x6e,
		0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32,
		0x4f, 0x6e, 0x65, 0x20, 0x58, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x31, 0x30, 0x4a, 0x4a, 0x20,
		0x4f, 0x6e, 0x65, 0x4a, 0x20, 0x42, 0x75, 0x74, 0x74, 0x65, 0x72, 0x66, 0x6c, 0x79, 0x42, 0x75,
		0x74, 0x74, 0x65, 0x72, 0x66, 0x6c, 0x79, 0x20, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39, 0x5f,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
		0x6e, 0x65, 0x20, 0x4d, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39,
		0x4f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x44,
		0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49,
		0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x37, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x38, 0x4f, 0x6e, 0x65,
		0x20, 0x4d, 0x38, 0x20, 0x45, 0x79, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x45, 0x38, 0x4f, 0x6e, 0x65,
		0x20, 0x45, 0x39, 0x4f, 0x6e, 0x65, 0x20, 0x45, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e,
		0x65, 0x20, 0x53, 0x39, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x65, 0x6d, 0x69, 0x78, 0x4f, 0x6e, 0x65,
		0x20, 0x58, 0x2b, 0x4f, 0x6e, 0x65, 0x20, 0x41, 0x39, 0x41, 0x44, 0x52, 0x36, 0x33, 0x30, 0x30,
		0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x62, 0x6c, 0x65,
		0x48, 0x54, 0x43, 0x36, 0x34, 0x33, 0x35, 0x4c, 0x56, 0x57, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20,
		0x44, 0x4e, 0x41, 0x41, 0x44, 0x52, 0x36, 0x34, 0x30, 0x30, 0x4c, 0x54, 0x68, 0x75, 0x6e, 0x64,
		0x65, 0x72, 0x42, 0x6f, 0x6c, 0x74, 0x41, 0x44, 0x52, 0x36, 0x34, 0x31, 0x30, 0x4c, 0x52, 0x41,
		0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x62, 0x6c, 0x65,
		0x20, 0x33, 0x53, 0x50, 0x56, 0x20, 0x45, 0x36, 0x30, 0x30, 0x53, 0x50, 0x56, 0x20, 0x45, 0x36,
		0x35, 0x30, 0x56, 0x6f, 0x78, 0x32, 0x50, 0x59, 0x42, 0x32, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65,
		0x20, 0x24, 0x31, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x32, 0x36, 0x53, 0x44, 0x65,
		0x73, 0x69, 0x72, 0x65, 0x20, 0x35, 0x31, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x35,
		0x33, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x33, 0x31, 0x30, 0x44, 0x65, 0x73, 0x69,
		0x72, 0x65, 0x20, 0x33, 0x32, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x30, 0x38,
		0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x31, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72,
		0x65, 0x20, 0x36, 0x30, 0x31, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x32, 0x30, 0x44,
		0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x32, 0x36, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20,
		0x38, 0x31, 0x36, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x35, 0x32, 0x36, 0x44, 0x65, 0x73,
		0x69, 0x72, 0x65, 0x20, 0x31, 0x39, 0x73, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x32,
		0x30, 0x47, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x45, 0x78, 0x6f, 0x64, 0x75,
		0x73, 0x20, 0x31, 0x55, 0x31, 0x39, 0x65, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x30,
		0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x30, 0x20, 0x45, 0x76, 0x6f, 0x44, 0x65, 0x73, 0x69, 0x72,
		0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x44, 0x65, 0x73, 0x69, 0x72,
		0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x31,
		0x30, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x65, 0x78, 0x75,
		0x73, 0x48, 0x44, 0x32, 0x48, 0x44, 0x32, 0x50, 0x37, 0x31, 0x35, 0x61, 0x46, 0x6c, 0x79, 0x65,
		0x72, 0x46, 0x6c, 0x79, 0x65, 0x72, 0x20, 0x24, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78,
		0x24, 0x31, 0x20, 0x28, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x29, 0x57, 0x69, 0x6c, 0x64, 0x66,
		0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x61, 0x66, 0x75, 0x72,
		0x79, 0x47, 0x54, 0x32, 0x30, 0x48, 0x61, 0x69, 0x65, 0x72, 0x41, 0x32, 0x5f, 0x4c, 0x69, 0x74,
		0x65, 0x5f, 0x4e, 0x46, 0x43, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x41, 0x32, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x20, 0x4e, 0x46, 0x43, 0x41, 0x34, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x6c, 0x70,
		0x68, 0x61, 0x20, 0x41, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x4d, 0x2d, 0x4e, 0x35, 0x30,
		0x35, 0x2d, 0x46, 0x4c, 0x49, 0x38, 0x53, 0x35, 0x20, 0x53, 0x69, 0x6c, 0x6b, 0x45, 0x6c, 0x65,
		0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x45, 0x31, 0x33, 0x48, 0x4d, 0x2d, 0x4e, 0x37, 0x30, 0x30,
		0x2d, 0x46, 0x4c, 0x48, 0x4d, 0x2d, 0x4e, 0x37, 0x30, 0x31, 0x2d, 0x46, 0x4c, 0x48, 0x4d, 0x2d,
		0x4e, 0x35, 0x30, 0x31, 0x2d, 0x46, 0x4c, 0x4c, 0x35, 0x36, 0x48, 0x4d, 0x2d, 0x49, 0x35, 0x35,
		0x39, 0x2d, 0x46, 0x4c, 0x4c, 0x35, 0x35, 0x73, 0x48, 0x4d, 0x2d, 0x49, 0x35, 0x36, 0x30, 0x2d,
		0x46, 0x4c, 0x47, 0x37, 0x73, 0x48, 0x4d, 0x2d, 0x47, 0x35, 0x35, 0x33, 0x2d, 0x46, 0x4c, 0x47,
		0x35, 0x31, 0x50, 0x32, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x43, 0x34, 0x36,
		0x42, 0x32, 0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x45, 0x43, 0x68, 0x61,
		0x69, 0x65, 0x72, 0x41, 0x54, 0x56, 0x6e, 0x69, 0x70, 0x70, 0x6f, 0x72, 0x69, 0x68, 0x61, 0x69,
		0x65, 0x72, 0x41, 0x54, 0x56, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x68,
		0x61, 0x69, 0x65, 0x72, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20,
		0x44, 0x56, 0x42, 0x32, 0x4b, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20,
		0x44, 0x56, 0x42, 0x32, 0x4b, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20,
		0x46, 0x46, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x61, 0x69, 0x70, 0x61, 0x69, 0x4e, 0x6f, 0x62, 0x6c,
		0x65, 0x20, 0x53, 0x36, 0x48, 0x61, 0x6d, 0x6c, 0x65, 0x74, 0x5a, 0x65, 0x6c, 0x69, 0x67, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73,
		0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x20, 0x50, 0x72,
		0x6f, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x32, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29,
		0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x32, 0x54, 0x69,
		0x74, 0x61, 0x6e, 0x20, 0x32, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x72, 0x6f, 0x6e, 0x20, 0x24,
		0x31, 0x49, 0x72, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x41, 0x63, 0x74,
		0x69, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x41, 0x63, 0x74, 0x69, 0x76,
		0x65, 0x20, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x5f, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x35, 0x47, 0x48, 0x61,
		0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x32, 0x5f, 0x50, 0x52, 0x4f, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72,
		0x5f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x5f, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x33, 0x48,
		0x61, 0x6e, 0x64, 0x68, 0x65, 0x6c, 0x64, 0x48, 0x61, 0x6e, 0x6e, 0x53, 0x70, 0x72, 0x65, 0x65,
		0x53, 0x4e, 0x31, 0x41, 0x54, 0x37, 0x31, 0x57, 0x28, 0x42, 0x29, 0x53, 0x4e, 0x37, 0x30, 0x54,
		0x33, 0x31, 0x53, 0x4e, 0x37, 0x30, 0x54, 0x33, 0x53, 0x4e, 0x37, 0x30, 0x54, 0x35, 0x31, 0x41,
		0x53, 0x4e, 0x39, 0x37, 0x54, 0x34, 0x31, 0x57, 0x54, 0x37, 0x2d, 0x51, 0x43, 0x53, 0x4e, 0x41,
		0x54, 0x37, 0x31, 0x42, 0x55, 0x45, 0x48, 0x61, 0x72, 0x64, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
		0x4f, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x20, 0x24, 0x31, 0x48, 0x61, 0x72, 0x70, 0x65, 0x72, 0x48,
		0x61, 0x72, 0x74, 0x65, 0x6e, 0x73, 0x48, 0x61, 0x73, 0x65, 0x65, 0x48, 0x61, 0x74, 0x68, 0x77,
		0x61, 0x79, 0x48, 0x65, 0x61, 0x64, 0x57, 0x6f, 0x6c, 0x66, 0x48, 0x50, 0x61, 0x64, 0x24, 0x31,
		0x48, 0x65, 0x6c, 0x69, 0x6f, 0x48, 0x65, 0x78, 0x61, 0x42, 0x79, 0x74, 0x65, 0x58, 0x37, 0x48,
		0x65, 0x7a, 0x69, 0x72, 0x65, 0x48, 0x69, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x24, 0x31, 0x42,
		0x6f, 0x6f, 0x73, 0x74, 0x20, 0x47, 0x6f, 0x56, 0x48, 0x49, 0x58, 0x2d, 0x34, 0x30, 0x46, 0x31,
		0x35, 0x32, 0x4d, 0x53, 0x59, 0x62, 0x56, 0x48, 0x49, 0x58, 0x2d, 0x34, 0x30, 0x46, 0x31, 0x35,
		0x32, 0x4d, 0x53, 0x59, 0x56, 0x48, 0x49, 0x58, 0x2d, 0x24, 0x31, 0x48, 0x69, 0x20, 0x4e, 0x6f,
		0x76, 0x61, 0x46, 0x49, 0x4f, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x39, 0x20, 0x53, 0x45, 0x48, 0x65,
		0x62, 0x65, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x65, 0x72, 0x61,
		0x2d, 0x42, 0x44, 0x30, 0x30, 0x39, 0x41, 0x4c, 0x48, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x4d, 0x47,
		0x5a, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x69, 0x2d, 0x4c,
		0x65, 0x76, 0x65, 0x6c, 0x48, 0x4c, 0x56, 0x2d, 0x54, 0x24, 0x31, 0x48, 0x69, 0x48, 0x69, 0x48,
		0x49, 0x48, 0x49, 0x2d, 0x24, 0x31, 0x4b, 0x48, 0x2d, 0x54, 0x41, 0x42, 0x2d, 0x30, 0x31, 0x48,
		0x69, 0x4b, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6e, 0x35, 0x46, 0x75, 0x6e, 0x20, 0x35, 0x48, 0x69,
		0x4d, 0x61, 0x78, 0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x24, 0x31, 0x50, 0x75, 0x72, 0x65,
		0x20, 0x33, 0x53, 0x48, 0x69, 0x62, 0x65, 0x72, 0x67, 0x48, 0x69, 0x67, 0x68, 0x20, 0x51, 0x48,
		0x69, 0x67, 0x68, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46,
		0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76,
		0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20,
		0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20,
		0x46, 0x69, 0x76, 0x65, 0x20, 0x45, 0x76, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69,
		0x76, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65,
		0x53, 0x70, 0x61, 0x64, 0x65, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x46, 0x65, 0x73, 0x74,
		0x20, 0x58, 0x4c, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x65, 0x73, 0x74, 0x20, 0x58, 0x4c, 0x46, 0x65,
		0x73, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x65, 0x73, 0x74, 0x42, 0x61, 0x79, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x20, 0x46, 0x6f, 0x75, 0x72, 0x50, 0x75, 0x72, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x50, 0x75, 0x72, 0x65, 0x20, 0x46, 0x52, 0x61, 0x7a, 0x61, 0x72, 0x20, 0x50, 0x72, 0x6f,
		0x52, 0x61, 0x7a, 0x61, 0x72, 0x45, 0x61, 0x73, 0x79, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x45, 0x61, 0x73, 0x79, 0x20, 0x24, 0x31, 0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x45,
		0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x32, 0x42,
		0x6f, 0x6f, 0x73, 0x74, 0x20, 0x32, 0x20, 0x53, 0x45, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x33,
		0x20, 0x53, 0x45, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x53,
		0x45, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x33, 0x5a, 0x65, 0x72, 0x61, 0x20, 0x53, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x54, 0x61, 0x73, 0x74, 0x79, 0x56, 0x65, 0x72, 0x67, 0x65, 0x20, 0x4d,
		0x57, 0x69, 0x6e, 0x57, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x72,
		0x63, 0x75, 0x6c, 0x65, 0x73, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x70, 0x68,
		0x61, 0x20, 0x52, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x53, 0x45, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x24, 0x31, 0x43, 0x4f, 0x53, 0x4d, 0x4f,
		0x20, 0x44, 0x55, 0x4f, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x44, 0x75, 0x6f, 0x4f, 0x6d, 0x65,
		0x67, 0x61, 0x20, 0x51, 0x48, 0x69, 0x70, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x50, 0x75, 0x6c,
		0x73, 0x65, 0x48, 0x69, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x45, 0x32, 0x37, 0x30, 0x42, 0x53, 0x41,
		0x53, 0x65, 0x72, 0x6f, 0x20, 0x37, 0x45, 0x32, 0x32, 0x53, 0x65, 0x72, 0x6f, 0x20, 0x37, 0x20,
		0x50, 0x72, 0x6f, 0x45, 0x32, 0x32, 0x38, 0x31, 0x53, 0x65, 0x72, 0x6f, 0x20, 0x38, 0x48, 0x4c,
		0x54, 0x45, 0x32, 0x30, 0x32, 0x4e, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x30, 0x33, 0x54, 0x41, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x43, 0x43, 0x48, 0x4c, 0x54, 0x45, 0x37, 0x30, 0x30, 0x54, 0x41,
		0x36, 0x48, 0x4c, 0x54, 0x45, 0x37, 0x33, 0x30, 0x54, 0x41, 0x36, 0x4c, 0x48, 0x4e, 0x52, 0x33,
		0x32, 0x30, 0x54, 0x48, 0x4c, 0x54, 0x45, 0x35, 0x35, 0x36, 0x4e, 0x4d, 0x35, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x32, 0x30, 0x32, 0x31, 0x4d, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x45, 0x35, 0x30, 0x73, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x20, 0x45, 0x20, 0x4d, 0x41, 0x58, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
		0x79, 0x20, 0x45, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x20, 0x4d, 0x61, 0x78, 0x48, 0x4c, 0x54, 0x45,
		0x35, 0x30, 0x31, 0x4e, 0x56, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x53, 0x39, 0x30, 0x37, 0x56,
		0x33, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x32, 0x33, 0x45, 0x48, 0x33, 0x30, 0x49, 0x34, 0x36, 0x44,
		0x31, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e, 0x20, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x6d, 0x61, 0x78, 0x20, 0x52, 0x45, 0x47, 0x36, 0x38, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x66, 0x72, 0x65, 0x6e, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x5a, 0x45,
		0x47, 0x39, 0x38, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e, 0x20, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x55, 0x32, 0x46, 0x32, 0x36, 0x46, 0x32, 0x38, 0x46, 0x32,
		0x39, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x34, 0x4b, 0x69, 0x6e, 0x67,
		0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20,
		0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x35, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20,
		0x36, 0x46, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x33, 0x30, 0x53, 0x46, 0x34, 0x30, 0x46,
		0x35, 0x30, 0x46, 0x35, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x31, 0x38, 0x48, 0x32, 0x30,
		0x48, 0x4c, 0x54, 0x45, 0x31, 0x30, 0x33, 0x45, 0x45, 0x32, 0x30, 0x48, 0x69, 0x73, 0x65, 0x6e,
		0x73, 0x65, 0x20, 0x45, 0x35, 0x30, 0x20, 0x31, 0x32, 0x38, 0x47, 0x45, 0x35, 0x30, 0x48, 0x4c,
		0x54, 0x45, 0x32, 0x32, 0x39, 0x54, 0x52, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x31, 0x31, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x48, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x48, 0x4c, 0x54, 0x45, 0x4d, 0x38, 0x30, 0x30, 0x58, 0x69, 0x61, 0x6f, 0x68, 0x61, 0x69, 0x74,
		0x75, 0x6e, 0x20, 0x32, 0x55, 0x33, 0x30, 0x55, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x45,
		0x39, 0x4e, 0x61, 0x6e, 0x61, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x48, 0x24,
		0x31, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45,
		0x33, 0x30, 0x20, 0x53, 0x45, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6d, 0x65,
		0x64, 0x69, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x55,
		0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x55, 0x33, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x48, 0x69, 0x74, 0x61, 0x63, 0x68, 0x69, 0x48, 0x69, 0x74, 0x65, 0x63, 0x68, 0x48, 0x6f,
		0x66, 0x66, 0x6d, 0x61, 0x6e, 0x6e, 0x58, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x6d, 0x65, 0x74, 0x65,
		0x63, 0x68, 0x41, 0x4c, 0x46, 0x41, 0x20, 0x24, 0x31, 0x49, 0x64, 0x65, 0x61, 0x6c, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x37, 0x20, 0x49, 0x50, 0x53, 0x24, 0x31, 0x48, 0x54, 0x20, 0x24, 0x31, 0x48,
		0x6f, 0x6d, 0x74, 0x6f, 0x6d, 0x50, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x31, 0x37,
		0x53, 0x31, 0x37, 0x48, 0x54, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x54, 0x24, 0x31, 0x48,
		0x6f, 0x6e, 0x65, 0x79, 0x77, 0x65, 0x6c, 0x6c, 0x53, 0x63, 0x61, 0x6e, 0x50, 0x61, 0x6c, 0x20,
		0x24, 0x31, 0x45, 0x44, 0x41, 0x37, 0x31, 0x53, 0x63, 0x61, 0x6e, 0x50, 0x61, 0x6c, 0x20, 0x45,
		0x44, 0x41, 0x37, 0x31, 0x44, 0x6f, 0x6c, 0x70, 0x68, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x48, 0x6f,
		0x6f, 0x7a, 0x6f, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x48, 0x6f, 0x73, 0x69, 0x6e,
		0x48, 0x6f, 0x74, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x48, 0x50, 0x50, 0x2d, 0x47, 0x53,
		0x31, 0x56, 0x4c, 0x45, 0x35, 0x50, 0x6f, 0x62, 0x6c, 0x61, 0x6e, 0x6f, 0x48, 0x50, 0x50, 0x2d,
		0x4c, 0x35, 0x35, 0x42, 0x53, 0x65, 0x72, 0x72, 0x61, 0x6e, 0x6f, 0x48, 0x6f, 0x74, 0x77, 0x61,
		0x76, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x20, 0x56, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48,
		0x6f, 0x74, 0x20, 0x36, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x52, 0x38, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x58, 0x31, 0x36, 0x43, 0x79, 0x62, 0x65, 0x72, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x79, 0x62, 0x65, 0x72, 0x20, 0x24, 0x31, 0x53, 0x79,
		0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x24, 0x31, 0x57, 0x31, 0x30, 0x4d, 0x35, 0x69, 0x53, 0x79, 0x6d,
		0x62, 0x6f, 0x6c, 0x20, 0x52, 0x36, 0x30, 0x54, 0x41, 0x42, 0x20, 0x52, 0x36, 0x20, 0x50, 0x72,
		0x6f, 0x54, 0x61, 0x62, 0x20, 0x52, 0x36, 0x20, 0x52, 0x72, 0x6f, 0x53, 0x79, 0x6d, 0x62, 0x6f,
		0x6c, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x48, 0x6f, 0x77, 0x48, 0x54,
		0x2d, 0x31, 0x30, 0x30, 0x31, 0x47, 0x20, 0x47, 0x6f, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x48, 0x54,
		0x2d, 0x24, 0x31, 0x48, 0x75, 0x61, 0x64, 0x6f, 0x6f, 0x48, 0x47, 0x31, 0x31, 0x48, 0x75, 0x61,
		0x67, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x76, 0x69, 0x4b, 0x48, 0x41, 0x54, 0x41, 0x52, 0x20, 0x48,
		0x2d, 0x31, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x48, 0x41, 0x54, 0x41, 0x52, 0x20, 0x48,
		0x2d, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x75, 0x61, 0x77, 0x65, 0x69, 0x43, 0x52, 0x54,
		0x2d, 0x4e, 0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x52, 0x45, 0x41, 0x2d, 0x4e, 0x58, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x30,
		0x52, 0x45, 0x50, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x46, 0x4e, 0x45, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x37, 0x30, 0x46, 0x4e, 0x45, 0x2d, 0x4e, 0x58, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x37, 0x30, 0x20, 0x35, 0x47, 0x53, 0x44, 0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x4e, 0x50, 0x2d, 0x41, 0x4e,
		0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x4e,
		0x42, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x46, 0x6c, 0x61, 0x74, 0x41, 0x4e, 0x4e, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x30, 0x20, 0x35, 0x47, 0x48, 0x50, 0x42, 0x2d, 0x41, 0x4e,
		0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x39,
		0x53, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x44, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64,
		0x20, 0x44, 0x33, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x33, 0x30, 0x41, 0x73,
		0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x33, 0x32, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20,
		0x59, 0x33, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x43, 0x41, 0x73,
		0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x33, 0x30, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20,
		0x47, 0x35, 0x32, 0x37, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x36, 0x32, 0x30, 0x53,
		0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x36, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e,
		0x64, 0x20, 0x47, 0x37, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x37, 0x41, 0x73, 0x63,
		0x65, 0x6e, 0x64, 0x20, 0x50, 0x36, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x37, 0x33,
		0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64,
		0x20, 0x58, 0x54, 0x32, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x32, 0x32, 0x31, 0x41,
		0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x35, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64,
		0x20, 0x59, 0x35, 0x36, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x37, 0x30, 0x30,
		0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x45, 0x45, 0x6e,
		0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x53, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x35, 0x53, 0x4d,
		0x47, 0x41, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x35, 0x30, 0x4d,
		0x47, 0x41, 0x2d, 0x41, 0x4c, 0x34, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x36, 0x30, 0x43,
		0x54, 0x52, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x35, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x54, 0x47, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x36, 0x30, 0x58, 0x47, 0x52, 0x33, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x36, 0x45, 0x6e,
		0x6a, 0x6f, 0x79, 0x20, 0x36, 0x53, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x45, 0x6e, 0x6a,
		0x6f, 0x79, 0x20, 0x37, 0x53, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x38, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x38, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x38, 0x65, 0x45, 0x6e, 0x6a, 0x6f,
		0x79, 0x20, 0x39, 0x65, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x5a, 0x20, 0x35, 0x47, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20,
		0x32, 0x30, 0x20, 0x53, 0x45, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x35, 0x47, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x65, 0x46, 0x75,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x59, 0x36, 0x70, 0x47, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x47,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x36, 0x32, 0x31, 0x47, 0x52,
		0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x52, 0x35, 0x47, 0x52, 0x35, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x58, 0x38, 0x47, 0x38, 0x47, 0x37, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x36, 0x30, 0x50, 0x35, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x50, 0x35, 0x30, 0x50, 0x35, 0x30, 0x45, 0x50, 0x35, 0x30, 0x20, 0x50, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x31, 0x30, 0x49, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x49, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x53,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x33, 0x30, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x49, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x33, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x43, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x33, 0x43, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33,
		0x58, 0x48, 0x4e, 0x33, 0x2d, 0x55, 0x30, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x43, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x34, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x58, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x35, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x35, 0x43, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x35, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x35, 0x47, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x53, 0x45, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4c, 0x53, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x36, 0x30, 0x47, 0x49, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x36, 0x30, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x54, 0x4e, 0x41, 0x2d,
		0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x43, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x36, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x41, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x37, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x37, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x37, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x41, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x38, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38,
		0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38,
		0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x41, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x39, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x53,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x58,
		0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x48, 0x6f, 0x6c, 0x6c, 0x79, 0x20,
		0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x48, 0x6f, 0x6c, 0x6c, 0x79, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x20, 0x32, 0x45, 0x4c, 0x5a, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x33, 0x45, 0x4c, 0x5a, 0x2d, 0x41, 0x4e, 0x31,
		0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x45, 0x4c, 0x5a, 0x2d, 0x41, 0x4e, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x47, 0x45,
		0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63,
		0x20, 0x34, 0x4c, 0x47, 0x45, 0x2d, 0x41, 0x4e, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x41, 0x4e, 0x59, 0x2d,
		0x4c, 0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x34,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x4d, 0x4f, 0x2d, 0x4e, 0x58, 0x33, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x47,
		0x49, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69,
		0x63, 0x20, 0x35, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x54, 0x2d, 0x41, 0x4e, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61,
		0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x50, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50,
		0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x34, 0x30, 0x20,
		0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x34, 0x30, 0x20, 0x34, 0x47, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x34, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x20, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x56, 0x4e, 0x45, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x30, 0x56, 0x4e, 0x45, 0x2d, 0x41, 0x4e, 0x34,
		0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x43, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x45, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x35, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x43, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x54, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x34, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x58, 0x37, 0x61, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35,
		0x54, 0x4e, 0x45, 0x57, 0x2d, 0x41, 0x4e, 0x39, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x35, 0x20, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x54, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x58, 0x32, 0x30, 0x20, 0x53, 0x45, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x37, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x32, 0x30, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x39, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x31,
		0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x56, 0x34, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x56, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x39, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x31, 0x30, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x30, 0x56, 0x4e, 0x41, 0x2d, 0x4c, 0x32,
		0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x59, 0x36, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x59, 0x36, 0x20,
		0x49, 0x49, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x59, 0x36, 0x20, 0x45, 0x6c, 0x69,
		0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x58, 0x31, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x37, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x58, 0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x38, 0x61, 0x56, 0x4e, 0x45,
		0x2d, 0x4e, 0x34, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x38, 0x20, 0x35, 0x47, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x36, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x36, 0x61,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x4b, 0x47,
		0x2d, 0x41, 0x4e, 0x37, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x33, 0x30, 0x20, 0x4d,
		0x61, 0x78, 0x41, 0x4e, 0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x58, 0x33, 0x30, 0x54, 0x46, 0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x58, 0x33, 0x30, 0x69, 0x54, 0x46, 0x59, 0x2d, 0x41, 0x4e, 0x34, 0x30, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x49,
		0x4f, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x34, 0x30, 0x69,
		0x41, 0x44, 0x54, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x34,
		0x30, 0x20, 0x47, 0x54, 0x52, 0x4d, 0x4f, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x58, 0x34, 0x30, 0x52, 0x4d, 0x4f, 0x2d, 0x4e, 0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x58, 0x39, 0x61, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x39, 0x20, 0x35, 0x47, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x58, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x35, 0x43, 0x52,
		0x54, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x35, 0x30, 0x69,
		0x41, 0x4c, 0x49, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x35,
		0x30, 0x57, 0x4f, 0x44, 0x2d, 0x4c, 0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x34, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58, 0x32, 0x49, 0x64, 0x65, 0x6f, 0x73,
		0x20, 0x58, 0x33, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58, 0x35, 0x49, 0x64, 0x65, 0x6f, 0x73,
		0x20, 0x58, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x35,
		0x52, 0x49, 0x4f, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20,
		0x34, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x38, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e,
		0x67, 0x20, 0x39, 0x54, 0x59, 0x48, 0x36, 0x30, 0x31, 0x4d, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e,
		0x67, 0x20, 0x39, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x53, 0x4d, 0x61, 0x74,
		0x65, 0x20, 0x58, 0x53, 0x20, 0x32, 0x54, 0x41, 0x48, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x58, 0x41, 0x4c, 0x54, 0x2d, 0x4c, 0x32, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x58, 0x33, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x32, 0x54, 0x45, 0x54, 0x2d, 0x41, 0x4e, 0x35,
		0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x32, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x31, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65,
		0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x52,
		0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x58, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33,
		0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x33, 0x30, 0x20, 0x52, 0x53, 0x20, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65, 0x20, 0x44, 0x65,
		0x73, 0x69, 0x67, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30,
		0x45, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x4d,
		0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x52, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x45, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x35, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x35, 0x30, 0x43, 0x45, 0x54, 0x2d, 0x41, 0x4c,
		0x36, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x35, 0x30, 0x45, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x38,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x39, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x52, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x52, 0x53, 0x20, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68,
		0x65, 0x20, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x53, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x53, 0x45, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x49, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x32, 0x53, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x33, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33, 0x69, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x34, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x34, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x69, 0x59, 0x41, 0x4c,
		0x2d, 0x4c, 0x36, 0x31, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x54, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x35, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x36, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x36, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x36, 0x20, 0x53, 0x45, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x37, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47,
		0x4d, 0x41, 0x4f, 0x2d, 0x4c, 0x58, 0x39, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x31, 0x69, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x4f, 0x41, 0x2d, 0x4c, 0x58,
		0x39, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x31, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x69, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x38, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x69, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x38, 0x20, 0x35, 0x47, 0x4a, 0x53, 0x43, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x38, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x4a, 0x53, 0x43, 0x2d, 0x41, 0x4c, 0x35,
		0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x53, 0x45, 0x20, 0x34, 0x47, 0x43, 0x48, 0x4c,
		0x2d, 0x41, 0x4c, 0x36, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x53, 0x45, 0x20, 0x56,
		0x69, 0x74, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x34, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x39, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x39, 0x20, 0x50, 0x72,
		0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x39, 0x20, 0x53, 0x45, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x30, 0x20, 0x34, 0x47, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x31, 0x30, 0x20, 0x53, 0x45, 0x4d, 0x41, 0x4f, 0x2d, 0x4c, 0x58, 0x39,
		0x4e, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x59, 0x6f, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x36, 0x30, 0x45, 0x56, 0x45, 0x2d, 0x4c, 0x58, 0x39, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x59, 0x36, 0x31, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x37, 0x30, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x59, 0x39, 0x30, 0x53, 0x54, 0x47, 0x2d, 0x4c, 0x58, 0x31, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x59, 0x39, 0x31, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x20, 0x73,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x50, 0x20, 0x73, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x5a,
		0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x50, 0x31, 0x30, 0x50, 0x31, 0x30, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x50, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x31, 0x30, 0x20,
		0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x50, 0x32, 0x30, 0x50, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x50, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x33, 0x30, 0x50, 0x33, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x50, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x34, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x45, 0x50, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x45, 0x20,
		0x4e, 0x46, 0x43, 0x50, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x34, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x38, 0x50, 0x38, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69,
		0x75, 0x6d, 0x50, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29,
		0x50, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x50, 0x39,
		0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x50,
		0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x39, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x58, 0x59, 0x20, 0x4d, 0x61, 0x78, 0x59, 0x33,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x59, 0x33, 0x49, 0x49, 0x59, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x35, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59,
		0x35, 0x20, 0x6c, 0x69, 0x74, 0x65, 0x59, 0x35, 0x70, 0x59, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x59, 0x35, 0x49, 0x49, 0x59, 0x36, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29,
		0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x38, 0x29, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x36, 0x20, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x36, 0x20, 0x50, 0x72, 0x6f,
		0x59, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x36, 0x32,
		0x35, 0x59, 0x36, 0x33, 0x35, 0x59, 0x36, 0x33, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53,
		0x49, 0x4d, 0x59, 0x36, 0x49, 0x49, 0x59, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x59, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x59, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x39, 0x59, 0x37, 0x61, 0x59,
		0x37, 0x70, 0x59, 0x38, 0x70, 0x59, 0x39, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x39,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x39, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x39, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20,
		0x53, 0x47, 0x54, 0x33, 0x45, 0x76, 0x6f, 0x6c, 0x75, 0x63, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x55,
		0x6c, 0x74, 0x79, 0x6d, 0x20, 0x35, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x36, 0x4e,
		0x65, 0x78, 0x75, 0x73, 0x20, 0x36, 0x50, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x30,
		0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x57, 0x61, 0x74,
		0x65, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x4d, 0x61, 0x74, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29,
		0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x32, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30,
		0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x31, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x31, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61,
		0x64, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x54,
		0x31, 0x30, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x73, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34,
		0x22, 0x20, 0x53, 0x45, 0x44, 0x42, 0x59, 0x32, 0x2d, 0x57, 0x30, 0x39, 0x4d, 0x61, 0x74, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x41, 0x69, 0x72, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x44, 0x42, 0x59, 0x32, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61,
		0x64, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x41, 0x69, 0x72, 0x4d, 0x61, 0x74, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x53, 0x45, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x61, 0x70, 0x65, 0x72, 0x20, 0x31, 0x30,
		0x2e, 0x33, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x57, 0x61,
		0x74, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38, 0x2e, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x32, 0x52, 0x4f, 0x44, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x32, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x52, 0x4a, 0x32, 0x2d, 0x57, 0x30,
		0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x31, 0x30,
		0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x52, 0x4a, 0x32, 0x2d, 0x41, 0x4e, 0x30,
		0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x31, 0x30,
		0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x42, 0x52, 0x54, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x42, 0x52, 0x54, 0x2d, 0x41, 0x4e, 0x30, 0x39, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x31, 0x22, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56,
		0x36, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x56, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x4b, 0x4f, 0x42, 0x32, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x37, 0x20, 0x38, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b,
		0x4f, 0x42, 0x32, 0x4b, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x54, 0x38, 0x20, 0x38, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x4f, 0x42, 0x32, 0x2d, 0x41, 0x4c,
		0x30, 0x30, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x37,
		0x20, 0x38, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x47, 0x52, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x4e,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x36, 0x41, 0x47, 0x4d, 0x2d,
		0x57, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58,
		0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47, 0x52, 0x2d, 0x41,
		0x4c, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58,
		0x36, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x36, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x20, 0x31, 0x32, 0x2e, 0x30, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35, 0x20, 0x38, 0x43,
		0x33, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x43, 0x33, 0x20, 0x39, 0x2e,
		0x36, 0x22, 0x43, 0x33, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29,
		0x43, 0x33, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x43, 0x35, 0x20, 0x38, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x35, 0x20, 0x31,
		0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x4d, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x4d, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x4d, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d,
		0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22,
		0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x30, 0x2e, 0x38, 0x22, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x36, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x36, 0x22, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30,
		0x2e, 0x38, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x36, 0x20, 0x31, 0x30,
		0x2e, 0x38, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x58, 0x32, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x38, 0x2e, 0x34, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x36, 0x20, 0x38, 0x2e, 0x34, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33, 0x20, 0x38, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x31, 0x30, 0x42, 0x54, 0x56, 0x2d, 0x44, 0x4c, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x4d, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x35,
		0x41, 0x47, 0x4d, 0x33, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x41, 0x47, 0x4d, 0x33, 0x2d, 0x41, 0x4c, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x35, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x54, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x54, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54,
		0x33, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x33, 0x20,
		0x38, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x33, 0x20, 0x37, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x37, 0x2e, 0x30, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x37, 0x2e, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x31,
		0x30, 0x2e, 0x30, 0x22, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64,
		0x20, 0x54, 0x31, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54,
		0x31, 0x20, 0x37, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x20, 0x38,
		0x41, 0x47, 0x53, 0x33, 0x4b, 0x2d, 0x57, 0x32, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x53, 0x45, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x73, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47, 0x53, 0x33, 0x4b, 0x2d, 0x4c, 0x30, 0x39,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x73, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x47, 0x52, 0x4b, 0x2d, 0x57, 0x30, 0x39, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x20, 0x39, 0x2e, 0x37, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47, 0x52, 0x4b, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c,
		0x54, 0x45, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x4d, 0x4f, 0x4e, 0x2d, 0x41, 0x4c, 0x31, 0x39, 0x42, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x43, 0x35, 0x20, 0x38, 0x22, 0x42, 0x5a, 0x49, 0x2d, 0x41, 0x4c, 0x30, 0x30,
		0x43, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42, 0x5a, 0x49, 0x2d, 0x57, 0x30, 0x30,
		0x43, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x42, 0x5a,
		0x54, 0x33, 0x2d, 0x57, 0x30, 0x39, 0x42, 0x5a, 0x54, 0x33, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x43,
		0x35, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x42, 0x5a, 0x44, 0x2d, 0x57, 0x30, 0x30, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x42, 0x5a, 0x44, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x50, 0x61, 0x64, 0x20, 0x43, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x44, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x64, 0x74, 0x61, 0x62, 0x20, 0x24, 0x31, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x32, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x47,
		0x4c, 0x4c, 0x2d, 0x41, 0x4c, 0x30, 0x31, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x42, 0x4c, 0x4d, 0x2d, 0x30, 0x30, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x45, 0x43, 0x36, 0x31, 0x30, 0x38,
		0x56, 0x24, 0x31, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x36, 0x39, 0x56, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x20, 0x53, 0x20, 0x36, 0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x35, 0x39, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x20, 0x35, 0x35, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20, 0x35, 0x35, 0x22, 0x4b, 0x41, 0x4e,
		0x54, 0x2d, 0x33, 0x35, 0x30, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72, 0x65,
		0x65, 0x6e, 0x20, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54,
		0x2d, 0x33, 0x36, 0x30, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65,
		0x6e, 0x20, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x36, 0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d,
		0x33, 0x36, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20,
		0x53, 0x20, 0x36, 0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x53, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x37, 0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20, 0x37, 0x35, 0x22, 0x49, 0x64,
		0x65, 0x6f, 0x73, 0x24, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x74, 0x65,
		0x20, 0x24, 0x31, 0x48, 0x75, 0x67, 0x65, 0x72, 0x6f, 0x63, 0x6b, 0x54, 0x31, 0x30, 0x31, 0x5f,
		0x32, 0x30, 0x32, 0x31, 0x54, 0x31, 0x30, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x48,
		0x75, 0x6d, 0x61, 0x78, 0x48, 0x75, 0x72, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x65, 0x49, 0x67, 0x6e,
		0x69, 0x74, 0x65, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x47, 0x69, 0x67, 0x61, 0x47, 0x6c, 0x61,
		0x7a, 0x65, 0x43, 0x6f, 0x62, 0x72, 0x61, 0x44, 0x5a, 0x49, 0x52, 0x45, 0x44, 0x7a, 0x69, 0x72,
		0x65, 0x53, 0x41, 0x47, 0x45, 0x53, 0x61, 0x67, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x53, 0x6c, 0x61,
		0x6d, 0x56, 0x75, 0x6c, 0x63, 0x61, 0x6e, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x5f, 0x50, 0x6c, 0x75,
		0x73, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x69, 0x64, 0x67, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x75, 0x73, 0x68, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x72,
		0x69, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x30, 0x32, 0x31, 0x49, 0x72, 0x69, 0x73,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x56, 0x6f, 0x72, 0x74,
		0x65, 0x78, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x6e, 0x74, 0x48, 0x75, 0x73, 0x6b,
		0x65, 0x65, 0x56, 0x55, 0x4c, 0x4b, 0x41, 0x4e, 0x4f, 0x56, 0x75, 0x6c, 0x6b, 0x61, 0x6e, 0x6f,
		0x48, 0x79, 0x6b, 0x6b, 0x65, 0x72, 0x48, 0x79, 0x6b, 0x6b, 0x65, 0x72, 0x5f, 0x4d, 0x79, 0x54,
		0x61, 0x62, 0x31, 0x30, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x31, 0x30, 0x48, 0x79, 0x74, 0x65, 0x72,
		0x61, 0x48, 0x79, 0x75, 0x6e, 0x64, 0x61, 0x69, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x24,
		0x31, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x53, 0x38, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x4d,
		0x49, 0x58, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69, 0x78, 0x53, 0x65, 0x6f, 0x75, 0x6c,
		0x20, 0x45, 0x43, 0x4f, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x45, 0x63, 0x6f, 0x53, 0x65, 0x6f,
		0x75, 0x6c, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x24,
		0x31, 0x47, 0x32, 0x35, 0x35, 0x32, 0x33, 0x4b, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79,
		0x20, 0x47, 0x32, 0x33, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x47,
		0x32, 0x35, 0x35, 0x32, 0x34, 0x4b, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x47,
		0x32, 0x34, 0x47, 0x32, 0x34, 0x30, 0x32, 0x37, 0x4b, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74,
		0x79, 0x20, 0x47, 0x32, 0x37, 0x57, 0x32, 0x35, 0x30, 0x34, 0x32, 0x4c, 0x45, 0x74, 0x65, 0x72,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x57, 0x34, 0x32, 0x48, 0x50, 0x35, 0x35, 0x34, 0x4f, 0x4c, 0x35,
		0x30, 0x33, 0x46, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x59, 0x4d, 0x49, 0x20, 0x35, 0x53, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x48, 0x79, 0x6d, 0x69, 0x20, 0x35, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x45, 0x34, 0x36, 0x35, 0x47, 0x4f, 0x45, 0x34, 0x36, 0x35, 0x20, 0x47, 0x6f, 0x55, 0x4c, 0x54,
		0x52, 0x41, 0x20, 0x52, 0x4f, 0x43, 0x4b, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x52, 0x6f, 0x63,
		0x6b, 0x4c, 0x24, 0x31, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x57, 0x34, 0x48, 0x54, 0x30,
		0x37, 0x30, 0x31, 0x4c, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x58, 0x4c, 0x48,
		0x54, 0x30, 0x37, 0x30, 0x31, 0x57, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x57,
		0x34, 0x58, 0x48, 0x54, 0x30, 0x37, 0x30, 0x33, 0x57, 0x30, 0x38, 0x4b, 0x6f, 0x72, 0x61, 0x6c,
		0x20, 0x37, 0x57, 0x33, 0x31, 0x30, 0x4c, 0x42, 0x31, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31,
		0x30, 0x4c, 0x42, 0x31, 0x48, 0x54, 0x31, 0x30, 0x30, 0x34, 0x4c, 0x49, 0x31, 0x36, 0x4b, 0x6f,
		0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x58, 0x4c, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x5f, 0x38, 0x57,
		0x32, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x38, 0x57, 0x32, 0x48, 0x54, 0x31, 0x30, 0x30, 0x34,
		0x4c, 0x31, 0x36, 0x48, 0x54, 0x31, 0x30, 0x30, 0x33, 0x58, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61,
		0x6c, 0x20, 0x31, 0x30, 0x58, 0x48, 0x54, 0x31, 0x30, 0x30, 0x32, 0x57, 0x31, 0x36, 0x4b, 0x6f,
		0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x57, 0x48, 0x54, 0x30, 0x37, 0x30, 0x33, 0x4b, 0x31, 0x36,
		0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x4d, 0x33, 0x58, 0x48, 0x54, 0x30, 0x37, 0x30, 0x34,
		0x4b, 0x30, 0x38, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x4d, 0x34, 0x31, 0x30, 0x57, 0x42,
		0x31, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x57, 0x42, 0x31, 0x48, 0x54, 0x31, 0x30,
		0x30, 0x32, 0x57, 0x33, 0x32, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x58, 0x33, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x48, 0x79, 0x54, 0x61, 0x62, 0x20, 0x37, 0x47, 0x42, 0x31, 0x48, 0x79,
		0x54, 0x61, 0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x37, 0x57, 0x44, 0x31, 0x48, 0x79, 0x76,
		0x65, 0x50, 0x72, 0x79, 0x6d, 0x65, 0x20, 0x30, 0x31, 0x53, 0x54, 0x30, 0x31, 0x53, 0x74, 0x6f,
		0x72, 0x6d, 0x20, 0x53, 0x54, 0x30, 0x31, 0x49, 0x2d, 0x49, 0x4e, 0x4e, 0x43, 0x6f, 0x6d, 0x6d,
		0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x33, 0x47,
		0x49, 0x4b, 0x49, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47, 0x4f, 0x35, 0x5f, 0x35, 0x35,
		0x47, 0x6f, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x47, 0x6f, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x42, 0x4c,
		0x45, 0x53, 0x53, 0x5f, 0x47, 0x4f, 0x35, 0x35, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x47, 0x6f,
		0x20, 0x35, 0x2e, 0x35, 0x22, 0x42, 0x4c, 0x45, 0x53, 0x53, 0x50, 0x4c, 0x55, 0x53, 0x42, 0x6c,
		0x65, 0x73, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x4b, 0x55, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x54, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x4d, 0x4f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x51, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x51, 0x32, 0x53, 0x32, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x41, 0x32, 0x53, 0x35, 0x30, 0x20, 0x4c,
		0x69, 0x67, 0x68, 0x74, 0x53, 0x38, 0x30, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x38, 0x39, 0x20,
		0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x38, 0x38, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f,
		0x76, 0x65, 0x72, 0x79, 0x53, 0x39, 0x39, 0x20, 0x4f, 0x63, 0x65, 0x61, 0x6e, 0x53, 0x39, 0x38,
		0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53, 0x38, 0x37, 0x20, 0x52, 0x61, 0x70,
		0x74, 0x6f, 0x72, 0x53, 0x36, 0x37, 0x20, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x37, 0x38, 0x20,
		0x47, 0x6c, 0x6f, 0x72, 0x79, 0x51, 0x38, 0x20, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x44,
		0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x49, 0x49, 0x51, 0x54, 0x61, 0x62, 0x20,
		0x58, 0x39, 0x49, 0x4e, 0x43, 0x41, 0x52, 0x49, 0x4e, 0x51, 0x49, 0x4e, 0x53, 0x59, 0x53, 0x48,
		0x4b, 0x39, 0x2d, 0x34, 0x30, 0x31, 0x30, 0x41, 0x43, 0x37, 0x5f, 0x44, 0x4a, 0x31, 0x37, 0x41,
		0x43, 0x37, 0x2d, 0x44, 0x4a, 0x31, 0x37, 0x49, 0x48, 0x39, 0x2d, 0x4c, 0x36, 0x31, 0x34, 0x4d,
		0x58, 0x20, 0x49, 0x48, 0x39, 0x2d, 0x4c, 0x36, 0x31, 0x34, 0x49, 0x51, 0x4d, 0x56, 0x69, 0x76,
		0x61, 0x6c, 0x64, 0x69, 0x4e, 0x65, 0x77, 0x74, 0x6f, 0x6e, 0x49, 0x52, 0x41, 0x49, 0x52, 0x41,
		0x5f, 0x44, 0x55, 0x4f, 0x44, 0x75, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x54,
		0x49, 0x54, 0x2d, 0x31, 0x31, 0x30, 0x31, 0x2d, 0x51, 0x55, 0x41, 0x44, 0x31, 0x31, 0x30, 0x31,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x49, 0x55, 0x4e, 0x49, 0x49, 0x63, 0x6f, 0x6e, 0x42, 0x49, 0x54,
		0x4e, 0x54, 0x2d, 0x33, 0x35, 0x30, 0x36, 0x4d, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d,
		0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x46, 0x48, 0x44, 0x4e,
		0x54, 0x2d, 0x30, 0x37, 0x30, 0x34, 0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b,
		0x79, 0x20, 0x4c, 0x45, 0x4e, 0x54, 0x2d, 0x30, 0x39, 0x30, 0x39, 0x54, 0x4e, 0x65, 0x74, 0x54,
		0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x49, 0x5a, 0x4e, 0x54, 0x2d, 0x31, 0x30, 0x30,
		0x39, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x71, 0x75,
		0x61, 0x64, 0x20, 0x49, 0x49, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72,
		0x20, 0x4c, 0x45, 0x4e, 0x54, 0x2d, 0x31, 0x30, 0x31, 0x37, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41,
		0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x33, 0x47, 0x20, 0x71, 0x75, 0x61, 0x64, 0x4e, 0x54,
		0x2d, 0x33, 0x36, 0x30, 0x31, 0x50, 0x2f, 0x33, 0x36, 0x30, 0x32, 0x50, 0x4e, 0x65, 0x74, 0x54,
		0x41, 0x42, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x33,
		0x36, 0x30, 0x33, 0x50, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65,
		0x74, 0x20, 0x33, 0x47, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x32,
		0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x48, 0x44, 0x20, 0x33,
		0x47, 0x4e, 0x54, 0x2d, 0x33, 0x38, 0x30, 0x35, 0x43, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20,
		0x53, 0x6b, 0x61, 0x74, 0x20, 0x33, 0x47, 0x20, 0x71, 0x75, 0x61, 0x64, 0x4e, 0x54, 0x2d, 0x33,
		0x37, 0x30, 0x31, 0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x33,
		0x47, 0x20, 0x64, 0x75, 0x6f, 0x4e, 0x54, 0x2d, 0x33, 0x39, 0x30, 0x35, 0x54, 0x4e, 0x65, 0x74,
		0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x5a, 0x58, 0x20, 0x33, 0x47, 0x4e, 0x54,
		0x2d, 0x30, 0x37, 0x30, 0x31, 0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79,
		0x20, 0x6e, 0x65, 0x74, 0x4e, 0x54, 0x2d, 0x30, 0x38, 0x30, 0x35, 0x43, 0x4e, 0x65, 0x74, 0x54,
		0x41, 0x42, 0x20, 0x53, 0x6b, 0x61, 0x74, 0x20, 0x4d, 0x58, 0x4e, 0x54, 0x2d, 0x30, 0x39, 0x30,
		0x32, 0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x71,
		0x75, 0x61, 0x64, 0x20, 0x52, 0x58, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x5f, 0x53, 0x70, 0x61,
		0x63, 0x65, 0x5f, 0x33, 0x47, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x70, 0x61, 0x63,
		0x65, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x32, 0x4d, 0x4e, 0x65, 0x74, 0x54,
		0x41, 0x42, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x20, 0x33, 0x47, 0x20, 0x64, 0x75, 0x6f,
		0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x33, 0x4d, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d,
		0x61, 0x74, 0x72, 0x69, 0x78, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x20,
		0x55, 0x4c, 0x54, 0x52, 0x41, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x61, 0x74, 0x72,
		0x69, 0x78, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x54, 0x2d, 0x31, 0x35, 0x30, 0x31, 0x43,
		0x43, 0x61, 0x6c, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x20, 0x31, 0x30, 0x30, 0x54, 0x4f, 0x55, 0x43,
		0x41, 0x4e, 0x20, 0x4e, 0x41, 0x4e, 0x4f, 0x20, 0x34, 0x4b, 0x54, 0x6f, 0x75, 0x63, 0x61, 0x6e,
		0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x34, 0x4b, 0x54, 0x4f, 0x55, 0x43, 0x41, 0x4e, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x54, 0x6f, 0x75, 0x63,
		0x61, 0x6e, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x54, 0x4f, 0x55, 0x43, 0x41, 0x4e, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x54,
		0x6f, 0x75, 0x63, 0x61, 0x6e, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x49, 0x6d,
		0x6f, 0x73, 0x65, 0x42, 0x41, 0x4d, 0x2d, 0x49, 0x49, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
		0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x49, 0x6d, 0x50,
		0x61, 0x64, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x49, 0x46, 0x39, 0x30,
		0x30, 0x31, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x35, 0x49, 0x46, 0x39, 0x30, 0x30, 0x37, 0x49,
		0x46, 0x39, 0x30, 0x32, 0x31, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x49, 0x46, 0x39, 0x30, 0x33, 0x35, 0x41, 0x32, 0x49, 0x46, 0x39, 0x30, 0x30, 0x32, 0x4d,
		0x35, 0x73, 0x49, 0x46, 0x39, 0x30, 0x30, 0x33, 0x4d, 0x36, 0x73, 0x49, 0x46, 0x39, 0x30, 0x33,
		0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x49, 0x46, 0x39, 0x30, 0x32, 0x39, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x69, 0x67, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x49, 0x46, 0x24, 0x31, 0x61, 0x4d, 0x24, 0x31, 0x49, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x47, 0x4f, 0x52, 0x49, 0x4c, 0x4c, 0x41, 0x20, 0x39, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x47,
		0x6f, 0x72, 0x69, 0x6c, 0x6c, 0x61, 0x20, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x5f, 0x52,
		0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x58, 0x20, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x49,
		0x6e, 0x63, 0x68, 0x24, 0x31, 0x22, 0x49, 0x6e, 0x63, 0x6f, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x20,
		0x34, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x32, 0x20, 0x53, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x20, 0x32,
		0x53, 0x4d, 0x41, 0x54, 0x54, 0x45, 0x52, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x65, 0x63, 0x6f,
		0x5f, 0x73, 0x45, 0x63, 0x6f, 0x20, 0x53, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x24, 0x31, 0x53, 0x70,
		0x68, 0x65, 0x72, 0x65, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x6f, 0x6e, 0x54,
		0x35, 0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x37, 0x22, 0x20, 0x33, 0x47, 0x45, 0x41, 0x52, 0x54,
		0x48, 0x31, 0x30, 0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33,
		0x47, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x78, 0x42, 0x75, 0x7a, 0x7a, 0x41, 0x6c, 0x70, 0x68,
		0x61, 0x20, 0x4d, 0x61, 0x72, 0x76, 0x65, 0x6c, 0x53, 0x75, 0x72, 0x66, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x53, 0x75, 0x72, 0x66, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x47, 0x53,
		0x75, 0x72, 0x66, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x53, 0x75, 0x72, 0x66, 0x20,
		0x53, 0x70, 0x69, 0x63, 0x65, 0x53, 0x75, 0x72, 0x66, 0x20, 0x42, 0x72, 0x61, 0x76, 0x6f, 0x53,
		0x75, 0x72, 0x66, 0x20, 0x4e, 0x6f, 0x69, 0x72, 0x52, 0x61, 0x63, 0x65, 0x52, 0x61, 0x63, 0x65,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x61, 0x63, 0x65, 0x20, 0x42, 0x6f, 0x6c, 0x74, 0x52, 0x61,
		0x63, 0x65, 0x20, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x51, 0x52, 0x61, 0x63, 0x65, 0x20, 0x42, 0x6f,
		0x6c, 0x74, 0x20, 0x32, 0x52, 0x61, 0x63, 0x65, 0x20, 0x45, 0x61, 0x67, 0x6c, 0x65, 0x52, 0x61,
		0x63, 0x65, 0x20, 0x4a, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x32,
		0x5a, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x33, 0x5a, 0x65, 0x72,
		0x6f, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x34, 0x5a, 0x65,
		0x72, 0x6f, 0x20, 0x35, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65,
		0x72, 0x6f, 0x20, 0x36, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65,
		0x72, 0x6f, 0x20, 0x38, 0x69, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x38, 0x5a, 0x65, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x58, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x58, 0x20, 0x50,
		0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x58, 0x20, 0x4e, 0x65, 0x6f, 0x5a, 0x65, 0x72, 0x6f,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x48, 0x6f, 0x74, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x48, 0x6f,
		0x74, 0x20, 0x33, 0x48, 0x6f, 0x74, 0x20, 0x33, 0x30, 0x69, 0x48, 0x6f, 0x74, 0x20, 0x33, 0x30,
		0x48, 0x6f, 0x74, 0x20, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x74, 0x20, 0x53,
		0x33, 0x58, 0x48, 0x6f, 0x74, 0x20, 0x53, 0x48, 0x6f, 0x74, 0x20, 0x53, 0x32, 0x48, 0x6f, 0x74,
		0x20, 0x34, 0x48, 0x6f, 0x74, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x35,
		0x48, 0x6f, 0x74, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x20, 0x36, 0x58,
		0x48, 0x6f, 0x74, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x37, 0x48, 0x6f,
		0x74, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x38, 0x48, 0x6f, 0x74, 0x20,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x39, 0x48, 0x6f, 0x74, 0x20, 0x39, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x54, 0x48,
		0x6f, 0x74, 0x20, 0x31, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x78, 0x20, 0x58, 0x36, 0x38,
		0x39, 0x44, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x73, 0x20, 0x4e, 0x46, 0x43, 0x49, 0x6e, 0x66,
		0x69, 0x6e, 0x69, 0x78, 0x20, 0x58, 0x36, 0x38, 0x39, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x73,
		0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x69, 0x48, 0x6f, 0x74, 0x20, 0x53, 0x33, 0x48, 0x6f, 0x74,
		0x20, 0x31, 0x31, 0x53, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x4e, 0x46, 0x43,
		0x48, 0x6f, 0x74, 0x20, 0x31, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x74, 0x20, 0x31,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x30, 0x69, 0x48, 0x6f, 0x74, 0x20,
		0x32, 0x30, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x74, 0x20, 0x32,
		0x30, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x30, 0x53, 0x48, 0x6f, 0x74,
		0x20, 0x31, 0x32, 0x69, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x48, 0x44, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x20, 0x48, 0x44, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x36, 0x20, 0x48,
		0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x37, 0x20, 0x48, 0x44, 0x53, 0x35,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x34, 0x48, 0x6f, 0x74, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x32, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x34, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x20, 0x53, 0x74, 0x79, 0x6c,
		0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x38, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x32, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x69, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x32, 0x29, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x56, 0x49, 0x50, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x4e, 0x46, 0x43, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x31, 0x53, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33,
		0x29, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x30, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x30,
		0x20, 0x56, 0x49, 0x50, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x6f, 0x74, 0x20, 0x24, 0x31, 0x24, 0x32, 0x49, 0x6e, 0x66, 0x6f, 0x4b, 0x69, 0x74, 0x49, 0x6e,
		0x68, 0x6f, 0x6e, 0x49, 0x6e, 0x6b, 0x74, 0x69, 0x49, 0x6e, 0x6e, 0x4a, 0x6f, 0x6f, 0x58, 0x33,
		0x48, 0x61, 0x6c, 0x6f, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x58, 0x48, 0x61, 0x6c, 0x6f, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x4c, 0x54, 0x45, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x34, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x24, 0x31,
		0x20, 0x33, 0x47, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x32, 0x20,
		0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54,
		0x45, 0x46, 0x69, 0x72, 0x65, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45,
		0x46, 0x69, 0x72, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5f, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x32, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x20, 0x32, 0x20, 0x41, 0x69,
		0x72, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c,
		0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45,
		0x46, 0x69, 0x72, 0x65, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x20, 0x32, 0x20,
		0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x33, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x69, 0x72, 0x65, 0x20, 0x34, 0x20, 0x50,
		0x72, 0x6f, 0x46, 0x69, 0x72, 0x65, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x34, 0x53, 0x75, 0x70, 0x65, 0x72, 0x62, 0x5f, 0x50, 0x4c, 0x75, 0x73, 0x53, 0x75,
		0x70, 0x65, 0x72, 0x42, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x62, 0x53,
		0x75, 0x70, 0x65, 0x72, 0x42, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x20, 0x4c, 0x54, 0x45, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x54, 0x45, 0x49, 0x6e, 0x6e, 0x6f, 0x73, 0x49, 0x6e,
		0x6e, 0x6f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x4e, 0x4e, 0x4f, 0x24, 0x31, 0x49, 0x6e,
		0x6f, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x2b, 0x33, 0x32, 0x50,
		0x61, 0x64, 0x20, 0x32, 0x2b, 0x33, 0x32, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x31, 0x2b, 0x31, 0x36, 0x20, 0x57, 0x69, 0x46, 0x69, 0x49, 0x4e, 0x4f, 0x49, 0x20, 0x65, 0x61,
		0x73, 0x79, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x24, 0x32, 0x29, 0x41, 0x31, 0x37,
		0x30, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x37, 0x32, 0x41, 0x31, 0x38, 0x31, 0x5f, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x31, 0x38, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x36, 0x32, 0x49, 0x6e,
		0x73, 0x69, 0x67, 0x6e, 0x69, 0x61, 0x4e, 0x53, 0x2d, 0x50, 0x31, 0x31, 0x41, 0x38, 0x31, 0x30,
		0x30, 0x31, 0x31, 0x2e, 0x36, 0x22, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x4e, 0x53, 0x2d, 0x50, 0x31, 0x36, 0x41, 0x54, 0x30, 0x38, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x38,
		0x22, 0x4e, 0x53, 0x2d, 0x50, 0x30, 0x38, 0x41, 0x37, 0x31, 0x30, 0x30, 0x38, 0x22, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x4e, 0x53, 0x2d, 0x50, 0x31, 0x36, 0x41, 0x54, 0x37, 0x38, 0x35, 0x48, 0x44,
		0x46, 0x6c, 0x65, 0x78, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22,
		0x41, 0x46, 0x54, 0x45, 0x41, 0x4d, 0x52, 0x33, 0x31, 0x31, 0x48, 0x44, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x38, 0x29, 0x41, 0x46, 0x54, 0x4a, 0x4d, 0x53, 0x54, 0x31, 0x32, 0x34, 0x4b, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x4e, 0x55, 0x43, 0x31, 0x30, 0x69,
		0x33, 0x46, 0x4e, 0x48, 0x4e, 0x55, 0x43, 0x20, 0x31, 0x30, 0x49, 0x6e, 0x74, 0x65, 0x78, 0x49,
		0x4d, 0x30, 0x33, 0x31, 0x38, 0x4e, 0x44, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e,
		0x73, 0x20, 0x33, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x54, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20,
		0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71,
		0x75, 0x61, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20,
		0x54, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x43, 0x72, 0x79, 0x73,
		0x74, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x46, 0x75, 0x6c,
		0x76, 0x75, 0x20, 0x45, 0x35, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4a, 0x65, 0x77, 0x65, 0x6c, 0x20,
		0x32, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x49, 0x49, 0x49, 0x41, 0x71,
		0x75, 0x61, 0x20, 0x34, 0x2e, 0x30, 0x20, 0x34, 0x47, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x34, 0x47, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20,
		0x34, 0x47, 0x41, 0x71, 0x75, 0x61, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x34, 0x47, 0x41,
		0x71, 0x75, 0x61, 0x20, 0x5a, 0x65, 0x6e, 0x69, 0x74, 0x68, 0x41, 0x71, 0x75, 0x61, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x49, 0x56, 0x41, 0x71, 0x75, 0x61, 0x20, 0x59, 0x6f, 0x75, 0x6e,
		0x67, 0x20, 0x34, 0x47, 0x41, 0x71, 0x75, 0x61, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x61, 0x20, 0x41, 0x6d, 0x61, 0x7a, 0x65, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x24, 0x31,
		0x41, 0x71, 0x75, 0x61, 0x20, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x35, 0x2e, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c,
		0x45, 0x6c, 0x79, 0x74, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c,
		0x79, 0x74, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x45, 0x6c, 0x79, 0x74, 0x20, 0x24, 0x31, 0x49, 0x56,
		0x30, 0x33, 0x31, 0x38, 0x4e, 0x44, 0x49, 0x6e, 0x64, 0x69, 0x65, 0x20, 0x31, 0x31, 0x4c, 0x69,
		0x6f, 0x6e, 0x73, 0x20, 0x36, 0x49, 0x6e, 0x66, 0x69, 0x65, 0x20, 0x37, 0x37, 0x43, 0x6c, 0x6f,
		0x75, 0x64, 0x20, 0x54, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x73, 0x49, 0x6e,
		0x76, 0x69, 0x6e, 0x4b, 0x4d, 0x35, 0x50, 0x52, 0x4f, 0x4b, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x49, 0x72, 0x62, 0x69, 0x73, 0x49, 0x72, 0x69, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x53,
		0x4e, 0x33, 0x30, 0x56, 0x6f, 0x78, 0x20, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x73, 0x56, 0x6f, 0x78,
		0x20, 0x56, 0x65, 0x72, 0x6f, 0x56, 0x4f, 0x58, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x4f, 0x58, 0x20, 0x53, 0x54, 0x45, 0x45, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56,
		0x6f, 0x78, 0x20, 0x53, 0x74, 0x65, 0x65, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x4f, 0x58,
		0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x56, 0x6f, 0x78, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x56,
		0x4f, 0x58, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x56, 0x6f, 0x78, 0x20, 0x45, 0x6e, 0x65,
		0x72, 0x67, 0x79, 0x56, 0x4f, 0x58, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x56,
		0x6f, 0x78, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x4f, 0x58, 0x20, 0x50,
		0x4f, 0x50, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x6f, 0x78, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x50, 0x72,
		0x6f, 0x4e, 0x65, 0x78, 0x74, 0x5f, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x4e, 0x65, 0x78, 0x74, 0x20,
		0x50, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x24, 0x31, 0x49, 0x53, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x52, 0x53, 0x30, 0x30, 0x32, 0x2d, 0x31, 0x36, 0x49, 0x2d,
		0x53, 0x36, 0x49, 0x53, 0x32, 0x53, 0x58, 0x31, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x31, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x4a, 0x41, 0x59, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x50, 0x43, 0x20, 0x50, 0x41, 0x31, 0x30, 0x2e, 0x31, 0x4d, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x50, 0x43, 0x20, 0x24, 0x31, 0x4a, 0x46, 0x6f, 0x6e, 0x65, 0x4a, 0x4b,
		0x4c, 0x4a, 0x50, 0x61, 0x79, 0x4a, 0x52, 0x45, 0x4e, 0x4a, 0x56, 0x43, 0x41, 0x46, 0x54, 0x53,
		0x4f, 0x30, 0x30, 0x31, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x4a, 0x65, 0x64, 0x69, 0x52, 0x65, 0x6d, 0x69, 0x78, 0x20, 0x50,
		0x72, 0x6f, 0x52, 0x65, 0x6d, 0x69, 0x78, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4a, 0x65, 0x6b, 0x61,
		0x4a, 0x4b, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x4a, 0x4b, 0x20, 0x24, 0x31, 0x4a, 0x65, 0x73,
		0x79, 0x4a, 0x39, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x39, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4a,
		0x69, 0x61, 0x6b, 0x65, 0x4a, 0x4b, 0x2d, 0x24, 0x31, 0x4a, 0x69, 0x61, 0x79, 0x75, 0x47, 0x34,
		0x2f, 0x47, 0x35, 0x4a, 0x59, 0x2d, 0x24, 0x31, 0x4a, 0x69, 0x6e, 0x67, 0x61, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x20, 0x34, 0x47, 0x46, 0x72, 0x65, 0x73, 0x68, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x74,
		0x7a, 0x20, 0x4d, 0x31, 0x48, 0x69, 0x74, 0x20, 0x34, 0x47, 0x50, 0x61, 0x73, 0x73, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x61, 0x73, 0x73, 0x20, 0x33, 0x47, 0x47, 0x6f, 0x61, 0x6c, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x34, 0x47, 0x53, 0x74, 0x61, 0x72, 0x74,
		0x20, 0x33, 0x47, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x74, 0x61, 0x72,
		0x74, 0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x47, 0x4f,
		0x20, 0x4c, 0x33, 0x42, 0x61, 0x73, 0x63, 0x6f, 0x20, 0x4e, 0x65, 0x6f, 0x42, 0x61, 0x73, 0x63,
		0x6f, 0x20, 0x4d, 0x35, 0x30, 0x30, 0x20, 0x33, 0x47, 0x42, 0x61, 0x73, 0x63, 0x6f, 0x20, 0x24,
		0x31, 0x54, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x20, 0x53, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49,
		0x47, 0x4f, 0x20, 0x4c, 0x32, 0x49, 0x47, 0x4f, 0x20, 0x24, 0x31, 0x4a, 0x69, 0x6f, 0x4a, 0x69,
		0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x4a, 0x69, 0x76, 0x69, 0x52,
		0x65, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x4f, 0x70, 0x75, 0x73,
		0x20, 0x53, 0x33, 0x4a, 0x53, 0x50, 0x51, 0x36, 0x35, 0x4a, 0x53, 0x50, 0x20, 0x51, 0x36, 0x35,
		0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x4b, 0x6c, 0x69, 0x63, 0x6b, 0x20, 0x24, 0x31, 0x58,
		0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x56, 0x69, 0x65,
		0x77, 0x20, 0x24, 0x31, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x24, 0x31, 0x4a, 0x6f, 0x6c,
		0x6c, 0x61, 0x4a, 0x6f, 0x79, 0x4a, 0x6f, 0x79, 0x53, 0x75, 0x72, 0x66, 0x4a, 0x53, 0x31, 0x30,
		0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x45, 0x5a, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4a, 0x75,
		0x6e, 0x69, 0x70, 0x65, 0x72, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x4a, 0x75, 0x6e,
		0x69, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x43, 0x65, 0x64, 0x61, 0x72, 0x23, 0x43, 0x54, 0x38, 0x43,
		0x54, 0x38, 0x4a, 0x75, 0x73, 0x74, 0x35, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x24, 0x31, 0x46,
		0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d,
		0x53, 0x70, 0x61, 0x63, 0x65, 0x72, 0x20, 0x32, 0x53, 0x53, 0x70, 0x61, 0x63, 0x65, 0x72, 0x20,
		0x32, 0x4a, 0x55, 0x53, 0x54, 0x35, 0x53, 0x50, 0x41, 0x43, 0x45, 0x52, 0x53, 0x70, 0x61, 0x63,
		0x65, 0x72, 0x42, 0x4c, 0x41, 0x53, 0x54, 0x45, 0x52, 0x20, 0x32, 0x42, 0x6c, 0x61, 0x73, 0x74,
		0x65, 0x72, 0x20, 0x32, 0x42, 0x4c, 0x41, 0x53, 0x54, 0x45, 0x52, 0x42, 0x6c, 0x61, 0x73, 0x74,
		0x65, 0x72, 0x4b, 0x2d, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x41, 0x56, 0x54, 0x45, 0x43, 0x48, 0x5f,
		0x54, 0x4f, 0x55, 0x43, 0x48, 0x59, 0x5f, 0x46, 0x32, 0x4e, 0x61, 0x76, 0x74, 0x65, 0x63, 0x68,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x79, 0x20, 0x46, 0x32, 0x4b, 0x2d, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x4b, 0x54, 0x32, 0x30, 0x32, 0x30, 0x31, 0x31, 0x39, 0x39, 0x4b, 0x54, 0x32, 0x30, 0x32,
		0x30, 0x31, 0x31, 0x38, 0x38, 0x54, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78,
		0x4c, 0x44, 0x4f, 0x58, 0x2d, 0x32, 0x31, 0x33, 0x30, 0x69, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x4d, 0x61, 0x78, 0x4c, 0x44, 0x4f, 0x58, 0x2d, 0x32, 0x31, 0x32, 0x33, 0x58, 0x31, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x4c, 0x44, 0x4f, 0x58, 0x2d, 0x32, 0x31, 0x32, 0x31, 0x4d, 0x54, 0x34,
		0x30, 0x4c, 0x44, 0x58, 0x41, 0x2d, 0x32, 0x30, 0x32, 0x32, 0x58, 0x32, 0x37, 0x53, 0x20, 0x50,
		0x72, 0x6f, 0x4c, 0x44, 0x58, 0x41, 0x2d, 0x32, 0x31, 0x32, 0x32, 0x58, 0x32, 0x37, 0x53, 0x50,
		0x61, 0x63, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4b, 0x41, 0x54, 0x56, 0x31, 0x4b,
		0x44, 0x44, 0x49, 0x69, 0x69, 0x64, 0x61, 0x20, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x72, 0x20,
		0x24, 0x31, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x72, 0x20, 0x41, 0x30, 0x32, 0x4b, 0x49, 0x4e,
		0x47, 0x5a, 0x4f, 0x4e, 0x45, 0x4b, 0x31, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b, 0x4e, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4b, 0x4f, 0x50, 0x4f, 0x4b, 0x52, 0x45, 0x5a, 0x4b, 0x52,
		0x49, 0x50, 0x4b, 0x24, 0x31, 0x4b, 0x52, 0x4f, 0x4e, 0x4f, 0x4e, 0x45, 0x54, 0x31, 0x31, 0x30,
		0x30, 0x4e, 0x45, 0x54, 0x20, 0x31, 0x31, 0x30, 0x30, 0x4e, 0x45, 0x54, 0x20, 0x24, 0x31, 0x4e,
		0x45, 0x54, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x4e, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x74,
		0x72, 0x69, 0x78, 0x4e, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x58, 0x4e, 0x65, 0x74, 0x20, 0x4d, 0x61,
		0x78, 0x4e, 0x45, 0x54, 0x5f, 0x4b, 0x37, 0x4e, 0x65, 0x74, 0x20, 0x4b, 0x37, 0x4e, 0x45, 0x54,
		0x57, 0x4f, 0x52, 0x4b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x54, 0x2d, 0x54, 0x65,
		0x63, 0x68, 0x4b, 0x5a, 0x47, 0x4b, 0x61, 0x61, 0x6e, 0x4b, 0x61, 0x69, 0x6f, 0x6d, 0x79, 0x4b,
		0x61, 0x69, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x20, 0x24, 0x31, 0x4b, 0x61, 0x6c, 0x6c, 0x65, 0x79,
		0x42, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x47, 0x5f, 0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x47,
		0x20, 0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x24, 0x31, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f,
		0x50, 0x52, 0x4f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x6c, 0x65, 0x6d,
		0x65, 0x6e, 0x74, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e,
		0x54, 0x20, 0x4d, 0x41, 0x58, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x4d, 0x61, 0x78,
		0x53, 0x49, 0x4c, 0x56, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x58, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72,
		0x20, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x24,
		0x31, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x20, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x6c, 0x65,
		0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54,
		0x20, 0x51, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x51, 0x45, 0x4c, 0x45, 0x4d, 0x45,
		0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x32, 0x47, 0x4f, 0x4c, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x6f, 0x6c,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x2d, 0x42, 0x4f, 0x4f, 0x4b, 0x24, 0x31, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x24, 0x31, 0x4b, 0x61, 0x6e, 0x6a, 0x69, 0x43,
		0x61, 0x74, 0x61, 0x20, 0x37, 0x4b, 0x4a, 0x2d, 0x47, 0x4f, 0x43, 0x48, 0x49, 0x47, 0x6f, 0x63,
		0x68, 0x69, 0x41, 0x69, 0x6c, 0x75, 0x20, 0x4d, 0x61, 0x78, 0x59, 0x75, 0x62, 0x69, 0x20, 0x33,
		0x47, 0x41, 0x6c, 0x66, 0x61, 0x4b, 0x4a, 0x2d, 0x24, 0x31, 0x4b, 0x4a, 0x2d, 0x53, 0x4d, 0x41,
		0x52, 0x54, 0x34, 0x4b, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x4b, 0x4b, 0x61, 0x70, 0x73,
		0x79, 0x73, 0x4b, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x6e, 0x4b, 0x39, 0x20, 0x4b, 0x61, 0x76, 0x61,
		0x63, 0x68, 0x20, 0x34, 0x47, 0x4b, 0x39, 0x20, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x34, 0x47,
		0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x45, 0x63, 0x6f, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x45, 0x63, 0x6f, 0x4b, 0x39, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x59, 0x75,
		0x76, 0x61, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b,
		0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x41, 0x34, 0x30, 0x20, 0x49, 0x6e, 0x64, 0x69, 0x61,
		0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x24, 0x31, 0x20, 0x49, 0x6e, 0x64, 0x69, 0x61, 0x6e,
		0x4b, 0x39, 0x20, 0x56, 0x69, 0x72, 0x61, 0x61, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75,
		0x72, 0x61, 0x20, 0x53, 0x6c, 0x65, 0x65, 0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72,
		0x61, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x34, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x75, 0x72, 0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x75, 0x72,
		0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x41, 0x75, 0x72, 0x61, 0x20, 0x53, 0x74, 0x6f,
		0x72, 0x6d, 0x41, 0x75, 0x72, 0x61, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x41, 0x75, 0x72, 0x61,
		0x20, 0x53, 0x6c, 0x65, 0x65, 0x6b, 0x20, 0x34, 0x47, 0x41, 0x6c, 0x66, 0x61, 0x20, 0x41, 0x31,
		0x31, 0x34, 0x20, 0x51, 0x75, 0x61, 0x64, 0x4b, 0x39, 0x20, 0x56, 0x69, 0x72, 0x61, 0x61, 0x74,
		0x20, 0x34, 0x47, 0x4d, 0x41, 0x43, 0x48, 0x46, 0x49, 0x56, 0x45, 0x4d, 0x61, 0x63, 0x68, 0x20,
		0x46, 0x69, 0x76, 0x65, 0x4d, 0x41, 0x43, 0x48, 0x4f, 0x4e, 0x45, 0x50, 0x4c, 0x55, 0x53, 0x54,
		0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x4f, 0x6e, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x41, 0x43, 0x48, 0x4f, 0x4e, 0x45, 0x54, 0x69, 0x74, 0x61,
		0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x4f, 0x6e, 0x65, 0x4d, 0x41, 0x43,
		0x48, 0x20, 0x53, 0x49, 0x58, 0x20, 0x56, 0x52, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d,
		0x20, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x53, 0x69, 0x78, 0x20, 0x56, 0x52, 0x54, 0x69, 0x74, 0x61,
		0x6e, 0x69, 0x75, 0x6d, 0x20, 0x53, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x53, 0x24, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75,
		0x6d, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x20, 0x34, 0x47, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69,
		0x75, 0x6d, 0x20, 0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x32, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69,
		0x75, 0x6d, 0x20, 0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d,
		0x20, 0x4d, 0x6f, 0x67, 0x68, 0x75, 0x6c, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20,
		0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x53, 0x37, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75,
		0x6d, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x33, 0x44, 0x20, 0x50, 0x6c, 0x65, 0x78, 0x53, 0x32, 0x30,
		0x35, 0x32, 0x47, 0x42, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x53, 0x32, 0x35,
		0x30, 0x20, 0x32, 0x47, 0x42, 0x4b, 0x2d, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x46, 0x33, 0x4b, 0x2d,
		0x4c, 0x69, 0x74, 0x65, 0x20, 0x46, 0x33, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x6c, 0x65, 0x20, 0x56,
		0x41, 0x34, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f,
		0x20, 0x4c, 0x24, 0x31, 0x20, 0x48, 0x44, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x4c,
		0x24, 0x31, 0x20, 0x49, 0x50, 0x53, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x4c, 0x24,
		0x31, 0x20, 0x56, 0x52, 0x4b, 0x61, 0x74, 0x61, 0x49, 0x35, 0x54, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x34, 0x42, 0x6f, 0x78, 0x20, 0x32, 0x4b, 0x61, 0x7a, 0x61, 0x6d, 0x54, 0x6f, 0x72, 0x6e,
		0x61, 0x64, 0x6f, 0x20, 0x33, 0x34, 0x38, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x34,
		0x35, 0x30, 0x57, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x20, 0x58, 0x34, 0x2e, 0x30, 0x54,
		0x72, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x20, 0x58, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x4b, 0x61, 0x7a,
		0x75, 0x6e, 0x61, 0x4b, 0x41, 0x5a, 0x2d, 0x4e, 0x32, 0x30, 0x65, 0x54, 0x61, 0x6c, 0x6b, 0x20,
		0x4d, 0x59, 0x46, 0x4c, 0x49, 0x58, 0x4b, 0x65, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x26, 0x20,
		0x53, 0x74, 0x72, 0x61, 0x75, 0x73, 0x73, 0x41, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x32,
		0x41, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c,
		0x75, 0x6d, 0x69, 0x6e, 0x69, 0x33, 0x41, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x50,
		0x24, 0x31, 0x50, 0x31, 0x20, 0x41, 0x6d, 0x61, 0x74, 0x65, 0x75, 0x72, 0x4b, 0x45, 0x4d, 0x50,
		0x4c, 0x45, 0x52, 0x5f, 0x54, 0x56, 0x54, 0x56, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f,
		0x58, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x38, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x38,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x39, 0x4b, 0x65,
		0x6e, 0x62, 0x6f, 0x45, 0x36, 0x31, 0x50, 0x72, 0x6f, 0x45, 0x36, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x4f, 0x33, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x65, 0x6e, 0x65, 0x6b, 0x73, 0x69, 0x4c,
		0x69, 0x62, 0x65, 0x72, 0x74, 0x79, 0x53, 0x75, 0x6e, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x4b, 0x65,
		0x6e, 0x78, 0x69, 0x6e, 0x64, 0x61, 0x54, 0x68, 0x72, 0x65, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x6f,
		0x66, 0x69, 0x6e, 0x67, 0x73, 0x20, 0x57, 0x24, 0x31, 0x4b, 0x68, 0x61, 0x64, 0x61, 0x73, 0x4b,
		0x69, 0x61, 0x6e, 0x6f, 0x53, 0x6c, 0x69, 0x6d, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x43,
		0x4f, 0x52, 0x45, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x20, 0x44, 0x55, 0x41, 0x4c, 0x20, 0x33, 0x47,
		0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x22, 0x20,
		0x50, 0x72, 0x6f, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x35, 0x2e, 0x30, 0x22,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x36, 0x45,
		0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x36, 0x20, 0x35, 0x2e, 0x38, 0x35, 0x22, 0x45,
		0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x22, 0x24, 0x32,
		0x20, 0x24, 0x33, 0x4b, 0x69, 0x6e, 0x67, 0x62, 0x6f, 0x78, 0x4b, 0x69, 0x6e, 0x67, 0x73, 0x74,
		0x61, 0x72, 0x4b, 0x69, 0x6e, 0x67, 0x73, 0x75, 0x6e, 0x4b, 0x69, 0x6e, 0x73, 0x74, 0x6f, 0x6e,
		0x65, 0x4b, 0x69, 0x6f, 0x77, 0x61, 0x24, 0x31, 0x20, 0x43, 0x72, 0x69, 0x73, 0x74, 0x61, 0x6c,
		0x53, 0x35, 0x20, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x53, 0x35, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x4b, 0x69, 0x76, 0x69, 0x24, 0x31, 0x20, 0x76, 0x24, 0x32, 0x4b, 0x6c, 0x69, 0x70, 0x61, 0x64,
		0x4b, 0x4c, 0x36, 0x32, 0x38, 0x5f, 0x48, 0x4c, 0x4b, 0x4c, 0x36, 0x32, 0x38, 0x48, 0x4c, 0x4b,
		0x4c, 0x34, 0x38, 0x39, 0x38, 0x2d, 0x41, 0x35, 0x30, 0x4b, 0x6f, 0x63, 0x61, 0x73, 0x6f, 0x44,
		0x58, 0x37, 0x36, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x36, 0x32, 0x30, 0x30, 0x4d, 0x37, 0x32,
		0x39, 0x4d, 0x58, 0x37, 0x38, 0x30, 0x4d, 0x38, 0x35, 0x31, 0x4d, 0x31, 0x30, 0x35, 0x30, 0x73,
		0x4d, 0x31, 0x30, 0x37, 0x30, 0x4d, 0x58, 0x37, 0x33, 0x36, 0x4b, 0x6f, 0x64, 0x61, 0x6b, 0x49,
		0x4d, 0x35, 0x53, 0x65, 0x72, 0x65, 0x6e, 0x20, 0x24, 0x31, 0x45, 0x6b, 0x74, 0x72, 0x61, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x77, 0x61, 0x79, 0x20, 0x4c, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x77, 0x61, 0x79, 0x20, 0x24, 0x31, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x24, 0x31, 0x4b, 0x6f, 0x67, 0x61, 0x6e, 0x41, 0x67, 0x6f, 0x72, 0x61, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x67, 0x6f, 0x72, 0x61, 0x20, 0x58, 0x49, 0x41, 0x67, 0x6f, 0x72,
		0x61, 0x20, 0x31, 0x31, 0x41, 0x67, 0x6f, 0x72, 0x61, 0x20, 0x47, 0x6f, 0x41, 0x67, 0x6f, 0x72,
		0x61, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x67, 0x6f, 0x72, 0x61, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4b, 0x6f, 0x6d, 0x75, 0x4b, 0x6f, 0x6e, 0x6b, 0x61, 0x4b, 0x43, 0x35, 0x31, 0x36,
		0x20, 0x50, 0x72, 0x6f, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x4b,
		0x43, 0x35, 0x31, 0x36, 0x45, 0x35, 0x36, 0x36, 0x30, 0x53, 0x56, 0x69, 0x76, 0x61, 0x20, 0x35,
		0x36, 0x36, 0x30, 0x73, 0x57, 0x38, 0x33, 0x30, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x38, 0x33,
		0x30, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x20, 0x24, 0x31, 0x57, 0x39, 0x39, 0x30, 0x54, 0x75,
		0x78, 0x65, 0x64, 0x6f, 0x20, 0x39, 0x39, 0x30, 0x4b, 0x6f, 0x6e, 0x72, 0x6f, 0x77, 0x42, 0x69,
		0x67, 0x43, 0x6f, 0x6f, 0x6c, 0x4c, 0x49, 0x4e, 0x4b, 0x35, 0x35, 0x43, 0x6f, 0x6f, 0x6c, 0x2d,
		0x4b, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x35, 0x35, 0x53, 0x6f, 0x66, 0x74, 0x20, 0x35, 0x43, 0x6f,
		0x6f, 0x6c, 0x20, 0x46, 0x69, 0x76, 0x65, 0x4a, 0x75, 0x73, 0x74, 0x20, 0x35, 0x4c, 0x69, 0x6e,
		0x6b, 0x20, 0x35, 0x45, 0x61, 0x73, 0x79, 0x20, 0x35, 0x43, 0x69, 0x74, 0x79, 0x20, 0x35, 0x43,
		0x69, 0x74, 0x79, 0x20, 0x35, 0x35, 0x53, 0x6b, 0x79, 0x20, 0x35, 0x35, 0x53, 0x77, 0x65, 0x65,
		0x74, 0x20, 0x24, 0x31, 0x4b, 0x2d, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x30, 0x33, 0x4b, 0x6f,
		0x6f, 0x62, 0x65, 0x65, 0x46, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x6f, 0x6f, 0x6c, 0x6e,
		0x65, 0x65, 0x4b, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x57,
		0x35, 0x30, 0x32, 0x4b, 0x6f, 0x72, 0x69, 0x64, 0x79, 0x4b, 0x6f, 0x73, 0x6c, 0x61, 0x6d, 0x4b,
		0x72, 0x61, 0x66, 0x74, 0x4b, 0x54, 0x56, 0x2d, 0x24, 0x31, 0x4b, 0x72, 0xc3, 0xbc, 0x67, 0x65,
		0x72, 0x26, 0x4d, 0x61, 0x74, 0x7a, 0x4d, 0x4f, 0x56, 0x45, 0x38, 0x6d, 0x69, 0x6e, 0x69, 0x4d,
		0x4f, 0x56, 0x45, 0x20, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x36,
		0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45, 0x20, 0x36, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x4d, 0x4f, 0x56, 0x45, 0x20, 0x24, 0x31, 0x44, 0x52, 0x49, 0x56, 0x45, 0x20, 0x34, 0x20, 0x6d,
		0x69, 0x6e, 0x69, 0x20, 0x4c, 0x54, 0x45, 0x44, 0x52, 0x49, 0x56, 0x45, 0x20, 0x24, 0x31, 0x46,
		0x4c, 0x4f, 0x57, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x4c, 0x4f, 0x57, 0x20,
		0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x4c, 0x4f, 0x57, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x56,
		0x45, 0x20, 0x34, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x34, 0x4c, 0x49, 0x56, 0x45,
		0x20, 0x35, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4c, 0x49, 0x56, 0x45, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x49, 0x56, 0x45, 0x20,
		0x24, 0x31, 0x53, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x24, 0x31, 0x4d, 0x4f, 0x56, 0x45, 0x20, 0x39,
		0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x45, 0x41,
		0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x31,
		0x30, 0x2e, 0x35, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x37, 0x2e, 0x31,
		0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x45, 0x41,
		0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4b, 0x75, 0x6c, 0x69, 0x61,
		0x6f, 0x4b, 0x75, 0x6c, 0x74, 0x4b, 0x75, 0x6d, 0x61, 0x69, 0x4b, 0x75, 0x72, 0x69, 0x6f, 0x54,
		0x61, 0x62, 0x20, 0x32, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x43, 0x31, 0x34, 0x35, 0x30, 0x30,
		0x4b, 0x79, 0x6f, 0x63, 0x65, 0x72, 0x61, 0x4d, 0x69, 0x6c, 0x61, 0x6e, 0x6f, 0x42, 0x61, 0x6c,
		0x6d, 0x75, 0x64, 0x61, 0x20, 0x24, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x24, 0x31, 0x52, 0x69,
		0x73, 0x65, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x47, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x45,
		0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x43, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x4a, 0x44, 0x69,
		0x67, 0x6e, 0x6f, 0x20, 0x54, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x58, 0x53, 0x32, 0x44, 0x69,
		0x67, 0x6e, 0x6f, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x32, 0x44,
		0x69, 0x67, 0x6e, 0x6f, 0x20, 0x52, 0x61, 0x66, 0x72, 0x65, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20,
		0x42, 0x58, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x42, 0x58, 0x20, 0x32, 0x4d, 0x69, 0x72, 0x61,
		0x69, 0x65, 0x20, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x62, 0x61, 0x72, 0x20, 0x58, 0x56, 0x48, 0x79,
		0x64, 0x72, 0x6f, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x45, 0x44, 0x47, 0x45, 0x48, 0x79, 0x64,
		0x72, 0x6f, 0x20, 0x58, 0x54, 0x52, 0x4d, 0x43, 0x36, 0x37, 0x33, 0x30, 0x48, 0x79, 0x64, 0x72,
		0x6f, 0x20, 0x49, 0x43, 0x4f, 0x4e, 0x43, 0x36, 0x37, 0x35, 0x30, 0x48, 0x79, 0x64, 0x72, 0x6f,
		0x20, 0x45, 0x4c, 0x49, 0x54, 0x45, 0x43, 0x36, 0x35, 0x33, 0x30, 0x4e, 0x48, 0x79, 0x64, 0x72,
		0x6f, 0x20, 0x4c, 0x49, 0x46, 0x45, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x57, 0x41, 0x56, 0x45,
		0x43, 0x36, 0x37, 0x34, 0x33, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x52, 0x65, 0x61, 0x63, 0x68,
		0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72,
		0x63, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x32, 0x45, 0x37, 0x31, 0x31, 0x30, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f,
		0x72, 0x63, 0x65, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x43, 0x36, 0x39, 0x33,
		0x30, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x35, 0x47, 0x4b, 0x43, 0x2d,
		0x53, 0x37, 0x30, 0x31, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x4b, 0x59, 0x47, 0x30, 0x31, 0x54,
		0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x35, 0x47, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x53, 0x4d,
		0x69, 0x72, 0x61, 0x69, 0x65, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x31, 0x45,
		0x61, 0x73, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x24, 0x31, 0x4d, 0x61, 0x72, 0x76, 0x65, 0x72, 0x61, 0x4d, 0x61, 0x6d, 0x6f, 0x72, 0x69,
		0x6e, 0x6f, 0x20, 0x35, 0x47, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x61, 0x20, 0x34, 0x47, 0x47, 0x72,
		0x61, 0x74, 0x69, 0x6e, 0x61, 0x20, 0x24, 0x31, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x58,
		0x30, 0x31, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x20, 0x24, 0x31, 0x54, 0x6f, 0x72, 0x71, 0x75,
		0x65, 0x20, 0x47, 0x30, 0x32, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x33, 0x54,
		0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x34, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x42, 0x61,
		0x73, 0x69, 0x6f, 0x20, 0x34, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x20, 0x33, 0x4b, 0x61, 0x6e, 0x74,
		0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x51, 0x58, 0x51, 0x75,
		0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x51, 0x5a, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x51, 0x5a, 0x31, 0x30, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x51, 0x5a,
		0x38, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x30, 0x31, 0x52, 0x61, 0x66, 0x72, 0x65,
		0x49, 0x6e, 0x66, 0x6f, 0x62, 0x61, 0x72, 0x20, 0x41, 0x30, 0x33, 0x55, 0x72, 0x62, 0x61, 0x6e,
		0x6f, 0x20, 0x4c, 0x30, 0x31, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x4c, 0x30, 0x32, 0x55,
		0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x4c, 0x30, 0x33, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20,
		0x56, 0x30, 0x31, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x56, 0x30, 0x32, 0x55, 0x72, 0x62,
		0x61, 0x6e, 0x6f, 0x20, 0x56, 0x30, 0x33, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65,
		0x20, 0x58, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x33, 0x42, 0x72, 0x69, 0x67, 0x61, 0x64, 0x69,
		0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x53, 0x63, 0x6f, 0x75, 0x74, 0x4c, 0x75, 0x63, 0x65, 0x4b,
		0x61, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f, 0x20, 0x32, 0x4b, 0x61, 0x74,
		0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f, 0x20, 0x32, 0x2b, 0x55, 0x72, 0x62, 0x61,
		0x6e, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x47, 0x7a, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x79, 0x70, 0x65, 0x2d, 0x58, 0x58, 0x53, 0x32, 0x31, 0x35, 0x31, 0x43, 0x6f,
		0x61, 0x73, 0x74, 0x4b, 0x5a, 0x20, 0x24, 0x31, 0x24, 0x31, 0x2d, 0x24, 0x32, 0x4b, 0x79, 0x6f,
		0x77, 0x6f, 0x6e, 0x4b, 0x7a, 0x65, 0x6e, 0x55, 0x72, 0x65, 0x6b, 0x69, 0x5f, 0x55, 0x31, 0x55,
		0x72, 0x65, 0x6b, 0x69, 0x20, 0x55, 0x31, 0x45, 0x76, 0x61, 0x5f, 0x45, 0x30, 0x31, 0x45, 0x76,
		0x61, 0x20, 0x45, 0x30, 0x31, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x56, 0x31, 0x52, 0x45,
		0x58, 0x20, 0x52, 0x58, 0x52, 0x65, 0x78, 0x20, 0x52, 0x58, 0x4c, 0x61, 0x6d, 0x69, 0x61, 0x20,
		0x4c, 0x30, 0x31, 0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x79, 0x20, 0x24, 0x31, 0x44, 0x41, 0x52,
		0x54, 0x20, 0x4b, 0x5a, 0x30, 0x37, 0x44, 0x61, 0x72, 0x74, 0x20, 0x4b, 0x5a, 0x30, 0x37, 0x4c,
		0x2d, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31,
		0x53, 0x61, 0x70, 0x70, 0x68, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x49, 0x51, 0x4c,
		0x43, 0x54, 0x4c, 0x45, 0x4d, 0x46, 0x4f, 0x4c, 0x47, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x44, 0x4d, 0x2d, 0x24, 0x31, 0x4c, 0x37, 0x30, 0x46,
		0x37, 0x30, 0x4c, 0x39, 0x30, 0x4c, 0x38, 0x30, 0x4c, 0x47, 0x2d, 0x44, 0x33, 0x34, 0x30, 0x46,
		0x38, 0x4c, 0x37, 0x30, 0x20, 0x54, 0x72, 0x69, 0x4c, 0x33, 0x30, 0x4c, 0x47, 0x2d, 0x44, 0x31,
		0x36, 0x30, 0x4c, 0x34, 0x30, 0x4c, 0x34, 0x35, 0x4c, 0x33, 0x35, 0x4c, 0x32, 0x30, 0x4c, 0x36,
		0x30, 0x4c, 0x36, 0x30, 0x69, 0x4c, 0x36, 0x35, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30, 0x41,
		0x50, 0x4d, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x34, 0x4c, 0x47, 0x2d, 0x50, 0x35,
		0x30, 0x35, 0x52, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30, 0x56, 0x50, 0x50, 0x5a, 0x6f, 0x6e,
		0x65, 0x20, 0x34, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x32, 0x30, 0x50, 0x4d, 0x54, 0x72, 0x69, 0x62,
		0x75, 0x74, 0x65, 0x20, 0x45, 0x6d, 0x70, 0x69, 0x72, 0x65, 0x4c, 0x47, 0x2d, 0x53, 0x50, 0x32,
		0x30, 0x30, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x44, 0x79, 0x6e, 0x61, 0x73, 0x74,
		0x79, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x35, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74,
		0x65, 0x20, 0x32, 0x4c, 0x47, 0x2d, 0x46, 0x35, 0x37, 0x30, 0x42, 0x61, 0x6e, 0x64, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x56, 0x53, 0x39, 0x33, 0x30, 0x20, 0x34, 0x47, 0x53, 0x70, 0x65, 0x63, 0x74,
		0x72, 0x75, 0x6d, 0x20, 0x49, 0x49, 0x20, 0x34, 0x47, 0x47, 0x32, 0x47, 0x32, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x47, 0x33, 0x47, 0x33, 0x20, 0x56, 0x69, 0x67, 0x6f, 0x72, 0x4c, 0x47, 0x2d, 0x46,
		0x34, 0x31, 0x30, 0x53, 0x47, 0x33, 0x20, 0x41, 0x47, 0x33, 0x53, 0x47, 0x33, 0x20, 0x42, 0x65,
		0x61, 0x74, 0x47, 0x33, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4c, 0x47, 0x2d, 0x46, 0x34,
		0x36, 0x30, 0x47, 0x33, 0x20, 0x43, 0x61, 0x74, 0x2e, 0x20, 0x36, 0x4c, 0x47, 0x2d, 0x44, 0x37,
		0x32, 0x34, 0x47, 0x33, 0x73, 0x47, 0x34, 0x47, 0x34, 0x63, 0x47, 0x34, 0x20, 0x53, 0x74, 0x79,
		0x6c, 0x75, 0x73, 0x47, 0x34, 0x73, 0x4c, 0x47, 0x2d, 0x48, 0x37, 0x33, 0x35, 0x47, 0x34, 0x20,
		0x42, 0x65, 0x61, 0x74, 0x4c, 0x47, 0x2d, 0x48, 0x37, 0x33, 0x31, 0x47, 0x34, 0x20, 0x56, 0x69,
		0x67, 0x6f, 0x72, 0x47, 0x35, 0x20, 0x53, 0x45, 0x47, 0x36, 0x4c, 0x4d, 0x2d, 0x51, 0x38, 0x35,
		0x30, 0x47, 0x37, 0x20, 0x46, 0x69, 0x74, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x31, 0x30, 0x47, 0x37,
		0x20, 0x4f, 0x6e, 0x65, 0x47, 0x20, 0x46, 0x6c, 0x65, 0x78, 0x47, 0x20, 0x46, 0x6c, 0x65, 0x78,
		0x20, 0x32, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x47, 0x2d, 0x46,
		0x34, 0x33, 0x30, 0x4c, 0x47, 0x78, 0x32, 0x47, 0x78, 0x4c, 0x4d, 0x2d, 0x47, 0x38, 0x35, 0x30,
		0x47, 0x38, 0x58, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d, 0x47, 0x38, 0x31, 0x30,
		0x47, 0x38, 0x53, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x57, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x48, 0x34, 0x31, 0x30, 0x57, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x57, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x47, 0x57,
		0x69, 0x6e, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4a, 0x61, 0x7a, 0x7a, 0x4b, 0x32,
		0x30, 0x46, 0x36, 0x30, 0x41, 0x4b, 0x41, 0x4c, 0x4d, 0x2d, 0x4b, 0x39, 0x32, 0x30, 0x4b, 0x39,
		0x32, 0x4c, 0x47, 0x4c, 0x34, 0x31, 0x43, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x20,
		0x32, 0x4c, 0x47, 0x4c, 0x53, 0x36, 0x36, 0x30, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4d,
		0x61, 0x67, 0x6e, 0x61, 0x4c, 0x47, 0x4c, 0x36, 0x33, 0x42, 0x4c, 0x46, 0x69, 0x65, 0x73, 0x74,
		0x61, 0x46, 0x69, 0x65, 0x73, 0x74, 0x61, 0x20, 0x32, 0x42, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x32,
		0x4c, 0x20, 0x42, 0x65, 0x6c, 0x6c, 0x6f, 0x4c, 0x20, 0x46, 0x69, 0x6e, 0x6f, 0x52, 0x69, 0x73,
		0x69, 0x6f, 0x52, 0x69, 0x73, 0x69, 0x6f, 0x20, 0x32, 0x58, 0x33, 0x30, 0x30, 0x53, 0x70, 0x72,
		0x65, 0x65, 0x4c, 0x47, 0x4d, 0x2d, 0x58, 0x34, 0x30, 0x31, 0x53, 0x58, 0x35, 0x30, 0x30, 0x4c,
		0x47, 0x4d, 0x2d, 0x58, 0x31, 0x30, 0x30, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x46, 0x6f,
		0x6c, 0x64, 0x65, 0x72, 0x20, 0x58, 0x31, 0x30, 0x30, 0x53, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43,
		0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4f, 0x6e,
		0x65, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x20,
		0x32, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x47, 0x4c, 0x47, 0x2d, 0x46, 0x32, 0x32,
		0x30, 0x4b, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x47, 0x4b, 0x4f, 0x70, 0x74, 0x69,
		0x6d, 0x75, 0x73, 0x20, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x49, 0x49, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x75, 0x73, 0x20, 0x4c, 0x33, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20,
		0x4c, 0x34, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x34, 0x20,
		0x49, 0x49, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c,
		0x34, 0x30, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x35, 0x20, 0x49, 0x49, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
		0x20, 0x4c, 0x31, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x39,
		0x20, 0x49, 0x49, 0x4c, 0x47, 0x2d, 0x50, 0x38, 0x37, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x46, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x46, 0x33, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x46, 0x36, 0x4c, 0x47, 0x2d, 0x55, 0x53, 0x37, 0x38, 0x30,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x46, 0x37, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x69, 0x74, 0x20, 0x24, 0x31, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c,
		0x54, 0x45, 0x20, 0x32, 0x4c, 0x47, 0x2d, 0x46, 0x32, 0x36, 0x30, 0x53, 0x4f, 0x70, 0x74, 0x69,
		0x6d, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x33, 0x4c, 0x47, 0x2d, 0x46, 0x31, 0x32, 0x30,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x54, 0x61, 0x67, 0x4c,
		0x47, 0x2d, 0x50, 0x37, 0x30, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37, 0x20, 0x49, 0x49, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37, 0x30, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x4c, 0x2d, 0x30, 0x31, 0x44, 0x50, 0x52, 0x41, 0x44, 0x41,
		0x20, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x2d, 0x30, 0x32, 0x44, 0x4c, 0x2d, 0x30, 0x37,
		0x43, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x20,
		0x4c, 0x2d, 0x30, 0x37, 0x43, 0x56, 0x32, 0x30, 0x51, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x35, 0x30, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x79, 0x4c,
		0x47, 0x2d, 0x4c, 0x53, 0x38, 0x34, 0x30, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x34, 0x47, 0x20,
		0x4c, 0x54, 0x45, 0x38, 0x30, 0x31, 0x4c, 0x47, 0x51, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73,
		0x4c, 0x47, 0x2d, 0x4d, 0x34, 0x30, 0x30, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x53,
		0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x51, 0x37, 0x51, 0x37, 0x2b, 0x51, 0x38, 0x2b, 0x51, 0x38, 0x51, 0x39,
		0x51, 0x37, 0x30, 0x51, 0x35, 0x32, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x50, 0x58, 0x4c, 0x47, 0x2d, 0x4d, 0x53, 0x38, 0x37, 0x30, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74,
		0x20, 0x34, 0x47, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x32, 0x53,
		0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32, 0x20, 0x56, 0x53,
		0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x65,
		0x20, 0x33, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x33,
		0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x79, 0x6c,
		0x6f, 0x20, 0x34, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x35, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20,
		0x36, 0x47, 0x37, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x47, 0x2d, 0x4d, 0x31, 0x35, 0x33,
		0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30, 0x43, 0x4d,
		0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x20, 0x32, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x20,
		0x32, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x72, 0x65, 0x6d, 0x69,
		0x65, 0x72, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x4d, 0x2d, 0x58, 0x35, 0x32,
		0x35, 0x51, 0x36, 0x30, 0x4c, 0x4d, 0x2d, 0x4b, 0x33, 0x31, 0x35, 0x49, 0x4d, 0x57, 0x33, 0x31,
		0x4b, 0x33, 0x31, 0x4c, 0x47, 0x4c, 0x34, 0x32, 0x33, 0x44, 0x4c, 0x53, 0x6f, 0x6c, 0x6f, 0x20,
		0x4c, 0x54, 0x45, 0x4c, 0x47, 0x2d, 0x46, 0x38, 0x32, 0x30, 0x4c, 0x55, 0x58, 0x32, 0x58, 0x20,
		0x43, 0x61, 0x6d, 0x58, 0x20, 0x4d, 0x61, 0x63, 0x68, 0x58, 0x20, 0x43, 0x68, 0x61, 0x72, 0x67,
		0x65, 0x58, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x47, 0x2d, 0x46, 0x37, 0x34, 0x30, 0x4c,
		0x58, 0x20, 0x53, 0x6b, 0x69, 0x6e, 0x58, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x58, 0x20,
		0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x4d, 0x2d, 0x58, 0x35, 0x31, 0x30, 0x57, 0x4d,
		0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x33, 0x58, 0x34, 0x58, 0x34, 0x2b, 0x4b, 0x31,
		0x31, 0x4b, 0x33, 0x30, 0x4c, 0x4d, 0x58, 0x31, 0x33, 0x30, 0x49, 0x4d, 0x4c, 0x4d, 0x2d, 0x4b,
		0x33, 0x31, 0x30, 0x49, 0x4d, 0x57, 0x31, 0x31, 0x4c, 0x4d, 0x2d, 0x58, 0x36, 0x30, 0x30, 0x49,
		0x4d, 0x57, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x34, 0x30, 0x5a,
		0x4d, 0x57, 0x57, 0x33, 0x30, 0x4c, 0x4d, 0x2d, 0x4b, 0x36, 0x31, 0x30, 0x49, 0x4d, 0x57, 0x34,
		0x31, 0x4c, 0x47, 0x2d, 0x48, 0x35, 0x32, 0x32, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x34, 0x47, 0x4c, 0x47, 0x4c, 0x35, 0x38, 0x56, 0x4c, 0x52, 0x61, 0x62, 0x65,
		0x6c, 0x20, 0x32, 0x4c, 0x47, 0x2d, 0x58, 0x31, 0x39, 0x30, 0x52, 0x61, 0x79, 0x56, 0x6f, 0x6c,
		0x74, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x49, 0x49, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x31, 0x30, 0x4c,
		0x47, 0x4d, 0x2d, 0x4b, 0x31, 0x32, 0x31, 0x4c, 0x47, 0x4d, 0x2d, 0x58, 0x34, 0x30, 0x31, 0x4c,
		0x58, 0x34, 0x30, 0x31, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x32, 0x30, 0x4e, 0x58, 0x34, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x4b, 0x34, 0x4b, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x34, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x32, 0x30, 0x4b, 0x34, 0x30,
		0x4b, 0x34, 0x30, 0x53, 0x4c, 0x4d, 0x2d, 0x4b, 0x34, 0x31, 0x30, 0x4b, 0x34, 0x31, 0x53, 0x4c,
		0x47, 0x2d, 0x58, 0x32, 0x32, 0x30, 0x4b, 0x35, 0x4c, 0x4d, 0x2d, 0x58, 0x35, 0x34, 0x30, 0x4b,
		0x35, 0x30, 0x53, 0x4b, 0x35, 0x30, 0x34, 0x30, 0x32, 0x4c, 0x47, 0x53, 0x70, 0x72, 0x61, 0x79,
		0x4c, 0x2d, 0x30, 0x32, 0x4b, 0x4a, 0x6f, 0x4a, 0x6f, 0x4c, 0x4d, 0x2d, 0x58, 0x36, 0x32, 0x35,
		0x4e, 0x31, 0x58, 0x36, 0x4c, 0x4d, 0x2d, 0x58, 0x36, 0x32, 0x35, 0x4e, 0x58, 0x36, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x41, 0x72, 0x69, 0x73, 0x74,
		0x6f, 0x20, 0x32, 0x41, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x20, 0x33, 0x58, 0x32, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x56, 0x34, 0x30, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x56, 0x35, 0x30,
		0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d, 0x56, 0x35, 0x31, 0x30, 0x4e, 0x56, 0x35,
		0x30, 0x53, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x32, 0x30, 0x4e,
		0x51, 0x39, 0x32, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x32, 0x37, 0x4c, 0x51, 0x39, 0x20, 0x4f, 0x6e,
		0x65, 0x56, 0x31, 0x30, 0x4b, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4c, 0x4d, 0x2d,
		0x58, 0x32, 0x32, 0x30, 0x51, 0x4d, 0x41, 0x4b, 0x38, 0x73, 0x4b, 0x38, 0x20, 0x34, 0x47, 0x4b,
		0x38, 0x20, 0x56, 0x4b, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x56, 0x33, 0x30, 0x56,
		0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x65,
		0x6c, 0x76, 0x65, 0x74, 0x20, 0x35, 0x47, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x4c, 0x4d, 0x2d, 0x47, 0x39, 0x31, 0x30, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74,
		0x20, 0x34, 0x47, 0x56, 0x36, 0x30, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x20, 0x35, 0x47, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x5a, 0x6f, 0x6e, 0x65, 0x56, 0x33, 0x35, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x5a, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x4f, 0x70, 0x74, 0x69,
		0x6d, 0x75, 0x73, 0x20, 0x5a, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x4b, 0x33, 0x4b, 0x33, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x4b, 0x37, 0x4b, 0x38, 0x56, 0x53, 0x35, 0x30, 0x30, 0x50, 0x50,
		0x4b, 0x31, 0x30, 0x4b, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4b, 0x32, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x32, 0x32, 0x4b, 0x33, 0x33, 0x4b, 0x34, 0x32, 0x4b, 0x35,
		0x31, 0x4b, 0x35, 0x31, 0x53, 0x4b, 0x35, 0x32, 0x4b, 0x35, 0x36, 0x4b, 0x35, 0x36, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x51, 0x35, 0x31, 0x51, 0x33, 0x31, 0x51, 0x36, 0x31, 0x51, 0x36, 0x4c, 0x4d,
		0x2d, 0x58, 0x34, 0x34, 0x30, 0x69, 0x74, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x48, 0x61,
		0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x20, 0x34, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x58, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x32, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x33,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x56, 0x75, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x56, 0x75, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x56,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x34, 0x58, 0x20, 0x48, 0x44, 0x4c, 0x65, 0x6f,
		0x6e, 0x4c, 0x65, 0x6f, 0x6e, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x70, 0x69, 0x72,
		0x69, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x47, 0x4c,
		0x31, 0x35, 0x38, 0x56, 0x4c, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x20, 0x33, 0x52, 0x65, 0x62, 0x65,
		0x6c, 0x20, 0x34, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x56, 0x53, 0x38, 0x37, 0x36, 0x4c, 0x75, 0x63,
		0x69, 0x64, 0x20, 0x33, 0x47, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x4c, 0x47, 0x2d, 0x48, 0x37,
		0x34, 0x30, 0x47, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x20, 0x32, 0x56, 0x53, 0x38, 0x32, 0x30,
		0x4c, 0x61, 0x6e, 0x63, 0x65, 0x74, 0x56, 0x53, 0x38, 0x37, 0x30, 0x20, 0x34, 0x47, 0x4c, 0x75,
		0x63, 0x69, 0x64, 0x20, 0x32, 0x56, 0x53, 0x38, 0x31, 0x30, 0x50, 0x50, 0x54, 0x72, 0x61, 0x6e,
		0x73, 0x70, 0x79, 0x72, 0x65, 0x4c, 0x47, 0x2d, 0x46, 0x35, 0x38, 0x30, 0x4c, 0x47, 0x65, 0x6e,
		0x74, 0x6c, 0x65, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x56, 0x75, 0x20, 0x33, 0x4c, 0x47,
		0x2d, 0x46, 0x4c, 0x34, 0x30, 0x4c, 0x30, 0x37, 0x30, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4c,
		0x47, 0x2d, 0x46, 0x34, 0x34, 0x30, 0x4c, 0x49, 0x63, 0x65, 0x20, 0x43, 0x72, 0x65, 0x61, 0x6d,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4c, 0x38, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4c, 0x47,
		0x2d, 0x44, 0x33, 0x37, 0x30, 0x4c, 0x38, 0x30, 0x20, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x59,
		0x32, 0x35, 0x57, 0x49, 0x4e, 0x47, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x35, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x46, 0x48, 0x44, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x47, 0x2d, 0x56, 0x35, 0x33, 0x33, 0x47, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x49, 0x56, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46,
		0x20, 0x37, 0x2e, 0x30, 0x22, 0x4c, 0x47, 0x4c, 0x4b, 0x34, 0x33, 0x30, 0x47, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x46, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4c, 0x47, 0x2d, 0x4c, 0x4b, 0x34, 0x36, 0x30,
		0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22,
		0x20, 0x4c, 0x54, 0x45, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x33, 0x4c, 0x47, 0x2d,
		0x56, 0x37, 0x30, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x4c, 0x47,
		0x2d, 0x56, 0x34, 0x39, 0x37, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x4c, 0x47, 0x2d, 0x56, 0x39, 0x33, 0x35, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49,
		0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x4c, 0x47, 0x2d, 0x56, 0x39, 0x34, 0x30, 0x47, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x20, 0x46, 0x48, 0x44, 0x47, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x49, 0x20, 0x38, 0x2e, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x49, 0x49, 0x49, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x46, 0x48, 0x44, 0x47, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x49, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x46, 0x48, 0x44,
		0x20, 0x4c, 0x54, 0x45, 0x4c, 0x47, 0x2d, 0x50, 0x35, 0x33, 0x30, 0x4c, 0x47, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x49, 0x56, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x46, 0x48, 0x44, 0x20, 0x4c, 0x54,
		0x45, 0x56, 0x4b, 0x38, 0x31, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x33, 0x20,
		0x4c, 0x54, 0x45, 0x56, 0x4b, 0x38, 0x31, 0x35, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x20,
		0x38, 0x2e, 0x33, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4c,
		0x47, 0x2d, 0x56, 0x39, 0x33, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x4c, 0x47, 0x2d, 0x56, 0x35, 0x33, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x58, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x58, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4c, 0x47, 0x54, 0x33, 0x32, 0x51,
		0x75, 0x61, 0x20, 0x54, 0x61, 0x64, 0x20, 0x50, 0x5a, 0x4c, 0x47, 0x54, 0x33, 0x31, 0x51, 0x75,
		0x61, 0x20, 0x54, 0x61, 0x64, 0x20, 0x50, 0x58, 0x57, 0x65, 0x62, 0x4f, 0x53, 0x20, 0x54, 0x56,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x42, 0x50, 0x37, 0x34, 0x30, 0x42, 0x50, 0x37, 0x34, 0x30,
		0x34, 0x37, 0x4c, 0x41, 0x37, 0x39, 0x30, 0x57, 0x2d, 0x5a, 0x41, 0x4e, 0x65, 0x74, 0x43, 0x61,
		0x73, 0x74, 0x4c, 0x47, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x55, 0x72, 0x62, 0x61, 0x6e,
		0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x65, 0x47, 0x20, 0x57,
		0x61, 0x74, 0x63, 0x68, 0x24, 0x31, 0x4c, 0x4e, 0x4d, 0x42, 0x42, 0x53, 0x4c, 0x4f, 0x4b, 0x4d,
		0x41, 0x54, 0x4c, 0x50, 0x58, 0x2d, 0x47, 0x4c, 0x50, 0x58, 0x2d, 0x47, 0x20, 0x42, 0x4f, 0x58,
		0x4c, 0x50, 0x58, 0x2d, 0x47, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6f, 0x78,
		0x20, 0x4d, 0x61, 0x78, 0x4c, 0x54, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4c, 0x54, 0x5f,
		0x53, 0x39, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x53, 0x39, 0x50, 0x37,
		0x73, 0x53, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x31, 0x30, 0x50, 0x31, 0x30, 0x69,
		0x4d, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x59, 0x46, 0x4c, 0x53, 0x2d, 0x34, 0x30,
		0x30, 0x34, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x32, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x31,
		0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x32, 0x31, 0x45, 0x61,
		0x72, 0x74, 0x68, 0x20, 0x32, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x35, 0x57, 0x61, 0x74, 0x65,
		0x72, 0x20, 0x46, 0x31, 0x4c, 0x53, 0x2d, 0x34, 0x35, 0x30, 0x33, 0x46, 0x6c, 0x61, 0x6d, 0x65,
		0x20, 0x4c, 0x53, 0x2d, 0x34, 0x35, 0x30, 0x33, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x31, 0x46,
		0x6c, 0x61, 0x6d, 0x65, 0x20, 0x33, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x33, 0x46, 0x6c, 0x61,
		0x6d, 0x65, 0x20, 0x34, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x32, 0x46, 0x6c, 0x61, 0x6d, 0x65,
		0x20, 0x35, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x35, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x36,
		0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x37, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x38, 0x46, 0x6c,
		0x61, 0x6d, 0x65, 0x20, 0x37, 0x53, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x38, 0x4c, 0x53, 0x2d,
		0x35, 0x30, 0x30, 0x32, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30,
		0x30, 0x35, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x34, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x36,
		0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x36, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x38, 0x57, 0x61,
		0x74, 0x65, 0x72, 0x20, 0x32, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x39, 0x57, 0x69, 0x6e, 0x64,
		0x20, 0x36, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x33, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x4c,
		0x53, 0x2d, 0x35, 0x30, 0x31, 0x34, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x34, 0x4c, 0x53, 0x2d, 0x35,
		0x30, 0x31, 0x30, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x35,
		0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x38, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x36, 0x57, 0x69,
		0x6e, 0x64, 0x20, 0x37, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x34, 0x57, 0x61, 0x74, 0x65, 0x72,
		0x20, 0x37, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x37, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x37,
		0x53, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x37, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x31,
		0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x38, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x34, 0x53, 0x4c, 0x53,
		0x2d, 0x35, 0x30, 0x32, 0x30, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x30, 0x4c, 0x53, 0x2d,
		0x35, 0x32, 0x30, 0x31, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x46, 0x31, 0x53, 0x4c, 0x53, 0x2d,
		0x35, 0x35, 0x30, 0x32, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x33, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30,
		0x33, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x33, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x36, 0x57,
		0x61, 0x74, 0x65, 0x72, 0x20, 0x39, 0x4c, 0x53, 0x2d, 0x36, 0x30, 0x30, 0x31, 0x57, 0x69, 0x6e,
		0x64, 0x20, 0x32, 0x4c, 0x61, 0x6e, 0x64, 0x20, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x56, 0x70, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x58, 0x33, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x33, 0x49, 0x6f, 0x75, 0x74,
		0x64, 0x6f, 0x6f, 0x72, 0x20, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x20, 0x33, 0x4c, 0x61, 0x6e, 0x64,
		0x76, 0x6f, 0x53, 0x36, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x36, 0x58, 0x4d, 0x24, 0x31,
		0x30, 0x30, 0x24, 0x32, 0x4c, 0x61, 0x6e, 0x69, 0x6e, 0x4c, 0x61, 0x6e, 0x69, 0x78, 0x49, 0x4c,
		0x49, 0x55, 0x4d, 0x5f, 0x50, 0x41, 0x44, 0x5f, 0x52, 0x58, 0x31, 0x30, 0x76, 0x35, 0x49, 0x6c,
		0x69, 0x75, 0x6d, 0x20, 0x50, 0x61, 0x64, 0x20, 0x52, 0x58, 0x31, 0x30, 0x20, 0x56, 0x35, 0x4c,
		0x41, 0x4e, 0x49, 0x58, 0x5f, 0x50, 0x41, 0x44, 0x5f, 0x45, 0x37, 0x49, 0x6c, 0x69, 0x75, 0x6d,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x45, 0x37, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x24, 0x31, 0x58, 0x31, 0x32, 0x30, 0x43, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x58, 0x31,
		0x32, 0x30, 0x43, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x49, 0x6c, 0x69, 0x75, 0x6d,
		0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x24, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x24,
		0x31, 0x56, 0x4c, 0x61, 0x72, 0x6b, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31,
		0x20, 0x48, 0x44, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x32, 0x20, 0x24, 0x31, 0x20,
		0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x32, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65,
		0x20, 0x58, 0x34, 0x20, 0x37, 0x20, 0x33, 0x47, 0x20, 0x48, 0x44, 0x46, 0x72, 0x65, 0x65, 0x4d,
		0x65, 0x20, 0x58, 0x34, 0x20, 0x37, 0x48, 0x44, 0x20, 0x33, 0x47, 0x46, 0x72, 0x65, 0x65, 0x4d,
		0x65, 0x20, 0x58, 0x32, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34,
		0x20, 0x37, 0x48, 0x44, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20, 0x39, 0x46,
		0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20, 0x37, 0x46, 0x72, 0x65, 0x65, 0x42, 0x69,
		0x72, 0x64, 0x20, 0x35, 0x57, 0x69, 0x46, 0x69, 0x46, 0x72, 0x65, 0x65, 0x42, 0x69, 0x72, 0x64,
		0x20, 0x35, 0x20, 0x57, 0x69, 0x46, 0x69, 0x45, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
		0x20, 0x24, 0x31, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x50, 0x48,
		0x41, 0x42, 0x4c, 0x45, 0x54, 0x20, 0x37, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x37,
		0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x36, 0x2e, 0x30, 0x42, 0x6a, 0x6f, 0x72, 0x6e,
		0x20, 0x53, 0x50, 0x2d, 0x35, 0x30, 0x30, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x24, 0x31,
		0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x4e, 0x6f, 0x64, 0x61, 0x49, 0x6d, 0x70, 0x72,
		0x65, 0x73, 0x73, 0x20, 0x4e, 0x6f, 0x64, 0x61, 0x4c, 0x61, 0x76, 0x61, 0x42, 0x6c, 0x61, 0x7a,
		0x65, 0x20, 0x32, 0x46, 0x6c, 0x61, 0x69, 0x72, 0x20, 0x24, 0x31, 0x42, 0x65, 0x6e, 0x63, 0x6f,
		0x20, 0x59, 0x33, 0x30, 0x42, 0x65, 0x6e, 0x63, 0x6f, 0x20, 0x59, 0x35, 0x30, 0x42, 0x65, 0x6e,
		0x63, 0x6f, 0x20, 0x59, 0x34, 0x30, 0x41, 0x67, 0x6e, 0x69, 0x20, 0x35, 0x47, 0x5a, 0x36, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x39, 0x37, 0x20, 0x49, 0x50, 0x53, 0x52, 0x35, 0x73, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x41, 0x39, 0x37, 0x20, 0x32, 0x47, 0x42, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x37, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x69,
		0x78, 0x65, 0x6c, 0x20, 0x56, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x69, 0x78, 0x65, 0x6c,
		0x20, 0x56, 0x24, 0x31, 0x58, 0x31, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x4c, 0x49, 0x72, 0x69,
		0x73, 0x20, 0x58, 0x31, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x58, 0x34, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x52, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x41, 0x20, 0x5a, 0x33, 0x20, 0x55, 0x50,
		0x5a, 0x33, 0x5a, 0x24, 0x31, 0x5a, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x36, 0x5a, 0x32,
		0x4c, 0x5a, 0x47, 0x34, 0x30, 0x32, 0x20, 0x4f, 0x4d, 0x5a, 0x32, 0x31, 0x5a, 0x36, 0x30, 0x73,
		0x56, 0x32, 0x56, 0x37, 0x56, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x5a, 0x35, 0x33, 0x5a,
		0x35, 0x32, 0x5a, 0x36, 0x32, 0x5a, 0x37, 0x31, 0x5a, 0x39, 0x33, 0x49, 0x72, 0x69, 0x73, 0x20,
		0x36, 0x36, 0x49, 0x72, 0x69, 0x73, 0x20, 0x35, 0x32, 0x49, 0x72, 0x69, 0x73, 0x20, 0x35, 0x34,
		0x49, 0x72, 0x69, 0x73, 0x20, 0x35, 0x39, 0x49, 0x72, 0x69, 0x73, 0x20, 0x34, 0x36, 0x49, 0x72,
		0x69, 0x73, 0x20, 0x34, 0x35, 0x43, 0x49, 0x72, 0x69, 0x73, 0x20, 0x34, 0x35, 0x49, 0x72, 0x69,
		0x73, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x32, 0x58, 0x49, 0x72, 0x69, 0x73, 0x20, 0x41, 0x6c,
		0x66, 0x61, 0x20, 0x4c, 0x5a, 0x34, 0x31, 0x56, 0x38, 0x56, 0x2b, 0x36, 0x47, 0x72, 0x61, 0x6e,
		0x64, 0x32, 0x63, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x32, 0x43, 0x52, 0x31, 0x5f, 0x4c, 0x69,
		0x74, 0x65, 0x52, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x45, 0x39, 0x38, 0x32, 0x30, 0x52,
		0x35, 0x4c, 0x45, 0x39, 0x38, 0x31, 0x30, 0x52, 0x33, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x37,
		0x70, 0x6c, 0x75, 0x73, 0x49, 0x72, 0x69, 0x73, 0x20, 0x38, 0x38, 0x20, 0x47, 0x6f, 0x44, 0x49,
		0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x31, 0x33, 0x36, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
		0x72, 0x20, 0x31, 0x33, 0x36, 0x4b, 0x4b, 0x54, 0x20, 0x51, 0x55, 0x41, 0x44, 0x52, 0x41, 0x4b,
		0x4b, 0x54, 0x20, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x4b, 0x4b, 0x54, 0x34, 0x30, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x76, 0x6f, 0x72, 0x79, 0x20, 0x24,
		0x31, 0x54, 0x38, 0x31, 0x4e, 0x20, 0x55, 0x70, 0x54, 0x38, 0x31, 0x4e, 0x54, 0x37, 0x31, 0x49,
		0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x49, 0x72, 0x69, 0x73, 0x20,
		0x24, 0x31, 0x4c, 0x65, 0x20, 0x50, 0x61, 0x6e, 0x54, 0x43, 0x38, 0x30, 0x32, 0x41, 0x4c, 0x65,
		0x20, 0x50, 0x61, 0x6e, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x43, 0x39, 0x37, 0x30, 0x20, 0x24,
		0x31, 0x4c, 0x65, 0x20, 0x50, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x42, 0x65, 0x73, 0x74,
		0x4c, 0x65, 0x45, 0x63, 0x6f, 0x4c, 0x65, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x78,
		0x20, 0x58, 0x39, 0x30, 0x30, 0x2b, 0x4c, 0x65, 0x20, 0x31, 0x53, 0x4c, 0x65, 0x20, 0x33, 0x53,
		0x20, 0x24, 0x31, 0x58, 0x39, 0x30, 0x30, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x65, 0x20,
		0x58, 0x39, 0x30, 0x30, 0x4c, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x4c, 0x65, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x33, 0x20, 0x41, 0x49, 0x4c, 0x65, 0x20, 0x32, 0x20, 0x24, 0x31, 0x4c, 0x65,
		0x20, 0x32, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x31, 0x30, 0x36, 0x4c, 0x65,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x58, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x24,
		0x31, 0x4c, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x24, 0x31, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x20,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x2d, 0x34, 0x35, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e,
		0x2d, 0x34, 0x35, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x56, 0x79, 0x70, 0x65, 0x72, 0x20, 0x50,
		0x52, 0x4f, 0x56, 0x79, 0x70, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x50, 0x20, 0x44, 0x41,
		0x49, 0x53, 0x59, 0x44, 0x61, 0x69, 0x73, 0x79, 0x4c, 0x50, 0x5f, 0x56, 0x45, 0x59, 0x52, 0x4f,
		0x4e, 0x56, 0x65, 0x79, 0x72, 0x6f, 0x6e, 0x4c, 0x50, 0x5f, 0x50, 0x52, 0x41, 0x44, 0x4f, 0x50,
		0x72, 0x61, 0x64, 0x6f, 0x4c, 0x50, 0x5f, 0x42, 0x2d, 0x35, 0x30, 0x42, 0x35, 0x30, 0x4c, 0x50,
		0x5f, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x5f, 0x53, 0x32, 0x53, 0x70, 0x65, 0x63,
		0x74, 0x72, 0x75, 0x6d, 0x20, 0x53, 0x32, 0x49, 0x4e, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x59, 0x5f,
		0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x4c, 0x69,
		0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4c, 0x50, 0x5f, 0x49, 0x4e, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x59, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x4c, 0x50, 0x5f, 0x45, 0x56, 0x4f, 0x52, 0x41, 0x5f, 0x6c, 0x69, 0x67, 0x68,
		0x74, 0x45, 0x76, 0x6f, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x50, 0x20, 0x54,
		0x37, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x37, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c,
		0x50, 0x5f, 0x54, 0x37, 0x30, 0x54, 0x37, 0x30, 0x4c, 0x65, 0x61, 0x67, 0x6f, 0x6f, 0x4d, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x35, 0x20, 0x45, 0x44, 0x47, 0x45, 0x4d, 0x35, 0x20, 0x45,
		0x64, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4b, 0x49, 0x49, 0x43, 0x41, 0x41,
		0x20, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x4b, 0x49, 0x43, 0x43, 0x41, 0x41, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x4b, 0x49, 0x49, 0x43, 0x41, 0x41, 0x20, 0x4d, 0x49, 0x58, 0x4b, 0x49, 0x43, 0x43,
		0x41, 0x41, 0x20, 0x4d, 0x69, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x53, 0x68,
		0x61, 0x72, 0x6b, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x24, 0x31, 0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65,
		0x20, 0x31, 0x41, 0x6c, 0x66, 0x61, 0x20, 0x24, 0x31, 0x58, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x24,
		0x31, 0x4c, 0x65, 0x61, 0x70, 0x61, 0x64, 0x20, 0x37, 0x50, 0x72, 0x6f, 0x4c, 0x65, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24,
		0x31, 0x4c, 0x65, 0x63, 0x74, 0x72, 0x75, 0x73, 0x4c, 0x45, 0x43, 0x54, 0x2d, 0x54, 0x41, 0x42,
		0x24, 0x31, 0x4c, 0x65, 0x64, 0x73, 0x74, 0x61, 0x72, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20,
		0x35, 0x2e, 0x30, 0x4e, 0x6f, 0x76, 0x75, 0x73, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d,
		0x20, 0x36, 0x2e, 0x30, 0x22, 0x4c, 0x65, 0x65, 0x6c, 0x62, 0x6f, 0x78, 0x4c, 0x65, 0x66, 0x66,
		0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x4c, 0x65, 0x6b, 0x65, 0x50, 0x61, 0x64, 0x2d, 0x24, 0x31,
		0x4c, 0x65, 0x6d, 0x68, 0x6f, 0x6f, 0x76, 0x4c, 0x65, 0x6e, 0x63, 0x6f, 0x4c, 0x45, 0x4e, 0x43,
		0x4f, 0x20, 0x44, 0x69, 0x76, 0x65, 0x72, 0x73, 0x6f, 0x2d, 0x37, 0x30, 0x30, 0x44, 0x69, 0x76,
		0x65, 0x72, 0x73, 0x6f, 0x20, 0x37, 0x30, 0x30, 0x54, 0x44, 0x56, 0x39, 0x30, 0x30, 0x4c, 0x65,
		0x6e, 0x6f, 0x76, 0x6f, 0x47, 0x37, 0x38, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20,
		0x41, 0x37, 0x2d, 0x34, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x2d,
		0x35, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30, 0x49,
		0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x31, 0x30, 0x2d, 0x37, 0x30, 0x41, 0x32, 0x31,
		0x30, 0x37, 0x41, 0x2d, 0x48, 0x41, 0x32, 0x31, 0x30, 0x37, 0x41, 0x32, 0x31, 0x30, 0x39, 0x41,
		0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x32, 0x31, 0x30, 0x39, 0x41, 0x54, 0x61,
		0x62, 0x20, 0x32, 0x20, 0x41, 0x31, 0x30, 0x2d, 0x33, 0x30, 0x54, 0x61, 0x62, 0x20, 0x4b, 0x31,
		0x30, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x59, 0x6f, 0x67, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x31, 0x31, 0x59, 0x54, 0x2d, 0x4b, 0x36, 0x30, 0x36, 0x46, 0x59, 0x6f,
		0x67, 0x61, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x42, 0x33, 0x2d, 0x37, 0x33,
		0x30, 0x58, 0x54, 0x41, 0x42, 0x33, 0x20, 0x37, 0x54, 0x41, 0x42, 0x33, 0x20, 0x37, 0x20, 0x45,
		0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x42, 0x2d, 0x37, 0x37, 0x30, 0x33, 0x58,
		0x54, 0x41, 0x42, 0x33, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x42, 0x33, 0x2d, 0x58,
		0x37, 0x30, 0x4c, 0x54, 0x41, 0x42, 0x33, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54,
		0x42, 0x33, 0x2d, 0x58, 0x37, 0x30, 0x46, 0x54, 0x41, 0x42, 0x33, 0x20, 0x31, 0x30, 0x20, 0x42,
		0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x41, 0x42, 0x33, 0x20, 0x38, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x54, 0x42, 0x2d, 0x38, 0x58, 0x30, 0x34, 0x46, 0x54, 0x41, 0x42, 0x34, 0x20, 0x38,
		0x20, 0x52, 0x45, 0x4c, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30, 0x4c,
		0x43, 0x54, 0x41, 0x42, 0x32, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30, 0x4c, 0x43, 0x54, 0x41, 0x42,
		0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x31, 0x30, 0x54,
		0x41, 0x42, 0x33, 0x20, 0x38, 0x54, 0x41, 0x42, 0x33, 0x20, 0x38, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x54, 0x41, 0x42, 0x34, 0x20, 0x31, 0x30, 0x54, 0x41, 0x42, 0x34, 0x20, 0x38, 0x54, 0x42, 0x2d,
		0x38, 0x37, 0x30, 0x34, 0x58, 0x54, 0x41, 0x42, 0x34, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x54, 0x41, 0x42, 0x34, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x41, 0x42, 0x35,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x41, 0x42, 0x31, 0x30, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30,
		0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x30, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x31, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x4b, 0x31, 0x31,
		0x54, 0x61, 0x62, 0x20, 0x51, 0x54, 0x20, 0x4b, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x51, 0x54, 0x20, 0x4b, 0x31, 0x31, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x54, 0x61, 0x62, 0x20,
		0x50, 0x31, 0x31, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4b,
		0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x54, 0x61, 0x62, 0x20, 0x45, 0x37, 0x54,
		0x61, 0x62, 0x20, 0x45, 0x38, 0x54, 0x42, 0x2d, 0x37, 0x33, 0x30, 0x34, 0x54, 0x61, 0x62, 0x20,
		0x37, 0x20, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x50, 0x42, 0x2d, 0x36, 0x35, 0x30, 0x35, 0x54, 0x61, 0x62, 0x20, 0x56, 0x37, 0x41, 0x31, 0x30,
		0x31, 0x4c, 0x56, 0x54, 0x61, 0x62, 0x20, 0x36, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20,
		0x46, 0x48, 0x44, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20,
		0x46, 0x48, 0x44, 0x20, 0x52, 0x65, 0x6c, 0x54, 0x42, 0x2d, 0x58, 0x36, 0x30, 0x35, 0x54, 0x61,
		0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x4c, 0x65, 0x6e, 0x6f, 0x76, 0x6f, 0x20,
		0x54, 0x42, 0x2d, 0x58, 0x33, 0x30, 0x36, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x48,
		0x44, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x47,
		0x65, 0x6e, 0x20, 0x33, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x28, 0x47, 0x65,
		0x6e, 0x20, 0x33, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x37, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x37,
		0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x31, 0x30, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x2e, 0x33, 0x22, 0x59, 0x6f,
		0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x32, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x38,
		0x59, 0x6f, 0x67, 0x61, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x59, 0x54, 0x33, 0x2d, 0x38, 0x35, 0x30, 0x4d, 0x59, 0x6f,
		0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x31, 0x30, 0x59, 0x6f, 0x67, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x42, 0x6f, 0x6f,
		0x6b, 0x54, 0x42, 0x2d, 0x4a, 0x37, 0x31, 0x36, 0x46, 0x58, 0x69, 0x61, 0x6f, 0x58, 0x69, 0x6e,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x54, 0x42, 0x31, 0x33, 0x38, 0x46, 0x43, 0x58, 0x69, 0x61, 0x6f,
		0x78, 0x69, 0x6e, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x45, 0x76, 0x65, 0x72, 0x79, 0x50, 0x61, 0x64, 0x32, 0x59,
		0x61, 0x6d, 0x61, 0x64, 0x61, 0x20, 0x45, 0x76, 0x65, 0x72, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x32, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x30, 0x30, 0x30, 0x49, 0x64,
		0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x64,
		0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x50,
		0x61, 0x64, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x24, 0x31, 0x54, 0x41, 0x42, 0x20, 0x32,
		0x20, 0x41, 0x37, 0x2d, 0x33, 0x30, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x37, 0x54, 0x42,
		0x2d, 0x38, 0x35, 0x30, 0x34, 0x46, 0x54, 0x41, 0x42, 0x20, 0x34, 0x20, 0x38, 0x54, 0x61, 0x62,
		0x20, 0x34, 0x20, 0x38, 0x22, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x42, 0x2d, 0x58, 0x33, 0x30,
		0x34, 0x58, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x42, 0x2d,
		0x58, 0x33, 0x30, 0x34, 0x46, 0x45, 0x31, 0x30, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x24,
		0x31, 0x59, 0x42, 0x2d, 0x51, 0x35, 0x30, 0x31, 0x46, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x41, 0x31,
		0x32, 0x59, 0x54, 0x2d, 0x58, 0x37, 0x30, 0x35, 0x58, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x4d, 0x38, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x20, 0x28,
		0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x20, 0x28, 0x47, 0x65,
		0x6e, 0x20, 0x34, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x20, 0x46, 0x48, 0x44, 0x4c, 0x65,
		0x67, 0x69, 0x6f, 0x6e, 0x20, 0x59, 0x37, 0x30, 0x30, 0x4c, 0x37, 0x31, 0x30, 0x36, 0x31, 0x4c,
		0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x59, 0x39, 0x30, 0x4c, 0x37, 0x31, 0x30, 0x39, 0x31, 0x4c,
		0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x59, 0x37, 0x30, 0x53, 0x36, 0x30, 0x41, 0x35, 0x73, 0x41,
		0x38, 0x5a, 0x32, 0x31, 0x35, 0x31, 0x5a, 0x55, 0x4b, 0x20, 0x45, 0x64, 0x67, 0x65, 0x5a, 0x55,
		0x4b, 0x20, 0x5a, 0x32, 0x5a, 0x32, 0x31, 0x32, 0x31, 0x5a, 0x55, 0x4b, 0x20, 0x5a, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x5a, 0x55, 0x4b, 0x20, 0x24, 0x31, 0x4b, 0x33, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x4b, 0x24, 0x31, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x34, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b,
		0x35, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4b, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x31, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4b, 0x35, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x36, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x41, 0x36, 0x30, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x62, 0x65, 0x20,
		0x4b, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x62, 0x65, 0x20, 0x4b, 0x35, 0x56, 0x69,
		0x62, 0x65, 0x20, 0x5a, 0x32, 0x56, 0x69, 0x62, 0x65, 0x20, 0x43, 0x56, 0x69, 0x62, 0x65, 0x20,
		0x58, 0x32, 0x56, 0x69, 0x62, 0x65, 0x20, 0x58, 0x33, 0x56, 0x69, 0x62, 0x65, 0x20, 0x58, 0x33,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x62, 0x65, 0x20, 0x56, 0x37, 0x56, 0x69, 0x62, 0x65,
		0x20, 0x53, 0x36, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x24,
		0x31, 0x69, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x65, 0x67, 0x69,
		0x6f, 0x6e, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x39, 0x4b, 0x35, 0x53, 0x4b, 0x36, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x36, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x69, 0x62, 0x65,
		0x20, 0x50, 0x31, 0x6d, 0x56, 0x69, 0x62, 0x65, 0x20, 0x50, 0x31, 0x20, 0x54, 0x75, 0x72, 0x62,
		0x6f, 0x56, 0x69, 0x62, 0x65, 0x20, 0x50, 0x31, 0x56, 0x69, 0x62, 0x65, 0x20, 0x42, 0x41, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x68, 0x6f, 0x74, 0x56, 0x69, 0x62,
		0x65, 0x20, 0x53, 0x31, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x5a, 0x35, 0x73, 0x5a, 0x35, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x36, 0x20, 0x50, 0x72,
		0x6f, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x47, 0x54, 0x5a, 0x36, 0x20, 0x59, 0x6f, 0x75,
		0x74, 0x68, 0x53, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x47, 0x54, 0x50, 0x68, 0x61, 0x62, 0x20,
		0x32, 0x50, 0x68, 0x61, 0x62, 0x50, 0x68, 0x61, 0x62, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x64,
		0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x64, 0x74, 0x61, 0x62, 0x20, 0x43, 0x6f, 0x6d,
		0x70, 0x61, 0x63, 0x74, 0x20, 0x34, 0x32, 0x41, 0x58, 0x54, 0x32, 0x30, 0x38, 0x31, 0x2d, 0x34,
		0x4b, 0x31, 0x32, 0x41, 0x32, 0x30, 0x31, 0x30, 0x6c, 0x33, 0x36, 0x41, 0x32, 0x30, 0x31, 0x30,
		0x4c, 0x65, 0x6e, 0x6f, 0x76, 0x6f, 0x20, 0x4b, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x31,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x52, 0x2d, 0x31, 0x35, 0x34, 0x31, 0x46, 0x4d, 0x69, 0x72,
		0x61, 0x67, 0x65, 0x20, 0x53, 0x6f, 0x6c, 0x6f, 0x49, 0x64, 0x65, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x53, 0x31, 0x34, 0x35, 0x2d, 0x31, 0x35, 0x49, 0x49, 0x4c, 0x49, 0x64, 0x65, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x53, 0x31, 0x34, 0x35, 0x2d, 0x31, 0x35, 0x49, 0x57, 0x4c, 0x46, 0x6c, 0x65, 0x78,
		0x20, 0x31, 0x34, 0x41, 0x50, 0x49, 0x20, 0x38, 0x31, 0x53, 0x53, 0x49, 0x64, 0x65, 0x61, 0x43,
		0x65, 0x6e, 0x74, 0x72, 0x65, 0x20, 0x35, 0x32, 0x30, 0x53, 0x2d, 0x32, 0x33, 0x49, 0x4b, 0x55,
		0x4c, 0x65, 0x6f, 0x74, 0x65, 0x63, 0x4c, 0x45, 0x53, 0x50, 0x48, 0x35, 0x30, 0x31, 0x31, 0x41,
		0x72, 0x67, 0x6f, 0x6e, 0x20, 0x65, 0x32, 0x35, 0x30, 0x4c, 0x45, 0x53, 0x50, 0x48, 0x35, 0x30,
		0x30, 0x33, 0x42, 0x41, 0x72, 0x67, 0x6f, 0x6e, 0x20, 0x41, 0x32, 0x35, 0x30, 0x42, 0x4c, 0x45,
		0x53, 0x50, 0x48, 0x35, 0x30, 0x31, 0x34, 0x4b, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6e, 0x20, 0x4b,
		0x31, 0x35, 0x30, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x54, 0x33, 0x35, 0x35,
		0x53, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x61, 0x20, 0x24, 0x31, 0x50, 0x75, 0x6c, 0x73,
		0x61, 0x72, 0x20, 0x24, 0x31, 0x4c, 0x45, 0x54, 0x41, 0x42, 0x39, 0x31, 0x36, 0x4c, 0x2d, 0x50,
		0x61, 0x64, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x53, 0x4c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x53, 0x31, 0x30, 0x34, 0x47, 0x57, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x65, 0x73, 0x69,
		0x61, 0x41, 0x6e, 0x6f, 0x76, 0x61, 0x20, 0x41, 0x35, 0x4c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x53,
		0x34, 0x41, 0x31, 0x56, 0x65, 0x67, 0x61, 0x53, 0x34, 0x41, 0x32, 0x49, 0x72, 0x69, 0x64, 0x61,
		0x53, 0x34, 0x41, 0x33, 0x50, 0x61, 0x6c, 0x6c, 0x61, 0x64, 0x61, 0x53, 0x34, 0x41, 0x35, 0x4f,
		0x78, 0x79, 0x67, 0x65, 0x6e, 0x53, 0x34, 0x41, 0x34, 0x20, 0x4e, 0x45, 0x4f, 0x4e, 0x53, 0x34,
		0x41, 0x34, 0x20, 0x4e, 0x65, 0x6f, 0x6e, 0x53, 0x35, 0x41, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x69,
		0x73, 0x74, 0x6f, 0x53, 0x35, 0x41, 0x32, 0x4f, 0x76, 0x65, 0x72, 0x6f, 0x6e, 0x53, 0x35, 0x41,
		0x33, 0x43, 0x61, 0x70, 0x65, 0x6c, 0x6c, 0x61, 0x53, 0x35, 0x41, 0x34, 0x41, 0x72, 0x67, 0x6f,
		0x6e, 0x53, 0x36, 0x41, 0x31, 0x41, 0x6e, 0x74, 0x61, 0x72, 0x65, 0x73, 0x24, 0x31, 0x20, 0x50,
		0x52, 0x4f, 0x20, 0x48, 0x44, 0x4c, 0x50, 0x48, 0x37, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79,
		0x4c, 0x50, 0x48, 0x37, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x78, 0x69, 0x62,
		0x6f, 0x6f, 0x6b, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x31, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x58, 0x4c, 0x4d, 0x46, 0x43, 0x30,
		0x34, 0x35, 0x46, 0x52, 0x54, 0x61, 0x62, 0x54, 0x61, 0x62, 0x4d, 0x46, 0x43, 0x31, 0x36, 0x33,
		0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20,
		0x33, 0x4d, 0x46, 0x43, 0x31, 0x34, 0x32, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x4b, 0x69, 0x64, 0x73, 0x4d, 0x46, 0x43, 0x32, 0x35, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x4d, 0x46, 0x43, 0x32, 0x37, 0x30, 0x46,
		0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4d, 0x46, 0x43, 0x32, 0x38, 0x30,
		0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20,
		0x32, 0x4d, 0x46, 0x43, 0x31, 0x35, 0x36, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x4f, 0x6e, 0x65, 0x4d, 0x46, 0x43, 0x31, 0x35, 0x35, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x46, 0x43, 0x31, 0x35, 0x37, 0x46, 0x52,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20, 0x32, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x46, 0x43, 0x33, 0x37,
		0x35, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x32, 0x4d, 0x46, 0x43, 0x31, 0x36, 0x32, 0x46, 0x52, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x46, 0x43, 0x31, 0x38, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x4d, 0x46, 0x43, 0x31,
		0x38, 0x31, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e,
		0x63, 0x65, 0x64, 0x20, 0x32, 0x4d, 0x46, 0x43, 0x35, 0x30, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x58, 0x4c, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x30, 0x42, 0x42, 0x46, 0x52,
		0x42, 0x61, 0x72, 0x62, 0x69, 0x65, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x46, 0x43,
		0x31, 0x39, 0x35, 0x44, 0x43, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x44, 0x69,
		0x73, 0x6e, 0x65, 0x79, 0x20, 0x43, 0x61, 0x72, 0x73, 0x20, 0x48, 0x44, 0x4d, 0x46, 0x43, 0x31,
		0x39, 0x35, 0x46, 0x55, 0x46, 0x52, 0x46, 0x75, 0x72, 0x62, 0x79, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x35, 0x44, 0x50, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x65,
		0x73, 0x73, 0x65, 0x20, 0x48, 0x44, 0x4d, 0x46, 0x43, 0x31, 0x34, 0x30, 0x46, 0x52, 0x4c, 0x61,
		0x70, 0x54, 0x61, 0x62, 0x4d, 0x46, 0x43, 0x31, 0x34, 0x31, 0x46, 0x52, 0x4c, 0x61, 0x70, 0x54,
		0x61, 0x62, 0x20, 0x32, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x74, 0x6f, 0x6e, 0x4c, 0x69, 0x66, 0x65,
		0x6d, 0x61, 0x78, 0x78, 0x4c, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x65, 0x5a, 0x32, 0x50, 0x4c,
		0x55, 0x53, 0x4c, 0x69, 0x6e, 0x67, 0x77, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6e, 0x65, 0x78, 0x4c,
		0x69, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x6e, 0x73, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x6f, 0x57,
		0x65, 0x62, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x58, 0x36, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x4c, 0x6f,
		0x67, 0x69, 0x63, 0x20, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69,
		0x65, 0x6c, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x31, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x62,
		0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x31, 0x42, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x62, 0x6f, 0x6f, 0x6b,
		0x20, 0x4b, 0x31, 0x30, 0x31, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x6f, 0x6d, 0x4c, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x74, 0x61, 0x6e,
		0x64, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x32, 0x34, 0x20, 0x48, 0x44, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x4f, 0x4d, 0x5f, 0x4c, 0x41, 0x5f, 0x54, 0x41,
		0x42, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x37, 0x31, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x4c, 0x69, 0x6e, 0x6b, 0x20, 0x37, 0x31, 0x6c, 0x6f, 0x67, 0x69, 0x6b, 0x69, 0x64, 0x73, 0x34,
		0x4c, 0x6f, 0x67, 0x69, 0x6b, 0x69, 0x64, 0x73, 0x20, 0x34, 0x4c, 0x2d, 0x69, 0x78, 0x69, 0x72,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x30, 0x31, 0x20, 0x33, 0x47, 0x4c, 0x5f, 0x49, 0x58, 0x49,
		0x52, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x31, 0x30, 0x34, 0x37, 0x48, 0x44, 0x4c, 0x2d, 0x69, 0x78,
		0x69, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x34, 0x37, 0x20, 0x48, 0x44, 0x4c, 0x49,
		0x58, 0x49, 0x52, 0x31, 0x30, 0x34, 0x31, 0x4c, 0x2d, 0x69, 0x78, 0x69, 0x72, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x31, 0x30, 0x34, 0x31, 0x4c, 0x2d, 0x69, 0x78, 0x69, 0x72, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x4c, 0x2d, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x2d, 0x69, 0x74, 0x65,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x2d, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x24,
		0x31, 0x4c, 0x2d, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x50,
		0x4f, 0x57, 0x45, 0x52, 0x20, 0x42, 0x4f, 0x54, 0x4d, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x24, 0x31,
		0x56, 0x52, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x52,
		0x20, 0x42, 0x4f, 0x54, 0x20, 0x24, 0x31, 0x24, 0x31, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x24, 0x32, 0x24, 0x31, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x24, 0x32, 0x4c, 0x65, 0x20,
		0x4c, 0x69, 0x66, 0x74, 0x4c, 0x65, 0x20, 0x57, 0x61, 0x76, 0x65, 0x4c, 0x65, 0x20, 0x53, 0x77,
		0x69, 0x70, 0x65, 0x4c, 0x65, 0x20, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x4c, 0x65, 0x20, 0x43, 0x6f,
		0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4c, 0x65, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x4c, 0x65, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x20, 0x48, 0x6f, 0x6c, 0x61, 0x20, 0x46, 0x52, 0x4c,
		0x65, 0x20, 0x48, 0x6f, 0x6c, 0x61, 0x4c, 0x65, 0x20, 0x4d, 0x6f, 0x6f, 0x76, 0x20, 0x32, 0x4c,
		0x65, 0x20, 0x4d, 0x6f, 0x6f, 0x76, 0x4c, 0x65, 0x20, 0x46, 0x69, 0x74, 0x20, 0x46, 0x52, 0x4c,
		0x65, 0x20, 0x46, 0x69, 0x74, 0x4c, 0x65, 0x20, 0x46, 0x69, 0x7a, 0x7a, 0x4c, 0x65, 0x20, 0x48,
		0x6f, 0x70, 0x4c, 0x65, 0x20, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x4c, 0x65, 0x20, 0x53, 0x6d, 0x6f,
		0x6f, 0x74, 0x68, 0x20, 0x46, 0x52, 0x4c, 0x65, 0x20, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x4c,
		0x65, 0x20, 0x4d, 0x75, 0x73, 0x74, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x4d, 0x75, 0x73, 0x74, 0x4c,
		0x65, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x20, 0x4c, 0x4c, 0x65, 0x20, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x4c, 0x2d, 0x45, 0x47, 0x41, 0x4e, 0x54, 0x4f, 0x4e, 0x45, 0x2d, 0x52, 0x4c,
		0x2d, 0x45, 0x67, 0x61, 0x6e, 0x74, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x4c, 0x2d, 0x45, 0x47,
		0x41, 0x4e, 0x54, 0x4f, 0x4e, 0x45, 0x4c, 0x2d, 0x45, 0x67, 0x61, 0x6e, 0x74, 0x20, 0x4f, 0x6e,
		0x65, 0x4c, 0x65, 0x20, 0x55, 0x70, 0x4c, 0x6f, 0x76, 0x6d, 0x65, 0x4c, 0x75, 0x6d, 0x69, 0x67,
		0x6f, 0x6e, 0x4c, 0x75, 0x6d, 0x69, 0x74, 0x65, 0x6c, 0x4c, 0x75, 0x6d, 0x75, 0x73, 0x49, 0x4e,
		0x4e, 0x4f, 0x20, 0x24, 0x31, 0x49, 0x6f, 0x6e, 0x41, 0x45, 0x4f, 0x4e, 0x20, 0x24, 0x31, 0x4c,
		0x75, 0x6e, 0x61, 0x4c, 0x75, 0x78, 0x6f, 0x72, 0x4d, 0x2d, 0x48, 0x6f, 0x72, 0x73, 0x65, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x31, 0x54, 0x6f, 0x70, 0x20,
		0x24, 0x31, 0x54, 0x4f, 0x50, 0x5f, 0x4e, 0x6f, 0x74, 0x65, 0x38, 0x54, 0x6f, 0x70, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x38, 0x4d, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x45, 0x52, 0x4f, 0x53, 0x20,
		0x34, 0x47, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x34, 0x47, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x53, 0x74,
		0x61, 0x72, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x45, 0x72, 0x6f, 0x73,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x41,
		0x43, 0x45, 0x39, 0x41, 0x63, 0x65, 0x20, 0x39, 0x4a, 0x41, 0x5a, 0x42, 0x41, 0x41, 0x54, 0x45,
		0x5a, 0x20, 0x34, 0x47, 0x46, 0x6f, 0x74, 0x6f, 0x33, 0x46, 0x6f, 0x74, 0x6f, 0x20, 0x33, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x4d, 0x2e, 0x54, 0x2e, 0x54, 0x2e, 0x4d, 0x54,
		0x54, 0x20, 0x49, 0x44, 0x45, 0x41, 0x4c, 0x49, 0x64, 0x65, 0x61, 0x6c, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x24, 0x31, 0x4d, 0x33, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x33, 0x55,
		0x53, 0x32, 0x30, 0x57, 0x55, 0x53, 0x32, 0x30, 0x20, 0x57, 0x4d, 0x34, 0x74, 0x65, 0x6c, 0x53,
		0x53, 0x31, 0x30, 0x35, 0x30, 0x53, 0x53, 0x31, 0x30, 0x36, 0x30, 0x4c, 0x69, 0x76, 0x65, 0x53,
		0x53, 0x31, 0x30, 0x37, 0x30, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x53, 0x31, 0x30, 0x38, 0x30,
		0x4d, 0x61, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x53, 0x53, 0x31, 0x30, 0x39, 0x30, 0x4d, 0x61, 0x78,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x53, 0x34, 0x30, 0x32, 0x30, 0x50, 0x6c, 0x61, 0x79,
		0x53, 0x53, 0x34, 0x30, 0x34, 0x30, 0x49, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x53,
		0x34, 0x30, 0x34, 0x35, 0x53, 0x53, 0x34, 0x33, 0x34, 0x35, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x53, 0x53, 0x34, 0x33, 0x35, 0x30, 0x53, 0x6f, 0x75, 0x6c, 0x53, 0x53, 0x34,
		0x34, 0x34, 0x35, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53,
		0x53, 0x34, 0x34, 0x35, 0x30, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x53, 0x34, 0x34, 0x35, 0x31,
		0x42, 0x65, 0x6c, 0x69, 0x65, 0x76, 0x65, 0x53, 0x53, 0x34, 0x34, 0x35, 0x32, 0x44, 0x72, 0x65,
		0x61, 0x6d, 0x53, 0x53, 0x34, 0x34, 0x35, 0x33, 0x2d, 0x52, 0x52, 0x31, 0x20, 0x46, 0x65, 0x65,
		0x6c, 0x52, 0x32, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x53, 0x34, 0x34, 0x35, 0x33, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
		0x53, 0x53, 0x34, 0x34, 0x35, 0x35, 0x53, 0x53, 0x34, 0x34, 0x35, 0x36, 0x45, 0x76, 0x6f, 0x6c,
		0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x53, 0x34, 0x34, 0x35, 0x37, 0x2d, 0x52, 0x45, 0x76, 0x65,
		0x72, 0x53, 0x53, 0x34, 0x34, 0x35, 0x37, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x46,
		0x65, 0x65, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x53, 0x34, 0x34, 0x35, 0x38, 0x41, 0x74,
		0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x24, 0x31, 0x4d, 0x41, 0x58, 0x56, 0x49, 0x4d, 0x53,
		0x35, 0x33, 0x31, 0x4d, 0x53, 0x35, 0x33, 0x31, 0x20, 0x56, 0x65, 0x67, 0x61, 0x4d, 0x53, 0x35,
		0x30, 0x32, 0x20, 0x4f, 0x72, 0x69, 0x6f, 0x6e, 0x4d, 0x41, 0x58, 0x58, 0x4d, 0x42, 0x49, 0x4d,
		0x42, 0x4f, 0x58, 0x4d, 0x44, 0x43, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x53, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x72, 0x61, 0x6e, 0x64,
		0x20, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x20, 0x34, 0x47, 0x4d, 0x44, 0x54, 0x56, 0x4d, 0x45, 0x45,
		0x47, 0x4d, 0x45, 0x55, 0x4d, 0x49, 0x56, 0x4f, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x49, 0x57, 0x41, 0x4e, 0x47, 0x4d, 0x49, 0x58, 0x43,
		0x4d, 0x4c, 0x41, 0x42, 0x47, 0x6c, 0x6f, 0x77, 0x79, 0x20, 0x24, 0x31, 0x4d, 0x4c, 0x4c, 0x45,
		0x44, 0x4d, 0x4c, 0x53, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x54, 0x77, 0x69, 0x73, 0x74,
		0x4e, 0x6f, 0x74, 0x63, 0x68, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x63, 0x68, 0x20,
		0x53, 0x65, 0x6e, 0x73, 0x65, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x69, 0x51, 0x54,
		0x61, 0x62, 0x20, 0x42, 0x72, 0x61, 0x76, 0x65, 0x20, 0x33, 0x47, 0x69, 0x51, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x41, 0x6c, 0x75, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x34, 0x47, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x49, 0x64, 0x65, 0x61, 0x6c,
		0x20, 0x38, 0x2e, 0x30, 0x22, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x43, 0x61, 0x72, 0x65, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x42, 0x72, 0x61, 0x69, 0x6e, 0x20, 0x33, 0x47, 0x69, 0x51, 0x54, 0x61,
		0x6c, 0x6b, 0x20, 0x56, 0x65, 0x72, 0x73, 0x65, 0x20, 0x34, 0x47, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
		0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x47, 0x54, 0x4f, 0x50, 0x2d, 0x53, 0x20, 0x34, 0x47,
		0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x4f,
		0x6e, 0x79, 0x78, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x69,
		0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x53, 0x70, 0x69, 0x63, 0x79, 0x69, 0x51, 0x54, 0x61, 0x6c,
		0x6b, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x34, 0x47, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20,
		0x33, 0x20, 0x34, 0x47, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61,
		0x6c, 0x6b, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x34, 0x47, 0x69,
		0x51, 0x54, 0x61, 0x62, 0x20, 0x52, 0x6f, 0x73, 0x65, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x4d,
		0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x4e, 0x6f, 0x76, 0x65, 0x6c,
		0x20, 0x33, 0x47, 0x4a, 0x65, 0x74, 0x20, 0x33, 0x47, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x20,
		0x34, 0x47, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x35, 0x2e, 0x32, 0x20, 0x34, 0x47,
		0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x41, 0x75, 0x72, 0x61, 0x53, 0x6c, 0x69, 0x63, 0x65,
		0x20, 0x34, 0x47, 0x41, 0x6e, 0x67, 0x65, 0x6c, 0x20, 0x33, 0x47, 0x41, 0x6e, 0x67, 0x65, 0x6c,
		0x20, 0x33, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x20,
		0x34, 0x47, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x34, 0x47, 0x46, 0x35, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x20, 0x34, 0x47, 0x4d, 0x58, 0x20, 0x34, 0x47, 0x4d, 0x58, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x46, 0x61, 0x62, 0x20, 0x34, 0x47, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x20,
		0x34, 0x47, 0x4d, 0x6f, 0x72, 0x65, 0x20, 0x34, 0x47, 0x57, 0x61, 0x76, 0x65, 0x20, 0x34, 0x47,
		0x42, 0x72, 0x61, 0x63, 0x65, 0x20, 0x32, 0x30, 0x31, 0x38, 0x20, 0x34, 0x47, 0x4c, 0x65, 0x76,
		0x65, 0x6c, 0x20, 0x34, 0x47, 0x52, 0x75, 0x62, 0x79, 0x20, 0x34, 0x47, 0x44, 0x58, 0x20, 0x34,
		0x47, 0x56, 0x69, 0x73, 0x74, 0x61, 0x20, 0x34, 0x47, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x53,
		0x20, 0x34, 0x47, 0x52, 0x33, 0x20, 0x34, 0x47, 0x50, 0x68, 0x61, 0x62, 0x20, 0x36, 0x2e, 0x30,
		0x22, 0x44, 0x36, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x61, 0x6c, 0x41, 0x6c, 0x75,
		0x20, 0x35, 0x2e, 0x35, 0x22, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x47, 0x46, 0x6c, 0x61, 0x6d, 0x65,
		0x20, 0x34, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20,
		0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34, 0x47, 0x54, 0x38,
		0x20, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34, 0x47, 0x69,
		0x51, 0x46, 0x32, 0x30, 0x30, 0x4d, 0x4d, 0x49, 0x4d, 0x4f, 0x56, 0x49, 0x53, 0x55, 0x4e, 0x4d,
		0x53, 0x49, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x54, 0x43, 0x4f, 0x73, 0x6d,
		0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x61, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x61,
		0x63, 0x65, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x61, 0x63, 0x65, 0x20,
		0x32, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74,
		0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x24,
		0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x42, 0x69, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x75, 0x6e, 0x20, 0x34, 0x47,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x75, 0x72, 0x66, 0x20, 0x32, 0x20, 0x34, 0x47, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x75, 0x72, 0x66, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x34, 0x47, 0x52, 0x65, 0x64, 0x62, 0x6f, 0x78,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x35, 0x53, 0x42, 0x2d, 0x24, 0x31, 0x44, 0x56, 0x38, 0x33,
		0x30, 0x34, 0x2d, 0x43, 0x53, 0x75, 0x70, 0x65, 0x72, 0x57, 0x61, 0x76, 0x65, 0x20, 0x44, 0x56,
		0x38, 0x33, 0x30, 0x34, 0x2d, 0x43, 0x4d, 0x54, 0x4e, 0x46, 0x61, 0x69, 0x74, 0x68, 0x20, 0x32,
		0x39, 0x4b, 0x61, 0x20, 0x43, 0x68, 0x6f, 0x63, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x66,
		0x69, 0x74, 0x20, 0x56, 0x39, 0x30, 0x30, 0x4b, 0x61, 0x46, 0x69, 0x74, 0x20, 0x56, 0x39, 0x30,
		0x30, 0x53, 0x6d, 0x40, 0x72, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x24, 0x31, 0x4d, 0x54,
		0x4e, 0x2d, 0x38, 0x39, 0x37, 0x38, 0x50, 0x53, 0x74, 0x65, 0x70, 0x70, 0x61, 0x4d, 0x54, 0x4e,
		0x2d, 0x24, 0x31, 0x4d, 0x59, 0x46, 0x4f, 0x4e, 0x4d, 0x59, 0x50, 0x41, 0x44, 0x37, 0x73, 0x4d,
		0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x73, 0x4d, 0x61, 0x63, 0x6f, 0x6f, 0x78, 0x4d, 0x43,
		0x2d, 0x58, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x61, 0x66, 0x65, 0x4d, 0x61, 0x66, 0x65,
		0x5f, 0x4d, 0x38, 0x32, 0x30, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x4d, 0x38, 0x32, 0x30, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x73, 0x65, 0x65, 0x4e, 0x35, 0x4e, 0x4f, 0x56, 0x41, 0x4e, 0x35, 0x20,
		0x4e, 0x6f, 0x76, 0x61, 0x49, 0x72, 0x6f, 0x6e, 0x2b, 0x4d, 0x61, 0x67, 0x6e, 0x75, 0x73, 0x42,
		0x72, 0x61, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x24, 0x31, 0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x69, 0x63, 0x4a, 0x61, 0x63, 0x6b, 0x4a, 0x6f,
		0x65, 0x55, 0x72, 0x61, 0x6e, 0x6f, 0x20, 0x37, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x72, 0x61,
		0x6e, 0x6f, 0x20, 0x24, 0x31, 0x50, 0x6c, 0x75, 0x74, 0x6f, 0x20, 0x24, 0x31, 0x54, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x54, 0x41, 0x42, 0x2d, 0x37, 0x31, 0x34, 0x54, 0x61,
		0x62, 0x20, 0x37, 0x31, 0x34, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x41, 0x42, 0x5f, 0x38, 0x31,
		0x34, 0x54, 0x61, 0x62, 0x20, 0x38, 0x31, 0x34, 0x54, 0x61, 0x62, 0x24, 0x31, 0x43, 0x72, 0x6f,
		0x6e, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x6c, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x67, 0x6f,
		0x4d, 0x61, 0x6e, 0x6e, 0x4d, 0x61, 0x6e, 0x74, 0x61, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6d,
		0x65, 0x64, 0x69, 0x61, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x31, 0x32, 0x54, 0x69, 0x74, 0x61,
		0x6e, 0x6f, 0x20, 0x31, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x31, 0x34, 0x54, 0x69, 0x74, 0x61,
		0x6e, 0x6f, 0x20, 0x33, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x31, 0x35, 0x4d, 0x65, 0x7a, 0x6f,
		0x20, 0x32, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x32, 0x30, 0x52, 0x6f, 0x63, 0x6b, 0x79, 0x20,
		0x32, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x32, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x79, 0x20, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x4d, 0x53, 0x50, 0x39, 0x36, 0x30, 0x31, 0x37, 0x46, 0x6f, 0x72, 0x74,
		0x6f, 0x20, 0x32, 0x4d, 0x53, 0x50, 0x39, 0x36, 0x30, 0x30, 0x32, 0x46, 0x6f, 0x72, 0x74, 0x6f,
		0x20, 0x31, 0x4d, 0x53, 0x50, 0x39, 0x34, 0x35, 0x30, 0x31, 0x45, 0x61, 0x73, 0x79, 0x20, 0x53,
		0x65, 0x6c, 0x66, 0x69, 0x65, 0x4d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x72, 0x61, 0x4d,
		0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x4d, 0x45, 0x2d, 0x24, 0x31, 0x4d, 0x61, 0x73, 0x63, 0x6f,
		0x6d, 0x4d, 0x61, 0x73, 0x73, 0x67, 0x6f, 0x56, 0x69, 0x32, 0x20, 0x53, 0x4d, 0x61, 0x73, 0x73,
		0x74, 0x65, 0x6c, 0x4a, 0x75, 0x6e, 0x6f, 0x20, 0x51, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48,
		0x61, 0x70, 0x69, 0x20, 0x24, 0x31, 0x4e, 0x36, 0x36, 0x30, 0x53, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x20, 0x4c, 0x54, 0x45, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54,
		0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x34, 0x47, 0x54, 0x61, 0x62, 0x31, 0x30, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x54, 0x61,
		0x62, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2d,
		0x47, 0x47, 0x50, 0x61, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x51, 0x43, 0x20, 0x34, 0x47, 0x4d,
		0x61, 0x73, 0x74, 0x65, 0x72, 0x74, 0x65, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x6f, 0x20, 0x54,
		0x6f, 0x6f, 0x6c, 0x73, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58,
		0x20, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x37,
		0x31, 0x31, 0x36, 0x20, 0x41, 0x35, 0x4d, 0x61, 0x78, 0x63, 0x6f, 0x6d, 0x24, 0x31, 0x20, 0x53,
		0x74, 0x72, 0x6f, 0x6e, 0x67, 0x4d, 0x53, 0x24, 0x31, 0x52, 0x53, 0x2d, 0x34, 0x30, 0x31, 0x4e,
		0x65, 0x76, 0x61, 0x20, 0x52, 0x69, 0x73, 0x65, 0x20, 0x53, 0x31, 0x4d, 0x61, 0x78, 0x66, 0x6f,
		0x6e, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x47, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78,
		0x69, 0x58, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x78, 0x74, 0x72, 0x6f, 0x6e, 0x50,
		0x6c, 0x75, 0x74, 0x6f, 0x4d, 0x61, 0x78, 0x77, 0x65, 0x73, 0x74, 0x41, 0x73, 0x74, 0x72, 0x6f,
		0x20, 0x24, 0x31, 0x4e, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x58, 0x35,
		0x35, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x5f, 0x35, 0x5f, 0x47, 0x4f, 0x5f,
		0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x47, 0x6f, 0x20, 0x4c, 0x54,
		0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x73, 0x74, 0x72,
		0x6f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x41,
		0x73, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x22, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x5a,
		0x35, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x58, 0x34, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x24,
		0x31, 0x20, 0x47, 0x4f, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x34, 0x73, 0x20, 0x4c, 0x54, 0x45,
		0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x34, 0x73, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31,
		0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x20, 0x47, 0x4f, 0x47, 0x72, 0x61,
		0x76, 0x69, 0x74, 0x79, 0x5f, 0x36, 0x50, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x36,
		0x50, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x36, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x36, 0x4e, 0x69,
		0x74, 0x72, 0x6f, 0x20, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x41, 0x73,
		0x74, 0x72, 0x6f, 0x5f, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x39, 0x41, 0x73, 0x74,
		0x72, 0x6f, 0x20, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x39, 0x4d, 0x61, 0x7a, 0x65,
		0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x58, 0x4d, 0x61, 0x7a, 0x65, 0x20, 0x53, 0x70, 0x65, 0x65,
		0x64, 0x53, 0x53, 0x42, 0x2d, 0x24, 0x31, 0x4d, 0x65, 0x63, 0x65, 0x72, 0x58, 0x70, 0x72, 0x65,
		0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x37, 0x38,
		0x35, 0x58, 0x31, 0x30, 0x31, 0x30, 0x4d, 0x31, 0x37, 0x51, 0x46, 0x36, 0x20, 0x33, 0x47, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4d, 0x31, 0x37, 0x51, 0x46, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x38,
		0x30, 0x30, 0x50, 0x33, 0x31, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x38, 0x30, 0x30, 0x50, 0x33, 0x31, 0x43, 0x38, 0x30,
		0x30, 0x50, 0x33, 0x32, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x38, 0x30, 0x30, 0x50, 0x33, 0x32, 0x43, 0x31, 0x30, 0x31,
		0x50, 0x35, 0x31, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x6c, 0x69, 0x66, 0x65, 0x20, 0x31, 0x30, 0x31, 0x50, 0x35, 0x31, 0x43, 0x58, 0x70, 0x72, 0x65,
		0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x37, 0x24,
		0x31, 0x51, 0x46, 0x36, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x37, 0x31, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x46,
		0x37, 0x31, 0x36, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c,
		0x69, 0x66, 0x65, 0x20, 0x4d, 0x37, 0x31, 0x36, 0x4d, 0x65, 0x63, 0x6f, 0x6f, 0x6c, 0x4b, 0x4d,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x4d, 0x39, 0x20, 0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x42,
		0x42, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x38, 0x53,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x57, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44,
		0x56, 0x42, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x4d, 0x38, 0x53,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x38, 0x53, 0x20, 0x4d, 0x61,
		0x78, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x63, 0x6f, 0x6d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61,
		0x64, 0x20, 0x37, 0x35, 0x30, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x39, 0x37, 0x30, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x39, 0x37, 0x30, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61,
		0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x58, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x58, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x48, 0x58, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x58, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x48, 0x58, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x20, 0x47, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x24, 0x31, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38,
		0x37, 0x35, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x4d, 0x2d, 0x53, 0x50, 0x31, 0x41, 0x47, 0x4f,
		0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x47, 0x6f,
		0x20, 0x33, 0x47, 0x4d, 0x2d, 0x53, 0x50, 0x37, 0x78, 0x47, 0x4f, 0x33, 0x47, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x69, 0x50, 0x72, 0x6f,
		0x20, 0x33, 0x47, 0x31, 0x41, 0x45, 0x43, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x31, 0x30, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x69, 0x79, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x32, 0x20, 0x33,
		0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x53,
		0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x53,
		0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x2e, 0x37,
		0x22, 0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x34, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20, 0x53, 0x34, 0x20,
		0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x58, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4d, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4d, 0x58, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x48,
		0x44, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x48, 0x44, 0x20, 0x69, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x20, 0x33, 0x47, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x41, 0x7a,
		0x69, 0x6d, 0x75, 0x74, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x20, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x20, 0x33, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x41, 0x7a, 0x69, 0x6d,
		0x75, 0x74, 0x20, 0x33, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x69, 0x79, 0x6f,
		0x20, 0x38, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x45,
		0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x45, 0x59, 0x57,
		0x69, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x57, 0x38, 0x30, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x32, 0x20, 0x33,
		0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75,
		0x6f, 0x20, 0x42, 0x34, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44,
		0x75, 0x6f, 0x20, 0x47, 0x35, 0x35, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x44, 0x75, 0x6f, 0x20, 0x42, 0x35, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64,
		0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x35, 0x33, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61,
		0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x37, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x33, 0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x35, 0x30, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x36, 0x35, 0x30, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x35, 0x31, 0x55, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x34, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x35, 0x30, 0x30, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x30, 0x30,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x24, 0x31, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x58, 0x24, 0x31, 0x55,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x24, 0x31,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x24, 0x31,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x65, 0x64, 0x69, 0x6f,
		0x6e, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x24, 0x31, 0x4d, 0x65, 0x67, 0x61, 0x46, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x2b, 0x4d,
		0x46, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x34, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x20, 0x34, 0x20, 0x4c,
		0x54, 0x45, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x20, 0x33, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x53,
		0x50, 0x2d, 0x41, 0x32, 0x30, 0x69, 0x4d, 0x69, 0x6e, 0x74, 0x56, 0x39, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4d, 0x65, 0x69, 0x74, 0x75, 0x54, 0x38, 0x54, 0x38, 0x73, 0x54, 0x39, 0x4d, 0x38, 0x73,
		0x32, 0x4d, 0x65, 0x69, 0x7a, 0x75, 0x4d, 0x32, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x24, 0x31,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x31, 0x45, 0x4d, 0x32, 0x45, 0x4d, 0x32, 0x4d, 0x33, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x35, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x36, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x4d, 0x33, 0x73, 0x4d, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x35, 0x63, 0x4d, 0x58,
		0x32, 0x4d, 0x58, 0x33, 0x4d, 0x58, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x58, 0x34, 0x4d, 0x58,
		0x35, 0x6d, 0x31, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x4d, 0x31, 0x20, 0x4d, 0x65, 0x74, 0x61,
		0x6c, 0x4d, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x38, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x50,
		0x52, 0x4f, 0x20, 0x37, 0x50, 0x52, 0x4f, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x52, 0x4f, 0x20, 0x24, 0x31, 0x4d, 0x58, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x31, 0x36, 0x54, 0x31, 0x36, 0x74, 0x68, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x31, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x31, 0x36, 0x74, 0x68, 0x31,
		0x36, 0x58, 0x31, 0x36, 0x31, 0x36, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x33, 0x4d, 0x65, 0x6c,
		0x72, 0x6f, 0x73, 0x65, 0x53, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x30, 0x31, 0x39, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x20, 0x33, 0x2e, 0x34, 0x22, 0x4d,
		0x65, 0x6d, 0x75, 0x70, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x53,
		0x6c, 0x69, 0x64, 0x65, 0x50, 0x61, 0x64, 0x20, 0x4e, 0x47, 0x24, 0x31, 0x53, 0x6c, 0x69, 0x64,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x4e, 0x47, 0x24, 0x31, 0x20, 0x33, 0x47, 0x53, 0x6c, 0x69, 0x64,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x37, 0x30, 0x34, 0x24, 0x31, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x61,
		0x63, 0x69, 0x66, 0x69, 0x63, 0x47, 0x6f, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x32, 0x4d, 0x69,
		0x58, 0x7a, 0x6f, 0x4d, 0x45, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x4d, 0x58, 0x31, 0x30, 0x32,
		0x31, 0x20, 0x33, 0x47, 0x4d, 0x58, 0x24, 0x31, 0x20, 0x34, 0x47, 0x4d, 0x45, 0x31, 0x30, 0x32,
		0x35, 0x20, 0x33, 0x47, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x4d, 0x61, 0x78, 0x41, 0x51, 0x35, 0x30,
		0x30, 0x31, 0x20, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43,
		0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x51, 0x35, 0x30, 0x30,
		0x31, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x4a, 0x75, 0x69, 0x63, 0x65, 0x20, 0x32, 0x43,
		0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x44, 0x6f, 0x6f, 0x64, 0x6c, 0x65, 0x20, 0x32, 0x43, 0x61,
		0x6e, 0x76, 0x61, 0x73, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x34, 0x43, 0x61, 0x6e, 0x76, 0x61,
		0x73, 0x20, 0x4a, 0x75, 0x69, 0x63, 0x65, 0x20, 0x34, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20,
		0x50, 0x75, 0x6c, 0x73, 0x65, 0x34, 0x35, 0x36, 0x30, 0x4d, 0x4d, 0x58, 0x49, 0x4e, 0x20, 0x32,
		0x42, 0x49, 0x4e, 0x20, 0x31, 0x42, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x41, 0x31, 0x43,
		0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x45, 0x76, 0x6f, 0x6b, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x43,
		0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x35, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x35, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x54, 0x61, 0x62, 0x42, 0x6f,
		0x6c, 0x74, 0x20, 0x51, 0x24, 0x31, 0x51, 0x34, 0x31, 0x37, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
		0x20, 0x4d, 0x65, 0x67, 0x61, 0x51, 0x33, 0x35, 0x30, 0x52, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
		0x20, 0x4d, 0x61, 0x67, 0x6e, 0x75, 0x73, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x34,
		0x38, 0x30, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x32,
		0x51, 0x33, 0x38, 0x30, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x51, 0x33, 0x35, 0x31, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x33, 0x35, 0x30, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
		0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x33, 0x34,
		0x39, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x34,
		0x42, 0x6f, 0x6c, 0x74, 0x20, 0x50, 0x61, 0x63, 0x65, 0x51, 0x34, 0x30, 0x39, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x34, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x51, 0x34, 0x31, 0x35,
		0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x50, 0x61, 0x63, 0x65, 0x51, 0x33, 0x34, 0x30, 0x53,
		0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x32, 0x59, 0x55, 0x20, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61,
		0x20, 0x59, 0x55, 0x35, 0x30, 0x34, 0x30, 0x59, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x55, 0x20, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x53,
		0x20, 0x59, 0x55, 0x35, 0x35, 0x33, 0x30, 0x51, 0x34, 0x32, 0x34, 0x42, 0x6f, 0x6c, 0x74, 0x20,
		0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x51, 0x34, 0x31, 0x30, 0x31, 0x42, 0x6f, 0x6c, 0x74, 0x20,
		0x57, 0x61, 0x72, 0x72, 0x69, 0x6f, 0x72, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x33,
		0x35, 0x32, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x34,
		0x42, 0x6f, 0x6c, 0x74, 0x20, 0x24, 0x31, 0x51, 0x33, 0x30, 0x36, 0x42, 0x6f, 0x6c, 0x74, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x33, 0x47, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74, 0x20, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x34, 0x32, 0x36, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20,
		0x4d, 0x65, 0x67, 0x61, 0x20, 0x32, 0x4e, 0x38, 0x32, 0x31, 0x36, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x20, 0x4e, 0x31, 0x31, 0x4e, 0x38, 0x33, 0x30, 0x31, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x4e, 0x31, 0x32, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6e, 0x76, 0x61,
		0x73, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
		0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x34,
		0x34, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x33, 0x35, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x20, 0x32, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x76, 0x61,
		0x73, 0x20, 0x4d, 0x61, 0x67, 0x6e, 0x75, 0x73, 0x20, 0x48, 0x44, 0x43, 0x61, 0x6e, 0x76, 0x61,
		0x73, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x32, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
		0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x56, 0x64, 0x65, 0x6f, 0x20, 0x34, 0x43, 0x61, 0x6e,
		0x76, 0x61, 0x73, 0x20, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x43, 0x61, 0x6e, 0x76,
		0x61, 0x73, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74, 0x20, 0x24, 0x31, 0x69, 0x4f, 0x6e,
		0x65, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x4e, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x49,
		0x4e, 0x20, 0x31, 0x62, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x4b, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x34, 0x33, 0x30,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x34, 0x33, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35,
		0x33, 0x32, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x33, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x33, 0x35, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x35, 0x34, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x35, 0x30, 0x52,
		0x4d, 0x2d, 0x31, 0x30, 0x31, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x38, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x58, 0x4c, 0x20, 0x4c, 0x54, 0x45, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x58, 0x4c, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x36, 0x34, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49,
		0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36,
		0x35, 0x30, 0x52, 0x4d, 0x2d, 0x31, 0x31, 0x35, 0x32, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36,
		0x35, 0x30, 0x20, 0x53, 0x53, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x35, 0x30, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x20, 0x58, 0x4c, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20,
		0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x20, 0x58, 0x4c, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49,
		0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x31, 0x33, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x31, 0x35, 0x33, 0x30, 0x53, 0x75,
		0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x33, 0x53, 0x75, 0x72, 0x66,
		0x61, 0x63, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65,
		0x20, 0x44, 0x75, 0x6f, 0x20, 0x32, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x44, 0x75,
		0x6f, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x33, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x24, 0x31, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x68, 0x45, 0x54, 0x57, 0x31, 0x30,
		0x31, 0x47, 0x54, 0x45, 0x2d, 0x54, 0x61, 0x62, 0x20, 0x57, 0x69, 0x46, 0x69, 0x45, 0x2d, 0x54,
		0x61, 0x62, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x69, 0x6e, 0x69, 0x78, 0x4e, 0x45, 0x4f, 0x20, 0x58,
		0x38, 0x48, 0x4e, 0x45, 0x4f, 0x20, 0x55, 0x32, 0x32, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x24, 0x31,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x45, 0x4f, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4e, 0x45, 0x4f, 0x20, 0x58, 0x38, 0x38, 0x69, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x37, 0x4e, 0x45,
		0x4f, 0x20, 0x58, 0x35, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x24, 0x31, 0x4e, 0x45, 0x4f, 0x20, 0x55,
		0x31, 0x4e, 0x45, 0x4f, 0x20, 0x5a, 0x36, 0x34, 0x4e, 0x45, 0x4f, 0x20, 0x55, 0x39, 0x48, 0x50,
		0x65, 0x61, 0x72, 0x6c, 0x20, 0x24, 0x31, 0x45, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x64, 0x4d, 0x34,
		0x43, 0x52, 0x43, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x56, 0x69, 0x72, 0x47, 0x6f, 0x4f, 0x72, 0x69,
		0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x43, 0x6f, 0x6f, 0x6c, 0x4d, 0x69, 0x6e, 0x74, 0x74,
		0x20, 0x24, 0x31, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x20, 0x24, 0x31,
		0x46, 0x72, 0x65, 0x73, 0x68, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x6f,
		0x4d, 0x6f, 0x62, 0x69, 0x78, 0x20, 0x4d, 0x36, 0x4d, 0x69, 0x6f, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6f, 0x6e, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x24, 0x31,
		0x4d, 0x69, 0x6f, 0x6e, 0x65, 0x20, 0x49, 0x49, 0x49, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x33, 0x50,
		0x32, 0x2b, 0x4d, 0x69, 0x6f, 0x6e, 0x65, 0x5f, 0x50, 0x55, 0x42, 0x47, 0x5f, 0x31, 0x50, 0x55,
		0x42, 0x47, 0x20, 0x31, 0x4e, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x72, 0x61, 0x79,
		0x54, 0x50, 0x4d, 0x34, 0x47, 0x5f, 0x57, 0x54, 0x38, 0x54, 0x50, 0x4d, 0x34, 0x47, 0x20, 0x57,
		0x54, 0x38, 0x4d, 0x49, 0x44, 0x4d, 0x20, 0x24, 0x31, 0x4d, 0x50, 0x4d, 0x20, 0x24, 0x31, 0x4d,
		0x69, 0x74, 0x6f, 0x33, 0x32, 0x35, 0x35, 0x41, 0x33, 0x37, 0x20, 0x5a, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x69, 0x74, 0x73, 0x75, 0x62, 0x69, 0x73, 0x68, 0x69, 0x4d, 0x69, 0x74, 0x73,
		0x75, 0x69, 0x4d, 0x6f, 0x62, 0x65, 0x6c, 0x6c, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x50, 0x33, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x50, 0x33, 0x4d, 0x6f, 0x62, 0x69, 0x49, 0x6f, 0x54, 0x4d, 0x6f, 0x62,
		0x69, 0x47, 0x6f, 0x20, 0x32, 0x4d, 0x6f, 0x62, 0x69, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x62, 0x69, 0x57, 0x69, 0x72, 0x65, 0x4b, 0x41, 0x4e,
		0x55, 0x4e, 0x41, 0x4b, 0x61, 0x6e, 0x75, 0x6e, 0x61, 0x4b, 0x57, 0x41, 0x4e, 0x49, 0x54, 0x41,
		0x4b, 0x77, 0x61, 0x6e, 0x69, 0x74, 0x61, 0x4d, 0x6f, 0x62, 0x69, 0x63, 0x65, 0x6c, 0x45, 0x70,
		0x69, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4c, 0x45, 0x47, 0x45, 0x4e, 0x44, 0x20,
		0x4d, 0x41, 0x58, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x45, 0x47,
		0x45, 0x4e, 0x44, 0x20, 0x50, 0x52, 0x4f, 0x5f, 0x31, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x4c, 0x54, 0x45, 0x42, 0x4c, 0x49, 0x4e, 0x4b, 0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x4f, 0x52,
		0x43, 0x45, 0x45, 0x70, 0x69, 0x63, 0x20, 0x24, 0x31, 0x42, 0x45, 0x52, 0x52, 0x59, 0x31, 0x42,
		0x65, 0x72, 0x72, 0x79, 0x20, 0x31, 0x42, 0x45, 0x52, 0x52, 0x59, 0x20, 0x50, 0x52, 0x4f, 0x42,
		0x65, 0x72, 0x72, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x45, 0x52, 0x52, 0x59, 0x20, 0x32, 0x42,
		0x65, 0x72, 0x72, 0x79, 0x20, 0x32, 0x54, 0x52, 0x45, 0x4e, 0x44, 0x59, 0x20, 0x32, 0x54, 0x72,
		0x65, 0x6e, 0x64, 0x79, 0x20, 0x32, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x42, 0x45, 0x52, 0x52, 0x59, 0x42, 0x65, 0x72, 0x72, 0x79, 0x54, 0x52, 0x45, 0x4e, 0x44, 0x59,
		0x20, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x54, 0x52, 0x45, 0x4e, 0x44, 0x59, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x54, 0x72, 0x65, 0x6e, 0x64,
		0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x59, 0x50, 0x45,
		0x5f, 0x58, 0x48, 0x79, 0x70, 0x65, 0x20, 0x58, 0x48, 0x59, 0x50, 0x45, 0x48, 0x79, 0x70, 0x65,
		0x44, 0x41, 0x4e, 0x44, 0x59, 0x5f, 0x5a, 0x41, 0x4d, 0x44, 0x61, 0x6e, 0x64, 0x79, 0x20, 0x5a,
		0x61, 0x6d, 0x44, 0x41, 0x4e, 0x44, 0x59, 0x44, 0x61, 0x6e, 0x64, 0x79, 0x4d, 0x45, 0x54, 0x52,
		0x4f, 0x32, 0x4d, 0x65, 0x74, 0x72, 0x6f, 0x20, 0x32, 0x41, 0x53, 0x54, 0x52, 0x4f, 0x56, 0x45,
		0x4e, 0x55, 0x53, 0x5f, 0x47, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x47, 0x6f, 0x54, 0x41, 0x4e,
		0x47, 0x4f, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x46, 0x45, 0x4e, 0x44, 0x59, 0x5f, 0x44, 0x53, 0x46, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x44,
		0x53, 0x52, 0x45, 0x42, 0x45, 0x4c, 0x52, 0x55, 0x42, 0x59, 0x52, 0x75, 0x62, 0x79, 0x52, 0x37,
		0x4f, 0x52, 0x45, 0x4f, 0x4f, 0x72, 0x65, 0x6f, 0x47, 0x4c, 0x4f, 0x54, 0x69, 0x74, 0x61, 0x6e,
		0x5f, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x31, 0x5a, 0x4f, 0x4f, 0x4d, 0x5f, 0x31, 0x5a,
		0x6f, 0x6f, 0x6d, 0x20, 0x31, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x44, 0x53, 0x48, 0x65, 0x72, 0x6f,
		0x20, 0x44, 0x53, 0x46, 0x41, 0x4d, 0x45, 0x5f, 0x44, 0x53, 0x46, 0x61, 0x6d, 0x65, 0x20, 0x44,
		0x53, 0x46, 0x41, 0x4d, 0x45, 0x46, 0x61, 0x6d, 0x65, 0x42, 0x45, 0x41, 0x4d, 0x43, 0x6f, 0x73,
		0x6d, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4e, 0x65, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4e, 0x45, 0x4f,
		0x5f, 0x31, 0x4e, 0x65, 0x6f, 0x4e, 0x65, 0x6f, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x65, 0x6f,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x73, 0x77, 0x69, 0x74, 0x63,
		0x68, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x47, 0x6f, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
		0x31, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x31, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x31, 0x52,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x6c, 0x69, 0x6b, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x43,
		0x6c, 0x69, 0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x4c, 0x49, 0x4b, 0x43, 0x6c, 0x69, 0x6b,
		0x56, 0x58, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x58, 0x24, 0x31, 0x50, 0x55, 0x4c, 0x53,
		0x45, 0x5f, 0x31, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x31, 0x50, 0x55, 0x52, 0x45, 0x20, 0x50,
		0x4c, 0x55, 0x53, 0x50, 0x75, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x65, 0x6e, 0x64,
		0x79, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x46, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x5a, 0x4f, 0x4f, 0x4d, 0x2d, 0x48, 0x5a, 0x6f, 0x6f, 0x6d, 0x20, 0x48, 0x5a, 0x4f, 0x4f, 0x4d,
		0x5a, 0x6f, 0x6f, 0x6d, 0x46, 0x65, 0x76, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x24,
		0x31, 0x46, 0x45, 0x56, 0x45, 0x52, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x46, 0x65, 0x76, 0x65, 0x72,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x58, 0x31,
		0x20, 0x24, 0x31, 0x45, 0x31, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x58, 0x51, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62,
		0x6f, 0x20, 0x53, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4c,
		0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x53, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x53, 0x32, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d,
		0x62, 0x6f, 0x20, 0x4a, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4c, 0x61, 0x69, 0x20, 0x5a,
		0x75, 0x6d, 0x62, 0x6f, 0x20, 0x4a, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20,
		0x4a, 0x32, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x5a, 0x55, 0x4d, 0x42,
		0x4f, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x75, 0x6e, 0x61, 0x20, 0x24, 0x31, 0x6d, 0x6f, 0x62,
		0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x4c, 0x41, 0x49, 0x20, 0x59, 0x75, 0x6b, 0x69, 0x4c,
		0x61, 0x69, 0x20, 0x59, 0x75, 0x6b, 0x69, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x6f, 0x72, 0x6f, 0x20,
		0x24, 0x31, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x65, 0x6e, 0x61, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x24,
		0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x5a, 0x4f, 0x52, 0x4f, 0x5f,
		0x34, 0x47, 0x5a, 0x6f, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74,
		0x61, 0x72, 0x20, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x4c, 0x41, 0x49, 0x20, 0x35, 0x31, 0x32,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x4c, 0x61, 0x69, 0x20, 0x35, 0x31, 0x32, 0x4c, 0x61, 0x69,
		0x20, 0x35, 0x30, 0x34, 0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20,
		0x4c, 0x41, 0x49, 0x20, 0x59, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73,
		0x74, 0x61, 0x72, 0x20, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x20, 0x58, 0x20, 0x32, 0x30, 0x31, 0x37,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x58, 0x43, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x52,
		0x49, 0x4d, 0x45, 0x20, 0x58, 0x20, 0x4d, 0x41, 0x58, 0x20, 0x32, 0x30, 0x31, 0x38, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x20, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x6f, 0x6f, 0x6c, 0x24, 0x31, 0x6d,
		0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x4b, 0x41, 0x54, 0x20, 0x34, 0x35, 0x32,
		0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4b, 0x61, 0x74, 0x20, 0x34, 0x35, 0x32, 0x6d, 0x6f, 0x62,
		0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x4c, 0x41, 0x49, 0x5f, 0x59, 0x4f, 0x4c, 0x4c, 0x4f,
		0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x6f, 0x6c, 0x6c, 0x6f, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x4b, 0x69, 0x6e, 0x67, 0x64, 0x6f, 0x6d, 0x47, 0xc3, 0xa9,
		0x6e, 0x65, 0x73, 0x69, 0x73, 0x20, 0x31, 0x32, 0x36, 0x4d, 0x6f, 0x62, 0x69, 0x6f, 0x6c, 0x61,
		0x4d, 0x53, 0x35, 0x30, 0x58, 0x36, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x20, 0x49, 0x49, 0x50, 0x6f,
		0x6c, 0x79, 0x73, 0x20, 0x4d, 0x53, 0x34, 0x35, 0x4c, 0x31, 0x4d, 0x53, 0x35, 0x35, 0x58, 0x36,
		0x41, 0x74, 0x6d, 0x6f, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x4d, 0x53, 0x35, 0x35,
		0x58, 0x35, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x53, 0x35, 0x35, 0x4c,
		0x31, 0x47, 0x41, 0x49, 0x41, 0x4d, 0x53, 0x35, 0x30, 0x4c, 0x31, 0x49, 0x6e, 0x74, 0x69, 0x4d,
		0x42, 0x2d, 0x32, 0x39, 0x30, 0x30, 0x20, 0x51, 0x55, 0x41, 0x54, 0x54, 0x52, 0x4f, 0x4d, 0x42,
		0x2d, 0x32, 0x39, 0x30, 0x30, 0x20, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x4d, 0x53, 0x34,
		0x33, 0x41, 0x33, 0x30, 0x30, 0x30, 0x4d, 0x53, 0x34, 0x35, 0x41, 0x34, 0x30, 0x30, 0x30, 0x65,
		0x4f, 0x6e, 0x20, 0x34, 0x35, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x34, 0x30, 0x30, 0x30, 0x65, 0x4f,
		0x6e, 0x20, 0x35, 0x30, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x34, 0x35, 0x30, 0x30, 0x65, 0x4f, 0x6e,
		0x20, 0x35, 0x30, 0x20, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x53, 0x35, 0x30,
		0x41, 0x35, 0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x20, 0x38, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x36, 0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x35,
		0x30, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x31, 0x36, 0x4d, 0x53, 0x35, 0x30, 0x42, 0x31, 0x31,
		0x30, 0x30, 0x30, 0x57, 0x61, 0x76, 0x65, 0x35, 0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x4d, 0x6f,
		0x62, 0x69, 0x73, 0x74, 0x65, 0x6c, 0x4d, 0x6f, 0x62, 0x6f, 0x4d, 0x6f, 0x62, 0x76, 0x6f, 0x69,
		0x54, 0x69, 0x63, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x24, 0x31, 0x4d, 0x6f, 0x64, 0x65, 0x63,
		0x6f, 0x6d, 0x58, 0x69, 0x6e, 0x6f, 0x20, 0x5a, 0x24, 0x31, 0x20, 0x58, 0x24, 0x32, 0x45, 0x43,
		0x48, 0x4f, 0x20, 0x4c, 0x4f, 0x4c, 0x4c, 0x59, 0x45, 0x63, 0x68, 0x6f, 0x20, 0x4c, 0x6f, 0x6c,
		0x6c, 0x79, 0x46, 0x72, 0x65, 0x65, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65,
		0x57, 0x61, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4d, 0x6f, 0x66, 0x75, 0x74, 0x4d,
		0x6f, 0x73, 0x69, 0x6d, 0x6f, 0x73, 0x69, 0x6d, 0x6f, 0x6d, 0x6f, 0x33, 0x73, 0x6d, 0x6f, 0x6d,
		0x6f, 0x33, 0x53, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61,
		0x4d, 0x4f, 0x54, 0x2d, 0x56, 0x33, 0x36, 0x30, 0x56, 0x33, 0x36, 0x30, 0x6d, 0x6f, 0x74, 0x6f,
		0x20, 0x74, 0x61, 0x62, 0x20, 0x67, 0x37, 0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x47, 0x37, 0x30, 0x53, 0x70, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x73, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x4d, 0x45, 0x46, 0x69, 0x72, 0x65, 0x45, 0x64, 0x67, 0x65, 0x20, 0x53, 0x45,
		0x64, 0x67, 0x65, 0x20, 0x28, 0x24, 0x31, 0x29, 0x45, 0x64, 0x67, 0x65, 0x20, 0x53, 0x33, 0x30,
		0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x33, 0x30,
		0x20, 0x75, 0x6c, 0x74, 0x72, 0x61, 0x45, 0x64, 0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x65, 0x64, 0x67, 0x65,
		0x20, 0x33, 0x30, 0x20, 0x6e, 0x65, 0x6f, 0x45, 0x64, 0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x4e,
		0x65, 0x6f, 0x45, 0x64, 0x67, 0x65, 0x20, 0x32, 0x30, 0x45, 0x64, 0x67, 0x65, 0x20, 0x53, 0x20,
		0x50, 0x72, 0x6f, 0x44, 0x65, 0x66, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x6f, 0x74, 0x6f,
		0x73, 0x6d, 0x61, 0x72, 0x74, 0x51, 0x75, 0x65, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x58, 0x54, 0x44, 0x65, 0x66, 0x79, 0x44, 0x65, 0x66, 0x79, 0x20, 0x58, 0x54, 0x41, 0x64, 0x6d,
		0x69, 0x72, 0x61, 0x6c, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x6f, 0x74,
		0x6f, 0x6c, 0x75, 0x78, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x75, 0x73, 0x49, 0x72, 0x6f, 0x6e, 0x52,
		0x6f, 0x63, 0x6b, 0x41, 0x74, 0x72, 0x69, 0x78, 0x4d, 0x6f, 0x74, 0x6f, 0x6c, 0x75, 0x78, 0x65,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x2d, 0x53, 0x49, 0x4d, 0x41, 0x74, 0x72, 0x69, 0x78, 0x20, 0x54,
		0x56, 0x41, 0x74, 0x72, 0x69, 0x78, 0x20, 0x48, 0x44, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f,
		0x6e, 0x65, 0x47, 0x6c, 0x61, 0x6d, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x20,
		0x33, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x66, 0x79, 0x20, 0x32, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x58, 0x54, 0x38, 0x38, 0x32, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52,
		0x20, 0x56, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x69, 0x44, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x34, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x51, 0x45, 0x6c, 0x65,
		0x63, 0x74, 0x72, 0x69, 0x66, 0x79, 0x20, 0x4d, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41,
		0x5a, 0x52, 0x20, 0x4d, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x44, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x44, 0x31, 0x44, 0x72, 0x6f, 0x69, 0x64,
		0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x44, 0x33, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41,
		0x5a, 0x52, 0x20, 0x48, 0x44, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20,
		0x4d, 0x61, 0x78, 0x78, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x35, 0x32, 0x6a, 0x20, 0x35, 0x47,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x32, 0x6a, 0x20, 0x35, 0x47, 0x58, 0x54, 0x32, 0x33,
		0x33, 0x35, 0x2d, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x33, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x45, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x45, 0x33, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x45, 0x32, 0x20, 0x28, 0x34, 0x47, 0x2d, 0x4c, 0x54, 0x45, 0x29, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x45, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x36, 0x20, 0x28, 0x58, 0x54, 0x32, 0x30, 0x30,
		0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x35, 0x20, 0x43, 0x72, 0x75, 0x69,
		0x73, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x35, 0x20, 0x53, 0x75, 0x70, 0x72, 0x61, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x45, 0x35, 0x20, 0x47, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24,
		0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x73, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x20, 0x32, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x58, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x43, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x43, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x34, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x24, 0x31, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x34, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x35, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x36,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x54, 0x32, 0x31,
		0x33, 0x37, 0x2d, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x30, 0x58, 0x54, 0x32, 0x31,
		0x37, 0x31, 0x2d, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x31, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x58, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x58, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20,
		0x50, 0x75, 0x72, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x58, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x32,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x34, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x5a, 0x33, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x32, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x5a, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x4d, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58,
		0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x53, 0x33, 0x30, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x58, 0x33, 0x30, 0x50, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x50, 0x33,
		0x30, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x35, 0x47, 0x20, 0x55, 0x57, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x45, 0x64, 0x67, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x24, 0x31, 0x29, 0x45, 0x64, 0x67, 0x65, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x58, 0x54, 0x32, 0x32, 0x30, 0x31, 0x2d, 0x32, 0x45, 0x64, 0x67, 0x65, 0x20,
		0x58, 0x33, 0x30, 0x45, 0x64, 0x67, 0x65, 0x20, 0x24, 0x31, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f,
		0x6e, 0x45, 0x64, 0x67, 0x65, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x45, 0x64, 0x67,
		0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x64, 0x67, 0x65, 0x20, 0x35, 0x47, 0x20,
		0x55, 0x57, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x45, 0x64, 0x67, 0x65, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x45, 0x64, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x20, 0x48, 0x79,
		0x70, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x4f, 0x6e, 0x65, 0x20, 0x46,
		0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x46, 0x75,
		0x73, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65,
		0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x41, 0x63, 0x74, 0x69, 0x6f,
		0x6e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x6d, 0x61,
		0x63, 0x72, 0x6f, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x6f,
		0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x20, 0x61,
		0x63, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x20, 0x41, 0x63, 0x65, 0x6d,
		0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55,
		0x57, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f,
		0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x61, 0x63, 0x65, 0x4f, 0x6e, 0x65,
		0x20, 0x35, 0x47, 0x20, 0x41, 0x63, 0x65, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20,
		0x6f, 0x6e, 0x65, 0x20, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x58, 0x54, 0x32, 0x31, 0x31, 0x35, 0x44,
		0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20,
		0x28, 0x24, 0x31, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75,
		0x73, 0x20, 0x35, 0x47, 0x20, 0x28, 0x24, 0x31, 0x29, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20,
		0x73, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20,
		0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20,
		0x73, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79,
		0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x28,
		0x58, 0x54, 0x32, 0x30, 0x39, 0x33, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x6d, 0x6f, 0x74,
		0x6f, 0x20, 0x67, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20,
		0x70, 0x72, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
		0x6f, 0x20, 0x67, 0x20, 0x70, 0x75, 0x72, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50,
		0x75, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x66, 0x61, 0x73, 0x74, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x20, 0x46, 0x61, 0x73, 0x74, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20,
		0x35, 0x47, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x35, 0x47,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x35, 0x47, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x32, 0x29, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x35, 0x47, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x34, 0x30, 0x20,
		0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x36, 0x30, 0x73, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x24, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24,
		0x31, 0x20, 0x28, 0x58, 0x54, 0x31, 0x39, 0x32, 0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x24, 0x31, 0x20, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x24, 0x31, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x6f, 0x20, 0x28, 0x58, 0x54, 0x31, 0x39, 0x35,
		0x32, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x20, 0x28, 0x58, 0x54, 0x31, 0x39, 0x35, 0x35,
		0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x53, 0x75, 0x70,
		0x72, 0x61, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x24, 0x31, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x24, 0x31, 0x4f, 0x6e, 0x65, 0x20,
		0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x24, 0x31, 0x24, 0x32, 0x24, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x24, 0x31, 0x24, 0x32, 0x4d,
		0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x69, 0x58, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x33, 0x36, 0x30, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x41, 0x43, 0x54, 0x56, 0x58, 0x54, 0x32, 0x30, 0x37, 0x31, 0x2d, 0x34,
		0x52, 0x41, 0x5a, 0x52, 0x20, 0x35, 0x47, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x28, 0x24, 0x31, 0x29,
		0x52, 0x41, 0x5a, 0x52, 0x20, 0x24, 0x31, 0x52, 0x49, 0x5a, 0x52, 0x20, 0x24, 0x31, 0x44, 0x52,
		0x4f, 0x49, 0x44, 0x20, 0x24, 0x31, 0x4d, 0x6f, 0x76, 0x69, 0x63, 0x46, 0x34, 0x35, 0x30, 0x32,
		0x4d, 0x6f, 0x76, 0x69, 0x74, 0x65, 0x6c, 0x4d, 0x6f, 0x78, 0x65, 0x65, 0x32, 0x31, 0x36, 0x30,
		0x4d, 0x54, 0x2d, 0x54, 0x38, 0x30, 0x30, 0x4d, 0x70, 0x6d, 0x61, 0x6e, 0x4d, 0x50, 0x31, 0x30,
		0x30, 0x69, 0x20, 0x4f, 0x43, 0x54, 0x41, 0x4d, 0x50, 0x51, 0x43, 0x47, 0x31, 0x30, 0x20, 0x33,
		0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x4f, 0x53, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6c, 0x61,
		0x73, 0x65, 0x72, 0x46, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x47, 0x20, 0x4d, 0x61, 0x78, 0x47,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x47, 0x45, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x53, 0x36,
		0x30, 0x46, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x53, 0x34, 0x35, 0x53, 0x5f, 0x41, 0x36, 0x5f,
		0x53, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x4d, 0x53, 0x34, 0x35, 0x53, 0x20, 0x41, 0x36, 0x20, 0x53,
		0x65, 0x6e, 0x69, 0x6f, 0x72, 0x4d, 0x53, 0x34, 0x35, 0x53, 0x5f, 0x41, 0x36, 0x5f, 0x54, 0x65,
		0x65, 0x6e, 0x4d, 0x53, 0x34, 0x35, 0x53, 0x20, 0x41, 0x36, 0x20, 0x54, 0x65, 0x65, 0x6e, 0x4d,
		0x37, 0x20, 0x33, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x53, 0x5f, 0x50, 0x4c, 0x55,
		0x53, 0x4d, 0x37, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x24, 0x31, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x4d, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x37, 0x53, 0x51, 0x43,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x4c, 0x24, 0x31, 0x2d, 0x4d, 0x37, 0x73, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x37, 0x73, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d,
		0x4c, 0x30, 0x31, 0x2d, 0x4d, 0x37, 0x20, 0x53, 0x44, 0x4d, 0x31, 0x30, 0x41, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4d, 0x39, 0x20, 0x33, 0x47, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20, 0x41, 0x31, 0x30,
		0x58, 0x38, 0x20, 0x34, 0x47, 0x4d, 0x24, 0x31, 0x20, 0x33, 0x47, 0x4b, 0x69, 0x64, 0x50, 0x61,
		0x64, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x77, 0x61, 0x6c, 0x69, 0x6d, 0x75, 0x50, 0x6c, 0x75,
		0x73, 0x4d, 0x79, 0x47, 0x69, 0x63, 0x61, 0x48, 0x44, 0x52, 0x20, 0x24, 0x31, 0x20, 0x42, 0x6f,
		0x78, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x74, 0x76, 0x20, 0x62, 0x6f, 0x78, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x20, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x41, 0x54, 0x56,
		0x24, 0x31, 0x4d, 0x79, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x6d, 0x79, 0x54, 0x61, 0x62, 0x5f, 0x31, 0x30, 0x49, 0x49, 0x49, 0x4d, 0x79, 0x54, 0x61,
		0x62, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x49, 0x6d, 0x79, 0x54, 0x61, 0x62, 0x31, 0x30, 0x49,
		0x49, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x6d, 0x79, 0x54, 0x24,
		0x31, 0x20, 0x44, 0x54, 0x56, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x5f, 0x37,
		0x5f, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x37, 0x22, 0x20,
		0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x5f, 0x38, 0x5f, 0x4c, 0x54,
		0x45, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x38, 0x22, 0x20, 0x4c, 0x54,
		0x45, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20,
		0x33, 0x47, 0x6d, 0x79, 0x41, 0x24, 0x31, 0x20, 0x44, 0x54, 0x56, 0x41, 0x38, 0x39, 0x38, 0x20,
		0x44, 0x55, 0x4f, 0x41, 0x38, 0x39, 0x38, 0x20, 0x44, 0x75, 0x6f, 0x43, 0x75, 0x62, 0x65, 0x20,
		0x4c, 0x54, 0x45, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x32, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x5f, 0x34, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x34, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x43, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x69, 0x78, 0x43,
		0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x69, 0x78, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74,
		0x20, 0x32, 0x46, 0x55, 0x4e, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x55, 0x4e,
		0x20, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x55, 0x4e, 0x20, 0x24, 0x31, 0x48, 0x61, 0x6d,
		0x6d, 0x65, 0x72, 0x20, 0x41, 0x58, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x61, 0x6d, 0x6d, 0x65,
		0x72, 0x20, 0x41, 0x78, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x6d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x41, 0x58, 0x45, 0x20, 0x33, 0x47, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x78,
		0x65, 0x20, 0x33, 0x47, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x78, 0x65, 0x20, 0x4d,
		0x20, 0x4c, 0x54, 0x45, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x59, 0x32, 0x37, 0x6d,
		0x79, 0x32, 0x37, 0x4d, 0x59, 0x38, 0x30, 0x37, 0x6d, 0x79, 0x58, 0x31, 0x6d, 0x79, 0x58, 0x49,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6d, 0x79, 0x58, 0x49, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x6d,
		0x79, 0x58, 0x49, 0x24, 0x31, 0x6d, 0x79, 0x24, 0x31, 0x6d, 0x79, 0x57, 0x58, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x51, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x42, 0x45, 0x51, 0x2d, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x31,
		0x38, 0x78, 0x39, 0x24, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x42, 0x72, 0x6f, 0x77, 0x6e, 0x20, 0x31, 0x42, 0x72, 0x6f, 0x77, 0x6e, 0x20, 0x32, 0x50,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x5f, 0x49, 0x49, 0x49, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x49, 0x49, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x55, 0x4e, 0x41, 0x5f, 0x49, 0x49,
		0x4c, 0x75, 0x6e, 0x61, 0x20, 0x49, 0x49, 0x4d, 0x79, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4d,
		0x79, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x38, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x79, 0x57, 0x69,
		0x67, 0x6f, 0x4d, 0x79, 0x57, 0x69, 0x67, 0x6f, 0x20, 0x43, 0x69, 0x74, 0x79, 0x33, 0x43, 0x69,
		0x74, 0x79, 0x20, 0x33, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x47, 0x49, 0x49, 0x49, 0x45,
		0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x47, 0x33, 0x4d, 0x79, 0x67, 0x50, 0x61, 0x64, 0x4d, 0x79,
		0x6d, 0x61, 0x67, 0x61, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x46,
		0x49, 0x56, 0x45, 0x46, 0x69, 0x76, 0x65, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x5f, 0x34, 0x47, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x34, 0x47, 0x4d, 0x79, 0x72,
		0x69, 0x61, 0x5f, 0x57, 0x69, 0x64, 0x65, 0x5f, 0x34, 0x47, 0x57, 0x69, 0x64, 0x65, 0x20, 0x34,
		0x47, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x57, 0x69, 0x64, 0x65, 0x5f, 0x32, 0x57, 0x69, 0x64,
		0x65, 0x20, 0x32, 0x4d, 0x79, 0x72, 0x6f, 0x73, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x4d,
		0x49, 0x44, 0x2d, 0x24, 0x31, 0x4e, 0x41, 0x53, 0x43, 0x4f, 0x54, 0x41, 0x4e, 0x47, 0x4f, 0x20,
		0x37, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x37, 0x53, 0x4e, 0x41, 0x50, 0x5f, 0x50, 0x52, 0x4f,
		0x53, 0x6e, 0x61, 0x70, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x45, 0x43, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x73, 0x20, 0x41, 0x6d, 0x61, 0x64, 0x61, 0x6e, 0x61, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x20,
		0x55, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x24, 0x31, 0x4c,
		0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x54, 0x31, 0x30, 0x20, 0x46, 0x48, 0x44,
		0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x54, 0x31, 0x32, 0x20, 0x51, 0x48, 0x44, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x54, 0x31, 0x31, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x54, 0x37, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x54, 0x38, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x45, 0x20, 0x54, 0x45, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x53, 0x20, 0x54, 0x53, 0x24, 0x31, 0x4e, 0x45, 0x4b, 0x4f, 0x4c, 0x54, 0x2d, 0x24, 0x31,
		0x4e, 0x45, 0x58, 0x42, 0x4f, 0x58, 0x4d, 0x58, 0x51, 0x2d, 0x50, 0x72, 0x6f, 0x2d, 0x4e, 0x45,
		0x58, 0x42, 0x4f, 0x58, 0x4d, 0x58, 0x51, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x58, 0x51, 0x2d, 0x4e,
		0x45, 0x58, 0x42, 0x4f, 0x58, 0x4d, 0x58, 0x51, 0x4e, 0x45, 0x58, 0x4f, 0x4e, 0x4e, 0x45, 0x58,
		0x54, 0x4e, 0x47, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x63, 0x73, 0x4e, 0x47, 0x4d, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x35, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x32, 0x47, 0x42, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x6f, 0x75, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
		0x20, 0x50, 0x24, 0x31, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x4a, 0x75, 0x6d, 0x70,
		0x4c, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x20, 0x4c, 0x4e,
		0x47, 0x70, 0x6f, 0x6e, 0x4e, 0x49, 0x4e, 0x45, 0x54, 0x45, 0x43, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e,
		0x75, 0x6d, 0x20, 0x31, 0x30, 0x20, 0x47, 0x33, 0x4e, 0x4f, 0x41, 0x43, 0x6f, 0x72, 0x65, 0x20,
		0x46, 0x6f, 0x72, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x4c, 0x45, 0x48, 0x75, 0x6d,
		0x6d, 0x65, 0x72, 0x20, 0x4c, 0x45, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x32, 0x30, 0x31,
		0x39, 0x5f, 0x52, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x52, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x39, 0x29, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x75, 0x6d,
		0x6d, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x20, 0x53, 0x45, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x45,
		0x4e, 0x65, 0x78, 0x74, 0x20, 0x53, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x48, 0x33,
		0x53, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x48, 0x33, 0x4c, 0x6f, 0x6f, 0x70, 0x48,
		0x34, 0x53, 0x45, 0x4d, 0x47, 0x31, 0x32, 0x48, 0x34, 0x34, 0x53, 0x45, 0x48, 0x31, 0x30, 0x4c,
		0x45, 0x53, 0x50, 0x52, 0x49, 0x4e, 0x54, 0x34, 0x47, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x53, 0x45,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x53, 0x45, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x34, 0x47, 0x4e,
		0x4f, 0x42, 0x55, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x4e,
		0x58, 0x35, 0x4e, 0x4f, 0x47, 0x41, 0x4e, 0x4f, 0x47, 0x41, 0x50, 0x41, 0x44, 0x20, 0x37, 0x47,
		0x4e, 0x4f, 0x47, 0x41, 0x50, 0x41, 0x44, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x47, 0x48,
		0x44, 0x50, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x43, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x4e, 0x4f,
		0x56, 0x4f, 0x4e, 0x54, 0x54, 0x20, 0x57, 0x65, 0x73, 0x74, 0x48, 0x69, 0x6b, 0x61, 0x72, 0x69,
		0x42, 0x6f, 0x78, 0x2b, 0x20, 0x24, 0x31, 0x4e, 0x55, 0x55, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x4e, 0x35, 0x37, 0x30, 0x34, 0x4c, 0x53, 0x36, 0x30, 0x30, 0x31, 0x4c, 0x53, 0x35, 0x35,
		0x30, 0x31, 0x4c, 0x4d, 0x31, 0x39, 0x4e, 0x35, 0x37, 0x30, 0x32, 0x4c, 0x4e, 0x35, 0x35, 0x30,
		0x31, 0x4c, 0x41, 0x35, 0x4c, 0x4e, 0x35, 0x30, 0x30, 0x32, 0x4c, 0x41, 0x37, 0x4c, 0x53, 0x36,
		0x33, 0x30, 0x33, 0x4c, 0x41, 0x39, 0x4c, 0x4e, 0x35, 0x35, 0x30, 0x32, 0x4c, 0x41, 0x31, 0x30,
		0x4c, 0x53, 0x35, 0x37, 0x30, 0x31, 0x4c, 0x4d, 0x34, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x59,
		0x58, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x59, 0x58, 0x5f, 0x41, 0x31, 0x41, 0x6c,
		0x74, 0x65, 0x72, 0x4e, 0x59, 0x58, 0x5f, 0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x4e, 0x59, 0x58, 0x5f,
		0x45, 0x47, 0x4f, 0x45, 0x67, 0x6f, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x45, 0x4e, 0x49, 0x58, 0x46,
		0x65, 0x6e, 0x69, 0x78, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c, 0x59, 0x5f, 0x49, 0x49, 0x46, 0x6c,
		0x79, 0x20, 0x49, 0x49, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c, 0x59, 0x5f, 0x4d, 0x49, 0x4e, 0x49,
		0x46, 0x6c, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c, 0x59, 0x4e,
		0x59, 0x58, 0x5f, 0x48, 0x49, 0x54, 0x48, 0x69, 0x74, 0x4e, 0x59, 0x58, 0x5f, 0x4a, 0x41, 0x4b,
		0x4a, 0x61, 0x6b, 0x4e, 0x59, 0x58, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x4a, 0x6f, 0x69, 0x6e, 0x4e,
		0x59, 0x58, 0x5f, 0x4e, 0x4f, 0x42, 0x41, 0x5f, 0x49, 0x49, 0x4e, 0x6f, 0x62, 0x61, 0x20, 0x49,
		0x49, 0x4e, 0x59, 0x58, 0x5f, 0x4e, 0x4f, 0x42, 0x41, 0x4e, 0x6f, 0x62, 0x61, 0x4e, 0x59, 0x58,
		0x5f, 0x4f, 0x52, 0x42, 0x49, 0x53, 0x4f, 0x72, 0x62, 0x69, 0x73, 0x52, 0x65, 0x78, 0x4e, 0x59,
		0x58, 0x5f, 0x53, 0x48, 0x41, 0x44, 0x45, 0x53, 0x68, 0x61, 0x64, 0x65, 0x4e, 0x59, 0x58, 0x5f,
		0x53, 0x4b, 0x59, 0x53, 0x6b, 0x79, 0x4e, 0x59, 0x58, 0x5f, 0x53, 0x50, 0x41, 0x52, 0x4b, 0x4e,
		0x59, 0x58, 0x5f, 0x56, 0x4f, 0x58, 0x4e, 0x59, 0x58, 0x5f, 0x5a, 0x45, 0x55, 0x5a, 0x5f, 0x48,
		0x44, 0x5a, 0x65, 0x75, 0x73, 0x20, 0x48, 0x44, 0x47, 0x4c, 0x41, 0x4d, 0x41, 0x52, 0x47, 0x4f,
		0x4e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x4e, 0x61, 0x62, 0x69, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x48, 0x44, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x42, 0x69, 0x67, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x48, 0x44, 0x20, 0x24, 0x31, 0x2e, 0x30, 0x22, 0x4e, 0x42, 0x54, 0x59, 0x30,
		0x37, 0x53, 0x4d, 0x4b, 0x47, 0x42, 0x61, 0x72, 0x62, 0x69, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x37, 0x2e, 0x30, 0x22, 0x4e, 0x42, 0x46, 0x50, 0x30, 0x37, 0x50, 0x4d, 0x4b, 0x47, 0x46, 0x69,
		0x73, 0x68, 0x65, 0x72, 0x20, 0x50, 0x72, 0x69, 0x63, 0x65, 0x20, 0x4c, 0x65, 0x61, 0x72, 0x6e,
		0x69, 0x6e, 0x67, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x4e, 0x42, 0x30,
		0x32, 0x2d, 0x4e, 0x56, 0x37, 0x41, 0x32, 0x53, 0x20, 0x54, 0x61, 0x62, 0x4e, 0x41, 0x42, 0x49,
		0x32, 0x2d, 0x4e, 0x56, 0x37, 0x41, 0x32, 0x20, 0x54, 0x61, 0x62, 0x4e, 0x61, 0x6e, 0x68, 0x6f,
		0x4e, 0x61, 0x6f, 0x6d, 0x69, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x6d, 0x62, 0x61, 0x72,
		0x44, 0x61, 0x6d, 0x6d, 0x61, 0x72, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x61,
		0x76, 0x52, 0x6f, 0x61, 0x64, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79,
		0x4e, 0x65, 0x78, 0x6f, 0x20, 0x68, 0x61, 0x6e, 0x64, 0x79, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x48,
		0x61, 0x6e, 0x64, 0x79, 0x4e, 0x45, 0x58, 0x4f, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x44,
		0x55, 0x4f, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x44, 0x75, 0x6f,
		0x4e, 0x45, 0x58, 0x4f, 0x20, 0x45, 0x56, 0x4f, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x45, 0x76, 0x6f,
		0x4d, 0x4f, 0x56, 0x49, 0x4f, 0x20, 0x32, 0x4d, 0x6f, 0x76, 0x69, 0x6f, 0x20, 0x32, 0x4e, 0x61,
		0x76, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x50, 0x2d, 0x37, 0x35, 0x32, 0x47, 0x6f, 0x4e, 0x50, 0x2d,
		0x37, 0x35, 0x32, 0x20, 0x47, 0x6f, 0x4e, 0x61, 0x76, 0x69, 0x74, 0x65, 0x63, 0x68, 0x4e, 0x61,
		0x76, 0x69, 0x74, 0x65, 0x6c, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x24, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x52, 0x45, 0x39, 0x30, 0x30, 0x20, 0x46, 0x75, 0x6c, 0x6c, 0x20, 0x48, 0x44, 0x4e,
		0x61, 0x76, 0x6f, 0x6e, 0x4d, 0x69, 0x7a, 0x75, 0x20, 0x4d, 0x35, 0x30, 0x35, 0x20, 0x4c, 0x54,
		0x45, 0x4d, 0x69, 0x7a, 0x75, 0x20, 0x24, 0x31, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20,
		0x4d, 0x61, 0x78, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x46, 0x69, 0x6e, 0x65, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x46, 0x69, 0x6e, 0x65,
		0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x46, 0x69,
		0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x46,
		0x69, 0x6e, 0x65, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x43, 0x68, 0x69, 0x65, 0x66,
		0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x75, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x75, 0x72, 0x65, 0x53, 0x75, 0x70,
		0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x75, 0x72, 0x65, 0x20, 0x4d, 0x69, 0x63,
		0x72, 0x6f, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x34, 0x30,
		0x30, 0x20, 0x33, 0x47, 0x20, 0x32, 0x30, 0x31, 0x37, 0x54, 0x34, 0x30, 0x30, 0x20, 0x33, 0x47,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x24, 0x31, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e,
		0x75, 0x6d, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x39, 0x29, 0x4f, 0x72, 0x70, 0x68, 0x65, 0x75, 0x73, 0x20, 0x33, 0x47, 0x50, 0x72, 0x65, 0x64,
		0x61, 0x74, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x52, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x20, 0x33, 0x47,
		0x20, 0x38, 0x47, 0x42, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x4e, 0x65, 0x63, 0x6e, 0x6f, 0x74, 0x4e, 0x65, 0x64, 0x61, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x4e, 0x65, 0x66, 0x66, 0x6f, 0x73, 0x43, 0x35, 0x4c, 0x59, 0x35, 0x30, 0x4e, 0x65, 0x66, 0x66,
		0x6f, 0x73, 0x20, 0x58, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x6f, 0x6c, 0x69, 0x78,
		0x54, 0x37, 0x4e, 0x65, 0x6f, 0x6d, 0x69, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x49, 0x51, 0x54, 0x61,
		0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x24, 0x31, 0x47, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x22, 0x20, 0x24, 0x31, 0x47, 0x4e, 0x51, 0x54, 0x2d, 0x37, 0x57, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4e, 0x65, 0x74, 0x67, 0x65, 0x61, 0x72, 0x47, 0x54, 0x56,
		0x31, 0x30, 0x30, 0x4e, 0x65, 0x6f, 0x54, 0x56, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4e, 0x65,
		0x74, 0x6d, 0x61, 0x6b, 0x4e, 0x65, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x4e, 0x65, 0x75, 0x49,
		0x6d, 0x61, 0x67, 0x65, 0x4e, 0x49, 0x4d, 0x2d, 0x4e, 0x65, 0x75, 0x54, 0x61, 0x62, 0x4e, 0x65,
		0x77, 0x20, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x65, 0x77, 0x20, 0x42, 0x72, 0x69,
		0x64, 0x67, 0x65, 0x4e, 0x65, 0x77, 0x67, 0x65, 0x6e, 0x4e, 0x65, 0x77, 0x6c, 0x61, 0x6e, 0x64,
		0x4e, 0x4c, 0x53, 0x2d, 0x4d, 0x54, 0x39, 0x30, 0x4d, 0x54, 0x39, 0x30, 0x20, 0x4f, 0x72, 0x63,
		0x61, 0x4e, 0x4c, 0x53, 0x2d, 0x4d, 0x54, 0x36, 0x35, 0x4d, 0x54, 0x36, 0x35, 0x20, 0x42, 0x65,
		0x6c, 0x75, 0x67, 0x61, 0x20, 0x49, 0x56, 0x4e, 0x4c, 0x53, 0x2d, 0x4e, 0x46, 0x54, 0x31, 0x30,
		0x4e, 0x46, 0x54, 0x31, 0x30, 0x20, 0x50, 0x69, 0x6c, 0x6f, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x4e,
		0x65, 0x77, 0x6d, 0x61, 0x6e, 0x4e, 0x65, 0x77, 0x73, 0x4d, 0x79, 0x4e, 0x65, 0x77, 0x73, 0x64,
		0x61, 0x79, 0x4e, 0x65, 0x78, 0x61, 0x4e, 0x65, 0x78, 0x69, 0x61, 0x6e, 0x4e, 0x65, 0x78, 0x74,
		0x42, 0x6f, 0x6f, 0x6b, 0x4e, 0x58, 0x30, 0x30, 0x38, 0x48, 0x44, 0x38, 0x47, 0x50, 0x72, 0x65,
		0x6d, 0x69, 0x75, 0x6d, 0x20, 0x38, 0x20, 0x48, 0x44, 0x4e, 0x58, 0x41, 0x38, 0x51, 0x43, 0x31,
		0x31, 0x36, 0x41, 0x72, 0x65, 0x73, 0x20, 0x38, 0x4e, 0x58, 0x41, 0x38, 0x4c, 0x54, 0x45, 0x31,
		0x31, 0x36, 0x41, 0x72, 0x65, 0x73, 0x20, 0x38, 0x4c, 0x4e, 0x58, 0x31, 0x36, 0x41, 0x38, 0x31,
		0x31, 0x36, 0x4b, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x38, 0x4e, 0x58, 0x31, 0x36, 0x41, 0x31,
		0x30, 0x31, 0x33, 0x32, 0x53, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x31, 0x30, 0x4e, 0x58, 0x31,
		0x36, 0x41, 0x31, 0x31, 0x32, 0x36, 0x34, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x31, 0x31, 0x4e,
		0x45, 0x58, 0x54, 0x31, 0x30, 0x31, 0x35, 0x42, 0x41, 0x50, 0x41, 0x72, 0x65, 0x73, 0x20, 0x31,
		0x30, 0x4e, 0x58, 0x41, 0x31, 0x30, 0x31, 0x4c, 0x54, 0x45, 0x31, 0x31, 0x36, 0x41, 0x72, 0x65,
		0x73, 0x20, 0x31, 0x30, 0x4c, 0x4e, 0x58, 0x41, 0x31, 0x31, 0x36, 0x51, 0x43, 0x31, 0x36, 0x34,
		0x41, 0x72, 0x65, 0x73, 0x20, 0x31, 0x31, 0x4e, 0x58, 0x4d, 0x39, 0x30, 0x38, 0x48, 0x43, 0x50,
		0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x39, 0x4e, 0x58, 0x30, 0x31, 0x30, 0x48, 0x49, 0x38,
		0x47, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x20, 0x48, 0x69, 0x4e, 0x58,
		0x37, 0x38, 0x35, 0x51, 0x43, 0x38, 0x47, 0x4e, 0x58, 0x4d, 0x39, 0x30, 0x30, 0x4d, 0x43, 0x38,
		0x20, 0x48, 0x44, 0x4e, 0x58, 0x4d, 0x37, 0x32, 0x36, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d,
		0x20, 0x37, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x61, 0x62, 0x4e, 0x65, 0x78, 0x74, 0x62, 0x69, 0x74,
		0x4e, 0x6f, 0x61, 0x69, 0x6e, 0x4e, 0x4f, 0x41, 0x49, 0x4e, 0x4e, 0x6f, 0x62, 0x62, 0x79, 0x4e,
		0x6f, 0x62, 0x6c, 0x65, 0x78, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x36, 0x54, 0x41, 0x2d, 0x31, 0x30,
		0x34, 0x31, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x38, 0x20, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x63,
		0x6f, 0x38, 0x20, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x63, 0x6f, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20,
		0x37, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x37, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x36, 0x2e, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x35, 0x2e, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x2e, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x20, 0x56, 0x20, 0x54, 0x65, 0x6c, 0x6c, 0x61, 0x4e,
		0x6f, 0x6b, 0x69, 0x61, 0x20, 0x38, 0x20, 0x56, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x38, 0x56,
		0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x58, 0x2b, 0x4e, 0x31, 0x35, 0x32, 0x44, 0x4c, 0x43, 0x31,
		0x30, 0x30, 0x4e, 0x31, 0x35, 0x31, 0x44, 0x4c, 0x43, 0x32, 0x30, 0x30, 0x4e, 0x31, 0x35, 0x30,
		0x44, 0x4c, 0x47, 0x31, 0x30, 0x30, 0x4e, 0x31, 0x33, 0x37, 0x34, 0x44, 0x4c, 0x47, 0x33, 0x30,
		0x30, 0x20, 0x35, 0x47, 0x4e, 0x31, 0x35, 0x33, 0x30, 0x44, 0x4c, 0x47, 0x34, 0x30, 0x30, 0x20,
		0x35, 0x47, 0x58, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x52, 0x58, 0x2d, 0x35, 0x31, 0x20, 0x4e,
		0x39, 0x30, 0x30, 0x4e, 0x39, 0x30, 0x30, 0x41, 0x73, 0x68, 0x61, 0x20, 0x35, 0x30, 0x30, 0x35,
		0x31, 0x33, 0x30, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4e,
		0x6f, 0x6b, 0x69, 0x61, 0x35, 0x32, 0x33, 0x30, 0x4e, 0x75, 0x72, 0x6f, 0x6e, 0x4e, 0x6f, 0x6b,
		0x69, 0x61, 0x35, 0x32, 0x33, 0x33, 0x35, 0x32, 0x33, 0x33, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x35,
		0x38, 0x30, 0x30, 0x64, 0x2d, 0x31, 0x35, 0x38, 0x30, 0x30, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73,
		0x73, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x36, 0x32, 0x31, 0x30, 0x4e,
		0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f,
		0x72, 0x53, 0x61, 0x70, 0x70, 0x68, 0x69, 0x72, 0x65, 0x20, 0x41, 0x72, 0x74, 0x65, 0x4e, 0x4f,
		0x4b, 0x49, 0x41, 0x2d, 0x52, 0x48, 0x2d, 0x31, 0x37, 0x32, 0x32, 0x38, 0x30, 0x4e, 0x4f, 0x4b,
		0x49, 0x41, 0x2d, 0x52, 0x48, 0x2d, 0x32, 0x37, 0x36, 0x32, 0x32, 0x35, 0x4e, 0x4f, 0x4b, 0x49,
		0x41, 0x2d, 0x52, 0x48, 0x2d, 0x33, 0x34, 0x36, 0x35, 0x38, 0x35, 0x4e, 0x4f, 0x4b, 0x49, 0x41,
		0x2d, 0x52, 0x48, 0x2d, 0x34, 0x38, 0x33, 0x31, 0x30, 0x35, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d,
		0x52, 0x4d, 0x2d, 0x31, 0x31, 0x33, 0x32, 0x30, 0x35, 0x38, 0x30, 0x38, 0x20, 0x50, 0x75, 0x72,
		0x65, 0x56, 0x69, 0x65, 0x77, 0x24, 0x31, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x24,
		0x31, 0x20, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x41, 0x73, 0x68, 0x61, 0x20, 0x24, 0x31, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x35, 0x32, 0x30, 0x54, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x32,
		0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x32, 0x36, 0x52, 0x4d, 0x2d, 0x38, 0x34, 0x36,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36,
		0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x35, 0x52, 0x4d, 0x2d, 0x31, 0x30,
		0x32, 0x37, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x36, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x37, 0x31, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x32, 0x30, 0x54, 0x52, 0x4d,
		0x2d, 0x38, 0x38, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x32, 0x30, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x37, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x33, 0x35, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x30, 0x30, 0x43, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38,
		0x30, 0x30, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x38, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x38, 0x32, 0x30, 0x52, 0x4d, 0x2d, 0x39, 0x38, 0x34, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x38, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x30, 0x30, 0x4c, 0x75, 0x6d, 0x69,
		0x61, 0x20, 0x39, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x32, 0x35, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x39, 0x32, 0x39, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x49, 0x63, 0x6f,
		0x6e, 0x52, 0x4d, 0x2d, 0x31, 0x30, 0x34, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x33,
		0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x31, 0x30, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x31, 0x35, 0x32, 0x30, 0x2e, 0x31, 0x54, 0x24, 0x31, 0x4d, 0x61, 0x65, 0x6d, 0x6f, 0x20,
		0x52, 0x58, 0x2d, 0x33, 0x34, 0x4e, 0x38, 0x30, 0x30, 0x4e, 0x6f, 0x6d, 0x69, 0x45, 0x76, 0x6f,
		0x20, 0x4d, 0x32, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x33, 0x45, 0x76,
		0x6f, 0x20, 0x4d, 0x31, 0x69, 0x35, 0x30, 0x36, 0x20, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x69, 0x35,
		0x37, 0x33, 0x30, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x74, 0x65,
		0x2d, 0x58, 0x49, 0x72, 0x6f, 0x6e, 0x2d, 0x58, 0x49, 0x72, 0x6f, 0x6e, 0x2d, 0x58, 0x31, 0x49,
		0x72, 0x6f, 0x6e, 0x2d, 0x4d, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x34, 0x45, 0x76, 0x6f, 0x20, 0x58,
		0x32, 0x45, 0x76, 0x6f, 0x20, 0x58, 0x45, 0x76, 0x6f, 0x20, 0x58, 0x31, 0x45, 0x76, 0x6f, 0x20,
		0x5a, 0x42, 0x65, 0x61, 0x74, 0x20, 0x4d, 0x42, 0x65, 0x61, 0x74, 0x20, 0x4d, 0x31, 0x53, 0x70,
		0x61, 0x63, 0x65, 0x20, 0x58, 0x32, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x53, 0x70, 0x61,
		0x63, 0x65, 0x20, 0x58, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x31, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x58, 0x31, 0x4a, 0x75, 0x6d, 0x70, 0x43, 0x31, 0x30, 0x31, 0x30,
		0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x32, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x32,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x33, 0x47,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x20, 0x33, 0x47, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x34, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x4c, 0x54, 0x45, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x50,
		0x72, 0x6f, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x32, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x33,
		0x20, 0x4c, 0x54, 0x45, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x33, 0x20, 0x33, 0x47, 0x43, 0x6f,
		0x72, 0x73, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x33, 0x47, 0x43, 0x6f,
		0x72, 0x73, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x34,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x33, 0x20,
		0x33, 0x47, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x32, 0x20, 0x33, 0x47, 0x4c, 0x69, 0x62, 0x72,
		0x61, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x34, 0x20, 0x33,
		0x47, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x6d, 0x75,
		0x54, 0x31, 0x38, 0x53, 0x33, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x33, 0x30, 0x4e, 0x6f,
		0x6f, 0x6e, 0x74, 0x65, 0x63, 0x4e, 0x6f, 0x6f, 0x6e, 0x74, 0x65, 0x63, 0x20, 0x4e, 0x6f, 0x72,
		0x74, 0x68, 0x54, 0x65, 0x63, 0x68, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x20, 0x31,
		0x30, 0x2e, 0x30, 0x22, 0x4e, 0x6f, 0x73, 0x4e, 0x6f, 0x76, 0x75, 0x20, 0x49, 0x49, 0x49, 0x4e,
		0x6f, 0x76, 0x75, 0x20, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x75, 0x4e, 0x65, 0x76, 0x61, 0x20, 0x38,
		0x30, 0x52, 0x6f, 0x79, 0x61, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x4e, 0x6f, 0x75, 0x73, 0x4e, 0x53, 0x35, 0x35, 0x31, 0x31, 0x4e, 0x6f, 0x76, 0x65,
		0x78, 0x4e, 0x6f, 0x76, 0x65, 0x79, 0x4e, 0x75, 0x41, 0x6e, 0x73, 0x4e, 0x45, 0x4f, 0x20, 0x52,
		0x65, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x4e, 0x75, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4e,
		0x75, 0x62, 0x69, 0x61, 0x4e, 0x58, 0x37, 0x31, 0x31, 0x4a, 0x5a, 0x35, 0x30, 0x4e, 0x58, 0x37,
		0x31, 0x32, 0x4a, 0x5a, 0x35, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x58, 0x36, 0x36,
		0x37, 0x4a, 0x5a, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x30, 0x31, 0x4a, 0x5a,
		0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x30, 0x32, 0x4a, 0x5a, 0x34, 0x30, 0x73,
		0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x30, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61,
		0x67, 0x69, 0x63, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x32, 0x39, 0x4a, 0x52,
		0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58,
		0x37, 0x30, 0x39, 0x53, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x37, 0x53,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x37, 0x4e,
		0x58, 0x36, 0x36, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x36,
		0x4e, 0x58, 0x36, 0x36, 0x36, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20,
		0x36, 0x52, 0x4e, 0x58, 0x36, 0x31, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69,
		0x63, 0x20, 0x4d, 0x61, 0x72, 0x73, 0x4e, 0x58, 0x36, 0x32, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x33, 0x5a, 0x35, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x5a, 0x35,
		0x53, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35, 0x30, 0x33, 0x41, 0x5a, 0x35, 0x53, 0x4e,
		0x58, 0x35, 0x30, 0x36, 0x4a, 0x5a, 0x37, 0x4e, 0x58, 0x35, 0x30, 0x37, 0x4a, 0x5a, 0x37, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35, 0x30, 0x35, 0x4a, 0x5a, 0x37, 0x20, 0x4d, 0x61, 0x78,
		0x4e, 0x58, 0x35, 0x30, 0x38, 0x4a, 0x5a, 0x39, 0x5a, 0x39, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x5a,
		0x39, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x58, 0x35, 0x31, 0x32, 0x4a, 0x5a, 0x39, 0x20, 0x4d, 0x61,
		0x78, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4e, 0x58, 0x35, 0x33, 0x31, 0x4a, 0x5a, 0x31, 0x31, 0x4e,
		0x58, 0x35, 0x32, 0x33, 0x4a, 0x5f, 0x56, 0x31, 0x5a, 0x31, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x5a,
		0x31, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x5a, 0x31, 0x31, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x4e, 0x58, 0x36, 0x30, 0x36, 0x4a, 0x5a, 0x31, 0x38, 0x4e, 0x58, 0x36, 0x31, 0x36, 0x4a,
		0x5a, 0x31, 0x38, 0x53, 0x4e, 0x58, 0x36, 0x31, 0x31, 0x4a, 0x5a, 0x31, 0x38, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x4e, 0x58, 0x35, 0x35, 0x31, 0x4a, 0x4e, 0x58, 0x35, 0x36, 0x33, 0x4a, 0x5a, 0x31,
		0x37, 0x5a, 0x31, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35, 0x38, 0x39, 0x4a, 0x5a,
		0x31, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x4e, 0x58, 0x35, 0x39, 0x31, 0x4a, 0x5a,
		0x31, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x58, 0x35, 0x39, 0x35, 0x4a, 0x5a, 0x31, 0x37,
		0x53, 0x4e, 0x58, 0x36, 0x31, 0x32, 0x4a, 0x56, 0x31, 0x38, 0x4e, 0x58, 0x36, 0x32, 0x37, 0x4a,
		0x5a, 0x32, 0x30, 0x4e, 0x58, 0x35, 0x31, 0x33, 0x4a, 0x4d, 0x79, 0x20, 0x50, 0x72, 0x61, 0x67,
		0x75, 0x65, 0x4e, 0x58, 0x36, 0x30, 0x31, 0x4a, 0x4e, 0x58, 0x36, 0x30, 0x39, 0x4a, 0x52, 0x65,
		0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4e, 0x58, 0x36, 0x35, 0x39, 0x4a, 0x52, 0x65, 0x64,
		0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x47, 0x4e, 0x58, 0x36, 0x35, 0x31, 0x4a, 0x4e,
		0x58, 0x35, 0x37, 0x33, 0x4a, 0x4d, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x58, 0x39, 0x30,
		0x37, 0x4a, 0x4d, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4e, 0x58, 0x35, 0x34, 0x31, 0x4a, 0x4e,
		0x31, 0x4e, 0x58, 0x35, 0x39, 0x37, 0x4a, 0x4e, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x58,
		0x35, 0x37, 0x35, 0x4a, 0x4e, 0x32, 0x4e, 0x33, 0x4e, 0x75, 0x62, 0x69, 0x61, 0x20, 0x38, 0x30,
		0x31, 0x31, 0x4e, 0x38, 0x30, 0x4e, 0x75, 0x76, 0x6f, 0x4e, 0x44, 0x34, 0x35, 0x4e, 0x76, 0x69,
		0x64, 0x69, 0x61, 0x54, 0x65, 0x67, 0x72, 0x61, 0x4e, 0x6f, 0x74, 0x65, 0x2d, 0x50, 0x31, 0x36,
		0x34, 0x30, 0x54, 0x65, 0x67, 0x72, 0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x31, 0x36,
		0x34, 0x30, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53,
		0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56,
		0x4e, 0x56, 0x49, 0x44, 0x49, 0x41, 0x5f, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x50, 0x52,
		0x4f, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x54, 0x56, 0x20,
		0x50, 0x72, 0x6f, 0x4e, 0x56, 0x49, 0x44, 0x49, 0x41, 0x20, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64,
		0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x54, 0x56, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x53,
		0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x2b,
		0x41, 0x69, 0x72, 0x33, 0x36, 0x30, 0x20, 0x48, 0x44, 0x20, 0x32, 0x2e, 0x30, 0x33, 0x36, 0x30,
		0x20, 0x48, 0x44, 0x33, 0x36, 0x30, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x32, 0x2e, 0x30, 0x33, 0x36, 0x30, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x33, 0x36, 0x30, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x74, 0x72, 0x65,
		0x61, 0x6d, 0x20, 0x48, 0x44, 0x54, 0x56, 0x46, 0x61, 0x62, 0x20, 0x47, 0x6f, 0x4f, 0x32, 0x4f,
		0x41, 0x53, 0x59, 0x53, 0x4f, 0x49, 0x4e, 0x4f, 0x4d, 0x4f, 0x4b, 0x53, 0x49, 0x4f, 0x4b, 0x57,
		0x55, 0x53, 0x49, 0x47, 0x4d, 0x41, 0x50, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x4c, 0x54,
		0x4f, 0x4f, 0x4d, 0x49, 0x58, 0x58, 0x36, 0x30, 0x30, 0x20, 0x4e, 0x46, 0x43, 0x4f, 0x4e, 0x4e,
		0x4f, 0x4e, 0x59, 0x58, 0x20, 0x42, 0x4f, 0x4f, 0x58, 0x4e, 0x6f, 0x76, 0x61, 0x41, 0x69, 0x72,
		0x43, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x4d, 0x43, 0x5f, 0x4e, 0x6f,
		0x76, 0x61, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x69, 0x72, 0x32, 0x50, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x41, 0x69, 0x72, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x74,
		0x65, 0x41, 0x69, 0x72, 0x32, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x41, 0x69, 0x72, 0x20, 0x32, 0x4e,
		0x6f, 0x76, 0x61, 0x33, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33, 0x20,
		0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x6f, 0x6b, 0x65, 0x32, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50,
		0x6f, 0x6b, 0x65, 0x20, 0x32, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4b, 0x6f, 0x6e, 0x20, 0x54,
		0x69, 0x6b, 0x69, 0x20, 0x24, 0x31, 0x4c, 0x6f, 0x6d, 0x6f, 0x6e, 0x6f, 0x73, 0x6f, 0x76, 0x46,
		0x61, 0x75, 0x73, 0x74, 0x20, 0x24, 0x31, 0x44, 0x61, 0x72, 0x77, 0x69, 0x6e, 0x20, 0x24, 0x31,
		0x4d, 0x43, 0x5f, 0x47, 0x41, 0x4d, 0x41, 0x34, 0x47, 0x61, 0x6d, 0x61, 0x20, 0x34, 0x4d, 0x43,
		0x5f, 0x43, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x34, 0x4d, 0x6f, 0x6e, 0x74, 0x65, 0x20, 0x43, 0x72,
		0x69, 0x73, 0x74, 0x6f, 0x20, 0x34, 0x4c, 0x49, 0x56, 0x49, 0x4e, 0x47, 0x53, 0x54, 0x4f, 0x4e,
		0x45, 0x32, 0x4c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x20, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x20, 0x32,
		0x4f, 0x50, 0x50, 0x4f, 0x41, 0x31, 0x31, 0x41, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x31, 0x31,
		0x78, 0x41, 0x31, 0x32, 0x41, 0x31, 0x35, 0x73, 0x41, 0x31, 0x36, 0x73, 0x43, 0x50, 0x48, 0x32,
		0x34, 0x32, 0x31, 0x41, 0x31, 0x36, 0x65, 0x43, 0x50, 0x48, 0x32, 0x33, 0x34, 0x39, 0x41, 0x31,
		0x36, 0x6b, 0x43, 0x50, 0x48, 0x32, 0x34, 0x37, 0x37, 0x41, 0x31, 0x37, 0x43, 0x50, 0x48, 0x32,
		0x34, 0x37, 0x31, 0x41, 0x31, 0x37, 0x6b, 0x41, 0x31, 0x35, 0x41, 0x31, 0x6b, 0x41, 0x31, 0x31,
		0x6b, 0x41, 0x31, 0x73, 0x41, 0x31, 0x36, 0x41, 0x33, 0x37, 0x66, 0x24, 0x31, 0x41, 0x33, 0x37,
		0x66, 0x41, 0x33, 0x39, 0x41, 0x33, 0x36, 0x41, 0x33, 0x31, 0x41, 0x33, 0x33, 0x41, 0x35, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x35, 0x33, 0x20, 0x35, 0x47, 0x41, 0x33, 0x32, 0x41,
		0x33, 0x35, 0x41, 0x35, 0x32, 0x41, 0x35, 0x33, 0x41, 0x35, 0x33, 0x73, 0x41, 0x35, 0x33, 0x73,
		0x20, 0x35, 0x47, 0x41, 0x35, 0x34, 0x20, 0x35, 0x47, 0x41, 0x35, 0x34, 0x41, 0x35, 0x34, 0x73,
		0x41, 0x35, 0x35, 0x20, 0x35, 0x47, 0x41, 0x35, 0x35, 0x41, 0x35, 0x35, 0x73, 0x20, 0x35, 0x47,
		0x50, 0x46, 0x56, 0x4d, 0x31, 0x30, 0x41, 0x35, 0x36, 0x20, 0x35, 0x47, 0x41, 0x35, 0x37, 0x41,
		0x35, 0x37, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x50, 0x48, 0x4a, 0x31, 0x31, 0x30, 0x41,
		0x35, 0x38, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x35, 0x37, 0x37, 0x41, 0x35, 0x38, 0x50,
		0x46, 0x54, 0x4d, 0x31, 0x30, 0x41, 0x39, 0x37, 0x50, 0x48, 0x41, 0x31, 0x32, 0x30, 0x41, 0x39,
		0x36, 0x41, 0x35, 0x53, 0x41, 0x37, 0x31, 0x41, 0x37, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38,
		0x29, 0x41, 0x37, 0x33, 0x20, 0x35, 0x47, 0x41, 0x37, 0x34, 0x41, 0x37, 0x34, 0x20, 0x35, 0x47,
		0x41, 0x37, 0x32, 0x6e, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x33, 0x37, 0x35, 0x41, 0x37,
		0x36, 0x41, 0x37, 0x37, 0x41, 0x37, 0x37, 0x20, 0x35, 0x47, 0x41, 0x37, 0x38, 0x20, 0x35, 0x47,
		0x41, 0x37, 0x38, 0x41, 0x37, 0x39, 0x41, 0x37, 0x37, 0x73, 0x41, 0x37, 0x6e, 0x41, 0x37, 0x78,
		0x41, 0x38, 0x33, 0x41, 0x38, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x41, 0x39, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x39, 0x31, 0x41, 0x39, 0x32, 0x41, 0x39, 0x32, 0x73,
		0x41, 0x39, 0x33, 0x41, 0x39, 0x33, 0x73, 0x50, 0x46, 0x55, 0x4d, 0x31, 0x30, 0x41, 0x39, 0x36,
		0x20, 0x35, 0x47, 0x41, 0x39, 0x34, 0x41, 0x39, 0x35, 0x41, 0x39, 0x78, 0x41, 0x58, 0x35, 0x41,
		0x58, 0x35, 0x73, 0x41, 0x58, 0x37, 0x43, 0x50, 0x48, 0x32, 0x33, 0x34, 0x31, 0x46, 0x32, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x46, 0x32, 0x31, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x43, 0x50, 0x48, 0x32, 0x35, 0x32, 0x37, 0x46, 0x32, 0x33, 0x20, 0x35, 0x47,
		0x46, 0x31, 0x31, 0x46, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x37, 0x46, 0x31, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x73, 0x46, 0x33, 0x46, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x46, 0x35, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x46, 0x37, 0x46, 0x39, 0x46, 0x39, 0x20, 0x50,
		0x72, 0x6f, 0x46, 0x31, 0x39, 0x73, 0x46, 0x31, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x39,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x46,
		0x69, 0x6e, 0x64, 0x20, 0x35, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x37,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x37, 0x61, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4e, 0x20, 0x35, 0x47,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x4e, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4e, 0x32, 0x46, 0x69, 0x6e,
		0x64, 0x20, 0x4e, 0x32, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x43, 0x6c,
		0x6f, 0x76, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x47, 0x75, 0x69, 0x74, 0x61, 0x72, 0x46,
		0x69, 0x6e, 0x64, 0x20, 0x4d, 0x65, 0x6c, 0x6f, 0x64, 0x79, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4d,
		0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x57, 0x61, 0x79, 0x20, 0x53, 0x55, 0x6c, 0x69,
		0x6b, 0x65, 0x20, 0x32, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58,
		0x20, 0x4c, 0x61, 0x6d, 0x62, 0x6f, 0x72, 0x67, 0x68, 0x69, 0x6e, 0x69, 0x46, 0x69, 0x6e, 0x64,
		0x20, 0x58, 0x32, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46,
		0x69, 0x6e, 0x64, 0x20, 0x58, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58,
		0x33, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x20, 0x4e, 0x65, 0x6f, 0x46, 0x69, 0x6e, 0x64,
		0x20, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x35, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x45, 0x4d, 0x31, 0x30, 0x46, 0x69, 0x6e, 0x64, 0x20,
		0x58, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x46, 0x4d, 0x31, 0x30, 0x46, 0x69, 0x6e, 0x64,
		0x20, 0x58, 0x36, 0x4a, 0x6f, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x37, 0x78, 0x4b, 0x39,
		0x78, 0x4b, 0x31, 0x30, 0x78, 0x4b, 0x39, 0x73, 0x4b, 0x31, 0x30, 0x20, 0x35, 0x47, 0x4b, 0x31,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4e, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e,
		0x65, 0x6f, 0x20, 0x33, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x4e, 0x65,
		0x6f, 0x20, 0x37, 0x73, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x52, 0x31, 0x31, 0x52, 0x31, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x52, 0x31, 0x4b, 0x52, 0x31, 0x78, 0x52, 0x31, 0x31, 0x73, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x52, 0x31, 0x31, 0x73, 0x52, 0x31, 0x35, 0x52, 0x31, 0x35, 0x20, 0x50, 0x72,
		0x6f, 0x52, 0x31, 0x35, 0x78, 0x52, 0x31, 0x37, 0x52, 0x58, 0x31, 0x37, 0x4e, 0x65, 0x6f, 0x52,
		0x58, 0x31, 0x37, 0x20, 0x4e, 0x65, 0x6f, 0x52, 0x31, 0x35, 0x20, 0x44, 0x72, 0x65, 0x61, 0x6d,
		0x20, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x31, 0x35, 0x20, 0x4e, 0x65, 0x6f, 0x52, 0x31,
		0x37, 0x20, 0x4e, 0x65, 0x6f, 0x52, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x31, 0x4c, 0x52,
		0x31, 0x53, 0x52, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x37, 0x73, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x52, 0x37, 0x73, 0x52, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x37, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x46, 0x52, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x39, 0x73, 0x52, 0x39,
		0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x6e, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x41,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x58, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x50, 0x43, 0x43,
		0x54, 0x30, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x58, 0x43, 0x50, 0x48, 0x32, 0x35,
		0x33, 0x31, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x32, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x32, 0x46, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x32, 0x5a,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x41, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x33, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x34, 0x20, 0x34, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x34, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x53, 0x45, 0x20, 0x35,
		0x47, 0x20, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x34, 0x5a, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x46,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x41, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x20, 0x35,
		0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x4b, 0x52, 0x65, 0x6e, 0x6f, 0x35, 0x20, 0x4b, 0x20,
		0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x4b, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x35, 0x46, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x5a, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20, 0x5a, 0x20, 0x35,
		0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x43, 0x50, 0x48,
		0x32, 0x33, 0x34, 0x33, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x5a, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x37, 0x41, 0x50, 0x46, 0x43, 0x4d, 0x30, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x20, 0x53,
		0x45, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x38, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x46, 0x5a, 0x4d, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x38, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x43, 0x50, 0x48, 0x32, 0x34, 0x35, 0x37, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x38, 0x20, 0x5a, 0x50, 0x47, 0x42, 0x4d, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x38, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x38, 0x54, 0x50, 0x48, 0x4d, 0x31, 0x31, 0x30, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x39, 0x50, 0x47, 0x57, 0x31, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x39,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x50, 0x47, 0x58, 0x31, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4b, 0x39,
		0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x41, 0x63, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x41, 0x63, 0x65, 0x20, 0x32, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x4b, 0x33, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x5a, 0x41, 0x35, 0x39, 0x73, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x4f, 0x50, 0x44,
		0x32, 0x32, 0x30, 0x31, 0x50, 0x61, 0x64, 0x20, 0x32, 0x4f, 0x50, 0x44, 0x32, 0x31, 0x30, 0x31,
		0x50, 0x61, 0x64, 0x20, 0x57, 0x69, 0x46, 0x69, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x36,
		0x6d, 0x6d, 0x4f, 0x57, 0x31, 0x39, 0x57, 0x32, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x31,
		0x6d, 0x6d, 0x4f, 0x57, 0x32, 0x30, 0x57, 0x31, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x32, 0x20,
		0x34, 0x36, 0x6d, 0x6d, 0x4e, 0x31, 0x54, 0x4f, 0x53, 0x43, 0x41, 0x4c, 0x53, 0x36, 0x30, 0x50,
		0x72, 0x6f, 0x53, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x4f,
		0x54, 0x54, 0x4f, 0x4f, 0x55, 0x4a, 0x49, 0x41, 0x32, 0x30, 0x31, 0x38, 0x2d, 0x53, 0x31, 0x30,
		0x4d, 0x41, 0x58, 0x53, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x32, 0x30, 0x53, 0x32, 0x37,
		0x20, 0x50, 0x4c, 0x55, 0x53, 0x53, 0x32, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x59, 0x53,
		0x49, 0x4e, 0x4f, 0x61, 0x6c, 0x65, 0x41, 0x70, 0x65, 0x78, 0x20, 0x24, 0x31, 0x4f, 0x61, 0x6e,
		0x67, 0x63, 0x63, 0x4f, 0x62, 0x61, 0x62, 0x6f, 0x78, 0x4f, 0x42, 0x41, 0x53, 0x4d, 0x41, 0x52,
		0x54, 0x5f, 0x33, 0x4f, 0x62, 0x65, 0x72, 0x4f, 0x62, 0x69, 0x53, 0x4a, 0x24, 0x31, 0x2e, 0x24,
		0x32, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x63, 0x6f, 0x6e, 0x50, 0x79,
		0x74, 0x68, 0x6f, 0x6e, 0x46, 0x6f, 0x78, 0x57, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x65,
		0x4c, 0x65, 0x6f, 0x70, 0x61, 0x72, 0x64, 0x42, 0x6f, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42,
		0x6f, 0x61, 0x50, 0x65, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x4f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73,
		0x43, 0x72, 0x61, 0x6e, 0x65, 0x48, 0x6f, 0x72, 0x6e, 0x62, 0x69, 0x6c, 0x6c, 0x41, 0x6c, 0x6c,
		0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x64, 0x6f, 0x74, 0x70, 0x61, 0x64, 0x44, 0x72, 0x61,
		0x67, 0x6f, 0x6e, 0x20, 0x46, 0x72, 0x75, 0x69, 0x74, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x56,
		0x24, 0x31, 0x50, 0x6f, 0x6d, 0x65, 0x6c, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x2b, 0x4f, 0x64, 0x79,
		0x73, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x48, 0x44, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x58,
		0x65, 0x6c, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x50, 0x48, 0x4f, 0x4e,
		0x45, 0x54, 0x41, 0x42, 0x33, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x74, 0x61, 0x62, 0x20, 0x33, 0x54, 0x48, 0x41, 0x4e, 0x4f, 0x53, 0x5f, 0x31, 0x30, 0x54, 0x68,
		0x61, 0x6e, 0x6f, 0x73, 0x20, 0x31, 0x30, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x4e, 0x45, 0x58,
		0x54, 0x5f, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c, 0x69,
		0x6f, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33,
		0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x41, 0x42,
		0x37, 0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74,
		0x61, 0x62, 0x20, 0x37, 0x20, 0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30, 0x45, 0x58,
		0x54, 0x52, 0x45, 0x4d, 0x45, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x58, 0x74,
		0x72, 0x65, 0x6d, 0x65, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53,
		0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x5f, 0x50, 0x4c,
		0x55, 0x53, 0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x31, 0x30,
		0x5f, 0x48, 0x44, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x58, 0x45,
		0x4c, 0x49, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45, 0x58, 0x65,
		0x6c, 0x69, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x4c,
		0x45, 0x4d, 0x45, 0x4e, 0x54, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x45,
		0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33,
		0x47, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x38, 0x50, 0x4c, 0x55, 0x53, 0x43, 0x6f, 0x6e,
		0x6e, 0x65, 0x63, 0x74, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
		0x43, 0x54, 0x37, 0x50, 0x52, 0x4f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x37, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x41, 0x56, 0x45, 0x4e, 0x5f, 0x58, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x5f,
		0x4c, 0x54, 0x45, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x20, 0x48, 0x44, 0x20,
		0x4c, 0x54, 0x45, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x5f, 0x54, 0x31, 0x30, 0x5f, 0x70, 0x72, 0x6f,
		0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x54, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x41, 0x56,
		0x45, 0x4e, 0x5f, 0x58, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x58,
		0x31, 0x30, 0x20, 0x48, 0x44, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x4d, 0x41, 0x56,
		0x45, 0x4e, 0x5f, 0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x37,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x61, 0x70, 0x69, 0x64, 0x20, 0x37, 0x20, 0x4c, 0x54, 0x45,
		0x52, 0x61, 0x70, 0x69, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x41, 0x4f, 0x5f,
		0x58, 0x31, 0x30, 0x54, 0x61, 0x6f, 0x20, 0x58, 0x31, 0x30, 0x53, 0x50, 0x41, 0x43, 0x45, 0x31,
		0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x4f,
		0x4e, 0x45, 0x31, 0x30, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x31, 0x30,
		0x53, 0x50, 0x41, 0x43, 0x45, 0x31, 0x30, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x33, 0x47, 0x53, 0x70,
		0x61, 0x63, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x54, 0x68, 0x6f,
		0x72, 0x20, 0x31, 0x30, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x54, 0x38, 0x50, 0x72, 0x6f, 0x4a,
		0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x54, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x55, 0x4e, 0x49,
		0x4f, 0x52, 0x5f, 0x38, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x38,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x44, 0x4d, 0x38, 0x31, 0x36, 0x48, 0x43, 0x4e, 0x65, 0x6f, 0x20,
		0x58, 0x45, 0x4f, 0x53, 0x31, 0x30, 0x45, 0x4f, 0x53, 0x20, 0x31, 0x30, 0x50, 0x41, 0x43, 0x45,
		0x5f, 0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x56, 0x32, 0x50, 0x61, 0x63, 0x65, 0x20, 0x31,
		0x30, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x56, 0x32, 0x50, 0x61, 0x63, 0x65, 0x20, 0x31, 0x30, 0x41,
		0x45, 0x4f, 0x4e, 0x41, 0x65, 0x6f, 0x6e, 0x46, 0x41, 0x4c, 0x43, 0x4f, 0x4e, 0x5f, 0x31, 0x30,
		0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x46, 0x55, 0x53, 0x49, 0x4f, 0x4e, 0x46,
		0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x37, 0x55, 0x6e, 0x6f, 0x20, 0x58, 0x24, 0x31, 0x41, 0x44,
		0x4d, 0x38, 0x30, 0x30, 0x30, 0x4b, 0x50, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x54, 0x69, 0x74, 0x61,
		0x6e, 0x5f, 0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x31, 0x30,
		0x20, 0x4c, 0x54, 0x45, 0x50, 0x59, 0x52, 0x4f, 0x5f, 0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f,
		0x33, 0x47, 0x50, 0x79, 0x72, 0x6f, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47,
		0x4e, 0x4f, 0x56, 0x41, 0x5f, 0x58, 0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x58, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4f, 0x44,
		0x59, 0x53, 0x5f, 0x4e, 0x4f, 0x56, 0x41, 0x5f, 0x58, 0x37, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x58,
		0x37, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47,
		0x4e, 0x4f, 0x54, 0x4f, 0x53, 0x70, 0x6c, 0x75, 0x73, 0x33, 0x47, 0x4e, 0x6f, 0x74, 0x6f, 0x73,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4d, 0x41, 0x56, 0x45, 0x4e, 0x5f, 0x47, 0x31,
		0x30, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x47, 0x31, 0x30, 0x50, 0x45, 0x44, 0x49, 0x5f, 0x50,
		0x4c, 0x55, 0x53, 0x5f, 0x57, 0x50, 0x65, 0x64, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x57,
		0x4e, 0x6f, 0x74, 0x65, 0x54, 0x61, 0x62, 0x5f, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x54,
		0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4f, 0x41, 0x4c, 0x5f, 0x31, 0x30, 0x5f, 0x50, 0x4c,
		0x55, 0x53, 0x5f, 0x33, 0x47, 0x47, 0x6f, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x33, 0x47, 0x49, 0x65, 0x6f, 0x73, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x57, 0x49,
		0x65, 0x6f, 0x73, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x31, 0x30, 0x49, 0x65, 0x6f, 0x73, 0x20,
		0x51, 0x75, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x45, 0x52, 0x4f, 0x4e, 0x4e, 0x65, 0x72,
		0x6f, 0x6e, 0x4e, 0x65, 0x6f, 0x20, 0x36, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x44, 0x45,
		0x5f, 0x58, 0x35, 0x35, 0x53, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x35, 0x35, 0x49, 0x65, 0x6f,
		0x73, 0x20, 0x24, 0x31, 0x4e, 0x6f, 0x6f, 0x6e, 0x4e, 0x6f, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f,
		0x4f, 0x6b, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4f, 0x6b, 0x61, 0x70, 0x69,
		0x61, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x24, 0x31, 0x58, 0x31, 0x4d,
		0x69, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x4b, 0x2d, 0x73, 0x6d, 0x61,
		0x72, 0x74, 0x31, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x31, 0x31, 0x4f, 0x6c, 0x61, 0x78,
		0x4f, 0x6c, 0x61, 0x78, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x31, 0x32, 0x4f, 0x6c, 0x6b,
		0x79, 0x61, 0x4f, 0x6c, 0x6c, 0x65, 0x65, 0x30, 0x30, 0x38, 0x20, 0x54, 0x77, 0x6f, 0x41, 0x4f,
		0x6c, 0x79, 0x6d, 0x70, 0x69, 0x61, 0x54, 0x72, 0x65, 0x6b, 0x4f, 0x6e, 0x64, 0x61, 0x54, 0x39,
		0x20, 0x53, 0x4d, 0x49, 0x44, 0x56, 0x38, 0x32, 0x30, 0x57, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20,
		0x4f, 0x53, 0x56, 0x38, 0x39, 0x31, 0x57, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56,
		0x38, 0x39, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20,
		0x33, 0x47, 0x20, 0x41, 0x69, 0x72, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x31,
		0x31, 0x36, 0x77, 0x2d, 0x44, 0x75, 0x61, 0x6c, 0x4f, 0x53, 0x56, 0x31, 0x31, 0x36, 0x77, 0x20,
		0x33, 0x47, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x41,
		0x69, 0x72, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x41,
		0x69, 0x72, 0x20, 0x43, 0x48, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39,
		0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x48, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56,
		0x39, 0x31, 0x39, 0x20, 0x34, 0x47, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x38,
		0x56, 0x39, 0x31, 0x39, 0x20, 0x34, 0x47, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x20, 0x38, 0x56, 0x39, 0x37, 0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x34, 0x56, 0x39, 0x31, 0x39,
		0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x34, 0x56, 0x39, 0x38, 0x39, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x38, 0x56, 0x39, 0x38, 0x39, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f,
		0x72, 0x65, 0x20, 0x38, 0x4f, 0x4e, 0x44, 0x41, 0x20, 0x56, 0x39, 0x38, 0x39, 0x56, 0x39, 0x38,
		0x39, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x38, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x32, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x6f, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x31, 0x30, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x34, 0x47, 0x56, 0x38, 0x30, 0x20, 0x53, 0x45, 0x6f, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x32, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x6f, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x32, 0x30, 0x20, 0x53, 0x45, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x20,
		0x53, 0x45, 0x56, 0x31, 0x30, 0x20, 0x34, 0x47, 0x4f, 0x6e, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b,
		0x58, 0x2d, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x49, 0x49, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x2d,
		0x4d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x49, 0x49, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x2d, 0x4d, 0x75,
		0x73, 0x69, 0x63, 0x20, 0x49, 0x49, 0x49, 0x58, 0x2d, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x24,
		0x31, 0x4f, 0x6e, 0x65, 0x4c, 0x65, 0x72, 0x6e, 0x4f, 0x6e, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x31,
		0x31, 0x31, 0x31, 0x52, 0x20, 0x35, 0x47, 0x41, 0x63, 0x65, 0x20, 0x32, 0x41, 0x63, 0x65, 0x20,
		0x32, 0x56, 0x41, 0x63, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x63, 0x65, 0x20, 0x52, 0x61, 0x63,
		0x69, 0x6e, 0x67, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x72, 0x64, 0x20,
		0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x32, 0x54, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45,
		0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x32, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43,
		0x50, 0x48, 0x32, 0x34, 0x39, 0x33, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x33, 0x20, 0x35, 0x47, 0x4e,
		0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31, 0x30, 0x30, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x32, 0x30,
		0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x32, 0x30, 0x20, 0x35, 0x47, 0x4e,
		0x6f, 0x72, 0x64, 0x20, 0x4e, 0x32, 0x30, 0x20, 0x53, 0x45, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e,
		0x31, 0x30, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72,
		0x64, 0x20, 0x4e, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x32,
		0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x32, 0x38, 0x20, 0x50, 0x72,
		0x6f, 0x38, 0x54, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x38, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57,
		0x39, 0x52, 0x54, 0x20, 0x35, 0x47, 0x39, 0x52, 0x31, 0x30, 0x52, 0x31, 0x30, 0x52, 0x20, 0x35,
		0x47, 0x31, 0x30, 0x54, 0x20, 0x35, 0x47, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x45, 0x78,
		0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x37, 0x54, 0x37, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x37, 0x54, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x38, 0x54, 0x2b, 0x20, 0x35, 0x47, 0x33, 0x54, 0x35, 0x54, 0x36, 0x54, 0x4f,
		0x6e, 0x69, 0x78, 0x38, 0x22, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x33, 0x47, 0x4f,
		0x6e, 0x6b, 0x79, 0x6f, 0x4f, 0x6f, 0x6b, 0x65, 0x65, 0x4f, 0x6f, 0x6b, 0x65, 0x65, 0x4f, 0x6e,
		0x65, 0x4f, 0x70, 0x65, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x45, 0x61, 0x73, 0x79, 0x5f,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x32, 0x45, 0x61, 0x73, 0x79, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x32, 0x4f, 0x70, 0x65, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x4a, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4a, 0x58, 0x4f, 0x70, 0x65, 0x6c,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x31, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x58, 0x31, 0x20, 0x34, 0x47, 0x4f, 0x70, 0x65, 0x6c, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x58, 0x36, 0x4f, 0x70, 0x65, 0x6e, 0x62, 0x6f, 0x78, 0x41, 0x53, 0x5f, 0x34, 0x4b, 0x5f, 0x43,
		0x49, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20,
		0x43, 0x49, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x53, 0x5f, 0x34, 0x4b,
		0x5f, 0x43, 0x49, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x43, 0x49,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x43, 0x49, 0x20, 0x50, 0x72,
		0x6f, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x24, 0x31, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x41, 0x53, 0x31, 0x5f, 0x48, 0x44, 0x41, 0x53, 0x31, 0x20, 0x48, 0x44, 0x41,
		0x53, 0x20, 0x34, 0x4b, 0x4f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x5f,
		0x34, 0x5f, 0x30, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x20, 0x34, 0x2e, 0x30, 0x42, 0x65, 0x65, 0x74,
		0x61, 0x5f, 0x34, 0x5f, 0x30, 0x42, 0x65, 0x65, 0x74, 0x61, 0x20, 0x34, 0x2e, 0x30, 0x41, 0x63,
		0x74, 0x69, 0x76, 0x65, 0x20, 0x35, 0x2e, 0x30, 0x4f, 0x70, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x75,
		0x73, 0x61, 0x69, 0x20, 0x24, 0x31, 0x4f, 0x70, 0x74, 0x6f, 0x6d, 0x61, 0x4f, 0x70, 0x74, 0x6f,
		0x6d, 0x61, 0x2d, 0x55, 0x48, 0x44, 0x55, 0x48, 0x44, 0x35, 0x35, 0x4f, 0x72, 0x61, 0x6e, 0x67,
		0x65, 0x53, 0x43, 0x2f, 0x49, 0x48, 0x44, 0x39, 0x32, 0x4c, 0x69, 0x76, 0x65, 0x62, 0x6f, 0x78,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x4e, 0x6f, 0x6c, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x6f,
		0x6c, 0x61, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4e, 0x6f, 0x6c, 0x61, 0x20, 0x66, 0x75, 0x6e, 0x4e,
		0x6f, 0x6c, 0x61, 0x20, 0x46, 0x75, 0x6e, 0x4e, 0x65, 0x76, 0x61, 0x20, 0x7a, 0x65, 0x6e, 0x4e,
		0x65, 0x76, 0x61, 0x20, 0x5a, 0x65, 0x6e, 0x4e, 0x65, 0x76, 0x61, 0x20, 0x73, 0x74, 0x61, 0x72,
		0x74, 0x4e, 0x65, 0x76, 0x61, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x72, 0x61, 0x20,
		0x32, 0x53, 0x65, 0x67, 0x6f, 0x46, 0x75, 0x6e, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4f, 0x72,
		0x61, 0x6e, 0x67, 0x65, 0x20, 0x4d, 0x6f, 0x75, 0x76, 0x65, 0x20, 0x32, 0x4d, 0x6f, 0x75, 0x76,
		0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x4d, 0x6f, 0x75, 0x76, 0x65, 0x54, 0x61, 0x62,
		0x37, 0x57, 0x49, 0x46, 0x49, 0x4d, 0x6f, 0x75, 0x76, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x6f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x54, 0x61, 0x62, 0x5f,
		0x37, 0x5f, 0x34, 0x47, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x34, 0x47, 0x44, 0x69, 0x76, 0x65,
		0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x44, 0x69, 0x76, 0x65, 0x20, 0x24, 0x31, 0x53,
		0x50, 0x56, 0x20, 0x24, 0x31, 0x4f, 0x72, 0x62, 0x69, 0x63, 0x52, 0x36, 0x37, 0x38, 0x45, 0x4c,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x47, 0x52, 0x43, 0x35, 0x30, 0x31, 0x4c, 0x53, 0x6c,
		0x69, 0x6d, 0x52, 0x43, 0x35, 0x34, 0x35, 0x4c, 0x4d, 0x61, 0x75, 0x69, 0x52, 0x43, 0x35, 0x35,
		0x35, 0x4c, 0x57, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x43, 0x32, 0x32, 0x30, 0x30, 0x4c, 0x4a,
		0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x20, 0x56, 0x52, 0x43, 0x36, 0x30, 0x38, 0x4c, 0x52, 0x38,
		0x4c, 0x35, 0x54, 0x54, 0x61, 0x62, 0x38, 0x20, 0x35, 0x47, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x61,
		0x4f, 0x72, 0x62, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x69, 0x73, 0x73, 0x69, 0x6d,
		0x6f, 0x43, 0x52, 0x41, 0x4e, 0x45, 0x2d, 0x45, 0x56, 0x42, 0x4f, 0x75, 0x6b, 0x69, 0x4f, 0x4b,
		0x50, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x75, 0x6b, 0x69, 0x74, 0x65, 0x6c, 0x57, 0x50, 0x32,
		0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x78, 0x4b, 0x37, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x55, 0x38, 0x20, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
		0x20, 0x54, 0x61, 0x70, 0x4f, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x78, 0x4f, 0x56, 0x2d, 0x56, 0x31,
		0x30, 0x56, 0x65, 0x72, 0x74, 0x69, 0x73, 0x20, 0x59, 0x61, 0x72, 0x64, 0x56, 0x65, 0x72, 0x74,
		0x69, 0x73, 0x20, 0x35, 0x30, 0x32, 0x31, 0x20, 0x41, 0x69, 0x6d, 0x56, 0x65, 0x72, 0x74, 0x69,
		0x73, 0x20, 0x34, 0x30, 0x30, 0x34, 0x20, 0x59, 0x6f, 0x75, 0x56, 0x65, 0x72, 0x74, 0x69, 0x73,
		0x20, 0x24, 0x31, 0x4c, 0x69, 0x76, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x37, 0x30, 0x33, 0x32, 0x4c,
		0x69, 0x76, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x37, 0x30, 0x33, 0x32, 0x51, 0x75, 0x61, 0x6c,
		0x63, 0x6f, 0x72, 0x65, 0x20, 0x31, 0x30, 0x31, 0x30, 0x51, 0x75, 0x61, 0x6c, 0x63, 0x6f, 0x72,
		0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x4f, 0x76, 0x76, 0x69, 0x4a, 0x75, 0x6d, 0x62,
		0x6f, 0x20, 0x58, 0x31, 0x4f, 0x77, 0x77, 0x6f, 0x43, 0x61, 0x72, 0x6e, 0x69, 0x76, 0x61, 0x6c,
		0x20, 0x42, 0x35, 0x4f, 0x79, 0x73, 0x74, 0x65, 0x72, 0x73, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69,
		0x63, 0x20, 0x38, 0x30, 0x30, 0x69, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x50, 0x61,
		0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x45, 0x49, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x56, 0x49, 0x6e,
		0x64, 0x69, 0x61, 0x6e, 0x20, 0x56, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x24, 0x31,
		0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x20, 0x24, 0x31, 0x41, 0x72, 0x63, 0x74, 0x69,
		0x63, 0x20, 0x24, 0x31, 0x41, 0x6e, 0x74, 0x61, 0x72, 0x63, 0x74, 0x69, 0x63, 0x20, 0x45, 0x4c,
		0x69, 0x66, 0x65, 0x20, 0x34, 0x47, 0x54, 0x37, 0x34, 0x4d, 0x61, 0x69, 0x5f, 0x33, 0x47, 0x54,
		0x37, 0x34, 0x4d, 0x41, 0x69, 0x20, 0x33, 0x47, 0x4f, 0x79, 0x79, 0x75, 0x54, 0x31, 0x31, 0x20,
		0x33, 0x47, 0x4f, 0x7a, 0x6f, 0x6e, 0x65, 0x48, 0x44, 0x50, 0x2d, 0x55, 0x50, 0x4d, 0x6f, 0x64,
		0x65, 0x20, 0x31, 0x20, 0x52, 0x52, 0x4d, 0x6f, 0x64, 0x65, 0x20, 0x31, 0x20, 0x52, 0x53, 0x4d,
		0x6f, 0x64, 0x65, 0x20, 0x31, 0x20, 0x4d, 0x44, 0x2d, 0x30, 0x31, 0x50, 0x50, 0x41, 0x50, 0x59,
		0x52, 0x45, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x31, 0x22, 0x50, 0x43, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x51, 0x55, 0x49, 0x43, 0x4b, 0x54, 0x41, 0x42, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x51,
		0x75, 0x69, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x43, 0x42, 0x4f,
		0x58, 0x41, 0x72, 0x74, 0x2d, 0x50, 0x43, 0x42, 0x2d, 0x56, 0x31, 0x31, 0x36, 0x41, 0x72, 0x74,
		0x42, 0x65, 0x65, 0x2d, 0x50, 0x43, 0x42, 0x2d, 0x56, 0x32, 0x31, 0x36, 0x42, 0x65, 0x65, 0x43,
		0x6c, 0x61, 0x70, 0x2d, 0x50, 0x43, 0x42, 0x2d, 0x49, 0x33, 0x31, 0x36, 0x43, 0x6c, 0x61, 0x70,
		0x50, 0x43, 0x42, 0x2d, 0x54, 0x31, 0x30, 0x33, 0x43, 0x75, 0x72, 0x69, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x4b, 0x6f, 0x76, 0x61, 0x20, 0x54, 0x37, 0x33, 0x30, 0x4b, 0x6f, 0x76, 0x61, 0x5f, 0x50,
		0x6c, 0x75, 0x73, 0x5f, 0x50, 0x43, 0x42, 0x5f, 0x54, 0x37, 0x33, 0x35, 0x4b, 0x6f, 0x76, 0x61,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x54, 0x37, 0x33, 0x35, 0x50, 0x43, 0x44, 0x50, 0x43, 0x44,
		0x20, 0x41, 0x72, 0x67, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x61, 0x50, 0x49, 0x4e, 0x45, 0x50, 0x49,
		0x52, 0x41, 0x4e, 0x48, 0x41, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x34, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x20, 0x54, 0x61, 0x62, 0x20, 0x57, 0x68,
		0x69, 0x74, 0x65, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x50, 0x4f, 0x43, 0x4f, 0x46, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x4d, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x34, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x34, 0x20, 0x35, 0x47, 0x4d, 0x34, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x32, 0x30, 0x31, 0x30, 0x4a, 0x31, 0x39, 0x47, 0x43, 0x4d, 0x33, 0x20, 0x53, 0x45,
		0x58, 0x33, 0x20, 0x4e, 0x46, 0x43, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x33, 0x20, 0x47,
		0x54, 0x58, 0x34, 0x20, 0x47, 0x54, 0x58, 0x35, 0x20, 0x35, 0x47, 0x58, 0x34, 0x20, 0x47, 0x54,
		0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x58, 0x34, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x46, 0x33, 0x20, 0x47, 0x54, 0x46, 0x34, 0x20, 0x47, 0x54,
		0x46, 0x34, 0x43, 0x33, 0x43, 0x33, 0x31, 0x43, 0x34, 0x30, 0x32, 0x33, 0x30, 0x35, 0x45, 0x50,
		0x43, 0x43, 0x34, 0x47, 0x32, 0x32, 0x31, 0x32, 0x37, 0x50, 0x43, 0x39, 0x35, 0x49, 0x43, 0x35,
		0x35, 0x46, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x20, 0x47, 0x54, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x4f, 0x50, 0x54, 0x45, 0x4c, 0x50, 0x39, 0x30, 0x30, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x50,
		0x50, 0x54, 0x56, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x50, 0x55, 0x4c, 0x49, 0x44, 0x46, 0x24, 0x31,
		0x50, 0x61, 0x63, 0x6b, 0x61, 0x72, 0x64, 0x20, 0x42, 0x65, 0x6c, 0x6c, 0x44, 0x41, 0x59, 0x54,
		0x4f, 0x4e, 0x41, 0x2d, 0x47, 0x31, 0x32, 0x44, 0x61, 0x79, 0x74, 0x6f, 0x6e, 0x61, 0x20, 0x47,
		0x31, 0x32, 0x4d, 0x4f, 0x4e, 0x5a, 0x41, 0x2d, 0x54, 0x37, 0x4d, 0x6f, 0x6e, 0x7a, 0x61, 0x20,
		0x54, 0x37, 0x53, 0x49, 0x4c, 0x56, 0x45, 0x52, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x2d, 0x54, 0x31,
		0x30, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x20, 0x54, 0x31, 0x30,
		0x45, 0x61, 0x73, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x54, 0x56, 0x31, 0x31, 0x48, 0x43, 0x50,
		0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x50, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x20, 0x54, 0x56,
		0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x50, 0x61, 0x6c, 0x6d, 0x54, 0x72, 0x65, 0x6f, 0x20, 0x24,
		0x31, 0x54, 0x75, 0x6e, 0x67, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x56, 0x47, 0x31, 0x30, 0x30, 0x50,
		0x65, 0x70, 0x69, 0x74, 0x6f, 0x50, 0x61, 0x6e, 0x61, 0x63, 0x6f, 0x6d, 0x54, 0x2d, 0x69, 0x37,
		0x30, 0x38, 0x44, 0x50, 0x61, 0x6e, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x50, 0x2d, 0x73, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x62,
		0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x50, 0x45, 0x6c, 0x75,
		0x67, 0x61, 0x20, 0x58, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x49, 0x37, 0x45, 0x6c, 0x75, 0x67,
		0x61, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x78, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69,
		0x78, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x2d, 0x30, 0x32, 0x44, 0x54, 0x6f, 0x75,
		0x67, 0x68, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x61, 0x64,
		0x20, 0x46, 0x5a, 0x2d, 0x24, 0x31, 0x50, 0x35, 0x35, 0x20, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x34,
		0x47, 0x50, 0x35, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x24, 0x31, 0x20, 0x4e, 0x58, 0x54, 0x50,
		0x39, 0x30, 0x32, 0x69, 0x50, 0x61, 0x6e, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x20, 0x4d, 0x49,
		0x4c, 0x20, 0x44, 0x4c, 0x4e, 0x41, 0x56, 0x69, 0x65, 0x72, 0x61, 0x20, 0x43, 0x61, 0x73, 0x74,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x4c, 0x69,
		0x76, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x50, 0x61, 0x6e, 0x6f, 0x50, 0x61, 0x6e, 0x6f,
		0x72, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61, 0x6e, 0x74, 0x65, 0x63, 0x68, 0x41, 0x44, 0x52, 0x39,
		0x31, 0x30, 0x4c, 0x53, 0x74, 0x61, 0x72, 0x20, 0x51, 0x49, 0x4d, 0x2d, 0x41, 0x38, 0x36, 0x30,
		0x56, 0x65, 0x67, 0x61, 0x20, 0x4e, 0x6f, 0x20, 0x36, 0x49, 0x4d, 0x2d, 0x41, 0x38, 0x35, 0x30,
		0x56, 0x65, 0x67, 0x61, 0x20, 0x52, 0x33, 0x49, 0x4d, 0x2d, 0x41, 0x38, 0x37, 0x30, 0x4b, 0x56,
		0x65, 0x67, 0x61, 0x20, 0x49, 0x72, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x72, 0x6f, 0x74, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x45, 0x56, 0x31, 0x20, 0x50, 0x52, 0x4f, 0x45, 0x56, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x65, 0x6c, 0x69, 0x74, 0x74, 0x50, 0x65, 0x6c, 0x69, 0x74, 0x74, 0x20, 0x54, 0x31,
		0x20, 0x4d, 0x41, 0x58, 0x54, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x6c, 0x69, 0x74, 0x74,
		0x20, 0x54, 0x31, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x65, 0x6e, 0x64, 0x6f, 0x6f, 0x58, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x70, 0x65, 0x6e, 0x64,
		0x6f, 0x6f, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x69, 0x6e, 0x69, 0x58, 0x31, 0x31, 0x20, 0x50,
		0x52, 0x4f, 0x41, 0x35, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x6e, 0x74, 0x61, 0x50, 0x53,
		0x36, 0x35, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x53, 0x36, 0x35, 0x30, 0x57, 0x53,
		0x37, 0x30, 0x34, 0x44, 0x58, 0x54, 0x2d, 0x50, 0x61, 0x64, 0x20, 0x57, 0x53, 0x37, 0x30, 0x34,
		0x44, 0x58, 0x50, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x45, 0x6f, 0x6e, 0x20, 0x50,
		0x72, 0x69, 0x78, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x37, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x53, 0x6c, 0x69, 0x6d, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x20, 0x58, 0x35, 0x51,
		0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x24, 0x31, 0x50, 0x65, 0x72, 0x66, 0x65, 0x6f, 0x50, 0x65,
		0x72, 0x66, 0x65, 0x6f, 0x5f, 0x50, 0x46, 0x5f, 0x41, 0x34, 0x35, 0x35, 0x31, 0x43, 0x48, 0x52,
		0x4f, 0x4e, 0x4f, 0x50, 0x65, 0x72, 0x66, 0x65, 0x6f, 0x5f, 0x50, 0x46, 0x5f, 0x41, 0x34, 0x35,
		0x35, 0x32, 0x52, 0x41, 0x54, 0x45, 0x50, 0x65, 0x72, 0x66, 0x65, 0x6f, 0x5f, 0x50, 0x46, 0x5f,
		0x41, 0x34, 0x35, 0x35, 0x33, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x50, 0x68, 0x69, 0x63, 0x6f,
		0x6d, 0x6d, 0x43, 0x6c, 0x75, 0x65, 0x20, 0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4c,
		0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x33, 0x2b, 0x43, 0x6c, 0x75, 0x65, 0x20, 0x24, 0x31,
		0x50, 0x68, 0x69, 0x6c, 0x63, 0x6f, 0x48, 0x49, 0x54, 0x20, 0x50, 0x31, 0x30, 0x61, 0x48, 0x69,
		0x74, 0x20, 0x50, 0x31, 0x30, 0x61, 0x48, 0x69, 0x74, 0x20, 0x24, 0x31, 0x50, 0x54, 0x42, 0x37,
		0x50, 0x41, 0x50, 0x68, 0x69, 0x6c, 0x69, 0x70, 0x73, 0x58, 0x65, 0x6e, 0x69, 0x75, 0x6d, 0x20,
		0x24, 0x31, 0x24, 0x31, 0x2f, 0x39, 0x36, 0x20, 0x34, 0x4b, 0x20, 0x55, 0x48, 0x44, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x55, 0x48, 0x44, 0x20, 0x28, 0x24, 0x31, 0x2d, 0x32,
		0x30, 0x24, 0x32, 0x29, 0x24, 0x31, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x42, 0x6c, 0x75, 0x2d, 0x72, 0x61, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65,
		0x72, 0x20, 0x28, 0x42, 0x44, 0x50, 0x24, 0x31, 0x29, 0x4e, 0x65, 0x74, 0x54, 0x56, 0x20, 0x53,
		0x65, 0x72, 0x69, 0x65, 0x73, 0x55, 0x48, 0x44, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
		0x20, 0x54, 0x56, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x55, 0x48, 0x44, 0x46,
		0x69, 0x73, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6d, 0x61, 0x78, 0x53,
		0x61, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x58, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x61, 0x72,
		0x73, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x58, 0x50, 0x69, 0x50, 0x4f, 0x50, 0x69, 0x70, 0x6f,
		0x4d, 0x39, 0x50, 0x72, 0x6f, 0x50, 0x69, 0x63, 0x6f, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72,
		0x52, 0x31, 0x64, 0x76, 0x72, 0x37, 0x30, 0x30, 0x70, 0x69, 0x44, 0x56, 0x52, 0x37, 0x30, 0x30,
		0x50, 0x49, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x42, 0x44, 0x50, 0x2d, 0x31, 0x36, 0x30, 0x50, 0x69,
		0x6f, 0x6e, 0x65, 0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x50,
		0x69, 0x78, 0x65, 0x6c, 0x61, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x65, 0x75, 0x6d, 0x20, 0x24, 0x31,
		0x50, 0x69, 0x78, 0x65, 0x6c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x69, 0x78, 0x75, 0x73, 0x52,
		0x69, 0x64, 0x65, 0x20, 0x24, 0x31, 0x47, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x54, 0x68, 0x72, 0x65,
		0x65, 0x20, 0x76, 0x24, 0x31, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x54, 0x77, 0x6f, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x46, 0x69, 0x76, 0x65, 0x68, 0x69, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x70, 0x72,
		0x69, 0x6e, 0x74, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x37, 0x20, 0x33, 0x47, 0x48, 0x69, 0x4d,
		0x61, 0x78, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x4a, 0x6f, 0x6b, 0x65, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42, 0x6c, 0x61,
		0x7a, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x52, 0x61, 0x7a, 0x65, 0x50,
		0x69, 0x78, 0x75, 0x73, 0x5f, 0x4a, 0x65, 0x74, 0x4a, 0x65, 0x74, 0x70, 0x69, 0x78, 0x75, 0x73,
		0x20, 0x68, 0x69, 0x74, 0x20, 0x32, 0x48, 0x69, 0x74, 0x20, 0x32, 0x50, 0x6c, 0x61, 0x6e, 0x65,
		0x74, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x47, 0x65, 0x6d, 0x69, 0x6e,
		0x69, 0x20, 0x34, 0x47, 0x50, 0x6c, 0x61, 0x74, 0x6f, 0x6f, 0x6e, 0x50, 0x6c, 0x6f, 0x79, 0x65,
		0x72, 0x4d, 0x4f, 0x4d, 0x4f, 0x6d, 0x69, 0x6e, 0x69, 0x53, 0x4d, 0x4f, 0x4d, 0x4f, 0x20, 0x6d,
		0x69, 0x6e, 0x69, 0x20, 0x53, 0x6d, 0x6f, 0x6d, 0x6f, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x33,
		0x47, 0x53, 0x4d, 0x4f, 0x4d, 0x4f, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x47, 0x53, 0x4d,
		0x4f, 0x4d, 0x4f, 0x20, 0x24, 0x31, 0x50, 0x6c, 0x75, 0x6d, 0x5a, 0x34, 0x30, 0x35, 0x47, 0x61,
		0x74, 0x6f, 0x72, 0x20, 0x33, 0x5a, 0x34, 0x30, 0x37, 0x41, 0x78, 0x65, 0x20, 0x34, 0x5a, 0x35,
		0x31, 0x36, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73, 0x5a, 0x35, 0x31, 0x38, 0x43, 0x6f, 0x6d,
		0x70, 0x61, 0x73, 0x73, 0x20, 0x32, 0x5a, 0x35, 0x31, 0x39, 0x47, 0x61, 0x74, 0x6f, 0x72, 0x20,
		0x35, 0x5a, 0x38, 0x31, 0x31, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x78, 0x20, 0x31, 0x31, 0x5a,
		0x37, 0x30, 0x39, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x78, 0x20, 0x37, 0x5a, 0x37, 0x31, 0x32,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x78, 0x20, 0x31, 0x32, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74,
		0x79, 0x6c, 0x65, 0x50, 0x6c, 0x75, 0x7a, 0x7a, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x6f,
		0x6f, 0x6b, 0x41, 0x31, 0x30, 0x20, 0x33, 0x47, 0x41, 0x31, 0x30, 0x53, 0x55, 0x52, 0x46, 0x70,
		0x61, 0x64, 0x20, 0x32, 0x53, 0x55, 0x52, 0x46, 0x70, 0x61, 0x64, 0x20, 0x33, 0x20, 0x24, 0x31,
		0x2e, 0x24, 0x32, 0x22, 0x53, 0x55, 0x52, 0x46, 0x70, 0x61, 0x64, 0x20, 0x34, 0x20, 0x24, 0x31,
		0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x4d, 0x38, 0x30,
		0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x56, 0x69, 0x65, 0x77, 0x50, 0x4f, 0x56,
		0x5f, 0x54, 0x56, 0x2d, 0x48, 0x44, 0x4d, 0x49, 0x2d, 0x4b, 0x42, 0x2d, 0x30, 0x31, 0x48, 0x44,
		0x4d, 0x49, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x44, 0x6f, 0x6e, 0x67,
		0x6c, 0x65, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x56, 0x2d, 0x48, 0x44, 0x4d, 0x49, 0x2d, 0x32, 0x30,
		0x30, 0x42, 0x54, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x43, 0x20, 0x48, 0x44, 0x4d, 0x49, 0x20,
		0x44, 0x6f, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x4f, 0x42, 0x2d, 0x35, 0x30, 0x34, 0x35, 0x4d, 0x6f,
		0x62, 0x69, 0x69, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x30, 0x34, 0x35, 0x50, 0x4f,
		0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x35, 0x30, 0x36, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35,
		0x30, 0x36, 0x20, 0x4e, 0x61, 0x76, 0x69, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35, 0x30, 0x37, 0x20,
		0x4e, 0x61, 0x76, 0x69, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x35, 0x32, 0x37,
		0x53, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35, 0x32, 0x37, 0x53, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41,
		0x42, 0x2d, 0x50, 0x35, 0x34, 0x37, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35, 0x34, 0x37, 0x20, 0x4e,
		0x61, 0x76, 0x69, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x52, 0x4f, 0x54, 0x41,
		0x42, 0x32, 0x36, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x32, 0x36, 0x20, 0x58, 0x58, 0x4c,
		0x20, 0x49, 0x50, 0x53, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x32, 0x35, 0x58, 0x58, 0x4c,
		0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x4c, 0x31, 0x30, 0x31, 0x35, 0x4d, 0x6f,
		0x62, 0x69, 0x69, 0x20, 0x31, 0x30, 0x31, 0x35, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x31, 0x30, 0x32,
		0x33, 0x32, 0x2d, 0x33, 0x47, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x30, 0x32, 0x33, 0x32, 0x20,
		0x33, 0x47, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4d, 0x6f, 0x62, 0x69, 0x69,
		0x20, 0x24, 0x31, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x4c, 0x69, 0x6e,
		0x65, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x34, 0x30, 0x30, 0x35, 0x41, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x20, 0x43, 0x34, 0x50, 0x35, 0x30, 0x30, 0x35, 0x41, 0x54, 0x75, 0x72,
		0x62, 0x6f, 0x20, 0x43, 0x35, 0x50, 0x34, 0x30, 0x30, 0x36, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f,
		0x20, 0x44, 0x34, 0x50, 0x53, 0x50, 0x54, 0x44, 0x32, 0x31, 0x4e, 0x41, 0x54, 0x75, 0x72, 0x62,
		0x6f, 0x20, 0x44, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x34, 0x35, 0x32, 0x36, 0x41, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x20, 0x45, 0x50, 0x53, 0x50, 0x43, 0x4c, 0x33, 0x30, 0x41, 0x30, 0x43,
		0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x43, 0x36, 0x50, 0x35, 0x30, 0x30, 0x36, 0x41, 0x43, 0x6f, 0x73,
		0x6d, 0x6f, 0x20, 0x4b, 0x50, 0x35, 0x35, 0x32, 0x36, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20,
		0x4b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x53, 0x50, 0x43, 0x4b, 0x32, 0x30, 0x4e, 0x41, 0x43,
		0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x32, 0x50, 0x53, 0x50, 0x43, 0x4b, 0x32, 0x31, 0x4e, 0x41,
		0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x35, 0x30,
		0x32, 0x36, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4c, 0x50, 0x53, 0x50, 0x43, 0x4c, 0x32,
		0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4c, 0x32, 0x50, 0x53, 0x50, 0x43, 0x4d,
		0x32, 0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4d, 0x32, 0x50, 0x35, 0x30, 0x34,
		0x36, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x50, 0x35, 0x73, 0x50, 0x35, 0x35, 0x32, 0x35,
		0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x51, 0x35, 0x73, 0x50, 0x35, 0x30, 0x34, 0x37, 0x41,
		0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x5a, 0x50, 0x53, 0x50, 0x43, 0x5a, 0x32, 0x30, 0x41, 0x30,
		0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x5a, 0x32, 0x50, 0x35, 0x30, 0x32, 0x35, 0x41, 0x4c, 0x35,
		0x73, 0x50, 0x72, 0x6f, 0x34, 0x36, 0x31, 0x31, 0x50, 0x52, 0x4f, 0x35, 0x30, 0x32, 0x33, 0x50,
		0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x35, 0x50, 0x52, 0x4f, 0x56, 0x34, 0x30, 0x30, 0x41,
		0x67, 0x61, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x56, 0x33, 0x35, 0x30, 0x50, 0x72, 0x6f, 0x56, 0x33,
		0x35, 0x30, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x20, 0x35, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x50, 0x53,
		0x50, 0x54, 0x33, 0x35, 0x30, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x33, 0x35, 0x30, 0x20, 0x47,
		0x72, 0x69, 0x73, 0x50, 0x53, 0x4e, 0x2d, 0x48, 0x31, 0x31, 0x36, 0x53, 0x6e, 0x61, 0x70, 0x50,
		0x75, 0x72, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74,
		0x79, 0x33, 0x47, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x33, 0x47, 0x50, 0x6f, 0x6c, 0x65, 0x73, 0x74, 0x61, 0x72, 0x50, 0x6f, 0x6c, 0x79,
		0x50, 0x61, 0x64, 0x50, 0x6f, 0x6c, 0x79, 0x74, 0x72, 0x6f, 0x6e, 0x52, 0x32, 0x35, 0x30, 0x38,
		0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x51, 0x2d, 0x46, 0x69, 0x76, 0x65, 0x52, 0x32, 0x34,
		0x30, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x32, 0x58, 0x52, 0x6f, 0x63, 0x6b, 0x65,
		0x74, 0x20, 0x52, 0x32, 0x34, 0x30, 0x32, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x52, 0x31,
		0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x52, 0x32, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20,
		0x52, 0x33, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x53, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x65,
		0x74, 0x20, 0x53, 0x32, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x31, 0x52, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x20, 0x54, 0x33, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x36, 0x20,
		0x53, 0x45, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x36, 0x52, 0x6f, 0x63, 0x6b, 0x65,
		0x74, 0x20, 0x54, 0x37, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x34, 0x52, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x20, 0x4a, 0x65, 0x74, 0x7a, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x4a,
		0x65, 0x74, 0x7a, 0x20, 0x35, 0x2e, 0x30, 0x34, 0x47, 0x34, 0x35, 0x30, 0x5a, 0x61, 0x70, 0x20,
		0x35, 0x57, 0x36, 0x35, 0x30, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x52, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x57, 0x37, 0x34, 0x35, 0x32, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x53,
		0x32, 0x57, 0x37, 0x35, 0x35, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x56, 0x35, 0x57,
		0x38, 0x35, 0x37, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x56, 0x37, 0x52, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x20, 0x4c, 0x35, 0x30, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x53,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x34, 0x47, 0x35, 0x30, 0x30,
		0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x43, 0x6c, 0x65, 0x6f, 0x57, 0x38, 0x34, 0x38, 0x30, 0x43,
		0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x34, 0x20, 0x57, 0x38, 0x34, 0x38, 0x30, 0x57, 0x37,
		0x35, 0x33, 0x31, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x20, 0x56, 0x57, 0x37, 0x34, 0x33, 0x30,
		0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x57, 0x37, 0x34, 0x33,
		0x30, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x50, 0x6f, 0x73, 0x68, 0x5a, 0x61, 0x70, 0x20, 0x36,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x46, 0x6c, 0x61, 0x7a,
		0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20,
		0x50, 0x6f, 0x73, 0x68, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x57, 0x31, 0x31, 0x30, 0x30, 0x53,
		0x51, 0x32, 0x33, 0x35, 0x32, 0x52, 0x32, 0x35, 0x35, 0x42, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20,
		0x54, 0x38, 0x43, 0x6f, 0x73, 0x6d, 0x69, 0x63, 0x61, 0x20, 0x54, 0x37, 0x38, 0x30, 0x30, 0x52,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x50, 0x61, 0x64, 0x50, 0x6f, 0x6d, 0x70, 0x50, 0x6f, 0x70,
		0x70, 0x6f, 0x78, 0x50, 0x6f, 0x70, 0x70, 0x6f, 0x78, 0x20, 0x50, 0x33, 0x50, 0x6f, 0x72, 0x73,
		0x63, 0x68, 0x65, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65, 0x20, 0x52, 0x65, 0x61, 0x72, 0x20,
		0x53, 0x65, 0x61, 0x74, 0x20, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65,
		0x6e, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x59, 0x50, 0x59, 0x5f, 0x53, 0x34,
		0x35, 0x30, 0x59, 0x50, 0x59, 0x20, 0x53, 0x34, 0x35, 0x30, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20,
		0x34, 0x20, 0x24, 0x31, 0x59, 0x4f, 0x4c, 0x4f, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x34, 0x20,
		0x46, 0x69, 0x74, 0x55, 0x50, 0x20, 0x33, 0x32, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x34, 0x20,
		0x50, 0x72, 0x6f, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x34, 0x47, 0x54, 0x77, 0x69, 0x73, 0x74,
		0x20, 0x34, 0x54, 0x31, 0x30, 0x38, 0x35, 0x4d, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20, 0x50, 0x52,
		0x4f, 0x20, 0x58, 0x4d, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x58, 0x50,
		0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x20, 0x42, 0x47, 0x48, 0x53, 0x65, 0x6c, 0x66, 0x69,
		0x65, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x54, 0x77, 0x69,
		0x73, 0x74, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x33, 0x32, 0x47, 0x42, 0x54, 0x77, 0x69,
		0x73, 0x74, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x61,
		0x78, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x77, 0x69, 0x73, 0x74,
		0x20, 0x32, 0x20, 0x46, 0x69, 0x74, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x32, 0x20, 0x47, 0x6f,
		0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x77, 0x69, 0x73, 0x74,
		0x20, 0x58, 0x4c, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x53, 0x45, 0x54, 0x77, 0x69, 0x73, 0x74,
		0x20, 0x24, 0x31, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x49, 0x59, 0x70, 0x79, 0x20, 0x24, 0x31, 0x54,
		0x77, 0x69, 0x73, 0x74, 0x20, 0x54, 0x61, 0x62, 0x4d, 0x41, 0x58, 0x49, 0x20, 0x32, 0x30, 0x4d,
		0x61, 0x78, 0x69, 0x20, 0x32, 0x30, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x6f, 0x31, 0x38, 0x36, 0x48,
		0x53, 0x32, 0x30, 0x38, 0x30, 0x35, 0x33, 0x31, 0x41, 0x58, 0x45, 0x5f, 0x49, 0x49, 0x41, 0x78,
		0x65, 0x20, 0x49, 0x49, 0x20, 0x41, 0x78, 0x65, 0x41, 0x78, 0x65, 0x31, 0x38, 0x36, 0x48, 0x53,
		0x31, 0x30, 0x35, 0x30, 0x35, 0x33, 0x31, 0x50, 0x35, 0x34, 0x31, 0x31, 0x38, 0x35, 0x46, 0x54,
		0x35, 0x30, 0x35, 0x30, 0x32, 0x33, 0x31, 0x50, 0x35, 0x31, 0x31, 0x31, 0x38, 0x36, 0x46, 0x54,
		0x31, 0x30, 0x38, 0x30, 0x32, 0x33, 0x31, 0x50, 0x35, 0x37, 0x31, 0x31, 0x38, 0x36, 0x48, 0x53,
		0x31, 0x30, 0x35, 0x30, 0x32, 0x33, 0x32, 0x50, 0x36, 0x33, 0x30, 0x58, 0x37, 0x30, 0x2d, 0x32,
		0x30, 0x32, 0x31, 0x58, 0x37, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x50, 0x72, 0x65,
		0x73, 0x74, 0x69, 0x67, 0x69, 0x6f, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x69, 0x6f, 0x20,
		0x35, 0x35, 0x30, 0x30, 0x20, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x35, 0x35, 0x30, 0x30, 0x20, 0x44, 0x75, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x6f, 0x4d, 0x75, 0x6c, 0x74,
		0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x50, 0x53, 0x50, 0x35, 0x35, 0x35, 0x31,
		0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x53, 0x35, 0x50, 0x53, 0x50, 0x37, 0x35,
		0x39, 0x30, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x56, 0x37, 0x20, 0x4c, 0x54,
		0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x35, 0x31, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65,
		0x20, 0x53, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x34, 0x37, 0x30, 0x44, 0x55,
		0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x58, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x33, 0x30,
		0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x5a, 0x35, 0x50, 0x53, 0x50, 0x33, 0x35,
		0x33, 0x33, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x5a, 0x33, 0x50, 0x53, 0x50,
		0x35, 0x35, 0x31, 0x35, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x50, 0x35, 0x50,
		0x53, 0x50, 0x35, 0x35, 0x35, 0x32, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x52,
		0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x30, 0x36, 0x44, 0x55, 0x4f, 0x47,
		0x72, 0x61, 0x63, 0x65, 0x20, 0x51, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x31, 0x44, 0x55,
		0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50,
		0x37, 0x35, 0x30, 0x31, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x52, 0x37, 0x50,
		0x53, 0x50, 0x37, 0x35, 0x37, 0x30, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x50,
		0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x37, 0x32, 0x44, 0x55, 0x4f, 0x47,
		0x72, 0x61, 0x63, 0x65, 0x20, 0x42, 0x37, 0x50, 0x53, 0x50, 0x33, 0x35, 0x35, 0x32, 0x44, 0x55,
		0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x48, 0x33, 0x50, 0x53, 0x50, 0x35, 0x35, 0x32, 0x33, 0x44,
		0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x48, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50,
		0x33, 0x35, 0x31, 0x35, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x4d, 0x33, 0x20, 0x4c,
		0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x34, 0x39, 0x35, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65,
		0x20, 0x56, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33, 0x34, 0x44, 0x55,
		0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x4b, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35,
		0x35, 0x31, 0x33, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x44, 0x35, 0x20, 0x4c, 0x54,
		0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x32, 0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20,
		0x42, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x38, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65,
		0x20, 0x58, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x35, 0x33, 0x44, 0x55,
		0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x46, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35,
		0x35, 0x30, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x41, 0x35, 0x50, 0x53, 0x50,
		0x35, 0x35, 0x34, 0x35, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x45, 0x35, 0x20, 0x4c,
		0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x31, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65,
		0x20, 0x45, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x31, 0x44, 0x55,
		0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x47, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35,
		0x35, 0x32, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x47, 0x35, 0x20, 0x4c, 0x54,
		0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x35, 0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20,
		0x47, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x31, 0x30, 0x44, 0x55, 0x4f,
		0x4d, 0x75, 0x7a, 0x65, 0x20, 0x43, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x75, 0x7a, 0x65, 0x20,
		0x43, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65,
		0x20, 0x42, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a,
		0x65, 0x20, 0x46, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x37, 0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75,
		0x7a, 0x65, 0x20, 0x4a, 0x33, 0x50, 0x53, 0x50, 0x35, 0x35, 0x32, 0x34, 0x44, 0x55, 0x4f, 0x4d,
		0x75, 0x7a, 0x65, 0x20, 0x4a, 0x35, 0x50, 0x53, 0x50, 0x37, 0x35, 0x31, 0x31, 0x44, 0x55, 0x4f,
		0x4d, 0x75, 0x7a, 0x65, 0x20, 0x42, 0x37, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x34, 0x44, 0x55,
		0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x55, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x33, 0x44,
		0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x56, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x31, 0x36,
		0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x59, 0x41, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34,
		0x30, 0x36, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x59, 0x33, 0x50, 0x53, 0x50, 0x33,
		0x34, 0x32, 0x33, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x52, 0x33, 0x50, 0x53, 0x50,
		0x33, 0x34, 0x37, 0x31, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x51, 0x33, 0x20, 0x4c,
		0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x30, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65,
		0x20, 0x47, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33, 0x37, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a,
		0x65, 0x20, 0x4e, 0x56, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x32, 0x38, 0x44, 0x55, 0x4f, 0x57,
		0x69, 0x7a, 0x65, 0x20, 0x50, 0x58, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x32, 0x37, 0x44, 0x55,
		0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x4e, 0x4b, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x36, 0x38,
		0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x4f, 0x4b, 0x33, 0x53, 0x49, 0x4c, 0x56, 0x45,
		0x52, 0x20, 0x50, 0x4f, 0x53, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x20, 0x50, 0x4f, 0x53, 0x50,
		0x4d, 0x54, 0x33, 0x32, 0x37, 0x37, 0x5f, 0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47,
		0x50, 0x4d, 0x54, 0x34, 0x33, 0x33, 0x37, 0x5f, 0x33, 0x47, 0x53, 0x65, 0x65, 0x64, 0x20, 0x41,
		0x37, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x54, 0x33, 0x39, 0x39, 0x37, 0x5f, 0x57, 0x5f, 0x44, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x4b, 0x69, 0x64, 0x73, 0x50, 0x4d, 0x54, 0x33, 0x31, 0x30, 0x33, 0x5f,
		0x57, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x4d,
		0x54, 0x33, 0x31, 0x30, 0x34, 0x5f, 0x57, 0x69, 0x5f, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4b,
		0x69, 0x64, 0x73, 0x20, 0x55, 0x70, 0x50, 0x4d, 0x54, 0x34, 0x35, 0x31, 0x31, 0x5f, 0x34, 0x47,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x4d, 0x54,
		0x34, 0x32, 0x30, 0x38, 0x4e, 0x6f, 0x64, 0x65, 0x20, 0x41, 0x38, 0x20, 0x33, 0x47, 0x50, 0x4d,
		0x54, 0x34, 0x37, 0x37, 0x31, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x41, 0x31, 0x30, 0x20, 0x33, 0x47,
		0x50, 0x4d, 0x50, 0x37, 0x30, 0x37, 0x30, 0x43, 0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x34, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x20, 0x33, 0x47, 0x47, 0x65, 0x6f, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54,
		0x6f, 0x75, 0x72, 0x20, 0x33, 0x47, 0x65, 0x6f, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20,
		0x54, 0x6f, 0x75, 0x72, 0x20, 0x32, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24,
		0x32, 0x47, 0x50, 0x4d, 0x54, 0x33, 0x32, 0x38, 0x37, 0x5f, 0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74,
		0x69, 0x50, 0x61, 0x64, 0x20, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x20, 0x38, 0x2e, 0x30, 0x20,
		0x33, 0x47, 0x50, 0x4d, 0x54, 0x34, 0x32, 0x33, 0x38, 0x5f, 0x34, 0x47, 0x51, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64, 0x20, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x24,
		0x31, 0x20, 0x24, 0x32, 0x47, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47,
		0x4d, 0x75, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x58, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x54, 0x56, 0x24, 0x31, 0x43, 0x49, 0x53, 0x24, 0x32, 0x4d,
		0x75, 0x6c, 0x74, 0x69, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x24, 0x31, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x70, 0x61, 0x64, 0x50, 0x44, 0x2d, 0x33, 0x31, 0x32, 0x37, 0x4e, 0x43, 0x50, 0x44,
		0x2d, 0x33, 0x31, 0x32, 0x37, 0x50, 0x72, 0x69, 0x6d, 0x75, 0x78, 0x49, 0x4f, 0x58, 0x20, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x20, 0x36, 0x4b, 0x61, 0x70, 0x70, 0x61,
		0x20, 0x24, 0x31, 0x4b, 0x61, 0x70, 0x70, 0x61, 0x42, 0x65, 0x74, 0x61, 0x20, 0x32, 0x4f, 0x6d,
		0x65, 0x67, 0x61, 0x20, 0x36, 0x20, 0x34, 0x47, 0x55, 0x50, 0x5a, 0x6f, 0x6e, 0x64, 0x61, 0x20,
		0x34, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x6f, 0x20, 0x36, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x6f, 0x20,
		0x59, 0x50, 0x72, 0x69, 0x74, 0x6f, 0x6d, 0x4d, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x4d,
		0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4b, 0x37, 0x5f, 0x41, 0x31, 0x30, 0x31, 0x4b, 0x37,
		0x20, 0x41, 0x31, 0x30, 0x31, 0x4d, 0x31, 0x30, 0x5f, 0x41, 0x69, 0x72, 0x4d, 0x31, 0x30, 0x20,
		0x41, 0x69, 0x72, 0x4d, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x31, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x37, 0x5f, 0x45, 0x45, 0x41, 0x50, 0x37, 0x50, 0x37, 0x50, 0x52, 0x4f,
		0x54, 0x72, 0x6f, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x50, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x72,
		0x69, 0x78, 0x74, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x53, 0x63, 0x61, 0x6e, 0x50, 0x4c, 0x54, 0x24,
		0x31, 0x50, 0x4c, 0x54, 0x24, 0x31, 0x47, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x50, 0x72, 0x6f, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x20, 0x58, 0x4c,
		0x4d, 0x35, 0x30, 0x34, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x20, 0x58, 0x50, 0x72, 0x6f, 0x6c,
		0x6f, 0x67, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x72, 0x75, 0x6c, 0x79, 0x50, 0x75, 0x6e, 0x6f, 0x73,
		0x50, 0x75, 0x72, 0x69, 0x73, 0x6d, 0x4c, 0x69, 0x62, 0x72, 0x65, 0x6d, 0x20, 0x35, 0x51, 0x2d,
		0x42, 0x6f, 0x78, 0x51, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x51, 0x2e, 0x42, 0x65, 0x6c, 0x6c,
		0x51, 0x54, 0x41, 0x42, 0x31, 0x30, 0x45, 0x57, 0x51, 0x46, 0x58, 0x51, 0x4c, 0x69, 0x6e, 0x6b,
		0x51, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4a, 0x61, 0x7a, 0x7a, 0x58, 0x20, 0x4a, 0x53, 0x37,
		0x20, 0x50, 0x52, 0x4f, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x58, 0x20, 0x4a, 0x53, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x58, 0x20, 0x4a, 0x53, 0x24, 0x31, 0x4e, 0x6f, 0x69,
		0x72, 0x20, 0x41, 0x31, 0x20, 0x6c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x41, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x24, 0x31, 0x4e, 0x6f, 0x69, 0x72,
		0x20, 0x41, 0x36, 0x30, 0x30, 0x5a, 0x31, 0x32, 0x20, 0x50, 0x52, 0x4f, 0x4e, 0x6f, 0x69, 0x72,
		0x20, 0x5a, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x32, 0x20, 0x4e, 0x6f, 0x69, 0x72, 0x48,
		0x6f, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x4c, 0x54, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72,
		0x6f, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x49, 0x49, 0x58, 0x37, 0x30, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x33, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x55, 0x4e, 0x41, 0x20, 0x50, 0x52,
		0x4f, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x49, 0x54, 0x41, 0x20, 0x53, 0x56,
		0x69, 0x74, 0x61, 0x20, 0x53, 0x4e, 0x49, 0x43, 0x45, 0x20, 0x53, 0x4e, 0x69, 0x63, 0x65, 0x20,
		0x53, 0x56, 0x24, 0x31, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x69, 0x24, 0x31, 0x69, 0x20, 0x28,
		0x32, 0x30, 0x24, 0x32, 0x29, 0x69, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x24, 0x31, 0x29, 0x69,
		0x36, 0x69, 0x20, 0x32, 0x30, 0x32, 0x30, 0x69, 0x36, 0x69, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x69, 0x38, 0x69, 0x20, 0x50, 0x52, 0x4f, 0x69, 0x38, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x69,
		0x38, 0x69, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x51, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x49,
		0x38, 0x69, 0x69, 0x38, 0x69, 0x69, 0x36, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x4f, 0x4e,
		0x45, 0x69, 0x36, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x4f, 0x6e, 0x65, 0x69, 0x36, 0x20,
		0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x32, 0x30, 0x31, 0x37, 0x69, 0x36, 0x20, 0x4d, 0x65, 0x74,
		0x61, 0x6c, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x48,
		0x44, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x52,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x20, 0x24,
		0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61,
		0x20, 0x32, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x32, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x74, 0x72, 0x69, 0x70, 0x6c,
		0x65, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x54, 0x72, 0x69, 0x70, 0x6c, 0x65,
		0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x73, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x53, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x51, 0x20,
		0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x52, 0x4f, 0x51, 0x20, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x20, 0x49, 0x6e, 0x66,
		0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x69, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x47, 0x4c, 0x69, 0x56, 0x32, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x24, 0x31, 0x20, 0x54,
		0x61, 0x62, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x51, 0x54, 0x45, 0x43,
		0x48, 0x51, 0x4d, 0x50, 0x20, 0x24, 0x31, 0x51, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x51, 0x37, 0x53,
		0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x37, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51,
		0x37, 0x53, 0x35, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x37, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x20,
		0x34, 0x47, 0x51, 0x38, 0x53, 0x35, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x32, 0x51, 0x38, 0x20, 0x35,
		0x2e, 0x35, 0x22, 0x20, 0x34, 0x47, 0x51, 0x38, 0x53, 0x36, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x38,
		0x20, 0x36, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x38, 0x53, 0x35, 0x49, 0x4e, 0x34, 0x47,
		0x50, 0x51, 0x38, 0x20, 0x35, 0x2e, 0x31, 0x22, 0x20, 0x34, 0x47, 0x51, 0x39, 0x53, 0x35, 0x49,
		0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x39, 0x53,
		0x35, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x20, 0x34, 0x47,
		0x51, 0x31, 0x30, 0x53, 0x35, 0x33, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x31, 0x30, 0x20, 0x35, 0x2e,
		0x33, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x53, 0x35, 0x37, 0x49, 0x4e, 0x34, 0x47, 0x51,
		0x31, 0x30, 0x20, 0x35, 0x2e, 0x37, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x20, 0x35, 0x2e,
		0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x53, 0x36, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x31,
		0x30, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x36, 0x54, 0x37, 0x49, 0x4e, 0x51,
		0x37, 0x54, 0x31, 0x30, 0x49, 0x4e, 0x50, 0x51, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x51,
		0x38, 0x54, 0x31, 0x30, 0x49, 0x4e, 0x51, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x51, 0x39,
		0x54, 0x37, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47,
		0x51, 0x39, 0x54, 0x39, 0x49, 0x4e, 0x51, 0x39, 0x20, 0x39, 0x2e, 0x30, 0x22, 0x51, 0x39, 0x54,
		0x31, 0x30, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x34,
		0x47, 0x51, 0x54, 0x32, 0x31, 0x31, 0x30, 0x31, 0x51, 0x31, 0x2d, 0x32, 0x31, 0x39, 0x37, 0x52,
		0x2d, 0x32, 0x39, 0x37, 0x52, 0x32, 0x51, 0x6e, 0x65, 0x74, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x48, 0x79, 0x6e, 0x65, 0x78,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x6b, 0x20, 0x4b, 0x31, 0x48,
		0x79, 0x6e, 0x65, 0x78, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x79, 0x6e, 0x65,
		0x78, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x76, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x41, 0x73, 0x74, 0x6f,
		0x6e, 0x20, 0x41, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x74, 0x65, 0x6b, 0x51, 0x75,
		0x61, 0x6e, 0x74, 0x75, 0x6d, 0x4c, 0x69, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x6f, 0x20,
		0x32, 0x4d, 0x55, 0x56, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x55, 0x56, 0x20, 0x55, 0x70, 0x55, 0x70,
		0x51, 0x2d, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x6f, 0x20, 0x24, 0x31, 0x51, 0x2d, 0x50, 0x75, 0x6c,
		0x73, 0x65, 0x20, 0x37, 0x30, 0x4d, 0x51, 0x2d, 0x57, 0x61, 0x76, 0x65, 0x20, 0x24, 0x31, 0x51,
		0x75, 0x61, 0x74, 0x72, 0x6f, 0x51, 0x75, 0x62, 0x6f, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x76, 0x61,
		0x58, 0x36, 0x36, 0x38, 0x51, 0x75, 0x65, 0x63, 0x68, 0x75, 0x61, 0x51, 0x75, 0x65, 0x63, 0x68,
		0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x52, 0x41, 0x50, 0x54, 0x4f, 0x52,
		0x52, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x69, 0x70, 0x75, 0x73, 0x54, 0x69, 0x6e, 0x6b,
		0x75, 0x51, 0x75, 0x6d, 0x6f, 0x56, 0x65, 0x67, 0x61, 0x20, 0x24, 0x31, 0x59, 0x6f, 0x6f, 0x64,
		0x61, 0x53, 0x69, 0x72, 0x69, 0x75, 0x73, 0x20, 0x24, 0x31, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20,
		0x24, 0x31, 0x51, 0x77, 0x61, 0x72, 0x65, 0x54, 0x42, 0x2d, 0x39, 0x37, 0x31, 0x38, 0x51, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x54, 0x42, 0x2d, 0x31, 0x33, 0x38, 0x30, 0x51, 0x50, 0x72, 0x6f, 0x20,
		0x34, 0x54, 0x42, 0x2d, 0x31, 0x33, 0x31, 0x37, 0x51, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x54, 0x42,
		0x2d, 0x31, 0x35, 0x31, 0x37, 0x44, 0x54, 0x61, 0x62, 0x62, 0x79, 0x52, 0x2d, 0x54, 0x56, 0x42,
		0x6f, 0x78, 0x20, 0x24, 0x31, 0x52, 0x43, 0x41, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73,
		0x52, 0x43, 0x54, 0x36, 0x35, 0x31, 0x33, 0x57, 0x38, 0x37, 0x47, 0x61, 0x6c, 0x69, 0x6c, 0x65,
		0x6f, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x56, 0x6f, 0x79, 0x61, 0x67,
		0x65, 0x72, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x72, 0x20, 0x49,
		0x49, 0x49, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x37, 0x37, 0x33, 0x57, 0x32,
		0x32, 0x42, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x72, 0x20, 0x49, 0x49, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x52, 0x43, 0x54, 0x36,
		0x32, 0x30, 0x33, 0x57, 0x34, 0x36, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x45, 0x64,
		0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x49, 0x49, 0x52, 0x43, 0x54, 0x36, 0x41, 0x30, 0x36, 0x50,
		0x32, 0x32, 0x45, 0x6e, 0x64, 0x65, 0x61, 0x76, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22,
		0x20, 0x48, 0x44, 0x56, 0x69, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30,
		0x2e, 0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x36, 0x30, 0x33, 0x57, 0x34, 0x37, 0x4d, 0x37, 0x56,
		0x69, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x52, 0x43,
		0x54, 0x36, 0x36, 0x31, 0x33, 0x57, 0x32, 0x33, 0x50, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x31, 0x2e, 0x36, 0x22, 0x52, 0x43, 0x54, 0x24, 0x31, 0x52, 0x43, 0x24,
		0x31, 0x52, 0x45, 0x44, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x67, 0x65, 0x6e, 0x20, 0x4f, 0x6e, 0x65,
		0x52, 0x45, 0x47, 0x41, 0x4c, 0x52, 0x49, 0x4d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72,
		0x72, 0x79, 0x20, 0x44, 0x54, 0x45, 0x4b, 0x36, 0x30, 0x4b, 0x45, 0x59, 0x6f, 0x6e, 0x65, 0x42,
		0x42, 0x43, 0x31, 0x30, 0x30, 0x2d, 0x31, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x45, 0x59,
		0x32, 0x20, 0x4c, 0x45, 0x4b, 0x45, 0x59, 0x32, 0x42, 0x42, 0x46, 0x31, 0x30, 0x30, 0x2d, 0x38,
		0x4b, 0x45, 0x59, 0x32, 0x20, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x42, 0x42, 0x46, 0x31, 0x30,
		0x30, 0x2d, 0x39, 0x4b, 0x45, 0x59, 0x32, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x42, 0x47,
		0x31, 0x30, 0x30, 0x2d, 0x31, 0x42, 0x42, 0x48, 0x31, 0x30, 0x30, 0x2d, 0x31, 0x45, 0x76, 0x6f,
		0x6c, 0x76, 0x65, 0x20, 0x58, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20,
		0x50, 0x72, 0x69, 0x76, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x44,
		0x54, 0x45, 0x4b, 0x35, 0x30, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20,
		0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x62, 0x6f, 0x6f, 0x6b, 0x39, 0x33, 0x30, 0x30, 0x43, 0x75, 0x72, 0x76, 0x65, 0x20, 0x33,
		0x47, 0x20, 0x39, 0x33, 0x30, 0x30, 0x43, 0x75, 0x72, 0x76, 0x65, 0x20, 0x24, 0x31, 0x39, 0x36,
		0x33, 0x30, 0x54, 0x6f, 0x75, 0x72, 0x20, 0x39, 0x36, 0x33, 0x30, 0x39, 0x37, 0x32, 0x30, 0x54,
		0x6f, 0x72, 0x63, 0x68, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72,
		0x79, 0x52, 0x4f, 0x41, 0x44, 0x4d, 0x41, 0x58, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x75, 0x73, 0x20,
		0x51, 0x75, 0x61, 0x64, 0x20, 0x37, 0x52, 0x4f, 0x69, 0x4b, 0x52, 0x54, 0x20, 0x50, 0x72, 0x6f,
		0x6a, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x63, 0x6b, 0x20, 0x24, 0x31, 0x70, 0x6f, 0x70, 0x70,
		0x65, 0x72, 0x32, 0x50, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x20, 0x32, 0x52, 0x61, 0x6b, 0x75, 0x74,
		0x65, 0x6e, 0x5a, 0x52, 0x30, 0x31, 0x42, 0x69, 0x67, 0x33, 0x39, 0x31, 0x37, 0x4a, 0x52, 0x42,
		0x69, 0x67, 0x20, 0x53, 0x50, 0x37, 0x31, 0x30, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x33, 0x33, 0x30,
		0x43, 0x33, 0x33, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x52, 0x61, 0x6d, 0x6f, 0x73, 0x4d, 0x4f,
		0x53, 0x31, 0x6d, 0x61, 0x78, 0x4d, 0x4f, 0x53, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x57, 0x32, 0x32,
		0x50, 0x52, 0x4f, 0x20, 0x33, 0x47, 0x57, 0x32, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47,
		0x52, 0x61, 0x73, 0x70, 0x62, 0x65, 0x72, 0x72, 0x79, 0x52, 0x61, 0x76, 0x6f, 0x7a, 0x52, 0x61,
		0x79, 0x6c, 0x61, 0x6e, 0x64, 0x7a, 0x58, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x50, 0x36, 0x30,
		0x30, 0x30, 0x58, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x36, 0x30, 0x30, 0x30, 0x52, 0x61,
		0x7a, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x52, 0x65, 0x61, 0x63, 0x68, 0x52,
		0x65, 0x61, 0x64, 0x62, 0x6f, 0x79, 0x43, 0x31, 0x38, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x24, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x65, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f,
		0x20, 0x35, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x30, 0x30, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20,
		0x35, 0x20, 0x53, 0x45, 0x51, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x52,
		0x4d, 0x58, 0x33, 0x36, 0x36, 0x33, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x31, 0x38,
		0x32, 0x37, 0x33, 0x69, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x31, 0x39, 0x39, 0x33,
		0x58, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x31, 0x37, 0x51, 0x32, 0x20,
		0x35, 0x47, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x37, 0x33, 0x51, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52,
		0x4d, 0x58, 0x32, 0x32, 0x30, 0x35, 0x51, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52,
		0x4d, 0x58, 0x33, 0x31, 0x36, 0x31, 0x51, 0x33, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x34,
		0x36, 0x32, 0x51, 0x33, 0x74, 0x52, 0x4d, 0x58, 0x33, 0x33, 0x37, 0x32, 0x51, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x52, 0x4d, 0x58, 0x33, 0x34, 0x37, 0x38, 0x51, 0x35, 0x52, 0x4d, 0x58, 0x33, 0x35,
		0x37, 0x34, 0x51, 0x35, 0x69, 0x58, 0x37, 0x20, 0x35, 0x47, 0x58, 0x37, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x58, 0x54, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x35, 0x69, 0x52, 0x4d, 0x58, 0x31,
		0x39, 0x32, 0x39, 0x35, 0x73, 0x36, 0x69, 0x52, 0x4d, 0x58, 0x32, 0x30, 0x30, 0x32, 0x36, 0x53,
		0x36, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x30, 0x33, 0x37, 0x49, 0x52, 0x4d,
		0x58, 0x32, 0x31, 0x37, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x31, 0x31, 0x35, 0x58, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69,
		0x6f, 0x6e, 0x52, 0x4d, 0x58, 0x33, 0x30, 0x38, 0x31, 0x52, 0x4d, 0x58, 0x33, 0x30, 0x38, 0x35,
		0x38, 0x69, 0x52, 0x4d, 0x58, 0x33, 0x33, 0x38, 0x31, 0x38, 0x73, 0x52, 0x4d, 0x58, 0x33, 0x32,
		0x34, 0x31, 0x38, 0x20, 0x35, 0x47, 0x39, 0x69, 0x52, 0x4d, 0x58, 0x33, 0x36, 0x31, 0x32, 0x39,
		0x69, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x35, 0x32, 0x31, 0x39, 0x20, 0x35, 0x47, 0x39,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47,
		0x52, 0x4d, 0x58, 0x33, 0x36, 0x31, 0x37, 0x31, 0x30, 0x73, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58,
		0x33, 0x37, 0x34, 0x31, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x4d,
		0x58, 0x33, 0x37, 0x34, 0x30, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x4d, 0x58, 0x33,
		0x37, 0x37, 0x31, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x35, 0x53, 0x43, 0x31,
		0x31, 0x43, 0x31, 0x32, 0x43, 0x31, 0x35, 0x43, 0x31, 0x35, 0x20, 0x51, 0x75, 0x61, 0x6c, 0x63,
		0x6f, 0x6d, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x31, 0x37, 0x43, 0x32,
		0x30, 0x43, 0x32, 0x31, 0x43, 0x32, 0x31, 0x59, 0x43, 0x32, 0x35, 0x43, 0x32, 0x35, 0x73, 0x43,
		0x32, 0x35, 0x59, 0x43, 0x33, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x36, 0x39, 0x30, 0x43, 0x33, 0x30,
		0x73, 0x43, 0x33, 0x33, 0x43, 0x33, 0x35, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x31, 0x30, 0x52, 0x4d,
		0x58, 0x33, 0x38, 0x33, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x36, 0x30, 0x43, 0x35, 0x33, 0x52,
		0x4d, 0x58, 0x33, 0x32, 0x33, 0x31, 0x43, 0x31, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x52, 0x4d, 0x58, 0x33, 0x37, 0x30, 0x39, 0x47, 0x54, 0x20, 0x33, 0x47, 0x54, 0x20, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x47, 0x54, 0x20, 0x32, 0x52, 0x4d, 0x58, 0x33, 0x35, 0x35, 0x31, 0x47, 0x54,
		0x20, 0x32, 0x20, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x73, 0x74,
		0x65, 0x72, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x32,
		0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33,
		0x20, 0x31, 0x35, 0x30, 0x57, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x54, 0x47, 0x54,
		0x20, 0x4e, 0x65, 0x6f, 0x20, 0x32, 0x54, 0x47, 0x54, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
		0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x46,
		0x6c, 0x61, 0x73, 0x68, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x52, 0x4d, 0x58, 0x32, 0x31, 0x39, 0x33, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x32, 0x30, 0x52,
		0x4d, 0x58, 0x32, 0x30, 0x35, 0x30, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x32, 0x30, 0x41, 0x52,
		0x4d, 0x58, 0x33, 0x31, 0x37, 0x31, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x33, 0x30, 0x41, 0x52,
		0x4d, 0x58, 0x32, 0x31, 0x35, 0x36, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x33, 0x30, 0x52, 0x4d,
		0x58, 0x33, 0x32, 0x34, 0x32, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x33, 0x30, 0x20, 0x35, 0x47,
		0x52, 0x4d, 0x58, 0x33, 0x34, 0x33, 0x30, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x41,
		0x52, 0x4d, 0x58, 0x33, 0x32, 0x38, 0x36, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x52,
		0x4d, 0x58, 0x33, 0x35, 0x37, 0x32, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x20, 0x35,
		0x47, 0x52, 0x4d, 0x58, 0x33, 0x33, 0x39, 0x35, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x33, 0x33, 0x39, 0x36, 0x4e, 0x61, 0x72, 0x7a, 0x6f,
		0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20,
		0x35, 0x30, 0x41, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x33, 0x35,
		0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x69, 0x52, 0x4d, 0x58, 0x33, 0x35, 0x30, 0x36,
		0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x69, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x58,
		0x35, 0x30, 0x20, 0x35, 0x47, 0x58, 0x35, 0x30, 0x74, 0x20, 0x35, 0x47, 0x58, 0x35, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x58, 0x35, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x58, 0x33, 0x20, 0x53, 0x75,
		0x70, 0x65, 0x72, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x52, 0x4d, 0x58, 0x32, 0x30, 0x38, 0x33, 0x51,
		0x33, 0x73, 0x56, 0x35, 0x20, 0x35, 0x47, 0x56, 0x33, 0x20, 0x35, 0x47, 0x56, 0x31, 0x31, 0x20,
		0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x31, 0x32, 0x35, 0x56, 0x31, 0x31, 0x73, 0x20, 0x35, 0x47,
		0x56, 0x31, 0x33, 0x20, 0x35, 0x47, 0x56, 0x31, 0x35, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33,
		0x35, 0x37, 0x31, 0x56, 0x32, 0x33, 0x52, 0x4d, 0x58, 0x33, 0x34, 0x37, 0x35, 0x56, 0x32, 0x35,
		0x52, 0x4d, 0x58, 0x32, 0x32, 0x30, 0x32, 0x47, 0x54, 0x20, 0x35, 0x47, 0x50, 0x61, 0x64, 0x50,
		0x61, 0x64, 0x20, 0x58, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x34, 0x4b, 0x20, 0x47,
		0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x52, 0x65,
		0x64, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x64, 0x62, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x64, 0x66,
		0x6f, 0x78, 0x57, 0x69, 0x7a, 0x70, 0x61, 0x64, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x72, 0x20,
		0x56, 0x38, 0x52, 0x65, 0x64, 0x77, 0x61, 0x79, 0x72, 0x65, 0x64, 0x77, 0x61, 0x79, 0x31, 0x30,
		0x5f, 0x6c, 0x69, 0x74, 0x65, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x65, 0x64, 0x77,
		0x61, 0x79, 0x37, 0x5f, 0x70, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x77, 0x61, 0x79, 0x5f, 0x37, 0x52,
		0x65, 0x65, 0x64, 0x65, 0x72, 0x41, 0x38, 0x69, 0x2d, 0x51, 0x32, 0x41, 0x38, 0x69, 0x20, 0x51,
		0x32, 0x4d, 0x31, 0x30, 0x53, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x31, 0x30, 0x53, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x37, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d,
		0x37, 0x20, 0x47, 0x6f, 0x24, 0x31, 0x20, 0x47, 0x6f, 0x4d, 0x31, 0x30, 0x20, 0x42, 0x6c, 0x75,
		0x65, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45,
		0x50, 0x31, 0x32, 0x43, 0x75, 0x72, 0x76, 0x65, 0x50, 0x31, 0x32, 0x20, 0x43, 0x75, 0x72, 0x76,
		0x65, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x4c,
		0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x50, 0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75, 0x65, 0x5f, 0x4d, 0x61, 0x6b, 0x73, 0x50, 0x31,
		0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x6b, 0x73, 0x50, 0x31, 0x33, 0x5f, 0x42,
		0x6c, 0x75, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61,
		0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x31, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c,
		0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50,
		0x72, 0x6f, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x24,
		0x31, 0x29, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x24, 0x31, 0x29, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d,
		0x61, 0x78, 0x50, 0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75, 0x65, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c,
		0x75, 0x65, 0x53, 0x31, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x36, 0x34, 0x47, 0x42, 0x53, 0x31,
		0x39, 0x20, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x6c, 0x4e, 0x41, 0x54, 0x52, 0x65, 0x6d, 0x64, 0x75,
		0x6e, 0x52, 0x44, 0x24, 0x31, 0x52, 0x65, 0x76, 0x6f, 0x52, 0x65, 0x76, 0x6f, 0x5f, 0x59, 0x6f,
		0x75, 0x70, 0x6c, 0x75, 0x73, 0x59, 0x6f, 0x75, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x76,
		0x6f, 0x6d, 0x6f, 0x76, 0x69, 0x6c, 0x53, 0x36, 0x35, 0x32, 0x33, 0x53, 0x32, 0x31, 0x52, 0x69,
		0x63, 0x6f, 0x68, 0x72, 0x69, 0x63, 0x6f, 0x68, 0x5f, 0x72, 0x69, 0x63, 0x6f, 0x68, 0x5f, 0x6d,
		0x66, 0x70, 0x61, 0x70, 0x6e, 0x6c, 0x4d, 0x46, 0x50, 0x52, 0x69, 0x6b, 0x6f, 0x6d, 0x61, 0x67,
		0x69, 0x63, 0x4d, 0x4b, 0x24, 0x31, 0x52, 0x69, 0x6e, 0x6e, 0x6f, 0x52, 0x69, 0x74, 0x6d, 0x69,
		0x78, 0x52, 0x4d, 0x44, 0x2d, 0x24, 0x31, 0x52, 0x4d, 0x50, 0x2d, 0x24, 0x31, 0x52, 0x69, 0x74,
		0x7a, 0x76, 0x69, 0x76, 0x61, 0x53, 0x35, 0x30, 0x30, 0x43, 0x52, 0x69, 0x76, 0x69, 0x65, 0x72,
		0x61, 0x52, 0x69, 0x76, 0x6f, 0x53, 0x54, 0x4f, 0x52, 0x4d, 0x5f, 0x53, 0x38, 0x70, 0x6c, 0x75,
		0x73, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x53, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x54,
		0x4f, 0x52, 0x4d, 0x5f, 0x53, 0x38, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x53, 0x38, 0x50, 0x68,
		0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x50, 0x5a, 0x24, 0x31, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f,
		0x6d, 0x20, 0x52, 0x58, 0x24, 0x31, 0x52, 0x68, 0x79, 0x74, 0x68, 0x6d, 0x20, 0x52, 0x58, 0x24,
		0x31, 0x52, 0x69, 0x7a, 0x7a, 0x65, 0x6e, 0x52, 0x6f, 0x61, 0x64, 0x72, 0x6f, 0x76, 0x65, 0x72,
		0x52, 0x6f, 0x61, 0x64, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x41,
		0x6e, 0x20, 0x53, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x41, 0x6e, 0x20, 0x53, 0x52, 0x6f, 0x61, 0x6d,
		0x20, 0x43, 0x61, 0x74, 0x52, 0x6f, 0x6b, 0x69, 0x74, 0x49, 0x4f, 0x20, 0x50, 0x72, 0x6f, 0x49,
		0x4f, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x4f, 0x20, 0x33, 0x44, 0x52, 0x6f, 0x6b, 0x75,
		0x33, 0x39, 0x33, 0x30, 0x58, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6b, 0x75,
		0x34, 0x36, 0x34, 0x30, 0x58, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61,
		0x6c, 0x20, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f,
		0x6d, 0x62, 0x69, 0x63, 0x61, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b,
		0x20, 0x34, 0x4b, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x20, 0x34, 0x4b, 0x20, 0x76, 0x30, 0x31,
		0x52, 0x6f, 0x73, 0x73, 0x26, 0x4d, 0x6f, 0x6f, 0x72, 0x52, 0x4d, 0x24, 0x31, 0x2d, 0x24, 0x32,
		0x52, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x61, 0x64, 0x50, 0x72, 0x6f,
		0x20, 0x51, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x6b, 0x79, 0x20, 0x37, 0x2e, 0x38, 0x35,
		0x22, 0x20, 0x33, 0x47, 0x24, 0x31, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x20, 0x33, 0x47, 0x52,
		0x6f, 0x79, 0x51, 0x75, 0x65, 0x65, 0x6e, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x2d, 0x52, 0x51,
		0x34, 0x35, 0x31, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x52, 0x6f, 0x79, 0x6f, 0x6c, 0x65, 0x46,
		0x6c, 0x65, 0x78, 0x50, 0x61, 0x69, 0x20, 0x32, 0x46, 0x6c, 0x65, 0x78, 0x50, 0x61, 0x69, 0x52,
		0x75, 0x67, 0x47, 0x65, 0x61, 0x72, 0x52, 0x47, 0x37, 0x32, 0x35, 0x52, 0x75, 0x67, 0x67, 0x65,
		0x54, 0x65, 0x63, 0x68, 0x52, 0x75, 0x67, 0x67, 0x65, 0x78, 0x52, 0x68, 0x69, 0x6e, 0x6f, 0x20,
		0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x69, 0x6f, 0x4d, 0x36, 0x37, 0x31, 0x4d, 0x34, 0x43,
		0x6f, 0x6c, 0x61, 0x20, 0x34, 0x47, 0x52, 0x75, 0x6e, 0x62, 0x6f, 0x46, 0x31, 0x2d, 0x54, 0x54,
		0x52, 0x75, 0x6e, 0x62, 0x6f, 0x50, 0x32, 0x52, 0x75, 0x70, 0x61, 0x50, 0x79, 0x72, 0x61, 0x6d,
		0x69, 0x64, 0x20, 0x41, 0x35, 0x58, 0x52, 0x79, 0x74, 0x65, 0x53, 0x2d, 0x54, 0x45, 0x4c, 0x4c,
		0x53, 0x32, 0x54, 0x65, 0x6c, 0x53, 0x41, 0x4e, 0x59, 0x53, 0x41, 0x4e, 0x59, 0x20, 0x56, 0x38,
		0x53, 0x41, 0x4e, 0x59, 0x20, 0x56, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x38, 0x20, 0x50, 0x72,
		0x6f, 0x53, 0x45, 0x42, 0x42, 0x45, 0x53, 0x45, 0x45, 0x57, 0x4f, 0x53, 0x45, 0x4d, 0x50, 0x20,
		0x54, 0x43, 0x4c, 0x4c, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x4f, 0x21, 0x20, 0x33, 0x43,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x4f, 0x21, 0x20, 0x33, 0x43, 0x53, 0x46, 0x52, 0x53, 0x74,
		0x61, 0x72, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x58, 0x74, 0x72,
		0x65, 0x6d, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x53, 0x74,
		0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x33, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61,
		0x69, 0x6c, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x24, 0x31,
		0x20, 0x24, 0x32, 0x47, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x24, 0x31,
		0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x41, 0x75, 0x72, 0x61, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x75, 0x72, 0x61, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x41, 0x75, 0x72, 0x61,
		0x53, 0x74, 0x61, 0x72, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x53,
		0x68, 0x69, 0x6e, 0x65, 0x20, 0x33, 0x53, 0x74, 0x61, 0x72, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x53,
		0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x36, 0x53, 0x74, 0x61, 0x72, 0x41,
		0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x34, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x69, 0x63,
		0x74, 0x20, 0x33, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x32,
		0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x54, 0x65,
		0x78, 0x74, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x54, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x72,
		0x4e, 0x61, 0x75, 0x74, 0x65, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x61, 0x75, 0x74, 0x65,
		0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x61, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72,
		0x54, 0x61, 0x62, 0x53, 0x47, 0x49, 0x4e, 0x58, 0x31, 0x30, 0x53, 0x4b, 0x20, 0x42, 0x72, 0x6f,
		0x61, 0x64, 0x62, 0x61, 0x6e, 0x64, 0x42, 0x48, 0x58, 0x2d, 0x55, 0x48, 0x32, 0x30, 0x30, 0x53,
		0x4b, 0x47, 0x53, 0x4b, 0x4b, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4c, 0x59, 0x4e, 0x58,
		0x5f, 0x4c, 0x55, 0x58, 0x45, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x4c, 0x75, 0x78, 0x65, 0x48, 0x79,
		0x70, 0x65, 0x72, 0x20, 0x58, 0x20, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x48, 0x59, 0x50, 0x45,
		0x52, 0x20, 0x58, 0x20, 0x42, 0x4c, 0x41, 0x44, 0x45, 0x20, 0x49, 0x49, 0x48, 0x79, 0x70, 0x65,
		0x72, 0x20, 0x58, 0x20, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x49, 0x49, 0x48, 0x59, 0x50, 0x45,
		0x52, 0x20, 0x58, 0x20, 0x42, 0x4c, 0x41, 0x44, 0x45, 0x48, 0x79, 0x70, 0x65, 0x72, 0x20, 0x58,
		0x20, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x45, 0x43, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x61, 0x62, 0x53, 0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x61, 0x62, 0x20, 0x53, 0x34,
		0x53, 0x4e, 0x41, 0x4d, 0x49, 0x53, 0x4f, 0x4c, 0x45, 0x50, 0x6f, 0x70, 0x20, 0x53, 0x24, 0x31,
		0x53, 0x4f, 0x4c, 0x4f, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x55, 0x35, 0x5f, 0x50,
		0x4c, 0x55, 0x53, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x20, 0x55, 0x35, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x55, 0x35, 0x49, 0x6e, 0x73, 0x70,
		0x69, 0x72, 0x65, 0x20, 0x55, 0x35, 0x53, 0x4f, 0x53, 0x48, 0x53, 0x6f, 0x73, 0x68, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x53, 0x50, 0x43, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x4f, 0x43,
		0x54, 0x41, 0x43, 0x4f, 0x52, 0x45, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x4f, 0x63,
		0x74, 0x61, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x20, 0x24, 0x31, 0x47, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20,
		0x24, 0x31, 0x47, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x52,
		0x41, 0x56, 0x49, 0x54, 0x59, 0x20, 0x50, 0x52, 0x4f, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79,
		0x20, 0x50, 0x72, 0x6f, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x20, 0x53, 0x45, 0x47, 0x72,
		0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x53, 0x45, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x2d,
		0x32, 0x2d, 0x4d, 0x41, 0x58, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x32, 0x20, 0x4d,
		0x61, 0x78, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x32, 0x47, 0x6c, 0x6f, 0x77, 0x20,
		0x39, 0x2e, 0x37, 0x22, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x79, 0x65, 0x61, 0x72, 0x4c, 0x37, 0x30,
		0x5f, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x37, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x4c, 0x4f,
		0x57, 0x20, 0x37, 0x46, 0x6c, 0x6f, 0x77, 0x20, 0x37, 0x4c, 0x61, 0x69, 0x6b, 0x61, 0x53, 0x50,
		0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20,
		0x4c, 0x49, 0x54, 0x45, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x50,
		0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x4d, 0x41, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x4d, 0x61, 0x78, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x53, 0x50, 0x43,
		0x20, 0x47, 0x45, 0x4e, 0x20, 0x4d, 0x41, 0x58, 0x47, 0x65, 0x6e, 0x20, 0x4d, 0x61, 0x78, 0x53,
		0x50, 0x43, 0x20, 0x47, 0x45, 0x4e, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x47, 0x65, 0x6e, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x53, 0x50, 0x43, 0x20, 0x47, 0x45, 0x4e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47,
		0x65, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x50, 0x43, 0x20, 0x47, 0x45, 0x4e, 0x47, 0x65,
		0x6e, 0x53, 0x50, 0x43, 0x5f, 0x41, 0x4c, 0x49, 0x45, 0x4e, 0x5f, 0x53, 0x54, 0x49, 0x43, 0x4b,
		0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x53, 0x50, 0x43, 0x5f, 0x41,
		0x4c, 0x49, 0x45, 0x4e, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x53, 0x50, 0x55, 0x52, 0x54, 0x4b, 0x37,
		0x30, 0x30, 0x53, 0x51, 0x4f, 0x4f, 0x4c, 0x56, 0x24, 0x31, 0x53, 0x53, 0x4b, 0x59, 0x53, 0x54,
		0x46, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x46, 0x72, 0x61, 0x63, 0x74, 0x61, 0x6c, 0x4f,
		0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x45, 0x52, 0x49, 0x41, 0x4c,
		0x20, 0x50, 0x4c, 0x55, 0x53, 0x41, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x41, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x41, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x4c, 0x4f, 0x43,
		0x4b, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x20, 0x33, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x42, 0x6c, 0x6f, 0x63,
		0x6b, 0x20, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x20, 0x33, 0x42,
		0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x33, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x20, 0x47, 0x4f, 0x42, 0x6c,
		0x6f, 0x63, 0x6b, 0x20, 0x47, 0x6f, 0x53, 0x4c, 0x41, 0x59, 0x20, 0x49, 0x49, 0x53, 0x6c, 0x61,
		0x79, 0x20, 0x49, 0x49, 0x4a, 0x6f, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x54, 0x47, 0x20, 0x54,
		0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x53, 0x54, 0x4b, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x38, 0x4c,
		0x69, 0x66, 0x65, 0x20, 0x37, 0x53, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x32, 0x65, 0x20, 0x50,
		0x6c, 0x75, 0x7a, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x32, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x53, 0x79, 0x6e, 0x63, 0x20, 0x35, 0x7a, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e,
		0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x20, 0x31, 0x53, 0x54, 0x52, 0x4f, 0x4e, 0x47, 0x4c,
		0x45, 0x41, 0x50, 0x2d, 0x53, 0x31, 0x53, 0x55, 0x4e, 0x57, 0x49, 0x4e, 0x44, 0x53, 0x6b, 0x79,
		0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x20, 0x33, 0x47, 0x53, 0x4b, 0x59, 0x20, 0x4b, 0x69, 0x64,
		0x73, 0x20, 0x37, 0x30, 0x53, 0x6b, 0x79, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x37, 0x30, 0x53,
		0x6b, 0x79, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x53, 0x55, 0x4e, 0x2d, 0x4c, 0x45, 0x44,
		0x24, 0x31, 0x53, 0x57, 0x49, 0x53, 0x53, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x53,
		0x43, 0x48, 0x4f, 0x4e, 0x20, 0x52, 0x39, 0x50, 0x52, 0x41, 0x24, 0x31, 0x5a, 0x55, 0x52, 0x37,
		0x32, 0x32, 0x4d, 0x5a, 0x37, 0x32, 0x20, 0x67, 0x6f, 0x5a, 0x55, 0x52, 0x24, 0x31, 0x53, 0x59,
		0x48, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x53, 0x61, 0x66, 0x61, 0x72, 0x69, 0x63,
		0x6f, 0x6d, 0x4e, 0x45, 0x4f, 0x4e, 0x5f, 0x52, 0x41, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x4e, 0x65,
		0x6f, 0x6e, 0x20, 0x52, 0x61, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x52,
		0x61, 0x79, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x45, 0x4f, 0x4e, 0x5f, 0x52, 0x41, 0x59,
		0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x52, 0x61, 0x79, 0x4e, 0x45, 0x4f, 0x4e, 0x20, 0x52, 0x41, 0x59,
		0x20, 0x32, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x52, 0x61, 0x79, 0x20, 0x32, 0x4e, 0x45, 0x4f, 0x4e,
		0x5f, 0x4e, 0x4f, 0x56, 0x41, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x4e, 0x45,
		0x4f, 0x4e, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4e, 0x45, 0x4f, 0x4e, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x53, 0x46, 0x43, 0x53,
		0x54, 0x42, 0x32, 0x4c, 0x49, 0x54, 0x45, 0x53, 0x54, 0x42, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x53, 0x61, 0x67, 0x65, 0x6d, 0x44, 0x49, 0x33, 0x38, 0x34, 0x5f, 0x55, 0x48, 0x44, 0x5f, 0x54,
		0x4b, 0x43, 0x44, 0x49, 0x33, 0x38, 0x34, 0x44, 0x49, 0x57, 0x33, 0x35, 0x30, 0x5f, 0x54, 0x50,
		0x44, 0x49, 0x57, 0x33, 0x35, 0x30, 0x53, 0x61, 0x69, 0x65, 0x74, 0x53, 0x69, 0x63, 0x75, 0x72,
		0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x47, 0x54, 0x2d, 0x42, 0x39, 0x31,
		0x35, 0x30, 0x48, 0x6f, 0x6d, 0x65, 0x20, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x4d, 0x54, 0x2d, 0x45,
		0x35, 0x30, 0x31, 0x35, 0x4d, 0x61, 0x70, 0x6c, 0x65, 0x20, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x31, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x31, 0x38, 0x2e, 0x34, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32,
		0x20, 0x37, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20,
		0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x20, 0x34, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x33, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x37, 0x22, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x37, 0x22, 0x53, 0x43, 0x2d, 0x30, 0x31, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x37, 0x22, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x76, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x32, 0x30, 0x31, 0x34, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x20, 0x32, 0x30, 0x31, 0x34, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f,
		0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x20, 0x32, 0x30, 0x31, 0x34, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x52,
		0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x20, 0x31,
		0x32, 0x2e, 0x32, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20,
		0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x36, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20,
		0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29,
		0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41,
		0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x31, 0x30,
		0x2e, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x34,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x38, 0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x38, 0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22,
		0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41,
		0x38, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x34, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50,
		0x65, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x34, 0x20,
		0x31, 0x30, 0x2e, 0x35, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x53, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x53, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20,
		0x31, 0x30, 0x2e, 0x35, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x53, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x31,
		0x30, 0x2e, 0x34, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x31,
		0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x20, 0x31, 0x31, 0x2e,
		0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x31, 0x34, 0x2e, 0x36, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x56, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20, 0x2b, 0x20, 0x33, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x34, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x41, 0x64, 0x76, 0x61,
		0x6e, 0x63, 0x65, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x50, 0x52, 0x4f, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x38, 0x2e,
		0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20,
		0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x53, 0x32, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x32, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x53, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x32, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x33,
		0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x33, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x2b, 0x20, 0x31,
		0x32, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x37, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x2b, 0x20,
		0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x31, 0x31,
		0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x37, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x46, 0x45, 0x20, 0x31, 0x32,
		0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x37, 0x20, 0x46, 0x45, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x46, 0x45,
		0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x31,
		0x34, 0x2e, 0x36, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x38, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x2b, 0x20, 0x31, 0x32, 0x2e,
		0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x38, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x41, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x39, 0x2e, 0x37,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20,
		0x39, 0x2e, 0x36, 0x22, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x45, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x34, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69,
		0x76, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41,
		0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69,
		0x76, 0x65, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69,
		0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x51, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34,
		0x34, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x56, 0x37, 0x30, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x53, 0x4d, 0x2d, 0x52, 0x33, 0x35, 0x30, 0x30, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x46, 0x69, 0x74, 0x53, 0x4d, 0x2d,
		0x52, 0x33, 0x38, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72,
		0x20, 0x32, 0x53, 0x53, 0x4d, 0x2d, 0x52, 0x33, 0x38, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x32, 0x20, 0x4e, 0x65, 0x6f, 0x53, 0x4d, 0x2d, 0x52,
		0x38, 0x32, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x20, 0x4c, 0x54,
		0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x33, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57,
		0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34, 0x30,
		0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x33, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34,
		0x30, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x30, 0x30, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x36, 0x6d, 0x6d, 0x53,
		0x4d, 0x2d, 0x52, 0x38, 0x37, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x20, 0x34, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x35, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x35, 0x20, 0x34, 0x34,
		0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x39, 0x32, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x30, 0x6d, 0x6d,
		0x53, 0x4d, 0x2d, 0x52, 0x39, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x53, 0x4d,
		0x2d, 0x52, 0x38, 0x30, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x20, 0x34, 0x36, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x39,
		0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x20,
		0x34, 0x36, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52,
		0x38, 0x31, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x34, 0x32, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x35, 0x30, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69,
		0x76, 0x65, 0x53, 0x4d, 0x2d, 0x52, 0x36, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x34, 0x33, 0x6d, 0x6d, 0x53,
		0x4d, 0x2d, 0x52, 0x37, 0x36, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61,
		0x72, 0x20, 0x53, 0x33, 0x20, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x20, 0x34, 0x36,
		0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x32, 0x20, 0x34, 0x33, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52,
		0x37, 0x33, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53,
		0x32, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x35, 0x30, 0x47, 0x65, 0x61,
		0x72, 0x20, 0x53, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x33, 0x32, 0x47,
		0x65, 0x61, 0x72, 0x20, 0x53, 0x32, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37,
		0x36, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x33,
		0x20, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x20, 0x33, 0x33, 0x6d, 0x6d, 0x53, 0x4d,
		0x2d, 0x52, 0x37, 0x37, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72,
		0x20, 0x53, 0x33, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x20, 0x34, 0x31, 0x6d, 0x6d,
		0x53, 0x4d, 0x2d, 0x52, 0x38, 0x34, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x20, 0x33, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d,
		0x2d, 0x52, 0x38, 0x34, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x20, 0x33, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x35, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x20, 0x34, 0x31,
		0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x35, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x20, 0x34, 0x47, 0x47,
		0x65, 0x61, 0x72, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x20, 0x48,
		0x75, 0x62, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x34, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43,
		0x68, 0x61, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x59, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x70, 0x69, 0x63, 0x61, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x33, 0x4f, 0x6d, 0x6e, 0x69, 0x61, 0x20, 0x49, 0x49, 0x4f, 0x6d, 0x6e, 0x69, 0x61,
		0x20, 0x4d, 0x4f, 0x6d, 0x6e, 0x69, 0x61, 0x20, 0x57, 0x4f, 0x6d, 0x6e, 0x69, 0x61, 0x20, 0x37,
		0x46, 0x6f, 0x63, 0x75, 0x73, 0x20, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x46, 0x6f, 0x63, 0x75, 0x73,
		0x46, 0x6f, 0x63, 0x75, 0x73, 0x20, 0x53, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x4e, 0x65, 0x6f,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x63, 0x65, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x63, 0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65,
		0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x20, 0x44,
		0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34,
		0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x20, 0x48, 0x44, 0x20, 0x4c, 0x54,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x6d, 0x69,
		0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x6d,
		0x69, 0x6e, 0x69, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f,
		0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4c,
		0x54, 0x45, 0x48, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x42, 0x65, 0x61, 0x6d, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x42, 0x65, 0x61, 0x6d, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x57, 0x69, 0x64, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x69,
		0x64, 0x65, 0x20, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x69, 0x6e, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x69, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x45, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x45, 0x37, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x4c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x20, 0x47, 0x69, 0x6f, 0x72, 0x67, 0x69, 0x6f, 0x20, 0x41, 0x72, 0x6d, 0x61, 0x6e,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63,
		0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x20, 0x57, 0x69, 0x4d,
		0x41, 0x58, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x52, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x20, 0x49, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x33, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x34, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20,
		0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x77, 0x69, 0x74, 0x68,
		0x20, 0x4c, 0x54, 0x45, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x4c,
		0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x54, 0x41, 0x52, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x20, 0x4e, 0x65, 0x6f,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x20, 0x32, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x20, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x4b, 0x69,
		0x74, 0x74, 0x79, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x44, 0x55, 0x4f, 0x53,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x32, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x41, 0x4d, 0x45, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x4e, 0x46, 0x43, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x46, 0x41, 0x4d, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x41, 0x4d, 0x45, 0x20,
		0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x43, 0x45, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x43, 0x45, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72,
		0x65, 0x6e, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e,
		0x64, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x44, 0x55, 0x4f, 0x53,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x20, 0x32, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x20, 0x33, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x33, 0x20, 0x56, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x34, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x34, 0x73, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x46, 0x69, 0x65, 0x6c,
		0x64, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65,
		0x72, 0x20, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72,
		0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x61, 0x76, 0x65, 0x20, 0x49, 0x49, 0x57, 0x61, 0x76,
		0x65, 0x20, 0x33, 0x57, 0x61, 0x76, 0x65, 0x20, 0x59, 0x57, 0x61, 0x76, 0x65, 0x20, 0x4d, 0x57,
		0x61, 0x76, 0x65, 0x20, 0x35, 0x32, 0x35, 0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x33, 0x33, 0x57,
		0x61, 0x76, 0x65, 0x20, 0x35, 0x37, 0x38, 0x57, 0x61, 0x76, 0x65, 0x20, 0x37, 0x32, 0x33, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x7a, 0x6f, 0x6f, 0x6d, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4b, 0x20, 0x7a, 0x6f, 0x6f, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x56, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f,
		0x72, 0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f,
		0x72, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x45, 0x58, 0x50,
		0x52, 0x45, 0x53, 0x53, 0x20, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35,
		0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x2d, 0x53, 0x49, 0x4d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35,
		0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x2b, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x35, 0x20, 0x4b, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x36, 0x20, 0x45, 0x64, 0x67,
		0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x36, 0x20, 0x45, 0x64, 0x67, 0x65, 0x2b,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x37, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x37,
		0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x38,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x38, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x38, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x39, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x39, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x2b, 0x53,
		0x43, 0x2d, 0x30, 0x35, 0x4c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x2b,
		0x20, 0x4f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x45,
		0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30,
		0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x32, 0x30, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x32, 0x30, 0x20, 0x46, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20,
		0x46, 0x45, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x32, 0x30, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x2b, 0x20, 0x35,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x35, 0x47, 0x20, 0x55,
		0x57, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x46, 0x45, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x35, 0x47, 0x20, 0x4f, 0x6c, 0x79, 0x6d,
		0x70, 0x69, 0x63, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f,
		0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x2b, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x32, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x32, 0x32, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32,
		0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x33, 0x2b, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x32, 0x33, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x74,
		0x79, 0x6c, 0x65, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x44,
		0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x65,
		0x6e, 0x74, 0x75, 0x72, 0x61, 0x56, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x56, 0x69, 0x38, 0x36, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x76, 0x61, 0x6e, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x20, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x30, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x31, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x32, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x33, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x30, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x34, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x34, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x30, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x33, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x31, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x34, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x34, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x42, 0x75, 0x64,
		0x64, 0x79, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x32, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x34, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x35, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x32,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x32, 0x73, 0x20, 0x35,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x36, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x73, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x37, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x37, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x37, 0x31, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x20, 0x53, 0x74, 0x61, 0x72, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38,
		0x2b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x39, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x37, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x53, 0x74, 0x61, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x31, 0x30, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31,
		0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x31, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x32, 0x31, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32,
		0x30, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x30, 0x73, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32,
		0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x30, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x33, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x33, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x34, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x32,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x30, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x35, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x31, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x33, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x35, 0x34, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x37, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x30, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x39, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x30, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x30, 0x32, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x46, 0x31, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x31, 0x33, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46,
		0x32, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x34, 0x31, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x34, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x46, 0x35, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x46, 0x36, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20,
		0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4c, 0x75, 0x6e, 0x61, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x20, 0x6d,
		0x69, 0x6e, 0x69, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x31, 0x20, 0x41, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x50, 0x75, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20,
		0x4f, 0x72, 0x62, 0x69, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x53, 0x6b, 0x79, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x50, 0x72,
		0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x41, 0x75, 0x72, 0x61, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x53, 0x74, 0x61, 0x72, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x35,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x35,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x35, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x36, 0x2b, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x34, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x34, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x38, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x37, 0x2b, 0x20, 0x28, 0x43, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37,
		0x20, 0x4d, 0x61, 0x78, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x53, 0x6b,
		0x79, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x44, 0x75, 0x6f, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x56, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37,
		0x20, 0x37, 0x53, 0x4d, 0x2d, 0x4a, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x2d, 0x4a, 0x38, 0x20,
		0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x38, 0x20, 0x50, 0x72, 0x6f,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x39, 0x20, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x39, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4d, 0x2d, 0x41, 0x33, 0x32, 0x36,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x20, 0x35, 0x47, 0x53, 0x4d,
		0x2d, 0x4d, 0x33, 0x33, 0x36, 0x4b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x75, 0x6d,
		0x70, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x31, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30,
		0x31, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x31,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x32, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4d, 0x30, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x30,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4d, 0x31, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x32, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4d, 0x31, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x34,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x30, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32,
		0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x42, 0x75, 0x64, 0x64, 0x79, 0x20, 0x32,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x33, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x31, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4d, 0x33, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x32,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x33, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x31, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4d, 0x34, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x34, 0x32, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x35, 0x31, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4d, 0x35, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4d, 0x35, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x35, 0x34,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x36, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x30, 0x31, 0x24, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x57, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x30, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x51,
		0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47,
		0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x52, 0x6f,
		0x75, 0x6e, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x35, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f,
		0x6e, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4f, 0x6e, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x43, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43,
		0x37, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x38, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x5a, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x5a, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x34, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x6f, 0x6c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x6f, 0x6c, 0x20,
		0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x6f, 0x6c, 0x20, 0x33, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x48, 0x61, 0x6c, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x6d, 0x70, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x6d, 0x70, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x33, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x33, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x34, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x35, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x44, 0x75, 0x6f,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x2b, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x46, 0x61, 0x6e, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f,
		0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x49, 0x49, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x49, 0x49, 0x20, 0x4c, 0x54,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x32, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x20, 0x56, 0x45, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x28, 0x54, 0x56, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x33, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x65, 0x67, 0x61, 0x20, 0x35, 0x2e, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x65,
		0x67, 0x61, 0x20, 0x36, 0x2e, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2b, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x41, 0x74, 0x69, 0x76, 0x20, 0x53, 0x45, 0x47, 0x72,
		0x65, 0x61, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x33, 0x45,
		0x32, 0x31, 0x35, 0x32, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x33,
		0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x43, 0x2d, 0x30, 0x32, 0x43, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x2d, 0x54, 0x56, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x24, 0x31, 0x53, 0x43, 0x2d, 0x24, 0x31, 0x53, 0x43, 0x48, 0x2d, 0x24,
		0x31, 0x53, 0x61, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x53, 0x61, 0x6d, 0x74, 0x72, 0x6f, 0x6e, 0x53,
		0x61, 0x6e, 0x65, 0x69, 0x4e, 0x38, 0x33, 0x4e, 0x39, 0x31, 0x38, 0x33, 0x31, 0x32, 0x44, 0x47,
		0x31, 0x30, 0x31, 0x53, 0x61, 0x6e, 0x6b, 0x65, 0x79, 0x54, 0x41, 0x42, 0x37, 0x41, 0x33, 0x47,
		0x30, 0x35, 0x54, 0x41, 0x42, 0x2d, 0x37, 0x41, 0x33, 0x47, 0x30, 0x35, 0x53, 0x61, 0x6e, 0x73,
		0x75, 0x69, 0x53, 0x35, 0x30, 0x35, 0x30, 0x32, 0x34, 0x53, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x42,
		0x69, 0x54, 0x42, 0x69, 0x5a, 0x20, 0x56, 0x35, 0x38, 0x47, 0x41, 0x41, 0x4d, 0x49, 0x49, 0x20,
		0x47, 0x31, 0x47, 0x41, 0x41, 0x4d, 0x49, 0x49, 0x48, 0x65, 0x78, 0x69, 0x6e, 0x20, 0x48, 0x32,
		0x2d, 0x41, 0x43, 0x61, 0x6e, 0x64, 0x79, 0x20, 0x55, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x72,
		0x65, 0x61, 0x6d, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x30, 0x33, 0x41, 0x43, 0x6c, 0x61, 0x73,
		0x73, 0x20, 0x4f, 0x6e, 0x65, 0x48, 0x61, 0x6c, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x74, 0x6f, 0x6d,
		0x61, 0x20, 0x41, 0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x48, 0x6f, 0x6e, 0x67, 0x51,
		0x69, 0x20, 0x48, 0x51, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x7a, 0x4e, 0x65, 0x77, 0x64, 0x75, 0x6e,
		0x48, 0x65, 0x78, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x48, 0x59, 0x2d, 0x30, 0x30, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x47, 0x31, 0x30, 0x31, 0x2d, 0x4f, 0x47, 0x53, 0x61, 0x6e, 0x79, 0x6f, 0x4b,
		0x61, 0x74, 0x61, 0x6e, 0x61, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x20, 0x58, 0x49,
		0x6e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x49, 0x6e, 0x6e, 0x75, 0x65, 0x6e, 0x64, 0x6f,
		0x53, 0x61, 0x76, 0x69, 0x6f, 0x53, 0x62, 0x65, 0x72, 0x53, 0x63, 0x68, 0x6f, 0x6b, 0x53, 0x63,
		0x68, 0x6f, 0x6b, 0x20, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x56, 0x35, 0x35, 0x56, 0x6f, 0x6c,
		0x74, 0x20, 0x53, 0x56, 0x35, 0x35, 0x46, 0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d, 0x54, 0x75, 0x72,
		0x62, 0x6f, 0x58, 0x4c, 0x46, 0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d, 0x20, 0x54, 0x75, 0x72, 0x62,
		0x6f, 0x20, 0x58, 0x4c, 0x53, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x53, 0x65, 0x61, 0x74, 0x65,
		0x6c, 0x53, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65,
		0x53, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x61, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x78, 0x53, 0x45, 0x4c,
		0x46, 0x49, 0x58, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x53, 0x4c, 0x41, 0x53, 0x48, 0x36,
		0x53, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x36, 0x56, 0x4f, 0x59, 0x41, 0x47, 0x45, 0x52, 0x2d, 0x56,
		0x34, 0x35, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x72, 0x20, 0x56, 0x34, 0x35, 0x53, 0x45, 0x4c,
		0x46, 0x49, 0x58, 0x5f, 0x45, 0x53, 0x37, 0x33, 0x32, 0x5f, 0x45, 0x58, 0x50, 0x45, 0x52, 0x49,
		0x55, 0x53, 0x45, 0x53, 0x37, 0x33, 0x32, 0x20, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x75, 0x73,
		0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x51, 0x35, 0x5f, 0x55, 0x52, 0x42, 0x41, 0x4e, 0x51,
		0x35, 0x20, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x51, 0x33,
		0x5f, 0x52, 0x45, 0x42, 0x45, 0x4c, 0x51, 0x33, 0x20, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x53, 0x45,
		0x4c, 0x46, 0x49, 0x58, 0x5f, 0x51, 0x36, 0x5f, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x49, 0x4f, 0x4e,
		0x51, 0x36, 0x20, 0x53, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x53, 0x45, 0x4c, 0x46, 0x49,
		0x58, 0x5f, 0x56, 0x34, 0x31, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x4d, 0x41, 0x52, 0x44, 0x49, 0x47,
		0x52, 0x41, 0x53, 0x56, 0x34, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x72, 0x64, 0x69,
		0x67, 0x72, 0x61, 0x73, 0x53, 0x65, 0x6e, 0x63, 0x6f, 0x72, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
		0x74, 0x20, 0x24, 0x31, 0x22, 0x20, 0x24, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20,
		0x37, 0x20, 0x56, 0x33, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x37, 0x20, 0x56, 0x32,
		0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x37, 0x20,
		0x56, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x38, 0x20, 0x56, 0x33, 0x45, 0x6c,
		0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x38, 0x20, 0x56, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
		0x74, 0x20, 0x38, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x39, 0x2e, 0x37, 0x20, 0x56,
		0x33, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x39, 0x2e, 0x37, 0x20, 0x56, 0x32, 0x45,
		0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x39, 0x2e, 0x37, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
		0x74, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65,
		0x6e, 0x74, 0x20, 0x50, 0x24, 0x31, 0x53, 0x65, 0x6e, 0x64, 0x6f, 0x53, 0x65, 0x6e, 0x6b, 0x61,
		0x74, 0x65, 0x6c, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x54, 0x31, 0x30, 0x30, 0x31, 0x4d,
		0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x54, 0x31, 0x30, 0x30, 0x31, 0x53, 0x65, 0x6e, 0x73,
		0x65, 0x69, 0x74, 0x53, 0x65, 0x6e, 0x77, 0x61, 0x4f, 0x64, 0x69, 0x6e, 0x49, 0x6e, 0x69, 0x7a,
		0x69, 0x6f, 0x49, 0x6e, 0x69, 0x7a, 0x69, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x37, 0x30, 0x35,
		0x42, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x54, 0x68, 0x6f, 0x72, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x6c, 0x79, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x53, 0x65, 0x75, 0x69, 0x63, 0x41,
		0x55, 0x54, 0x4f, 0x49, 0x44, 0x20, 0x24, 0x31, 0x53, 0x65, 0x77, 0x6f, 0x6f, 0x53, 0x68, 0x61,
		0x72, 0x70, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x58, 0x78, 0x33, 0x53, 0x54, 0x54, 0x4d, 0x32,
		0x31, 0x56, 0x41, 0x50, 0x50, 0x52, 0x6f, 0x75, 0x76, 0x6f, 0x20, 0x56, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x58, 0x78, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x58, 0x78, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x58, 0x78, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x65, 0x61, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x41, 0x6e,
		0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x33, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x35, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
		0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x37, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20,
		0x4f, 0x6e, 0x65, 0x20, 0x58, 0x34, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x57, 0x69, 0x73, 0x68,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x57, 0x69, 0x73, 0x68, 0x20, 0x32, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x53, 0x48, 0x2d, 0x4d, 0x30, 0x34, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65,
		0x6e, 0x73, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65,
		0x6e, 0x73, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65,
		0x6e, 0x73, 0x65, 0x20, 0x34, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x34, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65,
		0x6e, 0x73, 0x65, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e,
		0x73, 0x65, 0x20, 0x36, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65,
		0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e,
		0x73, 0x65, 0x20, 0x37, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20,
		0x35, 0x47, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x44, 0x31, 0x30, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x53, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x5a, 0x65, 0x74, 0x61, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x53, 0x32, 0x20, 0x28, 0x43, 0x31, 0x30, 0x29, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x5a, 0x65, 0x74, 0x61, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x20,
		0x51, 0x75, 0x65, 0x73, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x53, 0x48, 0x2d, 0x30, 0x36, 0x44, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x58, 0x58, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4c, 0x32, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x52, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x20, 0x43, 0x6f, 0x6d,
		0x70, 0x61, 0x63, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x32, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x52, 0x32, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x52, 0x35, 0x47, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x34, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x34, 0x20, 0x53, 0x49, 0x4d, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x56, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x20, 0x24, 0x31, 0x53,
		0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x34, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x45, 0x76, 0x65, 0x72, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43,
		0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x58, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43, 0x72,
		0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x33, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x53, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50,
		0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x53, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x33, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x53, 0x33, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x53, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x34, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x36, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x52, 0x37, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x55, 0x4c, 0x75, 0x6e, 0x61, 0x20,
		0x53, 0x42, 0x31, 0x30, 0x41, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x6f,
		0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x20, 0x57, 0x61, 0x72, 0x73, 0x53, 0x48, 0x2d, 0x52, 0x4d,
		0x30, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x48, 0x2d, 0x52, 0x4d, 0x30, 0x32, 0x34,
		0x30, 0x31, 0x53, 0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x34, 0x30, 0x31, 0x53, 0x48, 0x44,
		0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x41,
		0x30, 0x30, 0x31, 0x53, 0x48, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x53, 0x75, 0x6d, 0x61,
		0x68, 0x6f, 0x20, 0x35, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69,
		0x20, 0x33, 0x4e, 0x50, 0x41, 0x32, 0x30, 0x35, 0x53, 0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x20, 0x34, 0x4e, 0x50, 0x38, 0x30, 0x37, 0x53, 0x48, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x20, 0x31, 0x30, 0x4e, 0x50,
		0x35, 0x30, 0x31, 0x53, 0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61,
		0x69, 0x4c, 0x65, 0x69, 0x63, 0x61, 0x20, 0x4c, 0x65, 0x69, 0x74, 0x7a, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x24, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x70, 0x61, 0x67, 0x6f, 0x73, 0x20, 0x24,
		0x31, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x2d, 0x74, 0x61, 0x69, 0x50, 0x61, 0x6e, 0x74,
		0x6f, 0x6e, 0x65, 0x20, 0x36, 0x53, 0x68, 0x61, 0x72, 0x70, 0x20, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x50, 0x61, 0x64, 0x4c, 0x43, 0x44, 0x5f, 0x78, 0x78, 0x53, 0x55, 0x46, 0x4f, 0x43, 0x34,
		0x37, 0x35, 0x41, 0x4c, 0x43, 0x44, 0x2d, 0x36, 0x30, 0x53, 0x55, 0x34, 0x37, 0x35, 0x41, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x4e, 0x65, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x54, 0x56, 0x24, 0x31, 0x53, 0x68, 0x69, 0x66, 0x74, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x73, 0x53, 0x68, 0x69, 0x76, 0x61, 0x6b, 0x69, 0x53, 0x54, 0x56, 0x2d, 0x24, 0x31,
		0x53, 0x68, 0x74, 0x72, 0x69, 0x6b, 0x68, 0x2d, 0x4d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x6f,
		0x73, 0x20, 0x46, 0x32, 0x53, 0x68, 0x75, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x69, 0x63, 0x6f, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x32, 0x4d, 0x6f, 0x72, 0x65, 0x5f, 0x33, 0x4d, 0x6f, 0x72, 0x65, 0x20,
		0x33, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x5f, 0x34, 0x47, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x54,
		0x6f, 0x70, 0x61, 0x7a, 0x4d, 0x65, 0x67, 0x61, 0x32, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x67, 0x61,
		0x20, 0x32, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x32, 0x4d, 0x65, 0x67, 0x61, 0x20,
		0x32, 0x4e, 0x69, 0x6c, 0x65, 0x20, 0x58, 0x53, 0x53, 0x52, 0x33, 0x2d, 0x31, 0x2d, 0x35, 0x31,
		0x2d, 0x35, 0x4d, 0x53, 0x53, 0x44, 0x2d, 0x31, 0x2d, 0x35, 0x33, 0x2d, 0x31, 0x33, 0x4d, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x31, 0x30, 0x30, 0x32,
		0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x33, 0x2d, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x72,
		0x65, 0x73, 0x73, 0x20, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
		0x33, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x33, 0x53, 0x69, 0x65, 0x6d, 0x65, 0x6e,
		0x73, 0x58, 0x2d, 0x54, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x51, 0x24, 0x31, 0x20, 0x4d, 0x61,
		0x78, 0x58, 0x2d, 0x54, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x51, 0x24, 0x31, 0x58, 0x2d, 0x53,
		0x74, 0x79, 0x6c, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x24, 0x31, 0x58, 0x2d, 0x53, 0x74,
		0x79, 0x6c, 0x65, 0x20, 0x53, 0x24, 0x31, 0x53, 0x69, 0x6c, 0x65, 0x6c, 0x69, 0x73, 0x53, 0x69,
		0x6c, 0x65, 0x6e, 0x74, 0x20, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x53, 0x69, 0x6d, 0x62, 0x61, 0x6e, 0x73, 0x54, 0x61,
		0x6e, 0x67, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x54, 0x61,
		0x62, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x6d, 0x61, 0x78, 0x50,
		0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65,
		0x73, 0x74, 0x6f, 0x53, 0x37, 0x32, 0x2d, 0x42, 0x53, 0x58, 0x32, 0x57, 0x53, 0x69, 0x6d, 0x70,
		0x6c, 0x79, 0x53, 0x69, 0x6e, 0x67, 0x74, 0x65, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x79, 0x20, 0x49, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x49, 0x20,
		0x4d, 0x69, 0x78, 0x53, 0x69, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x53, 0x69, 0x72, 0x69, 0x6e, 0x20,
		0x4c, 0x61, 0x62, 0x73, 0x46, 0x69, 0x6e, 0x6e, 0x65, 0x79, 0x20, 0x55, 0x31, 0x53, 0x6f, 0x6c,
		0x61, 0x72, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x35, 0x2e, 0x30,
		0x4d, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x35, 0x2e, 0x35, 0x43, 0x50, 0x6c,
		0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x5f, 0x34, 0x5f, 0x30, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x34, 0x2e, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x34, 0x2e, 0x30, 0x50, 0x6c,
		0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x61,
		0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d,
		0x20, 0x56, 0x69, 0x65, 0x77, 0x24, 0x31, 0x53, 0x4b, 0x59, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e,
		0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x79, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x32, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f,
		0x63, 0x74, 0x61, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f, 0x63, 0x74,
		0x61, 0x20, 0x58, 0x53, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x45, 0x6c,
		0x69, 0x74, 0x65, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x4d, 0x61, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x5f, 0x35, 0x5f, 0x35, 0x5f, 0x4f, 0x63, 0x74, 0x61, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x35,
		0x2e, 0x35, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x45, 0x4c, 0x49, 0x54, 0x45, 0x20, 0x50, 0x48, 0x4f,
		0x54, 0x4f, 0x50, 0x52, 0x4f, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x50, 0x68, 0x6f, 0x74, 0x6f,
		0x20, 0x50, 0x72, 0x6f, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x35, 0x50, 0x6c, 0x75, 0x73,
		0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x69,
		0x74, 0x65, 0x20, 0x45, 0x35, 0x35, 0x4d, 0x61, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x45,
		0x35, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x24,
		0x32, 0x46, 0x75, 0x65, 0x67, 0x6f, 0x20, 0x24, 0x31, 0x53, 0x4b, 0x59, 0x5f, 0x50, 0x72, 0x6f,
		0x5f, 0x49, 0x49, 0x49, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x49, 0x50, 0x52, 0x4f, 0x5f, 0x53,
		0x45, 0x4c, 0x46, 0x49, 0x45, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x53,
		0x4b, 0x59, 0x20, 0x35, 0x35, 0x4d, 0x35, 0x35, 0x4d, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72,
		0x35, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x35, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69,
		0x67, 0x65, 0x20, 0x58, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x53, 0x6b, 0x79, 0x53,
		0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x4b, 0x59, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f, 0x33,
		0x50, 0x6c, 0x75, 0x73, 0x49, 0x49, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6b, 0x79, 0x6c,
		0x69, 0x6e, 0x65, 0x53, 0x6b, 0x79, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x46, 0x6c, 0x6f, 0x77, 0x42,
		0x6f, 0x78, 0x2d, 0x46, 0x31, 0x53, 0x6d, 0x61, 0x64, 0x6c, 0x53, 0x61, 0x66, 0x61, 0x72, 0x69,
		0x4d, 0x61, 0x74, 0x72, 0x69, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x69, 0x6c, 0x6f, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x20, 0x49, 0x49, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x49, 0x49, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4b, 0x61, 0x73, 0x73, 0x65, 0x6c,
		0x53, 0x4b, 0x35, 0x35, 0x30, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x53,
		0x42, 0x31, 0x33, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x61, 0x62, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x65,
		0x78, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e, 0x53, 0x37, 0x20, 0x42, 0x75, 0x69,
		0x6c, 0x64, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x2e, 0x30, 0x50, 0x44, 0x36, 0x44, 0x31, 0x4a, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78,
		0x20, 0x56, 0x33, 0x73, 0x41, 0x44, 0x36, 0x38, 0x32, 0x4a, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d,
		0x61, 0x78, 0x20, 0x54, 0x41, 0x44, 0x36, 0x38, 0x38, 0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d,
		0x61, 0x78, 0x20, 0x43, 0x32, 0x41, 0x44, 0x36, 0x38, 0x39, 0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x6d, 0x61, 0x78, 0x20, 0x69, 0x33, 0x41, 0x44, 0x36, 0x38, 0x32, 0x48, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x6d, 0x61, 0x78, 0x20, 0x69, 0x33, 0x73, 0x41, 0x44, 0x36, 0x42, 0x31, 0x48, 0x41, 0x6e,
		0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x47, 0x32, 0x20, 0x48, 0x6f, 0x74, 0x41, 0x44, 0x39,
		0x41, 0x31, 0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x47, 0x32, 0x41, 0x44,
		0x36, 0x38, 0x33, 0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x49, 0x42, 0x32,
		0x36, 0x44, 0x32, 0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x4c, 0x4e, 0x65,
		0x77, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x2d, 0x69, 0x4e, 0x65, 0x77, 0x20,
		0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x49, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d,
		0x61, 0x78, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x69, 0x73, 0x61, 0x6e, 0x54, 0x31,
		0x53, 0x4d, 0x38, 0x30, 0x31, 0x54, 0x32, 0x53, 0x4d, 0x39, 0x30, 0x31, 0x4d, 0x31, 0x53, 0x4d,
		0x39, 0x31, 0x39, 0x4d, 0x31, 0x4c, 0x4e, 0x75, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x73,
		0x4e, 0x75, 0x74, 0x20, 0x33, 0x4e, 0x75, 0x74, 0x20, 0x32, 0x4e, 0x75, 0x74, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x33, 0x4a, 0x69, 0x61, 0x6e, 0x47, 0x75, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x69, 0x73, 0x61, 0x6e, 0x20, 0x55, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x55, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x24, 0x31, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x31, 0x30, 0x4c, 0x53, 0x6d, 0x6f, 0x6f, 0x74,
		0x68, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x32, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e,
		0x63, 0x65, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68,
		0x20, 0x36, 0x2e, 0x32, 0x36, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x36, 0x2e, 0x32, 0x36,
		0x20, 0x24, 0x31, 0x53, 0x6d, 0x6f, 0x74, 0x72, 0x65, 0x73, 0x68, 0x6b, 0x61, 0x53, 0x6f, 0x62,
		0x69, 0x65, 0x54, 0x65, 0x63, 0x68, 0x53, 0x4f, 0x42, 0x49, 0x45, 0x54, 0x45, 0x43, 0x48, 0x20,
		0x53, 0x4c, 0x50, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x33, 0x44, 0x20,
		0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x6f, 0x64, 0x61, 0x73, 0x6f, 0x64,
		0x61, 0x20, 0x46, 0x49, 0x52, 0x45, 0x53, 0x6f, 0x66, 0x74, 0x62, 0x61, 0x6e, 0x6b, 0x53, 0x6f,
		0x68, 0x6f, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x6f, 0x6c, 0x6f, 0x6e, 0x65, 0x45, 0x31,
		0x34, 0x35, 0x37, 0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x49, 0x72, 0x6f, 0x6e, 0x20, 0x45, 0x31,
		0x34, 0x35, 0x37, 0x57, 0x31, 0x34, 0x35, 0x30, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x42, 0x72, 0x65,
		0x65, 0x7a, 0x65, 0x20, 0x57, 0x31, 0x34, 0x35, 0x30, 0x57, 0x31, 0x34, 0x35, 0x32, 0x57, 0x69,
		0x6e, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x57, 0x31, 0x34, 0x35, 0x32, 0x53, 0x4f, 0x4c, 0x4f,
		0x4e, 0x45, 0x20, 0x41, 0x34, 0x37, 0x53, 0x4c, 0x2d, 0x41, 0x34, 0x37, 0x53, 0x75, 0x6e, 0x5f,
		0x53, 0x35, 0x35, 0x30, 0x31, 0x53, 0x75, 0x6e, 0x20, 0x53, 0x35, 0x35, 0x30, 0x31, 0x45, 0x6c,
		0x69, 0x74, 0x65, 0x20, 0x4c, 0x35, 0x35, 0x30, 0x31, 0x53, 0x75, 0x6d, 0x6f, 0x20, 0x53, 0x35,
		0x30, 0x30, 0x31, 0x53, 0x6f, 0x6e, 0x69, 0x6d, 0x58, 0x50, 0x33, 0x34, 0x30, 0x30, 0x58, 0x50,
		0x33, 0x58, 0x50, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x50, 0x35, 0x73, 0x58, 0x50, 0x35,
		0x58, 0x50, 0x36, 0x58, 0x50, 0x37, 0x58, 0x50, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x58, 0x31, 0x30, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58,
		0x31, 0x30, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x58, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x20, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x6e, 0x65, 0x6f, 0x20, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6e, 0x65, 0x6f,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x6f, 0x6c, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6d, 0x69, 0x6e, 0x69,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x41, 0x63, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x72, 0x61,
		0x79, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x70, 0x72, 0x6f,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x31, 0x30, 0x41, 0x73, 0x70, 0x65, 0x6e, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x50, 0x4c, 0x41, 0x59, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x41, 0x63, 0x72, 0x6f, 0x20, 0x53, 0x4c, 0x69, 0x76, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68,
		0x20, 0x57, 0x61, 0x6c, 0x6b, 0x6d, 0x61, 0x6e, 0x74, 0x78, 0x74, 0x74, 0x78, 0x74, 0x20, 0x70,
		0x72, 0x6f, 0x4a, 0x61, 0x6c, 0x6f, 0x75, 0x4e, 0x61, 0x69, 0x74, 0x65, 0x43, 0x65, 0x64, 0x61,
		0x72, 0x45, 0x6c, 0x6d, 0x48, 0x61, 0x7a, 0x65, 0x6c, 0x41, 0x69, 0x6e, 0x6f, 0x59, 0x61, 0x72,
		0x69, 0x53, 0x61, 0x74, 0x69, 0x6f, 0x56, 0x69, 0x76, 0x61, 0x7a, 0x56, 0x69, 0x76, 0x61, 0x7a,
		0x20, 0x70, 0x72, 0x6f, 0x5a, 0x79, 0x6c, 0x6f, 0x53, 0x70, 0x69, 0x72, 0x6f, 0x59, 0x65, 0x6e,
		0x64, 0x6f, 0x57, 0x39, 0x36, 0x30, 0x4d, 0x69, 0x78, 0x20, 0x57, 0x61, 0x6c, 0x6b, 0x6d, 0x61,
		0x6e, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x58, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x4f, 0x2d, 0x30, 0x34, 0x46, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x32, 0x53,
		0x4f, 0x2d, 0x30, 0x32, 0x44, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4e, 0x58, 0x47, 0x32,
		0x32, 0x39, 0x39, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x52, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x4f, 0x2d, 0x30, 0x34, 0x47, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x34,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x41, 0x63, 0x65, 0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x63, 0x65,
		0x20, 0x49, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x49, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x49, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x31, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69,
		0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x31, 0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20,
		0x49, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20, 0x49, 0x56, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x50, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x56, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x49, 0x49, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x49, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x35, 0x20, 0x49, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x38, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x53, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x61, 0x72, 0x63, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63,
		0x6f, 0x20, 0x48, 0x44, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x6f, 0x20,
		0x53, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x69, 0x6f, 0x6e, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x54, 0x58, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x20, 0x4c, 0x54, 0x45,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x74,
		0x69, 0x70, 0x6f, 0x20, 0x64, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x74,
		0x69, 0x70, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6d, 0x69, 0x72, 0x6f, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x55, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x55, 0x4c, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x56, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4a,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x67, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x45, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x34,
		0x47, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x4d, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x50, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x52, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a,
		0x4c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x4c, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x5a, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x45, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45,
		0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x34, 0x67, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x32,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x49, 0x33, 0x33, 0x31, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x4c, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x33, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x4d, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d,
		0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x32, 0x20, 0x41, 0x71, 0x75, 0x61, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x34, 0x20, 0x41, 0x71, 0x75, 0x61, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x4d, 0x34, 0x20, 0x41, 0x71, 0x75, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x4d, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x33,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x33, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x34,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x35, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x35, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54,
		0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x31, 0x20, 0x43, 0x6f,
		0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x31, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x57, 0x69, 0x66, 0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x20, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x57, 0x69, 0x46, 0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x5a, 0x32, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x5a, 0x32, 0x44, 0x36, 0x35, 0x36, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32,
		0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x5a, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a,
		0x33, 0x2b, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x76, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x5a, 0x34, 0x45, 0x36, 0x35, 0x30, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x5a, 0x34, 0x76, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x20, 0x43, 0x6f,
		0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x41, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x58, 0x41, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x58, 0x41, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x31,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x31, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61,
		0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x58, 0x41, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58,
		0x41, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58,
		0x41, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x48, 0x34, 0x34, 0x33, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x73, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x48, 0x38, 0x32, 0x36, 0x36, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x53, 0x4f,
		0x2d, 0x30, 0x35, 0x4b, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x20, 0x43,
		0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32,
		0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x31,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x47, 0x58, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x58, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x58, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x58, 0x20, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
		0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x20, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
		0x6d, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x33, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63,
		0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x53,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x42, 0x72, 0x61, 0x76,
		0x69, 0x61, 0x20, 0x24, 0x31, 0x42, 0x72, 0x61, 0x76, 0x69, 0x61, 0x20, 0x34, 0x4b, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x35, 0x29, 0x42, 0x72, 0x61, 0x76, 0x69, 0x61, 0x20, 0x56, 0x48, 0x31, 0x57,
		0x61, 0x6c, 0x6b, 0x6d, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x75, 0x2d, 0x72, 0x61, 0x79,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x44, 0x50, 0x32, 0x30, 0x31, 0x35, 0x42, 0x6c,
		0x75, 0x2d, 0x72, 0x61, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x35, 0x29, 0x61, 0x72, 0x63, 0x6f, 0x20, 0x49, 0x53, 0x31, 0x31, 0x53, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x24, 0x31, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x53, 0x6f,
		0x79, 0x65, 0x73, 0x53, 0x31, 0x30, 0x2d, 0x48, 0x58, 0x53, 0x31, 0x32, 0x20, 0x50, 0x52, 0x4f,
		0x58, 0x53, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x78, 0x4e, 0x65, 0x6f,
		0x20, 0x37, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x20, 0x50, 0x72,
		0x6f, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x70, 0x65, 0x63,
		0x74, 0x72, 0x75, 0x6d, 0x56, 0x75, 0x6c, 0x63, 0x61, 0x6e, 0x6f, 0x20, 0x35, 0x2e, 0x35, 0x22,
		0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x6f, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x43, 0x75, 0x61, 0x72,
		0x7a, 0x6f, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x44, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x65, 0x20,
		0x35, 0x2e, 0x30, 0x22, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x24, 0x31, 0x58, 0x6c, 0x69, 0x66,
		0x65, 0x20, 0x4d, 0x35, 0x51, 0x2b, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x4d, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c,
		0x69, 0x66, 0x65, 0x2d, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x35, 0x58, 0x6c, 0x69, 0x66, 0x65,
		0x20, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x35, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x50,
		0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20,
		0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66,
		0x65, 0x2d, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x35, 0x35, 0x48, 0x44, 0x58, 0x6c, 0x69,
		0x66, 0x65, 0x20, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x35, 0x20, 0x48, 0x44,
		0x4d, 0x69, 0x2d, 0x24, 0x31, 0x4e, 0x4d, 0x69, 0x2d, 0x24, 0x31, 0x41, 0x51, 0x54, 0x24, 0x31,
		0x53, 0x74, 0x61, 0x72, 0x4e, 0x39, 0x30, 0x30, 0x30, 0x53, 0x74, 0x61, 0x72, 0x6c, 0x69, 0x67,
		0x68, 0x74, 0x4d, 0x79, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x5f, 0x58, 0x4d, 0x79, 0x20, 0x53, 0x74,
		0x61, 0x72, 0x20, 0x58, 0x52, 0x49, 0x4f, 0x20, 0x53, 0x54, 0x41, 0x52, 0x52, 0x69, 0x6f, 0x20,
		0x53, 0x74, 0x61, 0x72, 0x43, 0x5f, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x43, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x5f, 0x4e, 0x6f, 0x74, 0x65, 0x43, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x5f, 0x4d, 0x69, 0x78, 0x5f, 0x32, 0x53, 0x74,
		0x61, 0x72, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x32, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x50,
		0x4c, 0x55, 0x53, 0x49, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x20,
		0x53, 0x74, 0x61, 0x72, 0x20, 0x54, 0x77, 0x6f, 0x49, 0x20, 0x73, 0x74, 0x61, 0x72, 0x20, 0x6f,
		0x6e, 0x65, 0x49, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x4f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72,
		0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x52, 0x4f, 0x4d, 0x45, 0x5f, 0x58, 0x52, 0x6f, 0x6d, 0x65,
		0x20, 0x58, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x70, 0x6c, 0x75, 0x73,
		0x53, 0x74, 0x61, 0x72, 0x2b, 0x2b, 0x53, 0x74, 0x61, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x47, 0x6f, 0x41, 0x73, 0x74, 0x72, 0x61, 0x44, 0x69, 0x61, 0x6d,
		0x6f, 0x6e, 0x64, 0x20, 0x44, 0x31, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x55, 0x50, 0x20,
		0x24, 0x31, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x74, 0x61, 0x72, 0x77, 0x61, 0x79, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x61, 0x20,
		0x53, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x57, 0x2d, 0x4c, 0x45,
		0x44, 0x24, 0x31, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x78, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x78, 0x65,
		0x5a, 0x65, 0x65, 0x27, 0x54, 0x61, 0x62, 0x24, 0x31, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x58, 0x20,
		0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x6f, 0x78, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x6f, 0x78, 0x53, 0x74,
		0x72, 0x61, 0x77, 0x42, 0x65, 0x72, 0x72, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x55, 0x50,
		0x53, 0x74, 0x65, 0x70, 0x20, 0x55, 0x70, 0x37, 0x32, 0x31, 0x5f, 0x50, 0x52, 0x4f, 0x37, 0x32,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x39, 0x20, 0x54, 0x6f, 0x70, 0x61, 0x7a, 0x53, 0x56, 0x36,
		0x31, 0x20, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x36,
		0x31, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x36, 0x31, 0x20,
		0x4a, 0x41, 0x5a, 0x5a, 0x53, 0x36, 0x31, 0x20, 0x4a, 0x61, 0x7a, 0x7a, 0x53, 0x35, 0x37, 0x5f,
		0x41, 0x5a, 0x55, 0x52, 0x45, 0x53, 0x35, 0x37, 0x20, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x53, 0x35,
		0x37, 0x5f, 0x41, 0x4c, 0x55, 0x52, 0x45, 0x53, 0x35, 0x37, 0x20, 0x41, 0x6c, 0x75, 0x72, 0x65,
		0x53, 0x35, 0x36, 0x20, 0x4d, 0x49, 0x53, 0x54, 0x53, 0x35, 0x36, 0x20, 0x4d, 0x69, 0x73, 0x74,
		0x43, 0x50, 0x45, 0x39, 0x31, 0x53, 0x35, 0x34, 0x20, 0x5a, 0x65, 0x6e, 0x53, 0x35, 0x35, 0x20,
		0x4e, 0x6f, 0x76, 0x61, 0x53, 0x34, 0x30, 0x5f, 0x56, 0x49, 0x53, 0x54, 0x41, 0x53, 0x34, 0x30,
		0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x53, 0x35, 0x30, 0x5f, 0x4a, 0x41, 0x44, 0x45, 0x53, 0x35,
		0x30, 0x20, 0x4a, 0x61, 0x64, 0x65, 0x53, 0x35, 0x30, 0x5f, 0x42, 0x4f, 0x4c, 0x44, 0x53, 0x35,
		0x30, 0x20, 0x42, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x68, 0x65, 0x6d, 0x62, 0x61, 0x41, 0x52, 0x43,
		0x54, 0x49, 0x43, 0x41, 0x72, 0x63, 0x74, 0x69, 0x63, 0x53, 0x35, 0x33, 0x5f, 0x53, 0x54, 0x41,
		0x52, 0x4b, 0x53, 0x35, 0x33, 0x20, 0x53, 0x74, 0x61, 0x72, 0x6b, 0x53, 0x34, 0x30, 0x5f, 0x4c,
		0x49, 0x46, 0x45, 0x53, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x49, 0x46, 0x45, 0x5f,
		0x32, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x32, 0x4d, 0x4f, 0x53, 0x43, 0x4f, 0x57, 0x4d, 0x6f, 0x73,
		0x63, 0x6f, 0x77, 0x53, 0x34, 0x39, 0x20, 0x50, 0x6f, 0x69, 0x73, 0x65, 0x53, 0x34, 0x39, 0x20,
		0x4d, 0x6f, 0x6e, 0x6f, 0x53, 0x34, 0x39, 0x20, 0x45, 0x63, 0x6f, 0x53, 0x36, 0x34, 0x5f, 0x41,
		0x4c, 0x50, 0x48, 0x41, 0x53, 0x36, 0x34, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x44, 0x51, 0x52,
		0x32, 0x32, 0x49, 0x4e, 0x4b, 0x4f, 0x53, 0x49, 0x5f, 0x50, 0x52, 0x4f, 0x49, 0x6e, 0x6b, 0x6f,
		0x73, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x4e, 0x4b, 0x4f, 0x53, 0x49, 0x49, 0x6e, 0x6b, 0x6f,
		0x73, 0x69, 0x49, 0x4e, 0x4b, 0x55, 0x4c, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x49, 0x6e, 0x6b, 0x75,
		0x6c, 0x75, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4f, 0x4c, 0x44, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x42,
		0x6f, 0x6c, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x72, 0x61, 0x76, 0x65, 0x54, 0x61, 0x72,
		0x69, 0x73, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x44, 0x56, 0x4b, 0x38, 0x37, 0x4f, 0x72,
		0x69, 0x6f, 0x6e, 0x20, 0x38, 0x20, 0x54, 0x61, 0x62, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x53, 0x75,
		0x67, 0x61, 0x72, 0x59, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x37, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x53, 0x75, 0x6d, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6e, 0x56, 0x61, 0x6e,
		0x53, 0x75, 0x6e, 0x6d, 0x61, 0x78, 0x53, 0x75, 0x6e, 0x6d, 0x69, 0x54, 0x32, 0x73, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x53, 0x75, 0x6e, 0x73, 0x74, 0x65, 0x63, 0x68,
		0x53, 0x75, 0x6e, 0x76, 0x65, 0x6c, 0x6c, 0x54, 0x39, 0x35, 0x5a, 0x50, 0x4c, 0x55, 0x53, 0x54,
		0x39, 0x35, 0x5a, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x42, 0x4f, 0x58,
		0x53, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x75, 0x70, 0x65, 0x72, 0x53, 0x6f, 0x6e, 0x69, 0x63,
		0x53, 0x75, 0x70, 0x65, 0x72, 0x54, 0x61, 0x62, 0x4b, 0x37, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x53,
		0x75, 0x70, 0x72, 0x61, 0x53, 0x75, 0x70, 0x72, 0x61, 0x69, 0x6d, 0x53, 0x75, 0x72, 0x67, 0x65,
		0x56, 0x6f, 0x6c, 0x74, 0x20, 0x24, 0x31, 0x53, 0x75, 0x7a, 0x75, 0x6b, 0x69, 0x53, 0x75, 0x6d,
		0x6f, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x45, 0x43, 0x4f, 0x50, 0x41, 0x44, 0x37, 0x45, 0x43,
		0x4f, 0x50, 0x61, 0x64, 0x20, 0x37, 0x53, 0x76, 0x65, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x70, 0x65,
		0x4b, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4b, 0x6f, 0x6e,
		0x6e, 0x65, 0x63, 0x74, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4b, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
		0x74, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x34, 0x47, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x32, 0x53,
		0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x38, 0x53, 0x77, 0x69, 0x73, 0x73, 0x74, 0x6f, 0x6e, 0x65,
		0x53, 0x77, 0x69, 0x74, 0x65, 0x6c, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x53,
		0x79, 0x63, 0x6f, 0x52, 0x53, 0x2d, 0x34, 0x30, 0x33, 0x53, 0x79, 0x6d, 0x70, 0x68, 0x6f, 0x6e,
		0x79, 0x5a, 0x56, 0x49, 0x49, 0x49, 0x5a, 0x56, 0x49, 0x49, 0x49, 0x4e, 0x4f, 0x56, 0x41, 0x69,
		0x4e, 0x6f, 0x76, 0x61, 0x53, 0x79, 0x6d, 0x70, 0x68, 0x6f, 0x6e, 0x79, 0x20, 0x41, 0x74, 0x6f,
		0x6d, 0x20, 0x69, 0x69, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x49, 0x49, 0x52, 0x6f, 0x61, 0x72, 0x20,
		0x24, 0x31, 0x47, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x79, 0x6d, 0x54, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x45, 0x41, 0x53, 0x59, 0x5f, 0x4e, 0x41, 0x56, 0x5f, 0x32, 0x45, 0x61, 0x73,
		0x79, 0x20, 0x4e, 0x61, 0x76, 0x20, 0x32, 0x53, 0x79, 0x72, 0x6f, 0x78, 0x54, 0x2d, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x54, 0x4d, 0x52, 0x56, 0x4c, 0x34, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c,
		0x20, 0x56, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x45,
		0x56, 0x56, 0x4c, 0x20, 0x34, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x35, 0x47, 0x52, 0x45, 0x56,
		0x56, 0x4c, 0x20, 0x32, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x56, 0x2b, 0x20, 0x35, 0x47,
		0x52, 0x45, 0x56, 0x56, 0x4c, 0x52, 0x59, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x32, 0x52, 0x45,
		0x56, 0x56, 0x4c, 0x20, 0x36, 0x20, 0x35, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x36, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x54, 0x65, 0x6c, 0x65, 0x6b, 0x6f, 0x6d, 0x20, 0x50, 0x75,
		0x6c, 0x73, 0x54, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x20, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x54, 0x39, 0x36, 0x54, 0x41, 0x47, 0x20, 0x54, 0x65, 0x63, 0x68, 0x54,
		0x42, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x49, 0x67, 0x6e, 0x69, 0x73, 0x20, 0x24, 0x31, 0x54,
		0x43, 0x4c, 0x47, 0x61, 0x6c, 0x61, 0x20, 0x47, 0x36, 0x30, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x49,
		0x6f, 0x6e, 0x20, 0x58, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x32, 0x30, 0x35,
		0x33, 0x30, 0x34, 0x34, 0x30, 0x33, 0x33, 0x30, 0x35, 0x33, 0x30, 0x35, 0x69, 0x33, 0x30, 0x36,
		0x34, 0x30, 0x35, 0x34, 0x30, 0x38, 0x34, 0x30, 0x20, 0x53, 0x45, 0x32, 0x30, 0x4c, 0x32, 0x30,
		0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x45,
		0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x30, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x30,
		0x45, 0x33, 0x30, 0x45, 0x32, 0x30, 0x59, 0x32, 0x30, 0x42, 0x43, 0x39, 0x41, 0x33, 0x58, 0x4c,
		0x35, 0x4c, 0x39, 0x4c, 0x39, 0x53, 0x4c, 0x31, 0x30, 0x4c, 0x31, 0x30, 0x2b, 0x4c, 0x31, 0x30,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x65, 0x78, 0x31, 0x30,
		0x20, 0x35, 0x47, 0x31, 0x30, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x4c, 0x58, 0x41, 0x32, 0x58,
		0x58, 0x34, 0x20, 0x35, 0x47, 0x31, 0x30, 0x4c, 0x31, 0x30, 0x20, 0x53, 0x45, 0x32, 0x30, 0x20,
		0x53, 0x45, 0x32, 0x30, 0x20, 0x41, 0x33, 0x30, 0x20, 0x53, 0x45, 0x34, 0x31, 0x38, 0x38, 0x56,
		0x33, 0x30, 0x20, 0x4c, 0x45, 0x33, 0x30, 0x2b, 0x54, 0x36, 0x37, 0x36, 0x48, 0x33, 0x30, 0x33,
		0x30, 0x20, 0x5a, 0x33, 0x30, 0x20, 0x56, 0x20, 0x35, 0x47, 0x54, 0x36, 0x30, 0x33, 0x44, 0x4c,
		0x33, 0x30, 0x20, 0x54, 0x33, 0x30, 0x20, 0x35, 0x47, 0x33, 0x30, 0x20, 0x58, 0x45, 0x20, 0x35,
		0x47, 0x33, 0x30, 0x20, 0x58, 0x4c, 0x32, 0x30, 0x52, 0x20, 0x35, 0x47, 0x32, 0x30, 0x53, 0x32,
		0x30, 0x20, 0x58, 0x45, 0x32, 0x30, 0x20, 0x35, 0x47, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x34, 0x30, 0x52, 0x20, 0x35, 0x47, 0x39, 0x33, 0x31, 0x37, 0x58, 0x31, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x54, 0x4b, 0x45, 0x45, 0x20, 0x4d, 0x61,
		0x78, 0x54, 0x61, 0x62, 0x20, 0x38, 0x22, 0x20, 0x34, 0x47, 0x39, 0x31, 0x33, 0x32, 0x47, 0x54,
		0x61, 0x62, 0x20, 0x38, 0x22, 0x39, 0x32, 0x39, 0x35, 0x47, 0x31, 0x30, 0x20, 0x54, 0x61, 0x62,
		0x4d, 0x61, 0x78, 0x20, 0x34, 0x47, 0x39, 0x32, 0x39, 0x36, 0x47, 0x31, 0x30, 0x20, 0x54, 0x61,
		0x62, 0x4d, 0x61, 0x78, 0x20, 0x57, 0x69, 0x46, 0x69, 0x39, 0x32, 0x39, 0x36, 0x51, 0x31, 0x30,
		0x20, 0x54, 0x61, 0x62, 0x4d, 0x61, 0x78, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x73, 0x54, 0x61,
		0x62, 0x20, 0x37, 0x4c, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x4c,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x20,
		0x34, 0x47, 0x39, 0x30, 0x36, 0x30, 0x58, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44,
		0x20, 0x34, 0x47, 0x39, 0x31, 0x33, 0x37, 0x57, 0x54, 0x61, 0x62, 0x20, 0x38, 0x20, 0x4c, 0x45,
		0x39, 0x31, 0x36, 0x36, 0x47, 0x54, 0x61, 0x62, 0x20, 0x31, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x38,
		0x34, 0x39, 0x31, 0x58, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x4c, 0x39, 0x30, 0x38, 0x30, 0x47,
		0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x73, 0x20, 0x34, 0x47, 0x42, 0x65, 0x79, 0x6f, 0x6e, 0x64,
		0x20, 0x54, 0x56, 0x20, 0x24, 0x31, 0x54, 0x44, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73,
		0x54, 0x44, 0x20, 0x54, 0x65, 0x63, 0x68, 0x4e, 0x41, 0x54, 0x2d, 0x54, 0x4e, 0x37, 0x30, 0x4e,
		0x38, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x56, 0x41, 0x2d, 0x50, 0x41, 0x30, 0x30, 0x54, 0x44, 0x54,
		0x2d, 0x4d, 0x41, 0x30, 0x31, 0x4d, 0x34, 0x30, 0x54, 0x45, 0x45, 0x4e, 0x4f, 0x54, 0x45, 0x4e,
		0x50, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x54, 0x43, 0x54, 0x49, 0x41, 0x4e, 0x59, 0x55, 0x54, 0x49,
		0x4d, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x49, 0x4d, 0x20, 0x42, 0x6f, 0x78, 0x54, 0x4a,
		0x43, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x31, 0x30,
		0x54, 0x4f, 0x4f, 0x47, 0x4f, 0x54, 0x4f, 0x50, 0x44, 0x4f, 0x4e, 0x54, 0x4f, 0x50, 0x53, 0x48,
		0x4f, 0x57, 0x53, 0x54, 0x4f, 0x53, 0x43, 0x49, 0x44, 0x4f, 0x57, 0x31, 0x30, 0x39, 0x54, 0x4f,
		0x58, 0x54, 0x4f, 0x58, 0x31, 0x54, 0x50, 0x53, 0x54, 0x54, 0x45, 0x43, 0x54, 0x54, 0x4b, 0x2d,
		0x54, 0x56, 0x54, 0x54, 0x4b, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x32, 0x31, 0x34, 0x53, 0x42, 0x2d,
		0x32, 0x31, 0x34, 0x54, 0x56, 0x43, 0x4e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x53, 0x58,
		0x2d, 0x53, 0x50, 0x35, 0x54, 0x57, 0x4d, 0x41, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x20, 0x24,
		0x31, 0x53, 0x41, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x54, 0x57, 0x5a, 0x54,
		0x61, 0x62, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x4f, 0x58, 0x5f, 0x58, 0x31, 0x4f, 0x58,
		0x20, 0x58, 0x31, 0x54, 0x61, 0x69, 0x67, 0x61, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54,
		0x61, 0x69, 0x67, 0x61, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x54, 0x61, 0x6b, 0x61, 0x72,
		0x61, 0x54, 0x61, 0x6c, 0x69, 0x75, 0x73, 0x54, 0x61, 0x6d, 0x62, 0x6f, 0x54, 0x61, 0x6e, 0x69,
		0x78, 0x54, 0x58, 0x24, 0x31, 0x73, 0x54, 0x58, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x54, 0x58,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x58, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x65, 0x61,
		0x63, 0x68, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x54, 0x65, 0x63, 0x54, 0x6f, 0x79, 0x4f, 0x4e, 0x20,
		0x31, 0x32, 0x38, 0x47, 0x42, 0x54, 0x65, 0x63, 0x68, 0x50, 0x61, 0x64, 0x53, 0x38, 0x31, 0x33,
		0x47, 0x54, 0x65, 0x63, 0x68, 0x50, 0x61, 0x64, 0x31, 0x30, 0x51, 0x43, 0x31, 0x30, 0x51, 0x43,
		0x54, 0x65, 0x63, 0x68, 0x50, 0x61, 0x64, 0x5f, 0x31, 0x30, 0x78, 0x78, 0x31, 0x30, 0x58, 0x58,
		0x54, 0x65, 0x63, 0x68, 0x50, 0x61, 0x64, 0x37, 0x30, 0x33, 0x37, 0x30, 0x33, 0x33, 0x47, 0x78,
		0x33, 0x47, 0x5f, 0x31, 0x36, 0x33, 0x47, 0x2d, 0x31, 0x36, 0x58, 0x54, 0x41, 0x42, 0x20, 0x24,
		0x31, 0x4d, 0x35, 0x20, 0x24, 0x31, 0x4d, 0x36, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x36, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x43, 0x61, 0x6d, 0x54, 0x65, 0x63,
		0x68, 0x5f, 0x50, 0x61, 0x64, 0x5f, 0x4b, 0x61, 0x69, 0x6f, 0x73, 0x5f, 0x4f, 0x6e, 0x65, 0x5f,
		0x33, 0x47, 0x4b, 0x61, 0x69, 0x6f, 0x73, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x54, 0x65,
		0x63, 0x68, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x53, 0x61, 0x74,
		0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x54, 0x65, 0x63,
		0x68, 0x6e, 0x6f, 0x70, 0x63, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x50, 0x61, 0x64, 0x20, 0x55, 0x50, 0x31, 0x30, 0x24, 0x31, 0x54,
		0x65, 0x63, 0x68, 0x77, 0x6f, 0x6f, 0x64, 0x54, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x62,
		0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x54, 0x31, 0x30, 0x54, 0x32, 0x30, 0x50, 0x31, 0x30, 0x53,
		0x50, 0x32, 0x30, 0x48, 0x44, 0x50, 0x34, 0x30, 0x48, 0x44, 0x41, 0x70, 0x65, 0x78, 0x20, 0x50,
		0x31, 0x30, 0x48, 0x44, 0x50, 0x31, 0x30, 0x48, 0x44, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x70,
		0x65, 0x78, 0x20, 0x50, 0x31, 0x30, 0x48, 0x44, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x38, 0x30,
		0x50, 0x33, 0x30, 0x53, 0x50, 0x38, 0x35, 0x4d, 0x32, 0x30, 0x5f, 0x34, 0x47, 0x4d, 0x32, 0x30,
		0x20, 0x34, 0x47, 0x4d, 0x38, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x4c, 0x41, 0x30, 0x30, 0x32,
		0x4d, 0x33, 0x30, 0x20, 0x34, 0x47, 0x54, 0x4c, 0x41, 0x30, 0x31, 0x36, 0x4d, 0x31, 0x36, 0x4d,
		0x34, 0x30, 0x41, 0x69, 0x72, 0x4d, 0x34, 0x30, 0x20, 0x41, 0x69, 0x72, 0x4d, 0x34, 0x30, 0x53,
		0x45, 0x4d, 0x34, 0x30, 0x20, 0x53, 0x45, 0x4d, 0x34, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d,
		0x34, 0x30, 0x53, 0x54, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x4c, 0x41, 0x30, 0x30, 0x31,
		0x54, 0x34, 0x30, 0x54, 0x34, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x35, 0x30, 0x50, 0x72,
		0x6f, 0x5f, 0x57, 0x54, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x38, 0x30, 0x68, 0x50, 0x38,
		0x30, 0x58, 0x50, 0x33, 0x30, 0x41, 0x69, 0x72, 0x50, 0x33, 0x30, 0x20, 0x41, 0x69, 0x72, 0x54,
		0x50, 0x61, 0x64, 0x20, 0x39, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x34, 0x47, 0x58,
		0x39, 0x38, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x58, 0x39, 0x38, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x49, 0x49, 0x49, 0x58, 0x39, 0x38, 0x20, 0x41, 0x69, 0x72, 0x20, 0x49, 0x49, 0x54, 0x65, 0x63,
		0x6e, 0x6f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d,
		0x36, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x36, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x36, 0x53, 0x50, 0x68, 0x61,
		0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x36, 0x53, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x24,
		0x31, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x58, 0x32, 0x50, 0x68, 0x61, 0x6e, 0x74,
		0x6f, 0x6d, 0x20, 0x58, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d,
		0x20, 0x58, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x56, 0x20, 0x46, 0x6f, 0x6c, 0x64,
		0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x39, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d,
		0x20, 0x38, 0x54, 0x45, 0x43, 0x4e, 0x4f, 0x20, 0x57, 0x58, 0x33, 0x4c, 0x54, 0x45, 0x57, 0x58,
		0x33, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x45, 0x43, 0x4e, 0x4f, 0x2d, 0x57, 0x33, 0x57, 0x33, 0x46,
		0x34, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x43, 0x61, 0x6d, 0x6f,
		0x6e, 0x20, 0x69, 0x54, 0x77, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x41, 0x69,
		0x72, 0x20, 0x32, 0x2b, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x41, 0x63, 0x65, 0x20, 0x32,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x32, 0x58, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69,
		0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x20, 0x32, 0x43,
		0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x53, 0x6b, 0x79, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69,
		0x53, 0x6b, 0x79, 0x20, 0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x53, 0x6b, 0x79, 0x20,
		0x33, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x43, 0x44, 0x72, 0x6f, 0x69,
		0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x44, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20,
		0x37, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37,
		0x46, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x47, 0x44, 0x72, 0x6f, 0x69,
		0x64, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x72, 0x6f, 0x69,
		0x64, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x44, 0x20, 0x34, 0x47, 0x52, 0x37, 0x2b, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x34, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x39, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x32, 0x20, 0x41,
		0x69, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x31, 0x35, 0x20, 0x41, 0x69, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20, 0x50,
		0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x31, 0x36, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x31, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20, 0x53,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20, 0x53, 0x45, 0x43, 0x61, 0x6d, 0x6f, 0x6e,
		0x20, 0x31, 0x37, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x43,
		0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x37, 0x50, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x38,
		0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x38,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x38, 0x50, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31,
		0x39, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d,
		0x6f, 0x6e, 0x20, 0x31, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x43, 0x61, 0x6d, 0x6f,
		0x6e, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x32, 0x30,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x43,
		0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x20,
		0x35, 0x47, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x4d, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x58, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f,
		0x6e, 0x20, 0x43, 0x58, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x58, 0x20, 0x41, 0x69, 0x72,
		0x50, 0x6f, 0x70, 0x20, 0x31, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x46, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x53,
		0x50, 0x6f, 0x70, 0x20, 0x32, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x50,
		0x6f, 0x70, 0x20, 0x32, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x58,
		0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x58, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20,
		0x41, 0x69, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x4c,
		0x54, 0x45, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x58, 0x50, 0x6f, 0x70,
		0x20, 0x35, 0x20, 0x47, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x43, 0x50, 0x6f, 0x70, 0x20, 0x35,
		0x20, 0x4c, 0x54, 0x45, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70,
		0x20, 0x35, 0x50, 0x50, 0x6f, 0x70, 0x20, 0x36, 0x50, 0x6f, 0x70, 0x20, 0x36, 0x20, 0x47, 0x6f,
		0x50, 0x6f, 0x70, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x41, 0x31, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20,
		0x47, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x47,
		0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x20,
		0x59, 0x6f, 0x75, 0x74, 0x68, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x34, 0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x20, 0x41, 0x69, 0x72,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x36, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x36,
		0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x36, 0x20, 0x47, 0x6f, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x37, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x37, 0x50, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x37, 0x54,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x43, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x50, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x54, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x39, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x39, 0x54, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x43, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x31, 0x30, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x47, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x30, 0x29, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x59, 0x6f, 0x75, 0x74,
		0x68, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x43, 0x4d, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61,
		0x64, 0x20, 0x38, 0x44, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x50,
		0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x75, 0x76,
		0x6f, 0x69, 0x72, 0x20, 0x32, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x31, 0x50, 0x6f,
		0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x33, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x33,
		0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x33, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x34, 0x50, 0x6f, 0x75, 0x76, 0x6f,
		0x69, 0x72, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6d, 0x20, 0x4a, 0x38, 0x52,
		0x37, 0x20, 0x34, 0x47, 0x57, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x58, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x54, 0x45, 0x43, 0x4e, 0x4f, 0x20, 0x53, 0x39, 0x50, 0x6f, 0x76, 0x61, 0x50, 0x6f, 0x76,
		0x61, 0x20, 0x4e, 0x65, 0x6f, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x32, 0x50,
		0x6f, 0x76, 0x61, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x50,
		0x6f, 0x76, 0x61, 0x20, 0x33, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x47, 0x50, 0x6f, 0x76, 0x61,
		0x20, 0x34, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x76, 0x61,
		0x20, 0x35, 0x4c, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x65, 0x6b, 0x6e, 0x6f, 0x73, 0x61,
		0x50, 0x72, 0x65, 0x6f, 0x20, 0x54, 0x65, 0x6b, 0x6e, 0x6f, 0x73, 0x61, 0x20, 0x50, 0x31, 0x50,
		0x72, 0x65, 0x6f, 0x20, 0x50, 0x31, 0x50, 0x72, 0x65, 0x6f, 0x20, 0x50, 0x24, 0x31, 0x54, 0x65,
		0x6c, 0x65, 0x32, 0x24, 0x31, 0x20, 0x31, 0x2e, 0x31, 0x4d, 0x69, 0x64, 0x69, 0x20, 0x32, 0x2e,
		0x30, 0x54, 0x65, 0x6c, 0x65, 0x66, 0x75, 0x6e, 0x6b, 0x65, 0x6e, 0x54, 0x45, 0x4c, 0x2d, 0x31,
		0x30, 0x31, 0x33, 0x47, 0x49, 0x51, 0x41, 0x47, 0x69, 0x71, 0x61, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x20, 0x33, 0x47, 0x54, 0x45, 0x4c, 0x2d, 0x24, 0x31, 0x46, 0x6f, 0x78, 0x74, 0x72, 0x6f, 0x74,
		0x32, 0x46, 0x6f, 0x78, 0x74, 0x72, 0x6f, 0x74, 0x20, 0x32, 0x4c, 0x54, 0x45, 0x5f, 0x4c, 0x49,
		0x4d, 0x41, 0x4c, 0x69, 0x6d, 0x61, 0x20, 0x4c, 0x54, 0x45, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e,
		0x64, 0x5f, 0x4c, 0x54, 0x45, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x4c, 0x54, 0x45,
		0x4c, 0x54, 0x45, 0x20, 0x4d, 0x69, 0x6b, 0x65, 0x4d, 0x69, 0x6b, 0x65, 0x20, 0x4c, 0x54, 0x45,
		0x54, 0x65, 0x6c, 0x65, 0x67, 0x6f, 0x54, 0x45, 0x4c, 0x45, 0x47, 0x4f, 0x2d, 0x57, 0x35, 0x30,
		0x33, 0x57, 0x35, 0x30, 0x33, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x6f, 0x5f, 0x4a, 0x4f, 0x59, 0x32,
		0x4a, 0x6f, 0x79, 0x20, 0x32, 0x57, 0x69, 0x73, 0x65, 0x32, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x57,
		0x69, 0x73, 0x65, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x65, 0x6c, 0x65, 0x6e, 0x6f,
		0x72, 0x54, 0x65, 0x6c, 0x69, 0x61, 0x54, 0x65, 0x6c, 0x69, 0x61, 0x20, 0x62, 0x6f, 0x78, 0x42,
		0x6f, 0x78, 0x54, 0x65, 0x6c, 0x69, 0x74, 0x54, 0x65, 0x6c, 0x6d, 0x61, 0x54, 0x65, 0x6c, 0x6d,
		0x61, 0x5f, 0x46, 0x31, 0x5f, 0x4d, 0x61, 0x78, 0x5f, 0x34, 0x47, 0x46, 0x31, 0x20, 0x4d, 0x61,
		0x78, 0x20, 0x34, 0x47, 0x46, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x34, 0x47, 0x46, 0x31,
		0x78, 0x34, 0x47, 0x46, 0x31, 0x78, 0x20, 0x34, 0x47, 0x46, 0x65, 0x65, 0x6c, 0x5f, 0x50, 0x6c,
		0x75, 0x73, 0x46, 0x65, 0x65, 0x6c, 0x54, 0x65, 0x6c, 0x6f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
		0x73, 0x54, 0x45, 0x4c, 0x4f, 0x5f, 0x4d, 0x35, 0x54, 0x65, 0x6c, 0x70, 0x6f, 0x54, 0x50, 0x53,
		0x24, 0x31, 0x54, 0x65, 0x72, 0x61, 0x63, 0x75, 0x62, 0x65, 0x54, 0x65, 0x73, 0x63, 0x6f, 0x48,
		0x75, 0x64, 0x6c, 0x20, 0x24, 0x31, 0x4f, 0x70, 0x33, 0x6e, 0x20, 0x44, 0x6f, 0x74, 0x74, 0x54,
		0x65, 0x74, 0x72, 0x61, 0x74, 0x61, 0x62, 0x43, 0x61, 0x73, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20,
		0x33, 0x54, 0x68, 0x4c, 0x4b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x32, 0x42, 0x6f, 0x78, 0x20,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6f, 0x78, 0x20, 0x31, 0x54, 0x68, 0x6f, 0x6d, 0x73, 0x6f,
		0x6e, 0x51, 0x4d, 0x37, 0x33, 0x34, 0x2d, 0x32, 0x51, 0x4d, 0x37, 0x33, 0x34, 0x2d, 0x38, 0x47,
		0x51, 0x4d, 0x37, 0x33, 0x35, 0x2d, 0x38, 0x47, 0x51, 0x4d, 0x37, 0x33, 0x36, 0x2d, 0x38, 0x47,
		0x20, 0x28, 0x48, 0x44, 0x29, 0x33, 0x47, 0x20, 0x38, 0x39, 0x35, 0x30, 0x53, 0x50, 0x54, 0x45,
		0x4f, 0x31, 0x30, 0x42, 0x4b, 0x31, 0x36, 0x54, 0x45, 0x4f, 0x31, 0x30, 0x42, 0x4b, 0x31, 0x36,
		0x54, 0x45, 0x4f, 0x24, 0x31, 0x48, 0x45, 0x52, 0x4f, 0x31, 0x30, 0x52, 0x4b, 0x48, 0x65, 0x72,
		0x6f, 0x20, 0x31, 0x30, 0x52, 0x4b, 0x54, 0x6c, 0x69, 0x6e, 0x6b, 0x24, 0x31, 0x45, 0x76, 0x65,
		0x72, 0x79, 0x24, 0x31, 0x44, 0x65, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x54, 0x48, 0x32, 0x30,
		0x31, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x5f, 0x54, 0x48, 0x31, 0x30, 0x31, 0x46,
		0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x20, 0x54, 0x48, 0x31, 0x30, 0x31, 0x53, 0x65, 0x72,
		0x65, 0x61, 0x20, 0x35, 0x30, 0x30, 0x54, 0x68, 0x75, 0x72, 0x61, 0x79, 0x61, 0x54, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x54, 0x69, 0x56, 0x6f, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x20, 0x34,
		0x4b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x34, 0x4b, 0x54, 0x43, 0x44, 0x38, 0x46, 0x36,
		0x30, 0x30, 0x30, 0x54, 0x69, 0x62, 0x75, 0x74, 0x61, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x50,
		0x61, 0x64, 0x20, 0x24, 0x31, 0x54, 0x69, 0x67, 0x65, 0x72, 0x73, 0x54, 0x49, 0x53, 0x30, 0x30,
		0x31, 0x20, 0x53, 0x24, 0x31, 0x54, 0x49, 0x53, 0x30, 0x30, 0x31, 0x20, 0x54, 0x32, 0x54, 0x49,
		0x53, 0x30, 0x30, 0x31, 0x24, 0x31, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x24, 0x31, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x54, 0x69, 0x6d, 0x6f, 0x76, 0x69, 0x54, 0x4d, 0x4f, 0x56, 0x49, 0x5f, 0x59,
		0x45, 0x41, 0x48, 0x5f, 0x42, 0x45, 0x41, 0x54, 0x59, 0x65, 0x61, 0x68, 0x20, 0x42, 0x65, 0x61,
		0x74, 0x59, 0x65, 0x61, 0x68, 0x4c, 0x49, 0x56, 0x45, 0x59, 0x65, 0x61, 0x68, 0x20, 0x4c, 0x49,
		0x56, 0x45, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x58, 0x20, 0x43, 0x61, 0x6d, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x4d, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x6e, 0x66,
		0x69, 0x6e, 0x69, 0x74, 0x20, 0x4d, 0x58, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x24, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x52, 0x4f, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x20,
		0x55, 0x4c, 0x54, 0x52, 0x41, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x45, 0x70, 0x69, 0x78, 0x59, 0x65, 0x61, 0x68, 0x5f, 0x47, 0x6f, 0x59, 0x65, 0x61, 0x68,
		0x20, 0x47, 0x6f, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x61, 0x20, 0x24, 0x31, 0x49, 0x6e,
		0x73, 0x69, 0x67, 0x6e, 0x69, 0x61, 0x20, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x20, 0x24, 0x31, 0x54,
		0x69, 0x6e, 0x61, 0x69, 0x54, 0x69, 0x6e, 0x6d, 0x6f, 0x54, 0x6f, 0x6c, 0x69, 0x6e, 0x6f, 0x54,
		0x6f, 0x6c, 0x69, 0x6e, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x6f, 0x6e, 0x65,
		0x54, 0x6f, 0x6f, 0x6b, 0x79, 0x54, 0x4f, 0x4f, 0x4b, 0x59, 0x41, 0x39, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x54, 0x6f, 0x70, 0x20, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x74, 0x6f, 0x20, 0x57,
		0x34, 0x31, 0x38, 0x43, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x31, 0x31, 0x37, 0x43, 0x6f, 0x74, 0x6f,
		0x20, 0x54, 0x31, 0x31, 0x37, 0x58, 0x31, 0x30, 0x31, 0x33, 0x43, 0x4f, 0x54, 0x4f, 0x5f, 0x54,
		0x34, 0x30, 0x30, 0x31, 0x37, 0x54, 0x34, 0x30, 0x30, 0x31, 0x37, 0x54, 0x6f, 0x70, 0x44, 0x65,
		0x76, 0x69, 0x63, 0x65, 0x54, 0x44, 0x54, 0x34, 0x35, 0x31, 0x38, 0x5f, 0x34, 0x47, 0x54, 0x6f,
		0x70, 0x65, 0x6c, 0x6f, 0x74, 0x65, 0x6b, 0x4b, 0x49, 0x44, 0x53, 0x30, 0x39, 0x4b, 0x49, 0x44,
		0x53, 0x30, 0x39, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x54,
		0x6f, 0x70, 0x6c, 0x75, 0x78, 0x54, 0x6f, 0x70, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x50, 0x30, 0x31,
		0x54, 0x6f, 0x72, 0x65, 0x78, 0x50, 0x61, 0x64, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x52,
		0x4f, 0x49, 0x44, 0x5a, 0x20, 0x24, 0x31, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5a, 0x20, 0x53, 0x6b,
		0x79, 0x20, 0x33, 0x67, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5a, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x33,
		0x47, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5a, 0x20, 0x41, 0x54, 0x4f, 0x4d, 0x20, 0x53, 0x44, 0x52,
		0x4f, 0x49, 0x44, 0x5a, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x53, 0x45, 0x47, 0x4f, 0x20, 0x24,
		0x31, 0x45, 0x47, 0x4f, 0x20, 0x50, 0x68, 0x61, 0x62, 0x20, 0x33, 0x47, 0x45, 0x47, 0x4f, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x47, 0x54, 0x6f, 0x73, 0x68, 0x69, 0x62, 0x61, 0x54, 0x2d,
		0x30, 0x31, 0x43, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x54, 0x2d, 0x30, 0x31, 0x43, 0x54, 0x2d,
		0x30, 0x31, 0x44, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x54, 0x2d, 0x30, 0x31, 0x44, 0x54, 0x2d,
		0x30, 0x32, 0x44, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x54, 0x2d, 0x30, 0x32, 0x44, 0x49, 0x53,
		0x30, 0x34, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x49, 0x53, 0x30, 0x34, 0x49, 0x53, 0x31, 0x31,
		0x54, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x49, 0x53, 0x31, 0x31, 0x54, 0x41, 0x54, 0x37, 0x2d,
		0x43, 0x41, 0x54, 0x31, 0x53, 0x30, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54, 0x31, 0x53,
		0x30, 0x41, 0x54, 0x33, 0x30, 0x30, 0x53, 0x45, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54,
		0x33, 0x30, 0x30, 0x53, 0x45, 0x41, 0x54, 0x35, 0x30, 0x30, 0x61, 0x52, 0x65, 0x67, 0x7a, 0x61,
		0x20, 0x41, 0x54, 0x35, 0x30, 0x30, 0x61, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54, 0x24,
		0x31, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x41, 0x54, 0x31, 0x30, 0x24, 0x31, 0x2d, 0x41,
		0x41, 0x54, 0x31, 0x30, 0x2d, 0x41, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x41, 0x54, 0x31,
		0x30, 0x2d, 0x41, 0x53, 0x41, 0x54, 0x45, 0x4c, 0x4c, 0x49, 0x54, 0x45, 0x20, 0x4c, 0x35, 0x30,
		0x2d, 0x43, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4c, 0x35, 0x30, 0x43,
		0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x41, 0x46, 0x54, 0x4b,
		0x4d, 0x53, 0x54, 0x31, 0x32, 0x34, 0x33, 0x4c, 0x46, 0x37, 0x31, 0x31, 0x55, 0x32, 0x30, 0x41,
		0x46, 0x54, 0x44, 0x43, 0x54, 0x33, 0x31, 0x34, 0x4b, 0x20, 0x55, 0x48, 0x44, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x30, 0x29, 0x41, 0x46, 0x54, 0x42, 0x41, 0x4d, 0x52, 0x33, 0x31, 0x31, 0x34, 0x33,
		0x4c, 0x46, 0x34, 0x32, 0x31, 0x55, 0x31, 0x39, 0x54, 0x53, 0x42, 0x4e, 0x65, 0x74, 0x54, 0x56,
		0x2f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x6d, 0x61, 0x74, 0x65, 0x54, 0x4d, 0x2d, 0x4d, 0x49, 0x44, 0x38, 0x37, 0x30, 0x53, 0x42, 0x53,
		0x75, 0x70, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x20, 0x38, 0x22, 0x54, 0x4d, 0x2d, 0x4d, 0x49, 0x44,
		0x31, 0x30, 0x35, 0x30, 0x57, 0x4b, 0x44, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x4d, 0x61, 0x74, 0x72,
		0x69, 0x78, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x54, 0x72, 0x61, 0x6e, 0x73,
		0x70, 0x65, 0x65, 0x64, 0x54, 0x52, 0x39, 0x39, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x54, 0x72, 0x65, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61,
		0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x53, 0x54, 0x31, 0x33, 0x34, 0x31, 0x36, 0x2d, 0x31, 0x53,
		0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x20, 0x31,
		0x33, 0x2e, 0x34, 0x22, 0x53, 0x75, 0x72, 0x66, 0x74, 0x61, 0x62, 0x20, 0x74, 0x68, 0x65, 0x61,
		0x74, 0x72, 0x65, 0x20, 0x53, 0x31, 0x31, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x54,
		0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x20, 0x53, 0x31, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x54,
		0x61, 0x62, 0x20, 0x50, 0x31, 0x30, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31,
		0x54, 0x46, 0x4d, 0x54, 0x4b, 0x41, 0x57, 0x30, 0x31, 0x32, 0x33, 0x32, 0x53, 0x75, 0x72, 0x66,
		0x54, 0x61, 0x62, 0x20, 0x4c, 0x31, 0x35, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x58,
		0x69, 0x6e, 0x74, 0x72, 0x6f, 0x6e, 0x20, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x72,
		0x65, 0x76, 0x69, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x20, 0x56, 0x38, 0x54,
		0x41, 0x42, 0x20, 0x39, 0x20, 0x33, 0x47, 0x20, 0x56, 0x38, 0x54, 0x41, 0x42, 0x20, 0x39, 0x20,
		0x33, 0x47, 0x54, 0x41, 0x42, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x20, 0x56, 0x31, 0x36, 0x4d,
		0x49, 0x4e, 0x49, 0x54, 0x41, 0x42, 0x20, 0x33, 0x47, 0x56, 0x4d, 0x49, 0x4e, 0x49, 0x54, 0x41,
		0x42, 0x20, 0x33, 0x47, 0x20, 0x56, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x34, 0x20,
		0x43, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x34, 0x20, 0x53, 0x50, 0x68, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x34, 0x2e, 0x35, 0x51, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x35, 0x20, 0x53, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x35, 0x2e, 0x33, 0x20, 0x51,
		0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x51, 0x20, 0x52, 0x45,
		0x56, 0x45, 0x52, 0x53, 0x45, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x36, 0x20, 0x53,
		0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x66, 0x6f, 0x6e, 0x65, 0x50, 0x61,
		0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x31, 0x53, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20,
		0x31, 0x53, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61,
		0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f,
		0x6e, 0x5f, 0x50, 0x72, 0x6f, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f,
		0x54, 0x72, 0x69, 0x6f, 0x56, 0x35, 0x31, 0x44, 0x54, 0x54, 0x72, 0x6f, 0x6e, 0x73, 0x6d, 0x61,
		0x72, 0x74, 0x54, 0x72, 0x75, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x35, 0x47, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x34, 0x2e, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x20, 0x34, 0x2e, 0x30, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x47, 0x65, 0x6e, 0x20, 0x43, 0x20, 0x24, 0x31,
		0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x79,
		0x20, 0x35, 0x2e, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x34,
		0x47, 0x20, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72,
		0x65, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x34, 0x47, 0x20, 0x41, 0x64,
		0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20,
		0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34,
		0x47, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x79, 0x20, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x34, 0x47, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x34, 0x47, 0x20, 0x50, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x34, 0x47, 0x20, 0x50, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20,
		0x4d, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x34, 0x47, 0x20,
		0x4d, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x4d, 0x31, 0x54, 0x52, 0x55,
		0x45, 0x20, 0x42, 0x45, 0x59, 0x4f, 0x4e, 0x44, 0x20, 0x54, 0x41, 0x42, 0x20, 0x33, 0x47, 0x42,
		0x65, 0x79, 0x6f, 0x6e, 0x64, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x30, 0x20, 0x51, 0x75, 0x61, 0x64, 0x43, 0x6f,
		0x72, 0x65, 0x48, 0x50, 0x48, 0x30, 0x37, 0x49, 0x44, 0x20, 0x54, 0x56, 0x20, 0x48, 0x50, 0x48,
		0x30, 0x37, 0x54, 0x72, 0x75, 0x65, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x54, 0x75, 0x43, 0x45, 0x4c,
		0x54, 0x75, 0x6e, 0x69, 0x73, 0x69, 0x65, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x53,
		0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x62, 0x79, 0x20, 0x54, 0x54, 0x58, 0x35,
		0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x35, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x58, 0x20, 0x52,
		0x61, 0x79, 0x58, 0x35, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x58, 0x35, 0x20, 0x4d, 0x61, 0x78,
		0x58, 0x36, 0x20, 0x5a, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x64, 0x20, 0x37,
		0x22, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x2d, 0x58, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x78, 0x5f, 0x53,
		0x33, 0x53, 0x33, 0x45, 0x33, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x54, 0x75, 0x72, 0x62,
		0x6f, 0x2d, 0x58, 0x5f, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x45, 0x70, 0x73, 0x69, 0x6c,
		0x6f, 0x6e, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x2d, 0x58, 0x20, 0x6c, 0x61, 0x6d, 0x64, 0x61, 0x4c,
		0x61, 0x6d, 0x64, 0x61, 0x50, 0x69, 0x20, 0x34, 0x47, 0x54, 0x55, 0x52, 0x42, 0x4f, 0x58, 0x5f,
		0x49, 0x34, 0x47, 0x49, 0x20, 0x34, 0x47, 0x49, 0x63, 0x65, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x2d,
		0x58, 0x20, 0x43, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x49, 0x49, 0x43, 0x6f, 0x72, 0x61, 0x6c, 0x20,
		0x49, 0x49, 0x41, 0x71, 0x75, 0x61, 0x20, 0x49, 0x49, 0x48, 0x69, 0x76, 0x65, 0x20, 0x56, 0x20,
		0x33, 0x47, 0x48, 0x69, 0x76, 0x65, 0x20, 0x56, 0x49, 0x46, 0x69, 0x72, 0x65, 0x20, 0x49, 0x49,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x42, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x20, 0x49, 0x56, 0x52, 0x75,
		0x62, 0x69, 0x6b, 0x20, 0x49, 0x49, 0x20, 0x37, 0x22, 0x52, 0x75, 0x62, 0x69, 0x6b, 0x20, 0x49,
		0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x52, 0x75, 0x62, 0x69, 0x6b, 0x20, 0x49, 0x49, 0x49,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x20, 0x49, 0x49,
		0x49, 0x20, 0x33, 0x47, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x43, 0x61, 0x6c, 0x6c, 0x74, 0x61, 0x62, 0x32, 0x47, 0x42, 0x31, 0x30,
		0x43, 0x61, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x43, 0x61, 0x6c,
		0x6c, 0x74, 0x61, 0x62, 0x37, 0x69, 0x6e, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x61, 0x62,
		0x20, 0x37, 0x22, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x41, 0x33, 0x33,
		0x20, 0x69, 0x6e, 0x65, 0x74, 0x54, 0x77, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x75, 0x72, 0x62,
		0x6f, 0x4b, 0x69, 0x64, 0x73, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x70, 0x61, 0x64, 0x20,
		0x33, 0x47, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x33,
		0x47, 0x20, 0x4e, 0x65, 0x77, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x50, 0x61, 0x64, 0x54, 0x75, 0x72,
		0x6b, 0x63, 0x65, 0x6c, 0x6c, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x54, 0x35, 0x30, 0x54, 0x24,
		0x31, 0x30, 0x54, 0x32, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x35, 0x54, 0x32, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x54,
		0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x54, 0x77, 0x6f, 0x65, 0x54, 0x79, 0x6d, 0x65, 0x73,
		0x54, 0xc3, 0xbc, 0x72, 0x6b, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x6b, 0x6f, 0x6d, 0x54, 0x75, 0x72,
		0x6b, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x6b, 0x6f, 0x6d, 0x54, 0x54, 0x31, 0x37, 0x35, 0x55, 0x2d,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x33, 0x30, 0x65, 0x20, 0x35,
		0x47, 0x55, 0x2e, 0x53, 0x2e, 0x20, 0x43, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x55, 0x53,
		0x43, 0x43, 0x2d, 0x55, 0x53, 0x43, 0x43, 0x2d, 0x45, 0x36, 0x37, 0x36, 0x32, 0x4b, 0x79, 0x6f,
		0x63, 0x65, 0x72, 0x61, 0x20, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x45,
		0x55, 0x45, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x50, 0x61, 0x64, 0x20, 0x31, 0x55, 0x4d, 0x49,
		0x44, 0x49, 0x47, 0x49, 0x41, 0x31, 0x31, 0x20, 0x54, 0x61, 0x62, 0x41, 0x31, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x50, 0x31, 0x37, 0x4d, 0x50, 0x31, 0x38, 0x47, 0x31,
		0x20, 0x4d, 0x61, 0x78, 0x41, 0x31, 0x31, 0x53, 0x41, 0x31, 0x33, 0x53, 0x55, 0x4d, 0x49, 0x20,
		0x54, 0x4f, 0x55, 0x43, 0x48, 0x20, 0x58, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x58, 0x55, 0x4d,
		0x49, 0x20, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x45, 0x4f, 0x6e, 0x65,
		0x20, 0x50, 0x72, 0x6f, 0x42, 0x49, 0x53, 0x4f, 0x4e, 0x20, 0x47, 0x54, 0x42, 0x69, 0x73, 0x6f,
		0x6e, 0x20, 0x47, 0x54, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x47, 0x42, 0x69,
		0x73, 0x6f, 0x6e, 0x20, 0x4e, 0x31, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x42,
		0x69, 0x73, 0x6f, 0x6e, 0x20, 0x47, 0x54, 0x32, 0x20, 0x35, 0x47, 0x42, 0x69, 0x73, 0x6f, 0x6e,
		0x20, 0x47, 0x54, 0x32, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x32, 0x42, 0x49, 0x53, 0x4f, 0x4e,
		0x20, 0x50, 0x72, 0x6f, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x49, 0x53,
		0x4f, 0x4e, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x68, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x53, 0x48,
		0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x53, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x5f, 0x58,
		0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x58, 0x43, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x20,
		0x32, 0x43, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65, 0x72, 0x5a, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x32, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x53, 0x32, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x53, 0x32, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x33, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x35, 0x53, 0x41, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47,
		0x41, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x35, 0x47, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x55, 0x4e, 0x49, 0x57, 0x41, 0x55, 0x4e,
		0x4e, 0x4f, 0x55, 0x4f, 0x4f, 0x47, 0x4f, 0x55, 0x55, 0x54, 0x4f, 0x4b, 0x44, 0x6f, 0x72, 0x65,
		0x6c, 0x20, 0x33, 0x53, 0x44, 0x6f, 0x72, 0x65, 0x6c, 0x20, 0x24, 0x31, 0x48, 0x65, 0x6c, 0x6c,
		0x6f, 0x20, 0x37, 0x51, 0x55, 0x54, 0x53, 0x74, 0x61, 0x72, 0x63, 0x6f, 0x6d, 0x55, 0x54, 0x69,
		0x6d, 0x65, 0x55, 0x5a, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55, 0x7a, 0x62, 0x65, 0x6b,
		0x69, 0x73, 0x74, 0x61, 0x6e, 0x55, 0x67, 0x6f, 0x6f, 0x73, 0x55, 0x54, 0x33, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x55, 0x68, 0x61, 0x6e, 0x73, 0x55, 0x68, 0x61, 0x70, 0x70, 0x79, 0x55, 0x50, 0x24,
		0x31, 0x55, 0x50, 0x33, 0x35, 0x30, 0x55, 0x50, 0x35, 0x38, 0x30, 0x55, 0x35, 0x38, 0x30, 0x55,
		0x6c, 0x65, 0x66, 0x6f, 0x6e, 0x65, 0x42, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x24, 0x31,
		0x42, 0x65, 0x20, 0x50, 0x75, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x65, 0x20, 0x50,
		0x75, 0x72, 0x65, 0x42, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x65,
		0x20, 0x4f, 0x6e, 0x65, 0x42, 0x65, 0x20, 0x58, 0x55, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50,
		0x36, 0x30, 0x30, 0x30, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x72, 0x69, 0x73, 0x5f, 0x6c,
		0x69, 0x74, 0x65, 0x50, 0x61, 0x72, 0x69, 0x73, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72,
		0x69, 0x73, 0x5f, 0x58, 0x50, 0x61, 0x72, 0x69, 0x73, 0x20, 0x58, 0x50, 0x61, 0x72, 0x69, 0x73,
		0x54, 0x69, 0x67, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x74, 0x65, 0x54, 0x69, 0x67, 0x65, 0x72, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x41, 0x72, 0x6d, 0x6f,
		0x72, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20,
		0x58, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x41, 0x72, 0x6d,
		0x6f, 0x72, 0x20, 0x31, 0x38, 0x54, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x36, 0x53, 0x41, 0x72,
		0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x45, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x24, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x24, 0x31, 0x41, 0x72, 0x6d,
		0x6f, 0x72, 0x20, 0x24, 0x31, 0x53, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x41, 0x72, 0x6d,
		0x6f, 0x72, 0x20, 0x33, 0x57, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x33, 0x57, 0x54, 0x41, 0x72,
		0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x20, 0x35, 0x47, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x41, 0x72, 0x6d,
		0x6f, 0x72, 0x24, 0x31, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69,
		0x65, 0x6e, 0x6e, 0x61, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x50, 0x55, 0x6d, 0x61, 0x78,
		0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x51, 0x61, 0x20, 0x33, 0x47, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x51, 0x20, 0x4c, 0x54,
		0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x43, 0x20,
		0x4c, 0x54, 0x45, 0x31, 0x30, 0x4c, 0x2d, 0x50, 0x4c, 0x55, 0x53, 0x56, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x51, 0x20, 0x50, 0x72, 0x6f,
		0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x41, 0x20, 0x4c,
		0x54, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x51,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x50, 0x35, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x6e, 0x62, 0x6c,
		0x6f, 0x63, 0x6b, 0x20, 0x54, 0x65, 0x63, 0x68, 0x53, 0x39, 0x30, 0x30, 0x50, 0x52, 0x4f, 0x42,
		0x54, 0x53, 0x39, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x42, 0x54, 0x53, 0x39, 0x30, 0x30,
		0x5f, 0x50, 0x72, 0x6f, 0x53, 0x39, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x6e, 0x69, 0x64,
		0x65, 0x6e, 0x55, 0x6e, 0x69, 0x68, 0x65, 0x72, 0x74, 0x7a, 0x4a, 0x65, 0x6c, 0x6c, 0x79, 0x20,
		0x32, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x5f, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x53,
		0x6c, 0x69, 0x6d, 0x54, 0x69, 0x63, 0x6b, 0x74, 0x6f, 0x63, 0x6b, 0x2d, 0x53, 0x54, 0x69, 0x63,
		0x6b, 0x74, 0x6f, 0x63, 0x6b, 0x20, 0x53, 0x54, 0x69, 0x63, 0x6b, 0x74, 0x6f, 0x63, 0x6b, 0x54,
		0x41, 0x4e, 0x4b, 0x20, 0x30, 0x31, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x30, 0x31, 0x54, 0x41, 0x4e,
		0x4b, 0x32, 0x38, 0x38, 0x34, 0x39, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x32, 0x55, 0x6e, 0x69,
		0x6d, 0x61, 0x78, 0x55, 0x6e, 0x69, 0x71, 0x63, 0x65, 0x6c, 0x6c, 0x55, 0x4e, 0x49, 0x51, 0x43,
		0x45, 0x4c, 0x4c, 0x5f, 0x41, 0x34, 0x55, 0x6e, 0x69, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x6e,
		0x69, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x65, 0x63, 0x68, 0x55, 0x6e,
		0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x57, 0x65, 0x62, 0x20, 0x54, 0x56, 0x4d, 0x31, 0x30, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x4d, 0x38, 0x53, 0x2b, 0x20, 0x34, 0x4b, 0x48, 0x31, 0x30, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x69, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x75,
		0x64, 0x69, 0x20, 0x4b, 0x53, 0x55, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x55, 0x35, 0x31, 0x33,
		0x44, 0x72, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x54, 0x55, 0x35, 0x31, 0x35, 0x31, 0x55, 0x36, 0x31,
		0x31, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x58, 0x55, 0x36, 0x31, 0x33, 0x51, 0x75,
		0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x53, 0x55, 0x36, 0x31, 0x35, 0x51, 0x75, 0x61, 0x74, 0x74,
		0x72, 0x6f, 0x20, 0x4d, 0x55, 0x36, 0x31, 0x36, 0x55, 0x37, 0x31, 0x30, 0x51, 0x75, 0x61, 0x74,
		0x74, 0x72, 0x6f, 0x20, 0x55, 0x37, 0x31, 0x30, 0x55, 0x37, 0x32, 0x30, 0x51, 0x75, 0x61, 0x74,
		0x74, 0x72, 0x6f, 0x20, 0x5a, 0x55, 0x2d, 0x38, 0x33, 0x30, 0x52, 0x75, 0x73, 0x68, 0x55, 0x39,
		0x30, 0x33, 0x55, 0x39, 0x30, 0x35, 0x41, 0x69, 0x72, 0x20, 0x35, 0x2e, 0x35, 0x55, 0x6e, 0x6e,
		0x69, 0x6f, 0x6e, 0x20, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x65, 0x73,
		0x53, 0x50, 0x37, 0x55, 0x6e, 0x6f, 0x6e, 0x75, 0x55, 0x6e, 0x6f, 0x77, 0x68, 0x79, 0x51, 0x4f,
		0x4f, 0x51, 0x20, 0x56, 0x24, 0x31, 0x51, 0x4f, 0x4f, 0x51, 0x55, 0x72, 0x6f, 0x76, 0x6f, 0x56,
		0x2d, 0x47, 0x65, 0x6e, 0x56, 0x2d, 0x48, 0x4f, 0x4d, 0x45, 0x56, 0x2d, 0x48, 0x4f, 0x50, 0x45,
		0x56, 0x41, 0x49, 0x4f, 0x56, 0x50, 0x41, 0x30, 0x35, 0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x41, 0x56, 0x41, 0x4c, 0x45, 0x4d, 0x50, 0x48, 0x41, 0x4e, 0x54, 0x4f, 0x4d, 0x5f, 0x5a, 0x50,
		0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x5a, 0x56, 0x41, 0x4c, 0x54, 0x45, 0x43, 0x48, 0x54,
		0x41, 0x42, 0x37, 0x51, 0x38, 0x30, 0x34, 0x56, 0x41, 0x4c, 0x54, 0x41, 0x42, 0x2d, 0x37, 0x51,
		0x38, 0x30, 0x34, 0x56, 0x41, 0x4c, 0x56, 0x41, 0x56, 0x41, 0x56, 0x43, 0x43, 0x61, 0x63, 0x74,
		0x75, 0x73, 0x2d, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x63, 0x74, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f,
		0x24, 0x31, 0x20, 0x49, 0x49, 0x56, 0x44, 0x56, 0x44, 0x56, 0x45, 0x4f, 0x4e, 0x56, 0x45, 0x54,
		0x41, 0x53, 0x56, 0x47, 0x4f, 0x20, 0x54, 0x45, 0x4c, 0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65,
		0x20, 0x56, 0x24, 0x31, 0x4f, 0x63, 0x65, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x4e, 0x65, 0x77, 0x20,
		0x24, 0x31, 0x69, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x69, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x56, 0x49, 0x44, 0x41, 0x56, 0x49, 0x49, 0x50, 0x4f, 0x4f, 0x76, 0x69, 0x32, 0x30, 0x32, 0x32,
		0x30, 0x38, 0x31, 0x39, 0x52, 0x36, 0x56, 0x49, 0x56, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x56, 0x49,
		0x57, 0x41, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x4c, 0x69, 0x67, 0x68,
		0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x20, 0x50, 0x4c, 0x55, 0x53,
		0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x20,
		0x4f, 0x4e, 0x45, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x4f, 0x6e, 0x65, 0x4c, 0x69, 0x67, 0x68,
		0x74, 0x20, 0x41, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x20, 0x50,
		0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x31, 0x56, 0x4b, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x56, 0x4b, 0x24, 0x31, 0x56, 0x4b, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x54, 0x35, 0x20,
		0x53, 0x45, 0x56, 0x4f, 0x47, 0x41, 0x56, 0x4f, 0x47, 0x41, 0x20, 0x35, 0x35, 0x39, 0x30, 0x39,
		0x56, 0x56, 0x4f, 0x4c, 0x4b, 0x41, 0x4e, 0x4f, 0x56, 0x55, 0x43, 0x41, 0x54, 0x49, 0x4d, 0x45,
		0x53, 0x56, 0x75, 0x63, 0x61, 0x50, 0x61, 0x64, 0x56, 0x56, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x56,
		0x31, 0x56, 0x61, 0x6e, 0x6b, 0x79, 0x6f, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x50, 0x61, 0x64,
		0x20, 0x53, 0x24, 0x31, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31,
		0x51, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x53, 0x31, 0x30, 0x5f, 0x52, 0x4f, 0x57, 0x4d, 0x61,
		0x74, 0x72, 0x69, 0x78, 0x50, 0x61, 0x64, 0x20, 0x53, 0x31, 0x30, 0x56, 0x61, 0x72, 0x67, 0x6f,
		0x56, 0x61, 0x73, 0x74, 0x6b, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x64, 0x20,
		0x24, 0x31, 0x20, 0x24, 0x32, 0x56, 0x65, 0x6b, 0x74, 0x61, 0x56, 0x65, 0x6e, 0x73, 0x6f, 0x49,
		0x73, 0x70, 0x72, 0x69, 0x74, 0x20, 0x55, 0x35, 0x30, 0x56, 0x65, 0x6e, 0x73, 0x74, 0x61, 0x72,
		0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
		0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x61, 0x72, 0x69,
		0x6e, 0x65, 0x72, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x43, 0x54, 0x24, 0x31, 0x56,
		0x65, 0x72, 0x69, 0x63, 0x6f, 0x55, 0x6e, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x55,
		0x6e, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x4d, 0x2d, 0x24, 0x31, 0x56, 0x65, 0x72, 0x69,
		0x7a, 0x6f, 0x6e, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x31, 0x30, 0x51, 0x54,
		0x41, 0x53, 0x55, 0x4e, 0x31, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x38, 0x20,
		0x48, 0x44, 0x51, 0x54, 0x41, 0x53, 0x55, 0x4e, 0x32, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69,
		0x73, 0x20, 0x38, 0x20, 0x48, 0x44, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x51, 0x54, 0x41,
		0x51, 0x5a, 0x33, 0x4b, 0x49, 0x44, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x4b,
		0x69, 0x64, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x51, 0x54, 0x41, 0x51, 0x5a, 0x33, 0x45, 0x6c, 0x6c,
		0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x38, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20,
		0x37, 0x57, 0x54, 0x56, 0x49, 0x53, 0x30, 0x31, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x20,
		0x4d, 0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x56, 0x65, 0x72, 0x6e, 0x65, 0x65, 0x41, 0x70,
		0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x20,
		0x58, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x4d, 0x61, 0x72, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x54,
		0x68, 0x6f, 0x72, 0x20, 0x45, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x65,
		0x72, 0x6e, 0x65, 0x65, 0x5f, 0x4d, 0x35, 0x4d, 0x37, 0x5f, 0x45, 0x45, 0x41, 0x58, 0x32, 0x5f,
		0x65, 0x75, 0x72, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x73, 0x65, 0x64, 0x4d, 0x6f, 0x74, 0x69, 0x6f,
		0x6e, 0x20, 0x45, 0x31, 0x2e, 0x31, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x56, 0x65, 0x72, 0x74,
		0x65, 0x78, 0x4c, 0x75, 0x63, 0x6b, 0x20, 0x4c, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x49,
		0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73,
		0x73, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x24, 0x31,
		0x20, 0x34, 0x47, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x4c, 0x75, 0x63, 0x6b, 0x20,
		0x34, 0x47, 0x20, 0x4e, 0x46, 0x43, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x4c, 0x69,
		0x6f, 0x6e, 0x20, 0x24, 0x31, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x54, 0x61, 0x62, 0x20, 0x58,
		0x24, 0x31, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x47, 0x20, 0x24, 0x32, 0x2e, 0x24, 0x33, 0x22,
		0x56, 0x65, 0x72, 0x74, 0x75, 0x41, 0x73, 0x74, 0x65, 0x72, 0x24, 0x31, 0x69, 0x56, 0x65, 0x72,
		0x74, 0x75, 0x20, 0x35, 0x47, 0x4d, 0x65, 0x74, 0x61, 0x76, 0x65, 0x72, 0x74, 0x75, 0x20, 0x35,
		0x47, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x58,
		0x56, 0x65, 0x72, 0x79, 0x6b, 0x6f, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x79, 0x6b, 0x6f, 0x6f, 0x6c,
		0x4c, 0x6f, 0x74, 0x75, 0x73, 0x4c, 0x6f, 0x74, 0x75, 0x73, 0x20, 0x4a, 0x72, 0x4c, 0x6f, 0x74,
		0x75, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x49, 0x49, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x6f, 0x74, 0x75, 0x73, 0x20, 0x49, 0x49,
		0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x63, 0x6c, 0x69,
		0x70, 0x73, 0x65, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x48, 0x65, 0x6c, 0x69, 0x78, 0x20,
		0x49, 0x49, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x76, 0x65, 0x72,
		0x69, 0x63, 0x6b, 0x20, 0x49, 0x49, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x49,
		0x49, 0x49, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4a,
		0x72, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x4a, 0x72, 0x4d, 0x61, 0x76, 0x65,
		0x72, 0x69, 0x63, 0x6b, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x70, 0x65, 0x61, 0x72, 0x53, 0x70, 0x65,
		0x61, 0x72, 0x20, 0x4a, 0x72, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x51, 0x75, 0x61, 0x74,
		0x74, 0x72, 0x6f, 0x53, 0x6f, 0x6c, 0x20, 0x51, 0x75, 0x61, 0x74, 0x72, 0x6f, 0x20, 0x4a, 0x72,
		0x43, 0x79, 0x70, 0x72, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x79, 0x70, 0x72, 0x75, 0x73,
		0x20, 0x4c, 0x54, 0x45, 0x4c, 0x65, 0x6f, 0x20, 0x33, 0x47, 0x4c, 0x65, 0x6f, 0x20, 0x49, 0x56,
		0x4c, 0x65, 0x6f, 0x20, 0x56, 0x44, 0x6f, 0x72, 0x61, 0x64, 0x6f, 0x4f, 0x72, 0x69, 0x6f, 0x6e,
		0x20, 0x50, 0x72, 0x6f, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4a, 0x72, 0x43, 0x6f, 0x73, 0x6d,
		0x6f, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x65, 0x20, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x4b,
		0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x61, 0x64, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x6f, 0x6c, 0x6f, 0x72,
		0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x4b, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x61, 0x64, 0x20, 0x49,
		0x56, 0x56, 0x65, 0x73, 0x74, 0x61, 0x56, 0x45, 0x53, 0x54, 0x41, 0x33, 0x32, 0x4c, 0x44, 0x38,
		0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x54, 0x56, 0x20, 0x33, 0x32, 0x4c, 0x44, 0x38, 0x36, 0x53,
		0x56, 0x45, 0x53, 0x54, 0x41, 0x5f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x54, 0x56, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x54, 0x56, 0x56, 0x65, 0x73, 0x74, 0x65, 0x6c, 0x56, 0x54, 0x39, 0x37, 0x50,
		0x52, 0x4f, 0x56, 0x54, 0x61, 0x62, 0x20, 0x39, 0x2e, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x50,
		0x37, 0x34, 0x56, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x49, 0x49, 0x56, 0x54,
		0x41, 0x42, 0x31, 0x30, 0x56, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x56, 0x5f, 0x54, 0x41, 0x42,
		0x5f, 0x37, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x49, 0x49, 0x49, 0x56, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x20, 0x45, 0x63, 0x6f, 0x20, 0x33, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x37, 0x5f, 0x4c, 0x49,
		0x54, 0x45, 0x5f, 0x49, 0x49, 0x49, 0x56, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x33, 0x56, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x56, 0x33, 0x5f, 0x35, 0x35, 0x38,
		0x30, 0x5f, 0x44, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x56, 0x33, 0x20, 0x35,
		0x35, 0x38, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x56, 0x53, 0x50, 0x31, 0x34, 0x35, 0x4d, 0x56,
		0x65, 0x6e, 0x75, 0x73, 0x20, 0x34, 0x2e, 0x35, 0x56, 0x53, 0x50, 0x32, 0x35, 0x30, 0x47, 0x56,
		0x65, 0x6e, 0x75, 0x73, 0x20, 0x35, 0x2e, 0x30, 0x56, 0x56, 0x53, 0x50, 0x32, 0x35, 0x30, 0x53,
		0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x35, 0x2e, 0x30, 0x58, 0x56, 0x53, 0x50, 0x33, 0x35, 0x35,
		0x47, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x35, 0x2e, 0x35, 0x56, 0x56, 0x53, 0x50, 0x33, 0x35,
		0x35, 0x53, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x35, 0x2e, 0x35, 0x58, 0x56, 0x65, 0x6e, 0x75,
		0x73, 0x20, 0x56, 0x24, 0x31, 0x24, 0x32, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x5a, 0x24, 0x31,
		0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x45, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x45, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56,
		0x65, 0x6e, 0x75, 0x73, 0x20, 0x45, 0x24, 0x31, 0x56, 0x65, 0x73, 0x74, 0x65, 0x6c, 0x5f, 0x35,
		0x30, 0x30, 0x30, 0x5f, 0x44, 0x75, 0x61, 0x6c, 0x35, 0x30, 0x30, 0x30, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x56, 0x65, 0x73, 0x74, 0x65, 0x6c, 0x5f, 0x35, 0x30, 0x30, 0x30, 0x5f, 0x32, 0x67, 0x62,
		0x35, 0x30, 0x30, 0x30, 0x20, 0x32, 0x47, 0x42, 0x35, 0x35, 0x33, 0x30, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x56, 0x65, 0x78, 0x69, 0x61, 0x56, 0x65, 0x78, 0x69, 0x61, 0x20, 0x46, 0x43, 0x53, 0x20,
		0x45, 0x32, 0x20, 0x43, 0x4c, 0x4d, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x45,
		0x32, 0x20, 0x43, 0x4c, 0x4d, 0x56, 0x69, 0x42, 0x6f, 0x78, 0x56, 0x69, 0x63, 0x74, 0x75, 0x72,
		0x69, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x56, 0x69, 0x64,
		0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x5f, 0x56, 0x31,
		0x35, 0x38, 0x35, 0x56, 0x31, 0x35, 0x38, 0x35, 0x56, 0x54, 0x37, 0x35, 0x43, 0x4b, 0x72, 0x79,
		0x74, 0x6f, 0x6e, 0x20, 0x33, 0x4b, 0x72, 0x79, 0x74, 0x6f, 0x6e, 0x4b, 0x72, 0x79, 0x74, 0x6f,
		0x6e, 0x20, 0x32, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x74, 0x65, 0x20,
		0x31, 0x31, 0x44, 0x65, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x31, 0x4d, 0x65, 0x74, 0x61, 0x6c,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x31, 0x53, 0x74, 0x61, 0x72, 0x72, 0x20, 0x31, 0x30, 0x30, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x35, 0x30, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x5a, 0x34, 0x35, 0x20, 0x24,
		0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x5a, 0x34, 0x35, 0x51, 0x20, 0x53,
		0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x5a, 0x35, 0x30, 0x20,
		0x4e, 0x6f, 0x76, 0x61, 0x56, 0x69, 0x65, 0x77, 0x53, 0x6f, 0x6e, 0x69, 0x63, 0x56, 0x35, 0x30,
		0x30, 0x41, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x24, 0x31, 0x76, 0x73, 0x69, 0x37, 0x71, 0x5f, 0x31, 0x56, 0x69, 0x65, 0x77, 0x50,
		0x61, 0x64, 0x20, 0x69, 0x37, 0x51, 0x56, 0x69, 0x65, 0x77, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31,
		0x56, 0x69, 0x65, 0x77, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x49, 0x46, 0x50, 0x24, 0x31, 0x35,
		0x30, 0x2d, 0x33, 0x20, 0x24, 0x31, 0x22, 0x20, 0x34, 0x4b, 0x56, 0x69, 0x6e, 0x61, 0x62, 0x6f,
		0x78, 0x58, 0x24, 0x31, 0x20, 0x28, 0x24, 0x32, 0x29, 0x56, 0x69, 0x6e, 0x67, 0x61, 0x56, 0x4d,
		0x50, 0x2d, 0x30, 0x32, 0x31, 0x2d, 0x38, 0x32, 0x30, 0x32, 0x31, 0x56, 0x4d, 0x50, 0x2d, 0x30,
		0x32, 0x35, 0x2d, 0x33, 0x32, 0x34, 0x30, 0x32, 0x35, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x31, 0x35,
		0x2d, 0x31, 0x36, 0x32, 0x30, 0x31, 0x35, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x34, 0x31, 0x2d, 0x31,
		0x36, 0x32, 0x30, 0x34, 0x31, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x34, 0x35, 0x2d, 0x36, 0x36, 0x34,
		0x30, 0x34, 0x35, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x31, 0x31, 0x2d, 0x38, 0x31, 0x30, 0x31, 0x31,
		0x30, 0x32, 0x33, 0x56, 0x69, 0x6e, 0x73, 0x6f, 0x63, 0x56, 0x69, 0x6f, 0x73, 0x56, 0x4d, 0x50,
		0x30, 0x36, 0x31, 0x37, 0x56, 0x69, 0x70, 0x72, 0x6f, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x58, 0x45,
		0x64, 0x67, 0x65, 0x20, 0x32, 0x56, 0x69, 0x72, 0x7a, 0x6f, 0x56, 0x24, 0x31, 0x63, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x49, 0x6e, 0x73,
		0x70, 0x69, 0x72, 0x65, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x20, 0x4c, 0x61, 0x6e, 0x64, 0x50,
		0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x31, 0x30,
		0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x20, 0x24, 0x31, 0x56, 0x69, 0x74, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x56, 0x69, 0x74, 0x79, 0x61,
		0x7a, 0x56, 0x69, 0x75, 0x6d, 0x65, 0x65, 0x24, 0x31, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x45, 0x56, 0x35, 0x20, 0x58, 0x45, 0x56, 0x37, 0x56, 0x69,
		0x76, 0x61, 0x78, 0x46, 0x6c, 0x79, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x79,
		0x20, 0x34, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x58, 0x24, 0x31, 0x46, 0x75, 0x6e, 0x20, 0x53,
		0x35, 0x30, 0x30, 0x46, 0x75, 0x6e, 0x20, 0x53, 0x24, 0x31, 0x46, 0x6c, 0x79, 0x20, 0x24, 0x31,
		0x46, 0x6c, 0x79, 0x20, 0x56, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6f, 0x69,
		0x6e, 0x74, 0x20, 0x58, 0x35, 0x30, 0x31, 0x30, 0x54, 0x50, 0x43, 0x2d, 0x24, 0x31, 0x20, 0x24,
		0x32, 0x47, 0x56, 0x69, 0x76, 0x6f, 0x58, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x56, 0x32, 0x31, 0x37,
		0x38, 0x41, 0x58, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x56, 0x32, 0x32, 0x36, 0x36, 0x41, 0x58, 0x20,
		0x46, 0x6f, 0x6c, 0x64, 0x20, 0x32, 0x56, 0x32, 0x32, 0x32, 0x39, 0x41, 0x58, 0x20, 0x46, 0x6f,
		0x6c, 0x64, 0x2b, 0x69, 0x51, 0x4f, 0x4f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x33, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x39, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x39, 0x20, 0x53, 0x45, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x39, 0x54, 0x56, 0x32, 0x32,
		0x31, 0x38, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32,
		0x32, 0x31, 0x37, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x31, 0x30, 0x56, 0x32, 0x32, 0x34, 0x33,
		0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x31, 0x31, 0x56, 0x32, 0x32, 0x35, 0x34, 0x41, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x33, 0x20,
		0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x35, 0x56, 0x32, 0x31, 0x38, 0x30, 0x47, 0x41,
		0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x35, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x37, 0x56, 0x32,
		0x31, 0x39, 0x36, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x36, 0x56, 0x32,
		0x32, 0x33, 0x31, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x56, 0x32,
		0x32, 0x33, 0x38, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x20, 0x53,
		0x45, 0x56, 0x32, 0x31, 0x35, 0x37, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20,
		0x35, 0x20, 0x53, 0x45, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x53, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x37, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x50, 0x72, 0x6f,
		0x69, 0x51, 0x4f, 0x4f, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x4e, 0x65, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x38, 0x35, 0x35, 0x56, 0x32, 0x33, 0x30, 0x31, 0x41, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x38, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65,
		0x6f, 0x20, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x36, 0x20, 0x53, 0x45, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x31, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x31, 0x78, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x5a, 0x33, 0x56, 0x31, 0x39, 0x31, 0x39, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x5a, 0x35, 0x78, 0x56, 0x32, 0x31, 0x33, 0x31, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x35,
		0x78, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x34, 0x38, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a,
		0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x35, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x5a, 0x36, 0x56, 0x32, 0x31, 0x36, 0x34, 0x4b, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x36,
		0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x5a, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x31, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x55, 0x31, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x33, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x55, 0x33, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x33, 0x78, 0x20, 0x35,
		0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x35, 0x20, 0x50, 0x72,
		0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x38, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x38, 0x20, 0x50, 0x72,
		0x6f, 0x56, 0x32, 0x31, 0x56, 0x32, 0x31, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x65, 0x56, 0x32,
		0x31, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x55,
		0x32, 0x30, 0x55, 0x31, 0x30, 0x4e, 0x65, 0x78, 0x4e, 0x65, 0x78, 0x20, 0x33, 0x4e, 0x65, 0x78,
		0x20, 0x33, 0x20, 0x35, 0x47, 0x4e, 0x65, 0x78, 0x20, 0x33, 0x53, 0x4e, 0x65, 0x78, 0x20, 0x53,
		0x4e, 0x65, 0x78, 0x20, 0x33, 0x53, 0x20, 0x35, 0x47, 0x4e, 0x65, 0x78, 0x20, 0x41, 0x4e, 0x65,
		0x78, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x31,
		0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x35, 0x31, 0x54, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x56, 0x32, 0x31, 0x35, 0x33, 0x54, 0x31, 0x20, 0x34, 0x47, 0x56, 0x32, 0x31, 0x34, 0x33,
		0x54, 0x31, 0x78, 0x56, 0x32, 0x31, 0x38, 0x38, 0x41, 0x54, 0x32, 0x78, 0x56, 0x32, 0x32, 0x35,
		0x33, 0x54, 0x32, 0x78, 0x20, 0x35, 0x47, 0x56, 0x31, 0x39, 0x36, 0x32, 0x42, 0x41, 0x47, 0x31,
		0x20, 0x35, 0x47, 0x53, 0x31, 0x35, 0x53, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x31, 0x33,
		0x30, 0x41, 0x53, 0x31, 0x30, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x65, 0x56, 0x32, 0x31,
		0x32, 0x36, 0x56, 0x32, 0x33, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x33, 0x30, 0x56, 0x32,
		0x33, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x33, 0x32, 0x41, 0x58, 0x37, 0x30, 0x74, 0x56, 0x32,
		0x31, 0x33, 0x32, 0x56, 0x32, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x56, 0x32, 0x32,
		0x30, 0x32, 0x56, 0x32, 0x35, 0x20, 0x53, 0x45, 0x56, 0x32, 0x35, 0x65, 0x56, 0x32, 0x32, 0x33,
		0x30, 0x56, 0x32, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x32, 0x33, 0x37, 0x56, 0x32, 0x37,
		0x65, 0x56, 0x32, 0x37, 0x56, 0x32, 0x32, 0x30, 0x37, 0x41, 0x53, 0x31, 0x35, 0x20, 0x50, 0x72,
		0x6f, 0x53, 0x36, 0x20, 0x35, 0x47, 0x53, 0x31, 0x32, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x39,
		0x30, 0x41, 0x53, 0x31, 0x35, 0x65, 0x56, 0x32, 0x32, 0x34, 0x34, 0x41, 0x53, 0x31, 0x36, 0x56,
		0x32, 0x32, 0x33, 0x39, 0x41, 0x53, 0x31, 0x36, 0x65, 0x53, 0x37, 0x56, 0x32, 0x32, 0x38, 0x33,
		0x41, 0x56, 0x32, 0x32, 0x38, 0x34, 0x41, 0x53, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x37,
		0x65, 0x53, 0x37, 0x74, 0x53, 0x37, 0x74, 0x20, 0x35, 0x47, 0x53, 0x39, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x53, 0x39, 0x65, 0x55, 0x33, 0x58, 0x56, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x56, 0x31, 0x31, 0x69, 0x56, 0x31, 0x35, 0x56, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x31,
		0x37, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x31, 0x37, 0x20, 0x4e, 0x65, 0x6f, 0x56, 0x31, 0x37, 0x56,
		0x31, 0x39, 0x56, 0x32, 0x30, 0x20, 0x53, 0x45, 0x56, 0x35, 0x56, 0x35, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x56, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x35, 0x73, 0x56, 0x37, 0x37, 0x65, 0x56,
		0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x39, 0x56, 0x39, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68,
		0x56, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x39, 0x73, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x58, 0x39, 0x73, 0x56, 0x32, 0x32, 0x34, 0x31, 0x41, 0x58, 0x39, 0x30,
		0x58, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x55,
		0x44, 0x58, 0x32, 0x30, 0x58, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x32, 0x31, 0x69,
		0x58, 0x32, 0x31, 0x20, 0x55, 0x44, 0x58, 0x32, 0x31, 0x58, 0x32, 0x31, 0x53, 0x58, 0x32, 0x33,
		0x58, 0x32, 0x37, 0x58, 0x32, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x33, 0x30, 0x58, 0x33, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x30, 0x58, 0x35, 0x30, 0x65, 0x58, 0x35, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58,
		0x36, 0x30, 0x58, 0x36, 0x30, 0x74, 0x58, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x36, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x58, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x58, 0x37, 0x30, 0x58, 0x37, 0x30, 0x20, 0x35,
		0x47, 0x58, 0x38, 0x30, 0x56, 0x32, 0x32, 0x34, 0x32, 0x41, 0x58, 0x39, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x56, 0x32, 0x32, 0x32, 0x37, 0x41, 0x58, 0x39, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x58,
		0x38, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x38, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35,
		0x47, 0x58, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x59, 0x31, 0x73, 0x59, 0x31, 0x37, 0x59,
		0x31, 0x36, 0x56, 0x32, 0x31, 0x36, 0x38, 0x41, 0x59, 0x31, 0x30, 0x20, 0x54, 0x31, 0x56, 0x32,
		0x31, 0x36, 0x38, 0x56, 0x32, 0x31, 0x31, 0x38, 0x59, 0x30, 0x31, 0x59, 0x30, 0x31, 0x41, 0x59,
		0x30, 0x32, 0x73, 0x59, 0x30, 0x32, 0x74, 0x59, 0x30, 0x32, 0x59, 0x31, 0x32, 0x56, 0x32, 0x31,
		0x36, 0x33, 0x41, 0x59, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x31, 0x32, 0x61, 0x59, 0x31,
		0x32, 0x69, 0x59, 0x31, 0x35, 0x56, 0x32, 0x31, 0x33, 0x34, 0x59, 0x31, 0x35, 0x61, 0x59, 0x31,
		0x35, 0x73, 0x59, 0x31, 0x35, 0x63, 0x59, 0x31, 0x39, 0x59, 0x32, 0x30, 0x59, 0x32, 0x32, 0x56,
		0x32, 0x32, 0x34, 0x39, 0x59, 0x32, 0x37, 0x56, 0x32, 0x33, 0x30, 0x32, 0x59, 0x32, 0x37, 0x20,
		0x35, 0x47, 0x59, 0x32, 0x32, 0x73, 0x59, 0x32, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x59, 0x32, 0x30, 0x41, 0x59, 0x32, 0x30, 0x47, 0x59, 0x32, 0x30, 0x54, 0x59, 0x32, 0x30, 0x47,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x31, 0x31, 0x73, 0x59, 0x32, 0x30, 0x73, 0x59,
		0x37, 0x32, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x30, 0x32, 0x41, 0x59, 0x37, 0x32, 0x54, 0x20,
		0x35, 0x47, 0x56, 0x32, 0x31, 0x31, 0x37, 0x59, 0x37, 0x35, 0x56, 0x32, 0x32, 0x31, 0x39, 0x41,
		0x59, 0x37, 0x37, 0x56, 0x32, 0x31, 0x36, 0x39, 0x59, 0x37, 0x37, 0x20, 0x35, 0x47, 0x59, 0x32,
		0x30, 0x69, 0x59, 0x32, 0x31, 0x73, 0x59, 0x32, 0x31, 0x47, 0x59, 0x32, 0x31, 0x59, 0x32, 0x31,
		0x61, 0x59, 0x32, 0x31, 0x65, 0x59, 0x32, 0x31, 0x74, 0x59, 0x33, 0x56, 0x32, 0x30, 0x34, 0x34,
		0x59, 0x33, 0x73, 0x59, 0x33, 0x20, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x59, 0x33,
		0x30, 0x59, 0x33, 0x30, 0x20, 0x35, 0x47, 0x59, 0x33, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x59, 0x33, 0x30, 0x67, 0x59, 0x33, 0x31, 0x59, 0x33, 0x31, 0x73, 0x56, 0x32, 0x31, 0x35,
		0x38, 0x41, 0x59, 0x33, 0x32, 0x56, 0x32, 0x31, 0x35, 0x38, 0x56, 0x32, 0x35, 0x20, 0x50, 0x72,
		0x6f, 0x56, 0x32, 0x31, 0x38, 0x30, 0x41, 0x59, 0x33, 0x32, 0x74, 0x59, 0x33, 0x33, 0x59, 0x33,
		0x33, 0x73, 0x59, 0x33, 0x33, 0x74, 0x59, 0x33, 0x33, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32,
		0x29, 0x59, 0x33, 0x35, 0x59, 0x33, 0x36, 0x59, 0x35, 0x73, 0x59, 0x35, 0x30, 0x74, 0x59, 0x35,
		0x31, 0x59, 0x35, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x59, 0x35, 0x31, 0x73, 0x59,
		0x35, 0x32, 0x73, 0x59, 0x35, 0x32, 0x59, 0x35, 0x33, 0x69, 0x59, 0x35, 0x33, 0x59, 0x35, 0x33,
		0x73, 0x56, 0x32, 0x30, 0x36, 0x39, 0x41, 0x59, 0x35, 0x33, 0x73, 0x20, 0x54, 0x31, 0x59, 0x35,
		0x35, 0x6c, 0x59, 0x35, 0x35, 0x73, 0x59, 0x35, 0x35, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x56, 0x32, 0x31, 0x36, 0x34, 0x50, 0x41, 0x59, 0x37, 0x33, 0x74, 0x20, 0x35, 0x47, 0x56,
		0x32, 0x31, 0x32, 0x37, 0x59, 0x35, 0x35, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x35, 0x34, 0x59,
		0x35, 0x35, 0x56, 0x32, 0x30, 0x34, 0x35, 0x41, 0x59, 0x35, 0x34, 0x73, 0x59, 0x36, 0x35, 0x59,
		0x36, 0x39, 0x59, 0x37, 0x30, 0x73, 0x59, 0x36, 0x30, 0x73, 0x59, 0x37, 0x31, 0x59, 0x37, 0x31,
		0x69, 0x59, 0x37, 0x33, 0x59, 0x37, 0x33, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x37,
		0x33, 0x73, 0x59, 0x37, 0x36, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x35, 0x36, 0x41, 0x59, 0x37,
		0x36, 0x73, 0x59, 0x37, 0x73, 0x59, 0x38, 0x31, 0x59, 0x38, 0x31, 0x69, 0x59, 0x38, 0x31, 0x73,
		0x59, 0x38, 0x33, 0x59, 0x38, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x38, 0x39, 0x59, 0x39, 0x30,
		0x59, 0x39, 0x31, 0x59, 0x39, 0x31, 0x69, 0x59, 0x39, 0x73, 0x59, 0x31, 0x32, 0x73, 0x59, 0x31,
		0x32, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x39, 0x33, 0x59, 0x39, 0x33, 0x73,
		0x59, 0x39, 0x35, 0x59, 0x39, 0x37, 0x5a, 0x31, 0x5a, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x31,
		0x69, 0x5a, 0x31, 0x78, 0x5a, 0x33, 0x78, 0x5a, 0x35, 0x78, 0x5a, 0x35, 0x78, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x30, 0x29, 0x59, 0x37, 0x35, 0x20, 0x35, 0x47, 0x59, 0x37, 0x35, 0x73, 0x58, 0x20,
		0x53, 0x68, 0x6f, 0x74, 0x58, 0x36, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x36, 0x53, 0x59,
		0x36, 0x36, 0x69, 0x58, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x53, 0x58, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x56, 0x69, 0x7a, 0x69, 0x6f, 0x56, 0x41, 0x50, 0x34, 0x33,
		0x30, 0x49, 0x53, 0x56, 0x2d, 0x42, 0x31, 0x31, 0x44, 0x35, 0x30, 0x75, 0x2d, 0x44, 0x31, 0x56,
		0x69, 0x7a, 0x6d, 0x6f, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x20, 0x37, 0x22, 0x54, 0x41, 0x42,
		0x20, 0x24, 0x31, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x56, 0x6f, 0x64, 0x61, 0x63, 0x6f, 0x6d,
		0x4b, 0x69, 0x63, 0x6b, 0x61, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x34, 0x47, 0x56,
		0x6f, 0x64, 0x61, 0x66, 0x6f, 0x6e, 0x65, 0x56, 0x46, 0x44, 0x20, 0x31, 0x30, 0x30, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x56, 0x46, 0x44, 0x37, 0x32, 0x30, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x4e, 0x39, 0x56, 0x46, 0x36, 0x38, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x4b, 0x69, 0x63, 0x6b, 0x61, 0x56, 0x46, 0x36, 0x39, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x46, 0x69, 0x72, 0x73, 0x74, 0x20, 0x36, 0x56, 0x46, 0x44, 0x20, 0x32, 0x30, 0x30, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x46, 0x69, 0x72, 0x73, 0x74, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20,
		0x33, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x37, 0x56,
		0x46, 0x44, 0x20, 0x33, 0x30, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x75, 0x72,
		0x62, 0x6f, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x45, 0x38, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x45, 0x39, 0x56, 0x46, 0x44, 0x20, 0x38, 0x32, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x58, 0x39, 0x56, 0x46, 0x44, 0x20, 0x36, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x56, 0x46, 0x44, 0x33, 0x32, 0x30, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x43, 0x39, 0x56, 0x46, 0x44, 0x20, 0x38, 0x32, 0x30, 0x56, 0x46, 0x44, 0x20,
		0x36, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4e, 0x38, 0x56, 0x46, 0x44, 0x20, 0x36,
		0x33, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4e, 0x31, 0x30, 0x56, 0x46, 0x44, 0x20, 0x36,
		0x32, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4e, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x75, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x36, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x36, 0x56, 0x46, 0x44, 0x20, 0x37, 0x30, 0x30,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x37, 0x56, 0x46, 0x44,
		0x20, 0x37, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x56, 0x38, 0x56, 0x46, 0x44, 0x20,
		0x37, 0x32, 0x30, 0x56, 0x46, 0x44, 0x20, 0x37, 0x33, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x56, 0x31, 0x30, 0x56, 0x46, 0x44, 0x20, 0x39, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x34, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x34, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x6f, 0x64, 0x61, 0x66, 0x6f, 0x6e, 0x65,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x43,
		0x68, 0x61, 0x74, 0x56, 0x46, 0x2d, 0x36, 0x39, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x47,
		0x72, 0x61, 0x6e, 0x64, 0x20, 0x36, 0x56, 0x46, 0x2d, 0x37, 0x39, 0x35, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x36, 0x56, 0x46, 0x2d, 0x38, 0x39, 0x35, 0x4e,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x36, 0x56, 0x46, 0x2d,
		0x31, 0x33, 0x39, 0x37, 0x54, 0x61, 0x62, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x36, 0x56,
		0x46, 0x2d, 0x31, 0x34, 0x39, 0x37, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20,
		0x36, 0x56, 0x46, 0x44, 0x20, 0x31, 0x31, 0x30, 0x30, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20, 0x31, 0x33, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x4e, 0x38, 0x56, 0x46, 0x44, 0x20, 0x31, 0x34, 0x30, 0x30, 0x54,
		0x61, 0x62, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x49, 0x49, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x49, 0x49, 0x49, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49,
		0x49, 0x49, 0x20, 0x31, 0x30, 0x47, 0x69, 0x67, 0x61, 0x54, 0x56, 0x47, 0x69, 0x67, 0x61, 0x20,
		0x54, 0x56, 0x56, 0x46, 0x44, 0x20, 0x24, 0x31, 0x56, 0x6f, 0x6e, 0x69, 0x6e, 0x6f, 0x5a, 0x75,
		0x6e, 0x20, 0x24, 0x31, 0x58, 0x79, 0x6c, 0x6f, 0x20, 0x24, 0x31, 0x56, 0x6f, 0x6c, 0x74, 0x20,
		0x53, 0x20, 0x41, 0x37, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x58,
		0x47, 0x79, 0x67, 0x61, 0x20, 0x51, 0x53, 0x47, 0x79, 0x67, 0x61, 0x20, 0x58, 0x53, 0x47, 0x79,
		0x67, 0x61, 0x20, 0x24, 0x31, 0x4a, 0x61, 0x78, 0x20, 0x51, 0x53, 0x4a, 0x61, 0x78, 0x20, 0x53,
		0x20, 0x41, 0x37, 0x4a, 0x61, 0x78, 0x20, 0x24, 0x31, 0x4a, 0x61, 0x78, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x69, 0x4d, 0x61, 0x72, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x49, 0x4d, 0x61, 0x72, 0x74, 0x20,
		0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x72, 0x69, 0x5f, 0x4d, 0x37, 0x5f, 0x32, 0x30, 0x32, 0x30,
		0x50, 0x6c, 0x75, 0x72, 0x69, 0x20, 0x4d, 0x37, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x50,
		0x6c, 0x75, 0x72, 0x69, 0x20, 0x24, 0x31, 0x37, 0x50, 0x6c, 0x75, 0x72, 0x69, 0x20, 0x24, 0x31,
		0x38, 0x44, 0x72, 0x75, 0x69, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x20,
		0x4d, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74,
		0x20, 0x24, 0x31, 0x4e, 0x61, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x4f, 0x72, 0x69, 0x6e, 0x5f, 0x51,
		0x53, 0x4f, 0x72, 0x69, 0x6e, 0x20, 0x51, 0x53, 0x53, 0x69, 0x72, 0x69, 0x75, 0x73, 0x5f, 0x51,
		0x53, 0x53, 0x69, 0x72, 0x69, 0x75, 0x73, 0x20, 0x51, 0x53, 0x58, 0x61, 0x76, 0x79, 0x20, 0x24,
		0x31, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x50, 0x41, 0x44, 0x20, 0x24, 0x31, 0x56, 0x6f, 0x6e, 0x74,
		0x61, 0x72, 0x48, 0x4b, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x4b, 0x20, 0x4d, 0x61, 0x78, 0x48,
		0x4b, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x4b, 0x31, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x48, 0x4b, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x4b, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x56, 0x6f, 0x72, 0x61, 0x67, 0x6f, 0x43, 0x45, 0x4c, 0x4c, 0x2d, 0x35, 0x30,
		0x30, 0x56, 0x6f, 0x72, 0x63, 0x6f, 0x6d, 0x53, 0x58, 0x50, 0x52, 0x4f, 0x5f, 0x63, 0x6c, 0x61,
		0x73, 0x73, 0x69, 0x63, 0x53, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73,
		0x69, 0x63, 0x53, 0x58, 0x50, 0x72, 0x6f, 0x53, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x37, 0x2d,
		0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x53, 0x37, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
		0x63, 0x56, 0x6f, 0x72, 0x6b, 0x65, 0x56, 0x6f, 0x72, 0x6d, 0x6f, 0x72, 0x56, 0x6f, 0x74, 0x6f,
		0x56, 0x6f, 0x78, 0x74, 0x65, 0x6c, 0x56, 0x6f, 0x79, 0x6f, 0x69, 0x38, 0x20, 0x4d, 0x61, 0x78,
		0x56, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x79, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4a, 0x6f, 0x79, 0x20, 0x24, 0x31, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x42, 0x65, 0x65, 0x20, 0x33, 0x42, 0x65, 0x65, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x53, 0x74, 0x61, 0x72, 0x20, 0x24, 0x31, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x24,
		0x31, 0x48, 0x6f, 0x62, 0x73, 0x6f, 0x6e, 0x41, 0x72, 0x69, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x41,
		0x72, 0x69, 0x73, 0x56, 0x73, 0x75, 0x6e, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
		0x61, 0x72, 0x73, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4d, 0x45, 0x52, 0x43, 0x55, 0x52, 0x59,
		0x20, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x4d, 0x41, 0x52, 0x53, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x4d, 0x61, 0x72, 0x73,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x41, 0x52, 0x53, 0x20, 0x4e, 0x4f, 0x43, 0x41, 0x4d, 0x4d,
		0x61, 0x72, 0x73, 0x20, 0x4e, 0x6f, 0x63, 0x61, 0x6d, 0x41, 0x71, 0x75, 0x61, 0x20, 0x54, 0x6f,
		0x75, 0x67, 0x68, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65,
		0x56, 0x75, 0x65, 0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x20, 0x53,
		0x31, 0x33, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x20, 0x53, 0x31, 0x31, 0x56, 0xc3, 0xb6, 0x6c, 0x66,
		0x65, 0x6e, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x54, 0x41, 0x42, 0x37, 0x57, 0x41, 0x46, 0x57, 0x41,
		0x4e, 0x53, 0x41, 0x57, 0x45, 0x57, 0x49, 0x57, 0x41, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x54, 0x56, 0x57, 0x61, 0x6c, 0x74, 0x6f, 0x6e, 0x50, 0x72,
		0x69, 0x6d, 0x6f, 0x20, 0x57, 0x61, 0x6c, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x50, 0x72, 0x69,
		0x6d, 0x6f, 0x20, 0x53, 0x36, 0x20, 0x69, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x72,
		0x69, 0x6d, 0x6f, 0x20, 0x53, 0x36, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x50,
		0x72, 0x69, 0x6d, 0x6f, 0x20, 0x53, 0x38, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x69, 0x6d,
		0x6f, 0x20, 0x53, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x48,
		0x38, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x48, 0x38, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f,
		0x52, 0x58, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x61, 0x6c, 0x74, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x6f, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x57, 0x61, 0x6e, 0x6d, 0x75, 0x6b, 0x61, 0x6e, 0x67, 0x57, 0x65,
		0x62, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x20, 0x38, 0x34, 0x37, 0x35, 0x57, 0x65,
		0x63, 0x6f, 0x6f, 0x6c, 0x57, 0x65, 0x65, 0x6c, 0x69, 0x6b, 0x65, 0x69, 0x74, 0x57, 0x65, 0x69,
		0x6d, 0x65, 0x69, 0x77, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x33, 0x57, 0x65, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x33, 0x57, 0x65, 0x6c, 0x6c, 0x63, 0x6f, 0x4d, 0x57, 0x65, 0x73, 0x74, 0x65, 0x72,
		0x6e, 0x20, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65,
		0x72, 0x32, 0x30, 0x31, 0x30, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x30, 0x29, 0x57, 0x65, 0x73, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x65, 0x78,
		0x6c, 0x65, 0x72, 0x5a, 0x45, 0x4e, 0x20, 0x34, 0x2e, 0x35, 0x5a, 0x45, 0x4e, 0x20, 0x34, 0x2e,
		0x37, 0x5a, 0x45, 0x4e, 0x20, 0x35, 0x5a, 0x45, 0x4e, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x54, 0x41, 0x42, 0x20, 0x31, 0x30, 0x51, 0x54, 0x41, 0x42, 0x20, 0x31, 0x30, 0x69, 0x51, 0x20,
		0x33, 0x47, 0x57, 0x68, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x4d,
		0x31, 0x30, 0x31, 0x30, 0x56, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x33, 0x57, 0x69, 0x65, 0x70, 0x70, 0x6f, 0x57, 0x69, 0x67, 0x6f, 0x72, 0x57, 0x69, 0x6b, 0x6f,
		0x54, 0x33, 0x56, 0x6f, 0x69, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x55, 0x31, 0x30, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x55, 0x32, 0x30, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x55, 0x33,
		0x30, 0x43, 0x69, 0x6e, 0x6b, 0x20, 0x50, 0x65, 0x61, 0x78, 0x20, 0x32, 0x43, 0x69, 0x6e, 0x6b,
		0x24, 0x31, 0x43, 0x69, 0x6e, 0x6b, 0x20, 0x24, 0x31, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79,
		0x20, 0x50, 0x75, 0x72, 0x65, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x20, 0x53, 0x74, 0x61,
		0x72, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x24, 0x31, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61,
		0x79, 0x20, 0x24, 0x31, 0x49, 0x67, 0x67, 0x79, 0x46, 0x65, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61,
		0x69, 0x72, 0x77, 0x61, 0x79, 0x52, 0x69, 0x64, 0x67, 0x65, 0x20, 0x46, 0x61, 0x62, 0x20, 0x34,
		0x47, 0x52, 0x69, 0x64, 0x67, 0x65, 0x20, 0x34, 0x47, 0x52, 0x69, 0x64, 0x67, 0x65, 0x52, 0x41,
		0x49, 0x4e, 0x42, 0x4f, 0x57, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f,
		0x77, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x20, 0x24, 0x31,
		0x44, 0x61, 0x72, 0x6b, 0x73, 0x69, 0x64, 0x65, 0x44, 0x61, 0x72, 0x6b, 0x6d, 0x6f, 0x6f, 0x6e,
		0x44, 0x61, 0x72, 0x6b, 0x66, 0x75, 0x6c, 0x6c, 0x44, 0x61, 0x72, 0x6b, 0x6e, 0x69, 0x67, 0x68,
		0x74, 0x53, 0x75, 0x62, 0x6c, 0x69, 0x6d, 0x4f, 0x7a, 0x7a, 0x79, 0x42, 0x61, 0x72, 0x72, 0x79,
		0x42, 0x69, 0x72, 0x64, 0x79, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x4a, 0x69, 0x6d, 0x6d, 0x79, 0x4a,
		0x45, 0x52, 0x52, 0x59, 0x20, 0x4d, 0x41, 0x58, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x4d, 0x61,
		0x78, 0x57, 0x5f, 0x4b, 0x33, 0x30, 0x30, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x33, 0x57, 0x2d,
		0x4b, 0x34, 0x32, 0x30, 0x2d, 0x54, 0x56, 0x4d, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x34, 0x4a,
		0x65, 0x72, 0x72, 0x79, 0x20, 0x32, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x47, 0x65, 0x74, 0x61, 0x77,
		0x61, 0x79, 0x4b, 0x65, 0x6e, 0x6e, 0x79, 0x47, 0x6f, 0x61, 0x46, 0x72, 0x65, 0x64, 0x64, 0x79,
		0x4b, 0x69, 0x74, 0x65, 0x57, 0x5f, 0x4b, 0x34, 0x30, 0x30, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20,
		0x35, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x33, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x33, 0x20, 0x4d,
		0x61, 0x78, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x65,
		0x6e, 0x6e, 0x79, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x53, 0x6c, 0x69, 0x64, 0x65,
		0x20, 0x32, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x53, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x20, 0x32, 0x53,
		0x75, 0x6e, 0x73, 0x65, 0x74, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x33, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x33, 0x57, 0x2d, 0x4b, 0x32, 0x30, 0x30, 0x53, 0x75,
		0x6e, 0x6e, 0x79, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20,
		0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x32, 0x57, 0x2d, 0x4b,
		0x33, 0x36, 0x30, 0x2d, 0x54, 0x56, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x34, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x57, 0x2d, 0x4b, 0x31, 0x33, 0x30, 0x2d, 0x54, 0x4d, 0x56, 0x53, 0x75, 0x6e, 0x6e,
		0x79, 0x20, 0x34, 0x57, 0x2d, 0x4b, 0x33, 0x38, 0x30, 0x2d, 0x54, 0x56, 0x4d, 0x53, 0x75, 0x6e,
		0x6e, 0x79, 0x20, 0x35, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x20, 0x33, 0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x20, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x20, 0x32, 0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x57,
		0x61, 0x78, 0x48, 0x61, 0x72, 0x72, 0x79, 0x57, 0x2d, 0x56, 0x36, 0x30, 0x30, 0x48, 0x61, 0x72,
		0x72, 0x79, 0x20, 0x32, 0x57, 0x49, 0x4d, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x49, 0x4d, 0x50,
		0x75, 0x6c, 0x70, 0x20, 0x46, 0x61, 0x62, 0x20, 0x34, 0x47, 0x50, 0x75, 0x6c, 0x70, 0x20, 0x46,
		0x61, 0x62, 0x50, 0x75, 0x6c, 0x70, 0x20, 0x34, 0x47, 0x50, 0x75, 0x6c, 0x70, 0x52, 0x6f, 0x62,
		0x62, 0x79, 0x24, 0x31, 0x55, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x55, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x55, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x55, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x55, 0x20,
		0x46, 0x65, 0x65, 0x6c, 0x56, 0x33, 0x39, 0x39, 0x31, 0x41, 0x4e, 0x55, 0x20, 0x46, 0x65, 0x65,
		0x6c, 0x20, 0x46, 0x61, 0x62, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x20, 0x47, 0x6f, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x20, 0x58, 0x4c,
		0x56, 0x69, 0x65, 0x77, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x57, 0x43, 0x33, 0x30, 0x30, 0x56,
		0x69, 0x65, 0x77, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x76, 0x31, 0x32, 0x66, 0x6e, 0x6c, 0x69, 0x74,
		0x65, 0x56, 0x69, 0x65, 0x77, 0x57, 0x5f, 0x43, 0x38, 0x30, 0x30, 0x57, 0x5f, 0x43, 0x38, 0x36,
		0x30, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x5f, 0x50, 0x32, 0x30,
		0x30, 0x56, 0x69, 0x65, 0x77, 0x20, 0x47, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x57, 0x2d, 0x56, 0x38, 0x35, 0x31, 0x56, 0x69, 0x65, 0x77, 0x20, 0x35, 0x57,
		0x2d, 0x56, 0x38, 0x35, 0x30, 0x2d, 0x45, 0x45, 0x41, 0x56, 0x69, 0x65, 0x77, 0x20, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x57, 0x2d, 0x4b, 0x34, 0x32, 0x30, 0x2d, 0x45, 0x45, 0x41, 0x57, 0x2d,
		0x4b, 0x32, 0x31, 0x31, 0x57, 0x2d, 0x4b, 0x35, 0x32, 0x31, 0x59, 0x36, 0x30, 0x59, 0x36, 0x31,
		0x59, 0x36, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x2d, 0x4b, 0x36, 0x31, 0x30, 0x59, 0x36,
		0x32, 0x59, 0x38, 0x30, 0x57, 0x2d, 0x56, 0x36, 0x38, 0x30, 0x57, 0x2d, 0x4b, 0x36, 0x33, 0x30,
		0x59, 0x38, 0x32, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x65,
		0x77, 0x20, 0x34, 0x56, 0x69, 0x65, 0x77, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x2d,
		0x56, 0x37, 0x34, 0x35, 0x2d, 0x54, 0x56, 0x4d, 0x52, 0x69, 0x64, 0x65, 0x52, 0x69, 0x64, 0x65,
		0x20, 0x32, 0x52, 0x69, 0x64, 0x65, 0x20, 0x33, 0x4b, 0x2d, 0x4b, 0x6f, 0x6f, 0x6c, 0x57, 0x69,
		0x6c, 0x65, 0x79, 0x66, 0x6f, 0x78, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x2b, 0x57, 0x69, 0x6c,
		0x65, 0x79, 0x66, 0x6f, 0x78, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x58, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x58, 0x53, 0x77, 0x69, 0x66, 0x74, 0x20, 0x32, 0x20, 0x24, 0x31, 0x53, 0x77,
		0x69, 0x66, 0x74, 0x20, 0x32, 0x63, 0x72, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x6e, 0x67, 0x57, 0x69,
		0x6e, 0x64, 0x73, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x47, 0x52, 0x41, 0x43, 0x45, 0x20, 0x56, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x56, 0x57, 0x69, 0x6e, 0x6b, 0x57,
		0x69, 0x6e, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x48, 0x34, 0x50, 0x6f, 0x6c, 0x61,
		0x72, 0x20, 0x48, 0x34, 0x57, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x6f, 0x54, 0x31, 0x30, 0x20, 0x4c,
		0x54, 0x45, 0x48, 0x24, 0x31, 0x57, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x57, 0x69, 0x6e, 0x74,
		0x6f, 0x75, 0x63, 0x68, 0x51, 0x39, 0x33, 0x53, 0x57, 0x69, 0x73, 0x65, 0x61, 0x73, 0x79, 0x57,
		0x69, 0x7a, 0x61, 0x72, 0x50, 0x6f, 0x73, 0x57, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x57, 0x69, 0x61,
		0x6d, 0x20, 0x23, 0x36, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x69, 0x61, 0x6d, 0x20, 0x23,
		0x24, 0x31, 0x6d, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x6d, 0x69, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x6d, 0x69, 0x54,
		0x61, 0x62, 0x20, 0x24, 0x31, 0x57, 0x6f, 0x6c, 0x66, 0x67, 0x61, 0x6e, 0x67, 0x41, 0x54, 0x2d,
		0x41, 0x53, 0x24, 0x31, 0x57, 0x6f, 0x6c, 0x6b, 0x69, 0x57, 0x35, 0x35, 0x53, 0x45, 0x57, 0x35,
		0x2e, 0x35, 0x20, 0x53, 0x45, 0x57, 0x53, 0x36, 0x32, 0x36, 0x57, 0x36, 0x2e, 0x32, 0x36, 0x57,
		0x36, 0x32, 0x36, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x57, 0x36, 0x2e, 0x32, 0x36, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x57, 0x53, 0x35, 0x53, 0x45, 0x57, 0x35, 0x20, 0x53, 0x45, 0x57, 0x53, 0x30, 0x36,
		0x37, 0x57, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x6f, 0x6e, 0x75, 0x57, 0x6f, 0x6f, 0x53, 0x50,
		0x35, 0x30, 0x32, 0x36, 0x69, 0x2d, 0x53, 0x63, 0x6f, 0x72, 0x70, 0x69, 0x6f, 0x53, 0x63, 0x6f,
		0x72, 0x70, 0x69, 0x6f, 0x53, 0x50, 0x35, 0x30, 0x34, 0x30, 0x2d, 0x43, 0x61, 0x73, 0x69, 0x6f,
		0x70, 0x65, 0x61, 0x43, 0x61, 0x73, 0x69, 0x6f, 0x70, 0x65, 0x61, 0x20, 0x49, 0x49, 0x57, 0x6f,
		0x72, 0x74, 0x6d, 0x61, 0x6e, 0x6e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x24, 0x31, 0x57, 0x6f, 0x78, 0x74, 0x65, 0x72, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x24,
		0x31, 0x69, 0x2d, 0x31, 0x30, 0x31, 0x5a, 0x69, 0x65, 0x6c, 0x6f, 0x20, 0x24, 0x31, 0x58, 0x2d,
		0x41, 0x47, 0x45, 0x47, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x2d, 0x42, 0x4f, 0x58, 0x2d,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x5f, 0x4a, 0x4f, 0x59,
		0x31, 0x30, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x5f, 0x4a, 0x4f, 0x59, 0x31, 0x30, 0x4a, 0x6f, 0x79, 0x20,
		0x31, 0x30, 0x4a, 0x6f, 0x79, 0x20, 0x37, 0x20, 0x54, 0x56, 0x4a, 0x6f, 0x79, 0x20, 0x24, 0x31,
		0x20, 0x4d, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x70, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x48,
		0x6f, 0x70, 0x65, 0x20, 0x38, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x6f, 0x70, 0x65, 0x20, 0x31, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x70, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x5f, 0x4a, 0x4f, 0x59, 0x37, 0x5f, 0x4d, 0x41, 0x58, 0x4a,
		0x6f, 0x79, 0x20, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x4a, 0x4f, 0x59, 0x31, 0x30, 0x5f, 0x4c, 0x54,
		0x45, 0x4a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x32, 0x38, 0x20, 0x4c,
		0x54, 0x45, 0x56, 0x31, 0x38, 0x20, 0x70, 0x72, 0x6f, 0x5f, 0x41, 0x56, 0x31, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50,
		0x31, 0x31, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x50, 0x31, 0x35, 0x5f, 0x4c, 0x69, 0x74, 0x65,
		0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x31, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x68,
		0x61, 0x72, 0x70, 0x20, 0x24, 0x31, 0x58, 0x2d, 0x56, 0x69, 0x65, 0x77, 0x5a, 0x45, 0x4e, 0x20,
		0x55, 0x35, 0x2b, 0x41, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4b, 0x49, 0x44, 0x53, 0x41, 0x6d, 0x62,
		0x65, 0x72, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x5f, 0x41, 0x6d,
		0x62, 0x65, 0x72, 0x5f, 0x48, 0x44, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x41, 0x6d, 0x62,
		0x65, 0x72, 0x20, 0x48, 0x44, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x5f, 0x4e, 0x65, 0x6f, 0x6e,
		0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x4e, 0x65, 0x6f, 0x6e, 0x50, 0x52, 0x4f, 0x54, 0x4f,
		0x4e, 0x5f, 0x4a, 0x41, 0x44, 0x45, 0x5f, 0x32, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x72, 0x6f, 0x74,
		0x6f, 0x6e, 0x20, 0x4a, 0x61, 0x64, 0x65, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x2d, 0x56,
		0x69, 0x65, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x58, 0x38, 0x38, 0x58, 0x38, 0x38, 0x70,
		0x72, 0x6f, 0x31, 0x30, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x58, 0x39, 0x36, 0x58, 0x39, 0x36,
		0x41, 0x69, 0x72, 0x5f, 0x41, 0x31, 0x30, 0x30, 0x41, 0x69, 0x72, 0x20, 0x41, 0x31, 0x30, 0x30,
		0x58, 0x39, 0x36, 0x4d, 0x61, 0x78, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5f, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58,
		0x39, 0x36, 0x5f, 0x58, 0x36, 0x5f, 0x49, 0x58, 0x36, 0x69, 0x58, 0x39, 0x36, 0x4d, 0x41, 0x54,
		0x45, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58,
		0x39, 0x36, 0x4d, 0x49, 0x4e, 0x49, 0x5f, 0x31, 0x31, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x31, 0x31,
		0x58, 0x39, 0x36, 0x51, 0x58, 0x43, 0x4f, 0x4d, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x45,
		0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x58, 0x47, 0x49, 0x4d, 0x49, 0x58, 0x59, 0x20, 0x41,
		0x75, 0x74, 0x6f, 0x58, 0x63, 0x65, 0x6c, 0x6c, 0x58, 0x63, 0x72, 0x75, 0x69, 0x73, 0x65, 0x72,
		0x58, 0x67, 0x6f, 0x64, 0x79, 0x58, 0x47, 0x54, 0x5f, 0x45, 0x45, 0x41, 0x58, 0x47, 0x54, 0x58,
		0x69, 0x61, 0x6f, 0x64, 0x75, 0x58, 0x69, 0x61, 0x6f, 0x6c, 0x61, 0x6a, 0x69, 0x61, 0x6f, 0x52,
		0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33,
		0x52, 0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45,
		0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65,
		0x72, 0x20, 0x38, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70,
		0x65, 0x72, 0x20, 0x39, 0x58, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x4d, 0x61, 0x78,
		0x58, 0x69, 0x61, 0x6f, 0x6d, 0x69, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72,
		0x6b, 0x41, 0x57, 0x4d, 0x2d, 0x41, 0x30, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61,
		0x72, 0x6b, 0x20, 0x48, 0x65, 0x6c, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61,
		0x72, 0x6b, 0x20, 0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b,
		0x20, 0x33, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x20,
		0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33,
		0x20, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61,
		0x72, 0x6b, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68,
		0x61, 0x72, 0x6b, 0x20, 0x34, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b,
		0x20, 0x35, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x24,
		0x31, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69,
		0x20, 0x31, 0x53, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20,
		0x32, 0x20, 0x33, 0x47, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x32, 0x48, 0x6f, 0x6e, 0x67,
		0x6d, 0x69, 0x20, 0x32, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x34, 0x41,
		0x4d, 0x69, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x69, 0x20, 0x39, 0x20, 0x53, 0x45, 0x4d, 0x69,
		0x20, 0x39, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x65, 0x4d, 0x49, 0x20, 0x43, 0x43, 0x39,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
		0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20,
		0x39, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x69, 0x20, 0x31, 0x31, 0x31, 0x31, 0x69, 0x20, 0x48, 0x79, 0x70, 0x65, 0x72, 0x43, 0x68, 0x61,
		0x72, 0x67, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x58, 0x4d, 0x69, 0x20, 0x31,
		0x31, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x54, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x54, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35,
		0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x54, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x53, 0x4d, 0x69,
		0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30,
		0x69, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x69, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x54, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x54, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x35, 0x47, 0x20, 0x4e, 0x45, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69,
		0x20, 0x31, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x32, 0x31, 0x32, 0x54, 0x31, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x31, 0x32, 0x54,
		0x20, 0x50, 0x72, 0x6f, 0x31, 0x32, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x32, 0x53, 0x31, 0x32,
		0x53, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x31, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x31, 0x32,
		0x58, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x31, 0x33,
		0x31, 0x33, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x69, 0x20, 0x38, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x4d, 0x69, 0x20, 0x38, 0x20, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x20, 0x45,
		0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x38, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20,
		0x39, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x4d, 0x69, 0x20, 0x39, 0x20, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e,
		0x74, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x24, 0x31, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x35, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x69, 0x61,
		0x6f, 0x6d, 0x69, 0x5f, 0x4d, 0x44, 0x54, 0x32, 0x4d, 0x69, 0x20, 0x35, 0x58, 0x4d, 0x69, 0x20,
		0x33, 0x4d, 0x69, 0x20, 0x24, 0x31, 0x43, 0x4d, 0x69, 0x20, 0x34, 0x57, 0x4d, 0x69, 0x20, 0x34,
		0x69, 0x4d, 0x69, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x69, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x24, 0x31, 0x4d, 0x69, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x69, 0x20, 0x41, 0x32, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4d, 0x69, 0x20, 0x41, 0x33, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x34, 0x4d,
		0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x33, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78,
		0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x32, 0x53, 0x20, 0x41, 0x72, 0x74,
		0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x32, 0x53, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x4d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x50, 0x6f, 0x63, 0x6f, 0x70, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x46, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x35, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x32, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x32,
		0x41, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x38, 0x41, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x38, 0x41,
		0x20, 0x24, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x58, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x31, 0x30, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x39, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x41, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x39, 0x69, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x43, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x39, 0x41, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x54, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x54, 0x20, 0x4e, 0x46, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x39, 0x43, 0x20, 0x4e, 0x46, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20,
		0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x31, 0x30, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30,
		0x41, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x2b, 0x20,
		0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x58, 0x20, 0x50,
		0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x32, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x31, 0x32, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x32, 0x20, 0x35, 0x47, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4b, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75,
		0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b,
		0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74,
		0x69, 0x6f, 0x6e, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x53, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4b, 0x33, 0x30, 0x20, 0x34, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33,
		0x30, 0x69, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34,
		0x30, 0x20, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x32, 0x32, 0x30, 0x34, 0x31, 0x32, 0x31, 0x31, 0x41, 0x43, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4b, 0x35, 0x30, 0x32, 0x32, 0x30, 0x34, 0x31, 0x32, 0x31, 0x36, 0x49, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4b, 0x35, 0x30, 0x69, 0x32, 0x31, 0x31, 0x32, 0x31, 0x32, 0x31, 0x30,
		0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x35, 0x30, 0x47, 0x32, 0x32, 0x30, 0x31, 0x31,
		0x32, 0x31, 0x31, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x35, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x32, 0x33, 0x30, 0x31, 0x33, 0x52, 0x4b, 0x37, 0x35, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4b, 0x36, 0x30, 0x32, 0x32, 0x31, 0x32, 0x32, 0x52, 0x4b, 0x39, 0x33, 0x43, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4b, 0x36, 0x30, 0x45, 0x32, 0x32, 0x31, 0x32, 0x37, 0x52, 0x4b, 0x34,
		0x36, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x59, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x58,
		0x69, 0x61, 0x6f, 0x6d, 0x69, 0x5f, 0x4d, 0x31, 0x38, 0x30, 0x35, 0x44, 0x31, 0x53, 0x54, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x37, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x34, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x41, 0x31, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x41, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x41, 0x32, 0x32, 0x33, 0x30, 0x32, 0x38, 0x52, 0x4e, 0x43, 0x41, 0x47, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x41, 0x32, 0x2b, 0x51, 0x69, 0x6e, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x51,
		0x69, 0x6e, 0x20, 0x32, 0x43, 0x43, 0x31, 0x31, 0x43, 0x69, 0x76, 0x69, 0x43, 0x69, 0x76, 0x69,
		0x20, 0x32, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x35, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x50, 0x61, 0x64, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x61,
		0x64, 0x20, 0x36, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x34, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33,
		0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x32, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x4d, 0x69, 0x50, 0x72, 0x6f, 0x6a, 0x41, 0x31, 0x4d,
		0x69, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f,
		0x72, 0x20, 0x31, 0x35, 0x30, 0x22, 0x4d, 0x69, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x69, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x42, 0x6f,
		0x78, 0x20, 0x31, 0x53, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x34, 0x53, 0x4d, 0x69, 0x54, 0x56, 0x20,
		0x51, 0x31, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x4d, 0x69, 0x54, 0x56,
		0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x50, 0x31,
		0x4d, 0x69, 0x54, 0x56, 0x20, 0x52, 0x31, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x34, 0x41, 0x4d, 0x69,
		0x54, 0x56, 0x20, 0x34, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x24, 0x31,
		0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x4d, 0x69, 0x78, 0x20, 0x46,
		0x6f, 0x6c, 0x64, 0x20, 0x32, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x48,
		0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x54, 0x44, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x6b, 0x65, 0x6e, 0x7a, 0x6f, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x35, 0x41, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x41, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x39, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x30, 0x58, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x30, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x54, 0x20,
		0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x20, 0x35,
		0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x30, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x30, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x30, 0x54, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x30, 0x20, 0x4a, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x32, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x32, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32,
		0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x44, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
		0x79, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x31, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x31, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x31, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x31, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20,
		0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x31, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x31, 0x52, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x31, 0x20, 0x34, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x31, 0x20, 0x53, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x31, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31,
		0x53, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x31, 0x54, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x38, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38,
		0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x53, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x4d, 0x61, 0x78, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24,
		0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x24, 0x31, 0x4d, 0x49, 0x5f, 0x4e, 0x4f, 0x54, 0x45,
		0x5f, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31,
		0x51, 0x69, 0x6e, 0x20, 0x31, 0x73, 0x2b, 0x4d, 0x69, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x69, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x24, 0x31,
		0x48, 0x4d, 0x20, 0x24, 0x31, 0x58, 0x69, 0x6f, 0x6e, 0x43, 0x45, 0x24, 0x31, 0x58, 0x6f, 0x6c,
		0x6f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x2d, 0x31, 0x58, 0x4d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20,
		0x31, 0x58, 0x45, 0x72, 0x61, 0x20, 0x31, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x72, 0x61, 0x20,
		0x24, 0x31, 0x58, 0x45, 0x72, 0x61, 0x20, 0x34, 0x58, 0x20, 0x32, 0x47, 0x42, 0x45, 0x72, 0x61,
		0x20, 0x32, 0x56, 0x45, 0x72, 0x61, 0x20, 0x24, 0x31, 0x43, 0x75, 0x62, 0x65, 0x20, 0x35, 0x2e,
		0x30, 0x58, 0x6f, 0x72, 0x6f, 0x54, 0x65, 0x6c, 0x65, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x20,
		0x41, 0x33, 0x20, 0x34, 0x47, 0x54, 0x65, 0x6c, 0x65, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4d,
		0x65, 0x67, 0x61, 0x50, 0x61, 0x64, 0x20, 0x33, 0x32, 0x30, 0x34, 0x20, 0x56, 0x35, 0x48, 0x4d,
		0x54, 0x20, 0x24, 0x31, 0x48, 0x53, 0x54, 0x20, 0x32, 0x36, 0x30, 0x58, 0x73, 0x68, 0x69, 0x74,
		0x6f, 0x75, 0x58, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x58, 0x39, 0x58, 0x42, 0x6f, 0x74, 0x20, 0x24,
		0x31, 0x58, 0x50, 0x31, 0x30, 0x5f, 0x57, 0x69, 0x66, 0x69, 0x58, 0x50, 0x31, 0x30, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x58, 0x74, 0x72, 0x61, 0x74, 0x65, 0x63, 0x68, 0x58, 0x4d, 0x31, 0x34, 0x47,
		0x49, 0x67, 0x75, 0x61, 0x6e, 0x61, 0x50, 0x61, 0x64, 0x20, 0x58, 0x4d, 0x31, 0x34, 0x47, 0x58,
		0x31, 0x30, 0x4d, 0x54, 0x31, 0x36, 0x58, 0x77, 0x61, 0x76, 0x65, 0x78, 0x50, 0x61, 0x64, 0x20,
		0x24, 0x31, 0x59, 0x41, 0x53, 0x49, 0x4e, 0x59, 0x45, 0x4c, 0x4c, 0x59, 0x4f, 0x55, 0x54, 0x48,
		0x59, 0x45, 0x50, 0x45, 0x4e, 0x4d, 0x32, 0x30, 0x32, 0x30, 0x31, 0x34, 0x31, 0x39, 0x58, 0x31,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x59, 0x4f, 0x54, 0x4f, 0x50, 0x54, 0x59,
		0x55, 0x20, 0x46, 0x6c, 0x79, 0x59, 0x55, 0x48, 0x4f, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x56, 0x61,
		0x73, 0x74, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x61, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x59, 0x55, 0x48, 0x4f, 0x5f, 0x59, 0x31, 0x5f, 0x41, 0x43, 0x45, 0x59, 0x31, 0x20, 0x41, 0x63,
		0x65, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x59, 0x31, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x59, 0x31, 0x20,
		0x53, 0x74, 0x61, 0x72, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x4f, 0x31, 0x5f, 0x4c, 0x49, 0x54, 0x45,
		0x4f, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x59, 0x55, 0x4d, 0x4b, 0x45, 0x4d, 0x59, 0x55, 0x4e,
		0x44, 0x4f, 0x4f, 0x59, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x59, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x4d,
		0x6f, 0x64, 0x75, 0x6c, 0x65, 0x32, 0x2d, 0x30, 0x30, 0x30, 0x30, 0x31, 0x4d, 0x6f, 0x64, 0x75,
		0x6c, 0x65, 0x59, 0x4e, 0x44, 0x58, 0x2d, 0x24, 0x31, 0x59, 0x4e, 0x44, 0x58, 0x2d, 0x30, 0x30,
		0x30, 0x53, 0x42, 0x59, 0x61, 0x72, 0x76, 0x69, 0x6b, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41,
		0x42, 0x30, 0x37, 0x2d, 0x39, 0x32, 0x30, 0x4e, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x37, 0x4c, 0x75,
		0x6e, 0x61, 0x20, 0x37, 0x63, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42, 0x32, 0x37, 0x34,
		0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42, 0x34, 0x37, 0x34, 0x4c, 0x75, 0x6e, 0x61, 0x20,
		0x31, 0x30, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42, 0x31, 0x30, 0x2d, 0x31, 0x35, 0x30,
		0x4c, 0x75, 0x6e, 0x61, 0x20, 0x31, 0x30, 0x63, 0x54, 0x41, 0x42, 0x30, 0x39, 0x2d, 0x34, 0x31,
		0x30, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x39, 0x2e, 0x37, 0x54, 0x41, 0x42, 0x31, 0x30, 0x2d,
		0x34, 0x31, 0x30, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x54, 0x41, 0x42,
		0x30, 0x37, 0x2d, 0x34, 0x38, 0x35, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x37, 0x63, 0x54, 0x41, 0x42, 0x30, 0x37, 0x2d, 0x32, 0x30,
		0x30, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x37, 0x69, 0x63, 0x54, 0x41, 0x42, 0x30, 0x38, 0x2d,
		0x32, 0x30, 0x30, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x38, 0x69, 0x63, 0x54, 0x41, 0x42, 0x30,
		0x38, 0x2d, 0x32, 0x30, 0x31, 0x2d, 0x33, 0x47, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x38, 0x63,
		0x54, 0x41, 0x42, 0x39, 0x2d, 0x32, 0x30, 0x30, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x39, 0x2e,
		0x37, 0x69, 0x63, 0x54, 0x41, 0x42, 0x30, 0x39, 0x2d, 0x32, 0x31, 0x31, 0x58, 0x65, 0x6e, 0x74,
		0x61, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x63, 0x2b, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x31, 0x30,
		0x69, 0x63, 0x54, 0x41, 0x42, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x58, 0x65, 0x6e, 0x74, 0x61,
		0x20, 0x31, 0x33, 0x63, 0x59, 0x65, 0x73, 0x4d, 0x36, 0x33, 0x31, 0x59, 0x41, 0x6c, 0x74, 0x69,
		0x74, 0x75, 0x64, 0x65, 0x4d, 0x36, 0x35, 0x31, 0x47, 0x5f, 0x4d, 0x59, 0x41, 0x6c, 0x74, 0x69,
		0x74, 0x75, 0x64, 0x65, 0x20, 0x32, 0x4d, 0x36, 0x38, 0x35, 0x59, 0x34, 0x41, 0x6c, 0x74, 0x69,
		0x74, 0x75, 0x64, 0x65, 0x20, 0x33, 0x59, 0x65, 0x73, 0x74, 0x65, 0x6c, 0x59, 0x65, 0x7a, 0x7a,
		0x41, 0x6e, 0x64, 0x79, 0x20, 0x24, 0x31, 0x59, 0x65, 0x7a, 0x7a, 0x2d, 0x41, 0x43, 0x34, 0x45,
		0x49, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x34, 0x45, 0x49, 0x41, 0x52, 0x54, 0x31, 0x5f, 0x50, 0x52,
		0x4f, 0x41, 0x72, 0x74, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x52, 0x54, 0x31, 0x41, 0x72,
		0x74, 0x20, 0x31, 0x41, 0x52, 0x54, 0x32, 0x50, 0x52, 0x4f, 0x41, 0x72, 0x74, 0x20, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x45, 0x50, 0x49, 0x43, 0x20, 0x54, 0x45, 0x70, 0x69, 0x63, 0x20, 0x54, 0x4c,
		0x49, 0x56, 0x31, 0x4c, 0x49, 0x56, 0x20, 0x31, 0x53, 0x4c, 0x49, 0x56, 0x32, 0x20, 0x4c, 0x54,
		0x45, 0x4d, 0x41, 0x58, 0x5f, 0x31, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61, 0x78, 0x20, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x41, 0x58, 0x32, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61,
		0x78, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x24, 0x31, 0x20,
		0x24, 0x32, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x20, 0x24, 0x33, 0x59,
		0x6f, 0x6b, 0x61, 0x20, 0x54, 0x56, 0x4b, 0x42, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x6f, 0x6f,
		0x7a, 0x59, 0x6f, 0x74, 0x61, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x59, 0x6f, 0x75, 0x69, 0x6e, 0x59, 0x6f, 0x75, 0x2d, 0x42, 0x6f, 0x78, 0x59, 0x6f, 0x75,
		0x77, 0x65, 0x69, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x35, 0x47, 0x59, 0x74, 0x6f, 0x6e, 0x65, 0x59,
		0x75, 0x59, 0x75, 0x70, 0x68, 0x6f, 0x72, 0x69, 0x61, 0x59, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
		0x20, 0x32, 0x59, 0x75, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x59,
		0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x32, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x59, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x59, 0x55, 0x20, 0x36, 0x30, 0x30, 0x30,
		0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x59, 0x75, 0x61, 0x6e, 0x64,
		0x61, 0x6f, 0x4e, 0x31, 0x30, 0x31, 0x59, 0x75, 0x6e, 0x53, 0x6f, 0x6e, 0x67, 0x59, 0x53, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x75, 0x6e, 0x6f, 0x55, 0x4c, 0x58, 0x2d, 0x24, 0x31, 0x59,
		0x75, 0x73, 0x75, 0x6e, 0x4c, 0x41, 0x32, 0x2d, 0x54, 0x59, 0x78, 0x74, 0x65, 0x6c, 0x5a, 0x48,
		0x26, 0x4b, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x4a, 0x31, 0x30, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x24, 0x31, 0x4f, 0x64, 0x79, 0x73,
		0x73, 0x65, 0x79, 0x20, 0x41, 0x65, 0x6f, 0x6e, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20,
		0x41, 0x63, 0x65, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x4f, 0x64, 0x79, 0x73,
		0x73, 0x65, 0x79, 0x20, 0x50, 0x65, 0x72, 0x72, 0x69, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79,
		0x20, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x45, 0x76,
		0x6f, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79,
		0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x53, 0x77, 0x69, 0x66, 0x74, 0x4f, 0x64, 0x79,
		0x73, 0x73, 0x65, 0x79, 0x20, 0x54, 0x79, 0x74, 0x61, 0x6e, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65,
		0x79, 0x20, 0x53, 0x61, 0x67, 0x61, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x53, 0x61,
		0x63, 0x72, 0x65, 0x64, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x50, 0x6f, 0x70, 0x6f,
		0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x64, 0x79,
		0x73, 0x73, 0x65, 0x79, 0x20, 0x47, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f,
		0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x47, 0x6c, 0x61, 0x7a, 0x65, 0x4f, 0x64, 0x79, 0x73,
		0x73, 0x65, 0x79, 0x20, 0x48, 0x69, 0x67, 0x68, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20,
		0x53, 0x6f, 0x61, 0x72, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x45, 0x72, 0x61, 0x49,
		0x4e, 0x54, 0x45, 0x4e, 0x53, 0x45, 0x20, 0x52, 0x49, 0x53, 0x45, 0x49, 0x6e, 0x74, 0x65, 0x6e,
		0x73, 0x65, 0x20, 0x52, 0x69, 0x73, 0x65, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x53, 0x45, 0x20, 0x48,
		0x79, 0x70, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x48, 0x79, 0x70, 0x65, 0x49,
		0x4e, 0x54, 0x45, 0x4e, 0x53, 0x45, 0x20, 0x47, 0x41, 0x4d, 0x45, 0x49, 0x6e, 0x74, 0x65, 0x6e,
		0x73, 0x65, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x5a, 0x49, 0x46, 0x52, 0x4f, 0x5a, 0x49, 0x4b, 0x5a,
		0x54, 0x45, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x20, 0x31, 0x30, 0x56, 0x6f, 0x79, 0x61, 0x67,
		0x65, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f,
		0x20, 0x33, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4c, 0x69, 0x62, 0x65, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x20, 0x49, 0x49, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47,
		0x20, 0x49, 0x49, 0x49, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x53, 0x31, 0x30, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x41, 0x46, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x41, 0x33, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41,
		0x37, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37,
		0x70, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37,
		0x31, 0x4e, 0x39, 0x33, 0x39, 0x53, 0x63, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x31,
		0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x76, 0x37, 0x35, 0x34, 0x30, 0x4e, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x32, 0x20, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x41, 0x37, 0x20, 0x56, 0x69, 0x74, 0x61, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x31, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x32, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x37, 0x41,
		0x78, 0x6f, 0x6e, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x73, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x20, 0x35, 0x47,
		0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x20, 0x53,
		0x45, 0x20, 0x35, 0x47, 0x41, 0x32, 0x33, 0x32, 0x32, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33,
		0x30, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x41, 0x32, 0x30, 0x32, 0x32,
		0x48, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41,
		0x32, 0x30, 0x32, 0x32, 0x50, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x41, 0x32, 0x30, 0x32, 0x32, 0x50, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x32, 0x30, 0x32, 0x32, 0x41, 0x78, 0x6f, 0x6e,
		0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x32, 0x30, 0x32, 0x33, 0x50, 0x41, 0x78, 0x6f,
		0x6e, 0x20, 0x34, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x41, 0x32, 0x30, 0x32, 0x33, 0x47,
		0x41, 0x78, 0x6f, 0x6e, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x78, 0x6f, 0x6e, 0x20,
		0x34, 0x30, 0x20, 0x53, 0x45, 0x41, 0x32, 0x30, 0x31, 0x36, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x45,
		0x6c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x45, 0x67, 0x41, 0x6c, 0x6c, 0x73,
		0x74, 0x61, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x75, 0x65,
		0x73, 0x74, 0x20, 0x35, 0x43, 0x74, 0x79, 0x6f, 0x6e, 0x20, 0x41, 0x39, 0x56, 0x35, 0x47, 0x56,
		0x35, 0x53, 0x56, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x69, 0x61, 0x6c,
		0x49, 0x6d, 0x70, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x76, 0x69, 0x64,
		0x41, 0x76, 0x69, 0x64, 0x20, 0x35, 0x37, 0x39, 0x41, 0x76, 0x69, 0x64, 0x20, 0x35, 0x38, 0x39,
		0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20, 0x32, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x20,
		0x58, 0x57, 0x61, 0x72, 0x70, 0x20, 0x34, 0x47, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x20,
		0x52, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x54, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x51, 0x2b, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x51, 0x20, 0x4c, 0x75, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x47, 0x46,
		0x33, 0x57, 0x61, 0x72, 0x70, 0x20, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x61, 0x72, 0x70, 0x20, 0x37,
		0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x4d,
		0x61, 0x78, 0x2b, 0x4d, 0x61, 0x78, 0x20, 0x58, 0x4c, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x56, 0x35,
		0x20, 0x52, 0x65, 0x64, 0x20, 0x42, 0x75, 0x6c, 0x6c, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d,
		0x65, 0x6d, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x37, 0x37, 0x39, 0x4d, 0x4a, 0x6f, 0x65, 0x79,
		0x20, 0x4a, 0x75, 0x6d, 0x70, 0x20, 0x32, 0x56, 0x38, 0x30, 0x37, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x43, 0x56, 0x38, 0x30, 0x39, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x43, 0x32, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x35, 0x32, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x5a, 0x54, 0x45, 0x5f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x5f, 0x49, 0x49, 0x49, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x49, 0x49, 0x49, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x47, 0x20, 0x50, 0x72,
		0x6f, 0x56, 0x38, 0x38, 0x32, 0x4c, 0x6f, 0x72, 0x64, 0x56, 0x39, 0x36, 0x37, 0x53, 0x47, 0x72,
		0x61, 0x6e, 0x64, 0x20, 0x58, 0x32, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x58, 0x33, 0x56, 0x39, 0x36, 0x35, 0x56, 0x38, 0x30, 0x30, 0x30, 0x47, 0x72,
		0x61, 0x6e, 0x64, 0x20, 0x58, 0x34, 0x5a, 0x39, 0x38, 0x37, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20,
		0x58, 0x20, 0x4d, 0x61, 0x78, 0x2b, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x45, 0x72, 0x61, 0x55,
		0x5a, 0x54, 0x45, 0x20, 0x47, 0x52, 0x41, 0x4e, 0x44, 0x20, 0x56, 0x37, 0x47, 0x72, 0x61, 0x6e,
		0x64, 0x20, 0x56, 0x37, 0x56, 0x37, 0x38, 0x38, 0x44, 0x4b, 0x69, 0x73, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x5a, 0x33, 0x33, 0x31, 0x4e, 0x38, 0x31, 0x38, 0x53, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x20,
		0x46, 0x72, 0x65, 0x73, 0x68, 0x20, 0x35, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x53,
		0x70, 0x69, 0x72, 0x69, 0x74, 0x20, 0x32, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x32, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x57, 0x61,
		0x76, 0x65, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x32, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41,
		0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x32, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x4c, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c,
		0x33, 0x20, 0x41, 0x70, 0x65, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x33, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x4c, 0x34, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x34, 0x20, 0x50,
		0x72, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x37, 0x41,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41,
		0x24, 0x31, 0x20, 0x28, 0x24, 0x32, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x32, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x41, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x36,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x36, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x41, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53,
		0x37, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x44, 0x20, 0x4c, 0x75, 0x78, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x4c, 0x32, 0x31, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x56, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x56, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x36, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x37, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x37, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56,
		0x24, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x56, 0x31, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x31, 0x20, 0x35, 0x47, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x58, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x35, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x51,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x53, 0x45, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x56, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x39,
		0x20, 0x56, 0x69, 0x74, 0x61, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x33, 0x30, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x33, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61, 0x5a, 0x54, 0x45, 0x20, 0x38,
		0x30, 0x33, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32, 0x32, 0x20, 0x34,
		0x47, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x33, 0x30, 0x4e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x53, 0x33, 0x30, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x33, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x56, 0x33, 0x30, 0x5a, 0x54, 0x45, 0x20, 0x41, 0x37, 0x30, 0x34, 0x30, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x34, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5a, 0x54, 0x45, 0x20,
		0x41, 0x37, 0x30, 0x35, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x31, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x34, 0x35, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x56, 0x34, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x31,
		0x34, 0x30, 0x4e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x31, 0x20, 0x56, 0x69, 0x74,
		0x61, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x34, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56,
		0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x34, 0x36, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x30, 0x20, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5a, 0x54,
		0x45, 0x20, 0x39, 0x30, 0x34, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x30, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x24, 0x31, 0x20, 0x56, 0x69, 0x74, 0x61, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x24, 0x31, 0x4d, 0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5a, 0x38, 0x32, 0x30, 0x4f, 0x62,
		0x73, 0x69, 0x64, 0x69, 0x61, 0x6e, 0x5a, 0x39, 0x38, 0x36, 0x55, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x33, 0x5a, 0x36, 0x34, 0x31, 0x30, 0x53, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x73, 0x5a, 0x36, 0x31, 0x30, 0x44, 0x4c, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x56, 0x69, 0x65, 0x77, 0x5a, 0x39, 0x37, 0x31,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x5a, 0x39, 0x37, 0x38, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x38, 0x33, 0x39, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5a, 0x33, 0x31, 0x35,
		0x33, 0x56, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20,
		0x32, 0x5a, 0x39, 0x33, 0x30, 0x4c, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x5a,
		0x39, 0x36, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x5a, 0x36, 0x34, 0x30, 0x30, 0x43,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x32, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x39, 0x38, 0x31,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x5a, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x5a,
		0x39, 0x38, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x5a, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x39,
		0x38, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x69, 0x74,
		0x72, 0x69, 0x6e, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x79, 0x6d, 0x62, 0x61, 0x6c, 0x2d, 0x43,
		0x20, 0x4c, 0x54, 0x45, 0x5a, 0x32, 0x33, 0x33, 0x56, 0x43, 0x79, 0x6d, 0x62, 0x61, 0x6c, 0x20,
		0x4c, 0x54, 0x45, 0x5a, 0x32, 0x33, 0x32, 0x54, 0x4c, 0x43, 0x79, 0x6d, 0x62, 0x61, 0x6c, 0x2d,
		0x47, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x33, 0x35, 0x33, 0x56, 0x4c, 0x43, 0x79, 0x6d, 0x62, 0x61,
		0x6c, 0x2d, 0x54, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x37, 0x31, 0x38, 0x54, 0x4c, 0x4a, 0x61, 0x73,
		0x70, 0x65, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x49, 0x53, 0x20, 0x49, 0x49, 0x20, 0x4d, 0x61,
		0x78, 0x4b, 0x69, 0x73, 0x20, 0x49, 0x49, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x69, 0x73, 0x20, 0x33,
		0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x5a,
		0x38, 0x39, 0x39, 0x56, 0x4c, 0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x38, 0x32, 0x38, 0x54, 0x4c, 0x4d,
		0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x46,
		0x61, 0x6e, 0x66, 0x61, 0x72, 0x65, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x5a, 0x4d, 0x61, 0x78, 0x20,
		0x4f, 0x6e, 0x65, 0x5a, 0x38, 0x31, 0x35, 0x46, 0x61, 0x6e, 0x66, 0x61, 0x72, 0x65, 0x20, 0x32,
		0x5a, 0x38, 0x33, 0x31, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x32, 0x5a, 0x38, 0x33, 0x32, 0x53,
		0x6f, 0x6e, 0x61, 0x74, 0x61, 0x20, 0x33, 0x5a, 0x38, 0x33, 0x35, 0x4d, 0x61, 0x76, 0x65, 0x6e,
		0x20, 0x33, 0x50, 0x72, 0x65, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x38,
		0x35, 0x31, 0x4d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x20, 0x33, 0x5a, 0x38, 0x35,
		0x32, 0x46, 0x61, 0x6e, 0x66, 0x61, 0x72, 0x65, 0x20, 0x33, 0x5a, 0x38, 0x32, 0x38, 0x41, 0x76,
		0x69, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x38, 0x35, 0x35, 0x41, 0x76, 0x69, 0x64, 0x20,
		0x34, 0x5a, 0x38, 0x33, 0x33, 0x41, 0x76, 0x69, 0x64, 0x20, 0x54, 0x52, 0x49, 0x4f, 0x5a, 0x46,
		0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x35, 0x35, 0x38, 0x56, 0x4c, 0x5a,
		0x46, 0x69, 0x76, 0x65, 0x20, 0x43, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x35, 0x35, 0x37, 0x42, 0x4c,
		0x5a, 0x46, 0x69, 0x76, 0x65, 0x20, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x46, 0x69, 0x76, 0x65,
		0x20, 0x4c, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x39, 0x31, 0x36, 0x42, 0x4c, 0x5a, 0x4d, 0x61, 0x78,
		0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x39, 0x31, 0x37, 0x56, 0x4c,
		0x5a, 0x4d, 0x61, 0x78, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x4d,
		0x61, 0x78, 0x20, 0x32, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x33, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x31,
		0x30, 0x5a, 0x39, 0x36, 0x33, 0x56, 0x4c, 0x4d, 0x61, 0x78, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x4c,
		0x54, 0x45, 0x5a, 0x39, 0x37, 0x30, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x5a, 0x39, 0x37, 0x30, 0x5a,
		0x39, 0x38, 0x36, 0x44, 0x4c, 0x4d, 0x41, 0x58, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4c, 0x54,
		0x45, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x20, 0x32, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x4d, 0x41, 0x78,
		0x6f, 0x6e, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x32, 0x30, 0x31, 0x35, 0x41, 0x78, 0x6f, 0x6e,
		0x20, 0x54, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x43, 0x32, 0x30, 0x31, 0x37, 0x41, 0x78, 0x6f, 0x6e,
		0x20, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x32, 0x30, 0x31, 0x38, 0x41, 0x78, 0x6f, 0x6e, 0x20,
		0x37, 0x73, 0x42, 0x32, 0x30, 0x31, 0x37, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x37, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x36,
		0x36, 0x37, 0x54, 0x5a, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x6b, 0x61, 0x74, 0x65, 0x20, 0x32,
		0x47, 0x65, 0x65, 0x6b, 0x5a, 0x37, 0x31, 0x36, 0x42, 0x4c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x58,
		0x35, 0x30, 0x31, 0x47, 0x72, 0x6f, 0x6f, 0x76, 0x65, 0x46, 0x2d, 0x34, 0x35, 0x30, 0x41, 0x64,
		0x61, 0x6d, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x6f, 0x56, 0x38,
		0x36, 0x35, 0x4d, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61,
		0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4c,
		0x65, 0x6f, 0x20, 0x51, 0x32, 0x56, 0x65, 0x72, 0x67, 0x61, 0x74, 0x61, 0x72, 0x69, 0x6f, 0x20,
		0x35, 0x56, 0x65, 0x72, 0x67, 0x61, 0x74, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x56, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x31, 0x32,
		0x4e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32, 0x31, 0x20, 0x35, 0x47, 0x5a,
		0x54, 0x45, 0x20, 0x39, 0x30, 0x30, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30,
		0x32, 0x30, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x30, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x56, 0x32, 0x30, 0x32, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61, 0x4b, 0x49, 0x53, 0x20, 0x43, 0x33,
		0x34, 0x31, 0x4b, 0x69, 0x73, 0x20, 0x43, 0x33, 0x34, 0x31, 0x4d, 0x45, 0x4f, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x41, 0x24, 0x31, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x32, 0x30, 0x20, 0x35,
		0x47, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x31, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56,
		0x32, 0x30, 0x32, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5a, 0x58, 0x56, 0x31, 0x30, 0x20,
		0x42, 0x38, 0x36, 0x37, 0x52, 0x45, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x33, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x56, 0x69, 0x65, 0x77,
		0x20, 0x34, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33,
		0x2e, 0x38, 0x54, 0x72, 0x65, 0x6b, 0x20, 0x32, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x54, 0x69, 0x6d,
		0x65, 0x41, 0x78, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x5a, 0x54, 0x45,
		0x20, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x41, 0x35, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x31, 0x30, 0x5a, 0x59, 0x51,
		0x51, 0x36, 0x33, 0x38, 0x51, 0x32, 0x36, 0x32, 0x34, 0x43, 0x68, 0x65, 0x65, 0x72, 0x20, 0x33,
		0x47, 0x51, 0x32, 0x36, 0x30, 0x32, 0x54, 0x56, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x51, 0x32, 0x37,
		0x32, 0x38, 0x5a, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x51, 0x32, 0x37, 0x32, 0x39, 0x51, 0x32,
		0x36, 0x38, 0x38, 0x51, 0x32, 0x36, 0x32, 0x33, 0x57, 0x69, 0x6e, 0x20, 0x33, 0x47, 0x51, 0x32,
		0x36, 0x32, 0x36, 0x43, 0x61, 0x72, 0x65, 0x20, 0x33, 0x47, 0x51, 0x33, 0x36, 0x32, 0x33, 0x42,
		0x72, 0x61, 0x77, 0x20, 0x33, 0x47, 0x51, 0x33, 0x30, 0x32, 0x32, 0x51, 0x33, 0x32, 0x38, 0x20,
		0x6d, 0x39, 0x51, 0x33, 0x32, 0x38, 0x20, 0x4d, 0x39, 0x51, 0x33, 0x32, 0x38, 0x53, 0x70, 0x65,
		0x65, 0x64, 0x20, 0x33, 0x47, 0x51, 0x36, 0x36, 0x38, 0x54, 0x56, 0x20, 0x49, 0x34, 0x4a, 0x37,
		0x37, 0x51, 0x2e, 0x44, 0x65, 0x65, 0x51, 0x2e, 0x55, 0x70, 0x20, 0x43, 0x35, 0x51, 0x2e, 0x55,
		0x70, 0x51, 0x2e, 0x42, 0x6f, 0x73, 0x73, 0x20, 0x50, 0x39, 0x39, 0x51, 0x2e, 0x44, 0x65, 0x65,
		0x20, 0x52, 0x30, 0x39, 0x51, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x20, 0x4d, 0x39, 0x51, 0x2e, 0x48,
		0x69, 0x20, 0x53, 0x31, 0x51, 0x2e, 0x48, 0x69, 0x51, 0x2e, 0x48, 0x6f, 0x74, 0x20, 0x50, 0x37,
		0x20, 0x33, 0x47, 0x51, 0x2e, 0x48, 0x6f, 0x74, 0x51, 0x2e, 0x4d, 0x65, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x37, 0x20, 0x33, 0x47, 0x51, 0x2e, 0x4d, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x37, 0x51, 0x2e, 0x4d, 0x65, 0x51, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x52, 0x39, 0x39,
		0x51, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x42, 0x37, 0x51, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x20,
		0x4a, 0x32, 0x51, 0x2e, 0x54, 0x6f, 0x70, 0x20, 0x58, 0x38, 0x51, 0x2e, 0x59, 0x6f, 0x75, 0x51,
		0x54, 0x41, 0x42, 0x20, 0x54, 0x61, 0x62, 0x34, 0x51, 0x54, 0x61, 0x62, 0x20, 0x54, 0x61, 0x62,
		0x34, 0x5a, 0x59, 0x51, 0x2d, 0x51, 0x38, 0x38, 0x51, 0x38, 0x38, 0x5a, 0x61, 0x69, 0x74, 0x68,
		0x5a, 0x61, 0x6d, 0x6f, 0x6c, 0x78, 0x65, 0x5a, 0x61, 0x74, 0x65, 0x63, 0x57, 0x69, 0x6e, 0x64,
		0x5a, 0x50, 0x4c, 0x41, 0x59, 0x31, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x5a, 0x70, 0x6c, 0x61, 0x79,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x32, 0x30,
		0x31, 0x38, 0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x5a,
		0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x50, 0x41, 0x44, 0x5f, 0x31, 0x5a, 0x50, 0x61, 0x64, 0x5a,
		0x65, 0x61, 0x6c, 0x6f, 0x74, 0x5a, 0x65, 0x62, 0x6c, 0x61, 0x7a, 0x65, 0x54, 0x68, 0x6f, 0x72,
		0x20, 0x24, 0x31, 0x54, 0x48, 0x4f, 0x52, 0x20, 0x50, 0x52, 0x4f, 0x54, 0x68, 0x6f, 0x72, 0x20,
		0x50, 0x72, 0x6f, 0x5a, 0x65, 0x62, 0x72, 0x61, 0x5a, 0x65, 0x65, 0x6b, 0x65, 0x72, 0x5a, 0x45,
		0x45, 0x4b, 0x45, 0x52, 0x5a, 0x65, 0x65, 0x6d, 0x69, 0x5a, 0x65, 0x6e, 0x41, 0x64, 0x6d, 0x69,
		0x72, 0x65, 0x47, 0x6c, 0x61, 0x6d, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x47, 0x6c, 0x61,
		0x6d, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x2b, 0x41, 0x64,
		0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x77, 0x61, 0x64, 0x65, 0x73, 0x68, 0x2b, 0x41, 0x64, 0x6d,
		0x69, 0x72, 0x65, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x44, 0x75, 0x6f, 0x41, 0x64, 0x6d,
		0x69, 0x72, 0x65, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65, 0x20, 0x4e, 0x65, 0x6f, 0x41, 0x64, 0x6d,
		0x69, 0x72, 0x65, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65, 0x2b, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65,
		0x20, 0x4e, 0x65, 0x6f, 0x2b, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x44, 0x75, 0x6f, 0x41,
		0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x72,
		0x65, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65,
		0x20, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x74, 0x72,
		0x6f, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x2b,
		0x5a, 0x65, 0x6e, 0x65, 0x6b, 0x5a, 0x35, 0x35, 0x31, 0x37, 0x4c, 0x65, 0x6f, 0x70, 0x61, 0x72,
		0x64, 0x6f, 0x5a, 0x36, 0x30, 0x30, 0x31, 0x4c, 0x69, 0x62, 0x65, 0x6c, 0x75, 0x6c, 0x61, 0x5a,
		0x35, 0x30, 0x30, 0x37, 0x4f, 0x73, 0x6f, 0x5a, 0x35, 0x35, 0x31, 0x39, 0x50, 0x69, 0x6e, 0x67,
		0xc3, 0xbb, 0x69, 0x6e, 0x6f, 0x5a, 0x35, 0x35, 0x31, 0x36, 0x5a, 0x65, 0x6e, 0x74, 0x61, 0x6c,
		0x69, 0x74, 0x79, 0x43, 0x2d, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x5a, 0x66, 0x69,
		0x6e, 0x65, 0x72, 0x59, 0x39, 0x30, 0x30, 0x5a, 0x69, 0x64, 0x6f, 0x6f, 0x5a, 0x69, 0x67, 0x6f,
		0x45, 0x6f, 0x6e, 0x34, 0x35, 0x69, 0x45, 0x6f, 0x6e, 0x20, 0x34, 0x35, 0x69, 0x5a, 0x69, 0x6e,
		0x6f, 0x78, 0x4b, 0x69, 0x64, 0x73, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x54, 0x61, 0x62, 0x50,
		0x72, 0x6f, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x70, 0x61, 0x64, 0x2d, 0x58, 0x38, 0x2d, 0x50, 0x52, 0x4f,
		0x5a, 0x70, 0x61, 0x64, 0x20, 0x58, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x69, 0x6f, 0x78, 0x41,
		0x73, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x20, 0x34, 0x47, 0x41, 0x73, 0x74, 0x72, 0x61, 0x20,
		0x24, 0x31, 0x41, 0x73, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x75,
		0x6f, 0x70, 0x69, 0x78, 0x20, 0x46, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x75, 0x6f, 0x24, 0x31,
		0x20, 0x24, 0x32, 0x5a, 0x6f, 0x6e, 0x64, 0x61, 0x5a, 0x41, 0x34, 0x30, 0x39, 0x4d, 0x75, 0x7a,
		0x69, 0x63, 0x5a, 0x6f, 0x6e, 0x6b, 0x6f, 0x4b, 0x31, 0x30, 0x31, 0x5a, 0x6f, 0x6f, 0x6d, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x5a, 0x6f, 0x70, 0x6f, 0x43, 0x32, 0x20, 0x49, 0x49, 0x39, 0x58, 0x58,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x5a, 0x50, 0x39, 0x38, 0x30, 0x2b, 0x53, 0x70, 0x65, 0x65, 0x64,
		0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x53, 0x70, 0x65,
		0x65, 0x64, 0x20, 0x37, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x38, 0x4c, 0x65, 0x61, 0x64, 0x65,
		0x72, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x48, 0x44, 0x4c, 0x69,
		0x62, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x43, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
		0x20, 0x53, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x46, 0x32, 0x46, 0x35, 0x20, 0x43, 0x6f, 0x6c,
		0x6f, 0x72, 0x20, 0x4d, 0x35, 0x43, 0x32, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x4d, 0x34,
		0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x58, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x43, 0x35, 0x69,
		0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x68, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x6c, 0x6f,
		0x74, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x58, 0x32, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x47,
		0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x5a, 0x75, 0x75, 0x6d,
		0x41, 0x4b, 0x55, 0x53, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x6b, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f,
		0x41, 0x6b, 0x75, 0x73, 0x20, 0x24, 0x31, 0x41, 0x75, 0x72, 0x61, 0x20, 0x5a, 0x43, 0x4f, 0x56,
		0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x43, 0x6f, 0x76, 0x65, 0x74,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43, 0x4f, 0x56, 0x45, 0x54, 0x20, 0x50,
		0x52, 0x4f, 0x43, 0x6f, 0x76, 0x65, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x4f, 0x56, 0x45, 0x54,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x43, 0x6f, 0x76, 0x65, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x43,
		0x6f, 0x76, 0x65, 0x74, 0x24, 0x31, 0x4d, 0x41, 0x47, 0x4e, 0x4f, 0x20, 0x50, 0x4c, 0x55, 0x53,
		0x4d, 0x61, 0x67, 0x6e, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x41, 0x47, 0x4e, 0x4f, 0x2d,
		0x53, 0x4d, 0x61, 0x67, 0x6e, 0x6f, 0x20, 0x53, 0x4d, 0x61, 0x67, 0x6e, 0x6f, 0x24, 0x31, 0x4f,
		0x4e, 0x49, 0x58, 0x20, 0x53, 0x4f, 0x6e, 0x69, 0x78, 0x20, 0x53, 0x4f, 0x4e, 0x49, 0x58, 0x53,
		0x54, 0x45, 0x44, 0x49, 0x53, 0x74, 0x65, 0x64, 0x69, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52,
		0x20, 0x50, 0x52, 0x4f, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x53,
		0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x53, 0x74, 0x65, 0x6c, 0x6c,
		0x61, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x24,
		0x31, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x53, 0x74, 0x65,
		0x6c, 0x6c, 0x61, 0x72, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52,
		0x20, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x53,
		0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x47, 0x72, 0x61,
		0x76, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x4c,
		0x69, 0x66, 0x65, 0x41, 0x55, 0x52, 0x41, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x20, 0x4a, 0x4c, 0x4f,
		0x41, 0x75, 0x72, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4a, 0x2e, 0x4c, 0x6f, 0x41, 0x55,
		0x52, 0x41, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x4a, 0x4c, 0x4f, 0x41, 0x75, 0x72, 0x61, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x4a, 0x2e, 0x4c, 0x6f, 0x41, 0x55, 0x52, 0x41, 0x20, 0x50, 0x52, 0x4f, 0x41,
		0x75, 0x72, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x55, 0x52, 0x41, 0x20, 0x58, 0x41, 0x75, 0x72,
		0x61, 0x20, 0x58, 0x52, 0x4f, 0x4e, 0x49, 0x52, 0x6f, 0x6e, 0x69, 0x55, 0x4c, 0x54, 0x52, 0x41,
		0x20, 0x5a, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x5a, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20,
		0x24, 0x31, 0x55, 0x6e, 0x69, 0x71, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x47, 0x52, 0x41, 0x4e, 0x54,
		0x47, 0x72, 0x61, 0x6e, 0x74, 0x5a, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x20, 0x24,
		0x31, 0x5a, 0x79, 0x72, 0x65, 0x78, 0x5a, 0x54, 0x32, 0x31, 0x36, 0x61, 0x63, 0x74, 0x69, 0x4d,
		0x69, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x6b, 0x32, 0x31, 0x54, 0x2d, 0x30, 0x33, 0x61,
		0x6c, 0x74, 0x72, 0x6f, 0x6e, 0x41, 0x4c, 0x2d, 0x35, 0x35, 0x35, 0x4f, 0x42, 0x2d, 0x24, 0x31,
		0x47, 0x49, 0x2d, 0x36, 0x32, 0x36, 0x62, 0x32, 0x6d, 0x44, 0x65, 0x63, 0x61, 0x64, 0x65, 0x20,
		0x35, 0x33, 0x62, 0x6f, 0x67, 0x6f, 0x42, 0x4f, 0x2d, 0x4c, 0x46, 0x53, 0x50, 0x34, 0x4c, 0x69,
		0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x34, 0x44, 0x43, 0x42, 0x4f, 0x2d, 0x4c, 0x46,
		0x53, 0x50, 0x53, 0x4c, 0x34, 0x4c, 0x69, 0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x34,
		0x53, 0x4c, 0x42, 0x4f, 0x2d, 0x4c, 0x46, 0x53, 0x50, 0x42, 0x53, 0x35, 0x4c, 0x69, 0x66, 0x65,
		0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x35, 0x42, 0x53, 0x42, 0x4f, 0x2d, 0x4c, 0x46, 0x53, 0x50,
		0x53, 0x4c, 0x36, 0x51, 0x43, 0x49, 0x4c, 0x69, 0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20,
		0x36, 0x51, 0x43, 0x62, 0x71, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x53,
		0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x53,
		0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x4f, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x43, 0x4d, 0x61,
		0x67, 0x69, 0x63, 0x20, 0x53, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x41, 0x75,
		0x72, 0x6f, 0x72, 0x61, 0x20, 0x53, 0x45, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x4c, 0x48, 0x6f,
		0x72, 0x6e, 0x65, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x51, 0x2d,
		0x38, 0x30, 0x36, 0x37, 0x4c, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x42, 0x51, 0x2d, 0x38, 0x30, 0x35, 0x32, 0x47, 0x42, 0x51, 0x2d, 0x38, 0x30, 0x34, 0x31, 0x4c,
		0x42, 0x51, 0x2d, 0x37, 0x30, 0x38, 0x34, 0x47, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x51,
		0x2d, 0x37, 0x30, 0x36, 0x31, 0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x73, 0x41, 0x72, 0x6d, 0x6f,
		0x72, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x35, 0x31, 0x47, 0x45, 0x6c, 0x62, 0x61, 0x42, 0x51, 0x2d,
		0x37, 0x30, 0x33, 0x36, 0x4c, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x69, 0x6f,
		0x6e, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x32, 0x31, 0x47, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x31, 0x30,
		0x47, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x30, 0x36, 0x47, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x42, 0x51,
		0x2d, 0x37, 0x30, 0x30, 0x33, 0x4a, 0x61, 0x6d, 0x61, 0x69, 0x63, 0x61, 0x42, 0x51, 0x2d, 0x36,
		0x36, 0x34, 0x35, 0x4c, 0x36, 0x36, 0x34, 0x35, 0x4c, 0x20, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
		0x74, 0x42, 0x51, 0x2d, 0x36, 0x30, 0x36, 0x31, 0x4c, 0x36, 0x30, 0x36, 0x31, 0x4c, 0x20, 0x53,
		0x6c, 0x69, 0x6d, 0x42, 0x51, 0x2d, 0x36, 0x30, 0x32, 0x32, 0x47, 0x55, 0x6e, 0x69, 0x76, 0x65,
		0x72, 0x73, 0x65, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x4e,
		0x65, 0x78, 0x74, 0x20, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x67, 0x4a,
		0x65, 0x61, 0x6e, 0x73, 0x42, 0x51, 0x2d, 0x35, 0x35, 0x32, 0x32, 0x53, 0x69, 0x6c, 0x6b, 0x46,
		0x61, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x61, 0x73, 0x74, 0x20, 0x50, 0x72, 0x6f,
		0x54, 0x77, 0x69, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x77, 0x69, 0x6e, 0x57, 0x69, 0x64, 0x65,
		0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x42, 0x6c,
		0x69, 0x73, 0x73, 0x41, 0x6d, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x6d, 0x53, 0x74, 0x72, 0x69,
		0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x34, 0x47, 0x4e,
		0x65, 0x78, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x49, 0x72, 0x6f, 0x6e, 0x20, 0x4d, 0x61, 0x78, 0x53,
		0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x4d, 0x61, 0x78,
		0x4e, 0x69, 0x63, 0x65, 0x20, 0x32, 0x4e, 0x69, 0x63, 0x65, 0x4e, 0x69, 0x63, 0x65, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x4b, 0x61, 0x77, 0x61, 0x73, 0x61, 0x6b, 0x69, 0x56, 0x61, 0x6e, 0x63, 0x6f,
		0x75, 0x76, 0x65, 0x72, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x32, 0x53, 0x74, 0x72, 0x69,
		0x6b, 0x65, 0x20, 0x56, 0x69, 0x65, 0x77, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x56, 0x69,
		0x65, 0x77, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53,
		0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x53, 0x70, 0x61, 0x63,
		0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x32, 0x57, 0x61, 0x6c,
		0x6c, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x43, 0x68, 0x6f,
		0x69, 0x63, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x74, 0x72,
		0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x45, 0x61, 0x73, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65,
		0x20, 0x32, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x45, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x42, 0x51, 0x2d, 0x35, 0x30, 0x36, 0x30, 0x4c, 0x42, 0x61, 0x73, 0x69, 0x63,
		0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x34, 0x47, 0x56,
		0x65, 0x6c, 0x76, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20,
		0x52, 0x75, 0x73, 0x68, 0x48, 0x69, 0x67, 0x68, 0x20, 0x57, 0x61, 0x79, 0x42, 0x6f, 0x6e, 0x64,
		0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x69, 0x63, 0x68, 0x52, 0x69, 0x63, 0x68, 0x20, 0x4d, 0x61,
		0x78, 0x4d, 0x6f, 0x6e, 0x74, 0x65, 0x20, 0x43, 0x61, 0x72, 0x6c, 0x6f, 0x53, 0x70, 0x6f, 0x74,
		0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x45, 0x61, 0x73, 0x79, 0x50, 0x72, 0x61, 0x67, 0x75,
		0x65, 0x42, 0x51, 0x2d, 0x35, 0x35, 0x36, 0x30, 0x4c, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x42, 0x51, 0x2d, 0x35, 0x35, 0x36, 0x35, 0x4c, 0x53, 0x79, 0x64,
		0x6e, 0x65, 0x79, 0x4c, 0x6f, 0x73, 0x20, 0x41, 0x6e, 0x67, 0x65, 0x6c, 0x65, 0x73, 0x49, 0x6e,
		0x74, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x6f,
		0x6c, 0x6f, 0x6d, 0x62, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x6f, 0x20, 0x49, 0x49, 0x43,
		0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x69, 0x6c, 0x61, 0x6e, 0x54, 0x6f, 0x6b, 0x79, 0x6f,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x72, 0x65, 0x61, 0x6c, 0xd0, 0x9e, 0x73,
		0x61, 0x6b, 0x61, 0x56, 0x65, 0x6e, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x78, 0x20, 0x56, 0x69, 0x65,
		0x77, 0x46, 0x6f, 0x78, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x72, 0x69, 0x76, 0x65, 0x47,
		0x6f, 0x6c, 0x66, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x6f, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x61,
		0x70, 0x6f, 0x72, 0x65, 0x46, 0x6c, 0x6f, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x61, 0x6e, 0x74,
		0x69, 0x61, 0x67, 0x6f, 0x44, 0x75, 0x62, 0x61, 0x69, 0x4b, 0x69, 0x6e, 0x67, 0x73, 0x74, 0x6f,
		0x6e, 0x42, 0x51, 0x53, 0x2d, 0x34, 0x35, 0x30, 0x31, 0x20, 0x42, 0x72, 0x69, 0x73, 0x74, 0x6f,
		0x6c, 0x42, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x6c, 0x46, 0x6f, 0x78, 0x20, 0x45, 0x61, 0x73, 0x79,
		0x46, 0x6f, 0x78, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x55, 0x70, 0x21, 0x4f,
		0x72, 0x6c, 0x65, 0x61, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x69, 0x56, 0x61,
		0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x44, 0x75, 0x73, 0x73, 0x65,
		0x6c, 0x64, 0x6f, 0x72, 0x66, 0x56, 0x65, 0x72, 0x6f, 0x6e, 0x61, 0x43, 0x6f, 0x6f, 0x6c, 0x4f,
		0x78, 0x66, 0x6f, 0x72, 0x64, 0x41, 0x73, 0x70, 0x65, 0x6e, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42,
		0x6f, 0x6d, 0x62, 0x61, 0x79, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x50, 0x72, 0x6f, 0x42, 0x51, 0x2d, 0x31, 0x30, 0x33, 0x36, 0x4c, 0x45, 0x78, 0x69, 0x6f, 0x6e,
		0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x74, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x4d, 0x61,
		0x78, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x73,
		0x69, 0x6b, 0x61, 0x48, 0x61, 0x77, 0x61, 0x69, 0x69, 0x47, 0x72, 0x61, 0x63, 0x65, 0x41, 0x71,
		0x75, 0x61, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x73, 0x20,
		0x24, 0x31, 0x34, 0x2e, 0x35, 0x4a, 0x61, 0x76, 0x61, 0x42, 0x51, 0x2d, 0x39, 0x30, 0x35, 0x35,
		0x4c, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42,
		0x51, 0x2d, 0x38, 0x30, 0x38, 0x38, 0x4c, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x75, 0x72,
		0x66, 0x46, 0x69, 0x6a, 0x69, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x33, 0x47, 0x4c, 0x75, 0x7a,
		0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
		0x61, 0x6c, 0x74, 0x61, 0xd0, 0xa1, 0x68, 0x61, 0x72, 0x6d, 0xd0, 0xa1, 0x68, 0x61, 0x72, 0x6d,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x4e, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x4e, 0x65, 0x78, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x67, 0x68,
		0x74, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x37, 0x30, 0x38, 0x33, 0x31,
		0x30, 0x35, 0x36, 0x4c, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54,
		0x45, 0x2b, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x78, 0x69, 0x6f, 0x6e,
		0x20, 0x4f, 0x6e, 0x65, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x68, 0x61,
		0x72, 0x6d, 0x45, 0x64, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x33, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69,
		0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x54, 0x56, 0x5f, 0x42, 0x51, 0x65, 0x4e, 0x4f, 0x56,
		0x41, 0x65, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x54, 0x41, 0x42, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54,
		0x45, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x65, 0x53, 0x54, 0x41,
		0x52, 0x24, 0x31, 0x20, 0x24, 0x32, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x20, 0x33, 0x47, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x20, 0x43, 0x6f, 0x72, 0x65, 0x24, 0x31, 0x65, 0x53, 0x54, 0x41, 0x52, 0x20, 0x47, 0x52, 0x41,
		0x4e, 0x44, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x4d, 0x45, 0x52, 0x43, 0x55, 0x52, 0x59, 0x20, 0x48,
		0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x75,
		0x72, 0x79, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x65,
		0x53, 0x54, 0x41, 0x52, 0x20, 0x42, 0x45, 0x41, 0x55, 0x54, 0x59, 0x20, 0x48, 0x44, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x65, 0x61, 0x75, 0x74, 0x79, 0x20, 0x48,
		0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x65, 0x53, 0x54, 0x41, 0x52,
		0x20, 0x4d, 0x4f, 0x4f, 0x4e, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f,
		0x72, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x20, 0x33, 0x47, 0x65, 0x53, 0x54, 0x41, 0x52, 0x20, 0x42, 0x45, 0x41, 0x55,
		0x54, 0x59, 0x20, 0x32, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72,
		0x65, 0x42, 0x65, 0x61, 0x75, 0x74, 0x79, 0x20, 0x32, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61,
		0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x47, 0x74, 0x61, 0x6b,
		0x65, 0x65, 0x20, 0x31, 0x54, 0x61, 0x6b, 0x65, 0x65, 0x20, 0x31, 0x65, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x65, 0x63, 0x6f, 0x6d, 0x69, 0x2d, 0x43, 0x68, 0x65, 0x72, 0x72, 0x79, 0x69, 0x43, 0x68,
		0x65, 0x72, 0x72, 0x79, 0x2d, 0x43, 0x32, 0x35, 0x36, 0x43, 0x32, 0x35, 0x36, 0x20, 0x4e, 0x61,
		0x6e, 0x6f, 0x20, 0x33, 0x47, 0x69, 0x2d, 0x4a, 0x6f, 0x79, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72,
		0x61, 0x20, 0x4d, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x61, 0x20, 0x4c, 0x45, 0x6c, 0x65, 0x6b,
		0x74, 0x72, 0x61, 0x20, 0x58, 0x4c, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x61, 0x20, 0x58, 0x58,
		0x4c, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x53, 0x79, 0x67, 0x6e, 0x75, 0x73, 0x44, 0x65,
		0x6f, 0x78, 0x69, 0x2d, 0x43, 0x61, 0x6c, 0x6c, 0x20, 0x24, 0x31, 0x69, 0x2d, 0x6d, 0x61, 0x74,
		0x65, 0x69, 0x2d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x69, 0x2d, 0x53, 0x74, 0x79, 0x6c, 0x65,
		0x20, 0x24, 0x31, 0x49, 0x51, 0x20, 0x24, 0x31, 0x49, 0x51, 0x20, 0x5a, 0x20, 0x50, 0x52, 0x4f,
		0x49, 0x51, 0x20, 0x5a, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x51, 0x20, 0x5a, 0x20, 0x42, 0x52, 0x49,
		0x47, 0x48, 0x54, 0x49, 0x51, 0x20, 0x5a, 0x20, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x69, 0x42,
		0x61, 0x6c, 0x6c, 0x41, 0x6e, 0x64, 0x69, 0x20, 0x57, 0x69, 0x6e, 0x6b, 0x20, 0x34, 0x47, 0x41,
		0x6e, 0x64, 0x69, 0x20, 0x35, 0x47, 0x20, 0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x34, 0x47, 0x53,
		0x6c, 0x69, 0x64, 0x65, 0x20, 0x44, 0x44, 0x2d, 0x31, 0x47, 0x42, 0x53, 0x6c, 0x69, 0x64, 0x65,
		0x20, 0x44, 0x61, 0x7a, 0x7a, 0x6c, 0x65, 0x20, 0x33, 0x35, 0x30, 0x30, 0x53, 0x6c, 0x69, 0x64,
		0x65, 0x20, 0x33, 0x47, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x5f, 0x58, 0x32, 0x53, 0x70, 0x69,
		0x72, 0x69, 0x74, 0x20, 0x58, 0x32, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x5f, 0x53, 0x6b, 0x79, 0x65,
		0x5f, 0x30, 0x33, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x53, 0x6b, 0x79, 0x65, 0x20, 0x30, 0x33,
		0x42, 0x72, 0x61, 0x63, 0x65, 0x20, 0x58, 0x31, 0x69, 0x54, 0x41, 0x42, 0x20, 0x42, 0x69, 0x7a,
		0x6e, 0x69, 0x5a, 0x69, 0x54, 0x41, 0x42, 0x20, 0x42, 0x69, 0x7a, 0x6e, 0x69, 0x5a, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x69, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x7a, 0x20, 0x50,
		0x72, 0x6f, 0x69, 0x42, 0x65, 0x72, 0x72, 0x79, 0x69, 0x42, 0x72, 0x69, 0x74, 0x69, 0x35, 0x50,
		0x6c, 0x75, 0x73, 0x49, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20,
		0x36, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x58, 0x5a, 0x32, 0x4c, 0x69, 0x74,
		0x65, 0x5a, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x46, 0x35, 0x31, 0x69, 0x44, 0x61, 0x74,
		0x61, 0x69, 0x44, 0x69, 0x6e, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x36,
		0x69, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x50, 0x41, 0x43, 0x48, 0x45, 0x20, 0x47, 0x36, 0x41,
		0x70, 0x61, 0x63, 0x68, 0x65, 0x20, 0x47, 0x36, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x20, 0x56, 0x35,
		0x42, 0x61, 0x72, 0x6c, 0x20, 0x58, 0x37, 0x69, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x53, 0x31, 0x30, 0x30, 0x69, 0x48, 0x75, 0x6e, 0x74, 0x43, 0x79, 0x62, 0x65, 0x72, 0x20,
		0x44, 0x4f, 0x47, 0x20, 0x34, 0x47, 0x43, 0x79, 0x62, 0x65, 0x72, 0x20, 0x44, 0x6f, 0x67, 0x20,
		0x34, 0x47, 0x4c, 0x69, 0x6b, 0x65, 0x5f, 0x48, 0x69, 0x31, 0x30, 0x5f, 0x32, 0x30, 0x32, 0x31,
		0x4c, 0x69, 0x6b, 0x65, 0x20, 0x48, 0x69, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x28, 0x32, 0x30, 0x24, 0x31, 0x29, 0x53,
		0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x32, 0x30, 0x32, 0x30,
		0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x30, 0x29, 0x4f, 0x6e, 0x65, 0x5f, 0x20, 0x4c, 0x6f, 0x76, 0x65, 0x5f, 0x4f, 0x6e, 0x65,
		0x20, 0x4c, 0x6f, 0x76, 0x65, 0x54, 0x69, 0x61, 0x6e, 0x20, 0x50, 0x33, 0x30, 0x30, 0x30, 0x54,
		0x49, 0x54, 0x41, 0x4e, 0x5f, 0x50, 0x31, 0x31, 0x30, 0x30, 0x30, 0x5f, 0x50, 0x52, 0x4f, 0x54,
		0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x31, 0x31, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54,
		0x49, 0x54, 0x41, 0x4e, 0x20, 0x50, 0x31, 0x35, 0x30, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x20,
		0x35, 0x47, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x31, 0x35, 0x30, 0x30, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x54, 0x49, 0x54, 0x41, 0x4e, 0x20, 0x50, 0x34, 0x30, 0x30, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50,
		0x34, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x54,
		0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x38, 0x30, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x32,
		0x30, 0x32, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x38, 0x30, 0x30, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x5f, 0x50,
		0x36, 0x30, 0x30, 0x30, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x36,
		0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x36, 0x30,
		0x30, 0x30, 0x4c, 0x69, 0x6b, 0x65, 0x5f, 0x33, 0x5f, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x6b, 0x65,
		0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x52,
		0x4f, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x6b, 0x65,
		0x20, 0x48, 0x69, 0x35, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x6b, 0x65, 0x5f,
		0x34, 0x55, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x34, 0x55, 0x69, 0x48, 0x75, 0x6e, 0x74, 0x5f, 0x4c,
		0x69, 0x6b, 0x65, 0x58, 0x33, 0x30, 0x30, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x53, 0x36, 0x30,
		0x5f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x53,
		0x36, 0x30, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x53, 0x36, 0x30, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x36, 0x30, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
		0x72, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x32, 0x53, 0x36, 0x30, 0x20, 0x44,
		0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x32, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x58, 0x4c, 0x69, 0x74, 0x65, 0x32, 0x30, 0x32,
		0x30, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x30, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x50, 0x52, 0x4f, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x31,
		0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x5f, 0x58, 0x5f, 0x41, 0x70, 0x65, 0x58, 0x5f, 0x32,
		0x30, 0x32, 0x30, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x41, 0x70, 0x65, 0x58, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x5f, 0x58, 0x5f, 0x41, 0x70,
		0x65, 0x58, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x41, 0x70, 0x65, 0x58, 0x53, 0x24,
		0x31, 0x20, 0x41, 0x70, 0x65, 0x58, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x5f, 0x58, 0x41, 0x6c, 0x69,
		0x65, 0x6e, 0x20, 0x58, 0x53, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x30, 0x32,
		0x31, 0x53, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x53, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x41, 0x70, 0x65, 0x58, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x32, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34,
		0x47, 0x20, 0x32, 0x30, 0x32, 0x31, 0x53, 0x32, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x34, 0x47, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x32, 0x32, 0x20, 0x55, 0x4c, 0x54,
		0x52, 0x41, 0x53, 0x32, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x32, 0x32, 0x20, 0x50,
		0x4c, 0x55, 0x53, 0x53, 0x32, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x20,
		0x31, 0x31, 0x20, 0x50, 0x61, 0x6e, 0x64, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32,
		0x32, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x61, 0x6e, 0x64, 0x61, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x69, 0x4b, 0x6f, 0x4d, 0x6f, 0x69, 0x4b,
		0x6f, 0x6e, 0x69, 0x4c, 0x41, 0x69, 0x4c, 0x65, 0x70, 0x6f, 0x69, 0x4c, 0x69, 0x66, 0x65, 0x4b,
		0x33, 0x31, 0x30, 0x32, 0x20, 0x57, 0x49, 0x46, 0x49, 0x4b, 0x33, 0x31, 0x30, 0x32, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x57, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x5a, 0x65, 0x64, 0x20, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x47, 0x46, 0x69, 0x76, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x69, 0x76,
		0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x69, 0x4d, 0x49, 0x56, 0x69, 0x6e, 0x33, 0x20, 0x53, 0x56,
		0x69, 0x6e, 0x20, 0x33, 0x20, 0x53, 0x56, 0x69, 0x6e, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56,
		0x69, 0x6e, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x4d,
		0x65, 0x73, 0x73, 0x69, 0x20, 0x24, 0x31, 0x69, 0x4d, 0x61, 0x6e, 0x69, 0x4d, 0x61, 0x72, 0x73,
		0x49, 0x4d, 0x41, 0x52, 0x53, 0x20, 0x56, 0x45, 0x47, 0x41, 0x20, 0x58, 0x37, 0x56, 0x65, 0x67,
		0x61, 0x20, 0x58, 0x37, 0x56, 0x49, 0x56, 0x49, 0x5f, 0x38, 0x56, 0x49, 0x56, 0x49, 0x20, 0x38,
		0x4d, 0x49, 0x4c, 0x4b, 0x59, 0x5f, 0x57, 0x41, 0x59, 0x5f, 0x4d, 0x32, 0x4d, 0x69, 0x6c, 0x6b,
		0x79, 0x20, 0x57, 0x61, 0x79, 0x20, 0x4d, 0x32, 0x69, 0x4d, 0x75, 0x7a, 0x6d, 0x75, 0x50, 0x41,
		0x44, 0x20, 0x24, 0x31, 0x69, 0x4e, 0x4f, 0x56, 0x41, 0x69, 0x4e, 0x61, 0x76, 0x69, 0x49, 0x54,
		0x50, 0x2d, 0x58, 0x44, 0x38, 0x30, 0x4c, 0x55, 0x2b, 0x20, 0x50, 0x61, 0x64, 0x38, 0x69, 0x4e,
		0x65, 0x77, 0x56, 0x33, 0x43, 0x56, 0x33, 0x2d, 0x45, 0x56, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x56, 0x37, 0x41, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x36, 0x69, 0x4e, 0x6f,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x69, 0x4e, 0x4f, 0x20, 0x53, 0x43, 0x4f, 0x55, 0x54,
		0x20, 0x32, 0x53, 0x63, 0x6f, 0x75, 0x74, 0x20, 0x32, 0x53, 0x47, 0x49, 0x4e, 0x4f, 0x36, 0x69,
		0x4e, 0x4f, 0x20, 0x53, 0x39, 0x69, 0x4f, 0x63, 0x65, 0x61, 0x6e, 0x58, 0x37, 0x53, 0x2d, 0x54,
		0x58, 0x38, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x38, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x38, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x38, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x58, 0x37, 0x53, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x69, 0x4f, 0x75,
		0x74, 0x64, 0x6f, 0x6f, 0x72, 0x69, 0x50, 0x45, 0x47, 0x54, 0x4f, 0x50, 0x49, 0x50, 0x45, 0x47,
		0x54, 0x4f, 0x50, 0x69, 0x50, 0x72, 0x6f, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x35, 0x2e, 0x30,
		0x53, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x35, 0x30,
		0x69, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x35, 0x30, 0x69, 0x4b, 0x59, 0x4c, 0x49, 0x4e, 0x34,
		0x30, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x34, 0x30, 0x4f, 0x70, 0x61, 0x6c, 0x20, 0x34, 0x53,
		0x4a, 0x61, 0x64, 0x65, 0x20, 0x24, 0x31, 0x73, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x35, 0x53, 0x5f,
		0x50, 0x72, 0x6f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x35, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x41,
		0x6d, 0x62, 0x65, 0x72, 0x36, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x36, 0x41, 0x6d, 0x62, 0x65,
		0x72, 0x37, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x37, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72,
		0x38, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x38, 0x53, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x38, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x38,
		0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x38, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x38, 0x42, 0x65,
		0x6e, 0x6e, 0x79, 0x31, 0x30, 0x42, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x31, 0x30, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x6e, 0x69, 0x78, 0x35, 0x30, 0x53, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6e, 0x69, 0x78,
		0x20, 0x35, 0x30, 0x53, 0x52, 0x75, 0x62, 0x79, 0x35, 0x53, 0x52, 0x75, 0x62, 0x79, 0x20, 0x35,
		0x53, 0x53, 0x41, 0x4d, 0x42, 0x41, 0x36, 0x35, 0x53, 0x53, 0x61, 0x6d, 0x62, 0x61, 0x20, 0x36,
		0x35, 0x53, 0x5a, 0x61, 0x66, 0x69, 0x72, 0x6f, 0x57, 0x61, 0x76, 0x65, 0x20, 0x34, 0x2e, 0x30,
		0x20, 0x49, 0x49, 0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x2e, 0x30, 0x4d, 0x45, 0x47, 0x41, 0x37,
		0x4d, 0x65, 0x67, 0x61, 0x20, 0x37, 0x69, 0x51, 0x26, 0x54, 0x69, 0x52, 0x65, 0x70, 0x6c, 0x61,
		0x63, 0x65, 0x46, 0x72, 0x6f, 0x67, 0x20, 0x4f, 0x6e, 0x65, 0x69, 0x52, 0x6f, 0x62, 0x6f, 0x74,
		0x69, 0x52, 0x6f, 0x6c, 0x61, 0x44, 0x58, 0x37, 0x35, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x52,
		0x75, 0x6c, 0x75, 0x69, 0x53, 0x57, 0x41, 0x47, 0x41, 0x63, 0x74, 0x69, 0x76, 0x4b, 0x72, 0x6f,
		0x6e, 0x6f, 0x73, 0x4c, 0x79, 0x6e, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x4e, 0x65, 0x6d, 0x65, 0x73,
		0x69, 0x73, 0x69, 0x53, 0x61, 0x66, 0x65, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x24, 0x31,
		0x2e, 0x52, 0x47, 0x69, 0x53, 0x74, 0x61, 0x72, 0x69, 0x54, 0x65, 0x6c, 0x57, 0x36, 0x35, 0x30,
		0x32, 0x4c, 0x36, 0x35, 0x30, 0x33, 0x53, 0x31, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x35, 0x35,
		0x30, 0x35, 0x53, 0x32, 0x33, 0x41, 0x36, 0x36, 0x32, 0x4c, 0x4d, 0x41, 0x36, 0x30, 0x73, 0x41,
		0x36, 0x36, 0x32, 0x4c, 0x41, 0x36, 0x30, 0x57, 0x35, 0x35, 0x30, 0x34, 0x50, 0x33, 0x33, 0x57,
		0x35, 0x35, 0x30, 0x33, 0x57, 0x35, 0x30, 0x30, 0x32, 0x41, 0x35, 0x37, 0x31, 0x57, 0x41, 0x33,
		0x37, 0x41, 0x36, 0x33, 0x31, 0x4c, 0x41, 0x34, 0x39, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x35, 0x53, 0x36, 0x36, 0x32, 0x4c, 0x43, 0x4e, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x36, 0x36, 0x33, 0x4c, 0x53,
		0x31, 0x38, 0x53, 0x36, 0x36, 0x31, 0x57, 0x41, 0x35, 0x35, 0x31, 0x4c, 0x50, 0x31, 0x35, 0x50,
		0x35, 0x35, 0x32, 0x57, 0x50, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x35, 0x35, 0x31, 0x57,
		0x50, 0x31, 0x37, 0x57, 0x35, 0x30, 0x30, 0x33, 0x53, 0x33, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x4c, 0x35, 0x35, 0x30, 0x32, 0x41, 0x34, 0x34, 0x20, 0x41, 0x69, 0x72, 0x4c, 0x35, 0x35, 0x30,
		0x35, 0x41, 0x34, 0x37, 0x57, 0x35, 0x30, 0x30, 0x36, 0x58, 0x41, 0x35, 0x31, 0x30, 0x57, 0x41,
		0x31, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x36, 0x30, 0x30, 0x36, 0x41, 0x34, 0x38, 0x41,
		0x35, 0x37, 0x31, 0x4c, 0x41, 0x32, 0x36, 0x50, 0x36, 0x35, 0x31, 0x57, 0x50, 0x33, 0x37, 0x41,
		0x33, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x38, 0x31, 0x4c, 0x50, 0x33, 0x37, 0x20,
		0x50, 0x72, 0x6f, 0x57, 0x36, 0x35, 0x30, 0x31, 0x50, 0x33, 0x36, 0x50, 0x36, 0x36, 0x31, 0x57,
		0x50, 0x33, 0x38, 0x4c, 0x35, 0x30, 0x30, 0x37, 0x41, 0x32, 0x34, 0x41, 0x35, 0x31, 0x32, 0x57,
		0x41, 0x31, 0x38, 0x4c, 0x36, 0x30, 0x30, 0x33, 0x50, 0x41, 0x35, 0x35, 0x20, 0x4c, 0x54, 0x45,
		0x4c, 0x36, 0x30, 0x30, 0x32, 0x50, 0x41, 0x32, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x35, 0x30,
		0x30, 0x32, 0x50, 0x41, 0x32, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x35, 0x30, 0x30, 0x32, 0x41,
		0x32, 0x35, 0x41, 0x35, 0x30, 0x37, 0x4c, 0x53, 0x4c, 0x35, 0x35, 0x30, 0x33, 0x41, 0x34, 0x36,
		0x41, 0x36, 0x36, 0x31, 0x4c, 0x41, 0x34, 0x39, 0x57, 0x36, 0x30, 0x30, 0x34, 0x50, 0x41, 0x35,
		0x36, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x36, 0x36, 0x31, 0x57, 0x50, 0x41, 0x35, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x36, 0x36, 0x31, 0x57, 0x41, 0x36, 0x33, 0x31, 0x57, 0x41, 0x35, 0x38, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4c, 0x36, 0x30, 0x30, 0x34, 0x4c, 0x41, 0x43, 0x36, 0x30, 0x57, 0x34,
		0x30, 0x30, 0x31, 0x53, 0x56, 0x34, 0x31, 0x57, 0x34, 0x30, 0x30, 0x31, 0x41, 0x43, 0x31, 0x33,
		0x57, 0x34, 0x30, 0x30, 0x32, 0x41, 0x31, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x34, 0x30,
		0x30, 0x33, 0x41, 0x31, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x35, 0x36, 0x20, 0x4c, 0x54, 0x45,
		0x57, 0x36, 0x30, 0x30, 0x31, 0x50, 0x33, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x35, 0x30,
		0x30, 0x31, 0x50, 0x57, 0x36, 0x30, 0x30, 0x33, 0x41, 0x36, 0x31, 0x31, 0x57, 0x4c, 0x36, 0x30,
		0x30, 0x35, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x38, 0x32, 0x4c, 0x50, 0x33, 0x38, 0x20,
		0x50, 0x72, 0x6f, 0x50, 0x36, 0x35, 0x31, 0x4c, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x32,
		0x53, 0x4c, 0x36, 0x35, 0x30, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4c, 0x36, 0x35, 0x30, 0x32, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x53, 0x36, 0x36, 0x31, 0x4c, 0x47, 0x50, 0x31, 0x30, 0x58, 0x32, 0x30,
		0x31, 0x39, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x69, 0x74, 0x24, 0x31, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69,
		0x74, 0x65, 0x6c, 0x20, 0x69, 0x74, 0x31, 0x37, 0x30, 0x31, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x69, 0x74, 0x65, 0x6c, 0x20, 0x57, 0x37, 0x30, 0x30, 0x31, 0x4b,
		0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x31, 0x69, 0x74, 0x65, 0x6c, 0x20, 0x57, 0x37, 0x30, 0x30,
		0x32, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x20, 0x31, 0x69, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x24, 0x31, 0x41, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x69, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x69, 0x56,
		0x41, 0x4c, 0x61, 0x6d, 0x63, 0x79, 0x20, 0x24, 0x31, 0x69, 0x56, 0x69, 0x65, 0x77, 0x37, 0x34,
		0x34, 0x54, 0x50, 0x43, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x37, 0x34, 0x34, 0x54, 0x50, 0x43, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x69, 0x56, 0x6f, 0x6f, 0x4d, 0x69, 0x49, 0x6e, 0x6e, 0x65, 0x6c, 0x6f,
		0x5f, 0x31, 0x49, 0x6e, 0x6e, 0x65, 0x6c, 0x6f, 0x20, 0x31, 0x69, 0x56, 0x20, 0x35, 0x30, 0x35,
		0x4d, 0x65, 0x20, 0x31, 0x69, 0x32, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x69, 0x32, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x69, 0x32, 0x4d, 0x65, 0x20, 0x31, 0x2b, 0x4d, 0x65, 0x20, 0x24, 0x31, 0x69, 0x57,
		0x61, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x58, 0x54, 0x65, 0x63, 0x68, 0x69, 0x59, 0x6f, 0x75,
		0x69, 0x5a, 0x6f, 0x74, 0x72, 0x6f, 0x6e, 0x4d, 0x49, 0x37, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20,
		0x42, 0x65, 0x74, 0x61, 0x4d, 0x49, 0x37, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x54, 0x61, 0x62,
		0x69, 0x62, 0x6f, 0x77, 0x69, 0x6e, 0x69, 0x76, 0x76, 0x69, 0x69, 0x76, 0x76, 0x69, 0x20, 0x50,
		0x36, 0x30, 0x5f, 0x58, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x30, 0x2d, 0x58,
		0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x61,
		0x6e, 0x49, 0x54, 0x51, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6e, 0x4a, 0x6f, 0x79, 0x6e, 0x65,
		0x6f, 0x43, 0x6f, 0x72, 0x65, 0x4e, 0x31, 0x20, 0x47, 0x31, 0x45, 0x31, 0x2b, 0x45, 0x32, 0x6e,
		0x6f, 0x44, 0x52, 0x4f, 0x50, 0x4f, 0x55, 0x54, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4f, 0x6e, 0x65,
		0x74, 0x65, 0x58, 0x65, 0x74, 0x54, 0x4d, 0x2d, 0x39, 0x37, 0x34, 0x39, 0x58, 0x2d, 0x70, 0x61,
		0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x37, 0x2e, 0x31, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d,
		0x39, 0x37, 0x34, 0x36, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x37,
		0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x38, 0x30, 0x35, 0x31, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20,
		0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x38, 0x69, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x31, 0x30,
		0x35, 0x38, 0x58, 0x2d, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x54,
		0x4d, 0x2d, 0x38, 0x30, 0x34, 0x38, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x46, 0x6f, 0x72, 0x63,
		0x65, 0x20, 0x38, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x30, 0x35, 0x35, 0x48, 0x44, 0x4e,
		0x61, 0x76, 0x69, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x39, 0x37, 0x35, 0x38,
		0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x30,
		0x22, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x38, 0x2e, 0x31,
		0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x51, 0x55, 0x41, 0x44, 0x20, 0x31,
		0x30, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x31,
		0x30, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x51, 0x55, 0x41,
		0x44, 0x20, 0x37, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x20, 0x37, 0x2e, 0x32, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20,
		0x53, 0x54, 0x59, 0x4c, 0x45, 0x20, 0x38, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20,
		0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70,
		0x61, 0x64, 0x20, 0x48, 0x49, 0x54, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x48,
		0x69, 0x74, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x24, 0x31, 0x22, 0x54, 0x4d, 0x2d, 0x39, 0x37, 0x36, 0x37, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20,
		0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d,
		0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x37, 0x2e, 0x33,
		0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x30, 0x39, 0x39, 0x58, 0x2d, 0x70, 0x61, 0x64,
		0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x37, 0x2e, 0x34, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70,
		0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x37, 0x2e, 0x35, 0x22, 0x20, 0x33, 0x47, 0x58,
		0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x38, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47,
		0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22,
		0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x38, 0x35, 0x39, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20,
		0x4e, 0x41, 0x56, 0x49, 0x20, 0x38, 0x2e, 0x32, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37,
		0x30, 0x34, 0x39, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x61, 0x64, 0x20, 0x54, 0x4d, 0x2d, 0x37, 0x30,
		0x34, 0x39, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x38, 0x38, 0x37, 0x4e, 0x61, 0x76, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x54, 0x4d, 0x2d, 0x37, 0x38, 0x38, 0x37, 0x20, 0x33, 0x47, 0x54, 0x4d,
		0x2d, 0x38, 0x30, 0x36, 0x36, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x52, 0x61, 0x70, 0x69, 0x64,
		0x20, 0x38, 0x2e, 0x32, 0x22, 0x20, 0x34, 0x47, 0x54, 0x4d, 0x2d, 0x34, 0x35, 0x30, 0x33, 0x58,
		0x2d, 0x51, 0x75, 0x61, 0x64, 0x54, 0x4d, 0x2d, 0x35, 0x30, 0x30, 0x36, 0x58, 0x2d, 0x4c, 0x69,
		0x6e, 0x65, 0x54, 0x4d, 0x2d, 0x35, 0x30, 0x30, 0x37, 0x58, 0x2d, 0x53, 0x68, 0x69, 0x6e, 0x65,
		0x54, 0x4d, 0x5f, 0x35, 0x30, 0x31, 0x31, 0x58, 0x2d, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x50, 0x61,
		0x79, 0x20, 0x24, 0x31, 0x47, 0x50, 0x61, 0x79, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x20, 0x24, 0x31,
		0x47, 0x54, 0x4d, 0x2d, 0x35, 0x37, 0x30, 0x32, 0x50, 0x61, 0x79, 0x20, 0x35, 0x2e, 0x37, 0x22,
		0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x35, 0x37, 0x30, 0x33, 0x50, 0x61, 0x79, 0x20, 0x35, 0x2e,
		0x37, 0x22, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x4d, 0x2d, 0x35, 0x32, 0x30, 0x31, 0x54, 0x4d, 0x2d,
		0x34, 0x35, 0x31, 0x35, 0x58, 0x2d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x2d, 0x4d, 0x61, 0x78,
		0x69, 0x20, 0x32, 0x54, 0x4d, 0x2d, 0x34, 0x30, 0x37, 0x31, 0x58, 0x2d, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x54, 0x4d, 0x2d, 0x34, 0x39, 0x38, 0x32, 0x69, 0x58, 0x2d, 0x4d, 0x61, 0x78, 0x69, 0x69,
		0x58, 0x2d, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x4d, 0x2d, 0x35, 0x30, 0x31, 0x30, 0x58, 0x2d, 0x53,
		0x65, 0x6c, 0x66, 0x69, 0x65, 0x54, 0x4d, 0x2d, 0x34, 0x30, 0x38, 0x32, 0x52, 0x58, 0x2d, 0x44,
		0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x51, 0x75, 0x61, 0x64, 0x54, 0x4d, 0x2d, 0x35, 0x35, 0x30,
		0x33, 0x58, 0x2d, 0x4d, 0x61, 0x67, 0x65, 0x54, 0x4d, 0x2d, 0x35, 0x35, 0x30, 0x38, 0x58, 0x2d,
		0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x58, 0x2d, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x58, 0x2d, 0x50, 0x6c,
		0x75, 0x73, 0x58, 0x2d, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58,
		0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x58, 0x2d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x76, 0x2d, 0x6d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x58, 0x53, 0x20, 0x50, 0x72, 0x6f, 0xc3, 0xb6, 0x77, 0x6e, 0x46,
		0x75, 0x6e, 0x20, 0x24, 0x31, 0x46, 0x75, 0x6e, 0x20, 0x35, 0x20, 0x34, 0x47, 0x4f, 0x6e, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x75, 0x6e, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x34, 0x47, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x70,
		0x69, 0x72, 0x65, 0x20, 0x45, 0x35, 0x2d, 0x34, 0x32, 0x31, 0x47, 0x41, 0x73, 0x70, 0x69, 0x72,
		0x65, 0x20, 0x45, 0x35, 0x2d, 0x35, 0x31, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x4b, 0x35,
		0x30, 0x49, 0x4e, 0x4b, 0x35, 0x34, 0x4c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
		0x65, 0x72, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
		0x65, 0x72, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x5a, 0x65, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x46,
		0x6c, 0x69, 0x70, 0x58, 0x35, 0x35, 0x30, 0x4c, 0x42, 0x58, 0x35, 0x35, 0x33, 0x4d, 0x41, 0x58,
		0x35, 0x35, 0x35, 0x4c, 0x4e, 0x58, 0x35, 0x35, 0x36, 0x55, 0x51, 0x4b, 0x4c, 0x61, 0x74, 0x69,
		0x74, 0x75, 0x64, 0x65, 0x20, 0x45, 0x34, 0x33, 0x30, 0x30, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72,
		0x6f, 0x6e, 0x20, 0x33, 0x35, 0x34, 0x31, 0x58, 0x50, 0x53, 0x20, 0x31, 0x35, 0x20, 0x39, 0x35,
		0x33, 0x30, 0x58, 0x50, 0x53, 0x20, 0x31, 0x35, 0x20, 0x39, 0x35, 0x35, 0x30, 0x43, 0x6f, 0x6d,
		0x70, 0x61, 0x71, 0x20, 0x50, 0x72, 0x65, 0x73, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x43, 0x51, 0x36,
		0x31, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x43, 0x43, 0x6f, 0x6d,
		0x70, 0x61, 0x71, 0x20, 0x50, 0x72, 0x65, 0x73, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x43, 0x51, 0x36,
		0x31, 0x48, 0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x78, 0x32, 0x20,
		0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69,
		0x6f, 0x6e, 0x20, 0x78, 0x32, 0x48, 0x50, 0x20, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x20, 0x31,
		0x35, 0x2d, 0x62, 0x73, 0x30, 0x78, 0x78, 0x31, 0x35, 0x20, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70,
		0x20, 0x50, 0x43, 0x48, 0x50, 0x20, 0x45, 0x4e, 0x56, 0x59, 0x20, 0x78, 0x33, 0x36, 0x30, 0x20,
		0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x31, 0x35, 0x2d, 0x62,
		0x70, 0x30, 0x78, 0x78, 0x45, 0x4e, 0x56, 0x59, 0x20, 0x78, 0x33, 0x36, 0x30, 0x20, 0x43, 0x6f,
		0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x50, 0x43, 0x45, 0x6c, 0x69, 0x74,
		0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x48, 0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c,
		0x69, 0x6f, 0x6e, 0x20, 0x64, 0x76, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x43, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x64, 0x76, 0x36, 0x48,
		0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x62,
		0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x48, 0x50, 0x20, 0x53, 0x70,
		0x65, 0x63, 0x74, 0x72, 0x65, 0x20, 0x78, 0x33, 0x36, 0x30, 0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65,
		0x72, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x65, 0x20, 0x78, 0x33,
		0x36, 0x30, 0x48, 0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x6c,
		0x6c, 0x2d, 0x69, 0x6e, 0x2d, 0x4f, 0x6e, 0x65, 0x20, 0x32, 0x34, 0x2d, 0x72, 0x30, 0x78, 0x78,
		0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x34, 0x2d, 0x72, 0x30, 0x78, 0x78,
		0x20, 0x41, 0x6c, 0x6c, 0x2d, 0x69, 0x6e, 0x2d, 0x4f, 0x6e, 0x65, 0x20, 0x44, 0x65, 0x73, 0x6b,
		0x74, 0x6f, 0x70, 0x20, 0x50, 0x43, 0x32, 0x33, 0x2d, 0x66, 0x33, 0x36, 0x34, 0x50, 0x61, 0x76,
		0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x32, 0x33, 0x2d, 0x66, 0x33, 0x36, 0x34, 0x20, 0x41, 0x6c, 0x6c, 0x2d, 0x69, 0x6e, 0x2d,
		0x4f, 0x6e, 0x65, 0x20, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x20, 0x50, 0x43, 0x54, 0x68,
		0x69, 0x6e, 0x6b, 0x50, 0x61, 0x64, 0x20, 0x48, 0x65, 0x6c, 0x69, 0x78, 0x20, 0x33, 0x37, 0x30,
		0x32, 0x47, 0x35, 0x30, 0x2d, 0x38, 0x30, 0x49, 0x64, 0x65, 0x61, 0x70, 0x61, 0x64, 0x20, 0x33,
		0x31, 0x30, 0x2d, 0x31, 0x35, 0x49, 0x53, 0x4b, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x59,
		0x37, 0x32, 0x30, 0x53, 0x63, 0x68, 0x6e, 0x65, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65,
		0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x34, 0x22, 0x20, 0x43, 0x68, 0x65, 0x72, 0x72, 0x79, 0x20,
		0x54, 0x72, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20, 0x54, 0x48,
		0x2d, 0x33, 0x36, 0x30, 0x52, 0x31, 0x32, 0x2e, 0x33, 0x32, 0x43, 0x54, 0x57, 0x46, 0x42, 0x4d,
		0x44, 0x2f, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x69, 0x50, 0x6f, 0x64,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x31, 0x47, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x32, 0x47, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x33, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x34, 0x69, 0x50,
		0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x35, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x36, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x37, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x43, 0x6f, 0x77, 0x6f,
		0x6e, 0x46, 0x69, 0x69, 0x4f, 0x4d, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54,
		0x44, 0x4b, 0x75, 0x47, 0x6f, 0x75, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20,
		0x5a, 0x75, 0x6e, 0x65, 0x48, 0x44, 0x5a, 0x75, 0x6e, 0x65, 0x20, 0x48, 0x44, 0x53, 0x4f, 0x4e,
		0x4f, 0x53, 0x50, 0x6c, 0x61, 0x79, 0x3a, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x34, 0x2e, 0x30, 0x59, 0x50, 0x2d, 0x47, 0x37, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x35, 0x2e, 0x30,
		0x59, 0x50, 0x2d, 0x47, 0x53, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x65, 0x72, 0x20, 0x33, 0x2e, 0x36, 0x59, 0x50, 0x2d, 0x47, 0x49, 0x31, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x34, 0x2e, 0x32, 0x59, 0x50,
		0x2d, 0x47, 0x50, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65,
		0x72, 0x20, 0x35, 0x2e, 0x38, 0x59, 0x50, 0x2d, 0x47, 0x35, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x35, 0x30, 0x59, 0x50, 0x2d, 0x47, 0x42,
		0x37, 0x30, 0x44, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
		0x20, 0x37, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x68, 0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x67,
		0x53, 0x68, 0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x4d, 0x36, 0x53, 0x79, 0x6c, 0x76, 0x61,
		0x6e, 0x69, 0x61, 0x57, 0x69, 0x7a, 0x7a, 0x41, 0x4b, 0x49, 0x52, 0x41, 0x41, 0x4b, 0x49, 0x52,
		0x41, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x41, 0x4d, 0x43, 0x56, 0x20, 0x53, 0x68, 0x65, 0x6c,
		0x6c, 0x42, 0x42, 0x4b, 0x20, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x44, 0x45, 0x58, 0x50, 0x20, 0x53,
		0x68, 0x65, 0x6c, 0x6c, 0x44, 0x69, 0x67, 0x6d, 0x61, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x45,
		0x43, 0x4f, 0x4e, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x48, 0x69, 0x20, 0x53, 0x68, 0x65, 0x6c,
		0x6c, 0x4a, 0x56, 0x43, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4b, 0x76, 0x61, 0x6e, 0x74, 0x4b,
		0x76, 0x61, 0x6e, 0x74, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x62, 0x65, 0x6e, 0x4c,
		0x65, 0x62, 0x65, 0x6e, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x66, 0x66, 0x20, 0x53,
		0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x6f, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x6f, 0x76, 0x69, 0x65, 0x77,
		0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x55, 0x4d, 0x55, 0x53, 0x20, 0x53, 0x68, 0x65, 0x6c,
		0x6c, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4e, 0x6f,
		0x76, 0x65, 0x78, 0x20, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x77, 0x69, 0x6e,
		0x64, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x53, 0x75, 0x70, 0x72, 0x61, 0x20, 0x53, 0x68, 0x65,
		0x6c, 0x6c, 0x54, 0x43, 0x4c, 0x2f, 0x54, 0x43, 0x4c, 0x2d, 0x54, 0x65, 0x6c, 0x65, 0x66, 0x75,
		0x6e, 0x6b, 0x65, 0x6e, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x59, 0x75, 0x6e, 0x6f, 0x20, 0x53,
		0x68, 0x65, 0x6c, 0x6c, 0x46, 0x53, 0x2d, 0x41, 0x52, 0x53, 0x2d, 0x30, 0x31, 0x42, 0x41, 0x69,
		0x72, 0x74, 0x69, 0x65, 0x73, 0x41, 0x6c, 0x74, 0x65, 0x63, 0x68, 0x20, 0x55, 0x45, 0x43, 0x41,
		0x54, 0x56, 0x49, 0x4f, 0x35, 0x35, 0x44, 0x31, 0x36, 0x32, 0x30, 0x42, 0x61, 0x6e, 0x67, 0x4f,
		0x6c, 0x75, 0x66, 0x73, 0x65, 0x6e, 0x42, 0x61, 0x6e, 0x67, 0x6f, 0x6c, 0x75, 0x66, 0x73, 0x65,
		0x6e, 0x42, 0x65, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x43, 0x2d, 0x36, 0x35, 0x43,
		0x55, 0x47, 0x38, 0x30, 0x35, 0x32, 0x45, 0x43, 0x72, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x43, 0x4e,
		0x56, 0x30, 0x30, 0x31, 0x44, 0x4d, 0x4d, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x62, 0x6f, 0x78, 0x45,
		0x4c, 0x45, 0x43, 0x54, 0x52, 0x4f, 0x4e, 0x49, 0x41, 0x46, 0x26, 0x55, 0x47, 0x6f, 0x47, 0x45,
		0x4e, 0x47, 0x37, 0x4c, 0x45, 0x35, 0x35, 0x58, 0x37, 0x30, 0x30, 0x30, 0x55, 0x35, 0x30, 0x41,
		0x44, 0x45, 0x56, 0x54, 0x4f, 0x4f, 0x4c, 0x35, 0x30, 0x41, 0x36, 0x38, 0x33, 0x46, 0x45, 0x56,
		0x53, 0x35, 0x35, 0x41, 0x36, 0x31, 0x30, 0x30, 0x45, 0x45, 0x35, 0x35, 0x55, 0x36, 0x32, 0x51,
		0x47, 0x41, 0x56, 0x54, 0x35, 0x30, 0x41, 0x36, 0x35, 0x30, 0x32, 0x45, 0x41, 0x4d, 0x49, 0x43,
		0x41, 0x4c, 0x49, 0x44, 0x56, 0x42, 0x36, 0x38, 0x38, 0x36, 0x34, 0x39, 0x44, 0x32, 0x39, 0x30,
		0x30, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x48, 0x4d, 0x53, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x4d,
		0x53, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x53, 0x46, 0x56, 0x50, 0x34, 0x30, 0x30, 0x30, 0x54, 0x46,
		0x56, 0x50, 0x2d, 0x34, 0x30, 0x30, 0x30, 0x54, 0x48, 0x47, 0x53, 0x31, 0x30, 0x30, 0x30, 0x53,
		0x48, 0x47, 0x53, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x44, 0x52, 0x31, 0x30, 0x30, 0x30,
		0x53, 0x48, 0x44, 0x52, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x44, 0x52, 0x34, 0x30, 0x30,
		0x30, 0x54, 0x48, 0x44, 0x52, 0x2d, 0x34, 0x30, 0x30, 0x30, 0x54, 0x49, 0x6b, 0x65, 0x61, 0x49,
		0x6e, 0x74, 0x65, 0x6b, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x6f, 0x34, 0x4b, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x4b, 0x55, 0x42, 0x4f, 0x33, 0x32, 0x44, 0x31, 0x36, 0x32, 0x30, 0x4c,
		0x47, 0x45, 0x58, 0x55, 0x34, 0x33, 0x57, 0x54, 0x31, 0x38, 0x30, 0x4e, 0x34, 0x33, 0x4c, 0x4a,
		0x36, 0x31, 0x34, 0x56, 0x2d, 0x5a, 0x41, 0x35, 0x35, 0x53, 0x4b, 0x38, 0x35, 0x30, 0x56, 0x2d,
		0x5a, 0x41, 0x4b, 0x45, 0x59, 0x30, 0x30, 0x30, 0x30, 0x32, 0x31, 0x33, 0x46, 0x31, 0x7a, 0x4b,
		0x45, 0x59, 0x30, 0x30, 0x30, 0x30, 0x32, 0x31, 0x33, 0x46, 0x4b, 0x45, 0x59, 0x30, 0x30, 0x30,
		0x30, 0x30, 0x30, 0x24, 0x31, 0x4c, 0x4d, 0x32, 0x31, 0x55, 0x33, 0x32, 0x4c, 0x4d, 0x4c, 0x61,
		0x75, 0x72, 0x75, 0x73, 0x4c, 0x69, 0x6e, 0x73, 0x61, 0x72, 0x4c, 0x6f, 0x65, 0x77, 0x65, 0x4d,
		0x53, 0x74, 0x61, 0x72, 0x24, 0x31, 0x4b, 0x54, 0x56, 0x31, 0x38, 0x24, 0x31, 0x4b, 0x20, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x4d, 0x61, 0x6e, 0x68, 0x61, 0x74, 0x74,
		0x61, 0x6e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x65, 0x6b, 0x4d, 0x65, 0x74, 0x7a, 0x4d, 0x49,
		0x52, 0x41, 0x59, 0x4c, 0x45, 0x44, 0x4d, 0x2d, 0x33, 0x32, 0x32, 0x4e, 0x49, 0x50, 0x4e, 0x6f,
		0x72, 0x64, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x50, 0x45, 0x41, 0x51, 0x50, 0x52, 0x4f, 0x46, 0x69,
		0x4c, 0x4f, 0x56, 0x49, 0x45, 0x52, 0x41, 0x20, 0x28, 0x24, 0x31, 0x29, 0x44, 0x49, 0x47, 0x41,
		0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x28, 0x24, 0x31, 0x29,
		0x53, 0x43, 0x42, 0x43, 0x53, 0x43, 0x42, 0x43, 0x35, 0x38, 0x36, 0x34, 0x33, 0x44, 0x31, 0x38,
		0x35, 0x30, 0x53, 0x45, 0x47, 0x53, 0x57, 0x54, 0x56, 0x53, 0x4b, 0x57, 0x45, 0x32, 0x30, 0x45,
		0x32, 0x31, 0x53, 0x61, 0x62, 0x61, 0x53, 0x61, 0x6c, 0x6f, 0x72, 0x61, 0x24, 0x32, 0x4d, 0x61,
		0x70, 0x6c, 0x65, 0x5f, 0x32, 0x30, 0x31, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x53, 0x65, 0x6c, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x4c, 0x43, 0x2d, 0x24, 0x31, 0x42, 0x4c, 0x41, 0x2d, 0x34, 0x33, 0x53, 0x6b, 0x79, 0x5f,
		0x77, 0x6f, 0x72, 0x74, 0x68, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x45, 0x6c, 0x65, 0x63, 0x74,
		0x72, 0x6f, 0x6e, 0x69, 0x63, 0x4b, 0x44, 0x4c, 0x2d, 0x47, 0x52, 0x31, 0x4b, 0x44, 0x4c, 0x2d,
		0x47, 0x4e, 0x24, 0x31, 0x42, 0x52, 0x41, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31, 0x54, 0x4f, 0x4b,
		0x59, 0x4f, 0x54, 0x4f, 0x4b, 0x54, 0x43, 0x4c, 0x45, 0x44, 0x33, 0x32, 0x53, 0x54, 0x65, 0x63,
		0x68, 0x6e, 0x69, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x75, 0x7a, 0x77, 0x34, 0x30, 0x35, 0x34, 0x74,
		0x74, 0x67, 0x55, 0x5a, 0x57, 0x34, 0x30, 0x35, 0x34, 0x54, 0x54, 0x47, 0x54, 0x65, 0x63, 0x68,
		0x6e, 0x69, 0x6b, 0x61, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x24,
		0x31, 0x20, 0x32, 0x38, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x33, 0x32, 0x2e, 0x30, 0x22, 0x24,
		0x31, 0x20, 0x34, 0x33, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x34, 0x30, 0x2e, 0x30, 0x22, 0x24,
		0x31, 0x20, 0x34, 0x39, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x35, 0x35, 0x2e, 0x30, 0x22, 0x34,
		0x30, 0x46, 0x42, 0x35, 0x34, 0x32, 0x36, 0x34, 0x30, 0x4c, 0x32, 0x36, 0x30, 0x30, 0x56, 0x4f,
		0x58, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x77, 0x65, 0x62, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x57, 0x65,
		0x62, 0x20, 0x54, 0x56, 0x57, 0x45, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x54, 0x4f, 0x4e, 0x58, 0x2e,
		0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	}
)
