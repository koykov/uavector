// Code generated by "uaxplc -module=os -input=~/dev/php/device-detector/regexes/oss.yml". DO NOT EDIT.

package uaxpl

import (
	"regexp"
)

var (
	__or_os = []or{
		or{ne: 0x00000008, ni: -0x1, re: 0x0000, si: 0x00000000, vi: -0x1, vs: 0x80000000a, vr: 0x00000000},
		or{ne: 0xa00000013, ni: -0x1, re: 0x0001, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x130000001f, ni: -0x1, re: 0x0002, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1f00000027, ni: -0x1, re: -0x0001, si: 0x2700000038, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x3800000046, ni: -0x1, re: 0x0003, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x4600000053, ni: -0x1, re: -0x0001, si: 0x4600000053, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x5300000059, ni: -0x1, re: 0x0004, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x5300000059, ni: -0x1, re: 0x0005, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x5900000061, ni: -0x1, re: 0x0006, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6100000067, ni: -0x1, re: 0x0007, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6700000074, ni: -0x1, re: -0x0001, si: 0x740000007f, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x7f00000085, ni: -0x1, re: 0x0008, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x850000008d, ni: -0x1, re: 0x0009, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x8d00000092, ni: -0x1, re: 0x000a, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x9200000097, ni: -0x1, re: 0x000b, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x97000000a4, ni: -0x1, re: 0x000c, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x97000000a4, ni: -0x1, re: 0x000d, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x97000000a4, ni: -0x1, re: 0x000e, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0xa4000000ae, ni: -0x1, re: 0x000f, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0xae000000bc, ni: -0x1, re: 0x0010, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0xbc000000c6, ni: -0x1, re: 0x0011, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0xbc000000c6, ni: -0x1, re: 0x0012, si: 0x00000000, vi: -0x1, vs: 0xc6000000c9, vr: 0x00000000},
		or{ne: 0xc9000000d4, ni: -0x1, re: 0x0013, si: 0x00000000, vi: -0x1, vs: 0xd4000000d6, vr: 0x00000000},
		or{ne: 0xd6000000db, ni: -0x1, re: 0x0014, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0xdb000000e4, ni: -0x1, re: 0x0015, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0xe4000000ed, ni: -0x1, re: 0x0016, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0xed000000f5, ni: -0x1, re: 0x0017, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0xf500000100, ni: -0x1, re: 0x0018, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1000000010a, ni: -0x1, re: 0x0019, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x10a00000111, ni: -0x1, re: 0x001a, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x10a00000111, ni: -0x1, re: 0x001b, si: 0x00000000, vi: -0x1, vs: 0x11100000112, vr: 0x00000000},
		or{ne: 0x10a00000111, ni: -0x1, re: -0x0001, si: 0x1120000011a, vi: -0x1, vs: 0x11a0000011b, vr: 0x00000000},
		or{ne: 0x11b00000121, ni: -0x1, re: -0x0001, si: 0x11b00000121, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x12100000129, ni: -0x1, re: 0x001c, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000003},
		or{ne: 0x13e00000145, ni: -0x1, re: 0x001e, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1450000014f, ni: -0x1, re: 0x001f, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1450000014f, ni: -0x1, re: 0x0020, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x14f00000156, ni: -0x1, re: -0x0001, si: 0x15600000169, vi: -0x1, vs: 0x11100000112, vr: 0x00000000},
		or{ne: 0x14f00000156, ni: -0x1, re: 0x0021, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x14f00000156, ni: -0x1, re: 0x0022, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x14f00000156, ni: -0x1, re: 0x0023, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x14f00000156, ni: -0x1, re: 0x0024, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x14f00000156, ni: -0x1, re: 0x0025, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x14f00000156, ni: -0x1, re: 0x0026, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x14f00000156, ni: -0x1, re: 0x0027, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x14f00000156, ni: -0x1, re: 0x0028, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x14f00000156, ni: -0x1, re: 0x0029, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x14f00000156, ni: -0x1, re: 0x002a, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x14f00000156, ni: -0x1, re: 0x002b, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x14f00000156, ni: -0x1, re: 0x002c, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x14f00000156, ni: -0x1, re: 0x002d, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x14f00000156, ni: -0x1, re: 0x002e, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x16900000174, ni: -0x1, re: 0x002f, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1740000017b, ni: -0x1, re: 0x0030, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1740000017b, ni: -0x1, re: 0x0031, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x17b00000182, ni: -0x1, re: 0x0032, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1820000018f, ni: -0x1, re: 0x0033, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1820000018f, ni: -0x1, re: 0x0034, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x18f00000192, ni: -0x1, re: 0x0035, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1920000019a, ni: -0x1, re: -0x0001, si: 0x1920000019a, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x19a000001a3, ni: -0x1, re: -0x0001, si: 0x19a000001a3, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1a3000001aa, ni: -0x1, re: -0x0001, si: 0x1aa000001bb, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1bb000001c2, ni: -0x1, re: 0x0036, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1c2000001c8, ni: -0x1, re: 0x0037, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1c8000001d7, ni: -0x1, re: -0x0001, si: 0x1c8000001d7, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1d7000001dd, ni: -0x1, re: 0x0038, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1dd000001e3, ni: -0x1, re: -0x0001, si: 0x1e3000001eb, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1eb000001f2, ni: -0x1, re: -0x0001, si: 0x1f2000001ff, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1ff00000206, ni: -0x1, re: 0x0039, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1ff00000206, ni: -0x1, re: 0x003a, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x1ff00000206, ni: -0x1, re: 0x003b, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2060000020e, ni: -0x1, re: -0x0001, si: 0x20e00000216, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2160000021e, ni: -0x1, re: 0x003c, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x21e00000229, ni: -0x1, re: 0x003d, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x22900000232, ni: -0x1, re: 0x003e, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2320000023b, ni: -0x1, re: 0x003f, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x23b00000240, ni: -0x1, re: 0x0040, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x24000000246, ni: -0x1, re: 0x0041, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2460000024b, ni: -0x1, re: -0x0001, si: 0x2460000024b, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x24b00000255, ni: -0x1, re: 0x0042, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x25500000260, ni: -0x1, re: 0x0043, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2600000026d, ni: -0x1, re: 0x0044, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x26d00000273, ni: -0x1, re: 0x0045, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x26d00000273, ni: -0x1, re: 0x0046, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x00000000, ni: 0x1, re: 0x0047, si: 0x00000000, vi: 0x2, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x27300000279, ni: -0x1, re: 0x0048, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x00000000, ni: 0x1, re: 0x0049, si: 0x00000000, vi: 0x2, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x27900000280, ni: -0x1, re: 0x004a, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x28000000284, ni: -0x1, re: 0x004b, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x28400000289, ni: -0x1, re: 0x004c, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x30000000b},
		or{ne: 0x29100000297, ni: -0x1, re: 0x0054, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x29100000297, ni: -0x1, re: 0x0055, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2970000029e, ni: -0x1, re: 0x0056, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x0057, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x0058, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x0059, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x005a, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x005b, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x005c, si: 0x00000000, vi: -0x1, vs: 0xd4000000d6, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x005d, si: 0x00000000, vi: -0x1, vs: 0xd4000000d6, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x005e, si: 0x00000000, vi: -0x1, vs: 0xc6000000c9, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x005f, si: 0x00000000, vi: -0x1, vs: 0x2a5000002a6, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x0060, si: 0x00000000, vi: -0x1, vs: 0x11a0000011b, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x0061, si: 0x00000000, vi: -0x1, vs: 0x2a6000002ab, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x0062, si: 0x00000000, vi: -0x1, vs: 0x2ab000002b6, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x0063, si: 0x00000000, vi: -0x1, vs: 0x2b6000002b8, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x0064, si: 0x00000000, vi: -0x1, vs: 0x2b8000002bc, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x0065, si: 0x00000000, vi: -0x1, vs: 0x2bc000002be, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x0066, si: 0x00000000, vi: -0x1, vs: 0x2be000002c0, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x0067, si: 0x00000000, vi: -0x1, vs: 0x2c0000002c2, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x0068, si: 0x00000000, vi: -0x1, vs: 0x2c2000002c4, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x0069, si: 0x00000000, vi: -0x1, vs: 0x2c4000002c7, vr: 0x00000000},
		or{ne: 0x29e000002a5, ni: -0x1, re: 0x006a, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2c7000002cf, ni: -0x1, re: -0x0001, si: 0x2cf000002d4, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2d4000002d8, ni: -0x1, re: 0x006b, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2d4000002d8, ni: -0x1, re: 0x006c, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2d8000002df, ni: -0x1, re: 0x006d, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2df000002e5, ni: -0x1, re: 0x006e, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2df000002e5, ni: -0x1, re: 0x006f, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2df000002e5, ni: -0x1, re: 0x0070, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2df000002e5, ni: -0x1, re: 0x0071, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2df000002e5, ni: -0x1, re: 0x0072, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2df000002e5, ni: -0x1, re: 0x0073, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x0074, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x0075, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x0076, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x0077, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x0078, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0xb00000047},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00b0, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00b1, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00b2, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00b3, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00b4, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00b5, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00b6, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00b7, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00b8, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00b9, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00ba, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00bb, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00bc, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00bd, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00be, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00bf, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00c0, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00c1, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2e5000002e8, ni: -0x1, re: 0x00c2, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x3ff00000402, ni: -0x1, re: 0x00c3, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x4700000090},
		or{ne: 0x3ff00000402, ni: -0x1, re: 0x010c, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x3ff00000402, ni: -0x1, re: 0x010d, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x3ff00000402, ni: -0x1, re: 0x010e, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x3ff00000402, ni: -0x1, re: 0x010f, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x3ff00000402, ni: -0x1, re: 0x0110, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x3ff00000402, ni: -0x1, re: 0x0111, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x58a00000591, ni: -0x1, re: 0x0112, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x5910000059a, ni: -0x1, re: 0x0113, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x59a000005a1, ni: -0x1, re: -0x0001, si: 0x59a000005a1, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x5a1000005ae, ni: -0x1, re: 0x0114, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x5ae000005c2, ni: -0x1, re: 0x0115, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x5ae000005c2, ni: -0x1, re: 0x0116, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x5a1000005ae, ni: -0x1, re: -0x0001, si: 0x5c2000005cc, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x5a1000005ae, ni: -0x1, re: -0x0001, si: 0x5cc000005d0, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x5d0000005d4, ni: -0x1, re: -0x0001, si: 0x5d0000005d4, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x5d4000005dd, ni: -0x1, re: 0x0117, si: 0x00000000, vi: -0x1, vs: 0x5dd000005e1, vr: 0x00000000},
		or{ne: 0x5d4000005dd, ni: -0x1, re: 0x0118, si: 0x00000000, vi: -0x1, vs: 0x5e1000005e6, vr: 0x00000000},
		or{ne: 0x5d4000005dd, ni: -0x1, re: -0x0001, si: 0x5e6000005ef, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x5ef00000603, ni: -0x1, re: 0x0119, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x60300000617, ni: -0x1, re: -0x0001, si: 0x6170000061f, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x61f00000629, ni: -0x1, re: 0x011a, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6290000062e, ni: -0x1, re: 0x011b, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x61f00000629, ni: -0x1, re: 0x011c, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x62e00000635, ni: -0x1, re: -0x0001, si: 0x6350000063a, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x63a00000644, ni: -0x1, re: 0x011d, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6440000064b, ni: -0x1, re: 0x011e, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x64b00000652, ni: -0x1, re: 0x011f, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x65200000656, ni: -0x1, re: 0x0120, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x65600000659, ni: -0x1, re: 0x0121, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6590000065d, ni: -0x1, re: 0x0122, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x65d00000666, ni: -0x1, re: 0x0123, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x2d4000002d8, ni: -0x1, re: 0x0124, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6660000066b, ni: -0x1, re: 0x0125, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x66b00000672, ni: -0x1, re: 0x0126, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x67200000675, ni: -0x1, re: 0x0127, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6750000067a, ni: -0x1, re: 0x0128, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x13e00000145, ni: -0x1, re: 0x0129, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x67a00000680, ni: -0x1, re: 0x012a, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x68000000687, ni: -0x1, re: 0x012b, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x68700000690, ni: -0x1, re: 0x012c, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x69000000698, ni: -0x1, re: 0x012d, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6980000069c, ni: -0x1, re: 0x012e, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x69c000006a0, ni: -0x1, re: 0x012f, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6a0000006a8, ni: -0x1, re: 0x0130, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6a8000006b3, ni: -0x1, re: 0x0131, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6a8000006b3, ni: -0x1, re: 0x0132, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6b3000006b7, ni: -0x1, re: 0x0133, si: 0x00000000, vi: -0x1, vs: 0x6b7000006ba, vr: 0x00000000},
		or{ne: 0x6ba000006c9, ni: -0x1, re: 0x0134, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6c9000006dd, ni: -0x1, re: 0x0135, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6dd000006e1, ni: -0x1, re: -0x0001, si: 0x6dd000006e1, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6e1000006ea, ni: -0x1, re: 0x0136, si: 0x00000000, vi: 0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6e1000006ea, ni: -0x1, re: 0x0137, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
		or{ne: 0x6ea000006f1, ni: -0x1, re: 0x0138, si: 0x00000000, vi: -0x1, vs: 0x00000000, vr: 0x00000000},
	}
	__or_ov = []ov{
		ov{re: -0x0001, si: 0x12900000132, vi: -0x1, vs: 0x13200000133},
		ov{re: 0x001d, si: 0x00000000, vi: -0x1, vs: 0x13300000134},
		ov{re: -0x0001, si: 0x1340000013d, vi: -0x1, vs: 0x13d0000013e},
		ov{re: 0x004d, si: 0x00000000, vi: 0x1, vs: 0x00000000},
		ov{re: 0x004e, si: 0x00000000, vi: -0x1, vs: 0x11100000112},
		ov{re: 0x004f, si: 0x00000000, vi: -0x1, vs: 0x2890000028a},
		ov{re: 0x0050, si: 0x00000000, vi: -0x1, vs: 0x28a0000028b},
		ov{re: 0x0051, si: 0x00000000, vi: -0x1, vs: 0x13d0000013e},
		ov{re: -0x0001, si: 0x28b00000291, vi: -0x1, vs: 0x13200000133},
		ov{re: 0x0052, si: 0x00000000, vi: -0x1, vs: 0x13300000134},
		ov{re: 0x0053, si: 0x00000000, vi: -0x1, vs: 0x13200000133},
		ov{re: 0x0079, si: 0x00000000, vi: -0x1, vs: 0x2e8000002ec},
		ov{re: 0x007a, si: 0x00000000, vi: -0x1, vs: 0x2ec000002f0},
		ov{re: 0x007b, si: 0x00000000, vi: -0x1, vs: 0x2f0000002f4},
		ov{re: 0x007c, si: 0x00000000, vi: -0x1, vs: 0x2f4000002f8},
		ov{re: 0x007d, si: 0x00000000, vi: -0x1, vs: 0x2f8000002fc},
		ov{re: 0x007e, si: 0x00000000, vi: -0x1, vs: 0x2fc00000300},
		ov{re: 0x007f, si: 0x00000000, vi: -0x1, vs: 0x30000000304},
		ov{re: 0x0080, si: 0x00000000, vi: -0x1, vs: 0x30400000308},
		ov{re: 0x0081, si: 0x00000000, vi: -0x1, vs: 0x3080000030c},
		ov{re: 0x0082, si: 0x00000000, vi: -0x1, vs: 0x30c00000310},
		ov{re: 0x0083, si: 0x00000000, vi: -0x1, vs: 0x31000000314},
		ov{re: 0x0084, si: 0x00000000, vi: -0x1, vs: 0x31400000318},
		ov{re: 0x0085, si: 0x00000000, vi: -0x1, vs: 0x3180000031c},
		ov{re: 0x0086, si: 0x00000000, vi: -0x1, vs: 0x31c00000320},
		ov{re: 0x0087, si: 0x00000000, vi: -0x1, vs: 0x32000000324},
		ov{re: 0x0088, si: 0x00000000, vi: -0x1, vs: 0x3240000032a},
		ov{re: 0x0089, si: 0x00000000, vi: -0x1, vs: 0x32a0000032e},
		ov{re: 0x008a, si: 0x00000000, vi: -0x1, vs: 0x32e00000332},
		ov{re: 0x008b, si: 0x00000000, vi: -0x1, vs: 0x33200000336},
		ov{re: 0x008c, si: 0x00000000, vi: -0x1, vs: 0x3360000033a},
		ov{re: 0x008d, si: 0x00000000, vi: -0x1, vs: 0x33a0000033e},
		ov{re: 0x008e, si: 0x00000000, vi: -0x1, vs: 0x33e00000342},
		ov{re: 0x008f, si: 0x00000000, vi: -0x1, vs: 0x34200000346},
		ov{re: 0x0090, si: 0x00000000, vi: -0x1, vs: 0x3460000034c},
		ov{re: 0x0091, si: 0x00000000, vi: -0x1, vs: 0x34c00000350},
		ov{re: 0x0092, si: 0x00000000, vi: -0x1, vs: 0x35000000354},
		ov{re: 0x0093, si: 0x00000000, vi: -0x1, vs: 0x3540000035a},
		ov{re: 0x0094, si: 0x00000000, vi: -0x1, vs: 0x35a0000035e},
		ov{re: -0x0001, si: 0x35e0000036b, vi: -0x1, vs: 0x36b0000036f},
		ov{re: -0x0001, si: 0x36f0000037c, vi: -0x1, vs: 0x37c00000380},
		ov{re: -0x0001, si: 0x3800000038d, vi: -0x1, vs: 0x38d00000391},
		ov{re: 0x0095, si: 0x00000000, vi: -0x1, vs: 0x38d00000391},
		ov{re: 0x0096, si: 0x00000000, vi: -0x1, vs: 0x39100000395},
		ov{re: 0x0097, si: 0x00000000, vi: -0x1, vs: 0x39500000399},
		ov{re: 0x0098, si: 0x00000000, vi: -0x1, vs: 0x3990000039d},
		ov{re: -0x0001, si: 0x39d000003aa, vi: -0x1, vs: 0xd4000000d6},
		ov{re: 0x0099, si: 0x00000000, vi: -0x1, vs: 0x3aa000003af},
		ov{re: 0x009a, si: 0x00000000, vi: -0x1, vs: 0x3af000003b4},
		ov{re: 0x009b, si: 0x00000000, vi: -0x1, vs: 0x3b4000003b7},
		ov{re: 0x009c, si: 0x00000000, vi: -0x1, vs: 0x3b7000003ba},
		ov{re: 0x009d, si: 0x00000000, vi: -0x1, vs: 0x3ba000003bd},
		ov{re: 0x009e, si: 0x00000000, vi: -0x1, vs: 0x3bd000003c0},
		ov{re: 0x009f, si: 0x00000000, vi: -0x1, vs: 0x3c0000003c5},
		ov{re: 0x00a0, si: 0x00000000, vi: -0x1, vs: 0x3c5000003c8},
		ov{re: 0x00a1, si: 0x00000000, vi: -0x1, vs: 0x3c8000003cb},
		ov{re: 0x00a2, si: 0x00000000, vi: -0x1, vs: 0x3cb000003ce},
		ov{re: 0x00a3, si: 0x00000000, vi: -0x1, vs: 0xc6000000c9},
		ov{re: 0x00a4, si: 0x00000000, vi: -0x1, vs: 0x3ce000003d1},
		ov{re: 0x00a5, si: 0x00000000, vi: -0x1, vs: 0x3d1000003d4},
		ov{re: 0x00a6, si: 0x00000000, vi: -0x1, vs: 0x3d4000003d7},
		ov{re: 0x00a7, si: 0x00000000, vi: -0x1, vs: 0x3d7000003da},
		ov{re: 0x00a8, si: 0x00000000, vi: -0x1, vs: 0x3da000003dd},
		ov{re: 0x00a9, si: 0x00000000, vi: -0x1, vs: 0x3dd000003e0},
		ov{re: 0x00aa, si: 0x00000000, vi: -0x1, vs: 0x3e0000003e3},
		ov{re: 0x00ab, si: 0x00000000, vi: -0x1, vs: 0x3e3000003e6},
		ov{re: 0x00ac, si: 0x00000000, vi: -0x1, vs: 0x3e6000003e9},
		ov{re: 0x00ad, si: 0x00000000, vi: -0x1, vs: 0x3e9000003ec},
		ov{re: 0x00ae, si: 0x00000000, vi: -0x1, vs: 0x3ec000003ef},
		ov{re: 0x00af, si: 0x00000000, vi: -0x1, vs: 0x3ef000003f2},
		ov{re: -0x0001, si: 0x3f2000003ff, vi: -0x1, vs: 0x2c4000002c7},
		ov{re: 0x00c4, si: 0x00000000, vi: -0x1, vs: 0x3360000033a},
		ov{re: 0x00c5, si: 0x00000000, vi: -0x1, vs: 0x33a0000033e},
		ov{re: 0x00c6, si: 0x00000000, vi: -0x1, vs: 0x33e00000342},
		ov{re: 0x00c7, si: 0x00000000, vi: -0x1, vs: 0x40200000408},
		ov{re: 0x00c8, si: 0x00000000, vi: -0x1, vs: 0x34200000346},
		ov{re: 0x00c9, si: 0x00000000, vi: -0x1, vs: 0x4080000040c},
		ov{re: 0x00ca, si: 0x00000000, vi: -0x1, vs: 0x34c00000350},
		ov{re: 0x00cb, si: 0x00000000, vi: -0x1, vs: 0x35000000354},
		ov{re: 0x00cc, si: 0x00000000, vi: -0x1, vs: 0x35a0000035e},
		ov{re: 0x00cd, si: 0x00000000, vi: -0x1, vs: 0x36b0000036f},
		ov{re: 0x00ce, si: 0x00000000, vi: -0x1, vs: 0x37c00000380},
		ov{re: 0x00cf, si: 0x00000000, vi: -0x1, vs: 0x40c00000413},
		ov{re: 0x00d0, si: 0x00000000, vi: -0x1, vs: 0x4130000041a},
		ov{re: 0x00d1, si: 0x00000000, vi: -0x1, vs: 0x41a00000421},
		ov{re: 0x00d2, si: 0x00000000, vi: -0x1, vs: 0x42100000428},
		ov{re: 0x00d3, si: 0x00000000, vi: -0x1, vs: 0x4280000042f},
		ov{re: 0x00d4, si: 0x00000000, vi: -0x1, vs: 0x42f00000434},
		ov{re: 0x00d5, si: 0x00000000, vi: -0x1, vs: 0x43400000439},
		ov{re: 0x00d6, si: 0x00000000, vi: -0x1, vs: 0x43900000440},
		ov{re: 0x00d7, si: 0x00000000, vi: -0x1, vs: 0x44000000447},
		ov{re: 0x00d8, si: 0x00000000, vi: -0x1, vs: 0x4470000044e},
		ov{re: 0x00d9, si: 0x00000000, vi: -0x1, vs: 0x43400000439},
		ov{re: 0x00da, si: 0x00000000, vi: -0x1, vs: 0x44e00000455},
		ov{re: 0x00db, si: 0x00000000, vi: -0x1, vs: 0x4550000045c},
		ov{re: 0x00dc, si: 0x00000000, vi: -0x1, vs: 0x45c00000463},
		ov{re: 0x00dd, si: 0x00000000, vi: -0x1, vs: 0x4630000046a},
		ov{re: 0x00de, si: 0x00000000, vi: -0x1, vs: 0x46a00000471},
		ov{re: 0x00df, si: 0x00000000, vi: -0x1, vs: 0x47100000478},
		ov{re: 0x00e0, si: 0x00000000, vi: -0x1, vs: 0x4780000047d},
		ov{re: 0x00e1, si: 0x00000000, vi: -0x1, vs: 0x47d00000484},
		ov{re: 0x00e2, si: 0x00000000, vi: -0x1, vs: 0x4840000048b},
		ov{re: 0x00e3, si: 0x00000000, vi: -0x1, vs: 0x48b00000492},
		ov{re: 0x00e4, si: 0x00000000, vi: -0x1, vs: 0x49200000499},
		ov{re: 0x00e5, si: 0x00000000, vi: -0x1, vs: 0x499000004a0},
		ov{re: 0x00e6, si: 0x00000000, vi: -0x1, vs: 0x499000004a0},
		ov{re: 0x00e7, si: 0x00000000, vi: -0x1, vs: 0x4a0000004a7},
		ov{re: 0x00e8, si: 0x00000000, vi: -0x1, vs: 0x4a7000004ac},
		ov{re: 0x00e9, si: 0x00000000, vi: -0x1, vs: 0x4ac000004b3},
		ov{re: 0x00ea, si: 0x00000000, vi: -0x1, vs: 0x4b3000004ba},
		ov{re: 0x00eb, si: 0x00000000, vi: -0x1, vs: 0x4ba000004c1},
		ov{re: 0x00ec, si: 0x00000000, vi: -0x1, vs: 0x4c1000004c8},
		ov{re: 0x00ed, si: 0x00000000, vi: -0x1, vs: 0x4c8000004cf},
		ov{re: -0x0001, si: 0x4cf000004dc, vi: -0x1, vs: 0x4dc000004e1},
		ov{re: 0x00ee, si: 0x00000000, vi: -0x1, vs: 0x4e1000004e8},
		ov{re: 0x00ef, si: 0x00000000, vi: -0x1, vs: 0x4e8000004ef},
		ov{re: 0x00f0, si: 0x00000000, vi: -0x1, vs: 0x4ef000004f6},
		ov{re: 0x00f1, si: 0x00000000, vi: -0x1, vs: 0x4f6000004fd},
		ov{re: 0x00f2, si: 0x00000000, vi: -0x1, vs: 0x4fd00000502},
		ov{re: 0x00f3, si: 0x00000000, vi: -0x1, vs: 0x50200000508},
		ov{re: 0x00f4, si: 0x00000000, vi: -0x1, vs: 0x5080000050e},
		ov{re: 0x00f5, si: 0x00000000, vi: -0x1, vs: 0x50e00000514},
		ov{re: 0x00f6, si: 0x00000000, vi: -0x1, vs: 0x5140000051a},
		ov{re: 0x00f7, si: 0x00000000, vi: -0x1, vs: 0x51a00000520},
		ov{re: 0x00f8, si: 0x00000000, vi: -0x1, vs: 0x52000000526},
		ov{re: 0x00f9, si: 0x00000000, vi: -0x1, vs: 0x52000000526},
		ov{re: 0x00fa, si: 0x00000000, vi: -0x1, vs: 0x5260000052c},
		ov{re: 0x00fb, si: 0x00000000, vi: -0x1, vs: 0x52c00000532},
		ov{re: 0x00fc, si: 0x00000000, vi: -0x1, vs: 0x53200000538},
		ov{re: 0x00fd, si: 0x00000000, vi: -0x1, vs: 0x5380000053e},
		ov{re: 0x00fe, si: 0x00000000, vi: -0x1, vs: 0x53e00000544},
		ov{re: 0x00ff, si: 0x00000000, vi: -0x1, vs: 0x53e00000544},
		ov{re: 0x0100, si: 0x00000000, vi: -0x1, vs: 0x5440000054a},
		ov{re: 0x0101, si: 0x00000000, vi: -0x1, vs: 0x54a00000550},
		ov{re: 0x0102, si: 0x00000000, vi: -0x1, vs: 0x55000000556},
		ov{re: 0x0103, si: 0x00000000, vi: -0x1, vs: 0x5560000055c},
		ov{re: 0x0104, si: 0x00000000, vi: -0x1, vs: 0x55c00000562},
		ov{re: 0x0105, si: 0x00000000, vi: -0x1, vs: 0x56200000568},
		ov{re: 0x0106, si: 0x00000000, vi: -0x1, vs: 0x5680000056e},
		ov{re: 0x0107, si: 0x00000000, vi: -0x1, vs: 0x56e00000572},
		ov{re: 0x0108, si: 0x00000000, vi: -0x1, vs: 0x57200000578},
		ov{re: 0x0109, si: 0x00000000, vi: -0x1, vs: 0x5780000057e},
		ov{re: 0x010a, si: 0x00000000, vi: -0x1, vs: 0x57e00000584},
		ov{re: 0x010b, si: 0x00000000, vi: -0x1, vs: 0x5840000058a},
	}
	__or_re = []*regexp.Regexp{
		regexp.MustCompile(`(?i)Android 10.+bliss_maple`),
		regexp.MustCompile(`(?i)Linux/(\d+[\.\d]*).+tlinux`),
		regexp.MustCompile(`(?i).+.amzn(\d).x86_64`),
		regexp.MustCompile(`(?i)Android (\d+[\.\d]*); ClearPHONE`),
		regexp.MustCompile(`(?i)KreaTV/0.0.0.0`),
		regexp.MustCompile(`(?i)KreaTV/(\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)Linux (?:[^;]+); Opera TV(?: Store)?/|^Opera/\d+\.\d+ \(Linux mips`),
		regexp.MustCompile(`(?i)Grid OS (\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)Mageia; Linux`),
		regexp.MustCompile(`(?i)(?:WH|WhaleTV/)(\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)Tizen[ /]?(\d+[\.\d]+)?`),
		regexp.MustCompile(`(?i)(?:Ali)?YunOS[ /]?(\d+[\.\d]+)?`),
		regexp.MustCompile(`(?i)Windows Phone;FBSV/(\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)(?:Windows Phone (?:OS)?|wds)[ /]?(\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)XBLWP7|Windows Phone`),
		regexp.MustCompile(`(?i)Windows CE(?: (\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)(?:IEMobile|Windows ?Mobile)(?: (\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)Windows NT 6.2; ARM;`),
		regexp.MustCompile(`(?i)Windows NT 6.3; ARM;`),
		regexp.MustCompile(`(?i)Windows IoT 10.0`),
		regexp.MustCompile(`(?i)KAIOS(?:/(\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)HarmonyOS(?:[/ ](\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)RazoDroiD(?: v(\d+[\.\d]*))?`),
		regexp.MustCompile(`(?i)MildWild(?: CM-(\d+[\.\d]*))?`),
		regexp.MustCompile(`(?i)CyanogenMod(?:[\-/](?:CM)?(\d+[\.\d]*))?`),
		regexp.MustCompile(`(?i)(?:.*_)?MocorDroid(?:(\d+[\.\d]*))?`),
		regexp.MustCompile(`(?i)Fire OS(?:/(\d+[\.\d]*))?`),
		regexp.MustCompile(`(?i).+FIRETVSTICK2018`),
		regexp.MustCompile(`(?i)RemixOS|Remix (?:Pro|Mini)`),
		regexp.MustCompile(`(?i)RemixOS 6|Remix Mini`),
		regexp.MustCompile(`(?i)FreeBSD.+Android`),
		regexp.MustCompile(`(?i)Linux; Andr0id[; ](\d+[\.\d]*)`),
		regexp.MustCompile(`(?i)Android[; ](\d+[\.\d]*).+Android TV`),
		regexp.MustCompile(`(?i)(?:Podbean|Podimo)(?:.*)/Android`),
		regexp.MustCompile(`(?i)Android OS/(\d+[\.\d]*)`),
		regexp.MustCompile(`(?i)Pinterest for Android/.*; (\d(?:[\d\.]*))\)$`),
		regexp.MustCompile(`(?i)Android; (\d+[\.\d]*); Mobile;`),
		regexp.MustCompile(`(?i)[ ]([\d\.]+)\) AppleWebKit.*ROBLOX Android App`),
		regexp.MustCompile(`(?i)(?:(?:Orca-)?Android|Adr|AOSP)[ /]?(?:[a-z]+ )?(\d+[\.\d]*)`),
		regexp.MustCompile(`(?i)(?:Allview_TX1_Quasar|Cosmote_My_mini_Tab) (\d+[\.\d]*)`),
		regexp.MustCompile(`(?i)Android ?(?:jelly bean|Kit Kat|S.O. Ginger Bread|The FireCyano|:) (\d+[\.\d]*)`),
		regexp.MustCompile(`(?i)(?:Orca-Android|FB4A).*FBSV/(\d+[\.\d]*);`),
		regexp.MustCompile(`(?i) Adr |Android|Silk-Accelerated=[a-z]{4,5}`),
		regexp.MustCompile(`(?i)(?:TwitterAndroid).*[ /](?:[a-z]+ )?(\d+[\.\d]*)`),
		regexp.MustCompile(`(?i)BeyondPod|AntennaPod|Podkicker|DoggCatcher|Player FM|okhttp|Podcatcher Deluxe|.+K_?Android_?TV_|Sonos/.+\(ACR_`),
		regexp.MustCompile(`(?i)Linux; diordnA[; ](\d+[\.\d]*)`),
		regexp.MustCompile(`(?i)^A/(\d+[\.\d]*)/`),
		regexp.MustCompile(`(?i)Sailfish|Jolla`),
		regexp.MustCompile(`(?i)AmigaOS[ ]?(\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)AmigaOS|AmigaVoyager|Amiga-AWeb`),
		regexp.MustCompile(`(?i)ThreadX(?:/(\d+[\.\d]*))?`),
		regexp.MustCompile(`(?i)Nucleus(?:(?: |/v?)(\d+[\.\d]*))?`),
		regexp.MustCompile(`(?i)MTK(?:(?: |/v?)(\d+[\.\d]*))?`),
		regexp.MustCompile(`(?i)MRE/(\d+)\.(\d+).*;MAUI`),
		regexp.MustCompile(`(?i)Linux.+kanotix`),
		regexp.MustCompile(`(?i)moonOS/(\d+.[\d.]+)`),
		regexp.MustCompile(`(?i)Pardus/(\d+.[\d.]+)`),
		regexp.MustCompile(`(?i)RokuOS/.+RokuOS (\d+.[\d.]+)`),
		regexp.MustCompile(`(?i)Roku(?:OS)?/(?:DVP|Pluto)?-?(\d+[\.\d]+)?`),
		regexp.MustCompile(`(?i)Roku; (?:AP|UI); (\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)Helio/(\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)HasCodingOs (\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)PCLinuxOS/(\d+[\.\d]+)|.+pc-linux-gnu`),
		regexp.MustCompile(`(?i)(Ordissimo|webissimo3)`),
		regexp.MustCompile(`(?i)(?:Win|Sistema )Fenix`),
		regexp.MustCompile(`(?i)TOS; Linux`),
		regexp.MustCompile(`(?i)Arch ?Linux(?:[ /\-](\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)VectorLinux(?: package)?(?:[ /\-](\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)CentOS Stream (\d)`),
		regexp.MustCompile(`(?i).+.el(\d+(?:[_\.]\d+)*).(?:centos|x86_64)`),
		regexp.MustCompile(`(?i)CentOS Linux (\d)`),
		regexp.MustCompile(`(?i)Linux; .*((?:Debian|Knoppix|Mint|Ubuntu|Kubuntu|Xubuntu|Lubuntu|Fedora|Red Hat|Mandriva|Gentoo|Sabayon|Slackware|SUSE|CentOS|BackTrack))[ /](\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)Deepin[ /](\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)(Debian|Knoppix|Mint|Ubuntu|Kubuntu|Xubuntu|Lubuntu|Fedora|Red Hat|Mandriva|Gentoo|Sabayon|Slackware|SUSE|CentOS|BackTrack|Freebox)(?:(?: Enterprise)? Linux)?(?:[ /\-](\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i).+redhat-linux-gnu`),
		regexp.MustCompile(`(?i)OS ROSA; Linux`),
		regexp.MustCompile(`(?i)(?:Web0S; .*WEBOS|webOS|web0S|Palm webOS|hpwOS)(?:[/]?(\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)WEBOS(\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV.+Chr[o0]me/79`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV.+Chr[o0]me/68`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV.+Chr[o0]me/53`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV.+Chr[o0]me/38`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV.+Safari/538`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV.+Safari/537`),
		regexp.MustCompile(`(?i)(?:PalmOS|Palm OS)(?:[/ ](\d+[\.\d]+))?|Palm`),
		regexp.MustCompile(`(?i)Xiino(?:.*v\. (\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)MorphOS(?:[ /](\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)FBW.+FBSV/(\d+[\.\d]*);`),
		regexp.MustCompile(`(?i)Windows.+OS: (\d+[\.\d]*)`),
		regexp.MustCompile(`(?i)Windows;(\d+[\.\d]*);`),
		regexp.MustCompile(`(?i)mingw32|winhttp`),
		regexp.MustCompile(`(?i)(?:Windows(?:-Update-Agent)?|Microsoft-(?:CryptoAPI|Delivery-Optimization|WebDAV-MiniRedir|WNS))/(\d+\.\d+)`),
		regexp.MustCompile(`(?i)CYGWIN_NT-10.0|Windows NT 10.0|Windows 10`),
		regexp.MustCompile(`(?i)CYGWIN_NT-6.4|Windows NT 6.4|Windows 10|win10`),
		regexp.MustCompile(`(?i)CYGWIN_NT-6.3|Windows NT 6.3|Windows 8.1`),
		regexp.MustCompile(`(?i)CYGWIN_NT-6.2|Windows NT 6.2|Windows 8`),
		regexp.MustCompile(`(?i)CYGWIN_NT-6.1|Windows NT 6.1|Windows 7|win7|Windows \(6.1`),
		regexp.MustCompile(`(?i)CYGWIN_NT-6.0|Windows NT 6.0|Windows Vista`),
		regexp.MustCompile(`(?i)CYGWIN_NT-5.2|Windows NT 5.2|Windows Server 2003 / XP x64`),
		regexp.MustCompile(`(?i)CYGWIN_NT-5.1|Windows NT 5.1|Windows XP`),
		regexp.MustCompile(`(?i)CYGWIN_NT-5.0|Windows NT 5.0|Windows 2000`),
		regexp.MustCompile(`(?i)CYGWIN_NT-4.0|Windows NT 4.0|WinNT|Windows NT`),
		regexp.MustCompile(`(?i)CYGWIN_ME-4.90|Win 9x 4.90|Windows ME`),
		regexp.MustCompile(`(?i)CYGWIN_98-4.10|Win98|Windows 98`),
		regexp.MustCompile(`(?i)CYGWIN_95-4.0|Win32|Win95|Windows 95|Windows_95`),
		regexp.MustCompile(`(?i)Windows 3.1`),
		regexp.MustCompile(`(?i)Windows|.+win32|Win64|MSDW|HandBrake Win Upd|Microsoft BITS`),
		regexp.MustCompile(`(?i)Apple ?TV.*CPU (?:iPhone )?OS ((?:9|1[0-5])[_\.]\d+(?:[_.]\d+)*)`),
		regexp.MustCompile(`(?i)iOS(?:; |/)((?:9|1[0-5]).\d+(?:[_\.]\d+)*) (?:model/)?AppleTV`),
		regexp.MustCompile(`(?i)(?:Watch1,[12]/|Watch OS,|watchOS[ /])(\d+[\.\d]*)`),
		regexp.MustCompile(`(?i)FBMD/iPad;.*FBSV/ ?(1[345]).(\d+[\.\d]*);`),
		regexp.MustCompile(`(?i)iPad/(1[345]).(\d+[\.\d]*)`),
		regexp.MustCompile(`(?i)^iPad(?:\d+[\,\d]*)/(1[345]).(\d+[\.\d]*)`),
		regexp.MustCompile(`(?i)iPad(?:; iOS|.+CPU OS) ((1[345])+(?:[_\.]\d+)*)`),
		regexp.MustCompile(`(?i)iOS/(1[345]).(\d+[\.\d]*).+Apple/iPad`),
		regexp.MustCompile(`(?i)iPhone OS,(1[345]).(\d+[\.\d]*).+iPad`),
		regexp.MustCompile(`(?i)iPad/([89]|1[012]).(\d+[\.\d]*)`),
		regexp.MustCompile(`(?i)^(?:iPad|iPhone)(?:\d+[\,\d]*)[/_](\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)Pinterest for iOS/.*; (\d(?:[\d\.]*))[)]$`),
		regexp.MustCompile(`(?i)(?:iPhone ?OS|iOS(?: Version)?)(?:/|; |,)(\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)^.*CFNetwork/.+ Darwin/(\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)Darwin/21.4.0`),
		regexp.MustCompile(`(?i)Darwin/21.3.0`),
		regexp.MustCompile(`(?i)Darwin/21.2.0`),
		regexp.MustCompile(`(?i)Darwin/21.1.0`),
		regexp.MustCompile(`(?i)Darwin/21.0.0`),
		regexp.MustCompile(`(?i)Darwin/20.6.0`),
		regexp.MustCompile(`(?i)Darwin/20.5.0`),
		regexp.MustCompile(`(?i)Darwin/20.4.0`),
		regexp.MustCompile(`(?i)Darwin/20.3.0`),
		regexp.MustCompile(`(?i)Darwin/20.2.0`),
		regexp.MustCompile(`(?i)Darwin/20.1.0`),
		regexp.MustCompile(`(?i)Darwin/20.0.0`),
		regexp.MustCompile(`(?i)Darwin/19.6.0`),
		regexp.MustCompile(`(?i)Darwin/19.5.0`),
		regexp.MustCompile(`(?i)Darwin/19.4.0`),
		regexp.MustCompile(`(?i)Darwin/19.3.0`),
		regexp.MustCompile(`(?i)Darwin/19.2.0`),
		regexp.MustCompile(`(?i)Darwin/19.0.0`),
		regexp.MustCompile(`(?i)Darwin/18.7.0`),
		regexp.MustCompile(`(?i)Darwin/18.6.0`),
		regexp.MustCompile(`(?i)Darwin/18.5.0`),
		regexp.MustCompile(`(?i)Darwin/18.2.0`),
		regexp.MustCompile(`(?i)Darwin/18.0.0`),
		regexp.MustCompile(`(?i)Darwin/17.7.0`),
		regexp.MustCompile(`(?i)Darwin/17.6.0`),
		regexp.MustCompile(`(?i)Darwin/17.5.0`),
		regexp.MustCompile(`(?i)Darwin/17.4.0`),
		regexp.MustCompile(`(?i)Darwin/17.3.0`),
		regexp.MustCompile(`(?i)CFNetwork/808\.3`),
		regexp.MustCompile(`(?i)CFNetwork/808\.2`),
		regexp.MustCompile(`(?i)CFNetwork/808\.1`),
		regexp.MustCompile(`(?i)CFNetwork/808\.0`),
		regexp.MustCompile(`(?i)CFNetwork/758\.5\.3`),
		regexp.MustCompile(`(?i)CFNetwork/758\.4\.3`),
		regexp.MustCompile(`(?i)CFNetwork/758\.3\.15`),
		regexp.MustCompile(`(?i)CFNetwork/758\.2\.[78]`),
		regexp.MustCompile(`(?i)CFNetwork/758\.1\.6`),
		regexp.MustCompile(`(?i)CFNetwork/758\.0\.2`),
		regexp.MustCompile(`(?i)CFNetwork/711\.5\.6`),
		regexp.MustCompile(`(?i)CFNetwork/711\.4\.6`),
		regexp.MustCompile(`(?i)CFNetwork/711\.3\.18`),
		regexp.MustCompile(`(?i)CFNetwork/711\.2\.23`),
		regexp.MustCompile(`(?i)CFNetwork/711\.1\.1[26]`),
		regexp.MustCompile(`(?i)CFNetwork/711\.0\.6`),
		regexp.MustCompile(`(?i)CFNetwork/672\.1`),
		regexp.MustCompile(`(?i)CFNetwork/672\.0`),
		regexp.MustCompile(`(?i)CFNetwork/609\.1`),
		regexp.MustCompile(`(?i)CFNetwork/60[29]`),
		regexp.MustCompile(`(?i)CFNetwork/548\.1`),
		regexp.MustCompile(`(?i)CFNetwork/548\.0`),
		regexp.MustCompile(`(?i)CFNetwork/485\.13`),
		regexp.MustCompile(`(?i)CFNetwork/485\.12`),
		regexp.MustCompile(`(?i)CFNetwork/485\.10`),
		regexp.MustCompile(`(?i)CFNetwork/485\.2`),
		regexp.MustCompile(`(?i)CFNetwork/467\.12`),
		regexp.MustCompile(`(?i)(?:iPhone|iPod_touch)/(\d+[\.\d]*) hw/`),
		regexp.MustCompile(`(?i)iOS(\d+\.\d+\.\d+)`),
		regexp.MustCompile(`(?i)iOS(\d+)\.(\d+)0`),
		regexp.MustCompile(`(?i)iPhone OS ([0-9]{1})([0-9]{1})([0-9]{1})`),
		regexp.MustCompile(`(?i)(?:CPU OS|iPh(?:one)?[ _]OS|iOS)[ _/](\d+(?:[_\.]\d+)*)`),
		regexp.MustCompile(`(?i)FBMD/iPhone;.*FBSV/ ?(\d+[\.\d]+);`),
		regexp.MustCompile(`(?i)(?:FBIOS|Messenger(?:Lite)?ForiOS).*FBSV/ ?(\d+[\.\d]*);`),
		regexp.MustCompile(`(?i)iPhone OS,([\d\.]+).+(?:iPhone|iPod)`),
		regexp.MustCompile(`(?i)iPad.+; (\d+[\.\d]+);`),
		regexp.MustCompile(`(?i)iPhone.+; Version (\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)OS=iOS;OSVer=(\d+[\.\d]+);`),
		regexp.MustCompile(`(?i)os=Apple-iOS.+osversion=(\d+[\.\d]+)/`),
		regexp.MustCompile(`(?i)(?:Apple-)?(?:iPhone|iPad|iPod)(?:.*Mac OS X.*Version/(\d+\.\d+)|; Opera)?`),
		regexp.MustCompile(`(?i)dv\(iPh.+ov\((\d+(?:[_\.]\d+)*)\);`),
		regexp.MustCompile(`(?i)(?:Podcasts/(?:[\d\.]+)|Instacast(?:HD)?/(?:\d\.[\d\.abc]+)|Pocket Casts, iOS|\(iOS\)|iOS; Opera|Overcast|Castro|Podcat|iCatcher|RSSRadio/|MobileSafari/)`),
		regexp.MustCompile(`(?i)iTunes-(AppleTV|iPod|iPad|iPhone)/(?:[\d\.]+)`),
		regexp.MustCompile(`(?i)iOS/Version ([\d\.]+)`),
		regexp.MustCompile(`(?i)Sonos/.+\(ICRU_`),
		regexp.MustCompile(`(?i)CaptiveNetworkSupport|AirPlay`),
		regexp.MustCompile(`(?i)CFNetwork/.+ Darwin/(?:[\d\.]+).+(?:x86_64|i386|Power%20Macintosh)|(?:x86_64-apple-)?darwin(?:[\d\.]+)|PowerMac|com.apple.Safari.SearchHelper`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?21.4.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?21.3.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?21.2.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?21.1.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?21.0.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?20.6.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?20.5.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?20.4.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?20.3.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?20.2.0.*`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?20.[01].0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?19.6.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?19.5.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?19.4.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?19.3.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?19.2.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?19.0.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?18.7.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?18.6.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?18.5.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?18.2.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?18.0.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?17.7.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?17.6.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?17.5.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?17.4.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?17.3.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?17.2.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?17.0.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?16.7.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?16.6.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?16.5.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?16.4.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?16.3.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?16.2.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?16.1.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?16.0.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?15.6.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?15.5.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?15.4.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?15.3.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?15.2.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?14.5.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?14.4.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?14.3.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?14.1.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?14.0.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?13.4.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?13.3.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?13.2.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?13.1.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?13.0.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?12.6.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?12.5.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?12.4.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?12.3.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?12.2.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?12.1.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?11.5.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?11.4.2`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?11.4.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?11.3.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?11.2.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?11.1.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?10.8.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?10.7.[34]`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?10.3.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?10.0.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?9.8.0`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?9.7.1`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?9.6.2`),
		regexp.MustCompile(`(?i)(?:x86_64-apple-)?Darwin/?9.5.[05]`),
		regexp.MustCompile(`(?i)Macintosh;Mac OS X \((\d+[\.\d]+)\);`),
		regexp.MustCompile(`(?i)Mac[ +]OS[ +]?X(?:[ /,](?:Version )?(\d+(?:[_\.]\d+)+))?`),
		regexp.MustCompile(`(?i)Mac (?:OS/)?(\d+(?:[_\.]\d+)+)`),
		regexp.MustCompile(`(?i)(?:macOS[/,]|Mac-)(\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)Macintosh; OS X (\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)Darwin|Macintosh|Mac_PowerPC|PPC|Mac PowerPC|iMac|MacBook|macOS|AppleExchangeWebServices|com.apple.trustd|Sonos/.+\(MDCR_`),
		regexp.MustCompile(`(?i)SeewoOS x86_64 (\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)CrOS [a-z0-9_]+ (\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)(?:BB10;.+Version|Black[Bb]erry[0-9a-z]+|Black[Bb]erry.+Version)/(\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)RIM Tablet OS (\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)RIM Tablet OS|QNX|Play[Bb]ook`),
		regexp.MustCompile(`(?i)Symbian/3.+NokiaBrowser/7\.3`),
		regexp.MustCompile(`(?i)Symbian/3.+NokiaBrowser/7\.4`),
		regexp.MustCompile(`(?i)(?:Series ?60|SymbOS|S60)(?:[ /]?(\d+[\.\d]+|V\d+))?`),
		regexp.MustCompile(`(?i)SymbianOS/(\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)MeeGo|WeTab`),
		regexp.MustCompile(`(?i)Symbian(?: OS)?|SymbOS`),
		regexp.MustCompile(`(?i)(?:Mobile|Tablet);.+Firefox/\d+\.\d+`),
		regexp.MustCompile(`(?i)RISC OS(?:-NC)?(?:[ /](\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)Inferno(?:[ /](\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)bada(?:[ /](\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)REX; U;`),
		regexp.MustCompile(`(?i)(?:Brew(?: MP)?|BMP)(?:[ /](\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)GoogleTV(?:[ /](\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)AppleTV(?:/?(\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)WebTV/(\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)(?:SunOS|Solaris)(?:[/ ](\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)AIX(?:[/ ]?(\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)HP-UX(?:[/ ]?(\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)FreeBSD(?:[/ ]?(\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)NetBSD(?:[/ ]?(\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)OpenBSD(?:[/ ]?(\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)DragonFly(?:[/ ]?(\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)Syllable(?:[/ ]?(\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)IRIX(?:;64)?(?:[/ ]?(\d+[\.\d]+))`),
		regexp.MustCompile(`(?i)OSF1(?:[/ ]?v?(\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)Nintendo (Wii|Switch)`),
		regexp.MustCompile(`(?i)PlayStation.+; Linux (\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)PlayStation ?(\d)(?:[/ ](?:Pro )?(\d+[\.\d]+))?`),
		regexp.MustCompile(`(?i)Xbox|KIN\.(?:One|Two)`),
		regexp.MustCompile(`(?i)Nitro|Nintendo ([3]?DS[i]?)`),
		regexp.MustCompile(`(?i)PlayStation ((?:Portable|Vita))`),
		regexp.MustCompile(`(?i)Linux/(\d+[\.\d]+)`),
		regexp.MustCompile(`(?i)Linux(?:OS)?[^a-z]|Cinnamon/(?:\d+[\.\d]+)|.+unknown-linux-gnu`),
		regexp.MustCompile(`(?i)Java ME|(J2ME|Profile)/MIDP|MIDP-(?:\d+[\.\d]+)/CLDC|Configuration/CLDC|Java; U; MIDP|MMP/\d.\d`),
	}
	__or_buf = []byte{
		0x42, 0x6c, 0x69, 0x73, 0x73, 0x20, 0x4f, 0x53, 0x31, 0x32, 0x54, 0x65, 0x6e, 0x63, 0x65, 0x6e,
		0x74, 0x4f, 0x53, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x20, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x43,
		0x68, 0x69, 0x6e, 0x61, 0x20, 0x4f, 0x53, 0x20, 0x43, 0x4f, 0x53, 0x20, 0x6c, 0x69, 0x6b, 0x65,
		0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4f, 0x53, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x73, 0x6d, 0x61, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x4b, 0x72, 0x65, 0x61, 0x54, 0x56, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x20, 0x54,
		0x56, 0x47, 0x72, 0x69, 0x64, 0x4f, 0x53, 0x43, 0x61, 0x69, 0x78, 0x61, 0x20, 0x4d, 0xc3, 0xa1,
		0x67, 0x69, 0x63, 0x61, 0x43, 0x61, 0x69, 0x78, 0x61, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x61, 0x4d,
		0x61, 0x67, 0x65, 0x69, 0x61, 0x57, 0x68, 0x61, 0x6c, 0x65, 0x20, 0x4f, 0x53, 0x54, 0x69, 0x7a,
		0x65, 0x6e, 0x59, 0x75, 0x6e, 0x4f, 0x53, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x43, 0x45, 0x57, 0x69,
		0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x6e, 0x64,
		0x6f, 0x77, 0x73, 0x20, 0x52, 0x54, 0x38, 0x2e, 0x31, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73,
		0x20, 0x49, 0x6f, 0x54, 0x31, 0x30, 0x4b, 0x61, 0x69, 0x4f, 0x53, 0x48, 0x61, 0x72, 0x6d, 0x6f,
		0x6e, 0x79, 0x4f, 0x53, 0x52, 0x61, 0x7a, 0x6f, 0x44, 0x72, 0x6f, 0x69, 0x44, 0x4d, 0x69, 0x6c,
		0x64, 0x57, 0x69, 0x6c, 0x64, 0x43, 0x79, 0x61, 0x6e, 0x6f, 0x67, 0x65, 0x6e, 0x4d, 0x6f, 0x64,
		0x4d, 0x6f, 0x63, 0x6f, 0x72, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x46, 0x69, 0x72, 0x65, 0x20, 0x4f,
		0x53, 0x36, 0x41, 0x46, 0x54, 0x53, 0x4f, 0x30, 0x30, 0x31, 0x37, 0x46, 0x79, 0x64, 0x65, 0x4f,
		0x53, 0x52, 0x65, 0x6d, 0x69, 0x78, 0x20, 0x4f, 0x53, 0x52, 0x65, 0x6d, 0x69, 0x78, 0x4f, 0x53,
		0x20, 0x35, 0x31, 0x32, 0x52, 0x65, 0x6d, 0x69, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x33, 0x46, 0x72,
		0x65, 0x65, 0x42, 0x53, 0x44, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4d, 0x61,
		0x72, 0x73, 0x68, 0x6d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x61, 0x69, 0x6c, 0x66, 0x69, 0x73,
		0x68, 0x20, 0x4f, 0x53, 0x41, 0x6d, 0x69, 0x67, 0x61, 0x4f, 0x53, 0x54, 0x68, 0x72, 0x65, 0x61,
		0x64, 0x58, 0x4d, 0x54, 0x4b, 0x20, 0x2f, 0x20, 0x4e, 0x75, 0x63, 0x6c, 0x65, 0x75, 0x73, 0x4d,
		0x52, 0x45, 0x4c, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x4c, 0x69, 0x6e, 0x64, 0x6f, 0x77,
		0x73, 0x4f, 0x53, 0x5a, 0x65, 0x6e, 0x77, 0x61, 0x6c, 0x6b, 0x5a, 0x65, 0x6e, 0x77, 0x61, 0x6c,
		0x6b, 0x20, 0x47, 0x4e, 0x55, 0x20, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x4b, 0x61, 0x6e, 0x6f, 0x74,
		0x69, 0x78, 0x6d, 0x6f, 0x6f, 0x6e, 0x4f, 0x53, 0x46, 0x6f, 0x72, 0x65, 0x73, 0x69, 0x67, 0x68,
		0x74, 0x20, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x50, 0x61, 0x72, 0x64, 0x75, 0x73, 0x50, 0x75, 0x72,
		0x65, 0x4f, 0x53, 0x4c, 0x69, 0x62, 0x72, 0x65, 0x6d, 0x20, 0x35, 0x4f, 0x70, 0x65, 0x6e, 0x57,
		0x72, 0x74, 0x75, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2d, 0x66, 0x65, 0x74, 0x63, 0x68, 0x52,
		0x6f, 0x6b, 0x75, 0x20, 0x4f, 0x53, 0x44, 0x56, 0x4b, 0x42, 0x75, 0x6e, 0x74, 0x75, 0x64, 0x76,
		0x6b, 0x62, 0x75, 0x6e, 0x74, 0x75, 0x4c, 0x75, 0x6d, 0x69, 0x6e, 0x20, 0x4f, 0x53, 0x48, 0x61,
		0x73, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x53, 0x50, 0x43, 0x4c, 0x69, 0x6e, 0x75, 0x78,
		0x4f, 0x53, 0x4f, 0x72, 0x64, 0x69, 0x73, 0x73, 0x69, 0x6d, 0x6f, 0x46, 0x65, 0x6e, 0x69, 0x78,
		0x54, 0x6d, 0x61, 0x78, 0x4f, 0x53, 0x4d, 0x61, 0x65, 0x6d, 0x6f, 0x41, 0x72, 0x63, 0x68, 0x20,
		0x4c, 0x69, 0x6e, 0x75, 0x78, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x6e, 0x75, 0x78,
		0x43, 0x65, 0x6e, 0x74, 0x4f, 0x53, 0x20, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x65, 0x6e,
		0x74, 0x4f, 0x53, 0x44, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x52, 0x65, 0x64, 0x20, 0x48, 0x61, 0x74,
		0x52, 0x6f, 0x73, 0x61, 0x77, 0x65, 0x62, 0x4f, 0x53, 0x35, 0x34, 0x57, 0x45, 0x42, 0x4f, 0x53,
		0x31, 0x70, 0x61, 0x6c, 0x6d, 0x4f, 0x53, 0x4d, 0x6f, 0x72, 0x70, 0x68, 0x4f, 0x53, 0x57, 0x69,
		0x6e, 0x64, 0x6f, 0x77, 0x73, 0x38, 0x56, 0x69, 0x73, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65,
		0x72, 0x20, 0x32, 0x30, 0x30, 0x33, 0x58, 0x50, 0x32, 0x30, 0x30, 0x30, 0x4e, 0x54, 0x4d, 0x45,
		0x39, 0x38, 0x39, 0x35, 0x33, 0x2e, 0x31, 0x48, 0x61, 0x69, 0x6b, 0x75, 0x20, 0x4f, 0x53, 0x48,
		0x61, 0x69, 0x6b, 0x75, 0x74, 0x76, 0x4f, 0x53, 0x77, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x53, 0x69,
		0x50, 0x61, 0x64, 0x4f, 0x53, 0x69, 0x4f, 0x53, 0x31, 0x35, 0x2e, 0x34, 0x31, 0x35, 0x2e, 0x33,
		0x31, 0x35, 0x2e, 0x32, 0x31, 0x35, 0x2e, 0x31, 0x31, 0x35, 0x2e, 0x30, 0x31, 0x34, 0x2e, 0x37,
		0x31, 0x34, 0x2e, 0x36, 0x31, 0x34, 0x2e, 0x35, 0x31, 0x34, 0x2e, 0x34, 0x31, 0x34, 0x2e, 0x33,
		0x31, 0x34, 0x2e, 0x32, 0x31, 0x34, 0x2e, 0x30, 0x31, 0x33, 0x2e, 0x36, 0x31, 0x33, 0x2e, 0x35,
		0x31, 0x33, 0x2e, 0x34, 0x31, 0x33, 0x2e, 0x33, 0x2e, 0x31, 0x31, 0x33, 0x2e, 0x33, 0x31, 0x33,
		0x2e, 0x30, 0x31, 0x32, 0x2e, 0x34, 0x31, 0x32, 0x2e, 0x33, 0x31, 0x32, 0x2e, 0x32, 0x31, 0x32,
		0x2e, 0x31, 0x31, 0x32, 0x2e, 0x30, 0x31, 0x31, 0x2e, 0x34, 0x2e, 0x31, 0x31, 0x31, 0x2e, 0x34,
		0x31, 0x31, 0x2e, 0x33, 0x31, 0x31, 0x2e, 0x32, 0x2e, 0x36, 0x31, 0x31, 0x2e, 0x32, 0x43, 0x46,
		0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x38, 0x38, 0x39, 0x31, 0x31, 0x2e, 0x31, 0x43,
		0x46, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x38, 0x38, 0x37, 0x31, 0x31, 0x2e, 0x30,
		0x43, 0x46, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x38, 0x31, 0x31, 0x31, 0x30, 0x2e,
		0x33, 0x31, 0x30, 0x2e, 0x32, 0x31, 0x30, 0x2e, 0x31, 0x31, 0x30, 0x2e, 0x30, 0x43, 0x46, 0x4e,
		0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x38, 0x30, 0x38, 0x39, 0x2e, 0x33, 0x2e, 0x35, 0x39,
		0x2e, 0x33, 0x2e, 0x32, 0x39, 0x2e, 0x33, 0x39, 0x2e, 0x32, 0x39, 0x2e, 0x31, 0x39, 0x2e, 0x30,
		0x38, 0x2e, 0x34, 0x2e, 0x31, 0x38, 0x2e, 0x34, 0x38, 0x2e, 0x33, 0x38, 0x2e, 0x32, 0x38, 0x2e,
		0x30, 0x37, 0x2e, 0x31, 0x37, 0x2e, 0x30, 0x36, 0x2e, 0x31, 0x36, 0x2e, 0x30, 0x35, 0x2e, 0x31,
		0x35, 0x2e, 0x30, 0x34, 0x2e, 0x33, 0x34, 0x2e, 0x32, 0x34, 0x2e, 0x31, 0x34, 0x2e, 0x30, 0x33,
		0x2e, 0x32, 0x43, 0x46, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x34, 0x35, 0x39, 0x4d,
		0x61, 0x63, 0x31, 0x32, 0x2e, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x2e, 0x35, 0x31, 0x30, 0x2e, 0x31,
		0x35, 0x2e, 0x36, 0x31, 0x30, 0x2e, 0x31, 0x35, 0x2e, 0x35, 0x31, 0x30, 0x2e, 0x31, 0x35, 0x2e,
		0x34, 0x31, 0x30, 0x2e, 0x31, 0x35, 0x2e, 0x33, 0x31, 0x30, 0x2e, 0x31, 0x35, 0x2e, 0x32, 0x31,
		0x30, 0x2e, 0x31, 0x35, 0x31, 0x30, 0x2e, 0x31, 0x34, 0x31, 0x30, 0x2e, 0x31, 0x34, 0x2e, 0x35,
		0x31, 0x30, 0x2e, 0x31, 0x34, 0x2e, 0x34, 0x31, 0x30, 0x2e, 0x31, 0x34, 0x2e, 0x31, 0x31, 0x30,
		0x2e, 0x31, 0x33, 0x2e, 0x36, 0x31, 0x30, 0x2e, 0x31, 0x33, 0x2e, 0x35, 0x31, 0x30, 0x2e, 0x31,
		0x33, 0x2e, 0x34, 0x31, 0x30, 0x2e, 0x31, 0x33, 0x2e, 0x33, 0x31, 0x30, 0x2e, 0x31, 0x33, 0x2e,
		0x32, 0x31, 0x30, 0x2e, 0x31, 0x33, 0x2e, 0x31, 0x31, 0x30, 0x2e, 0x31, 0x33, 0x31, 0x30, 0x2e,
		0x31, 0x32, 0x2e, 0x36, 0x31, 0x30, 0x2e, 0x31, 0x32, 0x2e, 0x35, 0x31, 0x30, 0x2e, 0x31, 0x32,
		0x2e, 0x34, 0x31, 0x30, 0x2e, 0x31, 0x32, 0x2e, 0x33, 0x31, 0x30, 0x2e, 0x31, 0x32, 0x2e, 0x32,
		0x31, 0x30, 0x2e, 0x31, 0x32, 0x2e, 0x31, 0x31, 0x30, 0x2e, 0x31, 0x32, 0x31, 0x30, 0x2e, 0x31,
		0x31, 0x2e, 0x36, 0x31, 0x30, 0x2e, 0x31, 0x31, 0x2e, 0x35, 0x31, 0x30, 0x2e, 0x31, 0x31, 0x2e,
		0x34, 0x31, 0x30, 0x2e, 0x31, 0x31, 0x2e, 0x33, 0x31, 0x30, 0x2e, 0x31, 0x31, 0x2e, 0x32, 0x43,
		0x46, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x37, 0x36, 0x30, 0x31, 0x30, 0x2e, 0x31,
		0x31, 0x31, 0x30, 0x2e, 0x31, 0x30, 0x2e, 0x35, 0x31, 0x30, 0x2e, 0x31, 0x30, 0x2e, 0x34, 0x31,
		0x30, 0x2e, 0x31, 0x30, 0x2e, 0x33, 0x31, 0x30, 0x2e, 0x31, 0x30, 0x2e, 0x32, 0x31, 0x30, 0x2e,
		0x31, 0x30, 0x31, 0x30, 0x2e, 0x39, 0x2e, 0x35, 0x31, 0x30, 0x2e, 0x39, 0x2e, 0x34, 0x31, 0x30,
		0x2e, 0x39, 0x2e, 0x33, 0x31, 0x30, 0x2e, 0x39, 0x2e, 0x32, 0x31, 0x30, 0x2e, 0x39, 0x2e, 0x30,
		0x31, 0x30, 0x2e, 0x38, 0x2e, 0x35, 0x31, 0x30, 0x2e, 0x38, 0x2e, 0x34, 0x31, 0x30, 0x2e, 0x38,
		0x2e, 0x33, 0x31, 0x30, 0x2e, 0x38, 0x2e, 0x32, 0x31, 0x30, 0x2e, 0x38, 0x2e, 0x31, 0x31, 0x30,
		0x2e, 0x37, 0x2e, 0x35, 0x31, 0x30, 0x2e, 0x37, 0x2e, 0x34, 0x31, 0x30, 0x2e, 0x37, 0x2e, 0x33,
		0x31, 0x30, 0x2e, 0x37, 0x2e, 0x32, 0x31, 0x30, 0x2e, 0x37, 0x2e, 0x31, 0x31, 0x30, 0x2e, 0x36,
		0x2e, 0x38, 0x31, 0x30, 0x2e, 0x36, 0x2e, 0x37, 0x31, 0x30, 0x2e, 0x36, 0x2e, 0x33, 0x31, 0x30,
		0x2e, 0x36, 0x31, 0x30, 0x2e, 0x35, 0x2e, 0x38, 0x31, 0x30, 0x2e, 0x35, 0x2e, 0x37, 0x31, 0x30,
		0x2e, 0x35, 0x2e, 0x36, 0x31, 0x30, 0x2e, 0x35, 0x2e, 0x35, 0x53, 0x65, 0x65, 0x77, 0x6f, 0x4f,
		0x53, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x20, 0x4f, 0x53, 0x46, 0x75, 0x63, 0x68, 0x73, 0x69,
		0x61, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x4f, 0x53, 0x42, 0x6c,
		0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x4f, 0x53, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x62, 0x50, 0x6f, 0x64,
		0x42, 0x65, 0x4f, 0x53, 0x53, 0x79, 0x6d, 0x62, 0x69, 0x61, 0x6e, 0x5e, 0x33, 0x41, 0x6e, 0x6e,
		0x61, 0x42, 0x65, 0x6c, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x69, 0x61, 0x6e, 0x2f, 0x33, 0x53,
		0x79, 0x6d, 0x62, 0x69, 0x61, 0x6e, 0x20, 0x4f, 0x53, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
		0x20, 0x36, 0x30, 0x53, 0x79, 0x6d, 0x62, 0x69, 0x61, 0x6e, 0x20, 0x4f, 0x53, 0x20, 0x53, 0x65,
		0x72, 0x69, 0x65, 0x73, 0x20, 0x34, 0x30, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x34, 0x30, 0x53,
		0x79, 0x6d, 0x62, 0x69, 0x61, 0x6e, 0x20, 0x4f, 0x53, 0x4d, 0x65, 0x65, 0x47, 0x6f, 0x53, 0x79,
		0x6d, 0x62, 0x69, 0x61, 0x6e, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x46, 0x69, 0x72, 0x65, 0x66, 0x6f,
		0x78, 0x20, 0x4f, 0x53, 0x52, 0x49, 0x53, 0x43, 0x20, 0x4f, 0x53, 0x49, 0x6e, 0x66, 0x65, 0x72,
		0x6e, 0x6f, 0x42, 0x61, 0x64, 0x61, 0x52, 0x45, 0x58, 0x42, 0x72, 0x65, 0x77, 0x47, 0x6f, 0x6f,
		0x67, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x57, 0x65, 0x62, 0x54, 0x56, 0x53, 0x6f, 0x6c, 0x61, 0x72,
		0x69, 0x73, 0x41, 0x49, 0x58, 0x48, 0x50, 0x2d, 0x55, 0x58, 0x4e, 0x65, 0x74, 0x42, 0x53, 0x44,
		0x4f, 0x70, 0x65, 0x6e, 0x42, 0x53, 0x44, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x46, 0x6c, 0x79,
		0x53, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x52, 0x49, 0x58, 0x4f, 0x53, 0x46, 0x31,
		0x4e, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74,
		0x69, 0x6f, 0x6e, 0x58, 0x62, 0x6f, 0x78, 0x33, 0x36, 0x30, 0x4e, 0x69, 0x6e, 0x74, 0x65, 0x6e,
		0x64, 0x6f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61,
		0x74, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x53, 0x2f,
		0x32, 0x47, 0x4e, 0x55, 0x2f, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x4a, 0x61, 0x76, 0x61, 0x20, 0x4d,
		0x45,
	}
)
