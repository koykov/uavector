// Code generated by "uaxplc -module=device -input=~/dev/php/device-detector/regexes/device". DO NOT EDIT.

package uaxpl

import (
	"regexp"
)

var (
	__dr_idx = [8][]deviceTuple{
		// cameras.yml
		{
			deviceTuple{type64: 0x50000000b, brand64: 0x00000005, matchRI: -0x0001, match64: 0xb00000018, modelSI: 0x0000, models64: 0x00000000},
			deviceTuple{type64: 0x50000000b, brand64: 0x180000001f, matchRI: 0x0000, match64: 0x00000000, modelSI: -0x0001, models64: 0x100000006},
		},
		// car_browsers.yml
		{
			deviceTuple{type64: 0x940000009f, brand64: 0x8b00000094, matchRI: -0x0001, match64: 0x9f000000ad, modelSI: -0x0001, models64: 0x600000007},
			deviceTuple{type64: 0x940000009f, brand64: 0xb6000000bb, matchRI: 0x0002, match64: 0x00000000, modelSI: -0x0001, models64: 0x700000009},
			deviceTuple{type64: 0x940000009f, brand64: 0xce000000d4, matchRI: -0x0001, match64: 0xd4000000e4, modelSI: -0x0001, models64: 0x90000000a},
		},
		// consoles.yml
		{
			deviceTuple{type64: 0xed000000f4, brand64: 0xe7000000ed, matchRI: 0x0004, match64: 0x00000000, modelSI: 0x000a, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0xfe00000101, matchRI: -0x0001, match64: 0x1010000010d, modelSI: 0x000b, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0x1160000011f, matchRI: -0x0001, match64: 0x11f00000123, modelSI: -0x0001, models64: 0xc00000011},
			deviceTuple{type64: 0xed000000f4, brand64: 0x15f00000167, matchRI: 0x0005, match64: 0x00000000, modelSI: 0x0011, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0x1690000016d, matchRI: -0x0001, match64: 0x1690000016d, modelSI: 0x0012, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0x16d0000017b, matchRI: 0x0006, match64: 0x00000000, modelSI: 0x0013, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0x18100000185, matchRI: -0x0001, match64: 0x1850000018e, modelSI: 0x0014, models64: 0x00000000},
			deviceTuple{type64: 0xed000000f4, brand64: 0x18e00000192, matchRI: 0x0007, match64: 0x00000000, modelSI: 0x0015, models64: 0x00000000},
		},
		// mobiles.yml
		{
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1a0000001a7, matchRI: 0x0008, match64: 0x00000000, modelSI: 0x0016, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a9000001ab, matchRI: 0x0009, match64: 0x00000000, modelSI: -0x0001, models64: 0x1700000019},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cc000001cf, matchRI: 0x000c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1900000025},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x20100000206, matchRI: 0x0019, match64: 0x00000000, modelSI: -0x0001, models64: 0x2500000027},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x20a0000020d, matchRI: 0x001c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2700000028},
			deviceTuple{type64: 0x20d00000213, brand64: 0x21b0000021d, matchRI: 0x001e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2800000030},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x27400000279, matchRI: 0x0026, match64: 0x00000000, modelSI: -0x0001, models64: 0x3000000037},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2a5000002a9, matchRI: 0x002d, match64: 0x00000000, modelSI: 0x0037, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2a9000002ad, matchRI: 0x002e, match64: 0x00000000, modelSI: 0x0038, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2b6000002be, matchRI: 0x002f, match64: 0x00000000, modelSI: -0x0001, models64: 0x390000003d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2e1000002e5, matchRI: 0x0030, match64: 0x00000000, modelSI: 0x003d, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x2e5000002e8, matchRI: 0x0031, match64: 0x00000000, modelSI: 0x003e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2f5000002f7, matchRI: 0x0032, match64: 0x00000000, modelSI: -0x0001, models64: 0x3f00000043},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x32100000325, matchRI: -0x0001, match64: 0x32100000325, modelSI: -0x0001, models64: 0x430000004c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x38d00000392, matchRI: 0x0037, match64: 0x00000000, modelSI: 0x004c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x39200000397, matchRI: 0x0038, match64: 0x00000000, modelSI: -0x0001, models64: 0x4d0000004e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3b3000003bc, matchRI: 0x0039, match64: 0x00000000, modelSI: 0x004e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3bc000003bf, matchRI: 0x003a, match64: 0x00000000, modelSI: -0x0001, models64: 0x4f00000055},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3d8000003de, matchRI: 0x0041, match64: 0x00000000, modelSI: -0x0001, models64: 0x5500000058},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3fe00000403, matchRI: 0x0043, match64: 0x00000000, modelSI: 0x0058, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x41100000414, matchRI: 0x0044, match64: 0x00000000, modelSI: -0x0001, models64: 0x590000005b},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x44700000450, matchRI: 0x0045, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x45000000459, matchRI: 0x0046, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x45900000464, matchRI: 0x0047, match64: 0x00000000, modelSI: 0x005b, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x4690000046c, matchRI: 0x0048, match64: 0x00000000, modelSI: 0x005c, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x46c00000470, matchRI: 0x0049, match64: 0x00000000, modelSI: 0x005d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x47000000475, matchRI: 0x004a, match64: 0x00000000, modelSI: -0x0001, models64: 0x5e0000006d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4e7000004ea, matchRI: 0x004d, match64: 0x00000000, modelSI: -0x0001, models64: 0x6d0000006f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x50200000509, matchRI: 0x004e, match64: 0x00000000, modelSI: 0x006f, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x5090000050c, matchRI: 0x004f, match64: 0x00000000, modelSI: -0x0001, models64: 0x7000000072},
			deviceTuple{type64: 0x20d00000213, brand64: 0x50c00000513, matchRI: -0x0001, match64: 0x50c00000513, modelSI: -0x0001, models64: 0x7200000073},
			deviceTuple{type64: 0x51800000525, brand64: 0x51300000518, matchRI: 0x0053, match64: 0x00000000, modelSI: 0x0073, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x52d00000532, matchRI: -0x0001, match64: 0x52d00000532, modelSI: -0x0001, models64: 0x7400000075},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x53200000536, matchRI: 0x0055, match64: 0x00000000, modelSI: 0x0075, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5360000053a, matchRI: 0x0056, match64: 0x00000000, modelSI: -0x0001, models64: 0x7600000085},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5d2000005d7, matchRI: 0x0065, match64: 0x00000000, modelSI: 0x0085, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x5d7000005db, matchRI: 0x0066, match64: 0x00000000, modelSI: -0x0001, models64: 0x8600000089},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6190000061e, matchRI: 0x0068, match64: 0x00000000, modelSI: 0x0089, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x61e00000621, matchRI: 0x0069, match64: 0x00000000, modelSI: 0x008a, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x62100000624, matchRI: 0x006a, match64: 0x00000000, modelSI: -0x0001, models64: 0x8b0000008f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x64a0000064e, matchRI: 0x006f, match64: 0x00000000, modelSI: -0x0001, models64: 0x8f00000091},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x65500000659, matchRI: 0x0072, match64: 0x00000000, modelSI: 0x0091, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6590000065f, matchRI: 0x0073, match64: 0x00000000, modelSI: -0x0001, models64: 0x920000009e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6d8000006e2, matchRI: 0x0080, match64: 0x00000000, modelSI: 0x009e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6e2000006e5, matchRI: 0x0081, match64: 0x00000000, modelSI: -0x0001, models64: 0x9f000000a5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x73200000736, matchRI: 0x0086, match64: 0x00000000, modelSI: -0x0001, models64: 0xa5000000ea},
			deviceTuple{type64: 0x20d00000213, brand64: 0xa1400000a1a, matchRI: 0x00c0, match64: 0x00000000, modelSI: -0x0001, models64: 0xea000000ec},
			deviceTuple{type64: 0x20d00000213, brand64: 0xa3600000a3d, matchRI: 0x00c1, match64: 0x00000000, modelSI: -0x0001, models64: 0xec000000ee},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa4a00000a4f, matchRI: 0x00c4, match64: 0x00000000, modelSI: -0x0001, models64: 0xee00000100},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xac000000ac7, matchRI: 0x00d2, match64: 0x00000000, modelSI: -0x0001, models64: 0x10000000106},
			deviceTuple{type64: 0x20d00000213, brand64: 0xb0300000b10, matchRI: 0x00d8, match64: 0x00000000, modelSI: 0x0106, models64: 0x00000000},
			deviceTuple{type64: 0xb1700000b1e, brand64: 0xb1000000b17, matchRI: 0x00d9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1070000010b},
			deviceTuple{type64: 0x20d00000213, brand64: 0xb4200000b47, matchRI: 0x00de, match64: 0x00000000, modelSI: -0x0001, models64: 0x10b0000011e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc8b00000c90, matchRI: -0x0001, match64: 0xc9000000c95, modelSI: -0x0001, models64: 0x11e0000011f},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0xc9b00000ca2, matchRI: 0x00e9, match64: 0x00000000, modelSI: 0x011f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xca200000ca8, matchRI: 0x00ea, match64: 0x00000000, modelSI: -0x0001, models64: 0x12000000121},
			deviceTuple{type64: 0x2700000027, brand64: 0xcb200000cb8, matchRI: 0x00ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x12100000122},
			deviceTuple{type64: 0x20d00000213, brand64: 0xccb00000cd0, matchRI: 0x00ed, match64: 0x00000000, modelSI: 0x0122, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcd000000cd4, matchRI: 0x00ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x12300000129},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcf500000cf9, matchRI: 0x00f4, match64: 0x00000000, modelSI: -0x0001, models64: 0x12900000134},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd5300000d57, matchRI: 0x00fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x13400000138},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd7300000d7a, matchRI: 0x0100, match64: 0x00000000, modelSI: -0x0001, models64: 0x13800000202},
			deviceTuple{type64: 0x20d00000213, brand64: 0x19090000190e, matchRI: 0x0180, match64: 0x00000000, modelSI: 0x0202, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x190e00001916, matchRI: 0x0181, match64: 0x00000000, modelSI: -0x0001, models64: 0x20300000206},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x191d00001925, matchRI: 0x0185, match64: 0x00000000, modelSI: -0x0001, models64: 0x20600000207},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x19250000192c, matchRI: 0x0187, match64: 0x00000000, modelSI: -0x0001, models64: 0x20700000211},
			deviceTuple{type64: 0x20d00000213, brand64: 0x199000001999, matchRI: 0x018d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2110000021f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a0200001a09, matchRI: 0x019b, match64: 0x00000000, modelSI: -0x0001, models64: 0x21f00000274},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f6c00001f75, matchRI: 0x01be, match64: 0x00000000, modelSI: -0x0001, models64: 0x2740000027e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x204e00002052, matchRI: 0x01c1, match64: 0x00000000, modelSI: -0x0001, models64: 0x27e00000280},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x205200002058, matchRI: 0x01c4, match64: 0x00000000, modelSI: -0x0001, models64: 0x28000000282},
			deviceTuple{type64: 0x20d00000213, brand64: 0x20580000205e, matchRI: 0x01c7, match64: 0x00000000, modelSI: -0x0001, models64: 0x282000002ae},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x23770000237d, matchRI: 0x01e8, match64: 0x00000000, modelSI: 0x02ae, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x237d00002382, matchRI: 0x01e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x2af000002b1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x239e000023a2, matchRI: 0x01ea, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b1000002b8},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23d9000023df, matchRI: 0x01ef, match64: 0x00000000, modelSI: 0x02b8, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x23df000023e8, matchRI: 0x01f0, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b9000002bb},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23ef000023f4, matchRI: 0x01f3, match64: 0x00000000, modelSI: 0x02bb, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x240300002407, matchRI: 0x01f4, match64: 0x00000000, modelSI: 0x02bc, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x24070000240c, matchRI: 0x01f5, match64: 0x00000000, modelSI: 0x02bd, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x240c00002410, matchRI: 0x01f6, match64: 0x00000000, modelSI: 0x02be, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x241000002415, matchRI: 0x01f7, match64: 0x00000000, modelSI: -0x0001, models64: 0x2bf000002c4},
			deviceTuple{type64: 0x2700000027, brand64: 0x243d00002442, matchRI: 0x01fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c400000398},
			deviceTuple{type64: 0x20d00000213, brand64: 0x31260000312e, matchRI: -0x0001, match64: 0x31260000312e, modelSI: -0x0001, models64: 0x3980000039c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xe7000000ed, matchRI: 0x02cc, match64: 0x00000000, modelSI: -0x0001, models64: 0x39c000003b8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x32e8000032f3, matchRI: -0x0001, match64: 0x32e8000032f3, modelSI: -0x0001, models64: 0x3b8000003bc},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x33290000332c, matchRI: 0x02e1, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bc000003c5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x338000003388, matchRI: 0x02eb, match64: 0x00000000, modelSI: 0x03c5, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x33880000338e, matchRI: 0x02ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c6000003e4},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x34c7000034ce, matchRI: 0x02f2, match64: 0x00000000, modelSI: 0x03e4, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x34ce000034d3, matchRI: 0x02f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x3e5000003f0},
			deviceTuple{type64: 0x20d00000213, brand64: 0x34fe00003506, matchRI: 0x02ff, match64: 0x00000000, modelSI: -0x0001, models64: 0x3f0000003f3},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x351300003518, matchRI: 0x0303, match64: 0x00000000, modelSI: -0x0001, models64: 0x3f3000003f4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x352200003528, matchRI: 0x0305, match64: 0x00000000, modelSI: -0x0001, models64: 0x3f4000003f6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x352f00003532, matchRI: 0x0308, match64: 0x00000000, modelSI: -0x0001, models64: 0x3f6000003f8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x353a00003540, matchRI: 0x030b, match64: 0x00000000, modelSI: -0x0001, models64: 0x3f8000003fb},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x354a00003553, matchRI: 0x030f, match64: 0x00000000, modelSI: -0x0001, models64: 0x3fb00000411},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x35d4000035d9, matchRI: 0x0326, match64: 0x00000000, modelSI: 0x0411, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x35d9000035dd, matchRI: 0x0327, match64: 0x00000000, modelSI: -0x0001, models64: 0x41200000488},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3c0400003c0a, matchRI: 0x0393, match64: 0x00000000, modelSI: -0x0001, models64: 0x48800000489},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x3c0a00003c1b, matchRI: -0x0001, match64: 0x3c1b00003c22, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x3c2200003c26, matchRI: 0x0395, match64: 0x00000000, modelSI: 0x0489, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3c2600003c2c, matchRI: 0x0396, match64: 0x00000000, modelSI: 0x048a, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3c2c00003c31, matchRI: 0x0397, match64: 0x00000000, modelSI: 0x048b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3c3100003c39, matchRI: 0x0398, match64: 0x00000000, modelSI: -0x0001, models64: 0x48c00000490},
			deviceTuple{type64: 0x245800002460, brand64: 0x3c3f00003c44, matchRI: 0x039d, match64: 0x00000000, modelSI: -0x0001, models64: 0x49000000491},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x3c4400003c49, matchRI: 0x039f, match64: 0x00000000, modelSI: 0x0491, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3c5500003c5b, matchRI: 0x03a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x49200000494},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3c6f00003c74, matchRI: 0x03a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x49400000499},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3cb700003cbb, matchRI: 0x03a6, match64: 0x00000000, modelSI: -0x0001, models64: 0x4990000049a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3cbb00003cc0, matchRI: 0x03a8, match64: 0x00000000, modelSI: -0x0001, models64: 0x49a0000049e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3cf300003cf9, matchRI: 0x03ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x49e0000049f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3d0000003d0c, matchRI: 0x03ae, match64: 0x00000000, modelSI: -0x0001, models64: 0x49f000004a9},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x3d7f00003d83, matchRI: 0x03b5, match64: 0x00000000, modelSI: -0x0001, models64: 0x4a9000004ab},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3d9000003d96, matchRI: -0x0001, match64: 0x3d9600003d9c, modelSI: -0x0001, models64: 0x4ab000004ac},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3da500003da9, matchRI: 0x03b9, match64: 0x00000000, modelSI: 0x04ac, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3da900003db2, matchRI: 0x03ba, match64: 0x00000000, modelSI: -0x0001, models64: 0x4ad000004b8},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x3ea600003ea9, matchRI: 0x03c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x4b8000004bb},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3ecb00003ece, matchRI: 0x03ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x4bb000004bf},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3ee100003ee4, matchRI: 0x03ce, match64: 0x00000000, modelSI: -0x0001, models64: 0x4bf000004c1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3efd00003f06, matchRI: -0x0001, match64: 0x3f0600003f0f, modelSI: 0x04c1, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3f0f00003f12, matchRI: 0x03cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x4c2000004c7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3f3300003f38, matchRI: 0x03d3, match64: 0x00000000, modelSI: -0x0001, models64: 0x4c7000004c8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3f3800003f3d, matchRI: 0x03d5, match64: 0x00000000, modelSI: 0x04c8, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3f3d00003f41, matchRI: 0x03d6, match64: 0x00000000, modelSI: -0x0001, models64: 0x4c9000004cb},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3f5800003f5c, matchRI: 0x03d9, match64: 0x00000000, modelSI: -0x0001, models64: 0x4cb000004cd},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3f5c00003f61, matchRI: 0x03dc, match64: 0x00000000, modelSI: 0x04cd, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3f6100003f65, matchRI: 0x03dd, match64: 0x00000000, modelSI: 0x04ce, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3f6500003f6e, matchRI: 0x03de, match64: 0x00000000, modelSI: -0x0001, models64: 0x4cf000004d0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3f7500003f7d, matchRI: 0x03e0, match64: 0x00000000, modelSI: 0x04d0, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x3f7d00003f8b, matchRI: 0x03e1, match64: 0x00000000, modelSI: -0x0001, models64: 0x4d1000004d4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3f9200003f98, matchRI: 0x03e5, match64: 0x00000000, modelSI: -0x0001, models64: 0x4d4000004d6},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x3fa300003fa9, matchRI: 0x03e8, match64: 0x00000000, modelSI: 0x04d6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x3fa900003fb0, matchRI: 0x03e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x4d7000004e2},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x3ff400003ffb, matchRI: 0x03f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x4e2000004e8},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x40250000402b, matchRI: 0x03fa, match64: 0x00000000, modelSI: 0x04e8, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x402b00004031, matchRI: 0x03fb, match64: 0x00000000, modelSI: 0x04e9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x40310000403a, matchRI: 0x03fc, match64: 0x00000000, modelSI: 0x04ea, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x40470000404b, matchRI: 0x03fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x4eb000004ed},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x404b00004057, matchRI: 0x0400, match64: 0x00000000, modelSI: 0x04ed, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x40570000405d, matchRI: 0x0401, match64: 0x00000000, modelSI: -0x0001, models64: 0x4ee000004f0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x406300004068, matchRI: 0x0404, match64: 0x00000000, modelSI: -0x0001, models64: 0x4f0000004f3},
			deviceTuple{type64: 0x20d00000213, brand64: 0x40830000408a, matchRI: 0x0405, match64: 0x00000000, modelSI: 0x04f3, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x408a0000408f, matchRI: 0x0406, match64: 0x00000000, modelSI: -0x0001, models64: 0x4f4000004f6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x40a1000040a7, matchRI: 0x0408, match64: 0x00000000, modelSI: -0x0001, models64: 0x4f6000004f9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x40c6000040cc, matchRI: 0x040b, match64: 0x00000000, modelSI: 0x04f9, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x40cc000040d2, matchRI: 0x040c, match64: 0x00000000, modelSI: 0x04fa, models64: 0x00000000},
			deviceTuple{type64: 0x9d7000009de, brand64: 0x40dd000040e6, matchRI: 0x040d, match64: 0x00000000, modelSI: 0x04fb, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x40f4000040fb, matchRI: 0x040e, match64: 0x00000000, modelSI: 0x04fc, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x41070000410d, matchRI: 0x040f, match64: 0x00000000, modelSI: 0x04fd, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x410d00004116, matchRI: 0x0410, match64: 0x00000000, modelSI: -0x0001, models64: 0x4fe00000500},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x413100004135, matchRI: 0x0412, match64: 0x00000000, modelSI: -0x0001, models64: 0x50000000502},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x41350000413a, matchRI: 0x0415, match64: 0x00000000, modelSI: -0x0001, models64: 0x50200000505},
			deviceTuple{type64: 0x20d00000213, brand64: 0x413f00004146, matchRI: 0x0419, match64: 0x00000000, modelSI: -0x0001, models64: 0x50500000508},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x41650000416c, matchRI: -0x0001, match64: 0x41650000416c, modelSI: -0x0001, models64: 0x50800000509},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x417a0000417e, matchRI: 0x041e, match64: 0x00000000, modelSI: 0x0509, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x418700004191, matchRI: 0x041f, match64: 0x00000000, modelSI: 0x050a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x41910000419a, matchRI: 0x0420, match64: 0x00000000, modelSI: -0x0001, models64: 0x50b0000051c},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x42530000425b, matchRI: 0x0425, match64: 0x00000000, modelSI: 0x051c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x426000004269, matchRI: 0x0426, match64: 0x00000000, modelSI: -0x0001, models64: 0x51d00000533},
			deviceTuple{type64: 0x20d00000213, brand64: 0x42e8000042f1, matchRI: 0x0439, match64: 0x00000000, modelSI: -0x0001, models64: 0x53300000543},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa3100000a36, matchRI: 0x0445, match64: 0x00000000, modelSI: -0x0001, models64: 0x54300000545},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x43d7000043dc, matchRI: 0x0447, match64: 0x00000000, modelSI: 0x0545, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x43dc000043e0, matchRI: 0x0448, match64: 0x00000000, modelSI: -0x0001, models64: 0x5460000054a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x443e00004441, matchRI: 0x044a, match64: 0x00000000, modelSI: -0x0001, models64: 0x54a0000059d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x48720000487a, matchRI: 0x0470, match64: 0x00000000, modelSI: 0x059d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x488f00004895, matchRI: 0x0471, match64: 0x00000000, modelSI: -0x0001, models64: 0x59e000005aa},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x48e6000048ed, matchRI: 0x0478, match64: 0x00000000, modelSI: 0x05aa, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x48f2000048fa, matchRI: 0x0479, match64: 0x00000000, modelSI: 0x05ab, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x48fa00004901, matchRI: 0x047a, match64: 0x00000000, modelSI: -0x0001, models64: 0x5ac000005ae},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x490100004909, matchRI: -0x0001, match64: 0x490900004911, modelSI: -0x0001, models64: 0x5ae000005af},
			deviceTuple{type64: 0x20d00000213, brand64: 0x49130000491b, matchRI: 0x047d, match64: 0x00000000, modelSI: -0x0001, models64: 0x5af000005b4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x496900004970, matchRI: 0x047f, match64: 0x00000000, modelSI: -0x0001, models64: 0x5b4000005c1},
			deviceTuple{type64: 0x20d00000213, brand64: 0x49cf000049d6, matchRI: 0x0489, match64: 0x00000000, modelSI: 0x05c1, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x49dc000049e1, matchRI: 0x048a, match64: 0x00000000, modelSI: 0x05c2, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x49ea000049f1, matchRI: 0x048b, match64: 0x00000000, modelSI: 0x05c3, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x49f1000049f6, matchRI: 0x048c, match64: 0x00000000, modelSI: -0x0001, models64: 0x5c4000005c7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4a0b00004a10, matchRI: 0x048f, match64: 0x00000000, modelSI: -0x0001, models64: 0x5c7000005ca},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4a1000004a19, matchRI: 0x0493, match64: 0x00000000, modelSI: -0x0001, models64: 0x5ca000005cc},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4a3a00004a40, matchRI: 0x0494, match64: 0x00000000, modelSI: 0x05cc, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4a4000004a46, matchRI: 0x0495, match64: 0x00000000, modelSI: -0x0001, models64: 0x5cd000005ee},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x4c0300004c0d, matchRI: -0x0001, match64: 0x4c0300004c0d, modelSI: -0x0001, models64: 0x5ee000005ef},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4c0d00004c15, matchRI: -0x0001, match64: 0x4c1500004c1a, modelSI: -0x0001, models64: 0x5ef000005f0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4c2a00004c30, matchRI: 0x04a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x5f0000005fc},
			deviceTuple{type64: 0x20d00000213, brand64: 0x4cd500004cde, matchRI: 0x04ae, match64: 0x00000000, modelSI: 0x05fc, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4cde00004ce3, matchRI: 0x04af, match64: 0x00000000, modelSI: -0x0001, models64: 0x5fd00000600},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4d1d00004d21, matchRI: 0x04b2, match64: 0x00000000, modelSI: -0x0001, models64: 0x60000000607},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x4d6800004d6e, matchRI: 0x04b8, match64: 0x00000000, modelSI: 0x0607, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4d6e00004d77, matchRI: 0x04b9, match64: 0x00000000, modelSI: -0x0001, models64: 0x6080000060c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4dba00004dbe, matchRI: -0x0001, match64: 0x4dbe00004dc3, modelSI: -0x0001, models64: 0x60c0000060e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4dcd00004dd6, matchRI: 0x04bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x60e00000613},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4e0800004e0b, matchRI: 0x04c1, match64: 0x00000000, modelSI: 0x0613, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4e0b00004e15, matchRI: 0x04c2, match64: 0x00000000, modelSI: 0x0614, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x4e1500004e1d, matchRI: 0x04c3, match64: 0x00000000, modelSI: -0x0001, models64: 0x61500000616},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4e2c00004e30, matchRI: 0x04c4, match64: 0x00000000, modelSI: -0x0001, models64: 0x6160000061c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x4e5000004e56, matchRI: 0x04cb, match64: 0x00000000, modelSI: -0x0001, models64: 0x61c0000061d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4e6a00004e6f, matchRI: 0x04cc, match64: 0x00000000, modelSI: -0x0001, models64: 0x61d00000640},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x502a0000502e, matchRI: 0x04dd, match64: 0x00000000, modelSI: 0x0640, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x502e00005035, matchRI: 0x04de, match64: 0x00000000, modelSI: -0x0001, models64: 0x64100000644},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x50420000504f, matchRI: 0x04e1, match64: 0x00000000, modelSI: 0x0644, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x50570000505e, matchRI: 0x04e2, match64: 0x00000000, modelSI: 0x0645, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x505e00005065, matchRI: 0x04e3, match64: 0x00000000, modelSI: 0x0646, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x50650000506c, matchRI: 0x04e4, match64: 0x00000000, modelSI: 0x0647, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x50720000507f, matchRI: -0x0001, match64: 0x507f0000508f, modelSI: 0x0648, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x509a000050a3, matchRI: 0x04e5, match64: 0x00000000, modelSI: -0x0001, models64: 0x6490000064c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x50bd000050c2, matchRI: 0x04e8, match64: 0x00000000, modelSI: -0x0001, models64: 0x64c0000064f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x50f4000050fa, matchRI: 0x04ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x64f00000657},
			deviceTuple{type64: 0x20d00000213, brand64: 0x513100005134, matchRI: 0x04f4, match64: 0x00000000, modelSI: -0x0001, models64: 0x6570000065f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x51490000514f, matchRI: 0x04fa, match64: 0x00000000, modelSI: -0x0001, models64: 0x65f00000669},
			deviceTuple{type64: 0x20d00000213, brand64: 0x52050000520b, matchRI: 0x0501, match64: 0x00000000, modelSI: -0x0001, models64: 0x6690000066e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x524f00005255, matchRI: 0x0503, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x52550000525b, matchRI: 0x0504, match64: 0x00000000, modelSI: -0x0001, models64: 0x66e0000067a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x52a5000052ab, matchRI: 0x050e, match64: 0x00000000, modelSI: -0x0001, models64: 0x67a0000067e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x52ca000052d4, matchRI: 0x0512, match64: 0x00000000, modelSI: -0x0001, models64: 0x67e00000681},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x52fc00005304, matchRI: 0x0514, match64: 0x00000000, modelSI: -0x0001, models64: 0x68100000684},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x531900005322, matchRI: 0x0518, match64: 0x00000000, modelSI: -0x0001, models64: 0x68400000687},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x533b00005342, matchRI: 0x051a, match64: 0x00000000, modelSI: -0x0001, models64: 0x6870000068d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x534f00005357, matchRI: 0x0521, match64: 0x00000000, modelSI: -0x0001, models64: 0x68d0000068e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x535700005360, matchRI: 0x0523, match64: 0x00000000, modelSI: -0x0001, models64: 0x68e00000694},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x537e0000538b, matchRI: 0x0528, match64: 0x00000000, modelSI: -0x0001, models64: 0x694000006c8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x568500005691, matchRI: 0x0545, match64: 0x00000000, modelSI: -0x0001, models64: 0x6c8000006da},
			deviceTuple{type64: 0x2700000027, brand64: 0x57e9000057f3, matchRI: 0x0548, match64: 0x00000000, modelSI: -0x0001, models64: 0x6da000006db},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x57fd00005809, matchRI: 0x054a, match64: 0x00000000, modelSI: -0x0001, models64: 0x6db000006e0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x582a00005837, matchRI: 0x054c, match64: 0x00000000, modelSI: -0x0001, models64: 0x6e0000006e5},
			deviceTuple{type64: 0x20d00000213, brand64: 0x589f000058a4, matchRI: 0x054d, match64: 0x00000000, modelSI: -0x0001, models64: 0x6e5000006fd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x59450000594e, matchRI: 0x0566, match64: 0x00000000, modelSI: 0x06fd, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x594e00005956, matchRI: 0x0567, match64: 0x00000000, modelSI: 0x06fe, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x59560000595e, matchRI: 0x0568, match64: 0x00000000, modelSI: -0x0001, models64: 0x6ff00000702},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x596900005970, matchRI: 0x056c, match64: 0x00000000, modelSI: -0x0001, models64: 0x70200000706},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x59950000599f, matchRI: -0x0001, match64: 0x59950000599f, modelSI: -0x0001, models64: 0x70600000707},
			deviceTuple{type64: 0x20d00000213, brand64: 0x599f000059a9, matchRI: 0x056f, match64: 0x00000000, modelSI: -0x0001, models64: 0x7070000070d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5a0400005a09, matchRI: 0x0573, match64: 0x00000000, modelSI: -0x0001, models64: 0x70d00000710},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5a2900005a32, matchRI: 0x0576, match64: 0x00000000, modelSI: -0x0001, models64: 0x71000000721},
			deviceTuple{type64: 0x20d00000213, brand64: 0x5afb00005b03, matchRI: 0x0584, match64: 0x00000000, modelSI: -0x0001, models64: 0x72100000723},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5b0e00005b13, matchRI: 0x0587, match64: 0x00000000, modelSI: -0x0001, models64: 0x7230000072a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x5b5800005b5b, matchRI: -0x0001, match64: 0x5b5800005b5b, modelSI: -0x0001, models64: 0x72a0000072b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5b6600005b6c, matchRI: 0x0590, match64: 0x00000000, modelSI: -0x0001, models64: 0x72b0000072e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x5b7e00005b88, matchRI: 0x0594, match64: 0x00000000, modelSI: 0x072e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5b8800005b8e, matchRI: 0x0595, match64: 0x00000000, modelSI: -0x0001, models64: 0x72f00000736},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5bbe00005bcc, matchRI: 0x059d, match64: 0x00000000, modelSI: -0x0001, models64: 0x7360000074f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5cc800005ccd, matchRI: 0x05ae, match64: 0x00000000, modelSI: -0x0001, models64: 0x74f00000753},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x5cee00005cf4, matchRI: 0x05b0, match64: 0x00000000, modelSI: 0x0753, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x5cf400005cfa, matchRI: 0x05b1, match64: 0x00000000, modelSI: -0x0001, models64: 0x75400000756},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5cfa00005d02, matchRI: 0x05b4, match64: 0x00000000, modelSI: -0x0001, models64: 0x7560000075a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x5d0c00005d15, matchRI: 0x05b9, match64: 0x00000000, modelSI: 0x075a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5d1500005d1c, matchRI: 0x05ba, match64: 0x00000000, modelSI: -0x0001, models64: 0x75b00000761},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5d7c00005d82, matchRI: 0x05bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x7610000079c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5fbe00005fc7, matchRI: 0x05eb, match64: 0x00000000, modelSI: 0x079c, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x5fd500005fdb, matchRI: 0x05ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x79d0000079f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x5ffa00006002, matchRI: 0x05ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x79f000007a1},
			deviceTuple{type64: 0x20d00000213, brand64: 0x601200006019, matchRI: 0x05f0, match64: 0x00000000, modelSI: -0x0001, models64: 0x7a1000007ab},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x609b000060a2, matchRI: 0x05fb, match64: 0x00000000, modelSI: -0x0001, models64: 0x7ab000007d5},
			deviceTuple{type64: 0x20d00000213, brand64: 0x61c7000061ce, matchRI: 0x0621, match64: 0x00000000, modelSI: 0x07d5, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x61ce000061d5, matchRI: -0x0001, match64: 0x61ce000061d5, modelSI: -0x0001, models64: 0x7d6000007d8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x61f3000061f8, matchRI: 0x0623, match64: 0x00000000, modelSI: 0x07d8, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x61f800006200, matchRI: 0x0624, match64: 0x00000000, modelSI: -0x0001, models64: 0x7d9000007dc},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x621f00006226, matchRI: 0x0626, match64: 0x00000000, modelSI: -0x0001, models64: 0x7dc000007e9},
			deviceTuple{type64: 0x20d00000213, brand64: 0x62d8000062e1, matchRI: 0x0628, match64: 0x00000000, modelSI: 0x07e9, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x62e1000062e6, matchRI: 0x0629, match64: 0x00000000, modelSI: 0x07ea, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x62ea000062f3, matchRI: 0x062a, match64: 0x00000000, modelSI: -0x0001, models64: 0x7eb000007f5},
			deviceTuple{type64: 0x20d00000213, brand64: 0x636400006369, matchRI: 0x0633, match64: 0x00000000, modelSI: -0x0001, models64: 0x7f5000007f7},
			deviceTuple{type64: 0x20d00000213, brand64: 0x638000006387, matchRI: 0x0635, match64: 0x00000000, modelSI: -0x0001, models64: 0x7f7000007f8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x63990000639d, matchRI: 0x0636, match64: 0x00000000, modelSI: -0x0001, models64: 0x7f80000080e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x646a00006472, matchRI: 0x0647, match64: 0x00000000, modelSI: -0x0001, models64: 0x80e0000080f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x64760000647b, matchRI: 0x0649, match64: 0x00000000, modelSI: -0x0001, models64: 0x80f00000813},
			deviceTuple{type64: 0x20d00000213, brand64: 0x64880000648e, matchRI: 0x064e, match64: 0x00000000, modelSI: 0x0813, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x648e00006494, matchRI: 0x064f, match64: 0x00000000, modelSI: -0x0001, models64: 0x81400000817},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x64a9000064ad, matchRI: 0x0652, match64: 0x00000000, modelSI: 0x0817, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x64ad000064b4, matchRI: 0x0653, match64: 0x00000000, modelSI: 0x0818, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x64b4000064b8, matchRI: 0x0654, match64: 0x00000000, modelSI: -0x0001, models64: 0x81900000834},
			deviceTuple{type64: 0x20d00000213, brand64: 0x659400006598, matchRI: 0x066d, match64: 0x00000000, modelSI: 0x0834, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x65980000659a, matchRI: 0x066e, match64: 0x00000000, modelSI: -0x0001, models64: 0x83500000839},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x65d3000065d8, matchRI: 0x0670, match64: 0x00000000, modelSI: -0x0001, models64: 0x8390000083a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x65e2000065e9, matchRI: 0x0672, match64: 0x00000000, modelSI: -0x0001, models64: 0x83a0000083c},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x65ed000065f5, matchRI: 0x0675, match64: 0x00000000, modelSI: 0x083c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x65f5000065fc, matchRI: -0x0001, match64: 0x65fc00006604, modelSI: -0x0001, models64: 0x83d0000083e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x660e00006612, matchRI: 0x0677, match64: 0x00000000, modelSI: 0x083e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x66120000661b, matchRI: 0x0678, match64: 0x00000000, modelSI: 0x083f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x661b0000661f, matchRI: 0x0679, match64: 0x00000000, modelSI: -0x0001, models64: 0x84000000841},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x663200006637, matchRI: 0x067a, match64: 0x00000000, modelSI: -0x0001, models64: 0x84100000847},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x666d0000666f, matchRI: 0x067e, match64: 0x00000000, modelSI: -0x0001, models64: 0x8470000084c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x66ba000066bd, matchRI: 0x0682, match64: 0x00000000, modelSI: -0x0001, models64: 0x84c00000850},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x66cb000066d2, matchRI: 0x0687, match64: 0x00000000, modelSI: 0x0850, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x66d2000066d5, matchRI: 0x0688, match64: 0x00000000, modelSI: -0x0001, models64: 0x85100000853},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x66e1000066e7, matchRI: 0x068a, match64: 0x00000000, modelSI: 0x0853, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x66e7000066f0, matchRI: 0x068b, match64: 0x00000000, modelSI: 0x0854, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x66f0000066f4, matchRI: 0x068c, match64: 0x00000000, modelSI: 0x0855, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x66f400006700, matchRI: 0x068d, match64: 0x00000000, modelSI: -0x0001, models64: 0x85600000857},
			deviceTuple{type64: 0x20d00000213, brand64: 0x670000006706, matchRI: 0x068f, match64: 0x00000000, modelSI: -0x0001, models64: 0x85700000859},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x671000006715, matchRI: 0x0692, match64: 0x00000000, modelSI: -0x0001, models64: 0x8590000085d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x67460000674f, matchRI: -0x0001, match64: 0x67460000674f, modelSI: -0x0001, models64: 0x85d0000085e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x675500006759, matchRI: 0x0696, match64: 0x00000000, modelSI: -0x0001, models64: 0x85e00000860},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x676f00006778, matchRI: 0x0698, match64: 0x00000000, modelSI: 0x0860, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x678000006788, matchRI: 0x0699, match64: 0x00000000, modelSI: 0x0861, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x67880000678e, matchRI: -0x0001, match64: 0x678e00006794, modelSI: -0x0001, models64: 0x86200000864},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x67940000679c, matchRI: 0x069c, match64: 0x00000000, modelSI: -0x0001, models64: 0x86400000866},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x67c0000067c6, matchRI: -0x0001, match64: 0x67c6000067cc, modelSI: -0x0001, models64: 0x86600000868},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x67ee000067f3, matchRI: -0x0001, match64: 0x67f3000067f8, modelSI: -0x0001, models64: 0x86800000869},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x67fa00006801, matchRI: -0x0001, match64: 0x680100006808, modelSI: 0x0869, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x681000006815, matchRI: 0x069e, match64: 0x00000000, modelSI: 0x086a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x68150000681a, matchRI: 0x069f, match64: 0x00000000, modelSI: -0x0001, models64: 0x86b0000086f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x68460000684c, matchRI: 0x06a1, match64: 0x00000000, modelSI: 0x086f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x684c00006850, matchRI: 0x06a2, match64: 0x00000000, modelSI: -0x0001, models64: 0x8700000087c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x688100006887, matchRI: 0x06ae, match64: 0x00000000, modelSI: 0x087c, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x688f00006895, matchRI: 0x06af, match64: 0x00000000, modelSI: -0x0001, models64: 0x87d00000881},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x68a1000068a6, matchRI: -0x0001, match64: 0x68a1000068a6, modelSI: -0x0001, models64: 0x88100000883},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x68a6000068ac, matchRI: 0x06b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x88300000885},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x68ac000068b1, matchRI: 0x06b9, match64: 0x00000000, modelSI: 0x0885, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x68b1000068b5, matchRI: 0x06ba, match64: 0x00000000, modelSI: 0x0886, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x68b5000068bc, matchRI: 0x06bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x8870000088c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x68de000068e8, matchRI: 0x06bf, match64: 0x00000000, modelSI: -0x0001, models64: 0x88c0000088d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x68e8000068f0, matchRI: 0x06c1, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x68f0000068f8, matchRI: 0x06c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x88d00000890},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x68ff00006906, matchRI: 0x06c5, match64: 0x00000000, modelSI: -0x0001, models64: 0x89000000892},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x690b00006910, matchRI: 0x06c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x892000008d0},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6c6b00006c70, matchRI: 0x06e1, match64: 0x00000000, modelSI: 0x08d0, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6c7800006c7e, matchRI: 0x06e2, match64: 0x00000000, modelSI: -0x0001, models64: 0x8d1000008d3},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6c9000006c97, matchRI: 0x06e4, match64: 0x00000000, modelSI: 0x08d3, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6c9700006c9b, matchRI: 0x06e5, match64: 0x00000000, modelSI: 0x08d4, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6c9b00006ca3, matchRI: -0x0001, match64: 0x6c9b00006ca3, modelSI: -0x0001, models64: 0x8d5000008d6},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6cad00006cb4, matchRI: 0x06e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x8d6000008d9},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x6cc600006ccc, matchRI: 0x06eb, match64: 0x00000000, modelSI: -0x0001, models64: 0x8d9000008dd},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6ccc00006cd3, matchRI: 0x06f0, match64: 0x00000000, modelSI: 0x08dd, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6cd300006cda, matchRI: 0x06f1, match64: 0x00000000, modelSI: 0x08de, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6cda00006ce0, matchRI: 0x06f2, match64: 0x00000000, modelSI: 0x08df, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6ce000006ce6, matchRI: 0x06f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x8e00000090a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6e9b00006ea1, matchRI: 0x070a, match64: 0x00000000, modelSI: 0x090a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6ea300006ea7, matchRI: 0x070b, match64: 0x00000000, modelSI: -0x0001, models64: 0x90b0000090f},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x6eb900006ebe, matchRI: 0x0710, match64: 0x00000000, modelSI: 0x090f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6ebe00006ec4, matchRI: -0x0001, match64: 0x6ec400006ecb, modelSI: -0x0001, models64: 0x91000000912},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6ed000006ed4, matchRI: 0x0713, match64: 0x00000000, modelSI: -0x0001, models64: 0x91200000916},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6edc00006ee8, matchRI: 0x0718, match64: 0x00000000, modelSI: -0x0001, models64: 0x91600000919},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6f0200006f0b, matchRI: 0x071a, match64: 0x00000000, modelSI: 0x0919, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6f0b00006f13, matchRI: 0x071b, match64: 0x00000000, modelSI: 0x091a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6f1300006f1c, matchRI: 0x071c, match64: 0x00000000, modelSI: -0x0001, models64: 0x91b0000091c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6f2200006f28, matchRI: 0x071e, match64: 0x00000000, modelSI: 0x091c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6f2800006f2c, matchRI: 0x071f, match64: 0x00000000, modelSI: 0x091d, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6f3400006f3b, matchRI: 0x0720, match64: 0x00000000, modelSI: -0x0001, models64: 0x91e00000921},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6f4200006f4a, matchRI: 0x0724, match64: 0x00000000, modelSI: 0x0921, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6f4a00006f50, matchRI: 0x0725, match64: 0x00000000, modelSI: 0x0922, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6f5000006f56, matchRI: 0x0726, match64: 0x00000000, modelSI: -0x0001, models64: 0x92300000927},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6f6c00006f73, matchRI: 0x072a, match64: 0x00000000, modelSI: -0x0001, models64: 0x92700000929},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6f8a00006f8f, matchRI: 0x072d, match64: 0x00000000, modelSI: -0x0001, models64: 0x9290000092d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6fa300006fa7, matchRI: 0x0732, match64: 0x00000000, modelSI: 0x092d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6fa700006fac, matchRI: -0x0001, match64: 0x6fa700006fac, modelSI: -0x0001, models64: 0x92e00000930},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6fac00006fb0, matchRI: 0x0735, match64: 0x00000000, modelSI: 0x0930, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6fb000006fb4, matchRI: 0x0736, match64: 0x00000000, modelSI: -0x0001, models64: 0x93100000934},
			deviceTuple{type64: 0x20d00000213, brand64: 0x6fc500006fc8, matchRI: 0x073a, match64: 0x00000000, modelSI: -0x0001, models64: 0x93400000938},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6fda00006fdc, matchRI: 0x073f, match64: 0x00000000, modelSI: -0x0001, models64: 0x9380000093b},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x6fe000006fe3, matchRI: 0x0743, match64: 0x00000000, modelSI: 0x093b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6fe300006fe6, matchRI: -0x0001, match64: 0x6fe600006fee, modelSI: -0x0001, models64: 0x93c0000093d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x6ff300006ff9, matchRI: 0x0744, match64: 0x00000000, modelSI: -0x0001, models64: 0x93d0000093e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x70090000700c, matchRI: 0x0745, match64: 0x00000000, modelSI: -0x0001, models64: 0x93e00000942},
			deviceTuple{type64: 0x20d00000213, brand64: 0x703400007037, matchRI: 0x0749, match64: 0x00000000, modelSI: -0x0001, models64: 0x94200000944},
			deviceTuple{type64: 0x245800002460, brand64: 0x703c00007041, matchRI: 0x074c, match64: 0x00000000, modelSI: 0x0944, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x704c00007052, matchRI: 0x074d, match64: 0x00000000, modelSI: 0x0945, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x705200007056, matchRI: 0x074e, match64: 0x00000000, modelSI: 0x0946, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x705c00007061, matchRI: 0x074f, match64: 0x00000000, modelSI: -0x0001, models64: 0x94700000949},
			deviceTuple{type64: 0x20d00000213, brand64: 0x706b0000706f, matchRI: 0x0752, match64: 0x00000000, modelSI: -0x0001, models64: 0x9490000094b},
			deviceTuple{type64: 0x20d00000213, brand64: 0x709d000070a3, matchRI: 0x0753, match64: 0x00000000, modelSI: 0x094b, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x70a3000070a6, matchRI: 0x0754, match64: 0x00000000, modelSI: 0x094c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x70a6000070a9, matchRI: 0x0755, match64: 0x00000000, modelSI: 0x094d, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x70a9000070ae, matchRI: 0x0756, match64: 0x00000000, modelSI: 0x094e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x70ae000070b5, matchRI: 0x0757, match64: 0x00000000, modelSI: -0x0001, models64: 0x94f00000951},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x70bf000070cb, matchRI: 0x075a, match64: 0x00000000, modelSI: -0x0001, models64: 0x95100000956},
			deviceTuple{type64: 0x20d00000213, brand64: 0x710800007110, matchRI: 0x075e, match64: 0x00000000, modelSI: 0x0956, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x71100000711c, matchRI: 0x075f, match64: 0x00000000, modelSI: -0x0001, models64: 0x95700000959},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x712b00007132, matchRI: 0x0761, match64: 0x00000000, modelSI: 0x0959, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x713d00007148, matchRI: 0x0762, match64: 0x00000000, modelSI: 0x095a, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x71480000714e, matchRI: 0x0763, match64: 0x00000000, modelSI: -0x0001, models64: 0x95b0000095f},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x71a4000071ab, matchRI: -0x0001, match64: 0x71ab000071b0, modelSI: 0x095f, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x71c1000071c9, matchRI: 0x0768, match64: 0x00000000, modelSI: -0x0001, models64: 0x96000000962},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x71c9000071d1, matchRI: 0x076b, match64: 0x00000000, modelSI: -0x0001, models64: 0x96200000973},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x72240000722b, matchRI: 0x077d, match64: 0x00000000, modelSI: -0x0001, models64: 0x97300000976},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x723e0000724a, matchRI: 0x0781, match64: 0x00000000, modelSI: 0x0976, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x724a0000724f, matchRI: 0x0782, match64: 0x00000000, modelSI: -0x0001, models64: 0x9770000097a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x72660000726c, matchRI: 0x0786, match64: 0x00000000, modelSI: 0x097a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x726c00007273, matchRI: 0x0787, match64: 0x00000000, modelSI: -0x0001, models64: 0x97b0000097d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x728000007289, matchRI: 0x0789, match64: 0x00000000, modelSI: -0x0001, models64: 0x97d00000984},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x72df000072ec, matchRI: 0x0790, match64: 0x00000000, modelSI: -0x0001, models64: 0x98400000988},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x732300007328, matchRI: 0x0794, match64: 0x00000000, modelSI: 0x0988, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x73280000732c, matchRI: 0x0795, match64: 0x00000000, modelSI: 0x0989, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x732c00007332, matchRI: 0x0796, match64: 0x00000000, modelSI: 0x098a, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x733b00007342, matchRI: 0x0797, match64: 0x00000000, modelSI: 0x098b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x735000007356, matchRI: 0x0798, match64: 0x00000000, modelSI: -0x0001, models64: 0x98c0000098e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x736c00007370, matchRI: 0x0799, match64: 0x00000000, modelSI: 0x098e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x737000007378, matchRI: 0x079a, match64: 0x00000000, modelSI: -0x0001, models64: 0x98f000009a8},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x74960000749b, matchRI: 0x079b, match64: 0x00000000, modelSI: 0x09a8, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x74ae000074b5, matchRI: 0x079c, match64: 0x00000000, modelSI: 0x09a9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x74b9000074bd, matchRI: 0x079d, match64: 0x00000000, modelSI: -0x0001, models64: 0x9aa000009c9},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x762e00007636, matchRI: 0x07ad, match64: 0x00000000, modelSI: -0x0001, models64: 0x9c9000009cb},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x763a0000763f, matchRI: 0x07b0, match64: 0x00000000, modelSI: 0x09cb, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x763f00007646, matchRI: 0x07b1, match64: 0x00000000, modelSI: 0x09cc, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x76460000764f, matchRI: 0x07b2, match64: 0x00000000, modelSI: -0x0001, models64: 0x9cd000009ce},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x76530000765d, matchRI: 0x07b3, match64: 0x00000000, modelSI: -0x0001, models64: 0x9ce000009d1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x767a0000767e, matchRI: -0x0001, match64: 0x767a0000767e, modelSI: -0x0001, models64: 0x9d1000009d3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x767e00007685, matchRI: 0x07b9, match64: 0x00000000, modelSI: -0x0001, models64: 0x9d3000009d5},
			deviceTuple{type64: 0x20d00000213, brand64: 0x76850000768d, matchRI: 0x07bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x9d5000009d6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x76ba000076c2, matchRI: 0x07bd, match64: 0x00000000, modelSI: -0x0001, models64: 0x9d6000009da},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x76db000076e3, matchRI: 0x07c1, match64: 0x00000000, modelSI: -0x0001, models64: 0x9da000009e3},
			deviceTuple{type64: 0x20d00000213, brand64: 0x771a00007721, matchRI: 0x07ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x9e3000009e4},
			deviceTuple{type64: 0x20d00000213, brand64: 0x772e00007734, matchRI: 0x07cc, match64: 0x00000000, modelSI: 0x09e4, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x773b00007742, matchRI: 0x07cd, match64: 0x00000000, modelSI: -0x0001, models64: 0x9e5000009ed},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x77870000778d, matchRI: 0x07d5, match64: 0x00000000, modelSI: -0x0001, models64: 0x9ed000009f0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x77ae000077b5, matchRI: 0x07d7, match64: 0x00000000, modelSI: -0x0001, models64: 0x9f0000009f8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x784300007847, matchRI: 0x07dd, match64: 0x00000000, modelSI: 0x09f8, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x784700007850, matchRI: 0x07de, match64: 0x00000000, modelSI: -0x0001, models64: 0x9f9000009ff},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x78f2000078fa, matchRI: 0x07df, match64: 0x00000000, modelSI: -0x0001, models64: 0x9ff00000a01},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x790b00007911, matchRI: 0x07e2, match64: 0x00000000, modelSI: 0x0a01, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x791100007917, matchRI: 0x07e3, match64: 0x00000000, modelSI: -0x0001, models64: 0xa0200000a1d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x79ed000079f3, matchRI: 0x07fc, match64: 0x00000000, modelSI: -0x0001, models64: 0xa1d00000a1f},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x7a0c00007a10, matchRI: 0x07fe, match64: 0x00000000, modelSI: 0x0a1f, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x7a1000007a14, matchRI: 0x07ff, match64: 0x00000000, modelSI: -0x0001, models64: 0xa2000000a22},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7a1800007a1a, matchRI: 0x0802, match64: 0x00000000, modelSI: 0x0a22, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7a1a00007a1e, matchRI: 0x0803, match64: 0x00000000, modelSI: -0x0001, models64: 0xa2300000a25},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7a2300007a2c, matchRI: 0x0806, match64: 0x00000000, modelSI: -0x0001, models64: 0xa2500000a2c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7a9300007a99, matchRI: 0x0808, match64: 0x00000000, modelSI: 0x0a2c, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7a9900007aa6, matchRI: 0x0809, match64: 0x00000000, modelSI: 0x0a2d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7aae00007ab3, matchRI: 0x080a, match64: 0x00000000, modelSI: 0x0a2e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7ac100007ac5, matchRI: -0x0001, match64: 0x7ac500007aca, modelSI: -0x0001, models64: 0xa2f00000a30},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7ad300007ad9, matchRI: -0x0001, match64: 0x7ad300007ad9, modelSI: -0x0001, models64: 0xa3000000a32},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7aec00007aef, matchRI: 0x080e, match64: 0x00000000, modelSI: -0x0001, models64: 0xa3200000a3b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7b7700007b7a, matchRI: 0x0810, match64: 0x00000000, modelSI: -0x0001, models64: 0xa3b00000a40},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7ba900007bac, matchRI: 0x0811, match64: 0x00000000, modelSI: -0x0001, models64: 0xa4000000a45},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7bf600007bfb, matchRI: 0x0815, match64: 0x00000000, modelSI: 0x0a45, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7bfb00007c00, matchRI: 0x0816, match64: 0x00000000, modelSI: -0x0001, models64: 0xa4600000a48},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7c0700007c0f, matchRI: 0x0819, match64: 0x00000000, modelSI: -0x0001, models64: 0xa4800000a49},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7c1300007c16, matchRI: 0x081b, match64: 0x00000000, modelSI: 0x0a49, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7c1600007c1f, matchRI: 0x081c, match64: 0x00000000, modelSI: 0x0a4a, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x7c1f00007c27, matchRI: -0x0001, match64: 0x7c2700007c2f, modelSI: 0x0a4b, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7c3800007c3f, matchRI: 0x081d, match64: 0x00000000, modelSI: -0x0001, models64: 0xa4c00000a4e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7c4700007c4d, matchRI: 0x0820, match64: 0x00000000, modelSI: 0x0a4e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7c5400007c5d, matchRI: 0x0821, match64: 0x00000000, modelSI: 0x0a4f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7c5d00007c63, matchRI: 0x0822, match64: 0x00000000, modelSI: 0x0a50, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7c6300007c69, matchRI: 0x0823, match64: 0x00000000, modelSI: -0x0001, models64: 0xa5100000a56},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7c9d00007ca3, matchRI: 0x0826, match64: 0x00000000, modelSI: 0x0a56, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7ca800007cb2, matchRI: 0x0827, match64: 0x00000000, modelSI: 0x0a57, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7cb200007cba, matchRI: 0x0828, match64: 0x00000000, modelSI: 0x0a58, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7cba00007cc3, matchRI: 0x0829, match64: 0x00000000, modelSI: 0x0a59, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7cc300007cc7, matchRI: 0x082a, match64: 0x00000000, modelSI: -0x0001, models64: 0xa5a00000a61},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7d1e00007d22, matchRI: 0x082d, match64: 0x00000000, modelSI: -0x0001, models64: 0xa6100000a6e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7df000007df4, matchRI: 0x0830, match64: 0x00000000, modelSI: -0x0001, models64: 0xa6e00000a79},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7e3f00007e46, matchRI: -0x0001, match64: 0x7e3f00007e46, modelSI: -0x0001, models64: 0xa7900000a7a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7e4600007e4f, matchRI: 0x0839, match64: 0x00000000, modelSI: -0x0001, models64: 0xa7a00000a7c},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x7e4f00007e55, matchRI: 0x083c, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7e5500007e63, matchRI: 0x083d, match64: 0x00000000, modelSI: -0x0001, models64: 0xa7c00000a99},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7fd400007fd8, matchRI: 0x085a, match64: 0x00000000, modelSI: -0x0001, models64: 0xa9900000a9b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x7fec00007fef, matchRI: 0x085b, match64: 0x00000000, modelSI: -0x0001, models64: 0xa9b00000b0b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x84560000845b, matchRI: 0x08a1, match64: 0x00000000, modelSI: -0x0001, models64: 0xb0b00000b0e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x845b00008460, matchRI: 0x08a5, match64: 0x00000000, modelSI: -0x0001, models64: 0xb0e00000b10},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x84620000846a, matchRI: 0x08a8, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1000000b12},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x84750000847c, matchRI: 0x08ab, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1200000b13},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x84860000848c, matchRI: 0x08ad, match64: 0x00000000, modelSI: 0x0b13, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x848c00008497, matchRI: 0x08ae, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1400000b1a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x84d9000084df, matchRI: 0x08b2, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1a00000b1b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x84ed000084f4, matchRI: 0x08b4, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1b00000b1c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x84ff00008504, matchRI: 0x08b6, match64: 0x00000000, modelSI: 0x0b1c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x85040000850b, matchRI: 0x08b7, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1d00000b32},
			deviceTuple{type64: 0x20d00000213, brand64: 0x862d00008633, matchRI: 0x08bf, match64: 0x00000000, modelSI: 0x0b32, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x86330000863a, matchRI: 0x08c0, match64: 0x00000000, modelSI: -0x0001, models64: 0xb3300000b65},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x893000008935, matchRI: 0x08f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x89350000893c, matchRI: 0x08f3, match64: 0x00000000, modelSI: -0x0001, models64: 0xb6500000b6a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x895c00008974, matchRI: 0x08f9, match64: 0x00000000, modelSI: 0x0b6a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x897400008979, matchRI: 0x08fa, match64: 0x00000000, modelSI: 0x0b6b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x897f00008985, matchRI: 0x08fb, match64: 0x00000000, modelSI: -0x0001, models64: 0xb6c00000b72},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x89bc000089c3, matchRI: 0x08fe, match64: 0x00000000, modelSI: -0x0001, models64: 0xb7200000b74},
			deviceTuple{type64: 0x20d00000213, brand64: 0x89d2000089d8, matchRI: 0x0901, match64: 0x00000000, modelSI: 0x0b74, models64: 0x00000000},
			deviceTuple{type64: 0x245800002460, brand64: 0x89dd000089e3, matchRI: 0x0902, match64: 0x00000000, modelSI: 0x0b75, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x89e3000089e8, matchRI: 0x0903, match64: 0x00000000, modelSI: -0x0001, models64: 0xb7600000b82},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8ab100008ab9, matchRI: 0x090c, match64: 0x00000000, modelSI: 0x0b82, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8abd00008ac3, matchRI: 0x090d, match64: 0x00000000, modelSI: 0x0b83, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8acc00008acf, matchRI: 0x090e, match64: 0x00000000, modelSI: -0x0001, models64: 0xb8400000b89},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8ae600008aee, matchRI: 0x0912, match64: 0x00000000, modelSI: -0x0001, models64: 0xb8900000ba1},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8c0400008c0b, matchRI: 0x0926, match64: 0x00000000, modelSI: -0x0001, models64: 0xba100000ba3},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x8c1d00008c24, matchRI: 0x0927, match64: 0x00000000, modelSI: 0x0ba3, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8c2400008c2c, matchRI: 0x0928, match64: 0x00000000, modelSI: 0x0ba4, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x8c2c00008c3e, matchRI: 0x0929, match64: 0x00000000, modelSI: -0x0001, models64: 0xba500000ba8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8c6800008c6d, matchRI: 0x092a, match64: 0x00000000, modelSI: 0x0ba8, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8c6d00008c78, matchRI: 0x092b, match64: 0x00000000, modelSI: -0x0001, models64: 0xba900000bac},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8c8500008c8c, matchRI: -0x0001, match64: 0x8c8c00008c93, modelSI: -0x0001, models64: 0xbac00000bad},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x8c9c00008ca1, matchRI: -0x0001, match64: 0x8ca100008ca9, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8ca900008caf, matchRI: 0x092f, match64: 0x00000000, modelSI: 0x0bad, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8caf00008cb4, matchRI: 0x0930, match64: 0x00000000, modelSI: 0x0bae, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8cb400008cbf, matchRI: 0x0931, match64: 0x00000000, modelSI: 0x0baf, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8cbf00008cc5, matchRI: 0x0932, match64: 0x00000000, modelSI: 0x0bb0, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8cc500008cd3, matchRI: 0x0933, match64: 0x00000000, modelSI: -0x0001, models64: 0xbb100000bc9},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8dd500008ddc, matchRI: 0x093b, match64: 0x00000000, modelSI: 0x0bc9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8ddc00008de2, matchRI: 0x093c, match64: 0x00000000, modelSI: -0x0001, models64: 0xbca00000bcd},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x8deb00008df1, matchRI: 0x093f, match64: 0x00000000, modelSI: 0x0bcd, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x8df100008df6, matchRI: 0x0940, match64: 0x00000000, modelSI: 0x0bce, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8df600008dfa, matchRI: 0x0941, match64: 0x00000000, modelSI: -0x0001, models64: 0xbcf00000be4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8f1900008f1e, matchRI: 0x0948, match64: 0x00000000, modelSI: 0x0be4, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x8f1e00008f23, matchRI: 0x0949, match64: 0x00000000, modelSI: -0x0001, models64: 0xbe500000be6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8f2600008f2e, matchRI: 0x094b, match64: 0x00000000, modelSI: -0x0001, models64: 0xbe600000beb},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8f5c00008f63, matchRI: 0x094f, match64: 0x00000000, modelSI: -0x0001, models64: 0xbeb00000bf5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8fab00008faf, matchRI: 0x0956, match64: 0x00000000, modelSI: -0x0001, models64: 0xbf500000bfa},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8fc100008fc7, matchRI: 0x095b, match64: 0x00000000, modelSI: -0x0001, models64: 0xbfa00000bfe},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x8fd200008fd8, matchRI: 0x0960, match64: 0x00000000, modelSI: -0x0001, models64: 0xbfe00000c1f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x90cf000090d5, matchRI: 0x0973, match64: 0x00000000, modelSI: -0x0001, models64: 0xc1f00000c22},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x90de000090e6, matchRI: 0x0977, match64: 0x00000000, modelSI: 0x0c22, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x90ed000090f5, matchRI: 0x0978, match64: 0x00000000, modelSI: -0x0001, models64: 0xc2300000c28},
			deviceTuple{type64: 0x245800002460, brand64: 0x913f00009146, matchRI: -0x0001, match64: 0x914600009152, modelSI: 0x0c28, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x91540000915e, matchRI: 0x097a, match64: 0x00000000, modelSI: -0x0001, models64: 0xc2900000c2d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x919a000091a4, matchRI: 0x097b, match64: 0x00000000, modelSI: -0x0001, models64: 0xc2d00000c32},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x91dd000091e1, matchRI: 0x097d, match64: 0x00000000, modelSI: -0x0001, models64: 0xc3200000c34},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x91e1000091e5, matchRI: 0x0980, match64: 0x00000000, modelSI: -0x0001, models64: 0xc3400000c3f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x91fd00009203, matchRI: 0x098c, match64: 0x00000000, modelSI: -0x0001, models64: 0xc3f00000c61},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x93770000937f, matchRI: 0x0998, match64: 0x00000000, modelSI: -0x0001, models64: 0xc6100000c69},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x93a3000093aa, matchRI: 0x09a1, match64: 0x00000000, modelSI: -0x0001, models64: 0xc6900000c6b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x93aa000093af, matchRI: 0x09a3, match64: 0x00000000, modelSI: 0x0c6b, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x93af000093b8, matchRI: -0x0001, match64: 0x93b8000093c1, modelSI: -0x0001, models64: 0xc6c00000c6e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x93c1000093c6, matchRI: 0x09a6, match64: 0x00000000, modelSI: 0x0c6e, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x93cd000093d7, matchRI: 0x09a7, match64: 0x00000000, modelSI: 0x0c6f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x93d7000093db, matchRI: 0x09a8, match64: 0x00000000, modelSI: -0x0001, models64: 0xc7000000c73},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x93f700009403, matchRI: 0x09aa, match64: 0x00000000, modelSI: -0x0001, models64: 0xc7300000c74},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x941000009418, matchRI: 0x09ab, match64: 0x00000000, modelSI: -0x0001, models64: 0xc7400000c75},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x94240000942a, matchRI: 0x09ad, match64: 0x00000000, modelSI: -0x0001, models64: 0xc7500000c77},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x943f00009445, matchRI: 0x09af, match64: 0x00000000, modelSI: -0x0001, models64: 0xc7700000c79},
			deviceTuple{type64: 0x20d00000213, brand64: 0x94450000944f, matchRI: 0x09b2, match64: 0x00000000, modelSI: 0x0c79, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x944f00009456, matchRI: 0x09b3, match64: 0x00000000, modelSI: -0x0001, models64: 0xc7a00000c80},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x94a5000094a9, matchRI: 0x09b7, match64: 0x00000000, modelSI: -0x0001, models64: 0xc8000000c85},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x94ce000094d6, matchRI: 0x09bd, match64: 0x00000000, modelSI: 0x0c85, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x94d6000094da, matchRI: 0x09be, match64: 0x00000000, modelSI: -0x0001, models64: 0xc8600000c87},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x94e2000094e5, matchRI: 0x09c0, match64: 0x00000000, modelSI: -0x0001, models64: 0xc8700000c8b},
			deviceTuple{type64: 0x20d00000213, brand64: 0x94fa00009500, matchRI: 0x09c5, match64: 0x00000000, modelSI: 0x0c8b, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x950000009505, matchRI: 0x09c6, match64: 0x00000000, modelSI: 0x0c8c, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x950500009508, matchRI: 0x09c7, match64: 0x00000000, modelSI: -0x0001, models64: 0xc8d00000c8e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x95160000951a, matchRI: 0x09c8, match64: 0x00000000, modelSI: -0x0001, models64: 0xc8e00000c8f},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x952000009525, matchRI: 0x09ca, match64: 0x00000000, modelSI: -0x0001, models64: 0xc8f00000c92},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x954c00009551, matchRI: 0x09cd, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x955100009555, matchRI: 0x09ce, match64: 0x00000000, modelSI: 0x0c92, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x95550000955d, matchRI: -0x0001, match64: 0x95550000955d, modelSI: -0x0001, models64: 0xc9300000c94},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x956c0000956e, matchRI: 0x09d0, match64: 0x00000000, modelSI: -0x0001, models64: 0xc9400000ca5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x96470000964a, matchRI: 0x09db, match64: 0x00000000, modelSI: -0x0001, models64: 0xca500000cfd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x993100009937, matchRI: 0x0a2b, match64: 0x00000000, modelSI: -0x0001, models64: 0xcfd00000cff},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x993b00009940, matchRI: 0x0a2e, match64: 0x00000000, modelSI: -0x0001, models64: 0xcff00000d19},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9a4c00009a52, matchRI: -0x0001, match64: 0x9a4c00009a52, modelSI: -0x0001, models64: 0xd1900000d1a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9a5a00009a60, matchRI: 0x0a3b, match64: 0x00000000, modelSI: -0x0001, models64: 0xd1a00000d1b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9a6c00009a72, matchRI: 0x0a3d, match64: 0x00000000, modelSI: -0x0001, models64: 0xd1b00000d2c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9b3500009b3d, matchRI: 0x0a4b, match64: 0x00000000, modelSI: -0x0001, models64: 0xd2c00000d2e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9b3d00009b46, matchRI: 0x0a4e, match64: 0x00000000, modelSI: -0x0001, models64: 0xd2e00000d35},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x9b7c00009b86, matchRI: 0x0a51, match64: 0x00000000, modelSI: 0x0d35, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x9b8f00009b95, matchRI: 0x0a52, match64: 0x00000000, modelSI: 0x0d36, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x9b9500009b9c, matchRI: 0x0a53, match64: 0x00000000, modelSI: 0x0d37, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9b9c00009ba1, matchRI: -0x0001, match64: 0x9b9c00009ba1, modelSI: -0x0001, models64: 0xd3800000d3a},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x9ba100009ba8, matchRI: 0x0a56, match64: 0x00000000, modelSI: 0x0d3a, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9ba800009bb0, matchRI: 0x0a57, match64: 0x00000000, modelSI: 0x0d3b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9bb600009bbb, matchRI: 0x0a58, match64: 0x00000000, modelSI: 0x0d3c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9bbb00009bc3, matchRI: 0x0a59, match64: 0x00000000, modelSI: 0x0d3d, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9bc500009bcb, matchRI: 0x0a5a, match64: 0x00000000, modelSI: 0x0d3e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9bcb00009bcd, matchRI: 0x0a5b, match64: 0x00000000, modelSI: -0x0001, models64: 0xd3f00000d46},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9c0100009c08, matchRI: 0x0a62, match64: 0x00000000, modelSI: -0x0001, models64: 0xd4600000d4b},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9c4200009c4a, matchRI: 0x0a63, match64: 0x00000000, modelSI: 0x0d4b, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9c5100009c55, matchRI: -0x0001, match64: 0x9c5500009c5a, modelSI: -0x0001, models64: 0xd4c00000d4d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9c6500009c6b, matchRI: 0x0a65, match64: 0x00000000, modelSI: -0x0001, models64: 0xd4d00000d50},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9c7400009c79, matchRI: 0x0a68, match64: 0x00000000, modelSI: -0x0001, models64: 0xd5000000d52},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x9c8900009c8f, matchRI: 0x0a6b, match64: 0x00000000, modelSI: 0x0d52, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9c8f00009c95, matchRI: 0x0a6c, match64: 0x00000000, modelSI: 0x0d53, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9c9500009c9f, matchRI: 0x0a6d, match64: 0x00000000, modelSI: -0x0001, models64: 0xd5400000d7e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x9e1a00009e23, matchRI: 0x0a94, match64: 0x00000000, modelSI: -0x0001, models64: 0xd7e00000d81},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x9e2800009e2f, matchRI: 0x0a98, match64: 0x00000000, modelSI: -0x0001, models64: 0xd8100000dbb},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xa0470000a04e, matchRI: 0x0abf, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa04e0000a054, matchRI: 0x0ac0, match64: 0x00000000, modelSI: 0x0dbb, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa0540000a05c, matchRI: 0x0ac1, match64: 0x00000000, modelSI: -0x0001, models64: 0xdbc00000dbf},
			deviceTuple{type64: 0x20d00000213, brand64: 0xa0600000a068, matchRI: 0x0ac5, match64: 0x00000000, modelSI: -0x0001, models64: 0xdbf00000dc3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa0850000a08b, matchRI: 0x0aca, match64: 0x00000000, modelSI: -0x0001, models64: 0xdc300000dc8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa0a50000a0ae, matchRI: 0x0ace, match64: 0x00000000, modelSI: -0x0001, models64: 0xdc800000dcb},
			deviceTuple{type64: 0x20d00000213, brand64: 0xa0d40000a0d9, matchRI: 0x0ad1, match64: 0x00000000, modelSI: -0x0001, models64: 0xdcb00000dce},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xa0d90000a0e1, matchRI: 0x0ad5, match64: 0x00000000, modelSI: 0x0dce, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa0e10000a0e6, matchRI: 0x0ad6, match64: 0x00000000, modelSI: -0x0001, models64: 0xdcf00000dd1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa0e60000a0f0, matchRI: 0x0ad9, match64: 0x00000000, modelSI: -0x0001, models64: 0xdd100000dd4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa1110000a117, matchRI: 0x0ada, match64: 0x00000000, modelSI: -0x0001, models64: 0xdd400000de4},
			deviceTuple{type64: 0x20d00000213, brand64: 0xa1910000a194, matchRI: 0x0ae7, match64: 0x00000000, modelSI: -0x0001, models64: 0xde400000de7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa1a90000a1af, matchRI: 0x0aeb, match64: 0x00000000, modelSI: -0x0001, models64: 0xde700000de9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa1b30000a1b9, matchRI: 0x0aee, match64: 0x00000000, modelSI: -0x0001, models64: 0xde900000dea},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa1b90000a1be, matchRI: 0x0af0, match64: 0x00000000, modelSI: -0x0001, models64: 0xdea00000dec},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xa1dd0000a1e3, matchRI: 0x0af3, match64: 0x00000000, modelSI: -0x0001, models64: 0xdec00000ffc},
			deviceTuple{type64: 0x20d00000213, brand64: 0xbbf90000bc01, matchRI: 0x0ca7, match64: 0x00000000, modelSI: -0x0001, models64: 0xffc00000ffe},
			deviceTuple{type64: 0x940000009f, brand64: 0xbc150000bc1a, matchRI: 0x0ca9, match64: 0x00000000, modelSI: 0x0ffe, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbc1a0000bc23, matchRI: 0x0caa, match64: 0x00000000, modelSI: -0x0001, models64: 0xfff00001013},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbcc20000bcc8, matchRI: 0x0caf, match64: 0x00000000, modelSI: -0x0001, models64: 0x101300001015},
			deviceTuple{type64: 0x20d00000213, brand64: 0xbcd60000bcdc, matchRI: -0x0001, match64: 0xbcdc0000bcea, modelSI: 0x1015, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbcf10000bcf7, matchRI: 0x0cb1, match64: 0x00000000, modelSI: -0x0001, models64: 0x101600001017},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbcf70000bcfe, matchRI: 0x0cb3, match64: 0x00000000, modelSI: -0x0001, models64: 0x10170000103e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbf030000bf07, matchRI: 0x0cc1, match64: 0x00000000, modelSI: -0x0001, models64: 0x103e00001040},
			deviceTuple{type64: 0x20d00000213, brand64: 0xbf1d0000bf22, matchRI: 0x0cc2, match64: 0x00000000, modelSI: 0x1040, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbf360000bf40, matchRI: 0x0cc3, match64: 0x00000000, modelSI: -0x0001, models64: 0x104100001046},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbf7e0000bf88, matchRI: 0x0cc6, match64: 0x00000000, modelSI: -0x0001, models64: 0x10460000104a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbf8d0000bf97, matchRI: 0x0ccb, match64: 0x00000000, modelSI: -0x0001, models64: 0x104a0000105d},
			deviceTuple{type64: 0x940000009f, brand64: 0xc0280000c02d, matchRI: 0x0cdf, match64: 0x00000000, modelSI: 0x105d, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0xc02d0000c030, matchRI: 0x0ce0, match64: 0x00000000, modelSI: -0x0001, models64: 0x105e00001060},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc0300000c035, matchRI: 0x0ce3, match64: 0x00000000, modelSI: -0x0001, models64: 0x106000001064},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc0600000c063, matchRI: 0x0ce5, match64: 0x00000000, modelSI: -0x0001, models64: 0x106400001067},
			deviceTuple{type64: 0x20d00000213, brand64: 0xc0700000c073, matchRI: 0x0ce9, match64: 0x00000000, modelSI: -0x0001, models64: 0x106700001069},
			deviceTuple{type64: 0x20d00000213, brand64: 0xc0840000c086, matchRI: 0x0ceb, match64: 0x00000000, modelSI: -0x0001, models64: 0x10690000106b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc09b0000c09f, matchRI: 0x0ced, match64: 0x00000000, modelSI: -0x0001, models64: 0x106b0000106c},
			deviceTuple{type64: 0x20d00000213, brand64: 0xc09f0000c0a6, matchRI: 0x0cef, match64: 0x00000000, modelSI: -0x0001, models64: 0x106c00001084},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc3040000c309, matchRI: -0x0001, match64: 0xc3090000c30f, modelSI: 0x1084, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xc30f0000c319, matchRI: 0x0cf2, match64: 0x00000000, modelSI: -0x0001, models64: 0x10850000108a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc32b0000c332, matchRI: 0x0cf8, match64: 0x00000000, modelSI: -0x0001, models64: 0x108a00001095},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc3a10000c3a7, matchRI: 0x0cfc, match64: 0x00000000, modelSI: -0x0001, models64: 0x109500001098},
			deviceTuple{type64: 0x20d00000213, brand64: 0xc3d50000c3d9, matchRI: 0x0cfe, match64: 0x00000000, modelSI: -0x0001, models64: 0x10980000109a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc3dc0000c3e0, matchRI: 0x0d01, match64: 0x00000000, modelSI: -0x0001, models64: 0x109a000010a1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc41c0000c425, matchRI: 0x0d06, match64: 0x00000000, modelSI: -0x0001, models64: 0x10a1000010a4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc4470000c44e, matchRI: -0x0001, match64: 0xc4470000c44e, modelSI: -0x0001, models64: 0x10a40000112a},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xc83d0000c844, matchRI: 0x0d8d, match64: 0x00000000, modelSI: 0x112a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc8440000c849, matchRI: 0x0d8e, match64: 0x00000000, modelSI: 0x112b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc8490000c84e, matchRI: 0x0d8f, match64: 0x00000000, modelSI: 0x112c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc84e0000c854, matchRI: 0x0d90, match64: 0x00000000, modelSI: -0x0001, models64: 0x112d00001144},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc97f0000c984, matchRI: 0x0d9c, match64: 0x00000000, modelSI: 0x1144, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0xc9840000c98e, matchRI: 0x0d9d, match64: 0x00000000, modelSI: 0x1145, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc9940000c998, matchRI: 0x0d9e, match64: 0x00000000, modelSI: -0x0001, models64: 0x114600001152},
			deviceTuple{type64: 0x20d00000213, brand64: 0xca040000ca0c, matchRI: 0x0da8, match64: 0x00000000, modelSI: -0x0001, models64: 0x11520000115a},
			deviceTuple{type64: 0x9d7000009de, brand64: 0xca8b0000ca90, matchRI: -0x0001, match64: 0xca900000ca9a, modelSI: -0x0001, models64: 0x115a0000115b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcaa00000caa5, matchRI: 0x0dab, match64: 0x00000000, modelSI: -0x0001, models64: 0x115b0000117d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcc2e0000cc34, matchRI: 0x0dcc, match64: 0x00000000, modelSI: -0x0001, models64: 0x117d0000117f},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xcc340000cc39, matchRI: 0x0dcf, match64: 0x00000000, modelSI: -0x0001, models64: 0x117f00001182},
			deviceTuple{type64: 0x20d00000213, brand64: 0xcc460000cc4b, matchRI: 0x0dd2, match64: 0x00000000, modelSI: -0x0001, models64: 0x118200001185},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcc4b0000cc4f, matchRI: 0x0dd6, match64: 0x00000000, modelSI: -0x0001, models64: 0x118500001196},
			deviceTuple{type64: 0x20d00000213, brand64: 0xcd3a0000cd42, matchRI: 0x0dde, match64: 0x00000000, modelSI: -0x0001, models64: 0x11960000119a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcd5f0000cd64, matchRI: 0x0de3, match64: 0x00000000, modelSI: 0x119a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcd640000cd67, matchRI: 0x0de4, match64: 0x00000000, modelSI: 0x119b, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xcd670000cd6b, matchRI: 0x0de5, match64: 0x00000000, modelSI: 0x119c, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xcd6b0000cd6f, matchRI: 0x0de6, match64: 0x00000000, modelSI: 0x119d, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xcd6f0000cd72, matchRI: 0x0de7, match64: 0x00000000, modelSI: -0x0001, models64: 0x119e000011a2},
			deviceTuple{type64: 0x9d7000009de, brand64: 0xcd8b0000cd8f, matchRI: 0x0deb, match64: 0x00000000, modelSI: -0x0001, models64: 0x11a2000011a4},
			deviceTuple{type64: 0x20d00000213, brand64: 0xcda20000cda6, matchRI: 0x0dec, match64: 0x00000000, modelSI: -0x0001, models64: 0x11a4000011a6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcdb30000cdb7, matchRI: 0x0def, match64: 0x00000000, modelSI: -0x0001, models64: 0x11a6000011a8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcdc50000cdca, matchRI: 0x0df1, match64: 0x00000000, modelSI: 0x11a8, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcdcf0000cdd4, matchRI: 0x0df2, match64: 0x00000000, modelSI: -0x0001, models64: 0x11a9000011ac},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcdde0000cde3, matchRI: 0x0df6, match64: 0x00000000, modelSI: -0x0001, models64: 0x11ac000011c3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xce810000ce84, matchRI: 0x0e0e, match64: 0x00000000, modelSI: -0x0001, models64: 0x11c3000011c4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xce910000ce95, matchRI: 0x0e10, match64: 0x00000000, modelSI: -0x0001, models64: 0x11c4000011cc},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcef30000cef8, matchRI: -0x0001, match64: 0xcef30000cef8, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcef80000cefb, matchRI: 0x0e17, match64: 0x00000000, modelSI: -0x0001, models64: 0x11cc000011cd},
			deviceTuple{type64: 0x20d00000213, brand64: 0xcefb0000cf02, matchRI: 0x0e19, match64: 0x00000000, modelSI: 0x11cd, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xcf060000cf0c, matchRI: 0x0e1a, match64: 0x00000000, modelSI: 0x11ce, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcf140000cf23, matchRI: -0x0001, match64: 0xcf230000cf2c, modelSI: -0x0001, models64: 0x11cf000011d0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcf380000cf3d, matchRI: 0x0e1b, match64: 0x00000000, modelSI: -0x0001, models64: 0x11d0000011d8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcf980000cf9e, matchRI: -0x0001, match64: 0xcf9e0000cfaf, modelSI: -0x0001, models64: 0x11d8000011d9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xcfc00000cfc7, matchRI: 0x0e20, match64: 0x00000000, modelSI: -0x0001, models64: 0x11d9000011e3},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xd0400000d045, matchRI: 0x0e23, match64: 0x00000000, modelSI: 0x11e3, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0xd0450000d049, matchRI: 0x0e24, match64: 0x00000000, modelSI: -0x0001, models64: 0x11e4000011e8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd0630000d06b, matchRI: 0x0e29, match64: 0x00000000, modelSI: -0x0001, models64: 0x11e8000011ea},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd0730000d07c, matchRI: 0x0e2c, match64: 0x00000000, modelSI: 0x11ea, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd07c0000d080, matchRI: 0x0e2d, match64: 0x00000000, modelSI: -0x0001, models64: 0x11eb000011ed},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd0800000d084, matchRI: 0x0e30, match64: 0x00000000, modelSI: -0x0001, models64: 0x11ed000011ef},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd0840000d088, matchRI: 0x0e33, match64: 0x00000000, modelSI: -0x0001, models64: 0x11ef000011f0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd08b0000d090, matchRI: 0x0e35, match64: 0x00000000, modelSI: -0x0001, models64: 0x11f0000011f6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd0e10000d0e8, matchRI: 0x0e37, match64: 0x00000000, modelSI: 0x11f6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd0e80000d0eb, matchRI: 0x0e38, match64: 0x00000000, modelSI: 0x11f7, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd0eb0000d0ef, matchRI: 0x0e39, match64: 0x00000000, modelSI: 0x11f8, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xd0ef0000d0f5, matchRI: 0x0e3a, match64: 0x00000000, modelSI: 0x11f9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd1000000d106, matchRI: 0x0e3b, match64: 0x00000000, modelSI: -0x0001, models64: 0x11fa00001208},
			deviceTuple{type64: 0x20d00000213, brand64: 0xd1e00000d1e5, matchRI: 0x0e41, match64: 0x00000000, modelSI: -0x0001, models64: 0x12080000120f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd2220000d228, matchRI: 0x0e47, match64: 0x00000000, modelSI: 0x120f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd2280000d22f, matchRI: 0x0e48, match64: 0x00000000, modelSI: -0x0001, models64: 0x12100000123f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd4aa0000d4ae, matchRI: 0x0e5b, match64: 0x00000000, modelSI: -0x0001, models64: 0x123f00001244},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd4bd0000d4c2, matchRI: 0x0e61, match64: 0x00000000, modelSI: -0x0001, models64: 0x124400001249},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd4f30000d4f9, matchRI: -0x0001, match64: 0xd4f90000d500, modelSI: -0x0001, models64: 0x12490000124a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd50c0000d51d, matchRI: 0x0e65, match64: 0x00000000, modelSI: -0x0001, models64: 0x124a00001253},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd5840000d589, matchRI: 0x0e6a, match64: 0x00000000, modelSI: -0x0001, models64: 0x125300001256},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd59e0000d5a5, matchRI: 0x0e6c, match64: 0x00000000, modelSI: -0x0001, models64: 0x12560000125d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd5b40000d5bc, matchRI: 0x0e74, match64: 0x00000000, modelSI: 0x125d, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xd5cf0000d5d5, matchRI: 0x0e75, match64: 0x00000000, modelSI: 0x125e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd5d50000d5da, matchRI: 0x0e76, match64: 0x00000000, modelSI: -0x0001, models64: 0x125f00001267},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xd6490000d650, matchRI: -0x0001, match64: 0xd6490000d650, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd6500000d658, matchRI: -0x0001, match64: 0xd6500000d658, modelSI: -0x0001, models64: 0x126700001268},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd6580000d65f, matchRI: 0x0e7f, match64: 0x00000000, modelSI: -0x0001, models64: 0x12680000126a},
			deviceTuple{type64: 0x20d00000213, brand64: 0xd65f0000d667, matchRI: 0x0e82, match64: 0x00000000, modelSI: 0x126a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd6670000d66c, matchRI: 0x0e83, match64: 0x00000000, modelSI: -0x0001, models64: 0x126b0000126d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xd6860000d68a, matchRI: 0x0e85, match64: 0x00000000, modelSI: -0x0001, models64: 0x126d00001270},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd6900000d696, matchRI: 0x0e89, match64: 0x00000000, modelSI: -0x0001, models64: 0x127000001274},
			deviceTuple{type64: 0x20d00000213, brand64: 0xd6af0000d6b5, matchRI: 0x0e8d, match64: 0x00000000, modelSI: -0x0001, models64: 0x127400001283},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd6e00000d6e5, matchRI: 0x0e9d, match64: 0x00000000, modelSI: -0x0001, models64: 0x128300001289},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd7180000d71d, matchRI: 0x0ea3, match64: 0x00000000, modelSI: -0x0001, models64: 0x128900001291},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd7580000d75c, matchRI: 0x0ea8, match64: 0x00000000, modelSI: -0x0001, models64: 0x129100001293},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd75c0000d761, matchRI: 0x0eab, match64: 0x00000000, modelSI: -0x0001, models64: 0x12930000129b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd7ae0000d7b4, matchRI: 0x0eaf, match64: 0x00000000, modelSI: -0x0001, models64: 0x129b000012aa},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd80e0000d814, matchRI: 0x0ebf, match64: 0x00000000, modelSI: -0x0001, models64: 0x12aa000012ad},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd81b0000d822, matchRI: 0x0ec3, match64: 0x00000000, modelSI: 0x12ad, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd8220000d828, matchRI: 0x0ec4, match64: 0x00000000, modelSI: 0x12ae, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd8330000d839, matchRI: 0x0ec5, match64: 0x00000000, modelSI: 0x12af, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xd8390000d83f, matchRI: 0x0ec6, match64: 0x00000000, modelSI: 0x12b0, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xd83f0000d844, matchRI: 0x0ec7, match64: 0x00000000, modelSI: 0x12b1, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd84a0000d856, matchRI: 0x0ec8, match64: 0x00000000, modelSI: -0x0001, models64: 0x12b2000012ca},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd94b0000d951, matchRI: 0x0ede, match64: 0x00000000, modelSI: 0x12ca, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd9510000d955, matchRI: 0x0edf, match64: 0x00000000, modelSI: 0x12cb, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd9550000d95a, matchRI: 0x0ee0, match64: 0x00000000, modelSI: -0x0001, models64: 0x12cc000012ce},
			deviceTuple{type64: 0x20d00000213, brand64: 0xd95a0000d95f, matchRI: 0x0ee3, match64: 0x00000000, modelSI: -0x0001, models64: 0x12ce000012d1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd9700000d977, matchRI: 0x0ee7, match64: 0x00000000, modelSI: -0x0001, models64: 0x12d10000131f},
			deviceTuple{type64: 0x20d00000213, brand64: 0xdc6d0000dc73, matchRI: 0x0f2d, match64: 0x00000000, modelSI: 0x131f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xdc730000dc77, matchRI: 0x0f2e, match64: 0x00000000, modelSI: -0x0001, models64: 0x132000001327},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xdccf0000dcd4, matchRI: 0x0f30, match64: 0x00000000, modelSI: -0x0001, models64: 0x132700001329},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xdceb0000dcef, matchRI: -0x0001, match64: 0xdceb0000dcef, modelSI: -0x0001, models64: 0x13290000132a},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0xdcef0000dcf2, matchRI: 0x0f34, match64: 0x00000000, modelSI: 0x132a, models64: 0x00000000},
			deviceTuple{type64: 0x245800002460, brand64: 0xdcf20000dcf7, matchRI: 0x0f35, match64: 0x00000000, modelSI: -0x0001, models64: 0x132b0000132d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xdcf70000dcf9, matchRI: 0x0f38, match64: 0x00000000, modelSI: -0x0001, models64: 0x132d00001471},
			deviceTuple{type64: 0x20d00000213, brand64: 0xe8c60000e8cc, matchRI: 0x101b, match64: 0x00000000, modelSI: 0x1471, models64: 0x00000000},
			deviceTuple{type64: 0x245800002460, brand64: 0xe8cc0000e8d2, matchRI: 0x101c, match64: 0x00000000, modelSI: 0x1472, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xe8d20000e8d7, matchRI: -0x0001, match64: 0xe8d70000e8e0, modelSI: -0x0001, models64: 0x147300001474},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xe8f40000e8fd, matchRI: 0x101d, match64: 0x00000000, modelSI: -0x0001, models64: 0x147400001483},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xe9280000e92b, matchRI: 0x102c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1483000014a4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xeae30000eaed, matchRI: 0x1030, match64: 0x00000000, modelSI: -0x0001, models64: 0x14a4000014a8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xeb0c0000eb12, matchRI: 0x1034, match64: 0x00000000, modelSI: -0x0001, models64: 0x14a8000014aa},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xeb240000eb29, matchRI: 0x1036, match64: 0x00000000, modelSI: 0x14aa, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xeb290000eb2e, matchRI: 0x1037, match64: 0x00000000, modelSI: -0x0001, models64: 0x14ab000014b5},
			deviceTuple{type64: 0x20d00000213, brand64: 0xeba20000eba6, matchRI: 0x103f, match64: 0x00000000, modelSI: -0x0001, models64: 0x14b5000014c5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xec980000ec9c, matchRI: 0x104b, match64: 0x00000000, modelSI: -0x0001, models64: 0x14c500001509},
			deviceTuple{type64: 0x20d00000213, brand64: 0xee720000ee78, matchRI: 0x1087, match64: 0x00000000, modelSI: -0x0001, models64: 0x15090000150d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xee9a0000eea0, matchRI: 0x108b, match64: 0x00000000, modelSI: 0x150d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xeea00000eea5, matchRI: 0x108c, match64: 0x00000000, modelSI: -0x0001, models64: 0x150e00001520},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xef190000ef25, matchRI: 0x109d, match64: 0x00000000, modelSI: -0x0001, models64: 0x15200000152e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf0080000f00e, matchRI: 0x10a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x152e0000153f},
			deviceTuple{type64: 0x20d00000213, brand64: 0xf0b10000f0b8, matchRI: 0x10ae, match64: 0x00000000, modelSI: 0x153f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf0c20000f0c9, matchRI: 0x10af, match64: 0x00000000, modelSI: -0x0001, models64: 0x154000001542},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xf0e50000f0ec, matchRI: 0x10b2, match64: 0x00000000, modelSI: -0x0001, models64: 0x154200001543},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xf0ec0000f0f0, matchRI: 0x10b4, match64: 0x00000000, modelSI: 0x1543, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xf0f00000f0f6, matchRI: 0x10b5, match64: 0x00000000, modelSI: 0x1544, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xf0f60000f0fa, matchRI: 0x10b6, match64: 0x00000000, modelSI: 0x1545, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf1000000f107, matchRI: -0x0001, match64: 0xf1000000f107, modelSI: -0x0001, models64: 0x154600001547},
			deviceTuple{type64: 0x20d00000213, brand64: 0xf1070000f10c, matchRI: 0x10b8, match64: 0x00000000, modelSI: -0x0001, models64: 0x15470000154a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf12e0000f134, matchRI: 0x10ba, match64: 0x00000000, modelSI: -0x0001, models64: 0x154a000015fb},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf8600000f866, matchRI: 0x114b, match64: 0x00000000, modelSI: -0x0001, models64: 0x15fb00001602},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf8d90000f8e0, matchRI: 0x114e, match64: 0x00000000, modelSI: -0x0001, models64: 0x160200001606},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf8ec0000f8f1, matchRI: 0x1152, match64: 0x00000000, modelSI: 0x1606, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xf8f90000f8ff, matchRI: 0x1153, match64: 0x00000000, modelSI: -0x0001, models64: 0x160700001615},
			deviceTuple{type64: 0x20d00000213, brand64: 0xf98b0000f993, matchRI: 0x1157, match64: 0x00000000, modelSI: -0x0001, models64: 0x16150000162c},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xfb740000fb7c, matchRI: 0x115a, match64: 0x00000000, modelSI: 0x162c, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xfb7c0000fb84, matchRI: 0x115b, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xfb840000fb88, matchRI: -0x0001, match64: 0xfb880000fb92, modelSI: 0x162d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfb920000fb99, matchRI: 0x115c, match64: 0x00000000, modelSI: -0x0001, models64: 0x162e00001630},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfb990000fb9f, matchRI: 0x115f, match64: 0x00000000, modelSI: 0x1630, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0xfba40000fbaa, matchRI: 0x1160, match64: 0x00000000, modelSI: -0x0001, models64: 0x163100001633},
			deviceTuple{type64: 0x20d00000213, brand64: 0xfbaa0000fbaf, matchRI: 0x1163, match64: 0x00000000, modelSI: 0x1633, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfbb80000fbbd, matchRI: 0x1164, match64: 0x00000000, modelSI: -0x0001, models64: 0x16340000163a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfbce0000fbde, matchRI: 0x116b, match64: 0x00000000, modelSI: -0x0001, models64: 0x163a0000163d},
			deviceTuple{type64: 0x20d00000213, brand64: 0xfc050000fc0c, matchRI: 0x116d, match64: 0x00000000, modelSI: -0x0001, models64: 0x163d0000166c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfe160000fe1b, matchRI: 0x1191, match64: 0x00000000, modelSI: 0x166c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfe1b0000fe22, matchRI: 0x1192, match64: 0x00000000, modelSI: 0x166d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfe220000fe29, matchRI: 0x1193, match64: 0x00000000, modelSI: 0x166e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfe290000fe2e, matchRI: 0x1194, match64: 0x00000000, modelSI: -0x0001, models64: 0x166f00001673},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfe3f0000fe43, matchRI: 0x1199, match64: 0x00000000, modelSI: -0x0001, models64: 0x167300001675},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xfe430000fe48, matchRI: 0x119c, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfe480000fe4f, matchRI: 0x119d, match64: 0x00000000, modelSI: -0x0001, models64: 0x167500001679},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfe750000fe7b, matchRI: 0x11a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x167900001683},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfed80000fede, matchRI: 0x11a6, match64: 0x00000000, modelSI: -0x0001, models64: 0x168300001686},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xfef40000fefd, matchRI: 0x11a9, match64: 0x00000000, modelSI: -0x0001, models64: 0x168600001687},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xff0a0000ff0f, matchRI: 0x11aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x1687000016a0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x100290001002e, matchRI: 0x11ae, match64: 0x00000000, modelSI: -0x0001, models64: 0x16a0000016a4},
			deviceTuple{type64: 0x20d00000213, brand64: 0x100480001004c, matchRI: 0x11b2, match64: 0x00000000, modelSI: 0x16a4, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1004c0001004f, matchRI: 0x11b3, match64: 0x00000000, modelSI: 0x16a5, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1004f00010053, matchRI: 0x11b4, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x100530001005c, matchRI: 0x11b5, match64: 0x00000000, modelSI: -0x0001, models64: 0x16a6000016ab},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x100790001007d, matchRI: 0x11b9, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1007d00010081, matchRI: 0x11ba, match64: 0x00000000, modelSI: -0x0001, models64: 0x16ab000016ad},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1008100010084, matchRI: 0x11bd, match64: 0x00000000, modelSI: 0x16ad, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1008400010088, matchRI: 0x11be, match64: 0x00000000, modelSI: -0x0001, models64: 0x16ae000016b0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x100960001009c, matchRI: 0x11c1, match64: 0x00000000, modelSI: 0x16b0, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1009c000100a0, matchRI: 0x11c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x16b1000016b3},
			deviceTuple{type64: 0x20d00000213, brand64: 0x100a0000100a4, matchRI: 0x11c5, match64: 0x00000000, modelSI: -0x0001, models64: 0x16b3000016b4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x100ac000100b1, matchRI: 0x11c7, match64: 0x00000000, modelSI: -0x0001, models64: 0x16b4000016b6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x100b1000100b4, matchRI: 0x11ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x16b6000016f2},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1030500010308, matchRI: 0x1207, match64: 0x00000000, modelSI: 0x16f2, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x103080001030f, matchRI: 0x1208, match64: 0x00000000, modelSI: 0x16f3, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1030f00010312, matchRI: 0x1209, match64: 0x00000000, modelSI: -0x0001, models64: 0x16f4000016f6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1031a0001031d, matchRI: 0x120b, match64: 0x00000000, modelSI: -0x0001, models64: 0x16f600001708},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x103f6000103f9, matchRI: 0x1219, match64: 0x00000000, modelSI: -0x0001, models64: 0x17080000170e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1044300010448, matchRI: -0x0001, match64: 0x104480001044f, modelSI: 0x170e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x104580001045e, matchRI: 0x121e, match64: 0x00000000, modelSI: 0x170f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x104680001046c, matchRI: 0x121f, match64: 0x00000000, modelSI: -0x0001, models64: 0x171000001712},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1047f00010487, matchRI: 0x1221, match64: 0x00000000, modelSI: -0x0001, models64: 0x171200001714},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x104990001049f, matchRI: 0x1223, match64: 0x00000000, modelSI: -0x0001, models64: 0x171400001716},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x104b2000104ba, matchRI: 0x1226, match64: 0x00000000, modelSI: -0x0001, models64: 0x171600001724},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x105150001051b, matchRI: 0x1233, match64: 0x00000000, modelSI: 0x1724, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1051b00010520, matchRI: 0x1234, match64: 0x00000000, modelSI: 0x1725, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1052000010524, matchRI: 0x1235, match64: 0x00000000, modelSI: -0x0001, models64: 0x172600001728},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1052400010534, matchRI: 0x1238, match64: 0x00000000, modelSI: -0x0001, models64: 0x172800001732},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x105b5000105bb, matchRI: 0x123b, match64: 0x00000000, modelSI: 0x1732, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x105bb000105bf, matchRI: 0x123c, match64: 0x00000000, modelSI: 0x1733, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x105bf000105c6, matchRI: 0x123d, match64: 0x00000000, modelSI: -0x0001, models64: 0x173400001736},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x105cb000105d1, matchRI: 0x1240, match64: 0x00000000, modelSI: 0x1736, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x105d1000105d7, matchRI: 0x1241, match64: 0x00000000, modelSI: -0x0001, models64: 0x173700001739},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x105dc000105e3, matchRI: 0x1244, match64: 0x00000000, modelSI: -0x0001, models64: 0x173900001744},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1063900010641, matchRI: 0x124f, match64: 0x00000000, modelSI: 0x1744, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1064f00010659, matchRI: 0x1250, match64: 0x00000000, modelSI: -0x0001, models64: 0x174500001747},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1065900010664, matchRI: 0x1253, match64: 0x00000000, modelSI: 0x1747, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x106640001066a, matchRI: 0x1254, match64: 0x00000000, modelSI: -0x0001, models64: 0x17480000174b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x106860001068c, matchRI: 0x1257, match64: 0x00000000, modelSI: -0x0001, models64: 0x174b00001750},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x106ab000106b2, matchRI: 0x125c, match64: 0x00000000, modelSI: 0x1750, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x106b2000106b9, matchRI: 0x125d, match64: 0x00000000, modelSI: -0x0001, models64: 0x175100001755},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x106c8000106cf, matchRI: 0x1261, match64: 0x00000000, modelSI: -0x0001, models64: 0x175500001758},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x106d4000106db, matchRI: 0x1265, match64: 0x00000000, modelSI: -0x0001, models64: 0x175800001769},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x107cc000107d0, matchRI: 0x1270, match64: 0x00000000, modelSI: -0x0001, models64: 0x17690000176c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x107d7000107e1, matchRI: 0x1274, match64: 0x00000000, modelSI: -0x0001, models64: 0x176c0000176d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x107e7000107ec, matchRI: 0x1276, match64: 0x00000000, modelSI: -0x0001, models64: 0x176d00001777},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x108c8000108ce, matchRI: 0x127d, match64: 0x00000000, modelSI: -0x0001, models64: 0x177700001785},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1093100010939, matchRI: 0x128c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1785000017c8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x10dcb00010dd1, matchRI: 0x12cd, match64: 0x00000000, modelSI: -0x0001, models64: 0x17c8000017cf},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x10de200010de9, matchRI: 0x12d5, match64: 0x00000000, modelSI: -0x0001, models64: 0x17cf000017d6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x10e2100010e26, matchRI: 0x12db, match64: 0x00000000, modelSI: -0x0001, models64: 0x17d6000017e1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x10e3100010e36, matchRI: 0x12e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x17e10000180c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x10eed00010ef4, matchRI: 0x1312, match64: 0x00000000, modelSI: -0x0001, models64: 0x180c0000180f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x10f0f00010f14, matchRI: 0x1316, match64: 0x00000000, modelSI: -0x0001, models64: 0x180f00001813},
			deviceTuple{type64: 0x245800002460, brand64: 0x10f4a00010f4e, matchRI: 0x131b, match64: 0x00000000, modelSI: -0x0001, models64: 0x181300001816},
			deviceTuple{type64: 0x20d00000213, brand64: 0x10f5e00010f63, matchRI: 0x131d, match64: 0x00000000, modelSI: -0x0001, models64: 0x18160000181a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x10f8400010f8c, matchRI: 0x1322, match64: 0x00000000, modelSI: -0x0001, models64: 0x181a00001858},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1160000011f, matchRI: 0x134e, match64: 0x00000000, modelSI: -0x0001, models64: 0x185800001876},
			deviceTuple{type64: 0x20d00000213, brand64: 0x114320001143b, matchRI: 0x135d, match64: 0x00000000, modelSI: -0x0001, models64: 0x187600001878},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x114560001145b, matchRI: 0x135f, match64: 0x00000000, modelSI: -0x0001, models64: 0x187800001883},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x10e1600010e1a, matchRI: 0x136b, match64: 0x00000000, modelSI: -0x0001, models64: 0x188300001888},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x114d2000114d7, matchRI: 0x1370, match64: 0x00000000, modelSI: -0x0001, models64: 0x18880000188b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x114fd00011500, matchRI: 0x1374, match64: 0x00000000, modelSI: -0x0001, models64: 0x188b0000188e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1153400011539, matchRI: 0x1377, match64: 0x00000000, modelSI: -0x0001, models64: 0x188e00001894},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1156b00011570, matchRI: 0x137c, match64: 0x00000000, modelSI: -0x0001, models64: 0x189400001897},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1158f00011593, matchRI: 0x137f, match64: 0x00000000, modelSI: -0x0001, models64: 0x18970000189b},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x115a2000115ac, matchRI: 0x1384, match64: 0x00000000, modelSI: -0x0001, models64: 0x189b0000189e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x115ac000115b2, matchRI: 0x1388, match64: 0x00000000, modelSI: 0x189e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x115b2000115b8, matchRI: 0x1389, match64: 0x00000000, modelSI: -0x0001, models64: 0x189f000018a1},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x115c6000115cd, matchRI: 0x138b, match64: 0x00000000, modelSI: -0x0001, models64: 0x18a1000018a3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x115e5000115ed, matchRI: 0x138e, match64: 0x00000000, modelSI: -0x0001, models64: 0x18a3000018a7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x116070001160e, matchRI: 0x1391, match64: 0x00000000, modelSI: -0x0001, models64: 0x18a7000018e0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x118ad000118b6, matchRI: 0x139d, match64: 0x00000000, modelSI: -0x0001, models64: 0x18e0000018fd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11a6700011a75, matchRI: 0x13b1, match64: 0x00000000, modelSI: 0x18fd, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11a8100011a88, matchRI: 0x13b2, match64: 0x00000000, modelSI: -0x0001, models64: 0x18fe0000190d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11b7600011b7e, matchRI: 0x13b4, match64: 0x00000000, modelSI: 0x190d, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x11b7e00011b82, matchRI: 0x13b5, match64: 0x00000000, modelSI: -0x0001, models64: 0x190e0000190f},
			deviceTuple{type64: 0x245800002460, brand64: 0x11b8200011b88, matchRI: 0x13b7, match64: 0x00000000, modelSI: 0x190f, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x11b9300011b9a, matchRI: 0x13b8, match64: 0x00000000, modelSI: -0x0001, models64: 0x191000001916},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11bd200011bd7, matchRI: -0x0001, match64: 0x11bd200011bd7, modelSI: -0x0001, models64: 0x191600001918},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11bd700011bdf, matchRI: 0x13c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x191800001919},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11beb00011bf0, matchRI: 0x13c1, match64: 0x00000000, modelSI: 0x1919, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11bf000011bf8, matchRI: 0x13c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x191a000019cd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1242e00012433, matchRI: 0x145b, match64: 0x00000000, modelSI: -0x0001, models64: 0x19cd000019d0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x124380001243f, matchRI: 0x145e, match64: 0x00000000, modelSI: -0x0001, models64: 0x19d0000019d1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1243f00012444, matchRI: 0x1460, match64: 0x00000000, modelSI: -0x0001, models64: 0x19d1000019d3},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1244f00012454, matchRI: 0x1463, match64: 0x00000000, modelSI: -0x0001, models64: 0x19d3000019d8},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1246900012471, matchRI: 0x1469, match64: 0x00000000, modelSI: 0x19d8, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x124710001247b, matchRI: 0x146a, match64: 0x00000000, modelSI: -0x0001, models64: 0x19d9000019f6},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1257e00012589, matchRI: 0x1485, match64: 0x00000000, modelSI: 0x19f6, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x125890001258f, matchRI: 0x1486, match64: 0x00000000, modelSI: -0x0001, models64: 0x19f7000019fa},
			deviceTuple{type64: 0x20d00000213, brand64: 0x125ca000125d2, matchRI: 0x1489, match64: 0x00000000, modelSI: 0x19fa, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x125d2000125d9, matchRI: 0x148a, match64: 0x00000000, modelSI: -0x0001, models64: 0x19fb00001a23},
			deviceTuple{type64: 0x20d00000213, brand64: 0x127df000127e4, matchRI: 0x14a5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a2300001a26},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x127f4000127fa, matchRI: -0x0001, match64: 0x127fa00012801, modelSI: -0x0001, models64: 0x1a2600001a29},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1282000012826, matchRI: 0x14aa, match64: 0x00000000, modelSI: 0x1a29, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x128260001282c, matchRI: 0x14ab, match64: 0x00000000, modelSI: 0x1a2a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1282c00012831, matchRI: 0x14ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a2b00001a32},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1287b00012880, matchRI: 0x14b0, match64: 0x00000000, modelSI: 0x1a32, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1288000012887, matchRI: 0x14b1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a3300001a35},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1288d00012892, matchRI: 0x14b4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a3500001a37},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x128b0000128b3, matchRI: 0x14b5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a3700001a44},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1294f00012953, matchRI: 0x14c3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a4400001a45},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x129580001295e, matchRI: 0x14c5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a4500001a48},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1298000012985, matchRI: 0x14c7, match64: 0x00000000, modelSI: 0x1a48, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1298500012989, matchRI: 0x14c8, match64: 0x00000000, modelSI: 0x1a49, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1298900012992, matchRI: 0x14c9, match64: 0x00000000, modelSI: 0x1a4a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1299200012995, matchRI: 0x14ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a4b00001a52},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x129d7000129dc, matchRI: 0x14d0, match64: 0x00000000, modelSI: 0x1a52, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x129dc000129e3, matchRI: -0x0001, match64: 0x129dc000129e3, modelSI: -0x0001, models64: 0x1a5300001a55},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12a0000012a03, matchRI: 0x14d1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a5500001a69},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12aa700012aac, matchRI: 0x14e1, match64: 0x00000000, modelSI: 0x1a69, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12aba00012abe, matchRI: 0x14e2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a6a00001a6e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12ae600012aea, matchRI: 0x14e7, match64: 0x00000000, modelSI: 0x1a6e, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x12aea00012af2, matchRI: 0x14e8, match64: 0x00000000, modelSI: 0x1a6f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12aff00012b09, matchRI: 0x14e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a7000001a7d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12b5600012b60, matchRI: 0x14ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a7d00001a95},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12c4e00012c52, matchRI: 0x14f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a9500001a9b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12cd300012cd8, matchRI: 0x14f5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a9b00001a9c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12cd800012ce3, matchRI: 0x14f7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a9c00001a9e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x12cee00012cf6, matchRI: 0x14fa, match64: 0x00000000, modelSI: 0x1a9e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12cf600012cfd, matchRI: 0x14fb, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a9f00001aa4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12d5600012d5d, matchRI: 0x14fc, match64: 0x00000000, modelSI: -0x0001, models64: 0x1aa400001aa5},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12d6e00012d76, matchRI: 0x14fd, match64: 0x00000000, modelSI: 0x1aa5, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12d7600012d7d, matchRI: 0x14fe, match64: 0x00000000, modelSI: -0x0001, models64: 0x1aa600001aab},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12d9700012d9c, matchRI: 0x1504, match64: 0x00000000, modelSI: -0x0001, models64: 0x1aab00001ac1},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12eb900012ebf, matchRI: 0x151a, match64: 0x00000000, modelSI: 0x1ac1, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12ebf00012ec8, matchRI: 0x151b, match64: 0x00000000, modelSI: 0x1ac2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12ec800012ece, matchRI: 0x151c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ac300001ac7},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x117d2000117d5, matchRI: 0x1520, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12ee900012eef, matchRI: 0x1521, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ac700001aca},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12ef100012ef6, matchRI: 0x1525, match64: 0x00000000, modelSI: 0x1aca, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12ef600012efd, matchRI: 0x1526, match64: 0x00000000, modelSI: -0x0001, models64: 0x1acb00001ace},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x12f2500012f2c, matchRI: -0x0001, match64: 0x12f2c00012f32, modelSI: -0x0001, models64: 0x1ace00001acf},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12f3d00012f43, matchRI: 0x1529, match64: 0x00000000, modelSI: 0x1acf, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12f4b00012f53, matchRI: -0x0001, match64: 0x12f5300012f57, modelSI: -0x0001, models64: 0x1ad000001ad1},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12f5700012f5d, matchRI: 0x152b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ad100001ad2},
			deviceTuple{type64: 0x245800002460, brand64: 0x12f5d00012f68, matchRI: 0x152d, match64: 0x00000000, modelSI: 0x1ad2, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12f6800012f72, matchRI: 0x152e, match64: 0x00000000, modelSI: 0x1ad3, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x12f7200012f78, matchRI: 0x152f, match64: 0x00000000, modelSI: 0x1ad4, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12f7800012f7f, matchRI: 0x1530, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ad500001ad8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12fbe00012fc4, matchRI: 0x1531, match64: 0x00000000, modelSI: 0x1ad8, models64: 0x00000000},
			deviceTuple{type64: 0x940000009f, brand64: 0x12fc400012fca, matchRI: 0x1532, match64: 0x00000000, modelSI: 0x1ad9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12fca00012fd1, matchRI: 0x1533, match64: 0x00000000, modelSI: 0x1ada, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12fd100012fd5, matchRI: 0x1534, match64: 0x00000000, modelSI: -0x0001, models64: 0x1adb00001add},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12fd500012fdb, matchRI: 0x1537, match64: 0x00000000, modelSI: -0x0001, models64: 0x1add00001adf},
			deviceTuple{type64: 0x20d00000213, brand64: 0x12fdb00012fe3, matchRI: 0x153a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1adf00001aee},
			deviceTuple{type64: 0x20d00000213, brand64: 0x130d1000130d8, matchRI: 0x153c, match64: 0x00000000, modelSI: 0x1aee, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x130d8000130df, matchRI: 0x153d, match64: 0x00000000, modelSI: -0x0001, models64: 0x1aef00001af0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x130df000130e4, matchRI: -0x0001, match64: 0x130e4000130e9, modelSI: -0x0001, models64: 0x1af000001af2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x130e9000130ee, matchRI: 0x1541, match64: 0x00000000, modelSI: 0x1af2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x130ee000130f4, matchRI: 0x1542, match64: 0x00000000, modelSI: -0x0001, models64: 0x1af300001af7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x130f4000130f9, matchRI: 0x1547, match64: 0x00000000, modelSI: -0x0001, models64: 0x1af700001b45},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x133c8000133cc, matchRI: 0x1579, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b4500001b7a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1354b0001354f, matchRI: 0x15ae, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b7a00001b81},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1355d00013564, matchRI: -0x0001, match64: 0x135640001356c, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1356c00013575, matchRI: 0x15b6, match64: 0x00000000, modelSI: 0x1b81, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1358300013586, matchRI: 0x15b7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b8200001b88},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x135a4000135b1, matchRI: 0x15be, match64: 0x00000000, modelSI: 0x1b88, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x135b1000135b5, matchRI: 0x15bf, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b8900001b8b},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x135bb000135c0, matchRI: 0x15c2, match64: 0x00000000, modelSI: 0x1b8b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x135c0000135c5, matchRI: -0x0001, match64: 0x135c0000135c5, modelSI: -0x0001, models64: 0x1b8c00001b8d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x135c5000135ca, matchRI: 0x15c4, match64: 0x00000000, modelSI: 0x1b8d, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x135d6000135de, matchRI: 0x15c5, match64: 0x00000000, modelSI: 0x1b8e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x135de000135e3, matchRI: 0x15c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b8f00001bc2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1383400013838, matchRI: 0x15d1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bc200001bc5},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1383c00013842, matchRI: 0x15d5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bc500001bcc},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x138cd000138cf, matchRI: 0x15d9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bcc00001bd6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1391c0001391e, matchRI: 0x15e4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bd600001bdb},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1391e00013923, matchRI: 0x15ea, match64: 0x00000000, modelSI: 0x1bdb, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1392300013928, matchRI: 0x15eb, match64: 0x00000000, modelSI: 0x1bdc, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x139280001392c, matchRI: 0x15ec, match64: 0x00000000, modelSI: 0x1bdd, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1392c00013930, matchRI: 0x15ed, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bde00001be0},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1393c00013940, matchRI: 0x15ef, match64: 0x00000000, modelSI: 0x1be0, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1394000013944, matchRI: 0x15f0, match64: 0x00000000, modelSI: -0x0001, models64: 0x1be100001be3},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1394c0001394f, matchRI: 0x15f2, match64: 0x00000000, modelSI: 0x1be3, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1394f00013958, matchRI: 0x15f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1be400001bf1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x13a2f00013a33, matchRI: 0x15f7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bf100001ce4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x140a6000140ab, matchRI: 0x16ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ce400001ce7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x140be000140c2, matchRI: 0x16cc, match64: 0x00000000, modelSI: 0x1ce7, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x140c2000140c7, matchRI: -0x0001, match64: 0x140c2000140c7, modelSI: -0x0001, models64: 0x1ce800001cec},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x140ec000140f1, matchRI: 0x16cf, match64: 0x00000000, modelSI: 0x1cec, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x140f1000140f5, matchRI: 0x16d0, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ced00001cef},
			deviceTuple{type64: 0x20d00000213, brand64: 0x140fc00014102, matchRI: 0x16d3, match64: 0x00000000, modelSI: 0x1cef, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1410200014108, matchRI: 0x16d4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cf000001cf2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1411200014116, matchRI: 0x16d6, match64: 0x00000000, modelSI: 0x1cf2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1411600014119, matchRI: 0x16d7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1cf300001d04},
			deviceTuple{type64: 0x20d00000213, brand64: 0x141750001417c, matchRI: 0x16e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d0400001d06},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1419c000141a0, matchRI: 0x16ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d0600001d42},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1463f00014641, matchRI: 0x1701, match64: 0x00000000, modelSI: 0x1d42, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1464a00014650, matchRI: 0x1702, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d4300001d46},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1466400014669, matchRI: 0x1706, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d4600001d48},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1467b0001467f, matchRI: -0x0001, match64: 0x1467f00014684, modelSI: -0x0001, models64: 0x1d4800001d49},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1468c00014691, matchRI: 0x1709, match64: 0x00000000, modelSI: 0x1d49, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1469100014696, matchRI: 0x170a, match64: 0x00000000, modelSI: 0x1d4a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1469e000146a5, matchRI: 0x170b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d4b00001d4c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x146a9000146ad, matchRI: 0x170d, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d4c00001d63},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x148070001480f, matchRI: 0x171f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d6300001d66},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1484000014847, matchRI: 0x1722, match64: 0x00000000, modelSI: 0x1d66, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x148470001484e, matchRI: 0x1723, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d6700001d9d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1497e00014982, matchRI: 0x1759, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d9d00001da0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1498e00014993, matchRI: 0x175d, match64: 0x00000000, modelSI: -0x0001, models64: 0x1da000001da2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1499300014998, matchRI: -0x0001, match64: 0x14998000149a0, modelSI: 0x1da2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x149a0000149aa, matchRI: 0x1760, match64: 0x00000000, modelSI: -0x0001, models64: 0x1da300001da7},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x14a1100014a18, matchRI: 0x1761, match64: 0x00000000, modelSI: -0x0001, models64: 0x1da700001daf},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14a8300014a89, matchRI: 0x1767, match64: 0x00000000, modelSI: -0x0001, models64: 0x1daf00001db2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14ab700014abd, matchRI: 0x1769, match64: 0x00000000, modelSI: -0x0001, models64: 0x1db200001db6},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x14ac500014acb, matchRI: 0x176e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1db600001db7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14ada00014ae0, matchRI: 0x176f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1db700001dc7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14bb400014bb9, matchRI: 0x1776, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dc700001dce},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x14c0900014c0f, matchRI: 0x1777, match64: 0x00000000, modelSI: 0x1dce, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x14c0f00014c17, matchRI: 0x1778, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dcf00001dd0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14c1700014c20, matchRI: 0x177a, match64: 0x00000000, modelSI: 0x1dd0, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x114cd000114d2, matchRI: 0x177b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dd100001dd3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14c2900014c2d, matchRI: 0x177e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dd300001dd8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14c3500014c3c, matchRI: 0x1783, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dd800001de5},
			deviceTuple{type64: 0x20d00000213, brand64: 0x14c6300014c6a, matchRI: 0x1790, match64: 0x00000000, modelSI: -0x0001, models64: 0x1de500001dee},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14cd700014cdb, matchRI: -0x0001, match64: 0x14cdb00014ce3, modelSI: 0x1dee, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14ce300014ce7, matchRI: 0x1795, match64: 0x00000000, modelSI: -0x0001, models64: 0x1def00001df1},
			deviceTuple{type64: 0x20d00000213, brand64: 0x14cf200014cf9, matchRI: 0x1798, match64: 0x00000000, modelSI: -0x0001, models64: 0x1df100001dff},
			deviceTuple{type64: 0x20d00000213, brand64: 0x14d6700014d6b, matchRI: 0x17a4, match64: 0x00000000, modelSI: 0x1dff, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x14d7100014d78, matchRI: 0x17a5, match64: 0x00000000, modelSI: 0x1e00, models64: 0x00000000},
			deviceTuple{type64: 0xb1700000b1e, brand64: 0x14d7800014d7c, matchRI: 0x17a6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e0100001e04},
			deviceTuple{type64: 0x20d00000213, brand64: 0x14d9b00014da1, matchRI: 0x17aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e0400001e05},
			deviceTuple{type64: 0x20d00000213, brand64: 0x14da900014db1, matchRI: -0x0001, match64: 0x14db100014dbe, modelSI: 0x1e05, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14dcb00014dd0, matchRI: 0x17ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e0600001e0d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14e3900014e3c, matchRI: 0x17af, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e0d00001e0e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14e3c00014e49, matchRI: 0x17b1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e0e00001e10},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x14e4900014e4d, matchRI: 0x17b4, match64: 0x00000000, modelSI: 0x1e10, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x14e4d00014e54, matchRI: 0x17b5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e1100001e14},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14e7900014e7d, matchRI: 0x17b8, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e1400001e35},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14f1f00014f25, matchRI: 0x17d7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e3500001e37},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14f2e00014f32, matchRI: 0x17da, match64: 0x00000000, modelSI: 0x1e37, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14f3200014f37, matchRI: 0x17db, match64: 0x00000000, modelSI: 0x1e38, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14f3700014f3c, matchRI: 0x17dc, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e3900001e3c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x14f3f00014f4b, matchRI: 0x17e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e3c00001e41},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x14f9e00014fa5, matchRI: -0x0001, match64: 0x14fa500014faf, modelSI: 0x1e41, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14fb500014fb9, matchRI: 0x17e2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e4200001e48},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14fd400014fdb, matchRI: -0x0001, match64: 0x14fdb00014fe2, modelSI: -0x0001, models64: 0x1e4800001e49},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x14fe200014feb, matchRI: 0x17e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e4900001e5f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x150a7000150ab, matchRI: 0x17fb, match64: 0x00000000, modelSI: 0x1e5f, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x150ab000150b4, matchRI: 0x17fc, match64: 0x00000000, modelSI: 0x1e60, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x150b4000150bb, matchRI: 0x17fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e6100001e6c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x150f700015104, matchRI: 0x1805, match64: 0x00000000, modelSI: 0x1e6c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1510400015112, matchRI: 0x1806, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e6d00001e6f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1512000015126, matchRI: 0x1808, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e6f00001e71},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1514e00015154, matchRI: 0x1809, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e7100001e78},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1517800015181, matchRI: 0x180f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e7800001e7e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x151ae000151b4, matchRI: -0x0001, match64: 0x151ae000151b4, modelSI: -0x0001, models64: 0x1e7e00001e81},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x151f1000151f8, matchRI: 0x1816, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8100001e85},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x152160001521c, matchRI: 0x181b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8500001e8b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x152380001523f, matchRI: 0x1821, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8b00001e9f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x152bd000152c5, matchRI: 0x1835, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e9f00001ea4},
			deviceTuple{type64: 0x20d00000213, brand64: 0x152de000152e2, matchRI: 0x183b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ea400001ea7},
			deviceTuple{type64: 0x245800002460, brand64: 0x152eb000152ef, matchRI: 0x183e, match64: 0x00000000, modelSI: 0x1ea7, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x152ef000152f6, matchRI: 0x183f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ea800001eb0},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1531400015325, matchRI: 0x1846, match64: 0x00000000, modelSI: 0x1eb0, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x153250001532b, matchRI: 0x1847, match64: 0x00000000, modelSI: 0x1eb1, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1533600015340, matchRI: 0x1848, match64: 0x00000000, modelSI: 0x1eb2, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1534000015345, matchRI: 0x1849, match64: 0x00000000, modelSI: -0x0001, models64: 0x1eb300001ec1},
			deviceTuple{type64: 0x20d00000213, brand64: 0x153d1000153e1, matchRI: 0x1852, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ec100001ec3},
			deviceTuple{type64: 0x20d00000213, brand64: 0x153ea000153f1, matchRI: 0x1855, match64: 0x00000000, modelSI: 0x1ec3, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x153f1000153f7, matchRI: 0x1856, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ec400001ec7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1542c00015430, matchRI: 0x1858, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ec700001ecf},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1549000015499, matchRI: 0x1859, match64: 0x00000000, modelSI: 0x1ecf, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x154990001549e, matchRI: 0x185a, match64: 0x00000000, modelSI: 0x1ed0, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1549e000154a8, matchRI: 0x185b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ed100001ed8},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x154d6000154e2, matchRI: -0x0001, match64: 0x154e2000154e6, modelSI: -0x0001, models64: 0x1ed800001ed9},
			deviceTuple{type64: 0x20d00000213, brand64: 0x154e6000154f3, matchRI: 0x1863, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ed900001ee6},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x156190001561e, matchRI: 0x1868, match64: 0x00000000, modelSI: 0x1ee6, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1561e00015627, matchRI: 0x1869, match64: 0x00000000, modelSI: 0x1ee7, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x156270001562f, matchRI: 0x186a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ee800001f0a},
			deviceTuple{type64: 0x940000009f, brand64: 0x157ca000157d2, matchRI: 0x1874, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x157d2000157d9, matchRI: 0x1875, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f0a00001f0c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x157d9000157e1, matchRI: 0x1878, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f0c00001f33},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1599f000159a3, matchRI: 0x1892, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f3300001f35},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x159a3000159a9, matchRI: -0x0001, match64: 0x159a9000159b2, modelSI: 0x1f35, models64: 0x00000000},
			deviceTuple{type64: 0x940000009f, brand64: 0x159b2000159b9, matchRI: -0x0001, match64: 0x159b9000159d8, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x159d8000159e0, matchRI: 0x1895, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f3600001f40},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x15a4500015a51, matchRI: 0x1899, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f4000001f50},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xe28b0000e292, matchRI: 0x18aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f5000001f51},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x15aec00015af2, matchRI: 0x18ab, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f5100001f5a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x15b6300015b6c, matchRI: 0x18ad, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f5a00001fa4},
			deviceTuple{type64: 0x20d00000213, brand64: 0x160a3000160ab, matchRI: 0x18be, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fa400001fa6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x160bb000160c1, matchRI: 0x18c1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fa600001fb1},
			deviceTuple{type64: 0x20d00000213, brand64: 0x161070001610d, matchRI: 0x18cd, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fb100001fb8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x161640001616b, matchRI: 0x18cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fb800001fba},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1616b00016172, matchRI: 0x18d2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fba00001fbc},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1617d00016186, matchRI: 0x18d5, match64: 0x00000000, modelSI: 0x1fbc, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x161860001618d, matchRI: 0x18d6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fbd00001fc0},
			deviceTuple{type64: 0x940000009f, brand64: 0x161a2000161a9, matchRI: 0x18d9, match64: 0x00000000, modelSI: 0x1fc0, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x161a9000161b1, matchRI: 0x18da, match64: 0x00000000, modelSI: 0x1fc1, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x161b1000161b6, matchRI: 0x18db, match64: 0x00000000, modelSI: 0x1fc2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x161b6000161bc, matchRI: -0x0001, match64: 0x161bc000161c4, modelSI: -0x0001, models64: 0x1fc300001fc4},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x161c4000161c9, matchRI: 0x18dc, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x161c9000161d0, matchRI: 0x18dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fc400001fc5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x161d0000161d6, matchRI: 0x18df, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fc500001fc7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x161de000161e1, matchRI: 0x18e1, match64: 0x00000000, modelSI: 0x1fc7, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x161e1000161e6, matchRI: 0x18e2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fc800001fc9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x161e6000161ed, matchRI: 0x18e4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fc900001ffd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1645200016457, matchRI: 0x18fa, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ffd00001ffe},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1645d00016463, matchRI: 0x18fc, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ffe00002016},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1659c000165a7, matchRI: 0x1903, match64: 0x00000000, modelSI: -0x0001, models64: 0x20160000201d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x165f0000165f4, matchRI: 0x190a, match64: 0x00000000, modelSI: 0x201d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x165f4000165fb, matchRI: 0x190b, match64: 0x00000000, modelSI: -0x0001, models64: 0x201e00002027},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x166350001663b, matchRI: 0x1915, match64: 0x00000000, modelSI: 0x2027, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1663b0001663f, matchRI: 0x1916, match64: 0x00000000, modelSI: -0x0001, models64: 0x20280000202b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1664a00016651, matchRI: -0x0001, match64: 0x1665100016660, modelSI: 0x202b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4f9200004f97, matchRI: 0x191a, match64: 0x00000000, modelSI: -0x0001, models64: 0x202c0000202d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1666c00016672, matchRI: 0x191b, match64: 0x00000000, modelSI: -0x0001, models64: 0x202d0000202e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x166770001667b, matchRI: 0x191d, match64: 0x00000000, modelSI: -0x0001, models64: 0x202e00002033},
			deviceTuple{type64: 0x20d00000213, brand64: 0x166980001669d, matchRI: 0x1923, match64: 0x00000000, modelSI: -0x0001, models64: 0x203300002038},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x166d1000166d5, matchRI: 0x1925, match64: 0x00000000, modelSI: 0x2038, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x166db000166e6, matchRI: 0x1926, match64: 0x00000000, modelSI: -0x0001, models64: 0x203900002047},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x167c7000167ca, matchRI: 0x192f, match64: 0x00000000, modelSI: 0x2047, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x167d6000167db, matchRI: 0x1930, match64: 0x00000000, modelSI: 0x2048, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x167db000167de, matchRI: 0x1931, match64: 0x00000000, modelSI: -0x0001, models64: 0x204900002060},
			deviceTuple{type64: 0x20d00000213, brand64: 0x168c7000168ce, matchRI: 0x1940, match64: 0x00000000, modelSI: -0x0001, models64: 0x206000002061},
			deviceTuple{type64: 0x940000009f, brand64: 0x168dc000168e0, matchRI: 0x1941, match64: 0x00000000, modelSI: 0x2061, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x168e0000168ea, matchRI: 0x1942, match64: 0x00000000, modelSI: -0x0001, models64: 0x206200002064},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1690100016908, matchRI: 0x1944, match64: 0x00000000, modelSI: -0x0001, models64: 0x206400002068},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1692f00016934, matchRI: 0x1945, match64: 0x00000000, modelSI: -0x0001, models64: 0x20680000206d},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x169560001695f, matchRI: 0x1949, match64: 0x00000000, modelSI: 0x206d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1695f00016964, matchRI: 0x194a, match64: 0x00000000, modelSI: 0x206e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x169640001696c, matchRI: 0x194b, match64: 0x00000000, modelSI: -0x0001, models64: 0x206f00002070},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1698400016989, matchRI: -0x0001, match64: 0x1698900016990, modelSI: 0x2070, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1699000016995, matchRI: 0x194c, match64: 0x00000000, modelSI: 0x2071, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x169950001699c, matchRI: 0x194d, match64: 0x00000000, modelSI: -0x0001, models64: 0x207200002075},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x169aa000169b0, matchRI: 0x1951, match64: 0x00000000, modelSI: -0x0001, models64: 0x2075000020f8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x16de400016deb, matchRI: 0x19a0, match64: 0x00000000, modelSI: 0x20f8, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x16deb00016df2, matchRI: 0x19a1, match64: 0x00000000, modelSI: 0x20f9, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x16df200016df8, matchRI: 0x19a2, match64: 0x00000000, modelSI: -0x0001, models64: 0x20fa000020fb},
			deviceTuple{type64: 0x20d00000213, brand64: 0x16e0800016e0e, matchRI: 0x19a4, match64: 0x00000000, modelSI: -0x0001, models64: 0x20fb000020fe},
			deviceTuple{type64: 0x20d00000213, brand64: 0x16e3500016e3b, matchRI: 0x19a5, match64: 0x00000000, modelSI: -0x0001, models64: 0x20fe00002112},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x16f8b00016f91, matchRI: 0x19ac, match64: 0x00000000, modelSI: 0x2112, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x16f9100016f97, matchRI: 0x19ad, match64: 0x00000000, modelSI: -0x0001, models64: 0x211300002114},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x16f9b00016f9f, matchRI: 0x19af, match64: 0x00000000, modelSI: -0x0001, models64: 0x211400002116},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x16fb300016fbc, matchRI: 0x19b1, match64: 0x00000000, modelSI: -0x0001, models64: 0x211600002117},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x16fc400016fc9, matchRI: -0x0001, match64: 0x16fc900016fcf, modelSI: -0x0001, models64: 0x211700002118},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x16fdf00016fe8, matchRI: 0x19b2, match64: 0x00000000, modelSI: 0x2118, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x16fec00016ff1, matchRI: 0x19b3, match64: 0x00000000, modelSI: 0x2119, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x16ff100016ff7, matchRI: 0x19b4, match64: 0x00000000, modelSI: -0x0001, models64: 0x211a0000211c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x170030001700b, matchRI: 0x19b7, match64: 0x00000000, modelSI: 0x211c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1701000017017, matchRI: 0x19b8, match64: 0x00000000, modelSI: -0x0001, models64: 0x211d0000211e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x170170001701b, matchRI: 0x19ba, match64: 0x00000000, modelSI: -0x0001, models64: 0x211e00002123},
			deviceTuple{type64: 0x20d00000213, brand64: 0x170670001706d, matchRI: 0x19be, match64: 0x00000000, modelSI: 0x2123, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1706d00017076, matchRI: -0x0001, match64: 0x1707600017089, modelSI: 0x2124, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x170920001709a, matchRI: 0x19bf, match64: 0x00000000, modelSI: 0x2125, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1709a0001709f, matchRI: 0x19c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x212600002129},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x170b2000170b6, matchRI: 0x19c1, match64: 0x00000000, modelSI: -0x0001, models64: 0x21290000212c},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x170e4000170eb, matchRI: 0x19c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x212c0000212f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x171060001710f, matchRI: 0x19c6, match64: 0x00000000, modelSI: 0x212f, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x171160001711b, matchRI: 0x19c7, match64: 0x00000000, modelSI: 0x2130, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1711b00017123, matchRI: 0x19c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x213100002136},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x171450001714d, matchRI: 0x19ce, match64: 0x00000000, modelSI: -0x0001, models64: 0x213600002139},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1715f00017165, matchRI: -0x0001, match64: 0x1715f00017165, modelSI: -0x0001, models64: 0x21390000213b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x171750001717c, matchRI: 0x19d1, match64: 0x00000000, modelSI: -0x0001, models64: 0x213b0000213d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x171810001718a, matchRI: 0x19d3, match64: 0x00000000, modelSI: -0x0001, models64: 0x213d0000213e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1718a00017190, matchRI: 0x19d5, match64: 0x00000000, modelSI: -0x0001, models64: 0x213e0000213f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1719b0001719f, matchRI: 0x19d7, match64: 0x00000000, modelSI: -0x0001, models64: 0x213f00002143},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x171ac000171b1, matchRI: 0x19db, match64: 0x00000000, modelSI: -0x0001, models64: 0x214300002146},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x171bd000171c1, matchRI: -0x0001, match64: 0x171c1000171cc, modelSI: 0x2146, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x171cc000171d0, matchRI: 0x19dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x214700002149},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x171d0000171d6, matchRI: 0x19e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x21490000214b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x171d6000171db, matchRI: 0x19e3, match64: 0x00000000, modelSI: -0x0001, models64: 0x214b0000214c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x171db000171df, matchRI: -0x0001, match64: 0x171df000171e6, modelSI: -0x0001, models64: 0x214c0000214e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x171f7000171fc, matchRI: 0x19e5, match64: 0x00000000, modelSI: 0x214e, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x171fc00017201, matchRI: 0x19e6, match64: 0x00000000, modelSI: 0x214f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1720100017209, matchRI: 0x19e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x215000002154},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1722100017224, matchRI: 0x19ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x21540000216f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x173390001733d, matchRI: 0x1a07, match64: 0x00000000, modelSI: 0x216f, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x173400001734c, matchRI: -0x0001, match64: 0x1734c00017355, modelSI: -0x0001, models64: 0x217000002171},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1735500017358, matchRI: 0x1a09, match64: 0x00000000, modelSI: 0x2171, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1735800017362, matchRI: 0x1a0a, match64: 0x00000000, modelSI: -0x0001, models64: 0x217200002176},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x173bc000173c3, matchRI: 0x1a0b, match64: 0x00000000, modelSI: -0x0001, models64: 0x217600002178},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x173d6000173db, matchRI: 0x1a0d, match64: 0x00000000, modelSI: 0x2178, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x173db000173df, matchRI: 0x1a0e, match64: 0x00000000, modelSI: 0x2179, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x173e6000173ea, matchRI: 0x1a0f, match64: 0x00000000, modelSI: -0x0001, models64: 0x217a0000217d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1741c00017420, matchRI: -0x0001, match64: 0x1742000017429, modelSI: 0x217d, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x174290001742c, matchRI: 0x1a11, match64: 0x00000000, modelSI: -0x0001, models64: 0x217e00002196},
			deviceTuple{type64: 0x20d00000213, brand64: 0x175af000175b4, matchRI: 0x1a17, match64: 0x00000000, modelSI: 0x2196, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x175b7000175bb, matchRI: 0x1a18, match64: 0x00000000, modelSI: 0x2197, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x175bb000175c5, matchRI: 0x1a19, match64: 0x00000000, modelSI: -0x0001, models64: 0x2198000021a2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1765800017663, matchRI: 0x1a1a, match64: 0x00000000, modelSI: 0x21a2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1766300017666, matchRI: 0x1a1b, match64: 0x00000000, modelSI: -0x0001, models64: 0x21a3000021aa},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x176a6000176ac, matchRI: 0x1a1f, match64: 0x00000000, modelSI: -0x0001, models64: 0x21aa000021ac},
			deviceTuple{type64: 0x20d00000213, brand64: 0x176b3000176ba, matchRI: 0x1a21, match64: 0x00000000, modelSI: -0x0001, models64: 0x21ac000021b0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x176ef000176fc, matchRI: 0x1a25, match64: 0x00000000, modelSI: -0x0001, models64: 0x21b0000021b4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1771b0001771e, matchRI: 0x1a29, match64: 0x00000000, modelSI: 0x21b4, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x177260001772f, matchRI: 0x1a2a, match64: 0x00000000, modelSI: -0x0001, models64: 0x21b5000021be},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x177cd000177d2, matchRI: 0x1a2b, match64: 0x00000000, modelSI: -0x0001, models64: 0x21be000021c5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x177f3000177f8, matchRI: 0x1a31, match64: 0x00000000, modelSI: -0x0001, models64: 0x21c5000021c7},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x180000001f, matchRI: 0x1a34, match64: 0x00000000, modelSI: -0x0001, models64: 0x21c700002440},
			deviceTuple{type64: 0x20d00000213, brand64: 0x19f0e00019f15, matchRI: 0x1c84, match64: 0x00000000, modelSI: 0x2440, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x19f1500019f1c, matchRI: 0x1c85, match64: 0x00000000, modelSI: 0x2441, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x19f1c00019f21, matchRI: 0x1c86, match64: 0x00000000, modelSI: -0x0001, models64: 0x244200002446},
			deviceTuple{type64: 0x20d00000213, brand64: 0x19f3000019f36, matchRI: -0x0001, match64: 0x19f3600019f3f, modelSI: 0x2446, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x19f4900019f4f, matchRI: 0x1c88, match64: 0x00000000, modelSI: -0x0001, models64: 0x244700002449},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x19f5600019f5c, matchRI: 0x1c8a, match64: 0x00000000, modelSI: -0x0001, models64: 0x24490000245e},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x19fe700019fec, matchRI: 0x1ca0, match64: 0x00000000, modelSI: -0x0001, models64: 0x245e00002463},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1a00d0001a012, matchRI: 0x1ca6, match64: 0x00000000, modelSI: 0x2463, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1a0120001a016, matchRI: 0x1ca7, match64: 0x00000000, modelSI: 0x2464, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a0160001a01b, matchRI: 0x1ca8, match64: 0x00000000, modelSI: -0x0001, models64: 0x246500002467},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a0510001a058, matchRI: 0x1ca9, match64: 0x00000000, modelSI: 0x2467, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a0580001a05e, matchRI: -0x0001, match64: 0x1a0580001a05e, modelSI: -0x0001, models64: 0x246800002469},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a05e0001a064, matchRI: 0x1cab, match64: 0x00000000, modelSI: -0x0001, models64: 0x24690000246b},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1a0640001a06d, matchRI: 0x1cae, match64: 0x00000000, modelSI: -0x0001, models64: 0x246b0000246d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1a06d0001a074, matchRI: 0x1cb1, match64: 0x00000000, modelSI: 0x246d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a0740001a07a, matchRI: -0x0001, match64: 0x1a07a0001a080, modelSI: -0x0001, models64: 0x246e00002475},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1a1410001a147, matchRI: 0x1cb2, match64: 0x00000000, modelSI: -0x0001, models64: 0x247500002484},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1a1e30001a1e8, matchRI: 0x1cc2, match64: 0x00000000, modelSI: 0x2484, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1a1e80001a1f0, matchRI: 0x1cc3, match64: 0x00000000, modelSI: -0x0001, models64: 0x248500002487},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a2090001a210, matchRI: 0x1cc5, match64: 0x00000000, modelSI: 0x2487, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a2100001a215, matchRI: 0x1cc6, match64: 0x00000000, modelSI: -0x0001, models64: 0x248800002496},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a2470001a24c, matchRI: 0x1cd5, match64: 0x00000000, modelSI: -0x0001, models64: 0x249600002498},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1a2550001a25a, matchRI: 0x1cd8, match64: 0x00000000, modelSI: 0x2498, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a25a0001a25f, matchRI: 0x1cd9, match64: 0x00000000, modelSI: -0x0001, models64: 0x249900002503},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a7040001a710, matchRI: 0x1d3c, match64: 0x00000000, modelSI: 0x2503, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1a7100001a717, matchRI: 0x1d3d, match64: 0x00000000, modelSI: 0x2504, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1a71d0001a726, matchRI: 0x1d3e, match64: 0x00000000, modelSI: 0x2505, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1a7310001a738, matchRI: 0x1d3f, match64: 0x00000000, modelSI: 0x2506, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a7380001a73c, matchRI: 0x1d40, match64: 0x00000000, modelSI: -0x0001, models64: 0x250700002516},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a7d70001a7de, matchRI: 0x1d45, match64: 0x00000000, modelSI: -0x0001, models64: 0x25160000251b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xd5af0000d5b4, matchRI: 0x1d4b, match64: 0x00000000, modelSI: -0x0001, models64: 0x251b00002520},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1a8140001a81b, matchRI: 0x1d51, match64: 0x00000000, modelSI: 0x2520, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a81b0001a828, matchRI: -0x0001, match64: 0x1a8280001a834, modelSI: 0x2521, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1a8340001a83b, matchRI: 0x1d52, match64: 0x00000000, modelSI: -0x0001, models64: 0x25220000252a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a8790001a87f, matchRI: 0x1d55, match64: 0x00000000, modelSI: 0x252a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a87f0001a887, matchRI: 0x1d56, match64: 0x00000000, modelSI: -0x0001, models64: 0x252b0000252f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a8a00001a8a7, matchRI: 0x1d5b, match64: 0x00000000, modelSI: -0x0001, models64: 0x252f00002530},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1a8a70001a8b1, matchRI: 0x1d5d, match64: 0x00000000, modelSI: -0x0001, models64: 0x253000002532},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x12c1b00012c1e, matchRI: 0x1d60, match64: 0x00000000, modelSI: -0x0001, models64: 0x253200002552},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1aa690001aa72, matchRI: 0x1d76, match64: 0x00000000, modelSI: -0x0001, models64: 0x255200002553},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1aa890001aa90, matchRI: 0x1d77, match64: 0x00000000, modelSI: 0x2553, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1aa900001aa98, matchRI: 0x1d78, match64: 0x00000000, modelSI: -0x0001, models64: 0x255400002557},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1aaa20001aaa7, matchRI: 0x1d7b, match64: 0x00000000, modelSI: -0x0001, models64: 0x255700002559},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1aab50001aabb, matchRI: 0x1d7e, match64: 0x00000000, modelSI: 0x2559, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xc6cf0000c6d4, matchRI: 0x1d7f, match64: 0x00000000, modelSI: -0x0001, models64: 0x255a0000255c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1aad10001aadd, matchRI: 0x1d81, match64: 0x00000000, modelSI: -0x0001, models64: 0x255c0000255d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1aae30001aaec, matchRI: 0x1d83, match64: 0x00000000, modelSI: -0x0001, models64: 0x255d0000255f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1aaf00001aaf7, matchRI: 0x1d86, match64: 0x00000000, modelSI: 0x255f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1aaf70001aafe, matchRI: 0x1d87, match64: 0x00000000, modelSI: -0x0001, models64: 0x256000002561},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1aafe0001ab07, matchRI: 0x1d89, match64: 0x00000000, modelSI: -0x0001, models64: 0x256100002570},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1abe20001abeb, matchRI: 0x1d8e, match64: 0x00000000, modelSI: -0x0001, models64: 0x25700000257e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1ac430001ac49, matchRI: 0x1d99, match64: 0x00000000, modelSI: -0x0001, models64: 0x257e00002580},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ac580001ac65, matchRI: 0x1d9b, match64: 0x00000000, modelSI: -0x0001, models64: 0x258000002585},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1aca00001acaa, matchRI: 0x1da0, match64: 0x00000000, modelSI: 0x2585, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1acaa0001acb3, matchRI: -0x0001, match64: 0x1acaa0001acb3, modelSI: -0x0001, models64: 0x258600002587},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1acd60001acda, matchRI: 0x1da1, match64: 0x00000000, modelSI: -0x0001, models64: 0x258700002589},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ace30001aceb, matchRI: 0x1da3, match64: 0x00000000, modelSI: -0x0001, models64: 0x25890000258c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1aceb0001acf5, matchRI: 0x1da7, match64: 0x00000000, modelSI: 0x258c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1acf50001acfb, matchRI: 0x1da8, match64: 0x00000000, modelSI: -0x0001, models64: 0x258d00002595},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ad700001ad75, matchRI: 0x1dac, match64: 0x00000000, modelSI: -0x0001, models64: 0x25950000259d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x18e00000192, matchRI: 0x1db5, match64: 0x00000000, modelSI: -0x0001, models64: 0x259d0000266e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1b6830001b68b, matchRI: 0x1e79, match64: 0x00000000, modelSI: 0x266e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b68b0001b690, matchRI: 0x1e7a, match64: 0x00000000, modelSI: -0x0001, models64: 0x266f00002672},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x4bc200004bc7, matchRI: 0x1e7c, match64: 0x00000000, modelSI: -0x0001, models64: 0x267200002673},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b6a50001b6aa, matchRI: 0x1e7d, match64: 0x00000000, modelSI: -0x0001, models64: 0x267300002676},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b6be0001b6c9, matchRI: 0x1e7e, match64: 0x00000000, modelSI: 0x2676, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b6c90001b6d1, matchRI: 0x1e7f, match64: 0x00000000, modelSI: -0x0001, models64: 0x26770000267b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x11c1c00011c21, matchRI: 0x1e84, match64: 0x00000000, modelSI: -0x0001, models64: 0x267b00002687},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1537300015379, matchRI: 0x1e8d, match64: 0x00000000, modelSI: 0x2687, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b79d0001b7a1, matchRI: 0x1e8e, match64: 0x00000000, modelSI: -0x0001, models64: 0x26880000268a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b7a60001b7af, matchRI: 0x1e90, match64: 0x00000000, modelSI: -0x0001, models64: 0x268a00002694},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b8630001b86d, matchRI: 0x1e92, match64: 0x00000000, modelSI: -0x0001, models64: 0x26940000269a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1b89c0001b8a3, matchRI: 0x1e99, match64: 0x00000000, modelSI: 0x269a, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1b8b00001b8b8, matchRI: 0x1e9a, match64: 0x00000000, modelSI: -0x0001, models64: 0x269b0000269c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b8c00001b8c6, matchRI: 0x1e9c, match64: 0x00000000, modelSI: -0x0001, models64: 0x269c0000269e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1b8c60001b8cc, matchRI: 0x1e9f, match64: 0x00000000, modelSI: -0x0001, models64: 0x269e000026a0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b8eb0001b8f5, matchRI: 0x1ea1, match64: 0x00000000, modelSI: -0x0001, models64: 0x26a0000026a1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b8f50001b8fb, matchRI: 0x1ea3, match64: 0x00000000, modelSI: -0x0001, models64: 0x26a1000026a3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1b9010001b906, matchRI: 0x1ea6, match64: 0x00000000, modelSI: -0x0001, models64: 0x26a3000026c8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bab60001babb, matchRI: 0x1eb2, match64: 0x00000000, modelSI: -0x0001, models64: 0x26c8000026ca},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1babb0001bac0, matchRI: 0x1eb5, match64: 0x00000000, modelSI: -0x0001, models64: 0x26ca000026cf},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bace0001bad7, matchRI: 0x1ebb, match64: 0x00000000, modelSI: 0x26cf, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bad70001badd, matchRI: 0x1ebc, match64: 0x00000000, modelSI: -0x0001, models64: 0x26d0000026d2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1badd0001bae3, matchRI: 0x1ebf, match64: 0x00000000, modelSI: 0x26d2, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1bae30001bae8, matchRI: 0x1ec0, match64: 0x00000000, modelSI: -0x0001, models64: 0x26d3000026d5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1baf00001baf5, matchRI: 0x1ec3, match64: 0x00000000, modelSI: -0x0001, models64: 0x26d5000026d8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1baf50001bafd, matchRI: 0x1ec7, match64: 0x00000000, modelSI: 0x26d8, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bafd0001bb04, matchRI: 0x1ec8, match64: 0x00000000, modelSI: -0x0001, models64: 0x26d9000026db},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bb150001bb1d, matchRI: 0x1eca, match64: 0x00000000, modelSI: 0x26db, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bb230001bb2d, matchRI: 0x1ecb, match64: 0x00000000, modelSI: 0x26dc, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bb2d0001bb35, matchRI: 0x1ecc, match64: 0x00000000, modelSI: -0x0001, models64: 0x26dd000026df},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bb3c0001bb41, matchRI: 0x1ece, match64: 0x00000000, modelSI: -0x0001, models64: 0x26df000026e1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bb410001bb48, matchRI: 0x1ed1, match64: 0x00000000, modelSI: 0x26e1, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bb480001bb4d, matchRI: 0x1ed2, match64: 0x00000000, modelSI: 0x26e2, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bb540001bb5a, matchRI: 0x1ed3, match64: 0x00000000, modelSI: -0x0001, models64: 0x26e3000026e5},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bb730001bb78, matchRI: 0x1ed5, match64: 0x00000000, modelSI: 0x26e5, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bb780001bb7d, matchRI: 0x1ed6, match64: 0x00000000, modelSI: -0x0001, models64: 0x26e6000026ec},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bbb40001bbbd, matchRI: 0x1eda, match64: 0x00000000, modelSI: 0x26ec, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bbbd0001bbc3, matchRI: 0x1edb, match64: 0x00000000, modelSI: 0x26ed, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bbcc0001bbd0, matchRI: 0x1edc, match64: 0x00000000, modelSI: -0x0001, models64: 0x26ee000026ef},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bbd60001bbde, matchRI: 0x1edd, match64: 0x00000000, modelSI: -0x0001, models64: 0x26ef000026fa},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bc340001bc39, matchRI: 0x1ee4, match64: 0x00000000, modelSI: 0x26fa, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bc390001bc41, matchRI: 0x1ee5, match64: 0x00000000, modelSI: -0x0001, models64: 0x26fb0000270a},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bcd10001bcd4, matchRI: 0x1ef2, match64: 0x00000000, modelSI: 0x270a, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bcd40001bcdc, matchRI: 0x1ef3, match64: 0x00000000, modelSI: -0x0001, models64: 0x270b0000270c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bcdc0001bce4, matchRI: 0x1ef5, match64: 0x00000000, modelSI: -0x0001, models64: 0x270c0000270d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bcec0001bcef, matchRI: 0x1ef7, match64: 0x00000000, modelSI: -0x0001, models64: 0x270d00002764},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bee30001beed, matchRI: 0x1f42, match64: 0x00000000, modelSI: 0x2764, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1beed0001bef4, matchRI: 0x1f43, match64: 0x00000000, modelSI: -0x0001, models64: 0x276500002768},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bf150001bf1a, matchRI: -0x0001, match64: 0x1bf150001bf1a, modelSI: -0x0001, models64: 0x276800002769},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bf1a0001bf21, matchRI: 0x1f45, match64: 0x00000000, modelSI: 0x2769, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bf210001bf25, matchRI: 0x1f46, match64: 0x00000000, modelSI: 0x276a, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1bf250001bf2b, matchRI: -0x0001, match64: 0x1bf250001bf2b, modelSI: -0x0001, models64: 0x276b0000276d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bf2b0001bf34, matchRI: 0x1f49, match64: 0x00000000, modelSI: 0x276d, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bf3b0001bf3e, matchRI: 0x1f4a, match64: 0x00000000, modelSI: 0x276e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bf4d0001bf52, matchRI: 0x1f4b, match64: 0x00000000, modelSI: -0x0001, models64: 0x276f00002770},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1bf520001bf58, matchRI: 0x1f4d, match64: 0x00000000, modelSI: 0x2770, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bf580001bf60, matchRI: 0x1f4e, match64: 0x00000000, modelSI: 0x2771, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bf600001bf67, matchRI: 0x1f4f, match64: 0x00000000, modelSI: -0x0001, models64: 0x277200002774},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bf6b0001bf6e, matchRI: -0x0001, match64: 0x1bf6e0001bf72, modelSI: 0x2774, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bf720001bf75, matchRI: 0x1f52, match64: 0x00000000, modelSI: 0x2775, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bf750001bf79, matchRI: 0x1f53, match64: 0x00000000, modelSI: 0x2776, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bf790001bf7f, matchRI: -0x0001, match64: 0x1bf7f0001bf8a, modelSI: 0x2777, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bf900001bf93, matchRI: 0x1f54, match64: 0x00000000, modelSI: 0x2778, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bfa10001bfa4, matchRI: 0x1f55, match64: 0x00000000, modelSI: -0x0001, models64: 0x27790000277c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bfb90001bfbc, matchRI: 0x1f59, match64: 0x00000000, modelSI: -0x0001, models64: 0x277c0000277f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bfd00001bfdc, matchRI: 0x1f5c, match64: 0x00000000, modelSI: 0x277f, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1bfe80001bfee, matchRI: 0x1f5d, match64: 0x00000000, modelSI: 0x2780, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bfee0001bff4, matchRI: 0x1f5e, match64: 0x00000000, modelSI: 0x2781, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1bff40001bff9, matchRI: 0x1f5f, match64: 0x00000000, modelSI: 0x2782, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bff90001bffe, matchRI: 0x1f60, match64: 0x00000000, modelSI: -0x0001, models64: 0x278300002787},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1c01a0001c024, matchRI: 0x1f64, match64: 0x00000000, modelSI: -0x0001, models64: 0x278700002788},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c0240001c02a, matchRI: 0x1f66, match64: 0x00000000, modelSI: 0x2788, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c0320001c039, matchRI: 0x1f67, match64: 0x00000000, modelSI: -0x0001, models64: 0x278900002798},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c0bb0001c0c4, matchRI: 0x1f70, match64: 0x00000000, modelSI: -0x0001, models64: 0x279800002799},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c0c40001c0cd, matchRI: 0x1f72, match64: 0x00000000, modelSI: 0x2799, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c0da0001c0e2, matchRI: 0x1f73, match64: 0x00000000, modelSI: -0x0001, models64: 0x279a0000279c},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c0fc0001c104, matchRI: -0x0001, match64: 0x1c0fc0001c104, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c1040001c10b, matchRI: 0x1f76, match64: 0x00000000, modelSI: -0x0001, models64: 0x279c000027c0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c20a0001c216, matchRI: 0x1f8f, match64: 0x00000000, modelSI: -0x0001, models64: 0x27c000002862},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c8160001c81d, matchRI: 0x202d, match64: 0x00000000, modelSI: -0x0001, models64: 0x286200002864},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c83b0001c840, matchRI: 0x202f, match64: 0x00000000, modelSI: -0x0001, models64: 0x286400002869},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c84e0001c858, matchRI: 0x2035, match64: 0x00000000, modelSI: -0x0001, models64: 0x286900002873},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c8bd0001c8c3, matchRI: 0x203b, match64: 0x00000000, modelSI: -0x0001, models64: 0x287300002877},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c8f70001c8fe, matchRI: 0x203d, match64: 0x00000000, modelSI: -0x0001, models64: 0x287700002879},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c8fe0001c903, matchRI: -0x0001, match64: 0x1c9030001c90c, modelSI: 0x2879, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1c90f0001c914, matchRI: -0x0001, match64: 0x1c90f0001c914, modelSI: -0x0001, models64: 0x287a0000287c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c9140001c919, matchRI: 0x2042, match64: 0x00000000, modelSI: -0x0001, models64: 0x287c00002882},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c9530001c95e, matchRI: 0x2046, match64: 0x00000000, modelSI: -0x0001, models64: 0x288200002884},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1c9650001c96a, matchRI: 0x2048, match64: 0x00000000, modelSI: -0x0001, models64: 0x288400002885},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c96f0001c977, matchRI: -0x0001, match64: 0x1c96f0001c977, modelSI: -0x0001, models64: 0x288500002886},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c9770001c97c, matchRI: 0x204b, match64: 0x00000000, modelSI: -0x0001, models64: 0x288600002888},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c98c0001c994, matchRI: 0x204e, match64: 0x00000000, modelSI: 0x2888, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1c99e0001c9a1, matchRI: 0x204f, match64: 0x00000000, modelSI: -0x0001, models64: 0x288900002890},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1c9b70001c9be, matchRI: 0x2056, match64: 0x00000000, modelSI: -0x0001, models64: 0x2890000028a0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ca530001ca5a, matchRI: 0x2060, match64: 0x00000000, modelSI: 0x28a0, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ca5a0001ca61, matchRI: 0x2061, match64: 0x00000000, modelSI: 0x28a1, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1ca610001ca65, matchRI: 0x2062, match64: 0x00000000, modelSI: -0x0001, models64: 0x28a2000028a4},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1ca800001ca86, matchRI: 0x2063, match64: 0x00000000, modelSI: -0x0001, models64: 0x28a4000028a5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ca920001ca98, matchRI: 0x2065, match64: 0x00000000, modelSI: -0x0001, models64: 0x28a5000028a8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1cab30001cab8, matchRI: 0x2069, match64: 0x00000000, modelSI: 0x28a8, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cac00001cac6, matchRI: 0x206a, match64: 0x00000000, modelSI: -0x0001, models64: 0x28a9000028b6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cb7c0001cb81, matchRI: 0x2070, match64: 0x00000000, modelSI: 0x28b6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cb810001cb86, matchRI: 0x2071, match64: 0x00000000, modelSI: 0x28b7, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1cb860001cb8c, matchRI: 0x2072, match64: 0x00000000, modelSI: 0x28b8, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cb990001cb9d, matchRI: 0x2073, match64: 0x00000000, modelSI: 0x28b9, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cb9d0001cba2, matchRI: -0x0001, match64: 0x1cba20001cba7, modelSI: -0x0001, models64: 0x28ba000028bc},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cbae0001cbb7, matchRI: 0x2076, match64: 0x00000000, modelSI: -0x0001, models64: 0x28bc000028c0},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1cbe80001cbf1, matchRI: 0x2077, match64: 0x00000000, modelSI: -0x0001, models64: 0x28c0000028c2},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1cbfb0001cc04, matchRI: -0x0001, match64: 0x1cc040001cc0a, modelSI: 0x28c2, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1cc1c0001cc22, matchRI: 0x2079, match64: 0x00000000, modelSI: 0x28c3, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1cc220001cc29, matchRI: 0x207a, match64: 0x00000000, modelSI: 0x28c4, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1cc2d0001cc32, matchRI: 0x207b, match64: 0x00000000, modelSI: -0x0001, models64: 0x28c5000028c8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xdab40000daba, matchRI: 0x207f, match64: 0x00000000, modelSI: -0x0001, models64: 0x28c8000028cf},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cc940001cc9b, matchRI: 0x2083, match64: 0x00000000, modelSI: -0x0001, models64: 0x28cf000028e5},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1cdbe0001cdc8, matchRI: 0x208b, match64: 0x00000000, modelSI: 0x28e5, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cdc80001cdd1, matchRI: 0x208c, match64: 0x00000000, modelSI: -0x0001, models64: 0x28e6000028eb},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1ce080001ce11, matchRI: 0x2090, match64: 0x00000000, modelSI: -0x0001, models64: 0x28eb000028ed},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1ce1f0001ce27, matchRI: 0x2093, match64: 0x00000000, modelSI: -0x0001, models64: 0x28ed000028f8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1cebb0001cec0, matchRI: 0x209b, match64: 0x00000000, modelSI: -0x0001, models64: 0x28f800002905},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cf5d0001cf64, matchRI: 0x20a8, match64: 0x00000000, modelSI: 0x2905, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cf640001cf6b, matchRI: 0x20a9, match64: 0x00000000, modelSI: -0x0001, models64: 0x290600002909},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cfad0001cfb1, matchRI: 0x20aa, match64: 0x00000000, modelSI: 0x2909, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1cfb60001cfbf, matchRI: 0x20ab, match64: 0x00000000, modelSI: 0x290a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1cfbf0001cfc3, matchRI: 0x20ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x290b0000291a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d0f90001d102, matchRI: 0x20b8, match64: 0x00000000, modelSI: 0x291a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d1020001d107, matchRI: 0x20b9, match64: 0x00000000, modelSI: 0x291b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d1070001d116, matchRI: 0x20ba, match64: 0x00000000, modelSI: 0x291c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x83050000830a, matchRI: 0x20bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x291d00002925},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d1580001d15f, matchRI: 0x20c4, match64: 0x00000000, modelSI: -0x0001, models64: 0x29250000293f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d2830001d28c, matchRI: 0x20d6, match64: 0x00000000, modelSI: -0x0001, models64: 0x293f00002942},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d2ac0001d2b4, matchRI: 0x20d9, match64: 0x00000000, modelSI: 0x2942, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d2b40001d2bc, matchRI: 0x20da, match64: 0x00000000, modelSI: -0x0001, models64: 0x294300002948},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d2ee0001d2f2, matchRI: 0x20e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x29480000294a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d2f20001d2f7, matchRI: 0x20e3, match64: 0x00000000, modelSI: 0x294a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d2f70001d304, matchRI: -0x0001, match64: 0x1d3040001d310, modelSI: -0x0001, models64: 0x294b0000294c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d3150001d31c, matchRI: 0x20e5, match64: 0x00000000, modelSI: -0x0001, models64: 0x294c0000294f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d3280001d335, matchRI: -0x0001, match64: 0x1d3350001d33a, modelSI: -0x0001, models64: 0x294f00002951},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d3550001d357, matchRI: -0x0001, match64: 0x1d3570001d35f, modelSI: 0x2951, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d3640001d36b, matchRI: 0x20ea, match64: 0x00000000, modelSI: -0x0001, models64: 0x295200002978},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d4a60001d4ab, matchRI: 0x20ff, match64: 0x00000000, modelSI: -0x0001, models64: 0x29780000297a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d4ab0001d4af, matchRI: 0x2102, match64: 0x00000000, modelSI: -0x0001, models64: 0x297a0000297b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d4af0001d4b5, matchRI: -0x0001, match64: 0x1d4af0001d4b5, modelSI: -0x0001, models64: 0x297b0000297c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d4b50001d4b9, matchRI: 0x2105, match64: 0x00000000, modelSI: -0x0001, models64: 0x297c00002980},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1d4d10001d4da, matchRI: 0x2108, match64: 0x00000000, modelSI: 0x2980, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d4da0001d4df, matchRI: 0x2109, match64: 0x00000000, modelSI: 0x2981, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d4df0001d4e8, matchRI: 0x210a, match64: 0x00000000, modelSI: 0x2982, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1d4f20001d4f7, matchRI: 0x210b, match64: 0x00000000, modelSI: -0x0001, models64: 0x298300002986},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d4ff0001d504, matchRI: 0x210f, match64: 0x00000000, modelSI: 0x2986, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d5040001d50a, matchRI: 0x2110, match64: 0x00000000, modelSI: -0x0001, models64: 0x29870000298d},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d51c0001d523, matchRI: 0x2114, match64: 0x00000000, modelSI: -0x0001, models64: 0x298d000029b3},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d6690001d66d, matchRI: 0x2133, match64: 0x00000000, modelSI: -0x0001, models64: 0x29b3000029be},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1d7190001d725, matchRI: 0x213e, match64: 0x00000000, modelSI: -0x0001, models64: 0x29be000029c0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d7490001d74f, matchRI: 0x213f, match64: 0x00000000, modelSI: 0x29c0, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d74f0001d757, matchRI: 0x2140, match64: 0x00000000, modelSI: -0x0001, models64: 0x29c1000029ca},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d7ba0001d7c0, matchRI: 0x2144, match64: 0x00000000, modelSI: 0x29ca, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d7c00001d7c8, matchRI: -0x0001, match64: 0x1d7c80001d7d1, modelSI: -0x0001, models64: 0x29cb000029cc},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d7d30001d7db, matchRI: -0x0001, match64: 0x1d7d30001d7db, modelSI: -0x0001, models64: 0x29cc000029ce},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d7db0001d7e4, matchRI: 0x2148, match64: 0x00000000, modelSI: 0x29ce, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d7e40001d7eb, matchRI: 0x2149, match64: 0x00000000, modelSI: 0x29cf, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d7eb0001d7f2, matchRI: 0x214a, match64: 0x00000000, modelSI: -0x0001, models64: 0x29d0000029d9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d8220001d829, matchRI: 0x2154, match64: 0x00000000, modelSI: -0x0001, models64: 0x29d9000029e4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d89a0001d8ad, matchRI: 0x2155, match64: 0x00000000, modelSI: -0x0001, models64: 0x29e4000029e5},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d8b00001d8b5, matchRI: 0x2157, match64: 0x00000000, modelSI: -0x0001, models64: 0x29e5000029e8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d8b50001d8bb, matchRI: 0x215b, match64: 0x00000000, modelSI: -0x0001, models64: 0x29e8000029ea},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d8c70001d8cc, matchRI: 0x215d, match64: 0x00000000, modelSI: -0x0001, models64: 0x29ea000029eb},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d8cc0001d8d1, matchRI: 0x215f, match64: 0x00000000, modelSI: 0x29eb, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1d8d10001d8d7, matchRI: 0x2160, match64: 0x00000000, modelSI: 0x29ec, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d8d70001d8dd, matchRI: 0x2161, match64: 0x00000000, modelSI: 0x29ed, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d8dd0001d8e1, matchRI: 0x2162, match64: 0x00000000, modelSI: -0x0001, models64: 0x29ee000029f0},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d8ee0001d8f3, matchRI: -0x0001, match64: 0x1d8f30001d8fc, modelSI: 0x29f0, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d9050001d90c, matchRI: -0x0001, match64: 0x1d90c0001d917, modelSI: 0x29f1, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d9230001d927, matchRI: 0x2164, match64: 0x00000000, modelSI: 0x29f2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d9270001d929, matchRI: 0x2165, match64: 0x00000000, modelSI: -0x0001, models64: 0x29f3000029f6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d9420001d946, matchRI: 0x2168, match64: 0x00000000, modelSI: 0x29f6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d9460001d94a, matchRI: 0x2169, match64: 0x00000000, modelSI: 0x29f7, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d94a0001d94f, matchRI: 0x216a, match64: 0x00000000, modelSI: 0x29f8, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d94f0001d956, matchRI: 0x216b, match64: 0x00000000, modelSI: -0x0001, models64: 0x29f9000029fd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d97d0001d981, matchRI: 0x216f, match64: 0x00000000, modelSI: -0x0001, models64: 0x29fd000029ff},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d9810001d987, matchRI: 0x2172, match64: 0x00000000, modelSI: -0x0001, models64: 0x29ff00002a00},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1d9930001d99b, matchRI: 0x2173, match64: 0x00000000, modelSI: 0x2a00, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1d99b0001d99f, matchRI: 0x2174, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a0100002a06},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1d9f60001d9ff, matchRI: 0x2176, match64: 0x00000000, modelSI: 0x2a06, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1da030001da0a, matchRI: 0x2177, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a0700002a0b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1da0f0001da13, matchRI: 0x217c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a0b00002a0c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1da1e0001da25, matchRI: 0x217d, match64: 0x00000000, modelSI: 0x2a0c, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1da250001da2e, matchRI: -0x0001, match64: 0x1da2e0001da35, modelSI: -0x0001, models64: 0x2a0d00002a0e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1da350001da3c, matchRI: 0x217f, match64: 0x00000000, modelSI: 0x2a0e, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1da3e0001da44, matchRI: 0x2180, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a0f00002a13},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1da780001da7d, matchRI: 0x2184, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a1300002a14},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1da7d0001da85, matchRI: 0x2186, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a1400002a16},
			deviceTuple{type64: 0x20d00000213, brand64: 0xf9030000f907, matchRI: 0x2189, match64: 0x00000000, modelSI: 0x2a16, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1da920001da97, matchRI: 0x218a, match64: 0x00000000, modelSI: 0x2a17, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1da970001da9c, matchRI: 0x218b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a1800002a1a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1daa60001daad, matchRI: 0x218e, match64: 0x00000000, modelSI: 0x2a1a, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1daad0001dab5, matchRI: 0x218f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a1b00002a1e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1dadc0001dae2, matchRI: 0x2193, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a1e00002a20},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1daf90001db00, matchRI: 0x2196, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a2000002a27},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1db850001db8b, matchRI: 0x2199, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a2700002a32},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1dbcb0001dbd2, matchRI: 0x219f, match64: 0x00000000, modelSI: 0x2a32, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1dbdd0001dbe3, matchRI: 0x21a0, match64: 0x00000000, modelSI: 0x2a33, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1dbe30001dbe9, matchRI: 0x21a1, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a3400002a40},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1dc570001dc5c, matchRI: 0x21ae, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a4000002a45},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1dc870001dc8f, matchRI: -0x0001, match64: 0x1dc8f0001dc97, modelSI: -0x0001, models64: 0x2a4500002a70},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1ddce0001ddd3, matchRI: 0x21de, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a7000002a72},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1de020001de08, matchRI: 0x21df, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a7200002a89},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1df5e0001df63, matchRI: 0x21e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a8900002a8b},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1df820001df87, matchRI: 0x21eb, match64: 0x00000000, modelSI: 0x2a8b, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1df870001df8f, matchRI: 0x21ec, match64: 0x00000000, modelSI: 0x2a8c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1df9a0001dfa2, matchRI: 0x21ed, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a8d00002a9d},
			deviceTuple{type64: 0x51800000525, brand64: 0x1e0410001e04a, matchRI: 0x21fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a9d00002aa4},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1e0970001e09e, matchRI: -0x0001, match64: 0x1e0970001e09e, modelSI: -0x0001, models64: 0x2aa400002aa7},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1e0a60001e0ab, matchRI: 0x2207, match64: 0x00000000, modelSI: -0x0001, models64: 0x2aa700002aae},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e1000001e106, matchRI: 0x2209, match64: 0x00000000, modelSI: 0x2aae, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e1060001e10a, matchRI: -0x0001, match64: 0x1e10a0001e111, modelSI: -0x0001, models64: 0x2aaf00002ab0},
			deviceTuple{type64: 0x20d00000213, brand64: 0x7b7200007b77, matchRI: 0x220b, match64: 0x00000000, modelSI: 0x2ab0, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e1110001e116, matchRI: 0x220c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ab100002ab4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e1220001e127, matchRI: 0x2210, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ab400002ab6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e12b0001e137, matchRI: 0x2213, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ab600002ab8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1e1510001e15c, matchRI: 0x2214, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ab800002aba},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1e1800001e188, matchRI: 0x2217, match64: 0x00000000, modelSI: -0x0001, models64: 0x2aba00002abd},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1e1880001e18e, matchRI: 0x221b, match64: 0x00000000, modelSI: 0x2abd, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e18e0001e194, matchRI: 0x221c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2abe00002ac4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e1ab0001e1b0, matchRI: 0x2222, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ac400002ad1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e1ff0001e203, matchRI: 0x2230, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ad100002c06},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1e9930001e998, matchRI: 0x2329, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c0600002c0a},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1e9ac0001e9b1, matchRI: 0x232b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c0a00002c0c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1e9c60001e9cd, matchRI: 0x232e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c0c00002c0e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1e9dc0001e9e4, matchRI: 0x2330, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c0e00002c42},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xe38d0000e391, matchRI: 0x2347, match64: 0x00000000, modelSI: 0x2c42, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ecb50001ecbb, matchRI: 0x2348, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c4300002c5d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1eda90001edaf, matchRI: 0x235f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c5d00002c64},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ede00001ede6, matchRI: 0x2367, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c6400002c66},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1edee0001edf4, matchRI: 0x2369, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c6600002c69},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1ee2e0001ee33, matchRI: 0x236a, match64: 0x00000000, modelSI: 0x2c69, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1ee330001ee39, matchRI: 0x236b, match64: 0x00000000, modelSI: 0x2c6a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbc290000bc2f, matchRI: 0x236c, match64: 0x00000000, modelSI: 0x2c6b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ee390001ee3d, matchRI: 0x236d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c6c00002c6f},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1ee3d0001ee43, matchRI: 0x2371, match64: 0x00000000, modelSI: 0x2c6f, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1ee430001ee47, matchRI: 0x2372, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c7000002c73},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ee4d0001ee53, matchRI: 0x2376, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c7300002c7e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1eea00001eea4, matchRI: 0x237f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c7e00002c88},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1ef0d0001ef16, matchRI: 0x2386, match64: 0x00000000, modelSI: 0x2c88, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0xbc570000bc5d, matchRI: 0x2387, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c8900002c8c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ef280001ef2f, matchRI: 0x238b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c8c00002c8d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1ef380001ef3b, matchRI: 0x238d, match64: 0x00000000, modelSI: 0x2c8d, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1ef3b0001ef40, matchRI: 0x238e, match64: 0x00000000, modelSI: 0x2c8e, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ef400001ef42, matchRI: 0x238f, match64: 0x00000000, modelSI: 0x2c8f, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1ef420001ef46, matchRI: 0x2390, match64: 0x00000000, modelSI: 0x2c90, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1ef550001ef5b, matchRI: 0x2391, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c9100002c9b},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1efe20001efe9, matchRI: 0x239a, match64: 0x00000000, modelSI: 0x2c9b, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1eff20001effb, matchRI: 0x239b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c9c00002c9d},
			deviceTuple{type64: 0x940000009f, brand64: 0x1effb0001f003, matchRI: 0x239d, match64: 0x00000000, modelSI: 0x2c9d, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f00b0001f011, matchRI: 0x239e, match64: 0x00000000, modelSI: 0x2c9e, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f0110001f01a, matchRI: 0x239f, match64: 0x00000000, modelSI: 0x2c9f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f01a0001f020, matchRI: -0x0001, match64: 0x1f0200001f028, modelSI: -0x0001, models64: 0x2ca000002ca1},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f0300001f037, matchRI: 0x23a0, match64: 0x00000000, modelSI: 0x2ca1, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1f0370001f046, matchRI: 0x23a1, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ca200002ca3},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1f0610001f06a, matchRI: 0x23a2, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ca300002ca4},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f06a0001f070, matchRI: 0x23a4, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ca400002cad},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f09f0001f0ab, matchRI: 0x23ae, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cad00002cae},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f0be0001f0c4, matchRI: 0x23af, match64: 0x00000000, modelSI: 0x2cae, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f0c40001f0c9, matchRI: 0x23b0, match64: 0x00000000, modelSI: 0x2caf, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f0c90001f0cd, matchRI: 0x23b1, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cb000002d26},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f4840001f48c, matchRI: 0x240f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d2600002d2e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f4c40001f4c9, matchRI: 0x2416, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d2e00002d2f},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f4e10001f4e5, matchRI: 0x2417, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d2f00002d31},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f4e50001f4eb, matchRI: 0x241a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d3100002d35},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f4fa0001f501, matchRI: 0x241e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d3500002d3a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f50b0001f512, matchRI: 0x2424, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d3a00002d3b},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f5120001f51a, matchRI: -0x0001, match64: 0x1f51a0001f51e, modelSI: 0x2d3b, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1f51e0001f525, matchRI: 0x2426, match64: 0x00000000, modelSI: 0x2d3c, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1f5250001f52d, matchRI: 0x2427, match64: 0x00000000, modelSI: 0x2d3d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f52d0001f533, matchRI: 0x2428, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d3e00002d44},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f56b0001f573, matchRI: 0x242f, match64: 0x00000000, modelSI: 0x2d44, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f57a0001f57f, matchRI: 0x2430, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d4500002d4a},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x1f5bd0001f5c1, matchRI: 0x2431, match64: 0x00000000, modelSI: 0x2d4a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f5c10001f5c4, matchRI: 0x2432, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d4b00002d4d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f5f40001f5fc, matchRI: 0x2433, match64: 0x00000000, modelSI: 0x2d4d, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x1f6080001f60e, matchRI: 0x2434, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d4e00002d53},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f6240001f629, matchRI: 0x243a, match64: 0x00000000, modelSI: 0x2d53, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f6300001f634, matchRI: 0x243b, match64: 0x00000000, modelSI: 0x2d54, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f6340001f63c, matchRI: 0x243c, match64: 0x00000000, modelSI: 0x2d55, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f6460001f64c, matchRI: 0x243d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d5600002d68},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f72c0001f732, matchRI: 0x244a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d6800002d6e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1f7af0001f7b2, matchRI: -0x0001, match64: 0x1f7b20001f7ba, modelSI: 0x2d6e, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1f7c00001f7c3, matchRI: 0x244c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d6f00002d74},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1f8260001f82a, matchRI: 0x244d, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f82a0001f82e, matchRI: 0x244e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d7400002d76},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f8340001f83d, matchRI: 0x2451, match64: 0x00000000, modelSI: 0x2d76, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x1f83d0001f842, matchRI: 0x2452, match64: 0x00000000, modelSI: 0x2d77, models64: 0x00000000},
			deviceTuple{type64: 0x940000009f, brand64: 0x1f8420001f849, matchRI: 0x2453, match64: 0x00000000, modelSI: 0x2d78, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f8490001f84e, matchRI: 0x2454, match64: 0x00000000, modelSI: 0x2d79, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1f84e0001f856, matchRI: 0x2455, match64: 0x00000000, modelSI: 0x2d7a, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f8560001f85b, matchRI: 0x2456, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d7b00002d7f},
			deviceTuple{type64: 0x51800000525, brand64: 0x1f8650001f86b, matchRI: 0x245a, match64: 0x00000000, modelSI: 0x2d7f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f86b0001f875, matchRI: 0x245b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d8000002d89},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x1f8c60001f8cc, matchRI: 0x2465, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d8900002e89},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x204ab000204af, matchRI: 0x2550, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e8900002e8a},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x204b3000204b7, matchRI: 0x2552, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e8a00002e94},
			deviceTuple{type64: 0x20d00000213, brand64: 0x204f7000204fb, matchRI: 0x255c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e9400002e99},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2053100020538, matchRI: 0x2562, match64: 0x00000000, modelSI: 0x2e99, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x205380002053e, matchRI: 0x2563, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e9a00002e9e},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2055900020561, matchRI: 0x2567, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e9e00002ea1},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2057c00020581, matchRI: 0x2569, match64: 0x00000000, modelSI: 0x2ea1, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x205880002058d, matchRI: 0x256a, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2058d00020596, matchRI: 0x256b, match64: 0x00000000, modelSI: 0x2ea2, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x205960002059b, matchRI: 0x256c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ea300002ea4},
			deviceTuple{type64: 0x20d00000213, brand64: 0x205af000205b5, matchRI: 0x256d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ea400002ea6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x205b5000205bb, matchRI: 0x2570, match64: 0x00000000, modelSI: 0x2ea6, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x205bb000205bf, matchRI: 0x2571, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ea700002ead},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2060d00020613, matchRI: 0x2574, match64: 0x00000000, modelSI: 0x2ead, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2061300020619, matchRI: 0x2575, match64: 0x00000000, modelSI: 0x2eae, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x206190002061f, matchRI: 0x2576, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eaf00002eb2},
			deviceTuple{type64: 0x20d00000213, brand64: 0x206490002064f, matchRI: 0x2579, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eb200002ec2},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2075a0002075d, matchRI: 0x257d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ec200002ec6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2078c00020792, matchRI: 0x257f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ec600002ec8},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2079200020796, matchRI: 0x2582, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ec800002ed6},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x208350002083c, matchRI: 0x2588, match64: 0x00000000, modelSI: 0x2ed6, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2084300020847, matchRI: 0x2589, match64: 0x00000000, modelSI: 0x2ed7, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x208470002084b, matchRI: 0x258a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ed800002eda},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x208570002085c, matchRI: 0x258d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eda00002edb},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2086300020869, matchRI: 0x258f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2edb00002edc},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2087000020875, matchRI: 0x2591, match64: 0x00000000, modelSI: -0x0001, models64: 0x2edc00002ede},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2087500020877, matchRI: 0x2594, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ede00002ee8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x208c1000208c8, matchRI: 0x259e, match64: 0x00000000, modelSI: 0x2ee8, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x208cc000208d3, matchRI: 0x259f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ee900002eea},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x208db000208df, matchRI: 0x25a1, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eea00002eeb},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x208e5000208ea, matchRI: 0x25a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eeb00002eee},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x208ef000208f4, matchRI: 0x25a6, match64: 0x00000000, modelSI: 0x2eee, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x208f4000208f8, matchRI: 0x25a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eef00002f07},
			deviceTuple{type64: 0x20d00000213, brand64: 0x20a4d00020a52, matchRI: 0x25bd, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f0700002f08},
			deviceTuple{type64: 0x20d00000213, brand64: 0x20a5200020a55, matchRI: 0x25bf, match64: 0x00000000, modelSI: 0x2f08, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x20a5500020a58, matchRI: 0x25c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f0900003016},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2163300021636, matchRI: 0x2676, match64: 0x00000000, modelSI: -0x0001, models64: 0x301600003037},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2176100021766, matchRI: 0x2688, match64: 0x00000000, modelSI: 0x3037, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x217660002176d, matchRI: 0x2689, match64: 0x00000000, modelSI: 0x3038, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2176d00021772, matchRI: 0x268a, match64: 0x00000000, modelSI: -0x0001, models64: 0x30390000303f},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x217c5000217cb, matchRI: 0x268d, match64: 0x00000000, modelSI: 0x303f, models64: 0x00000000},
			deviceTuple{type64: 0x245800002460, brand64: 0x217cb000217d2, matchRI: 0x268e, match64: 0x00000000, modelSI: -0x0001, models64: 0x304000003042},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x217e9000217ee, matchRI: 0x2690, match64: 0x00000000, modelSI: -0x0001, models64: 0x304200003046},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x217ee000217f4, matchRI: -0x0001, match64: 0x217f4000217fa, modelSI: -0x0001, models64: 0x304600003047},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x217fa000217ff, matchRI: 0x2696, match64: 0x00000000, modelSI: -0x0001, models64: 0x304700003049},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x217ff00021802, matchRI: 0x2699, match64: 0x00000000, modelSI: -0x0001, models64: 0x304900003058},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x218b6000218bb, matchRI: 0x26a8, match64: 0x00000000, modelSI: -0x0001, models64: 0x30580000305d},
			deviceTuple{type64: 0x20d00000213, brand64: 0x218f0000218f9, matchRI: 0x26a9, match64: 0x00000000, modelSI: -0x0001, models64: 0x305d0000305e},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2190300021909, matchRI: 0x26ab, match64: 0x00000000, modelSI: 0x305e, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2190d00021912, matchRI: 0x26ac, match64: 0x00000000, modelSI: 0x305f, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2191200021916, matchRI: 0x26ad, match64: 0x00000000, modelSI: -0x0001, models64: 0x306000003061},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2192300021928, matchRI: 0x26ae, match64: 0x00000000, modelSI: -0x0001, models64: 0x306100003063},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2196100021965, matchRI: 0x26af, match64: 0x00000000, modelSI: -0x0001, models64: 0x306300003069},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x219990002199e, matchRI: 0x26b5, match64: 0x00000000, modelSI: -0x0001, models64: 0x30690000306b},
			deviceTuple{type64: 0x20d00000213, brand64: 0x219a8000219ad, matchRI: 0x26b7, match64: 0x00000000, modelSI: 0x306b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x118880001188c, matchRI: 0x26b8, match64: 0x00000000, modelSI: 0x306c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x219b1000219ba, matchRI: 0x26b9, match64: 0x00000000, modelSI: 0x306d, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x219ba000219be, matchRI: 0x26ba, match64: 0x00000000, modelSI: -0x0001, models64: 0x306e00003088},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x21a7200021a76, matchRI: 0x26d5, match64: 0x00000000, modelSI: -0x0001, models64: 0x3088000030a9},
			deviceTuple{type64: 0x20d00000213, brand64: 0x21c2b00021c2f, matchRI: 0x26e1, match64: 0x00000000, modelSI: -0x0001, models64: 0x30a9000030ae},
			deviceTuple{type64: 0x20d00000213, brand64: 0x21c3700021c3c, matchRI: -0x0001, match64: 0x21c3c00021c41, modelSI: 0x30ae, models64: 0x00000000},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x21c4100021c4b, matchRI: -0x0001, match64: 0x21c4b00021c55, modelSI: -0x0001, models64: 0x30af000030b0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x21c5500021c5b, matchRI: 0x26e8, match64: 0x00000000, modelSI: -0x0001, models64: 0x30b0000030b3},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x21c6c00021c6f, matchRI: 0x26ea, match64: 0x00000000, modelSI: 0x30b3, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x21c7800021c7c, matchRI: 0x26eb, match64: 0x00000000, modelSI: -0x0001, models64: 0x30b4000030b9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x21cd900021cdb, matchRI: 0x26ed, match64: 0x00000000, modelSI: -0x0001, models64: 0x30b900003184},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2227200022277, matchRI: -0x0001, match64: 0x2227200022277, modelSI: -0x0001, models64: 0x318400003185},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2229200022297, matchRI: 0x27a2, match64: 0x00000000, modelSI: -0x0001, models64: 0x318500003190},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2239100022397, matchRI: 0x27a8, match64: 0x00000000, modelSI: 0x3190, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x223970002239b, matchRI: 0x27a9, match64: 0x00000000, modelSI: 0x3191, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2239b000223a3, matchRI: 0x27aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x319200003194},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x223bb000223c0, matchRI: 0x27ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x31940000319d},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x2240100022407, matchRI: 0x27b6, match64: 0x00000000, modelSI: 0x319d, models64: 0x00000000},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x224070002240f, matchRI: 0x27b7, match64: 0x00000000, modelSI: -0x0001, models64: 0x319e000031a6},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2244400022449, matchRI: 0x27be, match64: 0x00000000, modelSI: -0x0001, models64: 0x31a6000031b4},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x224e8000224ee, matchRI: 0x27c9, match64: 0x00000000, modelSI: -0x0001, models64: 0x31b4000031b6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x224ee000224f3, matchRI: 0x27cc, match64: 0x00000000, modelSI: -0x0001, models64: 0x31b6000031bf},
			deviceTuple{type64: 0x5db000005e5, brand64: 0x2253200022537, matchRI: 0x27d4, match64: 0x00000000, modelSI: 0x31bf, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x225370002253c, matchRI: 0x27d5, match64: 0x00000000, modelSI: 0x31c0, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x225460002254c, matchRI: 0x27d6, match64: 0x00000000, modelSI: -0x0001, models64: 0x31c1000031c4},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2256d00022571, matchRI: 0x27d8, match64: 0x00000000, modelSI: -0x0001, models64: 0x31c4000031c6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2257b00022580, matchRI: 0x27db, match64: 0x00000000, modelSI: -0x0001, models64: 0x31c6000031eb},
			deviceTuple{type64: 0x2e8000002f5, brand64: 0x228ef000228f4, matchRI: 0x27e3, match64: 0x00000000, modelSI: 0x31eb, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x228f4000228f8, matchRI: 0x27e4, match64: 0x00000000, modelSI: 0x31ec, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x228f8000228fb, matchRI: 0x27e5, match64: 0x00000000, modelSI: -0x0001, models64: 0x31ed000031ef},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x228fb00022900, matchRI: 0x27e8, match64: 0x00000000, modelSI: 0x31ef, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x2290000022905, matchRI: 0x27e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x31f0000031f6},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2293c0002293f, matchRI: 0x27ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x31f6000031fa},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2296d00022971, matchRI: 0x27f1, match64: 0x00000000, modelSI: 0x31fa, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2297100022976, matchRI: 0x27f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x31fb000031fe},
			deviceTuple{type64: 0x20d00000213, brand64: 0x229ae000229b2, matchRI: 0x27f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x31fe00003200},
			deviceTuple{type64: 0x20d00000213, brand64: 0x229ba000229bf, matchRI: 0x27f6, match64: 0x00000000, modelSI: 0x3200, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x229bf000229c4, matchRI: 0x27f7, match64: 0x00000000, modelSI: -0x0001, models64: 0x320100003202},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x229d4000229d8, matchRI: 0x27f8, match64: 0x00000000, modelSI: -0x0001, models64: 0x320200003208},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x229f3000229fd, matchRI: 0x27ff, match64: 0x00000000, modelSI: -0x0001, models64: 0x32080000320b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22a1b00022a21, matchRI: 0x2800, match64: 0x00000000, modelSI: -0x0001, models64: 0x320b00003212},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22a5300022a5b, matchRI: 0x2805, match64: 0x00000000, modelSI: 0x3212, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22a5b00022a62, matchRI: -0x0001, match64: 0x22a6200022a69, modelSI: -0x0001, models64: 0x321300003214},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22a6900022a6d, matchRI: 0x2807, match64: 0x00000000, modelSI: -0x0001, models64: 0x321400003229},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22b7c00022b80, matchRI: 0x280e, match64: 0x00000000, modelSI: 0x3229, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22b8000022b88, matchRI: 0x280f, match64: 0x00000000, modelSI: 0x322a, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22b9000022b96, matchRI: 0x2810, match64: 0x00000000, modelSI: 0x322b, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22b9600022b9b, matchRI: 0x2811, match64: 0x00000000, modelSI: -0x0001, models64: 0x322c0000322f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22ba400022ba9, matchRI: 0x2815, match64: 0x00000000, modelSI: -0x0001, models64: 0x322f00003231},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22ba900022bae, matchRI: 0x2818, match64: 0x00000000, modelSI: -0x0001, models64: 0x323100003239},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22bc800022bd4, matchRI: 0x2821, match64: 0x00000000, modelSI: -0x0001, models64: 0x32390000323b},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22bd900022bde, matchRI: 0x2824, match64: 0x00000000, modelSI: 0x323b, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22bde00022be2, matchRI: 0x2825, match64: 0x00000000, modelSI: -0x0001, models64: 0x323c0000328c},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22e9700022e9d, matchRI: 0x283b, match64: 0x00000000, modelSI: 0x328c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22ea400022ea7, matchRI: 0x283c, match64: 0x00000000, modelSI: -0x0001, models64: 0x328d0000328f},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22eaf00022eb4, matchRI: 0x283f, match64: 0x00000000, modelSI: -0x0001, models64: 0x328f00003291},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22eca00022ed0, matchRI: 0x2841, match64: 0x00000000, modelSI: -0x0001, models64: 0x329100003297},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22f0400022f0c, matchRI: 0x2845, match64: 0x00000000, modelSI: -0x0001, models64: 0x329700003298},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22f0c00022f12, matchRI: 0x2847, match64: 0x00000000, modelSI: 0x3298, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22f1200022f16, matchRI: 0x2848, match64: 0x00000000, modelSI: 0x3299, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22f1600022f1d, matchRI: 0x2849, match64: 0x00000000, modelSI: -0x0001, models64: 0x329a0000329c},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22f3600022f3c, matchRI: 0x284c, match64: 0x00000000, modelSI: 0x329c, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22f3c00022f40, matchRI: 0x284d, match64: 0x00000000, modelSI: -0x0001, models64: 0x329d000032a0},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22f5d00022f63, matchRI: 0x2850, match64: 0x00000000, modelSI: 0x32a0, models64: 0x00000000},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22f6300022f69, matchRI: 0x2851, match64: 0x00000000, modelSI: -0x0001, models64: 0x32a1000032a4},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22f7000022f74, matchRI: 0x2855, match64: 0x00000000, modelSI: 0x32a4, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22f7400022f7b, matchRI: 0x2856, match64: 0x00000000, modelSI: -0x0001, models64: 0x32a5000032a8},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22f8500022f8e, matchRI: 0x285a, match64: 0x00000000, modelSI: -0x0001, models64: 0x32a8000032a9},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x22f8e00022f96, matchRI: 0x285c, match64: 0x00000000, modelSI: 0x32a9, models64: 0x00000000},
			deviceTuple{type64: 0x20d00000213, brand64: 0x22f9600022f9b, matchRI: 0x285d, match64: 0x00000000, modelSI: -0x0001, models64: 0x32aa000032dd},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x232f3000232fb, matchRI: 0x2871, match64: 0x00000000, modelSI: -0x0001, models64: 0x32dd000032df},
			deviceTuple{type64: 0x1ab000001b5, brand64: 0x2330100023305, matchRI: 0x2874, match64: 0x00000000, modelSI: -0x0001, models64: 0x32df000032e8},
		},
		// notebooks.yml
		{
			deviceTuple{type64: 0x9d7000009de, brand64: 0x73200000736, matchRI: 0x287b, match64: 0x00000000, modelSI: -0x0001, models64: 0x32e8000032eb},
			deviceTuple{type64: 0x9d7000009de, brand64: 0x35d9000035dd, matchRI: 0x287f, match64: 0x00000000, modelSI: -0x0001, models64: 0x32eb000032f4},
			deviceTuple{type64: 0x9d7000009de, brand64: 0x684c00006850, matchRI: 0x2889, match64: 0x00000000, modelSI: -0x0001, models64: 0x32f4000032f8},
			deviceTuple{type64: 0x9d7000009de, brand64: 0x956c0000956e, matchRI: 0x288a, match64: 0x00000000, modelSI: -0x0001, models64: 0x32f800003303},
			deviceTuple{type64: 0x9d7000009de, brand64: 0xf12e0000f134, matchRI: 0x288d, match64: 0x00000000, modelSI: -0x0001, models64: 0x330300003307},
			deviceTuple{type64: 0x9d7000009de, brand64: 0x235b9000235c2, matchRI: 0x2892, match64: 0x00000000, modelSI: 0x3307, models64: 0x00000000},
			deviceTuple{type64: 0x9d7000009de, brand64: 0x1c9b70001c9be, matchRI: 0x2893, match64: 0x00000000, modelSI: 0x3308, models64: 0x00000000},
			deviceTuple{type64: 0x9d7000009de, brand64: 0x1cc940001cc9b, matchRI: -0x0001, match64: 0x235f300023602, modelSI: -0x0001, models64: 0x33090000330b},
		},
		// portable_media_player.yml
		{
			deviceTuple{type64: 0xa01b0000a030, brand64: 0x243d00002442, matchRI: 0x2896, match64: 0x00000000, modelSI: -0x0001, models64: 0x330b00003313},
			deviceTuple{type64: 0xa01b0000a030, brand64: 0x2366200023667, matchRI: 0x289f, match64: 0x00000000, modelSI: 0x3313, models64: 0x00000000},
			deviceTuple{type64: 0xa01b0000a030, brand64: 0x236670002366b, matchRI: -0x0001, match64: 0x236670002366b, modelSI: -0x0001, models64: 0x331400003316},
			deviceTuple{type64: 0xa01b0000a030, brand64: 0x236770002367c, matchRI: 0x28a1, match64: 0x00000000, modelSI: 0x3316, models64: 0x00000000},
			deviceTuple{type64: 0xa01b0000a030, brand64: 0x1160000011f, matchRI: -0x0001, match64: 0x2367c0002368c, modelSI: 0x3317, models64: 0x00000000},
			deviceTuple{type64: 0xa01b0000a030, brand64: 0x14fe200014feb, matchRI: 0x28a2, match64: 0x00000000, modelSI: 0x3318, models64: 0x00000000},
			deviceTuple{type64: 0xa01b0000a030, brand64: 0x2369300023698, matchRI: 0x28a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x33190000331c},
			deviceTuple{type64: 0xa01b0000a030, brand64: 0x180000001f, matchRI: 0x28a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x331c00003323},
			deviceTuple{type64: 0xa01b0000a030, brand64: 0x2373e00023746, matchRI: -0x0001, match64: 0x2374600023751, modelSI: -0x0001, models64: 0x332300003324},
			deviceTuple{type64: 0xa01b0000a030, brand64: 0x2375100023759, matchRI: 0x28aa, match64: 0x00000000, modelSI: 0x3324, models64: 0x00000000},
			deviceTuple{type64: 0xa01b0000a030, brand64: 0x237590002375d, matchRI: 0x28ab, match64: 0x00000000, modelSI: 0x3325, models64: 0x00000000},
		},
		// shell_tv.yml
		{
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2375d00023762, matchRI: -0x0001, match64: 0x237620002376d, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x46c00000470, matchRI: -0x0001, match64: 0x2376d00023777, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x3ea600003ea9, matchRI: -0x0001, match64: 0x2377700023780, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x64b4000064b8, matchRI: -0x0001, match64: 0x237800002378a, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x690b00006910, matchRI: -0x0001, match64: 0x2378a00023795, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x6fac00006fb0, matchRI: -0x0001, match64: 0x237950002379f, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x763f00007646, matchRI: 0x28ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x9bcb00009bcd, matchRI: -0x0001, match64: 0x2379f000237a7, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xcd6f0000cd72, matchRI: -0x0001, match64: 0x237a7000237b0, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x237b0000237b5, matchRI: -0x0001, match64: 0x237b5000237c0, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x237c0000237c5, matchRI: -0x0001, match64: 0x237c5000237d0, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xf0ec0000f0f0, matchRI: -0x0001, match64: 0x237d0000237da, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x237da000237e0, matchRI: -0x0001, match64: 0x237e0000237ec, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xfe290000fe2e, matchRI: -0x0001, match64: 0x237ec000237f7, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1288000012887, matchRI: -0x0001, match64: 0x237f700023804, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x135bb000135c0, matchRI: -0x0001, match64: 0x238040002380f, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1b8b00001b8b8, matchRI: -0x0001, match64: 0x2380f0002381d, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bb3c0001bb41, matchRI: -0x0001, match64: 0x2381d00023828, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bcec0001bcef, matchRI: -0x0001, match64: 0x2382800023830, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c84e0001c858, matchRI: -0x0001, match64: 0x2383000023840, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x208db000208df, matchRI: -0x0001, match64: 0x238400002384a, modelSI: -0x0001, models64: 0x00000000},
		},
		// televisions.yml
		{
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x44700000450, matchRI: 0x28ad, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x45000000459, matchRI: 0x28ae, match64: 0x00000000, modelSI: -0x0001, models64: 0x332600003327},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x5090000050c, matchRI: -0x0001, match64: 0x5090000050c, modelSI: -0x0001, models64: 0x332700003328},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x52d00000532, matchRI: 0x28b1, match64: 0x00000000, modelSI: -0x0001, models64: 0x332800003329},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x238540002385b, matchRI: -0x0001, match64: 0x238540002385b, modelSI: -0x0001, models64: 0x33290000332a},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2385b00023865, matchRI: -0x0001, match64: 0x2385b00023865, modelSI: -0x0001, models64: 0x332a0000332b},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x3c2c00003c31, matchRI: -0x0001, match64: 0x238650002386a, modelSI: -0x0001, models64: 0x332b0000332c},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x238710002387c, matchRI: -0x0001, match64: 0x2387c00023887, modelSI: 0x332c, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x42e8000042f1, matchRI: 0x28b4, match64: 0x00000000, modelSI: -0x0001, models64: 0x332d0000332e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x4d1d00004d21, matchRI: 0x28b5, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x524f00005255, matchRI: 0x28b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x535700005360, matchRI: -0x0001, match64: 0x535700005360, modelSI: -0x0001, models64: 0x332e0000332f},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2389d000238a4, matchRI: -0x0001, match64: 0x2389d000238a4, modelSI: 0x332f, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x238aa000238ad, matchRI: -0x0001, match64: 0x238aa000238ad, modelSI: 0x3330, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x68e8000068f0, matchRI: 0x28b8, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x238b5000238bf, matchRI: 0x28b9, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x76530000765d, matchRI: 0x28ba, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x238bf000238c2, matchRI: 0x28bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x7e4f00007e55, matchRI: 0x28bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x4aa000004af, matchRI: 0x28bd, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x238c2000238c7, matchRI: 0x28be, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x944f00009456, matchRI: 0x28bf, match64: 0x00000000, modelSI: -0x0001, models64: 0x333100003332},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x993b00009940, matchRI: 0x28c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x333200003333},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x9c4200009c4a, matchRI: 0x28c1, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x9e2800009e2f, matchRI: 0x28c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x33330000333b},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xa0470000a04e, matchRI: 0x28c5, match64: 0x00000000, modelSI: -0x0001, models64: 0x333b0000333c},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x83b6000083bd, matchRI: 0x28c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x239170002391c, matchRI: 0x28c7, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xbc150000bc1a, matchRI: 0x28c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x333c00003343},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xbcf70000bcfe, matchRI: 0x28cb, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2397100023975, matchRI: -0x0001, match64: 0x2397100023975, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x239750002397a, matchRI: -0x0001, match64: 0x239750002397a, modelSI: -0x0001, models64: 0x334300003344},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2397a00023981, matchRI: -0x0001, match64: 0x2397a00023981, modelSI: -0x0001, models64: 0x334400003346},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xcd6f0000cd72, matchRI: 0x28cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x334600003347},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x2398a0002398e, matchRI: 0x28d0, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xd1000000d106, matchRI: 0x28d1, match64: 0x00000000, modelSI: -0x0001, models64: 0x334700003348},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xdcf70000dcf9, matchRI: -0x0001, match64: 0x2399500023998, modelSI: -0x0001, models64: 0x334800003358},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x239e4000239ea, matchRI: 0x28db, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xfb7c0000fb84, matchRI: 0x28dc, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x239ea000239f0, matchRI: 0x28dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x239f0000239f5, matchRI: 0x28de, match64: 0x00000000, modelSI: -0x0001, models64: 0x335800003359},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0xfe430000fe48, matchRI: 0x28e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x239f5000239fa, matchRI: 0x28e1, match64: 0x00000000, modelSI: -0x0001, models64: 0x33590000335a},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1031a0001031d, matchRI: 0x28e3, match64: 0x00000000, modelSI: -0x0001, models64: 0x335a0000335b},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a0f00023a18, matchRI: -0x0001, match64: 0x23a0f00023a18, modelSI: -0x0001, models64: 0x335b0000335c},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a1800023a20, matchRI: 0x28e5, match64: 0x00000000, modelSI: -0x0001, models64: 0x335c0000335d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x10dcb00010dd1, matchRI: -0x0001, match64: 0x10dcb00010dd1, modelSI: -0x0001, models64: 0x335d0000335e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a2000023a24, matchRI: -0x0001, match64: 0x23a2000023a24, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1156b00011570, matchRI: -0x0001, match64: 0x23a2400023a29, modelSI: -0x0001, models64: 0x335e0000335f},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a3400023a3d, matchRI: 0x28e8, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1463f00014641, matchRI: 0x28e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a3d00023a41, matchRI: -0x0001, match64: 0x23a3d00023a41, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a4100023a48, matchRI: 0x28ea, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x14fe200014feb, matchRI: -0x0001, match64: 0x14fe200014feb, modelSI: -0x0001, models64: 0x335f00003363},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x152380001523f, matchRI: 0x28ef, match64: 0x00000000, modelSI: -0x0001, models64: 0x336300003365},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x156270001562f, matchRI: 0x28f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1645d00016463, matchRI: 0x28f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x167d6000167db, matchRI: 0x28f4, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a6600023a6a, matchRI: 0x28f5, match64: 0x00000000, modelSI: -0x0001, models64: 0x336500003367},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a7800023a7b, matchRI: 0x28f6, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a7b00023a7f, matchRI: 0x28f7, match64: 0x00000000, modelSI: -0x0001, models64: 0x336700003368},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a8800023a8c, matchRI: 0x28f8, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23a8c00023a92, matchRI: 0x28f9, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x180000001f, matchRI: 0x28fa, match64: 0x00000000, modelSI: -0x0001, models64: 0x33680000336b},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23aad00023ab7, matchRI: -0x0001, match64: 0x23aad00023ab7, modelSI: -0x0001, models64: 0x336b0000336d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1a25a0001a25f, matchRI: 0x28ff, match64: 0x00000000, modelSI: -0x0001, models64: 0x336d00003372},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1aa900001aa98, matchRI: -0x0001, match64: 0x23ac200023acb, modelSI: -0x0001, models64: 0x337200003373},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23acb00023adb, matchRI: 0x2905, match64: 0x00000000, modelSI: -0x0001, models64: 0x337300003375},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x18e00000192, matchRI: -0x0001, match64: 0x18e00000192, modelSI: -0x0001, models64: 0x33750000337b},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bcec0001bcef, matchRI: 0x290d, match64: 0x00000000, modelSI: -0x0001, models64: 0x337b0000337c},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1bee30001beed, matchRI: 0x290f, match64: 0x00000000, modelSI: -0x0001, models64: 0x337c0000337d},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23af300023af8, matchRI: 0x2911, match64: 0x00000000, modelSI: -0x0001, models64: 0x337d0000337e},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c0c40001c0cd, matchRI: -0x0001, match64: 0x1c0c40001c0cd, modelSI: -0x0001, models64: 0x337e0000337f},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b0300023b0e, matchRI: -0x0001, match64: 0x23b0300023b0e, modelSI: -0x0001, models64: 0x337f00003380},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b2200023b2a, matchRI: 0x2913, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b2a00023b35, matchRI: -0x0001, match64: 0x23b2a00023b35, modelSI: -0x0001, models64: 0x338000003381},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c0fc0001c104, matchRI: 0x2915, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c84e0001c858, matchRI: -0x0001, match64: 0x1c84e0001c858, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1c9b70001c9be, matchRI: 0x2916, match64: 0x00000000, modelSI: -0x0001, models64: 0x338100003388},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1cc940001cc9b, matchRI: -0x0001, match64: 0x1cc940001cc9b, modelSI: -0x0001, models64: 0x33880000338a},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1d7eb0001d7f2, matchRI: 0x291e, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b7400023b77, matchRI: 0x291f, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x1de020001de08, matchRI: 0x2920, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b7700023b7f, matchRI: 0x2921, match64: 0x00000000, modelSI: -0x0001, models64: 0x338a0000338c},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b8a00023b94, matchRI: 0x2924, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1a7000001a9, brand64: 0x23b9400023b9c, matchRI: 0x2925, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
		},
	}
	__dr_dm = []modelTuple{
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xb00000018},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f00000027, model64: 0x2700000030},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3000000038, model64: 0x3800000045},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x450000004d, model64: 0x4d00000064},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x640000006c, model64: 0x6c0000007b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0001, match64: 0x00000000, model64: 0x7b0000008b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad000000b1, model64: 0xb1000000b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbb000000c7, model64: 0xc7000000ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0003, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4000000e4, model64: 0xe4000000e7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf4000000fe},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x10d00000116},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12300000130, model64: 0x12300000130},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1300000013a, model64: 0x1300000013a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a00000142, model64: 0x13a00000142},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1420000014d, model64: 0x14d00000157},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11f00000123, model64: 0x1570000015f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1690000016d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x17b00000181},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1850000018e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x192000001a0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x000a, match64: 0x00000000, model64: 0x1b5000001c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x000b, match64: 0x00000000, model64: 0x1c1000001cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x000d, match64: 0x00000000, model64: 0x1cf000001d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x000e, match64: 0x00000000, model64: 0x1d1000001d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x000f, match64: 0x00000000, model64: 0x1d8000001de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0010, match64: 0x00000000, model64: 0x1de000001e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0011, match64: 0x00000000, model64: 0x1e5000001e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0012, match64: 0x00000000, model64: 0x1e7000001ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0013, match64: 0x00000000, model64: 0x1ed000001f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0014, match64: 0x00000000, model64: 0x1f4000001f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0015, match64: 0x00000000, model64: 0x1f6000001f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0016, match64: 0x00000000, model64: 0x1f8000001fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0017, match64: 0x00000000, model64: 0x1fb000001fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0018, match64: 0x00000000, model64: 0x1fe00000201},
		modelTuple{type64: 0x2700000027, matchRI: 0x001a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x001b, match64: 0x00000000, model64: 0x2060000020a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x001d, match64: 0x00000000, model64: 0x2130000021b},
		modelTuple{type64: 0x2700000027, matchRI: 0x001f, match64: 0x00000000, model64: 0x21d00000227},
		modelTuple{type64: 0x2700000027, matchRI: 0x0020, match64: 0x00000000, model64: 0x22700000231},
		modelTuple{type64: 0x2700000027, matchRI: 0x0021, match64: 0x00000000, model64: 0x2310000023a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a00000241, model64: 0x2410000024d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0022, match64: 0x00000000, model64: 0x24d00000256},
		modelTuple{type64: 0x2700000027, matchRI: 0x0023, match64: 0x00000000, model64: 0x2560000025f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0024, match64: 0x00000000, model64: 0x25f0000026a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0025, match64: 0x00000000, model64: 0x26a00000274},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0027, match64: 0x00000000, model64: 0x2790000027e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0028, match64: 0x00000000, model64: 0x27e00000286},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0029, match64: 0x00000000, model64: 0x2860000028f},
		modelTuple{type64: 0x2700000027, matchRI: 0x002a, match64: 0x00000000, model64: 0x28f00000295},
		modelTuple{type64: 0x2700000027, matchRI: 0x002b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2950000029d, model64: 0x29d000002a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x002c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2ad000002b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2be000002c4, model64: 0x2be000002c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2c4000002c9, model64: 0x2c9000002ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2ce000002d5, model64: 0x2d5000002dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2dc000002e1, model64: 0x2dc000002e1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0033, match64: 0x00000000, model64: 0x2f700000304},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3040000030c, model64: 0x3040000030c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x30c00000314, model64: 0x30c00000314},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3140000031c, model64: 0x31c00000321},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3250000032e, model64: 0x32e00000332},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3320000033e, model64: 0x33e00000345},
		modelTuple{type64: 0x2700000027, matchRI: 0x0034, match64: 0x00000000, model64: 0x34500000349},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34900000356, model64: 0x3560000035f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x35f00000367, model64: 0x3670000036a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x36a00000372, model64: 0x37200000375},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x37500000380, model64: 0x38000000386},
		modelTuple{type64: 0x2700000027, matchRI: 0x0035, match64: 0x00000000, model64: 0x3860000038d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0036, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x397000003a5, model64: 0x3a5000003b3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x003b, match64: 0x00000000, model64: 0x3bf000003ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x003c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x003d, match64: 0x00000000, model64: 0x3ce000003d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x003e, match64: 0x00000000, model64: 0x3d0000003d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x003f, match64: 0x00000000, model64: 0x3d2000003d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0040, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0042, match64: 0x00000000, model64: 0x3de000003e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3e6000003ee, model64: 0x3ee000003f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3f7000003fe, model64: 0x3f7000003fe},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x40300000411},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4140000041b, model64: 0x41b00000427},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42700000434, model64: 0x43400000447},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x46400000469},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4750000047a, model64: 0x47a00000482},
		modelTuple{type64: 0x2700000027, matchRI: 0x004b, match64: 0x00000000, model64: 0x48200000486},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4860000048b, model64: 0x48b00000491},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49100000496, model64: 0x4960000049b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49b000004a0, model64: 0x4a0000004a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a5000004aa, model64: 0x4aa000004af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4af000004b4, model64: 0x4b4000004b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b7000004bc, model64: 0x4bc000004be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4be000004c3, model64: 0x4c3000004c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c5000004ca, model64: 0x37200000375},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ca000004cf, model64: 0x32e00000332},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4cf000004d4, model64: 0x4d4000004d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d7000004dc, model64: 0x2f5000002f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4dc000004e1, model64: 0x4e1000004e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x004c, match64: 0x00000000, model64: 0x4e3000004e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ea000004f4, model64: 0x4f4000004f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f8000004ff, model64: 0x4ff00000502},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0050, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0051, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0052, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5250000052d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0054, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53a00000542, model64: 0x5420000054b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0057, match64: 0x00000000, model64: 0x54b00000557},
		modelTuple{type64: 0x2700000027, matchRI: 0x0058, match64: 0x00000000, model64: 0x55700000562},
		modelTuple{type64: 0x2700000027, matchRI: 0x0059, match64: 0x00000000, model64: 0x56200000570},
		modelTuple{type64: 0x2700000027, matchRI: 0x005a, match64: 0x00000000, model64: 0x57000000574},
		modelTuple{type64: 0x2700000027, matchRI: 0x005b, match64: 0x00000000, model64: 0x5740000057b},
		modelTuple{type64: 0x2700000027, matchRI: 0x005c, match64: 0x00000000, model64: 0x57b00000584},
		modelTuple{type64: 0x2700000027, matchRI: 0x005d, match64: 0x00000000, model64: 0x5840000058d},
		modelTuple{type64: 0x2700000027, matchRI: 0x005e, match64: 0x00000000, model64: 0x58d00000594},
		modelTuple{type64: 0x2700000027, matchRI: 0x005f, match64: 0x00000000, model64: 0x5940000059f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0060, match64: 0x00000000, model64: 0x59f000005ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0061, match64: 0x00000000, model64: 0x5ab000005b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0062, match64: 0x00000000, model64: 0x5b4000005be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0063, match64: 0x00000000, model64: 0x5be000005ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0064, match64: 0x00000000, model64: 0x5ca000005d2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e5000005f0, model64: 0x5f0000005fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5fb0000060a, model64: 0x60a00000619},
		modelTuple{type64: 0x2700000027, matchRI: 0x0067, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x006b, match64: 0x00000000, model64: 0x6240000062f},
		modelTuple{type64: 0x2700000027, matchRI: 0x006c, match64: 0x00000000, model64: 0x62f00000637},
		modelTuple{type64: 0x2700000027, matchRI: 0x006d, match64: 0x00000000, model64: 0x63700000643},
		modelTuple{type64: 0x2700000027, matchRI: 0x006e, match64: 0x00000000, model64: 0x6430000064a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0070, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x0071, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0074, match64: 0x00000000, model64: 0x65f00000663},
		modelTuple{type64: 0x2700000027, matchRI: 0x0075, match64: 0x00000000, model64: 0x66300000674},
		modelTuple{type64: 0x2700000027, matchRI: 0x0076, match64: 0x00000000, model64: 0x6740000067c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0077, match64: 0x00000000, model64: 0x67c00000689},
		modelTuple{type64: 0x2700000027, matchRI: 0x0078, match64: 0x00000000, model64: 0x68900000694},
		modelTuple{type64: 0x2700000027, matchRI: 0x0079, match64: 0x00000000, model64: 0x694000006a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x007a, match64: 0x00000000, model64: 0x6a1000006ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x007b, match64: 0x00000000, model64: 0x6ae000006b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x007c, match64: 0x00000000, model64: 0x6b7000006bf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x007d, match64: 0x00000000, model64: 0x6bf000006c7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x007e, match64: 0x00000000, model64: 0x6c7000006d0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x007f, match64: 0x00000000, model64: 0x6d0000006d8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0082, match64: 0x00000000, model64: 0x6e5000006f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0083, match64: 0x00000000, model64: 0x6f1000006fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0084, match64: 0x00000000, model64: 0x6fd00000704},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7040000070c, model64: 0x70c00000714},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7140000071f, model64: 0x71f0000072a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0085, match64: 0x00000000, model64: 0x72a00000732},
		modelTuple{type64: 0x51800000525, matchRI: 0x0087, match64: 0x00000000, model64: 0x7360000073e},
		modelTuple{type64: 0x51800000525, matchRI: 0x0088, match64: 0x00000000, model64: 0x73e00000745},
		modelTuple{type64: 0x51800000525, matchRI: 0x0089, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x008a, match64: 0x00000000, model64: 0x7450000074d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x008b, match64: 0x00000000, model64: 0x74d00000754},
		modelTuple{type64: 0x20d00000213, matchRI: 0x008c, match64: 0x00000000, model64: 0x7540000075d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x008d, match64: 0x00000000, model64: 0x75d00000764},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x7640000076e, model64: 0x76e00000777},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x7770000077d, model64: 0x7770000077d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x008e, match64: 0x00000000, model64: 0x77d00000789},
		modelTuple{type64: 0x20d00000213, matchRI: 0x008f, match64: 0x00000000, model64: 0x78900000795},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x7950000079b, model64: 0x79b000007a4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0090, match64: 0x00000000, model64: 0x7a4000007b1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x7b1000007ba, model64: 0x7ba000007c7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0091, match64: 0x00000000, model64: 0x7c7000007d0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0092, match64: 0x00000000, model64: 0x7d0000007dd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0093, match64: 0x00000000, model64: 0x7dd000007e9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0094, match64: 0x00000000, model64: 0x7e9000007f2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0095, match64: 0x00000000, model64: 0x7f2000007ff},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0096, match64: 0x00000000, model64: 0x7ff0000080b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0097, match64: 0x00000000, model64: 0x80b00000818},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8180000081c, model64: 0x81c00000823},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x82300000827, model64: 0x82700000830},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0098, match64: 0x00000000, model64: 0x83000000837},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x83700000844, model64: 0x8440000084c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x84c00000856, model64: 0x8560000085b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x85b00000861, model64: 0x8610000086b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0099, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x86b00000878, model64: 0x87800000880},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8800000088c, model64: 0x8800000088c},
		modelTuple{type64: 0x2700000027, matchRI: 0x009a, match64: 0x00000000, model64: 0x88c00000897},
		modelTuple{type64: 0x2700000027, matchRI: 0x009b, match64: 0x00000000, model64: 0x897000008a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x009c, match64: 0x00000000, model64: 0x8a2000008b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x009d, match64: 0x00000000, model64: 0x8b0000008bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x009e, match64: 0x00000000, model64: 0x8bd000008ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x009f, match64: 0x00000000, model64: 0x8ca000008d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a0, match64: 0x00000000, model64: 0x8d3000008dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a1, match64: 0x00000000, model64: 0x8dc000008e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a2, match64: 0x00000000, model64: 0x8e5000008f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a3, match64: 0x00000000, model64: 0x8f2000008ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a4, match64: 0x00000000, model64: 0x8ff0000090c},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a5, match64: 0x00000000, model64: 0x90c00000918},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a6, match64: 0x00000000, model64: 0x91800000922},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a7, match64: 0x00000000, model64: 0x9220000092d},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a8, match64: 0x00000000, model64: 0x92d0000093a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a9, match64: 0x00000000, model64: 0x93a00000947},
		modelTuple{type64: 0x2700000027, matchRI: 0x00aa, match64: 0x00000000, model64: 0x91800000922},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ab, match64: 0x00000000, model64: 0x94700000954},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ac, match64: 0x00000000, model64: 0x9540000095f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ad, match64: 0x00000000, model64: 0x95f0000096a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ae, match64: 0x00000000, model64: 0x96a00000976},
		modelTuple{type64: 0x2700000027, matchRI: 0x00af, match64: 0x00000000, model64: 0x97600000981},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b0, match64: 0x00000000, model64: 0x9810000098f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b1, match64: 0x00000000, model64: 0x98f0000099f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b2, match64: 0x00000000, model64: 0x99f000009aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b3, match64: 0x00000000, model64: 0x9aa000009b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b5000009be, model64: 0x9be000009c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b4, match64: 0x00000000, model64: 0x9c3000009ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x00b5, match64: 0x00000000, model64: 0x9ce000009d7},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x00b6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x00b7, match64: 0x00000000, model64: 0x9de000009f0},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x00b8, match64: 0x00000000, model64: 0x9f0000009fd},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x00b9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x00ba, match64: 0x00000000, model64: 0x9fd00000a06},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x00bb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00bc, match64: 0x00000000, model64: 0xa0600000a14},
		modelTuple{type64: 0x2700000027, matchRI: 0x00bd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x00be, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x00bf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1a00000a20, model64: 0xa2000000a2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2c00000a31, model64: 0xa3100000a36},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c2, match64: 0x00000000, model64: 0xa3d00000a4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4f00000a57, model64: 0xa5700000a59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5900000a62, model64: 0xa6200000a65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6500000a68, model64: 0xa6800000a72},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c5, match64: 0x00000000, model64: 0xa7200000a79},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c6, match64: 0x00000000, model64: 0xa7900000a7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7c00000a7f, model64: 0xa7f00000a82},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c7, match64: 0x00000000, model64: 0xa8200000a8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c8, match64: 0x00000000, model64: 0xa8b00000a8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c9, match64: 0x00000000, model64: 0xa8f00000a91},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ca, match64: 0x00000000, model64: 0xa9100000a99},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cb, match64: 0x00000000, model64: 0xa9900000a9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cc, match64: 0x00000000, model64: 0xa9f00000aa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cd, match64: 0x00000000, model64: 0xaa500000aab},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ce, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00cf, match64: 0x00000000, model64: 0xaab00000ab1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xab100000ab8, model64: 0xab100000ab8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00d0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00d1, match64: 0x00000000, model64: 0xab800000ac0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00d3, match64: 0x00000000, model64: 0xac700000acc},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xacc00000ad2, model64: 0xacc00000ad2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00d4, match64: 0x00000000, model64: 0xad200000adf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00d5, match64: 0x00000000, model64: 0xadf00000ae9},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d6, match64: 0x00000000, model64: 0xae900000af7},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d7, match64: 0x00000000, model64: 0xaf700000b03},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x00da, match64: 0x00000000, model64: 0xb1e00000b26},
		modelTuple{type64: 0x2700000027, matchRI: 0x00db, match64: 0x00000000, model64: 0xb2600000b2c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x00dc, match64: 0x00000000, model64: 0xb2c00000b36},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x00dd, match64: 0x00000000, model64: 0xb3600000b42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb4700000b52, model64: 0xb5200000b64},
		modelTuple{type64: 0x2700000027, matchRI: 0x00df, match64: 0x00000000, model64: 0xb6400000b71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7100000b7d, model64: 0xb7d00000b8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8a00000b91, model64: 0xb9100000b9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb9e00000ba9, model64: 0xba900000bb7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbb700000bc2, model64: 0xbc200000bcf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbcf00000bda, model64: 0xbda00000be9},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e0, match64: 0x00000000, model64: 0xbe900000bf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e1, match64: 0x00000000, model64: 0xbf400000c00},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0000000c0c, model64: 0xc0c00000c1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1b00000c25, model64: 0xc2500000c31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3100000c3a, model64: 0xc3a00000c4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4a00000c53, model64: 0xc5300000c5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e3, match64: 0x00000000, model64: 0xc5e00000c6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e4, match64: 0x00000000, model64: 0xc6a00000c74},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e5, match64: 0x00000000, model64: 0xc7400000c7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e6, match64: 0x00000000, model64: 0xc7a00000c81},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e7, match64: 0x00000000, model64: 0xc8100000c8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e8, match64: 0x00000000, model64: 0xc9500000c9b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x00eb, match64: 0x00000000, model64: 0xca800000cb2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xcb800000cc2, model64: 0xcc200000ccb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ef, match64: 0x00000000, model64: 0xcd400000cd9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd900000ce0, model64: 0xce000000ce7},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f0, match64: 0x00000000, model64: 0xce700000cec},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f1, match64: 0x00000000, model64: 0xcec00000cf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x00f3, match64: 0x00000000, model64: 0xcf100000cf5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00f5, match64: 0x00000000, model64: 0xcf900000cff},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xcff00000d09, model64: 0xcff00000d09},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00f6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f7, match64: 0x00000000, model64: 0xd0900000d18},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f8, match64: 0x00000000, model64: 0xd1800000d29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2900000d2f, model64: 0xd2f00000d3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f9, match64: 0x00000000, model64: 0xd3b00000d43},
		modelTuple{type64: 0x2700000027, matchRI: 0x00fa, match64: 0x00000000, model64: 0xd4300000d49},
		modelTuple{type64: 0x2700000027, matchRI: 0x00fb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x00fc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xd4900000d53, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5700000d5e, model64: 0xd5e00000d61},
		modelTuple{type64: 0x2700000027, matchRI: 0x00fe, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xd6100000d6a, model64: 0xd6a00000d73},
		modelTuple{type64: 0x20d00000213, matchRI: 0x00ff, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7a00000d7f, model64: 0xd7f00000d88},
		modelTuple{type64: 0x2700000027, matchRI: 0x0101, match64: 0x00000000, model64: 0xd8800000d9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd9a00000d9f, model64: 0xd9f00000daf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0102, match64: 0x00000000, model64: 0xdaf00000dbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0103, match64: 0x00000000, model64: 0xdbf00000dd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0104, match64: 0x00000000, model64: 0xdd800000de8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0105, match64: 0x00000000, model64: 0xde800000e01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe0100000e06, model64: 0xe0600000e1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0106, match64: 0x00000000, model64: 0xe1f00000e2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0107, match64: 0x00000000, model64: 0xe2f00000e48},
		modelTuple{type64: 0x2700000027, matchRI: 0x0108, match64: 0x00000000, model64: 0xe4800000e58},
		modelTuple{type64: 0x2700000027, matchRI: 0x0109, match64: 0x00000000, model64: 0xe5800000e68},
		modelTuple{type64: 0x2700000027, matchRI: 0x010a, match64: 0x00000000, model64: 0xe6800000e78},
		modelTuple{type64: 0x2700000027, matchRI: 0x010b, match64: 0x00000000, model64: 0xe7800000e8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x010c, match64: 0x00000000, model64: 0xe8a00000ea5},
		modelTuple{type64: 0x2700000027, matchRI: 0x010d, match64: 0x00000000, model64: 0xea500000eb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x010e, match64: 0x00000000, model64: 0xeb900000ed6},
		modelTuple{type64: 0x2700000027, matchRI: 0x010f, match64: 0x00000000, model64: 0xed600000ee8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0110, match64: 0x00000000, model64: 0xee800000f03},
		modelTuple{type64: 0x2700000027, matchRI: 0x0111, match64: 0x00000000, model64: 0xf0300000f12},
		modelTuple{type64: 0x2700000027, matchRI: 0x0112, match64: 0x00000000, model64: 0xf1200000f24},
		modelTuple{type64: 0x2700000027, matchRI: 0x0113, match64: 0x00000000, model64: 0xf2400000f38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf3800000f3d, model64: 0xf3d00000f55},
		modelTuple{type64: 0x2700000027, matchRI: 0x0114, match64: 0x00000000, model64: 0xf5500000f64},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6400000f69, model64: 0xf6900000f81},
		modelTuple{type64: 0x2700000027, matchRI: 0x0115, match64: 0x00000000, model64: 0xf8100000f91},
		modelTuple{type64: 0x2700000027, matchRI: 0x0116, match64: 0x00000000, model64: 0xf9100000fa1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa100000fa6, model64: 0xfa600000fb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb800000fbd, model64: 0xfbd00000fd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0117, match64: 0x00000000, model64: 0xfd100000fe1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe100000fe6, model64: 0xfe600000ff6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0118, match64: 0x00000000, model64: 0xff600001006},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10060000100b, model64: 0x100b0000101a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x101a00001024, model64: 0x102400001034},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x103400001039, model64: 0x103900001047},
		modelTuple{type64: 0x2700000027, matchRI: 0x0119, match64: 0x00000000, model64: 0x10470000104c},
		modelTuple{type64: 0x2700000027, matchRI: 0x011a, match64: 0x00000000, model64: 0x104c00001055},
		modelTuple{type64: 0x2700000027, matchRI: 0x011b, match64: 0x00000000, model64: 0x10550000105e},
		modelTuple{type64: 0x2700000027, matchRI: 0x011c, match64: 0x00000000, model64: 0x105e00001062},
		modelTuple{type64: 0x2700000027, matchRI: 0x011d, match64: 0x00000000, model64: 0x106200001067},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10670000106c, model64: 0x106c0000106e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106e00001073, model64: 0x10730000107c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x107c00001081, model64: 0x108100001088},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10880000108d, model64: 0x108d00001093},
		modelTuple{type64: 0x2700000027, matchRI: 0x011e, match64: 0x00000000, model64: 0x109300001095},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10950000109b, model64: 0x109b000010a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x011f, match64: 0x00000000, model64: 0x10a6000010b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0120, match64: 0x00000000, model64: 0x10b8000010ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10ca000010cf, model64: 0x10cf000010e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10e2000010e7, model64: 0x10e7000010f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0121, match64: 0x00000000, model64: 0x10f60000110b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0122, match64: 0x00000000, model64: 0x110b00001129},
		modelTuple{type64: 0x2700000027, matchRI: 0x0123, match64: 0x00000000, model64: 0x112900001140},
		modelTuple{type64: 0x2700000027, matchRI: 0x0124, match64: 0x00000000, model64: 0x114000001151},
		modelTuple{type64: 0x2700000027, matchRI: 0x0125, match64: 0x00000000, model64: 0x115100001161},
		modelTuple{type64: 0x2700000027, matchRI: 0x0126, match64: 0x00000000, model64: 0x116100001176},
		modelTuple{type64: 0x2700000027, matchRI: 0x0127, match64: 0x00000000, model64: 0x117600001186},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11860000118b, model64: 0x118b0000119c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0128, match64: 0x00000000, model64: 0x119c000011ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0129, match64: 0x00000000, model64: 0x11ac000011bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x012a, match64: 0x00000000, model64: 0x119c000011ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x012b, match64: 0x00000000, model64: 0x11bd000011ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11ce000011d3, model64: 0x11d3000011e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11e3000011e8, model64: 0x11e8000011f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11f9000011fe, model64: 0x11fe0000120a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x120a0000120f, model64: 0x120f00001212},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121200001218, model64: 0x12180000121d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121d00001223, model64: 0x122300001226},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12260000122c, model64: 0x122c00001236},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12360000123b, model64: 0x123b00001252},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x125200001258, model64: 0x125800001270},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127000001276, model64: 0x127600001291},
		modelTuple{type64: 0x2700000027, matchRI: 0x012c, match64: 0x00000000, model64: 0x1291000012a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12a5000012ab, model64: 0x12ab000012bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12bf000012c5, model64: 0x12c5000012d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d9000012de, model64: 0x12de000012ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x012d, match64: 0x00000000, model64: 0x12ee00001303},
		modelTuple{type64: 0x2700000027, matchRI: 0x012e, match64: 0x00000000, model64: 0x130300001321},
		modelTuple{type64: 0x2700000027, matchRI: 0x012f, match64: 0x00000000, model64: 0x132100001334},
		modelTuple{type64: 0x2700000027, matchRI: 0x0130, match64: 0x00000000, model64: 0x133400001349},
		modelTuple{type64: 0x2700000027, matchRI: 0x0131, match64: 0x00000000, model64: 0x134900001361},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x136100001366, model64: 0x136600001379},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x13790000137e, model64: 0x136600001379},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0132, match64: 0x00000000, model64: 0x137e00001394},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0133, match64: 0x00000000, model64: 0x139400001396},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0134, match64: 0x00000000, model64: 0x13960000139b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0135, match64: 0x00000000, model64: 0x139b000013a6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0136, match64: 0x00000000, model64: 0x13a6000013b0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0137, match64: 0x00000000, model64: 0x13b0000013b9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0138, match64: 0x00000000, model64: 0x13b9000013ca},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0139, match64: 0x00000000, model64: 0x13ca000013e2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x13e2000013e7, model64: 0x13e7000013eb},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x13eb000013f0, model64: 0x13f0000013fc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x013a, match64: 0x00000000, model64: 0x13fc00001403},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x140300001408, model64: 0x14080000141b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x141b00001420, model64: 0x142000001434},
		modelTuple{type64: 0x2700000027, matchRI: 0x013b, match64: 0x00000000, model64: 0x143400001449},
		modelTuple{type64: 0x2700000027, matchRI: 0x013c, match64: 0x00000000, model64: 0x14490000145c},
		modelTuple{type64: 0x2700000027, matchRI: 0x013d, match64: 0x00000000, model64: 0x145c00001471},
		modelTuple{type64: 0x2700000027, matchRI: 0x013e, match64: 0x00000000, model64: 0x14710000148c},
		modelTuple{type64: 0x2700000027, matchRI: 0x013f, match64: 0x00000000, model64: 0x148c000014a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a2000014a7, model64: 0x14a7000014bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0140, match64: 0x00000000, model64: 0x14bc000014d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0141, match64: 0x00000000, model64: 0x14d4000014ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ea000014ef, model64: 0x14ef00001505},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15050000150b, model64: 0x2f5000002f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150b00001511, model64: 0x151100001514},
		modelTuple{type64: 0x2700000027, matchRI: 0x0142, match64: 0x00000000, model64: 0x151400001518},
		modelTuple{type64: 0x2700000027, matchRI: 0x0143, match64: 0x00000000, model64: 0x15180000151a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0144, match64: 0x00000000, model64: 0x151a00001521},
		modelTuple{type64: 0x2700000027, matchRI: 0x0145, match64: 0x00000000, model64: 0x152100001526},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x15260000152b, model64: 0x152b00001533},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0146, match64: 0x00000000, model64: 0x15330000153a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x153a0000153f, model64: 0x153f00001545},
		modelTuple{type64: 0x2700000027, matchRI: 0x0147, match64: 0x00000000, model64: 0x154500001547},
		modelTuple{type64: 0x2700000027, matchRI: 0x0148, match64: 0x00000000, model64: 0x15470000154d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x154d00001552, model64: 0x15520000155c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0149, match64: 0x00000000, model64: 0x155c0000155e},
		modelTuple{type64: 0x2700000027, matchRI: 0x014a, match64: 0x00000000, model64: 0x155e00001561},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156100001566, model64: 0x15660000156e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156e00001573, model64: 0x15730000157d},
		modelTuple{type64: 0x2700000027, matchRI: 0x014b, match64: 0x00000000, model64: 0x157d00001580},
		modelTuple{type64: 0x2700000027, matchRI: 0x014c, match64: 0x00000000, model64: 0x158000001589},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15890000158e, model64: 0x158e00001593},
		modelTuple{type64: 0x2700000027, matchRI: 0x014d, match64: 0x00000000, model64: 0x1593000015a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x014e, match64: 0x00000000, model64: 0x15a9000015c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x014f, match64: 0x00000000, model64: 0x15c8000015de},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0150, match64: 0x00000000, model64: 0x15de000015f4},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x15f4000015f8, model64: 0x15f800001610},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x161000001615, model64: 0x161500001625},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0151, match64: 0x00000000, model64: 0x162500001635},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x163500001639, model64: 0x162500001635},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x16390000163e, model64: 0x163e0000164e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x164e00001653, model64: 0x165300001662},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x166200001667, model64: 0x166700001676},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x16760000167b, model64: 0x167b0000168b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x168b00001690, model64: 0x1690000016a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0152, match64: 0x00000000, model64: 0x16a1000016b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0153, match64: 0x00000000, model64: 0x16b2000016b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b6000016cc, model64: 0x16cc000016d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0154, match64: 0x00000000, model64: 0x16d2000016e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e1000016f6, model64: 0x16f600001703},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170300001718, model64: 0x171800001725},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17250000173b, model64: 0x173b00001749},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17490000175e, model64: 0x175e0000176b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176b00001771, model64: 0x17710000177f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177f00001784, model64: 0x178400001794},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0155, match64: 0x00000000, model64: 0x1794000017a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0156, match64: 0x00000000, model64: 0x17a0000017ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0157, match64: 0x00000000, model64: 0x17a0000017ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0158, match64: 0x00000000, model64: 0x17ab000017b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17b5000017ba, model64: 0x17ba000017c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17c0000017c5, model64: 0x17c5000017cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0159, match64: 0x00000000, model64: 0x17cd000017cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x015a, match64: 0x00000000, model64: 0x17cf000017d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x015b, match64: 0x00000000, model64: 0x17d1000017d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x015c, match64: 0x00000000, model64: 0x17d6000017db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17db000017e0, model64: 0x17e0000017e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17e7000017ec, model64: 0x17ec000017f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x015d, match64: 0x00000000, model64: 0x17f3000017fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17fd00001802, model64: 0x180200001811},
		modelTuple{type64: 0x2700000027, matchRI: 0x015e, match64: 0x00000000, model64: 0x181100001818},
		modelTuple{type64: 0x2700000027, matchRI: 0x015f, match64: 0x00000000, model64: 0x18180000181b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0160, match64: 0x00000000, model64: 0x181b00001823},
		modelTuple{type64: 0x2700000027, matchRI: 0x0161, match64: 0x00000000, model64: 0x18230000182a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0162, match64: 0x00000000, model64: 0x182a0000182b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0163, match64: 0x00000000, model64: 0x182b0000182d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0164, match64: 0x00000000, model64: 0x182d00001836},
		modelTuple{type64: 0x2700000027, matchRI: 0x0165, match64: 0x00000000, model64: 0x18360000183f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0166, match64: 0x00000000, model64: 0x183f00001848},
		modelTuple{type64: 0x2700000027, matchRI: 0x0167, match64: 0x00000000, model64: 0x184800001851},
		modelTuple{type64: 0x2700000027, matchRI: 0x0168, match64: 0x00000000, model64: 0x18510000185a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0169, match64: 0x00000000, model64: 0x185a0000185c},
		modelTuple{type64: 0x2700000027, matchRI: 0x016a, match64: 0x00000000, model64: 0x185c00001865},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18650000186a, model64: 0x186a00001874},
		modelTuple{type64: 0x2700000027, matchRI: 0x016b, match64: 0x00000000, model64: 0x18740000187e},
		modelTuple{type64: 0x2700000027, matchRI: 0x016c, match64: 0x00000000, model64: 0x187e00001880},
		modelTuple{type64: 0x2700000027, matchRI: 0x016d, match64: 0x00000000, model64: 0x188000001882},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x188200001887, model64: 0x18870000188f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x016e, match64: 0x00000000, model64: 0x188f00001891},
		modelTuple{type64: 0x2700000027, matchRI: 0x016f, match64: 0x00000000, model64: 0x189100001892},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x189200001897, model64: 0x18970000189f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0170, match64: 0x00000000, model64: 0x189f000018a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0171, match64: 0x00000000, model64: 0x18a8000018aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0172, match64: 0x00000000, model64: 0x18aa000018ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18ac000018b1, model64: 0x18b1000018b8},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0173, match64: 0x00000000, model64: 0x109300001095},
		modelTuple{type64: 0x2700000027, matchRI: 0x0174, match64: 0x00000000, model64: 0x18b8000018ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0175, match64: 0x00000000, model64: 0x18ba000018c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0176, match64: 0x00000000, model64: 0x18c3000018c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18c4000018c9, model64: 0x18c9000018ca},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0177, match64: 0x00000000, model64: 0x18ca000018d0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0178, match64: 0x00000000, model64: 0x18d0000018d8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0179, match64: 0x00000000, model64: 0x18d8000018df},
		modelTuple{type64: 0x20d00000213, matchRI: 0x017a, match64: 0x00000000, model64: 0x18df000018e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18e8000018f2, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x017b, match64: 0x00000000, model64: 0x18f2000018ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18ff00001904, model64: 0x190400001909},
		modelTuple{type64: 0x2700000027, matchRI: 0x017c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x017d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x017e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x017f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0182, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0183, match64: 0x00000000, model64: 0x19160000191d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0184, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0186, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0188, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x192c00001938, model64: 0x19380000193c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x193c00001946, model64: 0x194600001948},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x194800001955, model64: 0x19550000195a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x195a00001969, model64: 0x196900001970},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19700000197b, model64: 0x197b0000197e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0189, match64: 0x00000000, model64: 0x197e00001985},
		modelTuple{type64: 0x2700000027, matchRI: 0x018a, match64: 0x00000000, model64: 0x19850000198a},
		modelTuple{type64: 0x2700000027, matchRI: 0x018b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x018c, match64: 0x00000000, model64: 0x198a00001990},
		modelTuple{type64: 0x2700000027, matchRI: 0x018e, match64: 0x00000000, model64: 0x1999000019a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x018f, match64: 0x00000000, model64: 0x19a0000019a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0190, match64: 0x00000000, model64: 0x19a4000019a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0191, match64: 0x00000000, model64: 0x19a8000019ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0192, match64: 0x00000000, model64: 0x19ab000019ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0193, match64: 0x00000000, model64: 0x19ad000019b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0194, match64: 0x00000000, model64: 0x19b0000019b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0195, match64: 0x00000000, model64: 0x19b8000019c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0196, match64: 0x00000000, model64: 0x19c0000019d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0197, match64: 0x00000000, model64: 0x19d2000019dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19dd000019e8, model64: 0x19e8000019f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0198, match64: 0x00000000, model64: 0x19f4000019fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0199, match64: 0x00000000, model64: 0x19fc00001a02},
		modelTuple{type64: 0x2700000027, matchRI: 0x019a, match64: 0x00000000, model64: 0x19b0000019b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0900001a0e, model64: 0x1a0e00001a14},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1a1400001a1e, model64: 0x1a1e00001a28},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1a2800001a30, model64: 0x1a3000001a3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3a00001a40, model64: 0x1a4000001a46},
		modelTuple{type64: 0x2700000027, matchRI: 0x019c, match64: 0x00000000, model64: 0x1a4600001a50},
		modelTuple{type64: 0x2700000027, matchRI: 0x019d, match64: 0x00000000, model64: 0x1a5000001a58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5800001a5f, model64: 0x1a5f00001a66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6600001a6d, model64: 0x1a6d00001a74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7400001a7e, model64: 0x1a7e00001a88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8800001a90, model64: 0x1a9000001a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x019e, match64: 0x00000000, model64: 0x1a9800001aa2},
		modelTuple{type64: 0x2700000027, matchRI: 0x019f, match64: 0x00000000, model64: 0x1aa200001aaa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aaa00001ab1, model64: 0x1ab100001ab8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab800001abf, model64: 0x1abf00001ac6},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a0, match64: 0x00000000, model64: 0x1ac600001acd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1acd00001ad4, model64: 0x1ad400001adb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1adb00001aee, model64: 0x1aee00001b03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0300001b0e, model64: 0x1b0e00001b19},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a1, match64: 0x00000000, model64: 0x1b1900001b28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2800001b35, model64: 0x1b3500001b42},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a2, match64: 0x00000000, model64: 0x1b4200001b51},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a3, match64: 0x00000000, model64: 0x1b5100001b5b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b5b00001b62, model64: 0x1b6200001b69},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b6900001b72, model64: 0x1b7200001b7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a4, match64: 0x00000000, model64: 0x1b7b00001b83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8300001b8b, model64: 0x1b8b00001b93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9300001b9a, model64: 0x1b9a00001ba1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba100001baa, model64: 0x1baa00001bb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a5, match64: 0x00000000, model64: 0x1bb300001bc1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bc100001bcb, model64: 0x1bcb00001bd5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bd500001be1, model64: 0x1be100001bed},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a6, match64: 0x00000000, model64: 0x1bed00001bf6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bf600001c05, model64: 0x1c0500001c14},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a7, match64: 0x00000000, model64: 0x1c1400001c1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1f00001c2d, model64: 0x1c2d00001c3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c3b00001c48, model64: 0x1c4800001c55},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c5500001c60, model64: 0x1c6000001c6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a8, match64: 0x00000000, model64: 0x1c6b00001c7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a9, match64: 0x00000000, model64: 0x1c7a00001c8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x01aa, match64: 0x00000000, model64: 0x1c8d00001ca2},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ab, match64: 0x00000000, model64: 0x1ca200001caf},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ac, match64: 0x00000000, model64: 0x1caf00001cbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ad, match64: 0x00000000, model64: 0x1cbd00001cca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cca00001cd6, model64: 0x1cd600001ce2},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ae, match64: 0x00000000, model64: 0x1ce200001cee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cee00001d00, model64: 0x1d0000001d12},
		modelTuple{type64: 0x2700000027, matchRI: 0x01af, match64: 0x00000000, model64: 0x1d1200001d20},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b0, match64: 0x00000000, model64: 0x1d2000001d28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d2800001d2f, model64: 0x1d2f00001d36},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b1, match64: 0x00000000, model64: 0x1d3600001d3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b2, match64: 0x00000000, model64: 0x1d3d00001d45},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b3, match64: 0x00000000, model64: 0x1d4500001d4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4d00001d55, model64: 0x1d5500001d5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5e00001d6d, model64: 0x1d6d00001d79},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7900001d80, model64: 0x1d8000001d87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8700001d8d, model64: 0x1d8d00001d93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9300001da0, model64: 0x1da000001daf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1daf00001dbb, model64: 0x1dbb00001dc3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dc300001dcb, model64: 0x1dcb00001dd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dd300001dda, model64: 0x1dda00001de1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1de100001de9, model64: 0x1de100001de9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1de900001df4, model64: 0x1df400001dfd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dfd00001e07, model64: 0x1e0700001e0d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01b4, match64: 0x00000000, model64: 0x1e0d00001e14},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1e1400001e1d, model64: 0x1e1d00001e26},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1e2600001e35, model64: 0x1e3500001e3e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1e3e00001e49, model64: 0x1e4900001e4d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1e4d00001e5d, model64: 0x1a1e00001a28},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1e5d00001e6d, model64: 0x1e6d00001e7f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1e7f00001e90, model64: 0x1e9000001ea3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01b5, match64: 0x00000000, model64: 0x1ea300001eb8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1eb800001ec5, model64: 0x1ec500001ed7},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ed700001ee6, model64: 0x1ee600001ef5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ef500001efe, model64: 0x1efe00001f0c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01b6, match64: 0x00000000, model64: 0x1f0c00001f18},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01b7, match64: 0x00000000, model64: 0x1e0d00001e14},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01b8, match64: 0x00000000, model64: 0x1f1800001f1f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01b9, match64: 0x00000000, model64: 0x1f1f00001f24},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f2400001f30, model64: 0x1f1f00001f24},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01ba, match64: 0x00000000, model64: 0x1f3000001f3d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f3d00001f44, model64: 0x1f4400001f4c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f4c00001f5e, model64: 0x1f5e00001f68},
		modelTuple{type64: 0x20d00000213, matchRI: 0x01bb, match64: 0x00000000, model64: 0x1f6800001f6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x01bc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x01bd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f7500001f85, model64: 0x1f8500001f95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9500001fa5, model64: 0x1fa500001fb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fb500001fbb, model64: 0x1fb500001fbb},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x1fbb00001fc7, model64: 0x1fc700001fd4},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x1fd400001fe7, model64: 0x1fe700001ffa},
		modelTuple{type64: 0x940000009f, matchRI: 0x01bf, match64: 0x00000000, model64: 0x1ffa0000200a},
		modelTuple{type64: 0x940000009f, matchRI: 0x01c0, match64: 0x00000000, model64: 0x200a0000201a},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x201a00002026, model64: 0x201a00002026},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x202600002035, model64: 0x202600002035},
		modelTuple{type64: 0x940000009f, matchRI: -0x0001, match64: 0x203500002041, model64: 0x20410000204e},
		modelTuple{type64: 0x940000009f, matchRI: 0x01c2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x940000009f, matchRI: 0x01c3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x205e00002062, model64: 0x206200002076},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x20760000207a, model64: 0x207a0000208e},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x208e00002092, model64: 0x2092000020a1},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x20a1000020a8, model64: 0x20a8000020bf},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x20bf000020c3, model64: 0x20c3000020d2},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x20d2000020d8, model64: 0x20d8000020ed},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x20ed000020f2, model64: 0x20f20000210c},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x210c00002115, model64: 0x21150000212d},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x01c8, match64: 0x00000000, model64: 0x212d0000213a},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x01c9, match64: 0x00000000, model64: 0x213a0000214a},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x214a0000214f, model64: 0x214f00002163},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ca, match64: 0x00000000, model64: 0x21630000216a},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cb, match64: 0x00000000, model64: 0x216a00002178},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cc, match64: 0x00000000, model64: 0x217800002186},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cd, match64: 0x00000000, model64: 0x21860000219e},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ce, match64: 0x00000000, model64: 0x219e000021b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cf, match64: 0x00000000, model64: 0x21b4000021ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d0, match64: 0x00000000, model64: 0x21ca000021e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d1, match64: 0x00000000, model64: 0x21e1000021f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d2, match64: 0x00000000, model64: 0x21f60000220f},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d3, match64: 0x00000000, model64: 0x220f00002226},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d4, match64: 0x00000000, model64: 0x22260000222f},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d5, match64: 0x00000000, model64: 0x222f00002238},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d6, match64: 0x00000000, model64: 0x223800002245},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d7, match64: 0x00000000, model64: 0x224500002255},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d8, match64: 0x00000000, model64: 0x225500002265},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d9, match64: 0x00000000, model64: 0x226500002275},
		modelTuple{type64: 0x2700000027, matchRI: 0x01da, match64: 0x00000000, model64: 0x227500002285},
		modelTuple{type64: 0x2700000027, matchRI: 0x01db, match64: 0x00000000, model64: 0x228500002295},
		modelTuple{type64: 0x2700000027, matchRI: 0x01dc, match64: 0x00000000, model64: 0x2295000022a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x01dd, match64: 0x00000000, model64: 0x22a5000022b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x01de, match64: 0x00000000, model64: 0x22b5000022c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x01df, match64: 0x00000000, model64: 0x22c1000022d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e0, match64: 0x00000000, model64: 0x22d0000022da},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e1, match64: 0x00000000, model64: 0x22da000022eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e2, match64: 0x00000000, model64: 0x22eb000022fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e3, match64: 0x00000000, model64: 0x22fc0000230d},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e4, match64: 0x00000000, model64: 0x230d00002323},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x23230000232b, model64: 0x232b00002335},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e5, match64: 0x00000000, model64: 0x233500002340},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234000002346, model64: 0x234000002346},
		modelTuple{type64: 0x234600002353, matchRI: 0x01e6, match64: 0x00000000, model64: 0x235300002357},
		modelTuple{type64: 0x234600002353, matchRI: 0x01e7, match64: 0x00000000, model64: 0x235700002362},
		modelTuple{type64: 0x234600002353, matchRI: -0x0001, match64: 0x236200002372, model64: 0x237200002377},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238200002389, model64: 0x238900002391},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239100002397, model64: 0x23970000239e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a2000023af, model64: 0x23a2000023af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23af000023b4, model64: 0x23af000023b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b4000023c2, model64: 0x23c2000023d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x01eb, match64: 0x00000000, model64: 0x23d0000023d9},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x01ec, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ed, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ee, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x01f1, match64: 0x00000000, model64: 0x23e8000023ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x01f2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x23f400002403},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x01f8, match64: 0x00000000, model64: 0x241500002420},
		modelTuple{type64: 0x2700000027, matchRI: 0x01f9, match64: 0x00000000, model64: 0x24200000242b},
		modelTuple{type64: 0x2700000027, matchRI: 0x01fa, match64: 0x00000000, model64: 0x242b00002432},
		modelTuple{type64: 0x2700000027, matchRI: 0x01fb, match64: 0x00000000, model64: 0x24320000243d},
		modelTuple{type64: 0x2700000027, matchRI: 0x01fc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x234600002353, matchRI: -0x0001, match64: 0x244200002449, model64: 0x244200002449},
		modelTuple{type64: 0x234600002353, matchRI: -0x0001, match64: 0x244900002450, model64: 0x2700000027},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x245000002458, model64: 0x24600000246a},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x246a00002472, model64: 0x24720000247c},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x247c00002484, model64: 0x248400002497},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x24970000249f, model64: 0x249f000024b2},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x24b2000024ba, model64: 0x24ba000024cd},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x24cd000024d5, model64: 0x24d5000024e8},
		modelTuple{type64: 0x245800002460, matchRI: 0x01fe, match64: 0x00000000, model64: 0x24e8000024fb},
		modelTuple{type64: 0x245800002460, matchRI: 0x01ff, match64: 0x00000000, model64: 0x24fb0000250e},
		modelTuple{type64: 0x245800002460, matchRI: 0x0200, match64: 0x00000000, model64: 0x250e0000251b},
		modelTuple{type64: 0x245800002460, matchRI: 0x0201, match64: 0x00000000, model64: 0x251b00002528},
		modelTuple{type64: 0x245800002460, matchRI: 0x0202, match64: 0x00000000, model64: 0x25280000253c},
		modelTuple{type64: 0x245800002460, matchRI: 0x0203, match64: 0x00000000, model64: 0x253c00002550},
		modelTuple{type64: 0x245800002460, matchRI: 0x0204, match64: 0x00000000, model64: 0x255000002563},
		modelTuple{type64: 0x245800002460, matchRI: 0x0205, match64: 0x00000000, model64: 0x256300002576},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x25760000257b, model64: 0x25760000257b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0206, match64: 0x00000000, model64: 0x257b00002589},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0207, match64: 0x00000000, model64: 0x258900002597},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0208, match64: 0x00000000, model64: 0x2597000025a5},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0209, match64: 0x00000000, model64: 0x25a5000025b3},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x020a, match64: 0x00000000, model64: 0x25b3000025c6},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x020b, match64: 0x00000000, model64: 0x25c6000025d1},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x020c, match64: 0x00000000, model64: 0x25d1000025e0},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x020d, match64: 0x00000000, model64: 0x25e0000025ef},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x020e, match64: 0x00000000, model64: 0x25ef000025fa},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x020f, match64: 0x00000000, model64: 0x25fa00002605},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0210, match64: 0x00000000, model64: 0x260500002610},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0211, match64: 0x00000000, model64: 0x260500002610},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0212, match64: 0x00000000, model64: 0x26100000261f},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0213, match64: 0x00000000, model64: 0x261f00002630},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0214, match64: 0x00000000, model64: 0x26300000263f},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0215, match64: 0x00000000, model64: 0x263f00002650},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0216, match64: 0x00000000, model64: 0x26500000265f},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0217, match64: 0x00000000, model64: 0x265f00002675},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0218, match64: 0x00000000, model64: 0x267500002684},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0219, match64: 0x00000000, model64: 0x268400002695},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x021a, match64: 0x00000000, model64: 0x2695000026a4},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x021b, match64: 0x00000000, model64: 0x26a4000026b5},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x021c, match64: 0x00000000, model64: 0x26b5000026c4},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x021d, match64: 0x00000000, model64: 0x26c4000026d5},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x021e, match64: 0x00000000, model64: 0x26d5000026e4},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x021f, match64: 0x00000000, model64: 0x26e4000026f3},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0220, match64: 0x00000000, model64: 0x26f300002704},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0221, match64: 0x00000000, model64: 0x270400002713},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0222, match64: 0x00000000, model64: 0x271300002722},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0223, match64: 0x00000000, model64: 0x272200002735},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0224, match64: 0x00000000, model64: 0x273500002747},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0225, match64: 0x00000000, model64: 0x27470000275e},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0226, match64: 0x00000000, model64: 0x275e00002770},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0227, match64: 0x00000000, model64: 0x277000002782},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0228, match64: 0x00000000, model64: 0x278200002794},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0229, match64: 0x00000000, model64: 0x278200002794},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x022a, match64: 0x00000000, model64: 0x2794000027a6},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x022b, match64: 0x00000000, model64: 0x27a6000027b8},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x022c, match64: 0x00000000, model64: 0x27b8000027ca},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x022d, match64: 0x00000000, model64: 0x27ca000027e0},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x022e, match64: 0x00000000, model64: 0x27e0000027f2},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x022f, match64: 0x00000000, model64: 0x27f200002808},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0230, match64: 0x00000000, model64: 0x28080000281e},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0231, match64: 0x00000000, model64: 0x281e00002834},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0232, match64: 0x00000000, model64: 0x28340000284a},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0233, match64: 0x00000000, model64: 0x284a00002860},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0234, match64: 0x00000000, model64: 0x286000002876},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0235, match64: 0x00000000, model64: 0x287600002891},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0236, match64: 0x00000000, model64: 0x2891000028ac},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0237, match64: 0x00000000, model64: 0x28ac000028c2},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0238, match64: 0x00000000, model64: 0x28c2000028dd},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0239, match64: 0x00000000, model64: 0x28dd000028f3},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x023a, match64: 0x00000000, model64: 0x28f300002909},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x023b, match64: 0x00000000, model64: 0x29090000291f},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x023c, match64: 0x00000000, model64: 0x29090000291f},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x023d, match64: 0x00000000, model64: 0x291f00002935},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x023e, match64: 0x00000000, model64: 0x29350000294b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x023f, match64: 0x00000000, model64: 0x294b00002961},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0240, match64: 0x00000000, model64: 0x296100002977},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0241, match64: 0x00000000, model64: 0x297700002989},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0242, match64: 0x00000000, model64: 0x29890000299f},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0243, match64: 0x00000000, model64: 0x299f000029b5},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0244, match64: 0x00000000, model64: 0x29b5000029cb},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0245, match64: 0x00000000, model64: 0x29cb000029e1},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0246, match64: 0x00000000, model64: 0x29e1000029f7},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0247, match64: 0x00000000, model64: 0x29f700002a0d},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0248, match64: 0x00000000, model64: 0x2a0d00002a23},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0249, match64: 0x00000000, model64: 0x2a2300002a39},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x024a, match64: 0x00000000, model64: 0x2a3900002a4f},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x024b, match64: 0x00000000, model64: 0x2a4f00002a65},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x024c, match64: 0x00000000, model64: 0x2a6500002a7b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x024d, match64: 0x00000000, model64: 0x2a7b00002a91},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x024e, match64: 0x00000000, model64: 0x2a9100002aac},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x024f, match64: 0x00000000, model64: 0x2aac00002ac7},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0250, match64: 0x00000000, model64: 0x2ac700002ae2},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0251, match64: 0x00000000, model64: 0x2ae200002afd},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0252, match64: 0x00000000, model64: 0x2afd00002b13},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0253, match64: 0x00000000, model64: 0x2b1300002b29},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0254, match64: 0x00000000, model64: 0x2b2900002b3f},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0255, match64: 0x00000000, model64: 0x2b3f00002b55},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0256, match64: 0x00000000, model64: 0x2b5500002b6b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0257, match64: 0x00000000, model64: 0x2b6b00002b81},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0258, match64: 0x00000000, model64: 0x2b8100002b9c},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0259, match64: 0x00000000, model64: 0x2b9c00002bb7},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x025a, match64: 0x00000000, model64: 0x2bb700002bcd},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x025b, match64: 0x00000000, model64: 0x2bcd00002be3},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x025c, match64: 0x00000000, model64: 0x2be300002bf9},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x025d, match64: 0x00000000, model64: 0x2bf900002c0f},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x025e, match64: 0x00000000, model64: 0x2bf900002c0f},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x025f, match64: 0x00000000, model64: 0x2c0f00002c25},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0260, match64: 0x00000000, model64: 0x2c2500002c3b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0261, match64: 0x00000000, model64: 0x2c3b00002c4a},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0262, match64: 0x00000000, model64: 0x2c4a00002c59},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0263, match64: 0x00000000, model64: 0x2c5900002c68},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0264, match64: 0x00000000, model64: 0x2c6800002c77},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0265, match64: 0x00000000, model64: 0x2c7700002c86},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0266, match64: 0x00000000, model64: 0x2c8600002c95},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0267, match64: 0x00000000, model64: 0x2c9500002ca4},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0268, match64: 0x00000000, model64: 0x2ca400002cb3},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0269, match64: 0x00000000, model64: 0x2cb300002cc2},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x026a, match64: 0x00000000, model64: 0x2cc200002cdb},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x026b, match64: 0x00000000, model64: 0x2cdb00002cf9},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x026c, match64: 0x00000000, model64: 0x2cf900002d07},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x026d, match64: 0x00000000, model64: 0x2d0700002d19},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x026e, match64: 0x00000000, model64: 0x2cf900002d07},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x026f, match64: 0x00000000, model64: 0x2d1900002d2c},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0270, match64: 0x00000000, model64: 0x2d2c00002d3b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0271, match64: 0x00000000, model64: 0x2d3b00002d41},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0272, match64: 0x00000000, model64: 0x2d4100002d4a},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0273, match64: 0x00000000, model64: 0x2d4a00002d54},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0274, match64: 0x00000000, model64: 0x2d5400002d5c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0275, match64: 0x00000000, model64: 0x2d5c00002d65},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0276, match64: 0x00000000, model64: 0x2d6500002d6d},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0277, match64: 0x00000000, model64: 0x2d6d00002d76},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0278, match64: 0x00000000, model64: 0x2d7600002d7f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0279, match64: 0x00000000, model64: 0x2d7f00002d8c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x027a, match64: 0x00000000, model64: 0x2d8c00002d94},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x027b, match64: 0x00000000, model64: 0x2d9400002da2},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x027c, match64: 0x00000000, model64: 0x2da200002dab},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x027d, match64: 0x00000000, model64: 0x2dab00002db4},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x027e, match64: 0x00000000, model64: 0x2db400002dbc},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x027f, match64: 0x00000000, model64: 0x2dbc00002dc9},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0280, match64: 0x00000000, model64: 0x2dc900002dd1},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0281, match64: 0x00000000, model64: 0x2dd100002dde},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0282, match64: 0x00000000, model64: 0x2dde00002de6},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0283, match64: 0x00000000, model64: 0x2de600002def},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0284, match64: 0x00000000, model64: 0x2def00002dfc},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0285, match64: 0x00000000, model64: 0x2dfc00002e05},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0286, match64: 0x00000000, model64: 0x2e0500002e0e},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0287, match64: 0x00000000, model64: 0x2e0e00002e1b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0288, match64: 0x00000000, model64: 0x2e1b00002e2c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0289, match64: 0x00000000, model64: 0x2e2c00002e3c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x028a, match64: 0x00000000, model64: 0x2e3c00002e4a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x028b, match64: 0x00000000, model64: 0x2e4a00002e53},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x028c, match64: 0x00000000, model64: 0x2e5300002e60},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x028d, match64: 0x00000000, model64: 0x2e6000002e71},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x028e, match64: 0x00000000, model64: 0x2e7100002e7e},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x028f, match64: 0x00000000, model64: 0x2e7e00002e8f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0290, match64: 0x00000000, model64: 0x2e8f00002e9d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0291, match64: 0x00000000, model64: 0x2e9d00002ea6},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0292, match64: 0x00000000, model64: 0x2ea600002eb6},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0293, match64: 0x00000000, model64: 0x2eb600002ec4},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0294, match64: 0x00000000, model64: 0x2ec400002ed1},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0295, match64: 0x00000000, model64: 0x2ed100002ee2},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0296, match64: 0x00000000, model64: 0x2ee200002eeb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0297, match64: 0x00000000, model64: 0x2eeb00002ef9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0298, match64: 0x00000000, model64: 0x2ef900002f06},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0299, match64: 0x00000000, model64: 0x2f0600002f17},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x029a, match64: 0x00000000, model64: 0x2f1700002f20},
		modelTuple{type64: 0x20d00000213, matchRI: 0x029b, match64: 0x00000000, model64: 0x2f2000002f24},
		modelTuple{type64: 0x20d00000213, matchRI: 0x029c, match64: 0x00000000, model64: 0x2f2400002f2a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x029d, match64: 0x00000000, model64: 0x2f2a00002f33},
		modelTuple{type64: 0x20d00000213, matchRI: 0x029e, match64: 0x00000000, model64: 0x2f3300002f39},
		modelTuple{type64: 0x20d00000213, matchRI: 0x029f, match64: 0x00000000, model64: 0x2f3900002f3f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a0, match64: 0x00000000, model64: 0x2f3f00002f47},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a1, match64: 0x00000000, model64: 0x2f4700002f52},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a2, match64: 0x00000000, model64: 0x2f5200002f5d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a3, match64: 0x00000000, model64: 0x2f5d00002f68},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a4, match64: 0x00000000, model64: 0x2f6800002f72},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a5, match64: 0x00000000, model64: 0x2f7200002f7e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a6, match64: 0x00000000, model64: 0x2f7e00002f8b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a7, match64: 0x00000000, model64: 0x2f8b00002f95},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a8, match64: 0x00000000, model64: 0x2f9500002fa4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02a9, match64: 0x00000000, model64: 0x2fa400002fb1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02aa, match64: 0x00000000, model64: 0x2fb100002fbb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02ab, match64: 0x00000000, model64: 0x2fbb00002fc6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02ac, match64: 0x00000000, model64: 0x2fc600002fd4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02ad, match64: 0x00000000, model64: 0x2fd400002fe7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02ae, match64: 0x00000000, model64: 0x2fe700002ff5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02af, match64: 0x00000000, model64: 0x2ff500003005},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b0, match64: 0x00000000, model64: 0x300500003014},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b1, match64: 0x00000000, model64: 0x301400003023},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b2, match64: 0x00000000, model64: 0x30230000302e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b3, match64: 0x00000000, model64: 0x302e00003038},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b4, match64: 0x00000000, model64: 0x303800003044},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b5, match64: 0x00000000, model64: 0x304400003055},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b6, match64: 0x00000000, model64: 0x305500003061},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b7, match64: 0x00000000, model64: 0x306100003076},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b8, match64: 0x00000000, model64: 0x307600003086},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02b9, match64: 0x00000000, model64: 0x308600003095},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02ba, match64: 0x00000000, model64: 0x30950000309f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02bb, match64: 0x00000000, model64: 0x309f000030ae},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02bc, match64: 0x00000000, model64: 0x30ae000030b8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02bd, match64: 0x00000000, model64: 0x30b8000030c8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02be, match64: 0x00000000, model64: 0x30c8000030d3},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x02bf, match64: 0x00000000, model64: 0x30d3000030dd},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x02c0, match64: 0x00000000, model64: 0x30dd000030e7},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x02c1, match64: 0x00000000, model64: 0x30e7000030f1},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x02c2, match64: 0x00000000, model64: 0x30f1000030fc},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x02c3, match64: 0x00000000, model64: 0x30fc0000310e},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x02c4, match64: 0x00000000, model64: 0x310e00003116},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02c5, match64: 0x00000000, model64: 0x31160000311d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02c6, match64: 0x00000000, model64: 0x2f2000002f24},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x02c7, match64: 0x00000000, model64: 0x311d00003126},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x02c8, match64: 0x00000000, model64: 0x311d00003126},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x312e0000314b, model64: 0x314b0000315f},
		modelTuple{type64: 0x2700000027, matchRI: 0x02c9, match64: 0x00000000, model64: 0x315f00003165},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ca, match64: 0x00000000, model64: 0x315f00003165},
		modelTuple{type64: 0x2700000027, matchRI: 0x02cb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x02cd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x31650000317d, model64: 0x317d0000318e},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ce, match64: 0x00000000, model64: 0x318e0000319c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x319c000031a4, model64: 0x31a4000031b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x31b3000031bf, model64: 0x31bf000031cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x31cb000031d2, model64: 0x31d2000031dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x02cf, match64: 0x00000000, model64: 0x31dc000031e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x02d0, match64: 0x00000000, model64: 0x31e3000031e9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02d1, match64: 0x00000000, model64: 0x18c3000018c4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02d2, match64: 0x00000000, model64: 0x31e9000031f7},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x31f7000031ff, model64: 0x31ff00003207},
		modelTuple{type64: 0x2700000027, matchRI: 0x02d3, match64: 0x00000000, model64: 0x320700003214},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02d4, match64: 0x00000000, model64: 0x32140000321d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02d5, match64: 0x00000000, model64: 0x321d0000322a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02d6, match64: 0x00000000, model64: 0x322a00003236},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x32360000324d, model64: 0x324d0000325d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x325d00003268, model64: 0x32680000327a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02d7, match64: 0x00000000, model64: 0x327a0000328c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02d8, match64: 0x00000000, model64: 0x328c00003297},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02d9, match64: 0x00000000, model64: 0x32970000329d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02da, match64: 0x00000000, model64: 0x329d000032ad},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x32ad000032be, model64: 0x32be000032cc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02db, match64: 0x00000000, model64: 0x32cc000032d6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02dc, match64: 0x00000000, model64: 0x32d6000032dd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02dd, match64: 0x00000000, model64: 0x32dd000032e8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02de, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02df, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x32f3000032ff, model64: 0x32ff00003302},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x33020000330d, model64: 0x330d0000330f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x330f0000331a, model64: 0x331a0000331c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x331c00003327, model64: 0x332700003329},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e2, match64: 0x00000000, model64: 0x332c00003336},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e3, match64: 0x00000000, model64: 0x333600003345},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e4, match64: 0x00000000, model64: 0x33450000334f},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e5, match64: 0x00000000, model64: 0x334f00003356},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e6, match64: 0x00000000, model64: 0x33560000335d},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e7, match64: 0x00000000, model64: 0x335d00003366},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e8, match64: 0x00000000, model64: 0x33660000336c},
		modelTuple{type64: 0x2700000027, matchRI: 0x02e9, match64: 0x00000000, model64: 0x336c00003375},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ea, match64: 0x00000000, model64: 0x337500003380},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x338e00003396, model64: 0x33960000339a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x339a000033a0, model64: 0x33a0000033a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ed, match64: 0x00000000, model64: 0x33a5000033a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x33a9000033ae, model64: 0x33ae000033b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x33b2000033b8, model64: 0x33b8000033bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x33bd000033c3, model64: 0x33c3000033c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x33c8000033ce, model64: 0x33ce000033d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x33d3000033dc, model64: 0x33dc000033e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x33e4000033ea, model64: 0x33ea000033ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x33ef000033f5, model64: 0x33f5000033fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x33fa00003400, model64: 0x340000003405},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34050000340b, model64: 0x340b0000340c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x340c00003411, model64: 0x341100003415},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34150000341a, model64: 0x341a0000341e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x341e00003424, model64: 0x342400003429},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34290000342f, model64: 0x342f00003434},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34340000343a, model64: 0x343a0000343f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x343f00003444, model64: 0x344400003448},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34480000344d, model64: 0x344d00003451},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ee, match64: 0x00000000, model64: 0x345100003456},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34560000345b, model64: 0x345b0000345d},
		modelTuple{type64: 0x2700000027, matchRI: 0x02ef, match64: 0x00000000, model64: 0x345d00003463},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f0, match64: 0x00000000, model64: 0x346300003469},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x346900003470, model64: 0x347000003476},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34760000347d, model64: 0x347d00003483},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34830000348e, model64: 0x348e00003493},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34930000349f, model64: 0x349f000034a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34a4000034af, model64: 0x34af000034b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x34b4000034c1, model64: 0x34c1000034c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f4, match64: 0x00000000, model64: 0x34d3000034db},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f5, match64: 0x00000000, model64: 0x34db000034e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f6, match64: 0x00000000, model64: 0x34e2000034e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f7, match64: 0x00000000, model64: 0x34e7000034ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f8, match64: 0x00000000, model64: 0x34ea000034ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x02f9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x02fa, match64: 0x00000000, model64: 0x34ee000034f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x02fb, match64: 0x00000000, model64: 0x34f4000034fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x02fc, match64: 0x00000000, model64: 0x34fb000034fe},
		modelTuple{type64: 0x20d00000213, matchRI: 0x02fd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x02fe, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0300, match64: 0x00000000, model64: 0x350600003511},
		modelTuple{type64: 0x2700000027, matchRI: 0x0301, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0302, match64: 0x00000000, model64: 0x351100003513},
		modelTuple{type64: 0x2700000027, matchRI: 0x0304, match64: 0x00000000, model64: 0x351800003522},
		modelTuple{type64: 0x2700000027, matchRI: 0x0306, match64: 0x00000000, model64: 0x35280000352f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0307, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0309, match64: 0x00000000, model64: 0x35320000353a},
		modelTuple{type64: 0x2700000027, matchRI: 0x030a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x030c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x030d, match64: 0x00000000, model64: 0x354000003544},
		modelTuple{type64: 0x2700000027, matchRI: 0x030e, match64: 0x00000000, model64: 0x35440000354a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0310, match64: 0x00000000, model64: 0x355300003558},
		modelTuple{type64: 0x2700000027, matchRI: 0x0311, match64: 0x00000000, model64: 0x35580000355c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0312, match64: 0x00000000, model64: 0x355c00003560},
		modelTuple{type64: 0x2700000027, matchRI: 0x0313, match64: 0x00000000, model64: 0x356000003567},
		modelTuple{type64: 0x2700000027, matchRI: 0x0314, match64: 0x00000000, model64: 0x35670000356d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0315, match64: 0x00000000, model64: 0x356d00003577},
		modelTuple{type64: 0x2700000027, matchRI: 0x0316, match64: 0x00000000, model64: 0x35770000357b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0317, match64: 0x00000000, model64: 0x357b00003580},
		modelTuple{type64: 0x2700000027, matchRI: 0x0318, match64: 0x00000000, model64: 0x358000003585},
		modelTuple{type64: 0x2700000027, matchRI: 0x0319, match64: 0x00000000, model64: 0x358500003589},
		modelTuple{type64: 0x2700000027, matchRI: 0x031a, match64: 0x00000000, model64: 0x35890000358f},
		modelTuple{type64: 0x2700000027, matchRI: 0x031b, match64: 0x00000000, model64: 0x358f00003594},
		modelTuple{type64: 0x2700000027, matchRI: 0x031c, match64: 0x00000000, model64: 0x359400003598},
		modelTuple{type64: 0x2700000027, matchRI: 0x031d, match64: 0x00000000, model64: 0x35980000359d},
		modelTuple{type64: 0x2700000027, matchRI: 0x031e, match64: 0x00000000, model64: 0x359d000035a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x031f, match64: 0x00000000, model64: 0x35a5000035b0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0320, match64: 0x00000000, model64: 0x35b0000035bd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0321, match64: 0x00000000, model64: 0x35bd000035c3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0322, match64: 0x00000000, model64: 0x35c3000035c8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0323, match64: 0x00000000, model64: 0x35c8000035d4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0324, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0325, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0328, match64: 0x00000000, model64: 0x35dd000035e8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0329, match64: 0x00000000, model64: 0x35e8000035f8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x032a, match64: 0x00000000, model64: 0x35f800003602},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x360200003608, model64: 0x360800003610},
		modelTuple{type64: 0x20d00000213, matchRI: 0x032b, match64: 0x00000000, model64: 0x36100000361f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x032c, match64: 0x00000000, model64: 0x361f00003632},
		modelTuple{type64: 0x20d00000213, matchRI: 0x032d, match64: 0x00000000, model64: 0x363200003643},
		modelTuple{type64: 0x20d00000213, matchRI: 0x032e, match64: 0x00000000, model64: 0x36430000364d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x032f, match64: 0x00000000, model64: 0x364d00003651},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0330, match64: 0x00000000, model64: 0x36510000365d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0331, match64: 0x00000000, model64: 0x365d00003667},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0332, match64: 0x00000000, model64: 0x366700003679},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0333, match64: 0x00000000, model64: 0x367900003686},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0334, match64: 0x00000000, model64: 0x368600003690},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0335, match64: 0x00000000, model64: 0x36900000369c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0336, match64: 0x00000000, model64: 0x369c000036b2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0337, match64: 0x00000000, model64: 0x36b2000036bd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0338, match64: 0x00000000, model64: 0x36bd000036d3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0339, match64: 0x00000000, model64: 0x36d3000036e9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x033a, match64: 0x00000000, model64: 0x36e900003700},
		modelTuple{type64: 0x20d00000213, matchRI: 0x033b, match64: 0x00000000, model64: 0x370000003716},
		modelTuple{type64: 0x20d00000213, matchRI: 0x033c, match64: 0x00000000, model64: 0x37160000372c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x033d, match64: 0x00000000, model64: 0x372c00003741},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x37410000374d, model64: 0x374d00003761},
		modelTuple{type64: 0x20d00000213, matchRI: 0x033e, match64: 0x00000000, model64: 0x37610000376d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x376d00003777, model64: 0x377700003780},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x378000003784, model64: 0x37840000378e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x033f, match64: 0x00000000, model64: 0x378e00003798},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0340, match64: 0x00000000, model64: 0x3798000037a2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0341, match64: 0x00000000, model64: 0x37a2000037ac},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0342, match64: 0x00000000, model64: 0x37ac000037b8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0343, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x37b8000037bc, model64: 0x37bc000037c8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0344, match64: 0x00000000, model64: 0x37c8000037d8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0345, match64: 0x00000000, model64: 0x37d8000037e4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0346, match64: 0x00000000, model64: 0x37e4000037ed},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x37ed00003800, model64: 0x38000000381b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x381b00003826, model64: 0x38260000382c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0347, match64: 0x00000000, model64: 0x382c00003833},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0348, match64: 0x00000000, model64: 0x383300003841},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0349, match64: 0x00000000, model64: 0x38410000384a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x034a, match64: 0x00000000, model64: 0x384a0000385c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x034b, match64: 0x00000000, model64: 0x385c00003865},
		modelTuple{type64: 0x2700000027, matchRI: 0x034c, match64: 0x00000000, model64: 0x386500003875},
		modelTuple{type64: 0x2700000027, matchRI: 0x034d, match64: 0x00000000, model64: 0x38750000387e},
		modelTuple{type64: 0x2700000027, matchRI: 0x034e, match64: 0x00000000, model64: 0x387e0000388a},
		modelTuple{type64: 0x2700000027, matchRI: 0x034f, match64: 0x00000000, model64: 0x388a00003898},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3898000038a4, model64: 0x38a4000038ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x38ad000038b9, model64: 0x38b9000038c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0350, match64: 0x00000000, model64: 0x38c9000038d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0351, match64: 0x00000000, model64: 0x38d3000038dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0352, match64: 0x00000000, model64: 0x38dc000038ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0353, match64: 0x00000000, model64: 0x38ea000038f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0354, match64: 0x00000000, model64: 0x38f3000038fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0355, match64: 0x00000000, model64: 0x38fc0000390a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0356, match64: 0x00000000, model64: 0x390a00003913},
		modelTuple{type64: 0x2700000027, matchRI: 0x0357, match64: 0x00000000, model64: 0x391300003921},
		modelTuple{type64: 0x2700000027, matchRI: 0x0358, match64: 0x00000000, model64: 0x392100003933},
		modelTuple{type64: 0x2700000027, matchRI: 0x0359, match64: 0x00000000, model64: 0x393300003941},
		modelTuple{type64: 0x2700000027, matchRI: 0x035a, match64: 0x00000000, model64: 0x39410000394a},
		modelTuple{type64: 0x2700000027, matchRI: 0x035b, match64: 0x00000000, model64: 0x394a00003954},
		modelTuple{type64: 0x2700000027, matchRI: 0x035c, match64: 0x00000000, model64: 0x395400003960},
		modelTuple{type64: 0x2700000027, matchRI: 0x035d, match64: 0x00000000, model64: 0x39600000396f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x396f00003975, model64: 0x397500003984},
		modelTuple{type64: 0x2700000027, matchRI: 0x035e, match64: 0x00000000, model64: 0x398400003993},
		modelTuple{type64: 0x2700000027, matchRI: 0x035f, match64: 0x00000000, model64: 0x39930000399c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0360, match64: 0x00000000, model64: 0x399c000039a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0361, match64: 0x00000000, model64: 0x39a9000039b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0362, match64: 0x00000000, model64: 0x39b7000039c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0363, match64: 0x00000000, model64: 0x39c1000039ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0364, match64: 0x00000000, model64: 0x39ca000039d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0365, match64: 0x00000000, model64: 0x39d3000039e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0366, match64: 0x00000000, model64: 0x39e0000039e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0367, match64: 0x00000000, model64: 0x39e9000039f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0368, match64: 0x00000000, model64: 0x39f400003a07},
		modelTuple{type64: 0x2700000027, matchRI: 0x0369, match64: 0x00000000, model64: 0x392100003933},
		modelTuple{type64: 0x2700000027, matchRI: 0x036a, match64: 0x00000000, model64: 0x3a0700003a19},
		modelTuple{type64: 0x2700000027, matchRI: 0x036b, match64: 0x00000000, model64: 0x3a1900003a28},
		modelTuple{type64: 0x2700000027, matchRI: 0x036c, match64: 0x00000000, model64: 0x3a2800003a32},
		modelTuple{type64: 0x2700000027, matchRI: 0x036d, match64: 0x00000000, model64: 0x3a3200003a3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x036e, match64: 0x00000000, model64: 0x3a3f00003a4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x036f, match64: 0x00000000, model64: 0x3a2800003a32},
		modelTuple{type64: 0x2700000027, matchRI: 0x0370, match64: 0x00000000, model64: 0x3a4e00003a5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0371, match64: 0x00000000, model64: 0x3a5d00003a71},
		modelTuple{type64: 0x2700000027, matchRI: 0x0372, match64: 0x00000000, model64: 0x3a7100003a87},
		modelTuple{type64: 0x2700000027, matchRI: 0x0373, match64: 0x00000000, model64: 0x3a8700003a9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0374, match64: 0x00000000, model64: 0x3a9d00003aaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0375, match64: 0x00000000, model64: 0x3aaa00003abb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0376, match64: 0x00000000, model64: 0x3abb00003ac9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0377, match64: 0x00000000, model64: 0x3ac900003ad9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0378, match64: 0x00000000, model64: 0x3ad900003ae7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0379, match64: 0x00000000, model64: 0x3ac900003ad9},
		modelTuple{type64: 0x2700000027, matchRI: 0x037a, match64: 0x00000000, model64: 0x3ae700003af0},
		modelTuple{type64: 0x2700000027, matchRI: 0x037b, match64: 0x00000000, model64: 0x3af000003aff},
		modelTuple{type64: 0x2700000027, matchRI: 0x037c, match64: 0x00000000, model64: 0x3aff00003b0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x037d, match64: 0x00000000, model64: 0x3b0e00003b22},
		modelTuple{type64: 0x2700000027, matchRI: 0x037e, match64: 0x00000000, model64: 0x3b2200003b32},
		modelTuple{type64: 0x2700000027, matchRI: 0x037f, match64: 0x00000000, model64: 0x39930000399c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0380, match64: 0x00000000, model64: 0x3b3200003b3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0381, match64: 0x00000000, model64: 0x3b3f00003b51},
		modelTuple{type64: 0x2700000027, matchRI: 0x0382, match64: 0x00000000, model64: 0x3b5100003b5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0383, match64: 0x00000000, model64: 0x3b5e00003b6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0384, match64: 0x00000000, model64: 0x3b6a00003b73},
		modelTuple{type64: 0x2700000027, matchRI: 0x0385, match64: 0x00000000, model64: 0x3b7300003b7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0386, match64: 0x00000000, model64: 0x3b7e00003b89},
		modelTuple{type64: 0x2700000027, matchRI: 0x0387, match64: 0x00000000, model64: 0x3b8900003b94},
		modelTuple{type64: 0x2700000027, matchRI: 0x0388, match64: 0x00000000, model64: 0x3b9400003b9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0389, match64: 0x00000000, model64: 0x3b9f00003bab},
		modelTuple{type64: 0x2700000027, matchRI: 0x038a, match64: 0x00000000, model64: 0x3bab00003bb6},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x3bb600003bbd, model64: 0x3bbd00003bcc},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x038b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x038c, match64: 0x00000000, model64: 0x3bcc00003bda},
		modelTuple{type64: 0x245800002460, matchRI: 0x038d, match64: 0x00000000, model64: 0x3bda00003be4},
		modelTuple{type64: 0x2700000027, matchRI: 0x038e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x038f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0390, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0391, match64: 0x00000000, model64: 0x3be400003bf2},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0392, match64: 0x00000000, model64: 0x3bf200003c04},
		modelTuple{type64: 0x2700000027, matchRI: 0x0394, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0399, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x039a, match64: 0x00000000, model64: 0x3c3900003c3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x039b, match64: 0x00000000, model64: 0x3c3900003c3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x039c, match64: 0x00000000, model64: 0x3c3900003c3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x039e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3c4900003c55},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a1, match64: 0x00000000, model64: 0x3c5b00003c63},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a2, match64: 0x00000000, model64: 0x3c6300003c6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c7400003c7d, model64: 0x3c7d00003c86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c8600003c8f, model64: 0x3c8f00003c98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c9800003ca5, model64: 0x3ca500003cb4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x03a4, match64: 0x00000000, model64: 0x3cb400003cb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03aa, match64: 0x00000000, model64: 0x3cc000003ccc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ccc00003cd8, model64: 0x3cd800003ce6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x03ab, match64: 0x00000000, model64: 0x3ce600003cf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ad, match64: 0x00000000, model64: 0x3cf900003d00},
		modelTuple{type64: 0x2700000027, matchRI: 0x03af, match64: 0x00000000, model64: 0x3d0c00003d11},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b0, match64: 0x00000000, model64: 0x3d1100003d18},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d1800003d1f, model64: 0x3d1f00003d29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d2900003d37, model64: 0x3d3700003d45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d4500003d4e, model64: 0x3d4500003d4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b3, match64: 0x00000000, model64: 0x3d4e00003d57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d5700003d65, model64: 0x3d6500003d73},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b4, match64: 0x00000000, model64: 0x3d7300003d7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b6, match64: 0x00000000, model64: 0x3d8300003d8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b7, match64: 0x00000000, model64: 0x3d8a00003d90},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b8, match64: 0x00000000, model64: 0x3d9c00003da5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03bb, match64: 0x00000000, model64: 0x3db200003dd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x03bc, match64: 0x00000000, model64: 0x3dd000003de7},
		modelTuple{type64: 0x2700000027, matchRI: 0x03bd, match64: 0x00000000, model64: 0x3de700003e04},
		modelTuple{type64: 0x2700000027, matchRI: 0x03be, match64: 0x00000000, model64: 0x3e0400003e1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x03bf, match64: 0x00000000, model64: 0x3e1f00003e37},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c0, match64: 0x00000000, model64: 0x3e3700003e4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c1, match64: 0x00000000, model64: 0x3e4e00003e66},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c2, match64: 0x00000000, model64: 0x3e6600003e83},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c4, match64: 0x00000000, model64: 0x3e8300003e90},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x03c5, match64: 0x00000000, model64: 0x3e9000003ea6},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c7, match64: 0x00000000, model64: 0x3ea900003eb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c8, match64: 0x00000000, model64: 0x3eb400003ec3},
		modelTuple{type64: 0x2700000027, matchRI: 0x03c9, match64: 0x00000000, model64: 0x3ec300003ecb},
		modelTuple{type64: 0x2700000027, matchRI: 0x03cb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03cc, match64: 0x00000000, model64: 0x3ece00003ed2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ed200003ed6, model64: 0x3ed200003ed6},
		modelTuple{type64: 0x2700000027, matchRI: 0x03cd, match64: 0x00000000, model64: 0x3ed600003ee1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ee400003eed, model64: 0x3eed00003ef6},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x3ef600003efd, model64: 0x3ef600003efd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3f0600003f0f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x03d0, match64: 0x00000000, model64: 0x3f1200003f15},
		modelTuple{type64: 0x20d00000213, matchRI: 0x03d1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x3f1500003f1e, model64: 0x3f1e00003f27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3f2700003f2d, model64: 0x3f2d00003f33},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d7, match64: 0x00000000, model64: 0x3f4100003f4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x03d8, match64: 0x00000000, model64: 0x3f4e00003f58},
		modelTuple{type64: 0x2700000027, matchRI: 0x03da, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03db, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03df, match64: 0x00000000, model64: 0x3f6e00003f75},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e2, match64: 0x00000000, model64: 0x3f8b00003f92},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e3, match64: 0x00000000, model64: 0x3f8b00003f92},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e4, match64: 0x00000000, model64: 0x3f8b00003f92},
		modelTuple{type64: 0x20d00000213, matchRI: 0x03e6, match64: 0x00000000, model64: 0x3f9800003fa3},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ea, match64: 0x00000000, model64: 0x3fb000003fb6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x03eb, match64: 0x00000000, model64: 0x3fb600003fbc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x03ec, match64: 0x00000000, model64: 0x3fb600003fbc},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x3fbc00003fbf, model64: 0x3fbc00003fbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ed, match64: 0x00000000, model64: 0x3fbf00003fc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ee, match64: 0x00000000, model64: 0x3fc200003fca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3fca00003fd4, model64: 0x3fca00003fd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ef, match64: 0x00000000, model64: 0x3fd400003fda},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f0, match64: 0x00000000, model64: 0x3fda00003fde},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f1, match64: 0x00000000, model64: 0x3fde00003feb},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x03f2, match64: 0x00000000, model64: 0x3feb00003ff4},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f5, match64: 0x00000000, model64: 0x3ffb00004003},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f6, match64: 0x00000000, model64: 0x40030000400d},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f7, match64: 0x00000000, model64: 0x400d00004018},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f8, match64: 0x00000000, model64: 0x40180000401f},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f9, match64: 0x00000000, model64: 0x401f00004025},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x403a00004047},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fe, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ff, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0402, match64: 0x00000000, model64: 0x405d00004063},
		modelTuple{type64: 0x2700000027, matchRI: 0x0403, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x40680000406e, model64: 0x406e00004071},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x407100004077, model64: 0x40770000407a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x407a00004080, model64: 0x408000004083},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x408f00004098, model64: 0x4098000040a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0407, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0409, match64: 0x00000000, model64: 0x40a7000040b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x040a, match64: 0x00000000, model64: 0x40b3000040bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x40bb000040c0, model64: 0x40c0000040c6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x40d2000040dd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x40e6000040f4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x40fb00004107},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0411, match64: 0x00000000, model64: 0x411600004123},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x412300004131, model64: 0x412300004131},
		modelTuple{type64: 0x2700000027, matchRI: 0x0413, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0414, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0416, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0417, match64: 0x00000000, model64: 0x413a0000413f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0418, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x041a, match64: 0x00000000, model64: 0x41460000414f},
		modelTuple{type64: 0x2700000027, matchRI: 0x041b, match64: 0x00000000, model64: 0x414f0000415a},
		modelTuple{type64: 0x2700000027, matchRI: 0x041c, match64: 0x00000000, model64: 0x415a00004165},
		modelTuple{type64: 0x2700000027, matchRI: 0x041d, match64: 0x00000000, model64: 0x416c0000417a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x417e00004187},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x419a000041a1, model64: 0x41a1000041a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0421, match64: 0x00000000, model64: 0x41a8000041ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0422, match64: 0x00000000, model64: 0x41ae000041b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41b5000041bc, model64: 0x41bc000041bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41bf000041c6, model64: 0x41c6000041c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41c8000041cf, model64: 0x41cf000041d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41d1000041d8, model64: 0x41d8000041da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41da000041e1, model64: 0x41e1000041e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0423, match64: 0x00000000, model64: 0x41e4000041e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41e6000041ed, model64: 0x41ed000041f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41f4000041fb, model64: 0x41fb00004206},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42060000420d, model64: 0x420d0000421b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x421b00004222, model64: 0x422200004225},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42250000422c, model64: 0x422c0000422e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x422e00004235, model64: 0x42350000423c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x423c00004245, model64: 0x42450000424d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0424, match64: 0x00000000, model64: 0x424d00004253},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x425b00004260},
		modelTuple{type64: 0x2700000027, matchRI: 0x0427, match64: 0x00000000, model64: 0x426900004270},
		modelTuple{type64: 0x2700000027, matchRI: 0x0428, match64: 0x00000000, model64: 0x427000004273},
		modelTuple{type64: 0x2700000027, matchRI: 0x0429, match64: 0x00000000, model64: 0x427300004279},
		modelTuple{type64: 0x2700000027, matchRI: 0x042a, match64: 0x00000000, model64: 0x42790000427d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x427d00004283, model64: 0x155e00001561},
		modelTuple{type64: 0x2700000027, matchRI: 0x042b, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x042c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x042d, match64: 0x00000000, model64: 0x42830000428a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x428a00004295, model64: 0x42950000429f},
		modelTuple{type64: 0x2700000027, matchRI: 0x042e, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x042f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42a5000042ae, model64: 0x42ae000042b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42b8000042c2, model64: 0x42c2000042cc},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0430, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0431, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0432, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0433, match64: 0x00000000, model64: 0x42cc000042d6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0434, match64: 0x00000000, model64: 0x3fb600003fbc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0435, match64: 0x00000000, model64: 0x42d6000042df},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0436, match64: 0x00000000, model64: 0x3fb600003fbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0437, match64: 0x00000000, model64: 0x42df000042e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0438, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x043a, match64: 0x00000000, model64: 0x42f1000042fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x043b, match64: 0x00000000, model64: 0x42fe0000430f},
		modelTuple{type64: 0x2700000027, matchRI: 0x043c, match64: 0x00000000, model64: 0x430f0000431e},
		modelTuple{type64: 0x2700000027, matchRI: 0x043d, match64: 0x00000000, model64: 0x431e0000432c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x432c00004339, model64: 0x432c00004339},
		modelTuple{type64: 0x2700000027, matchRI: 0x043e, match64: 0x00000000, model64: 0x433900004345},
		modelTuple{type64: 0x2700000027, matchRI: 0x043f, match64: 0x00000000, model64: 0x43450000434f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x434f00004360, model64: 0x436000004371},
		modelTuple{type64: 0x2700000027, matchRI: 0x0440, match64: 0x00000000, model64: 0x43710000437c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x437c00004384, model64: 0x43840000438e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0441, match64: 0x00000000, model64: 0x438e00004393},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0442, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0443, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x43930000439d, model64: 0x439d000043a9},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0444, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x43a9000043b1, model64: 0x43b1000043bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0446, match64: 0x00000000, model64: 0x43bb000043c0},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x43c0000043c9, model64: 0x43c9000043d7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x43e0000043ea, model64: 0x43ea000043f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0449, match64: 0x00000000, model64: 0x43f60000440b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x440b0000441a, model64: 0x441a00004429},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x442900004432, model64: 0x44320000443e},
		modelTuple{type64: 0x2700000027, matchRI: 0x044b, match64: 0x00000000, model64: 0x44410000444b},
		modelTuple{type64: 0x2700000027, matchRI: 0x044c, match64: 0x00000000, model64: 0x444b00004454},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x445400004461, model64: 0x44610000446e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x446e0000447d, model64: 0x447d0000448e},
		modelTuple{type64: 0x2700000027, matchRI: 0x044d, match64: 0x00000000, model64: 0x448e00004497},
		modelTuple{type64: 0x2700000027, matchRI: 0x044e, match64: 0x00000000, model64: 0x4497000044a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x44a3000044b4, model64: 0x44b4000044c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x44c5000044cf, model64: 0x44cf000044d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x44d9000044e6, model64: 0x44e6000044f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x044f, match64: 0x00000000, model64: 0x448e00004497},
		modelTuple{type64: 0x2700000027, matchRI: 0x0450, match64: 0x00000000, model64: 0x44f300004503},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x450300004510, model64: 0x45100000451d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0451, match64: 0x00000000, model64: 0x451d0000452c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0452, match64: 0x00000000, model64: 0x452c0000453f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x453f0000454d, model64: 0x454d0000455b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x455b00004564, model64: 0x45640000456d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x456d00004579, model64: 0x456d00004579},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x457900004582, model64: 0x45820000458b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x458b00004595, model64: 0x458b00004595},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4595000045a4, model64: 0x45a4000045b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x45b3000045c0, model64: 0x45c0000045cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x45cd000045d4, model64: 0x45d4000045db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0453, match64: 0x00000000, model64: 0x45db000045ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x45ea000045f5, model64: 0x45f500004600},
		modelTuple{type64: 0x2700000027, matchRI: 0x0454, match64: 0x00000000, model64: 0x460000004608},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46080000460f, model64: 0x46080000460f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0455, match64: 0x00000000, model64: 0x460f00004616},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46160000461f, model64: 0x461f00004628},
		modelTuple{type64: 0x2700000027, matchRI: 0x0456, match64: 0x00000000, model64: 0x46280000462f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x462f0000463f, model64: 0x462f0000463f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0457, match64: 0x00000000, model64: 0x463f0000464a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x464a00004652, model64: 0x46520000465a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x465a00004664, model64: 0x46640000466e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x466e00004675, model64: 0x46750000467c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x467c00004685, model64: 0x46850000468e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x468e00004698, model64: 0x4698000046a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0458, match64: 0x00000000, model64: 0x46a2000046a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46a8000046b0, model64: 0x46a8000046b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46b0000046b8, model64: 0x46b0000046b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46b8000046c0, model64: 0x46b8000046c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0459, match64: 0x00000000, model64: 0x46c0000046c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46c7000046ce, model64: 0x46ce000046d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x045a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x045b, match64: 0x00000000, model64: 0x46d5000046e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46e1000046ec, model64: 0x46e1000046ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46ec000046f8, model64: 0x46ec000046f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46f800004704, model64: 0x46f800004704},
		modelTuple{type64: 0x2700000027, matchRI: 0x045c, match64: 0x00000000, model64: 0x47040000470c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x470c00004715, model64: 0x470c00004715},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47150000471f, model64: 0x47150000471f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x471f00004727, model64: 0x471f00004727},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47270000472d, model64: 0x472d00004736},
		modelTuple{type64: 0x2700000027, matchRI: 0x045d, match64: 0x00000000, model64: 0x47360000473c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x473c00004742, model64: 0x474200004748},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47480000474e, model64: 0x474e00004754},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x475400004759, model64: 0x475400004759},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47590000475f, model64: 0x47590000475f},
		modelTuple{type64: 0x2700000027, matchRI: 0x045e, match64: 0x00000000, model64: 0x475f00004767},
		modelTuple{type64: 0x2700000027, matchRI: 0x045f, match64: 0x00000000, model64: 0x476700004771},
		modelTuple{type64: 0x2700000027, matchRI: 0x0460, match64: 0x00000000, model64: 0x477100004782},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x478200004791, model64: 0x478200004791},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47910000479c, model64: 0x47910000479c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x479c000047a8, model64: 0x47a8000047b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47b4000047c0, model64: 0x47b4000047c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0461, match64: 0x00000000, model64: 0x47c0000047cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47cb000047d3, model64: 0x47cb000047d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47d3000047da, model64: 0x47d3000047da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0462, match64: 0x00000000, model64: 0x47da000047de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0463, match64: 0x00000000, model64: 0x47de000047e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0464, match64: 0x00000000, model64: 0x47e9000047f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47f400004806, model64: 0x48060000481a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0465, match64: 0x00000000, model64: 0x481a00004826},
		modelTuple{type64: 0x2700000027, matchRI: 0x0466, match64: 0x00000000, model64: 0x48260000482d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0467, match64: 0x00000000, model64: 0x482d00004834},
		modelTuple{type64: 0x2700000027, matchRI: 0x0468, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x483400004844, model64: 0x483400004844},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0469, match64: 0x00000000, model64: 0x48440000484d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x046a, match64: 0x00000000, model64: 0x484d00004855},
		modelTuple{type64: 0x20d00000213, matchRI: 0x046b, match64: 0x00000000, model64: 0x48550000485d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x046c, match64: 0x00000000, model64: 0x485d0000486b},
		modelTuple{type64: 0x2700000027, matchRI: 0x046d, match64: 0x00000000, model64: 0x486b00004872},
		modelTuple{type64: 0x2700000027, matchRI: 0x046e, match64: 0x00000000, model64: 0x486b00004872},
		modelTuple{type64: 0x2700000027, matchRI: 0x046f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x487a0000488f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48950000489f, model64: 0x489f000048a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48a3000048a9, model64: 0x48a9000048b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0472, match64: 0x00000000, model64: 0x48b0000048ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48ba000048bf, model64: 0x48ba000048bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48bf000048c6, model64: 0x48bf000048c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48c6000048cf, model64: 0x48cf000048d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48d6000048da, model64: 0x48da000048dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0473, match64: 0x00000000, model64: 0x48dd000048e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0474, match64: 0x00000000, model64: 0x48cf000048d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0475, match64: 0x00000000, model64: 0x48e4000048e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0476, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0477, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x48ed000048f2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x047b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x047c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x491100004913, model64: 0x491100004913},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x491b00004922, model64: 0x49220000492c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x492c00004932, model64: 0x493200004948},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49480000494d, model64: 0x494d00004953},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x495300004958, model64: 0x49220000492c},
		modelTuple{type64: 0x2700000027, matchRI: 0x047e, match64: 0x00000000, model64: 0x495800004969},
		modelTuple{type64: 0x2700000027, matchRI: 0x0480, match64: 0x00000000, model64: 0x1f6800001f6c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x497000004975, model64: 0x49750000497a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x497a00004984, model64: 0x498400004990},
		modelTuple{type64: 0x2700000027, matchRI: 0x0481, match64: 0x00000000, model64: 0x499000004997},
		modelTuple{type64: 0x2700000027, matchRI: 0x0482, match64: 0x00000000, model64: 0x49970000499b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x499b000049a5, model64: 0x49a5000049aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49aa000049b0, model64: 0x49b0000049b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0483, match64: 0x00000000, model64: 0x49b7000049bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0484, match64: 0x00000000, model64: 0x49bf000049c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0485, match64: 0x00000000, model64: 0x49c3000049c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0486, match64: 0x00000000, model64: 0x49c7000049cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0487, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0488, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x49d6000049dc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x49e1000049ea},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x048d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x048e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x49f600004a00, model64: 0x4a0000004a0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0490, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0491, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0492, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a1900004a22, model64: 0x4a2200004a2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a2a00004a37, model64: 0x4a3700004a3a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a4600004a51, model64: 0x4a5100004a5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0496, match64: 0x00000000, model64: 0x4a5c00004a65},
		modelTuple{type64: 0x2700000027, matchRI: 0x0497, match64: 0x00000000, model64: 0x4a6500004a6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0498, match64: 0x00000000, model64: 0x4a6c00004a75},
		modelTuple{type64: 0x2700000027, matchRI: 0x0499, match64: 0x00000000, model64: 0x4a7500004a78},
		modelTuple{type64: 0x2700000027, matchRI: 0x049a, match64: 0x00000000, model64: 0x4a7800004a7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x049b, match64: 0x00000000, model64: 0x4a7d00004a82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a8200004a86, model64: 0x4a8600004a8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a8a00004a90, model64: 0x4a9000004a95},
		modelTuple{type64: 0x2700000027, matchRI: 0x049c, match64: 0x00000000, model64: 0x4a9500004a9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x049d, match64: 0x00000000, model64: 0x4a9f00004aab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4aab00004ab8, model64: 0x4ab800004ac5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ac500004ad1, model64: 0x4ad100004add},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4add00004ae7, model64: 0x4ae700004af1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4af100004af9, model64: 0x4af100004af9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4af900004b03, model64: 0x4af900004b03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b0300004b13, model64: 0x4b0300004b13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b1300004b1f, model64: 0x4b1300004b1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b1f00004b2c, model64: 0x4b2c00004b39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b3900004b43, model64: 0x4b4300004b4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b4d00004b57, model64: 0x4b5700004b5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b5f00004b6d, model64: 0x4b6d00004b7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b7b00004b87, model64: 0x4b8700004b93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b9300004b9f, model64: 0x4b9f00004ba4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ba400004bae, model64: 0x4bae00004bb1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4bb100004bbd, model64: 0x4bbd00004bc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x049e, match64: 0x00000000, model64: 0x4bc200004bc7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x049f, match64: 0x00000000, model64: 0x4bc700004bce},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x4bce00004bd7, model64: 0x4bd700004bdf},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x4bdf00004bec, model64: 0x4bec00004bf1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x4bf100004bfe, model64: 0x4bfe00004c03},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04a1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x4c1a00004c2a, model64: 0x4c1a00004c2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a5, match64: 0x00000000, model64: 0x4c3000004c3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a6, match64: 0x00000000, model64: 0x4c3c00004c48},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a7, match64: 0x00000000, model64: 0x4c4800004c50},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a8, match64: 0x00000000, model64: 0x4c5000004c59},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a9, match64: 0x00000000, model64: 0x4c5900004c65},
		modelTuple{type64: 0x2700000027, matchRI: 0x04aa, match64: 0x00000000, model64: 0x4c6500004c71},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ab, match64: 0x00000000, model64: 0x4c7100004c7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c7b00004c8e, model64: 0x4c8e00004ca1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ca100004cb4, model64: 0x4cb400004cc7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04ac, match64: 0x00000000, model64: 0x4cc700004cd5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04ad, match64: 0x00000000, model64: 0x4cc700004cd5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b0, match64: 0x00000000, model64: 0x4ce300004cf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b1, match64: 0x00000000, model64: 0x4cf600004d03},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x4d0300004d0f, model64: 0x4d0f00004d1d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x4d2100004d2a, model64: 0x4d2a00004d2f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04b3, match64: 0x00000000, model64: 0x4d2f00004d3b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04b4, match64: 0x00000000, model64: 0x4d3b00004d43},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d4300004d5d, model64: 0x4d5d00004d68},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x04b7, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d7700004d82, model64: 0x4d8200004d8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d8d00004d93, model64: 0x4d9300004d99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d9900004da2, model64: 0x4da200004dad},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x4dad00004db3, model64: 0x4db300004dba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4dc300004dcd, model64: 0x4b9f00004ba4},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ba, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04bc, match64: 0x00000000, model64: 0x4dd600004dde},
		modelTuple{type64: 0x2700000027, matchRI: 0x04bd, match64: 0x00000000, model64: 0x4dde00004de5},
		modelTuple{type64: 0x2700000027, matchRI: 0x04be, match64: 0x00000000, model64: 0x4de500004df2},
		modelTuple{type64: 0x2700000027, matchRI: 0x04bf, match64: 0x00000000, model64: 0x4df200004e00},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c0, match64: 0x00000000, model64: 0x4e0000004e08},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e1d00004e24, model64: 0x4e2400004e2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c6, match64: 0x00000000, model64: 0x4e3000004e3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c7, match64: 0x00000000, model64: 0x4e3a00004e40},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c8, match64: 0x00000000, model64: 0x4e4000004e44},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c9, match64: 0x00000000, model64: 0x4e4400004e4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ca, match64: 0x00000000, model64: 0x4e4d00004e50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e5600004e6a, model64: 0x4e5600004e6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x04cd, match64: 0x00000000, model64: 0x4e6f00004e78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e7800004e7e, model64: 0x4e7800004e7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ce, match64: 0x00000000, model64: 0x4e7e00004e87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e8700004e90, model64: 0x4e9000004e99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e9900004ea0, model64: 0x4ea000004ea7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ea700004eaf, model64: 0x4eaf00004eb7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4eb700004ec5, model64: 0x4ec500004ed4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ed400004ee6, model64: 0x4ee600004efa},
		modelTuple{type64: 0x2700000027, matchRI: 0x04cf, match64: 0x00000000, model64: 0x4efa00004f0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f0b00004f18, model64: 0x4f1800004f26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f2600004f34, model64: 0x4f3400004f43},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d0, match64: 0x00000000, model64: 0x4f4300004f4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f4f00004f5b, model64: 0x4f5b00004f67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f6700004f70, model64: 0x4f7000004f79},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f7900004f83, model64: 0x4f8300004f8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f8d00004f92, model64: 0x4f9200004f97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f9700004fa0, model64: 0x4fa000004fa9},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d1, match64: 0x00000000, model64: 0x235300002357},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d2, match64: 0x00000000, model64: 0x4fa900004faf},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d3, match64: 0x00000000, model64: 0x4faf00004fb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d4, match64: 0x00000000, model64: 0x4fb400004fba},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d5, match64: 0x00000000, model64: 0x3670000036a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4fba00004fc3, model64: 0x4fc300004fcc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4fcc00004fd2, model64: 0x4fd200004fd8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4fd800004fe3, model64: 0x4fe300004fee},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d6, match64: 0x00000000, model64: 0x4fee00004ff5},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d7, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d8, match64: 0x00000000, model64: 0x4ff500004ffb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ffb00005005, model64: 0x500500005009},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x500900005014, model64: 0x4bbd00004bc2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x501400005022, model64: 0x50220000502a},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04da, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04db, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04dc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04df, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x503500005042, model64: 0x503500005042},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x504f00005057},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x506c00005072},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x508f0000509a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50a3000050a8, model64: 0x50a8000050b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e6, match64: 0x00000000, model64: 0x50b9000050bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e7, match64: 0x00000000, model64: 0x50b9000050bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e9, match64: 0x00000000, model64: 0x50c2000050cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ea, match64: 0x00000000, model64: 0x50cf000050de},
		modelTuple{type64: 0x2700000027, matchRI: 0x04eb, match64: 0x00000000, model64: 0x50de000050f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ed, match64: 0x00000000, model64: 0x50fa00005105},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ee, match64: 0x00000000, model64: 0x51050000510b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x510b00005119, model64: 0x511900005120},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04ef, match64: 0x00000000, model64: 0x512000005128},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04f0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04f1, match64: 0x00000000, model64: 0x512800005131},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04f2, match64: 0x00000000, model64: 0x51050000510b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04f3, match64: 0x00000000, model64: 0x51050000510b},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x513400005138, model64: 0x513400005138},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x51380000513f, model64: 0x513f00005142},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x514200005149, model64: 0x514200005149},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x04f5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f7, match64: 0x00000000, model64: 0x500500005009},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x04f8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x04f9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x04fb, match64: 0x00000000, model64: 0x514f00005159},
		modelTuple{type64: 0x2700000027, matchRI: 0x04fc, match64: 0x00000000, model64: 0x515900005162},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x516200005170, model64: 0x517000005180},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04fd, match64: 0x00000000, model64: 0x51800000518e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04fe, match64: 0x00000000, model64: 0x518e0000519c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x519c000051aa, model64: 0x51aa000051b1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x51b1000051c3, model64: 0x51c3000051d1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x51d1000051e3, model64: 0x51e3000051f1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x04ff, match64: 0x00000000, model64: 0x51f100005205},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0500, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x520b00005210, model64: 0x521000005216},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52160000521f, model64: 0x521f00005228},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x522800005232, model64: 0x52320000523c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x523c00005246, model64: 0x52460000524f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0502, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0505, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0506, match64: 0x00000000, model64: 0x525b00005263},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x526300005271, model64: 0x526300005271},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x527100005278, model64: 0x527800005280},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x528000005289, model64: 0x528900005293},
		modelTuple{type64: 0x2700000027, matchRI: 0x0507, match64: 0x00000000, model64: 0x529300005299},
		modelTuple{type64: 0x2700000027, matchRI: 0x0508, match64: 0x00000000, model64: 0x5299000052a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0509, match64: 0x00000000, model64: 0x52a1000052a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x050a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x050b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x050c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x050d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x050f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0510, match64: 0x00000000, model64: 0x52ab000052b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0511, match64: 0x00000000, model64: 0x52b1000052b8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x52b8000052c4, model64: 0x52c4000052ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0513, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52d4000052e0, model64: 0x52e0000052ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52ee000052f5, model64: 0x52f5000052fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0515, match64: 0x00000000, model64: 0x530400005307},
		modelTuple{type64: 0x2700000027, matchRI: 0x0516, match64: 0x00000000, model64: 0x53070000530f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0517, match64: 0x00000000, model64: 0x530f00005319},
		modelTuple{type64: 0x2700000027, matchRI: 0x0519, match64: 0x00000000, model64: 0x53220000532b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x532b00005331, model64: 0x532b00005331},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x533100005336, model64: 0x53360000533b},
		modelTuple{type64: 0x2700000027, matchRI: 0x051b, match64: 0x00000000, model64: 0x2f5000002f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x051c, match64: 0x00000000, model64: 0x534200005349},
		modelTuple{type64: 0x2700000027, matchRI: 0x051d, match64: 0x00000000, model64: 0x4e1000004e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x051e, match64: 0x00000000, model64: 0x53490000534b},
		modelTuple{type64: 0x2700000027, matchRI: 0x051f, match64: 0x00000000, model64: 0x534b0000534d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0520, match64: 0x00000000, model64: 0x534d0000534f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0522, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0524, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x536000005367, model64: 0x536700005373},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53730000537b, model64: 0x537b0000537e},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0525, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0526, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0527, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0529, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x052a, match64: 0x00000000, model64: 0x538b00005396},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5396000053a2, model64: 0x53a2000053ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53ae000053b8, model64: 0x53b8000053c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x052b, match64: 0x00000000, model64: 0x53c2000053ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x052c, match64: 0x00000000, model64: 0x53ce000053d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x052d, match64: 0x00000000, model64: 0x53d6000053e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x052e, match64: 0x00000000, model64: 0x53e0000053ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x052f, match64: 0x00000000, model64: 0x53ee000053fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0530, match64: 0x00000000, model64: 0x53fd0000540b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0531, match64: 0x00000000, model64: 0x540b00005417},
		modelTuple{type64: 0x2700000027, matchRI: 0x0532, match64: 0x00000000, model64: 0x541700005424},
		modelTuple{type64: 0x2700000027, matchRI: 0x0533, match64: 0x00000000, model64: 0x542400005431},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54310000543e, model64: 0x54310000543e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0534, match64: 0x00000000, model64: 0x543e0000544b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x544b00005457, model64: 0x544b00005457},
		modelTuple{type64: 0x2700000027, matchRI: 0x0535, match64: 0x00000000, model64: 0x54570000545f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0536, match64: 0x00000000, model64: 0x545f0000546a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0537, match64: 0x00000000, model64: 0x546a00005474},
		modelTuple{type64: 0x2700000027, matchRI: 0x0538, match64: 0x00000000, model64: 0x547400005481},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54810000548e, model64: 0x548e0000549d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x549d000054ad, model64: 0x549d000054ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0539, match64: 0x00000000, model64: 0x54ad000054b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54b9000054c7, model64: 0x54c7000054d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x053a, match64: 0x00000000, model64: 0x54d8000054e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x053b, match64: 0x00000000, model64: 0x54e4000054f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x053c, match64: 0x00000000, model64: 0x54f2000054ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x053d, match64: 0x00000000, model64: 0x53ce000053d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54ff00005509, model64: 0x54ff00005509},
		modelTuple{type64: 0x2700000027, matchRI: 0x053e, match64: 0x00000000, model64: 0x550900005514},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x551400005520, model64: 0x55200000552c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x552c0000553d, model64: 0x552c0000553d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x553d00005549, model64: 0x553d00005549},
		modelTuple{type64: 0x2700000027, matchRI: 0x053f, match64: 0x00000000, model64: 0x554900005556},
		modelTuple{type64: 0x2700000027, matchRI: 0x0540, match64: 0x00000000, model64: 0x55560000555d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x555d00005567, model64: 0x555d00005567},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x556700005571, model64: 0x55710000557b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0541, match64: 0x00000000, model64: 0x557b0000558a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x558a00005598, model64: 0x5598000055a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55a6000055af, model64: 0x55a6000055af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55af000055b9, model64: 0x55af000055b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55b9000055c5, model64: 0x55c5000055cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55cd000055d5, model64: 0x55cd000055d5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x55d5000055e3, model64: 0x55e3000055fa},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x55fa0000560a, model64: 0x560a0000561a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x561a0000562e, model64: 0x561a0000562e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x562e0000563e, model64: 0x562e0000563e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0542, match64: 0x00000000, model64: 0x563e0000564f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x564f0000565d, model64: 0x565d0000566b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x566b00005678, model64: 0x567800005685},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0543, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0544, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56910000569b, model64: 0x569b000056a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56a5000056b1, model64: 0x56b1000056bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56bd000056cb, model64: 0x56cb000056d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56d9000056e6, model64: 0x56e6000056f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56f3000056fd, model64: 0x56fd00005707},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x570700005711, model64: 0x57110000571b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0546, match64: 0x00000000, model64: 0x571b00005722},
		modelTuple{type64: 0x2700000027, matchRI: 0x0547, match64: 0x00000000, model64: 0x572200005729},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x572900005732, model64: 0x57320000573b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x573b00005746, model64: 0x574600005751},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x575100005759, model64: 0x575900005761},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57610000576a, model64: 0x576a00005773},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57730000577d, model64: 0x577d00005787},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x578700005790, model64: 0x579000005799},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5799000057a3, model64: 0x57a3000057ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57ad000057ba, model64: 0x57ba000057c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57c7000057cf, model64: 0x57cf000057d7},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x57d7000057e0, model64: 0x57e0000057e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0549, match64: 0x00000000, model64: 0x57f3000057fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58090000580f, model64: 0x15180000151a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x580f00005818, model64: 0x58180000581e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x581e00005822, model64: 0x582200005825},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58250000582a, model64: 0x1f6000001f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x054b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58370000583e, model64: 0x583e0000584b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x584b00005852, model64: 0x585200005862},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x586200005869, model64: 0x586900005876},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58760000587d, model64: 0x587d0000588e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x588e00005895, model64: 0x58950000589f},
		modelTuple{type64: 0x2700000027, matchRI: 0x054e, match64: 0x00000000, model64: 0x58a4000058a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x054f, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x0550, match64: 0x00000000, model64: 0x58a7000058ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0551, match64: 0x00000000, model64: 0x58ae000058b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0552, match64: 0x00000000, model64: 0x58b5000058ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0553, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0554, match64: 0x00000000, model64: 0x58ba000058c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0555, match64: 0x00000000, model64: 0x58c4000058ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0556, match64: 0x00000000, model64: 0x58ca000058d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0557, match64: 0x00000000, model64: 0x58d1000058da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0558, match64: 0x00000000, model64: 0x58da000058e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0559, match64: 0x00000000, model64: 0x58e5000058ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x055a, match64: 0x00000000, model64: 0x58ee000058f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x055b, match64: 0x00000000, model64: 0x58f800005901},
		modelTuple{type64: 0x2700000027, matchRI: 0x055c, match64: 0x00000000, model64: 0x590100005909},
		modelTuple{type64: 0x2700000027, matchRI: 0x055d, match64: 0x00000000, model64: 0x59090000590f},
		modelTuple{type64: 0x2700000027, matchRI: 0x055e, match64: 0x00000000, model64: 0x590f00005918},
		modelTuple{type64: 0x2700000027, matchRI: 0x055f, match64: 0x00000000, model64: 0x591800005920},
		modelTuple{type64: 0x2700000027, matchRI: 0x0560, match64: 0x00000000, model64: 0x592000005929},
		modelTuple{type64: 0x2700000027, matchRI: 0x0561, match64: 0x00000000, model64: 0x592900005931},
		modelTuple{type64: 0x2700000027, matchRI: 0x0562, match64: 0x00000000, model64: 0x593100005935},
		modelTuple{type64: 0x2700000027, matchRI: 0x0563, match64: 0x00000000, model64: 0x59350000593b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0564, match64: 0x00000000, model64: 0x593b00005945},
		modelTuple{type64: 0x2700000027, matchRI: 0x0565, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0569, match64: 0x00000000, model64: 0x595e00005969},
		modelTuple{type64: 0x2700000027, matchRI: 0x056a, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x056b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x597000005976, model64: 0x59760000597d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x597d00005983, model64: 0x59830000598a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x598a0000598f, model64: 0x598f00005995},
		modelTuple{type64: 0x2700000027, matchRI: 0x056d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x056e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0570, match64: 0x00000000, model64: 0x59a9000059b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x59b5000059bd, model64: 0x59bd000059cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x59cb000059d0, model64: 0x59d0000059d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x59d9000059e4, model64: 0x59e4000059ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0571, match64: 0x00000000, model64: 0x59ee000059f8},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0572, match64: 0x00000000, model64: 0x59f800005a04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a0900005a19, model64: 0x5a1900005a29},
		modelTuple{type64: 0x2700000027, matchRI: 0x0574, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0575, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0577, match64: 0x00000000, model64: 0x5a3200005a45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0578, match64: 0x00000000, model64: 0x5a4500005a54},
		modelTuple{type64: 0x2700000027, matchRI: 0x0579, match64: 0x00000000, model64: 0x5a5400005a60},
		modelTuple{type64: 0x2700000027, matchRI: 0x057a, match64: 0x00000000, model64: 0x5a6000005a6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x057b, match64: 0x00000000, model64: 0x5a6b00005a7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x057c, match64: 0x00000000, model64: 0x5a7b00005a87},
		modelTuple{type64: 0x2700000027, matchRI: 0x057d, match64: 0x00000000, model64: 0x5a8700005a94},
		modelTuple{type64: 0x2700000027, matchRI: 0x057e, match64: 0x00000000, model64: 0x5a9400005a9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x057f, match64: 0x00000000, model64: 0x5a9f00005aa8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5aa800005aba, model64: 0x5aa800005aba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5aba00005ac8, model64: 0x5aba00005ac8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ac800005ad4, model64: 0x5ac800005ad4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ad400005adb, model64: 0x5adb00005ae3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0580, match64: 0x00000000, model64: 0x5ae300005aee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0581, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0582, match64: 0x00000000, model64: 0x5aee00005af7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0583, match64: 0x00000000, model64: 0x5af700005afb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0585, match64: 0x00000000, model64: 0x5b0300005b08},
		modelTuple{type64: 0x2700000027, matchRI: 0x0586, match64: 0x00000000, model64: 0x5b0800005b0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0588, match64: 0x00000000, model64: 0x5b1300005b1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0589, match64: 0x00000000, model64: 0x5b1b00005b25},
		modelTuple{type64: 0x2700000027, matchRI: 0x058a, match64: 0x00000000, model64: 0x5b2500005b2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x058b, match64: 0x00000000, model64: 0x5b2e00005b37},
		modelTuple{type64: 0x2700000027, matchRI: 0x058c, match64: 0x00000000, model64: 0x5b3700005b42},
		modelTuple{type64: 0x2700000027, matchRI: 0x058d, match64: 0x00000000, model64: 0x5b4200005b4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x058e, match64: 0x00000000, model64: 0x5b4d00005b58},
		modelTuple{type64: 0x2700000027, matchRI: 0x058f, match64: 0x00000000, model64: 0x5b5b00005b66},
		modelTuple{type64: 0x2700000027, matchRI: 0x0591, match64: 0x00000000, model64: 0x5b6c00005b70},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0592, match64: 0x00000000, model64: 0x5b7000005b76},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0593, match64: 0x00000000, model64: 0x5b7600005b7e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0596, match64: 0x00000000, model64: 0x5b8e00005b96},
		modelTuple{type64: 0x2700000027, matchRI: 0x0597, match64: 0x00000000, model64: 0x5b9600005b9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0598, match64: 0x00000000, model64: 0x5b9e00005ba6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0599, match64: 0x00000000, model64: 0x5ba600005bae},
		modelTuple{type64: 0x2700000027, matchRI: 0x059a, match64: 0x00000000, model64: 0x5bae00005bb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x059b, match64: 0x00000000, model64: 0x5bb600005bbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x059c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x059e, match64: 0x00000000, model64: 0x5bcc00005bd3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x059f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05a0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05a1, match64: 0x00000000, model64: 0x5bd300005be5},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a2, match64: 0x00000000, model64: 0x5be500005bf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a3, match64: 0x00000000, model64: 0x5bf700005c05},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a4, match64: 0x00000000, model64: 0x5c0500005c18},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a5, match64: 0x00000000, model64: 0x5c1800005c28},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a6, match64: 0x00000000, model64: 0x5c2800005c35},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a7, match64: 0x00000000, model64: 0x5c2800005c35},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a8, match64: 0x00000000, model64: 0x5c2800005c35},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5c3500005c45, model64: 0x5c4500005c4a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5c4a00005c4e, model64: 0x5c4e00005c50},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5c5000005c5a, model64: 0x5c5a00005c5c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5c5c00005c6e, model64: 0x5c6e00005c73},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05a9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5c7300005c7a, model64: 0x5c7a00005c81},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05aa, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05ab, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5c8100005c8b, model64: 0x5c8b00005c8d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05ac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5c8d00005c9c, model64: 0x5c9c00005c9e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5c9e00005cad, model64: 0x5cad00005caf},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x5caf00005cba, model64: 0x5cba00005cc8},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x05ad, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5ccd00005cd2, model64: 0x5ccd00005cd2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5cd200005cd8, model64: 0x5cd200005cd8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5cd800005ce3, model64: 0x5ce300005cee},
		modelTuple{type64: 0x2700000027, matchRI: 0x05af, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05b6, match64: 0x00000000, model64: 0x3fb600003fbc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05b7, match64: 0x00000000, model64: 0x5d0200005d0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5d1c00005d1f, model64: 0x5d1c00005d1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5d1f00005d27, model64: 0x5d1f00005d27},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5d2700005d2c, model64: 0x5d2c00005d34},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05bb, match64: 0x00000000, model64: 0x5d3400005d3e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5d3e00005d51, model64: 0x5d5100005d64},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x5d6400005d74, model64: 0x5d7400005d7c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05bd, match64: 0x00000000, model64: 0x5d8200005d89},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05be, match64: 0x00000000, model64: 0x58b5000058ba},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05bf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x05c0, match64: 0x00000000, model64: 0x58b5000058ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5d8900005d90, model64: 0x5d9000005d92},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c1, match64: 0x00000000, model64: 0x5d9200005d9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c2, match64: 0x00000000, model64: 0x5d9a00005da1},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c3, match64: 0x00000000, model64: 0x5da100005da9},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c4, match64: 0x00000000, model64: 0x5da900005dab},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c5, match64: 0x00000000, model64: 0x5dab00005dad},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c6, match64: 0x00000000, model64: 0x5dad00005db0},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c7, match64: 0x00000000, model64: 0x5db000005db2},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c8, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c9, match64: 0x00000000, model64: 0x42830000428a},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ca, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cb, match64: 0x00000000, model64: 0x5db200005dbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cc, match64: 0x00000000, model64: 0x5dbb00005dbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cd, match64: 0x00000000, model64: 0x5dbe00005dc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ce, match64: 0x00000000, model64: 0x5dc400005dd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cf, match64: 0x00000000, model64: 0x5dd200005dd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d0, match64: 0x00000000, model64: 0x5dd500005dde},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5dde00005de3, model64: 0x5de300005dec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5dec00005df2, model64: 0x5df200005dfb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5dfb00005e01, model64: 0x5e0100005e0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e0b00005e11, model64: 0x5e1100005e1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e1a00005e20, model64: 0x5e2000005e29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e2900005e2f, model64: 0x5e2f00005e3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d1, match64: 0x00000000, model64: 0x5e3c00005e44},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d2, match64: 0x00000000, model64: 0x5e4400005e50},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d3, match64: 0x00000000, model64: 0x5e5000005e58},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d4, match64: 0x00000000, model64: 0x5e5800005e60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e6000005e6b, model64: 0x5e6b00005e76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e7600005e85, model64: 0x5e8500005e94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e9400005e9f, model64: 0x5e9400005e9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d5, match64: 0x00000000, model64: 0x5e9f00005eab},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d6, match64: 0x00000000, model64: 0x5eab00005eb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d7, match64: 0x00000000, model64: 0x5eb900005ec6},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d8, match64: 0x00000000, model64: 0x5ec600005ed5},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d9, match64: 0x00000000, model64: 0x5ed500005edf},
		modelTuple{type64: 0x2700000027, matchRI: 0x05da, match64: 0x00000000, model64: 0x1ab100001ab8},
		modelTuple{type64: 0x2700000027, matchRI: 0x05db, match64: 0x00000000, model64: 0x5edf00005ee6},
		modelTuple{type64: 0x2700000027, matchRI: 0x05dc, match64: 0x00000000, model64: 0x5ee600005ef3},
		modelTuple{type64: 0x2700000027, matchRI: 0x05dd, match64: 0x00000000, model64: 0x5ef300005f03},
		modelTuple{type64: 0x2700000027, matchRI: 0x05de, match64: 0x00000000, model64: 0x5f0300005f0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x05df, match64: 0x00000000, model64: 0x5f0b00005f15},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e0, match64: 0x00000000, model64: 0x5f1500005f20},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e1, match64: 0x00000000, model64: 0x5f2000005f2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e2, match64: 0x00000000, model64: 0x5f2f00005f3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e3, match64: 0x00000000, model64: 0x5f3f00005f4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e4, match64: 0x00000000, model64: 0x5f4c00005f55},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e5, match64: 0x00000000, model64: 0x5f5500005f63},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e6, match64: 0x00000000, model64: 0x5f6300005f72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f7200005f7a, model64: 0x5f7200005f7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e7, match64: 0x00000000, model64: 0x5f7a00005f87},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e8, match64: 0x00000000, model64: 0x5f8700005f95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f9500005fa3, model64: 0x5f9500005fa3},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e9, match64: 0x00000000, model64: 0x5fa300005fac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5fac00005fb8, model64: 0x5fac00005fb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ea, match64: 0x00000000, model64: 0x5fb800005fbe},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5fc700005fd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ed, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5fdb00005fe7, model64: 0x5fe700005ffa},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ef, match64: 0x00000000, model64: 0x600200006005},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x600500006010, model64: 0x601000006012},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f1, match64: 0x00000000, model64: 0x601900006023},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f2, match64: 0x00000000, model64: 0x602300006033},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f3, match64: 0x00000000, model64: 0x603300006042},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f4, match64: 0x00000000, model64: 0x60420000604f},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f5, match64: 0x00000000, model64: 0x604f0000605c},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f6, match64: 0x00000000, model64: 0x605c0000606a},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f7, match64: 0x00000000, model64: 0x606a00006078},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f8, match64: 0x00000000, model64: 0x607800006085},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f9, match64: 0x00000000, model64: 0x608500006093},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fa, match64: 0x00000000, model64: 0x60930000609b},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fc, match64: 0x00000000, model64: 0x60a2000060ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fd, match64: 0x00000000, model64: 0x60ad000060b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fe, match64: 0x00000000, model64: 0x60b9000060c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ff, match64: 0x00000000, model64: 0x60c4000060cb},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x60cb000060db, model64: 0x60db000060e5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x60e5000060ed, model64: 0x60ed000060f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0600, match64: 0x00000000, model64: 0x60f3000060f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0601, match64: 0x00000000, model64: 0x1f6000001f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x60f8000060ff, model64: 0x60ff00006106},
		modelTuple{type64: 0x2700000027, matchRI: 0x0602, match64: 0x00000000, model64: 0x610600006109},
		modelTuple{type64: 0x2700000027, matchRI: 0x0603, match64: 0x00000000, model64: 0x610900006110},
		modelTuple{type64: 0x2700000027, matchRI: 0x0604, match64: 0x00000000, model64: 0x611000006116},
		modelTuple{type64: 0x2700000027, matchRI: 0x0605, match64: 0x00000000, model64: 0x61160000611e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0606, match64: 0x00000000, model64: 0x611e00006129},
		modelTuple{type64: 0x2700000027, matchRI: 0x0607, match64: 0x00000000, model64: 0x612900006135},
		modelTuple{type64: 0x2700000027, matchRI: 0x0608, match64: 0x00000000, model64: 0x613500006139},
		modelTuple{type64: 0x2700000027, matchRI: 0x0609, match64: 0x00000000, model64: 0x61390000613c},
		modelTuple{type64: 0x2700000027, matchRI: 0x060a, match64: 0x00000000, model64: 0x613c00006142},
		modelTuple{type64: 0x2700000027, matchRI: 0x060b, match64: 0x00000000, model64: 0x614200006148},
		modelTuple{type64: 0x2700000027, matchRI: 0x060c, match64: 0x00000000, model64: 0x182b0000182d},
		modelTuple{type64: 0x2700000027, matchRI: 0x060d, match64: 0x00000000, model64: 0x61480000614f},
		modelTuple{type64: 0x2700000027, matchRI: 0x060e, match64: 0x00000000, model64: 0x614f00006155},
		modelTuple{type64: 0x2700000027, matchRI: 0x060f, match64: 0x00000000, model64: 0x615500006160},
		modelTuple{type64: 0x2700000027, matchRI: 0x0610, match64: 0x00000000, model64: 0x616000006166},
		modelTuple{type64: 0x2700000027, matchRI: 0x0611, match64: 0x00000000, model64: 0x61660000616c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0612, match64: 0x00000000, model64: 0x616c00006173},
		modelTuple{type64: 0x2700000027, matchRI: 0x0613, match64: 0x00000000, model64: 0x61730000617a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0614, match64: 0x00000000, model64: 0x617a00006185},
		modelTuple{type64: 0x2700000027, matchRI: 0x0615, match64: 0x00000000, model64: 0x618500006187},
		modelTuple{type64: 0x2700000027, matchRI: 0x0616, match64: 0x00000000, model64: 0x61870000618c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0617, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0618, match64: 0x00000000, model64: 0x618c0000618f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x618f00006193, model64: 0x619300006199},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61990000619d, model64: 0x619d000061a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0619, match64: 0x00000000, model64: 0x61a5000061ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x061a, match64: 0x00000000, model64: 0x61ab000061b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x061b, match64: 0x00000000, model64: 0x61b1000061bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x061c, match64: 0x00000000, model64: 0x61bc000061c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x061d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x061e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x061f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0620, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x61d5000061e8, model64: 0x61e8000061f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0622, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x620000006206, model64: 0x62060000620c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x620c00006211, model64: 0x621100006217},
		modelTuple{type64: 0x2700000027, matchRI: 0x0625, match64: 0x00000000, model64: 0x62170000621f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62260000622d, model64: 0x622d00006238},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x623800006240, model64: 0x624000006248},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62480000624e, model64: 0x624e00006252},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x625200006258, model64: 0x62580000625e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x625e00006266, model64: 0x62660000626c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x626c00006273, model64: 0x627300006279},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62790000627e, model64: 0x627e00006287},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62870000628f, model64: 0x628f0000629a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x629a000062a0, model64: 0x62a0000062a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62a7000062ad, model64: 0x62ad000062b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62b6000062be, model64: 0x62be000062c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62c6000062cd, model64: 0x62cd000062d8},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x0627, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x62e6000062ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x062b, match64: 0x00000000, model64: 0x62f300006300},
		modelTuple{type64: 0x2700000027, matchRI: 0x062c, match64: 0x00000000, model64: 0x63000000630a},
		modelTuple{type64: 0x2700000027, matchRI: 0x062d, match64: 0x00000000, model64: 0x630a00006314},
		modelTuple{type64: 0x2700000027, matchRI: 0x062e, match64: 0x00000000, model64: 0x63140000631b},
		modelTuple{type64: 0x2700000027, matchRI: 0x062f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x631b00006327, model64: 0x63270000632f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x632f00006339, model64: 0x633900006343},
		modelTuple{type64: 0x2700000027, matchRI: 0x0630, match64: 0x00000000, model64: 0x634300006352},
		modelTuple{type64: 0x2700000027, matchRI: 0x0631, match64: 0x00000000, model64: 0x63520000635c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0632, match64: 0x00000000, model64: 0x635c00006364},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0634, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x636900006374, model64: 0x637400006380},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x638700006390, model64: 0x639000006399},
		modelTuple{type64: 0x2700000027, matchRI: 0x0637, match64: 0x00000000, model64: 0x639d000063a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0638, match64: 0x00000000, model64: 0x63a4000063a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0639, match64: 0x00000000, model64: 0x63a9000063af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63af000063b4, model64: 0x63b4000063ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63ba000063c2, model64: 0x63c2000063c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x063a, match64: 0x00000000, model64: 0x63c9000063d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63d0000063d5, model64: 0x63d5000063dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x063b, match64: 0x00000000, model64: 0x63dc000063e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63e7000063ec, model64: 0x63c2000063c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63ec000063f4, model64: 0x63f4000063fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63fc00006401, model64: 0x640100006408},
		modelTuple{type64: 0x2700000027, matchRI: 0x063c, match64: 0x00000000, model64: 0x640800006413},
		modelTuple{type64: 0x2700000027, matchRI: 0x063d, match64: 0x00000000, model64: 0x64130000641d},
		modelTuple{type64: 0x2700000027, matchRI: 0x063e, match64: 0x00000000, model64: 0x641d0000642d},
		modelTuple{type64: 0x2700000027, matchRI: 0x063f, match64: 0x00000000, model64: 0x642d0000643e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0640, match64: 0x00000000, model64: 0x643e00006446},
		modelTuple{type64: 0x2700000027, matchRI: 0x0641, match64: 0x00000000, model64: 0x644600006452},
		modelTuple{type64: 0x2700000027, matchRI: 0x0642, match64: 0x00000000, model64: 0x645200006463},
		modelTuple{type64: 0x2700000027, matchRI: 0x0643, match64: 0x00000000, model64: 0x64630000646a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0644, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0645, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0646, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0648, match64: 0x00000000, model64: 0x647200006476},
		modelTuple{type64: 0x2700000027, matchRI: 0x064a, match64: 0x00000000, model64: 0x647b00006481},
		modelTuple{type64: 0x2700000027, matchRI: 0x064b, match64: 0x00000000, model64: 0x648100006488},
		modelTuple{type64: 0x2700000027, matchRI: 0x064c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x064d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x64940000649e, model64: 0x649e000064a9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0650, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0651, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0655, match64: 0x00000000, model64: 0x64b8000064c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0656, match64: 0x00000000, model64: 0x64c0000064d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0657, match64: 0x00000000, model64: 0x64d0000064dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64dd000064e8, model64: 0x64e8000064f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0658, match64: 0x00000000, model64: 0x64b8000064c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0659, match64: 0x00000000, model64: 0x64f400006504},
		modelTuple{type64: 0x2700000027, matchRI: 0x065a, match64: 0x00000000, model64: 0x650400006515},
		modelTuple{type64: 0x2700000027, matchRI: 0x065b, match64: 0x00000000, model64: 0x65150000651f},
		modelTuple{type64: 0x2700000027, matchRI: 0x065c, match64: 0x00000000, model64: 0x651f00006529},
		modelTuple{type64: 0x2700000027, matchRI: 0x065d, match64: 0x00000000, model64: 0x652900006534},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x065e, match64: 0x00000000, model64: 0x65340000653f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x065f, match64: 0x00000000, model64: 0x653f0000654a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x654a0000655b, model64: 0x655b0000656c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0660, match64: 0x00000000, model64: 0x656c00006574},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0661, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0662, match64: 0x00000000, model64: 0x656c00006574},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0663, match64: 0x00000000, model64: 0x656c00006574},
		modelTuple{type64: 0x2700000027, matchRI: 0x0664, match64: 0x00000000, model64: 0x65740000657b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0665, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0666, match64: 0x00000000, model64: 0x657b00006581},
		modelTuple{type64: 0x2e8000002f5, matchRI: -0x0001, match64: 0x65810000658a, model64: 0x65810000658a},
		modelTuple{type64: 0xed000000f4, matchRI: 0x0667, match64: 0x00000000, model64: 0x658a0000658f},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0668, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x0669, match64: 0x00000000, model64: 0x658f00006594},
		modelTuple{type64: 0x2700000027, matchRI: 0x066a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x066b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x066c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x659a000065a3, model64: 0x65a3000065ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x066f, match64: 0x00000000, model64: 0x65ac000065b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65b5000065bd, model64: 0x65bd000065c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65c5000065cc, model64: 0x65cc000065d3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0671, match64: 0x00000000, model64: 0x65d8000065e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0673, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0674, match64: 0x00000000, model64: 0x65e9000065ed},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3fc200003fca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0676, match64: 0x00000000, model64: 0x66040000660e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x661f00006629, model64: 0x662900006632},
		modelTuple{type64: 0x2700000027, matchRI: 0x067b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x66370000663f, model64: 0x663f00006644},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x66440000664a, model64: 0x664a00006650},
		modelTuple{type64: 0x20d00000213, matchRI: 0x067c, match64: 0x00000000, model64: 0x665000006657},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x66570000665f, model64: 0x665f00006667},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x067d, match64: 0x00000000, model64: 0x66670000666d},
		modelTuple{type64: 0x2700000027, matchRI: 0x067f, match64: 0x00000000, model64: 0x666f00006677},
		modelTuple{type64: 0x2700000027, matchRI: 0x0680, match64: 0x00000000, model64: 0x667700006681},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x668100006692, model64: 0x6692000066a0},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x66a0000066ae, model64: 0x66ae000066ba},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0681, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0683, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0684, match64: 0x00000000, model64: 0x66bd000066c2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0685, match64: 0x00000000, model64: 0x66c2000066cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0686, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x66d5000066dd, model64: 0x66dd000066e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0689, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x068e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0690, match64: 0x00000000, model64: 0x670600006710},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0691, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0693, match64: 0x00000000, model64: 0x67150000671f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x671f0000672a, model64: 0x672a00006735},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0694, match64: 0x00000000, model64: 0x67350000673d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0695, match64: 0x00000000, model64: 0x673d00006746},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x674f00006755, model64: 0x674f00006755},
		modelTuple{type64: 0x2700000027, matchRI: 0x0697, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x675900006765, model64: 0x67650000676f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x677800006780},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x069a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x069b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x069d, match64: 0x00000000, model64: 0x679c000067ad},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x67ad000067b5, model64: 0x67b5000067c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x67cc000067d8, model64: 0x67d8000067dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x67dd000067e9, model64: 0x67e9000067ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x67f8000067fa, model64: 0x67f8000067fa},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x680800006810},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x681a00006820, model64: 0x682000006826},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x682600006830, model64: 0x68300000683c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x683c00006842, model64: 0x684200006846},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x685000006855, model64: 0x685000006855},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06a3, match64: 0x00000000, model64: 0x68550000685d},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a4, match64: 0x00000000, model64: 0x685d00006862},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a5, match64: 0x00000000, model64: 0x68620000686b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x06a6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x06a7, match64: 0x00000000, model64: 0x686b00006874},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x06a8, match64: 0x00000000, model64: 0x687400006881},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06a9, match64: 0x00000000, model64: 0x58b5000058ba},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x06aa, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06ab, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ad, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x68870000688f},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b0, match64: 0x00000000, model64: 0x68950000689b},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b1, match64: 0x00000000, model64: 0x68950000689b},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x06b3, match64: 0x00000000, model64: 0x689b000068a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68bc000068c6, model64: 0x68c6000068d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bc, match64: 0x00000000, model64: 0x68d2000068d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bd, match64: 0x00000000, model64: 0x68d5000068d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68d9000068de, model64: 0x68d9000068de},
		modelTuple{type64: 0x2700000027, matchRI: 0x06be, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68f8000068ff, model64: 0x68f8000068ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c3, match64: 0x00000000, model64: 0x68d5000068d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c6, match64: 0x00000000, model64: 0x69060000690b},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06c9, match64: 0x00000000, model64: 0x691000006916},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69160000691a, model64: 0x69160000691a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x691a00006922, model64: 0x69220000692d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x692d00006935, model64: 0x693500006940},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x694000006948, model64: 0x694800006953},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ca, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x695300006959, model64: 0x695900006961},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x696100006969, model64: 0x696900006975},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69750000697d, model64: 0x697d00006988},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x698800006990, model64: 0x69900000699c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x699c000069a4, model64: 0x69a4000069b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69b0000069b8, model64: 0x69b8000069c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69c2000069ca, model64: 0x69ca000069d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69d8000069e0, model64: 0x69e0000069ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x69ec000069f4, model64: 0x69f400006a00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a0000006a08, model64: 0x6a0800006a14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a1400006a1c, model64: 0x6a1c00006a27},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cb, match64: 0x00000000, model64: 0x6a2700006a31},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a3100006a37, model64: 0x6a3700006a3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6a3f00006a53, model64: 0x6a5300006a5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ce, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6a5e00006a65, model64: 0x6a6500006a72},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6a7200006a7a, model64: 0x6a7a00006a86},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6a8600006a8e, model64: 0x6a8e00006a9c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6a9c00006aa6, model64: 0x6aa600006ab4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06cf, match64: 0x00000000, model64: 0x6ab400006ab8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6ab800006ac1, model64: 0x6ac100006ac5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06d0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6ac500006ad4, model64: 0x6ad400006ada},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06d3, match64: 0x00000000, model64: 0x3fb000003fb6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06d4, match64: 0x00000000, model64: 0x6ada00006ae4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06d5, match64: 0x00000000, model64: 0x6ae400006aeb},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6aeb00006af3, model64: 0x6af300006afd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06d6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6afd00006b05, model64: 0x6b0500006b0f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06d7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6b0f00006b17, model64: 0x6b1700006b25},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6b2500006b2d, model64: 0x6b2d00006b3b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6b3b00006b43, model64: 0x6b4300006b52},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6b5200006b5a, model64: 0x6b5a00006b6b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6b6b00006b73, model64: 0x6b7300006b81},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6b8100006b89, model64: 0x6b8900006b97},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6b9700006b9f, model64: 0x6b9f00006bad},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6bad00006bb5, model64: 0x6bb500006bc3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06d8, match64: 0x00000000, model64: 0x6bc300006bd0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06d9, match64: 0x00000000, model64: 0x6bd000006bdc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06da, match64: 0x00000000, model64: 0x6bdc00006be6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06db, match64: 0x00000000, model64: 0x6be600006bed},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6bed00006bf5, model64: 0x6bf500006c02},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6c0200006c0a, model64: 0x6c0a00006c19},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6c1900006c21, model64: 0x6c1900006c21},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6c2100006c32, model64: 0x6c3200006c3a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6c3a00006c42, model64: 0x6c4200006c4e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06dc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x06dd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x06de, match64: 0x00000000, model64: 0x6c4e00006c5d},
		modelTuple{type64: 0x245800002460, matchRI: 0x06df, match64: 0x00000000, model64: 0x6c5d00006c63},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x06e0, match64: 0x00000000, model64: 0x6c6300006c6b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x6c7000006c78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6c7e00006c87, model64: 0x6c8700006c90},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e6, match64: 0x00000000, model64: 0x6ca300006cad},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e9, match64: 0x00000000, model64: 0x6cb400006cbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ea, match64: 0x00000000, model64: 0x6cbb00006cc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ec, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ed, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ee, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ef, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ce600006ceb, model64: 0x6ce600006ceb},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f4, match64: 0x00000000, model64: 0x6ceb00006cfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f5, match64: 0x00000000, model64: 0x6cfe00006d10},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f6, match64: 0x00000000, model64: 0x6d1000006d1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f7, match64: 0x00000000, model64: 0x6d1e00006d24},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f8, match64: 0x00000000, model64: 0x6d2400006d30},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fa, match64: 0x00000000, model64: 0x6d3000006d37},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fb, match64: 0x00000000, model64: 0x6d3700006d3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d3e00006d49, model64: 0x6d4900006d54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d5400006d5b, model64: 0x6d5400006d5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fc, match64: 0x00000000, model64: 0x6d5b00006d66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d6600006d6d, model64: 0x6d6600006d6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fd, match64: 0x00000000, model64: 0x6d6d00006d74},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fe, match64: 0x00000000, model64: 0x6d7400006d7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ff, match64: 0x00000000, model64: 0x6d7c00006d84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d8400006d89, model64: 0x6d8900006d8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6d8f00006d9b, model64: 0x6d9b00006da7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6da700006db3, model64: 0x6db300006dbf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6dbf00006dc6, model64: 0x6dbf00006dc6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6dc600006dcf, model64: 0x6dcf00006dd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6dd100006dd8, model64: 0x6dd800006ddf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0700, match64: 0x00000000, model64: 0x6ddf00006de9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6de900006df0, model64: 0x6df000006df8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0701, match64: 0x00000000, model64: 0x6df800006e00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e0000006e08, model64: 0x6e0800006e10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e1000006e1e, model64: 0x6e1e00006e2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e2c00006e34, model64: 0x6e3400006e3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e3c00006e45, model64: 0x6e3c00006e45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e4500006e4b, model64: 0x6e4500006e4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e4b00006e51, model64: 0x6e5100006e58},
		modelTuple{type64: 0x2700000027, matchRI: 0x0702, match64: 0x00000000, model64: 0x6d3000006d37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e5800006e5d, model64: 0x6e5d00006e63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e6300006e68, model64: 0x6e6800006e74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e7400006e81, model64: 0x6e8100006e8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0703, match64: 0x00000000, model64: 0x6e8e00006e96},
		modelTuple{type64: 0x2700000027, matchRI: 0x0704, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0705, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0706, match64: 0x00000000, model64: 0x58b5000058ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0707, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0708, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0709, match64: 0x00000000, model64: 0x6e9600006e9b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x6ea100006ea3},
		modelTuple{type64: 0x2700000027, matchRI: 0x070c, match64: 0x00000000, model64: 0x6ea700006eb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x070d, match64: 0x00000000, model64: 0x6eb200006eb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x070e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x070f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0711, match64: 0x00000000, model64: 0x6ecb00006ed0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0712, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0714, match64: 0x00000000, model64: 0x6ed400006ed8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0715, match64: 0x00000000, model64: 0x6ed800006edc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0716, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0717, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ee800006eee, model64: 0x6eee00006ef4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ef400006ef8, model64: 0x6ef400006ef8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0719, match64: 0x00000000, model64: 0x6ef800006f02},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x071d, match64: 0x00000000, model64: 0x6f1c00006f22},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x6f2c00006f34},
		modelTuple{type64: 0x2700000027, matchRI: 0x0721, match64: 0x00000000, model64: 0x6f3b00006f42},
		modelTuple{type64: 0x2700000027, matchRI: 0x0722, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0723, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0727, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6f5600006f62, model64: 0x6f5600006f62},
		modelTuple{type64: 0x2700000027, matchRI: 0x0728, match64: 0x00000000, model64: 0x6f6200006f6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0729, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x072b, match64: 0x00000000, model64: 0x6f7300006f7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x072c, match64: 0x00000000, model64: 0x6f7d00006f8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x072e, match64: 0x00000000, model64: 0x6f8f00006f92},
		modelTuple{type64: 0x2700000027, matchRI: 0x072f, match64: 0x00000000, model64: 0x6f9200006f95},
		modelTuple{type64: 0x2700000027, matchRI: 0x0730, match64: 0x00000000, model64: 0x6f9500006fa1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0731, match64: 0x00000000, model64: 0x6fa100006fa3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0733, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0734, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0737, match64: 0x00000000, model64: 0x6fb400006fbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0738, match64: 0x00000000, model64: 0x6fbf00006fc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0739, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x073b, match64: 0x00000000, model64: 0x6fc800006fcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x073c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x073d, match64: 0x00000000, model64: 0x6fcf00006fd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x073e, match64: 0x00000000, model64: 0x6fd500006fda},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0740, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0741, match64: 0x00000000, model64: 0x6fdc00006fe0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0742, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x6fe600006fee, model64: 0x6fee00006ff3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6ff900007001, model64: 0x700100007009},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x700c0000701d, model64: 0x701d0000702a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0746, match64: 0x00000000, model64: 0x702a00007034},
		modelTuple{type64: 0x2700000027, matchRI: 0x0747, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0748, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x074a, match64: 0x00000000, model64: 0x70370000703c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x074b, match64: 0x00000000, model64: 0x70370000703c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x70410000704c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x70560000705c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0750, match64: 0x00000000, model64: 0x70610000706b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0751, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x706f00007079, model64: 0x707900007083},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x708300007090, model64: 0x70900000709d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0758, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0759, match64: 0x00000000, model64: 0x70b5000070bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70cb000070dc, model64: 0x70dc000070e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x075b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x075c, match64: 0x00000000, model64: 0x70e8000070f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70f300007100, model64: 0x710000007108},
		modelTuple{type64: 0x2700000027, matchRI: 0x075d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0760, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x711c00007123, model64: 0x71230000712b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x71320000713d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0764, match64: 0x00000000, model64: 0x714e00007162},
		modelTuple{type64: 0x2700000027, matchRI: 0x0765, match64: 0x00000000, model64: 0x71620000717d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0766, match64: 0x00000000, model64: 0x717d00007191},
		modelTuple{type64: 0x2700000027, matchRI: 0x0767, match64: 0x00000000, model64: 0x7191000071a4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x71b0000071c1},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0769, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x076a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x076c, match64: 0x00000000, model64: 0x71d1000071d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x076d, match64: 0x00000000, model64: 0x71d6000071e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x076e, match64: 0x00000000, model64: 0x71e1000071e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x076f, match64: 0x00000000, model64: 0x71e7000071f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0770, match64: 0x00000000, model64: 0x71f1000071f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0771, match64: 0x00000000, model64: 0x71f900007201},
		modelTuple{type64: 0x2700000027, matchRI: 0x0772, match64: 0x00000000, model64: 0x72010000720a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0773, match64: 0x00000000, model64: 0x1aa200001aaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0774, match64: 0x00000000, model64: 0x720a00007211},
		modelTuple{type64: 0x2700000027, matchRI: 0x0775, match64: 0x00000000, model64: 0x721100007218},
		modelTuple{type64: 0x2700000027, matchRI: 0x0776, match64: 0x00000000, model64: 0x72180000721f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0777, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0778, match64: 0x00000000, model64: 0x721f00007222},
		modelTuple{type64: 0x2700000027, matchRI: 0x0779, match64: 0x00000000, model64: 0x722200007224},
		modelTuple{type64: 0x2700000027, matchRI: 0x077a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x077b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x077c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x077e, match64: 0x00000000, model64: 0x722b00007232},
		modelTuple{type64: 0x2700000027, matchRI: 0x077f, match64: 0x00000000, model64: 0x72320000723e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0780, match64: 0x00000000, model64: 0x722b00007232},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0783, match64: 0x00000000, model64: 0x724f00007258},
		modelTuple{type64: 0x2700000027, matchRI: 0x0784, match64: 0x00000000, model64: 0x72580000725e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0785, match64: 0x00000000, model64: 0x725e00007266},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x727300007279, model64: 0x727900007280},
		modelTuple{type64: 0x2700000027, matchRI: 0x0788, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x078a, match64: 0x00000000, model64: 0x728900007295},
		modelTuple{type64: 0x2700000027, matchRI: 0x078b, match64: 0x00000000, model64: 0x7295000072a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x078c, match64: 0x00000000, model64: 0x72a2000072ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72ad000072b6, model64: 0x72b6000072c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x078d, match64: 0x00000000, model64: 0x72c0000072ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x078e, match64: 0x00000000, model64: 0x72ca000072d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x078f, match64: 0x00000000, model64: 0x72d3000072df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0791, match64: 0x00000000, model64: 0x72ec000072fb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0792, match64: 0x00000000, model64: 0x72fb0000730b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x730b0000731b, model64: 0x731b00007323},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0793, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x73320000733b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x734200007350},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73560000735f, model64: 0x735f00007368},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73680000736c, model64: 0x73680000736c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x737800007381, model64: 0x738100007389},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73890000738e, model64: 0x73890000738e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x738e00007392, model64: 0x739200007395},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x739500007399, model64: 0x7399000073a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73a3000073a7, model64: 0x4b9f00004ba4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73a7000073ac, model64: 0x73ac000073b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73b5000073ba, model64: 0x73ba000073c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73c1000073c7, model64: 0x73c7000073cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73cd000073d1, model64: 0x73d1000073d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73d8000073dc, model64: 0x73dc000073e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73e4000073e9, model64: 0x73e9000073f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73f1000073f5, model64: 0x73f5000073f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73f9000073fd, model64: 0x73fd00007405},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x740500007409, model64: 0x74090000740d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x740d00007411, model64: 0x74110000741b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x741b0000741f, model64: 0x741f00007425},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x742500007429, model64: 0x74290000742e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x742e00007432, model64: 0x74320000743b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x743b0000743f, model64: 0x743f0000744a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x744a0000744e, model64: 0x744e00007455},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x745500007459, model64: 0x745900007460},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x746000007464, model64: 0x74640000746f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x746f00007473, model64: 0x74730000747e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x747e00007482, model64: 0x74820000748b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x748b0000748f, model64: 0x748f00007496},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x749b000074ae},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x74b5000074b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74bd000074c7, model64: 0x74c7000074d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74d1000074db, model64: 0x74d1000074db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74db000074e6, model64: 0x74e6000074f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x079e, match64: 0x00000000, model64: 0x74f1000074fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x079f, match64: 0x00000000, model64: 0x74fb00007506},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a0, match64: 0x00000000, model64: 0x75060000750f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x750f0000751b, model64: 0x751b00007527},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a1, match64: 0x00000000, model64: 0x752700007530},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75300000753a, model64: 0x753a00007544},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x754400007550, model64: 0x75500000755c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x755c00007565, model64: 0x756500007572},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a2, match64: 0x00000000, model64: 0x75720000757b},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a3, match64: 0x00000000, model64: 0x757b00007584},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75840000758e, model64: 0x75840000758e},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a4, match64: 0x00000000, model64: 0x758e00007598},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a5, match64: 0x00000000, model64: 0x74e6000074f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7598000075a3, model64: 0x7598000075a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75a3000075ad, model64: 0x75a3000075ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75ad000075ba, model64: 0x75ad000075ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a6, match64: 0x00000000, model64: 0x75ba000075be},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a7, match64: 0x00000000, model64: 0x75be000075c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a8, match64: 0x00000000, model64: 0x75c2000075c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75c6000075d0, model64: 0x75c6000075d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75d0000075da, model64: 0x75d0000075da},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x75da000075e4, model64: 0x75da000075e4},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x75e4000075ee, model64: 0x75ee000075f8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x07a9, match64: 0x00000000, model64: 0x75f800007608},
		modelTuple{type64: 0x20d00000213, matchRI: 0x07aa, match64: 0x00000000, model64: 0x760800007613},
		modelTuple{type64: 0x20d00000213, matchRI: 0x07ab, match64: 0x00000000, model64: 0x3fb600003fbc},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x761300007623, model64: 0x76230000762e},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x07ac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ae, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07af, match64: 0x00000000, model64: 0x76360000763a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x764f00007653, model64: 0x764f00007653},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b4, match64: 0x00000000, model64: 0x765d0000766a},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b5, match64: 0x00000000, model64: 0x766a00007672},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b6, match64: 0x00000000, model64: 0x76720000767a},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ba, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x07bb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x768d000076a6, model64: 0x76a6000076ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x07be, match64: 0x00000000, model64: 0x76c2000076c9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x76c9000076d4, model64: 0x76d4000076db},
		modelTuple{type64: 0x20d00000213, matchRI: 0x07bf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x07c0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c2, match64: 0x00000000, model64: 0x76e3000076ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c3, match64: 0x00000000, model64: 0x76ec000076f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c4, match64: 0x00000000, model64: 0x76f2000076fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c5, match64: 0x00000000, model64: 0x76fb00007703},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c6, match64: 0x00000000, model64: 0x77030000770a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x770a00007712, model64: 0x77120000771a},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x07c8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07cb, match64: 0x00000000, model64: 0x77210000772e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x77340000773b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x07ce, match64: 0x00000000, model64: 0x77420000774c},
		modelTuple{type64: 0x2700000027, matchRI: 0x07cf, match64: 0x00000000, model64: 0x774c00007753},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d0, match64: 0x00000000, model64: 0x77530000775a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x775a0000776a, model64: 0x775a0000776a},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d1, match64: 0x00000000, model64: 0x776a00007771},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d2, match64: 0x00000000, model64: 0x77710000777e},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d3, match64: 0x00000000, model64: 0x777e00007787},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x778d00007794, model64: 0x77940000779c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x779c000077a8, model64: 0x77a8000077ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x77b5000077ce, model64: 0x77ce000077df},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x07d8, match64: 0x00000000, model64: 0x77df000077ed},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x07d9, match64: 0x00000000, model64: 0x77ed000077f8},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x77f800007808, model64: 0x780800007810},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x781000007823, model64: 0x781000007823},
		modelTuple{type64: 0x2700000027, matchRI: 0x07da, match64: 0x00000000, model64: 0x782300007832},
		modelTuple{type64: 0x2700000027, matchRI: 0x07db, match64: 0x00000000, model64: 0x783200007843},
		modelTuple{type64: 0x2700000027, matchRI: 0x07dc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x78500000785e, model64: 0x785e0000786d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x786d0000787d, model64: 0x786d0000787d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x787d00007889, model64: 0x788900007895},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7895000078a4, model64: 0x78a4000078b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x78b3000078c3, model64: 0x78c3000078d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x78d5000078df, model64: 0x78df000078f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e0, match64: 0x00000000, model64: 0x78fa00007905},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e1, match64: 0x00000000, model64: 0x79050000790b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e4, match64: 0x00000000, model64: 0x791700007925},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79250000792e, model64: 0x79250000792e},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e5, match64: 0x00000000, model64: 0x792e0000793c},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e6, match64: 0x00000000, model64: 0x793c0000794a},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e7, match64: 0x00000000, model64: 0x794a00007955},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79550000795f, model64: 0x795f0000796a},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e8, match64: 0x00000000, model64: 0x796a00007975},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e9, match64: 0x00000000, model64: 0x79750000797e},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ea, match64: 0x00000000, model64: 0x797e0000798a},
		modelTuple{type64: 0x2700000027, matchRI: 0x07eb, match64: 0x00000000, model64: 0x798a00007992},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ec, match64: 0x00000000, model64: 0x79920000799c},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ed, match64: 0x00000000, model64: 0x799c000079a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ee, match64: 0x00000000, model64: 0x4a6c00004a75},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x07ef, match64: 0x00000000, model64: 0x79a5000079ab},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x07f0, match64: 0x00000000, model64: 0x79ab000079b1},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x07f1, match64: 0x00000000, model64: 0x79b1000079b7},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x07f2, match64: 0x00000000, model64: 0x79b7000079c1},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x07f3, match64: 0x00000000, model64: 0x105e00001062},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x07f4, match64: 0x00000000, model64: 0x79c1000079c6},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x07f5, match64: 0x00000000, model64: 0x79c6000079cb},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x07f6, match64: 0x00000000, model64: 0x79cb000079ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f7, match64: 0x00000000, model64: 0x79ce000079d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f8, match64: 0x00000000, model64: 0x79d4000079da},
		modelTuple{type64: 0x2700000027, matchRI: 0x07f9, match64: 0x00000000, model64: 0x79da000079df},
		modelTuple{type64: 0x2700000027, matchRI: 0x07fa, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x07fb, match64: 0x00000000, model64: 0x79df000079e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79e7000079ed, model64: 0x79e7000079ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x07fd, match64: 0x00000000, model64: 0x79f3000079fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79fc00007a04, model64: 0x7a0400007a0c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0800, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0801, match64: 0x00000000, model64: 0x7a1400007a18},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0804, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0805, match64: 0x00000000, model64: 0x7a1e00007a23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a2c00007a32, model64: 0x7a3200007a39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a3900007a40, model64: 0x7a4000007a47},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a4700007a4f, model64: 0x7a4f00007a58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a5800007a61, model64: 0x7a6100007a6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a6a00007a76, model64: 0x7a7600007a82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0807, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a8200007a8a, model64: 0x7a8a00007a93},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7aa600007aae},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7ab300007ac1},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x080b, match64: 0x00000000, model64: 0x7aca00007ad3},
		modelTuple{type64: 0x2700000027, matchRI: 0x080c, match64: 0x00000000, model64: 0x7ad900007ae3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x080d, match64: 0x00000000, model64: 0x7ae300007aec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7aef00007afb, model64: 0x7afb00007b0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b0a00007b15, model64: 0x7b0a00007b15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b1500007b22, model64: 0x7b2200007b27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b2700007b33, model64: 0x7b3300007b39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b3900007b45, model64: 0x7b4500007b48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b4800007b54, model64: 0x70a9000070ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b5400007b60, model64: 0x7b6000007b66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b6600007b72, model64: 0x7b7200007b77},
		modelTuple{type64: 0x20d00000213, matchRI: 0x080f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b7a00007b81, model64: 0x7b7a00007b81},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b8100007b8b, model64: 0x7b8100007b8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b8b00007b95, model64: 0x7b8b00007b95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b9500007b9f, model64: 0x7b9500007b9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b9f00007ba9, model64: 0x7b9f00007ba9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0812, match64: 0x00000000, model64: 0x7bac00007bb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0813, match64: 0x00000000, model64: 0x7bb900007bc1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7bc100007bcb, model64: 0x7bcb00007bd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0814, match64: 0x00000000, model64: 0x7bd700007be0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7be000007beb, model64: 0x7beb00007bf6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0817, match64: 0x00000000, model64: 0x7c0000007c07},
		modelTuple{type64: 0x2700000027, matchRI: 0x0818, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x081a, match64: 0x00000000, model64: 0x7c0f00007c13},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7c2f00007c38},
		modelTuple{type64: 0x2700000027, matchRI: 0x081e, match64: 0x00000000, model64: 0x7c3f00007c41},
		modelTuple{type64: 0x2700000027, matchRI: 0x081f, match64: 0x00000000, model64: 0x7c4100007c47},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7c4d00007c54},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0824, match64: 0x00000000, model64: 0x7c6900007c73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c7300007c84, model64: 0x7c7300007c84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c8400007c89, model64: 0x7c8900007c8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7c8f00007c97, model64: 0x18c3000018c4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0825, match64: 0x00000000, model64: 0x7c9700007c9d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7ca300007ca8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3fc200003fca},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7cc700007cce, model64: 0x7cce00007cd0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7cd000007cde, model64: 0x7cd000007cde},
		modelTuple{type64: 0x2700000027, matchRI: 0x082b, match64: 0x00000000, model64: 0x7cde00007ce7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ce700007cf0, model64: 0x7cf000007cf4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7cf400007d03, model64: 0x7d0300007d14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7d1400007d1e, model64: 0x7d1400007d1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x082c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7d2200007d31, model64: 0x7d3100007d3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x082e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7d3a00007d44, model64: 0x7d4400007d4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7d4e00007d57, model64: 0x7d5700007d60},
		modelTuple{type64: 0x2700000027, matchRI: 0x082f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7d6000007d6a, model64: 0x7d6a00007d6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7d6f00007d78, model64: 0x7d7800007d85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7d8500007d8a, model64: 0x7d8a00007d93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7d9300007d9a, model64: 0x7d9a00007da4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7da400007db0, model64: 0x7db000007dbc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7dbc00007dc3, model64: 0x7dc300007dcb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7dcb00007dd3, model64: 0x7dd300007ddb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ddb00007de0, model64: 0x7de000007df0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7df400007df9, model64: 0x7df400007df9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0831, match64: 0x00000000, model64: 0x7df900007e00},
		modelTuple{type64: 0x2700000027, matchRI: 0x0832, match64: 0x00000000, model64: 0x7e0000007e03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e0300007e07, model64: 0x7e0300007e07},
		modelTuple{type64: 0x2700000027, matchRI: 0x0833, match64: 0x00000000, model64: 0x7e0700007e0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0834, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0835, match64: 0x00000000, model64: 0x7e0c00007e0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e0e00007e15, model64: 0x7e1500007e1c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e1c00007e22, model64: 0x7e2200007e28},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0836, match64: 0x00000000, model64: 0x7e2800007e33},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0837, match64: 0x00000000, model64: 0x7e3300007e3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0838, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x083a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x083b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x083e, match64: 0x00000000, model64: 0x7e6300007e6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x083f, match64: 0x00000000, model64: 0x7e6e00007e79},
		modelTuple{type64: 0x2700000027, matchRI: 0x0840, match64: 0x00000000, model64: 0x7e7900007e86},
		modelTuple{type64: 0x2700000027, matchRI: 0x0841, match64: 0x00000000, model64: 0x7e8600007e91},
		modelTuple{type64: 0x2700000027, matchRI: 0x0842, match64: 0x00000000, model64: 0x7e9100007ea1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0843, match64: 0x00000000, model64: 0x7ea100007eae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0844, match64: 0x00000000, model64: 0x7eae00007ebe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0845, match64: 0x00000000, model64: 0x7ebe00007ec8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0846, match64: 0x00000000, model64: 0x7ec800007ed6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0847, match64: 0x00000000, model64: 0x7ed600007ee7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0848, match64: 0x00000000, model64: 0x7ee700007ef6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0849, match64: 0x00000000, model64: 0x7ef600007f01},
		modelTuple{type64: 0x2700000027, matchRI: 0x084a, match64: 0x00000000, model64: 0x7f0100007f0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x084b, match64: 0x00000000, model64: 0x7f0f00007f1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x084c, match64: 0x00000000, model64: 0x7f1b00007f27},
		modelTuple{type64: 0x2700000027, matchRI: 0x084d, match64: 0x00000000, model64: 0x7f2700007f36},
		modelTuple{type64: 0x2700000027, matchRI: 0x084e, match64: 0x00000000, model64: 0x7f3600007f49},
		modelTuple{type64: 0x2700000027, matchRI: 0x084f, match64: 0x00000000, model64: 0x7f4900007f54},
		modelTuple{type64: 0x2700000027, matchRI: 0x0850, match64: 0x00000000, model64: 0x7f5400007f63},
		modelTuple{type64: 0x2700000027, matchRI: 0x0851, match64: 0x00000000, model64: 0x7f6300007f6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0852, match64: 0x00000000, model64: 0x7f6b00007f78},
		modelTuple{type64: 0x2700000027, matchRI: 0x0853, match64: 0x00000000, model64: 0x7f7800007f82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0854, match64: 0x00000000, model64: 0x7f8200007f92},
		modelTuple{type64: 0x2700000027, matchRI: 0x0855, match64: 0x00000000, model64: 0x7f9200007fa1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0856, match64: 0x00000000, model64: 0x7fa100007fac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0857, match64: 0x00000000, model64: 0x7fac00007fb6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7fb600007fc0, model64: 0x7fc000007fca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0858, match64: 0x00000000, model64: 0x7fca00007fd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0859, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x7fd800007fdf, model64: 0x7fdf00007fe0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7fe000007fe6, model64: 0x7fe600007fec},
		modelTuple{type64: 0x20d00000213, matchRI: 0x085c, match64: 0x00000000, model64: 0x7fef00007ff7},
		modelTuple{type64: 0x2700000027, matchRI: 0x085d, match64: 0x00000000, model64: 0x7ff700007ffe},
		modelTuple{type64: 0x2700000027, matchRI: 0x085e, match64: 0x00000000, model64: 0x7ffe00008006},
		modelTuple{type64: 0x2700000027, matchRI: 0x085f, match64: 0x00000000, model64: 0x80060000800e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0860, match64: 0x00000000, model64: 0x800e0000801d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0861, match64: 0x00000000, model64: 0x801d00008026},
		modelTuple{type64: 0x2700000027, matchRI: 0x0862, match64: 0x00000000, model64: 0x80260000802e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0863, match64: 0x00000000, model64: 0x802e00008036},
		modelTuple{type64: 0x2700000027, matchRI: 0x0864, match64: 0x00000000, model64: 0x80360000803e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0865, match64: 0x00000000, model64: 0x803e00008046},
		modelTuple{type64: 0x2700000027, matchRI: 0x0866, match64: 0x00000000, model64: 0x80460000804e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0867, match64: 0x00000000, model64: 0x804e00008057},
		modelTuple{type64: 0x2700000027, matchRI: 0x0868, match64: 0x00000000, model64: 0x805700008060},
		modelTuple{type64: 0x2700000027, matchRI: 0x0869, match64: 0x00000000, model64: 0x80600000806f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x806f00008074, model64: 0x80740000807c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x807c00008081, model64: 0x80810000808a},
		modelTuple{type64: 0x2700000027, matchRI: 0x086a, match64: 0x00000000, model64: 0x808a00008092},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x809200008097, model64: 0x80970000809f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x809f000080a4, model64: 0x80a4000080ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80ac000080b1, model64: 0x80b1000080ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80ba000080bf, model64: 0x80bf000080c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x086b, match64: 0x00000000, model64: 0x80c8000080d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80d0000080d5, model64: 0x80d5000080de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80de000080e3, model64: 0x80e3000080ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80ec000080f1, model64: 0x80f1000080fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80fa000080ff, model64: 0x80ff00008107},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81070000810c, model64: 0x810c00008114},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x811400008119, model64: 0x811900008121},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x812100008126, model64: 0x81260000812e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x812e00008133, model64: 0x81330000813b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x813b00008140, model64: 0x814000008148},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81480000814d, model64: 0x814d00008155},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81550000815a, model64: 0x815a00008168},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x816800008174, model64: 0x816800008174},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x817400008179, model64: 0x817900008182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x818200008187, model64: 0x818700008190},
		modelTuple{type64: 0x2700000027, matchRI: 0x086c, match64: 0x00000000, model64: 0x819000008199},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81990000819e, model64: 0x819e000081a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81a6000081ab, model64: 0x81ab000081b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81b7000081bc, model64: 0x81bc000081c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81c5000081ca, model64: 0x81ca000081d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81d3000081d8, model64: 0x81d8000081e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81e0000081e5, model64: 0x81e5000081f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81f1000081f6, model64: 0x81f6000081ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81ff00008204, model64: 0x82040000820f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x820f00008214, model64: 0x82140000821a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x821a0000821f, model64: 0x821f0000822d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x822d00008232, model64: 0x82320000823a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x823a0000823f, model64: 0x823f00008247},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82470000824c, model64: 0x824c00008255},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82550000825a, model64: 0x825a00008263},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x826300008268, model64: 0x826800008270},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x827000008275, model64: 0x82750000827e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x827e00008283, model64: 0x82830000828c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x828c00008291, model64: 0x82910000829a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x829a0000829f, model64: 0x829f000082a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82a8000082ad, model64: 0x82ad000082b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82b6000082bb, model64: 0x82bb000082c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82c4000082c9, model64: 0x82c9000082d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x82d2000082d7, model64: 0x82d7000082e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x086d, match64: 0x00000000, model64: 0x82e0000082e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x086e, match64: 0x00000000, model64: 0x82e7000082eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x086f, match64: 0x00000000, model64: 0x82eb000082f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0870, match64: 0x00000000, model64: 0x82f0000082f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0871, match64: 0x00000000, model64: 0x82f5000082fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0872, match64: 0x00000000, model64: 0x82fd00008305},
		modelTuple{type64: 0x2700000027, matchRI: 0x0873, match64: 0x00000000, model64: 0x83050000830a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0874, match64: 0x00000000, model64: 0x830a0000830f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0875, match64: 0x00000000, model64: 0x830f00008314},
		modelTuple{type64: 0x2700000027, matchRI: 0x0876, match64: 0x00000000, model64: 0x83140000831e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0877, match64: 0x00000000, model64: 0x831e00008328},
		modelTuple{type64: 0x2700000027, matchRI: 0x0878, match64: 0x00000000, model64: 0x832800008332},
		modelTuple{type64: 0x2700000027, matchRI: 0x0879, match64: 0x00000000, model64: 0x83320000833c},
		modelTuple{type64: 0x2700000027, matchRI: 0x087a, match64: 0x00000000, model64: 0x833c00008346},
		modelTuple{type64: 0x2700000027, matchRI: 0x087b, match64: 0x00000000, model64: 0x834600008350},
		modelTuple{type64: 0x2700000027, matchRI: 0x087c, match64: 0x00000000, model64: 0x83500000835b},
		modelTuple{type64: 0x2700000027, matchRI: 0x087d, match64: 0x00000000, model64: 0x835b00008361},
		modelTuple{type64: 0x2700000027, matchRI: 0x087e, match64: 0x00000000, model64: 0x83610000836d},
		modelTuple{type64: 0x2700000027, matchRI: 0x087f, match64: 0x00000000, model64: 0x836d00008375},
		modelTuple{type64: 0x2700000027, matchRI: 0x0880, match64: 0x00000000, model64: 0x83750000837e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0881, match64: 0x00000000, model64: 0x837e00008385},
		modelTuple{type64: 0x2700000027, matchRI: 0x0882, match64: 0x00000000, model64: 0x4a7d00004a82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0883, match64: 0x00000000, model64: 0x83850000838e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0884, match64: 0x00000000, model64: 0x838e00008394},
		modelTuple{type64: 0x2700000027, matchRI: 0x0885, match64: 0x00000000, model64: 0x4faf00004fb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0886, match64: 0x00000000, model64: 0x83940000839e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0887, match64: 0x00000000, model64: 0x839e000083a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0888, match64: 0x00000000, model64: 0x83a8000083b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0889, match64: 0x00000000, model64: 0x83b2000083b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x088a, match64: 0x00000000, model64: 0x48b00000491},
		modelTuple{type64: 0x2700000027, matchRI: 0x088b, match64: 0x00000000, model64: 0x83b6000083bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x088c, match64: 0x00000000, model64: 0x83bd000083c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x088d, match64: 0x00000000, model64: 0x83c6000083cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x088e, match64: 0x00000000, model64: 0x83cb000083d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x088f, match64: 0x00000000, model64: 0x83d7000083e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0890, match64: 0x00000000, model64: 0x83e1000083e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0891, match64: 0x00000000, model64: 0x4bc200004bc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0892, match64: 0x00000000, model64: 0x83e9000083f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0893, match64: 0x00000000, model64: 0x83f0000083f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0894, match64: 0x00000000, model64: 0x83f900008401},
		modelTuple{type64: 0x2700000027, matchRI: 0x0895, match64: 0x00000000, model64: 0x840100008406},
		modelTuple{type64: 0x2700000027, matchRI: 0x0896, match64: 0x00000000, model64: 0x840600008410},
		modelTuple{type64: 0x2700000027, matchRI: 0x0897, match64: 0x00000000, model64: 0x84100000841a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0898, match64: 0x00000000, model64: 0x841a00008425},
		modelTuple{type64: 0x2700000027, matchRI: 0x0899, match64: 0x00000000, model64: 0x842500008430},
		modelTuple{type64: 0x2700000027, matchRI: 0x089a, match64: 0x00000000, model64: 0x84300000843c},
		modelTuple{type64: 0x2700000027, matchRI: 0x089b, match64: 0x00000000, model64: 0x843c00008448},
		modelTuple{type64: 0x2700000027, matchRI: 0x089c, match64: 0x00000000, model64: 0x84480000844c},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x089d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x089e, match64: 0x00000000, model64: 0x844c00008456},
		modelTuple{type64: 0x2700000027, matchRI: 0x089f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x08a3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a7, match64: 0x00000000, model64: 0x846000008462},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08aa, match64: 0x00000000, model64: 0x846a00008475},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ac, match64: 0x00000000, model64: 0x847c00008486},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08af, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b0, match64: 0x00000000, model64: 0x8497000084a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x84a1000084ab, model64: 0x84ab000084b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b1, match64: 0x00000000, model64: 0x84b5000084be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x84be000084c7, model64: 0x84c7000084d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x84d0000084d9, model64: 0x84d0000084d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b3, match64: 0x00000000, model64: 0x84df000084ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b5, match64: 0x00000000, model64: 0x84f4000084ff},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x850b00008512, model64: 0x851200008520},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b8, match64: 0x00000000, model64: 0x85200000852a},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b9, match64: 0x00000000, model64: 0x852a00008532},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ba, match64: 0x00000000, model64: 0x85320000853e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x853e00008545, model64: 0x85450000854c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x854c00008553, model64: 0x855300008558},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bb, match64: 0x00000000, model64: 0x85580000855d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x855d00008564, model64: 0x85640000856e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x856e00008575, model64: 0x85750000857b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x857b00008581, model64: 0x858100008585},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bc, match64: 0x00000000, model64: 0x858500008587},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bd, match64: 0x00000000, model64: 0x85870000858f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x858f00008596, model64: 0x85960000859e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08be, match64: 0x00000000, model64: 0x859e000085a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x85a6000085ad, model64: 0x85ad000085ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x85ba000085c1, model64: 0x85c1000085cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x85cf000085d6, model64: 0x85d6000085e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x85e6000085ed, model64: 0x85ed000085f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x85f8000085ff, model64: 0x85ff00008607},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x860700008612, model64: 0x86120000861d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x861d00008625, model64: 0x86250000862d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c1, match64: 0x00000000, model64: 0x863a00008649},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c2, match64: 0x00000000, model64: 0x864900008658},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c3, match64: 0x00000000, model64: 0x865800008665},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c4, match64: 0x00000000, model64: 0x866500008677},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c5, match64: 0x00000000, model64: 0x867700008686},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c6, match64: 0x00000000, model64: 0x868600008695},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c7, match64: 0x00000000, model64: 0x8695000086a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c8, match64: 0x00000000, model64: 0x86a5000086b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c9, match64: 0x00000000, model64: 0x86b3000086c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ca, match64: 0x00000000, model64: 0x86c2000086d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cb, match64: 0x00000000, model64: 0x86d1000086df},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cc, match64: 0x00000000, model64: 0x86df000086ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cd, match64: 0x00000000, model64: 0x86ee000086fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ce, match64: 0x00000000, model64: 0x86fe0000870f},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cf, match64: 0x00000000, model64: 0x870f00008720},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d0, match64: 0x00000000, model64: 0x872000008733},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d1, match64: 0x00000000, model64: 0x873300008742},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d2, match64: 0x00000000, model64: 0x874200008750},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d3, match64: 0x00000000, model64: 0x87500000875e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d4, match64: 0x00000000, model64: 0x875e0000876d},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d5, match64: 0x00000000, model64: 0x876d0000877f},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d6, match64: 0x00000000, model64: 0x877f0000878e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d7, match64: 0x00000000, model64: 0x878e0000879d},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d8, match64: 0x00000000, model64: 0x879d000087a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d9, match64: 0x00000000, model64: 0x87a9000087b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x08da, match64: 0x00000000, model64: 0x87b8000087c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x08db, match64: 0x00000000, model64: 0x87c9000087da},
		modelTuple{type64: 0x2700000027, matchRI: 0x08dc, match64: 0x00000000, model64: 0x87da000087f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x08dd, match64: 0x00000000, model64: 0x87f0000087ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x08de, match64: 0x00000000, model64: 0x87ff0000880e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08df, match64: 0x00000000, model64: 0x880e00008817},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e0, match64: 0x00000000, model64: 0x881700008825},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e1, match64: 0x00000000, model64: 0x882500008838},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e2, match64: 0x00000000, model64: 0x88380000884b},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e3, match64: 0x00000000, model64: 0x884b0000885a},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e4, match64: 0x00000000, model64: 0x885a0000887c},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e5, match64: 0x00000000, model64: 0x887c00008896},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e6, match64: 0x00000000, model64: 0x8896000088a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e7, match64: 0x00000000, model64: 0x88a4000088b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e8, match64: 0x00000000, model64: 0x88b3000088b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ea, match64: 0x00000000, model64: 0x88b8000088c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x08eb, match64: 0x00000000, model64: 0x88c2000088cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ec, match64: 0x00000000, model64: 0x88cd000088d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ed, match64: 0x00000000, model64: 0x88d8000088e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ee, match64: 0x00000000, model64: 0x88e1000088f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ef, match64: 0x00000000, model64: 0x88f3000088fd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x08f0, match64: 0x00000000, model64: 0x88fd0000890a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x890a00008914, model64: 0x891400008927},
		modelTuple{type64: 0x20d00000213, matchRI: 0x08f1, match64: 0x00000000, model64: 0x892700008930},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f4, match64: 0x00000000, model64: 0x893c00008944},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f5, match64: 0x00000000, model64: 0x894400008948},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f6, match64: 0x00000000, model64: 0x894800008954},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f7, match64: 0x00000000, model64: 0x89540000895c},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x89790000897f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89850000898d, model64: 0x898d00008996},
		modelTuple{type64: 0x2700000027, matchRI: 0x08fc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89960000899f, model64: 0x491100004913},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x899f000089a9, model64: 0x89a9000089b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89b3000089b8, model64: 0x89b8000089bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x08fd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ff, match64: 0x00000000, model64: 0x89c3000089cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0900, match64: 0x00000000, model64: 0x89cc000089d2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x89d8000089dd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0904, match64: 0x00000000, model64: 0x89e8000089f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89f900008a0b, model64: 0x8a0b00008a1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0905, match64: 0x00000000, model64: 0x8a1d00008a2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0906, match64: 0x00000000, model64: 0x8a2f00008a3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0907, match64: 0x00000000, model64: 0x8a3b00008a4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8a4f00008a60, model64: 0x8a4f00008a60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8a6000008a75, model64: 0x8a6000008a75},
		modelTuple{type64: 0x2700000027, matchRI: 0x0908, match64: 0x00000000, model64: 0x8a7500008a82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0909, match64: 0x00000000, model64: 0x8a8200008a94},
		modelTuple{type64: 0x2700000027, matchRI: 0x090a, match64: 0x00000000, model64: 0x8a9400008aa6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8aa600008aab, model64: 0x8aa600008aab},
		modelTuple{type64: 0x20d00000213, matchRI: 0x090b, match64: 0x00000000, model64: 0x8aab00008ab1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8ab900008abd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8ac300008acc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8acf00008ad6, model64: 0x8ad600008ad9},
		modelTuple{type64: 0x2700000027, matchRI: 0x090f, match64: 0x00000000, model64: 0x8ad900008ae2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ae200008ae6, model64: 0x8ae200008ae6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0910, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0911, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0913, match64: 0x00000000, model64: 0x8aee00008af8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0914, match64: 0x00000000, model64: 0x8af800008b03},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0915, match64: 0x00000000, model64: 0x58b5000058ba},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8b0300008b09, model64: 0x8b0900008b15},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8b1500008b1d, model64: 0x8b1d00008b26},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0916, match64: 0x00000000, model64: 0x8b2600008b31},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8b3100008b42, model64: 0x8b4200008b53},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0917, match64: 0x00000000, model64: 0x8b5300008b66},
		modelTuple{type64: 0x2700000027, matchRI: 0x0918, match64: 0x00000000, model64: 0x8b6600008b7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0919, match64: 0x00000000, model64: 0x8b7a00008b8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x091a, match64: 0x00000000, model64: 0x8b8f00008ba1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ba100008bb1, model64: 0x8bb100008bc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x091b, match64: 0x00000000, model64: 0x8bc000008bcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x091c, match64: 0x00000000, model64: 0x8bcf00008bdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x091d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x8bdc00008be8, model64: 0x8be800008bf4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x091e, match64: 0x00000000, model64: 0x8bf400008bfc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x091f, match64: 0x00000000, model64: 0xcf900000cff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0920, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0921, match64: 0x00000000, model64: 0xcf900000cff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0922, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0923, match64: 0x00000000, model64: 0xcf900000cff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0924, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0925, match64: 0x00000000, model64: 0x8bfc00008c04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c0b00008c12, model64: 0x8c1200008c15},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x8c1500008c1d, model64: 0x8c1500008c1d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c3e00008c47, model64: 0x8c4700008c4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c4d00008c54, model64: 0x8c5400008c59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c5900008c62, model64: 0x8c6200008c68},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x092c, match64: 0x00000000, model64: 0x8c7800008c85},
		modelTuple{type64: 0x2700000027, matchRI: 0x092d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x092e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8c8c00008c93, model64: 0x8c9300008c9c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8cd300008cdc, model64: 0x8cd300008cdc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8cdc00008ce0, model64: 0x8ce000008ce5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ce500008ce9, model64: 0x8ce900008cee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8cee00008cf2, model64: 0x8cf200008cfc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8cfc00008d00, model64: 0x8d0000008d05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d0500008d09, model64: 0x8d0900008d13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d1300008d17, model64: 0x8d1700008d20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d2000008d24, model64: 0x8d2400008d29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d2900008d2d, model64: 0x8d2d00008d36},
		modelTuple{type64: 0x2700000027, matchRI: 0x0934, match64: 0x00000000, model64: 0x8d3600008d3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0935, match64: 0x00000000, model64: 0x8d3c00008d40},
		modelTuple{type64: 0x2700000027, matchRI: 0x0936, match64: 0x00000000, model64: 0x8d4000008d45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d4500008d4b, model64: 0x8d4b00008d52},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d5200008d56, model64: 0x8d5600008d5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d5d00008d65, model64: 0x8d5d00008d65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d6500008d6e, model64: 0x8d6500008d6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0937, match64: 0x00000000, model64: 0x8d6e00008d7a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d7a00008d8b, model64: 0x8d7a00008d8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d8b00008d9a, model64: 0x8d8b00008d9a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8d9a00008dac, model64: 0x8dac00008dbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0938, match64: 0x00000000, model64: 0x4a6c00004a75},
		modelTuple{type64: 0x2700000027, matchRI: 0x0939, match64: 0x00000000, model64: 0x8dbb00008dc2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8dc200008dd3, model64: 0x8dd300008dd5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x093a, match64: 0x00000000, model64: 0x68870000688f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x534b0000534d, model64: 0x534b0000534d},
		modelTuple{type64: 0x2700000027, matchRI: 0x093d, match64: 0x00000000, model64: 0x8de200008de6},
		modelTuple{type64: 0x2700000027, matchRI: 0x093e, match64: 0x00000000, model64: 0x8de600008deb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0942, match64: 0x00000000, model64: 0x8dfa00008e04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8e0400008e09, model64: 0x8e0400008e09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8e0900008e15, model64: 0x8e1500008e1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0943, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8e1c00008e27, model64: 0x8e2700008e32},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8e3200008e3d, model64: 0x8e3d00008e44},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8e4400008e4e, model64: 0x8e4e00008e59},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8e5900008e62, model64: 0x8e6200008e6c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8e6c00008e79, model64: 0x8e7900008e82},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8e8200008e8c, model64: 0x8e8c00008e92},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8e9200008e97, model64: 0x8e9700008e9e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0944, match64: 0x00000000, model64: 0x8e9e00008eaa},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8eaa00008eb0, model64: 0x8eb000008eb7},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8eb700008ebf, model64: 0x8ebf00008ec6},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8ec600008ed0, model64: 0x8ed000008eda},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0945, match64: 0x00000000, model64: 0x8eda00008ee3},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8ee300008eea, model64: 0x8eea00008efb},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8efb00008f02, model64: 0x8f0200008f0c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8f0c00008f12, model64: 0x8f1200008f19},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0946, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0947, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x094a, match64: 0x00000000, model64: 0x8f2300008f26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f2e00008f35, model64: 0x8f3500008f43},
		modelTuple{type64: 0x2700000027, matchRI: 0x094c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x094d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x094e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f4300008f4c, model64: 0x8f4c00008f5c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0950, match64: 0x00000000, model64: 0x8f6300008f6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0951, match64: 0x00000000, model64: 0x8f6f00008f77},
		modelTuple{type64: 0x2700000027, matchRI: 0x0952, match64: 0x00000000, model64: 0x8f7700008f7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0953, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f7b00008f81, model64: 0x8f8100008f87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f8700008f8d, model64: 0x8f8d00008f8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f8f00008f9b, model64: 0x8f9b00008f9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f9e00008fa4, model64: 0x8fa400008fab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0954, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0955, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0957, match64: 0x00000000, model64: 0x8faf00008fb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0958, match64: 0x00000000, model64: 0x6f9200006f95},
		modelTuple{type64: 0x2700000027, matchRI: 0x0959, match64: 0x00000000, model64: 0x8fb200008fb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8fb800008fbf, model64: 0x8fbf00008fc1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x095a, match64: 0x00000000, model64: 0x3fb600003fbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x095c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x095d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x095e, match64: 0x00000000, model64: 0x8fc700008fd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x095f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x8fd800008fe0, model64: 0x8fe000008feb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0961, match64: 0x00000000, model64: 0x8feb00008ff0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ff000008ff7, model64: 0x8ff700008ffa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ffa00009001, model64: 0x900100009004},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90040000900b, model64: 0x900b00009012},
		modelTuple{type64: 0x2700000027, matchRI: 0x0962, match64: 0x00000000, model64: 0x901200009019},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x901900009022, model64: 0x902200009028},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x902800009031, model64: 0x903100009033},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x903300009039, model64: 0x90390000903b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x903b00009042, model64: 0x904200009048},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x904800009050, model64: 0x905000009053},
		modelTuple{type64: 0x2700000027, matchRI: 0x0963, match64: 0x00000000, model64: 0x905300009057},
		modelTuple{type64: 0x2700000027, matchRI: 0x0964, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0965, match64: 0x00000000, model64: 0x90570000905f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x905f00009066, model64: 0x905f00009066},
		modelTuple{type64: 0x2700000027, matchRI: 0x0966, match64: 0x00000000, model64: 0x90660000906e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0967, match64: 0x00000000, model64: 0x906e00009071},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x907100009078, model64: 0x907100009078},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x907800009084, model64: 0x908400009090},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x909000009096, model64: 0x909000009096},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90960000909c, model64: 0x90960000909c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0968, match64: 0x00000000, model64: 0x42830000428a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0969, match64: 0x00000000, model64: 0x909c000090a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90a5000090ac, model64: 0x90ac000090b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x096a, match64: 0x00000000, model64: 0x90b3000090ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x096b, match64: 0x00000000, model64: 0x90ba000090c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x096c, match64: 0x00000000, model64: 0x90c1000090c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x096d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x096e, match64: 0x00000000, model64: 0x90c7000090cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x096f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0970, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0971, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x0972, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0974, match64: 0x00000000, model64: 0x90d5000090d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0975, match64: 0x00000000, model64: 0x90d7000090de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0976, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x90e6000090ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90f500009101, model64: 0x90f500009101},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91010000910d, model64: 0x910d00009119},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x911900009123, model64: 0x91230000912d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x912d00009134, model64: 0x91340000913b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0979, match64: 0x00000000, model64: 0x913b0000913f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x915200009154},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x915e00009167, model64: 0x916700009170},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x917000009177, model64: 0x91770000917f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x917f00009186, model64: 0x90b3000090ba},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x91860000918f, model64: 0x918f0000919a},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x91a4000091af, model64: 0x91a4000091af},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x91af000091b4, model64: 0x91af000091b4},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x097c, match64: 0x00000000, model64: 0x91b4000091bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91bb000091c3, model64: 0x91c3000091cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91cb000091d4, model64: 0x91d4000091dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x097e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x097f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0981, match64: 0x00000000, model64: 0x91e5000091e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0982, match64: 0x00000000, model64: 0x5db000005db2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0983, match64: 0x00000000, model64: 0x91e8000091eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0984, match64: 0x00000000, model64: 0x91eb000091ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0985, match64: 0x00000000, model64: 0x91ee000091f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0986, match64: 0x00000000, model64: 0x91f0000091f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0987, match64: 0x00000000, model64: 0x91f2000091f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0988, match64: 0x00000000, model64: 0x91f4000091fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0989, match64: 0x00000000, model64: 0x91fb000091fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x098a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x098b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x920300009208, model64: 0x920300009208},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x920800009214, model64: 0x920800009214},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x921400009226, model64: 0x92260000922d},
		modelTuple{type64: 0x2700000027, matchRI: 0x098d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x098e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x098f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x922d0000923a, model64: 0x923a00009242},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x92420000924d, model64: 0x92420000924d},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0990, match64: 0x00000000, model64: 0x924d00009255},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0991, match64: 0x00000000, model64: 0x92550000925f},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x925f0000926c, model64: 0x926c00009280},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x92550000925f, model64: 0x928000009291},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x929100009299, model64: 0x929100009299},
		modelTuple{type64: 0x2700000027, matchRI: 0x0992, match64: 0x00000000, model64: 0x92990000929e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x929e000092a6, model64: 0x929e000092a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92a6000092ae, model64: 0x92ae000092b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92b5000092bf, model64: 0x92b5000092bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0993, match64: 0x00000000, model64: 0x92bf000092c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92c9000092d4, model64: 0x92c9000092d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92d4000092de, model64: 0x92d4000092de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92de000092e5, model64: 0x92e5000092ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92ee000092fd, model64: 0x92fd00009305},
		modelTuple{type64: 0x2700000027, matchRI: 0x0994, match64: 0x00000000, model64: 0x930500009312},
		modelTuple{type64: 0x2700000027, matchRI: 0x0995, match64: 0x00000000, model64: 0x93120000931b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x931b00009320, model64: 0x932000009327},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x932700009331, model64: 0x92bf000092c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0996, match64: 0x00000000, model64: 0x93310000933d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0997, match64: 0x00000000, model64: 0x933d00009345},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x93450000934a, model64: 0x93450000934a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x934a00009351, model64: 0x934a00009351},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x93510000935d, model64: 0x93510000935d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x935d00009366, model64: 0x935d00009366},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x93660000936b, model64: 0x93660000936b},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x936b00009377, model64: 0x936b00009377},
		modelTuple{type64: 0x2700000027, matchRI: 0x0999, match64: 0x00000000, model64: 0x937f00009386},
		modelTuple{type64: 0x2700000027, matchRI: 0x099a, match64: 0x00000000, model64: 0x938600009388},
		modelTuple{type64: 0x2700000027, matchRI: 0x099b, match64: 0x00000000, model64: 0x93880000938b},
		modelTuple{type64: 0x2700000027, matchRI: 0x099c, match64: 0x00000000, model64: 0x938b00009393},
		modelTuple{type64: 0x2700000027, matchRI: 0x099d, match64: 0x00000000, model64: 0x939300009395},
		modelTuple{type64: 0x2700000027, matchRI: 0x099e, match64: 0x00000000, model64: 0x93950000939c},
		modelTuple{type64: 0x2700000027, matchRI: 0x099f, match64: 0x00000000, model64: 0x939c000093a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a0, match64: 0x00000000, model64: 0xa7900000a7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x77a8000077ae, model64: 0x77a8000077ae},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x93c6000093cd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x93db000093e1, model64: 0x93e1000093e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x93e9000093ef, model64: 0x93ef000093f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94030000940b, model64: 0x940b00009410},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ac, match64: 0x00000000, model64: 0x941800009424},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x942a00009432, model64: 0x94320000943a},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ae, match64: 0x00000000, model64: 0x943a0000943f},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x09b4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b6, match64: 0x00000000, model64: 0x945600009459},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x945900009461, model64: 0x946100009473},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94730000947d, model64: 0x947d0000948b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x948b00009493, model64: 0x9493000094a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b8, match64: 0x00000000, model64: 0x94a9000094b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b9, match64: 0x00000000, model64: 0x94b4000094be},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ba, match64: 0x00000000, model64: 0x94be000094c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x09bb, match64: 0x00000000, model64: 0x94c6000094ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x09bc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09bf, match64: 0x00000000, model64: 0x94da000094e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c1, match64: 0x00000000, model64: 0x94e5000094ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c2, match64: 0x00000000, model64: 0x94ed000094f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c3, match64: 0x00000000, model64: 0x94f3000094fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c4, match64: 0x00000000, model64: 0x3670000036a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95080000950f, model64: 0x950f00009516},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c9, match64: 0x00000000, model64: 0x951a00009520},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x952500009533, model64: 0x953300009541},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cb, match64: 0x00000000, model64: 0x95410000954c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cf, match64: 0x00000000, model64: 0x955d0000956c},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x956e00009582, model64: 0x958200009592},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x95920000959c, model64: 0x959c000095a3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x09d1, match64: 0x00000000, model64: 0x95a3000095ab},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x95ab000095b3, model64: 0x95ab000095b3},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x95b3000095c0, model64: 0x95c0000095cf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x09d2, match64: 0x00000000, model64: 0x95cf000095d8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x95d8000095e6, model64: 0x95e6000095f1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x09d3, match64: 0x00000000, model64: 0x95a3000095ab},
		modelTuple{type64: 0x20d00000213, matchRI: 0x09d4, match64: 0x00000000, model64: 0x95a3000095ab},
		modelTuple{type64: 0x20d00000213, matchRI: 0x09d5, match64: 0x00000000, model64: 0x95f1000095f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d7, match64: 0x00000000, model64: 0x95f900009600},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d8, match64: 0x00000000, model64: 0x960000009604},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x09d9, match64: 0x00000000, model64: 0x96040000960e},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x09da, match64: 0x00000000, model64: 0x687400006881},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x960e00009621, model64: 0x962100009631},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x963100009647, model64: 0x963100009647},
		modelTuple{type64: 0x2700000027, matchRI: 0x09dc, match64: 0x00000000, model64: 0x964a00009651},
		modelTuple{type64: 0x2700000027, matchRI: 0x09dd, match64: 0x00000000, model64: 0x965100009657},
		modelTuple{type64: 0x2700000027, matchRI: 0x09de, match64: 0x00000000, model64: 0x964a00009651},
		modelTuple{type64: 0x2700000027, matchRI: 0x09df, match64: 0x00000000, model64: 0x96570000965f},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e0, match64: 0x00000000, model64: 0x965f00009667},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e1, match64: 0x00000000, model64: 0x96670000966f},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e2, match64: 0x00000000, model64: 0x966f00009677},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e3, match64: 0x00000000, model64: 0x96770000967d},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e4, match64: 0x00000000, model64: 0x967d00009683},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e5, match64: 0x00000000, model64: 0x968300009689},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e6, match64: 0x00000000, model64: 0x96890000968c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e7, match64: 0x00000000, model64: 0x968c0000968f},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e8, match64: 0x00000000, model64: 0x968f00009694},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e9, match64: 0x00000000, model64: 0x96940000969c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ea, match64: 0x00000000, model64: 0x969c000096a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x09eb, match64: 0x00000000, model64: 0x96a6000096ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ec, match64: 0x00000000, model64: 0x96ac000096b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ed, match64: 0x00000000, model64: 0x96b3000096b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ee, match64: 0x00000000, model64: 0x96b4000096b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ef, match64: 0x00000000, model64: 0x96b9000096c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f0, match64: 0x00000000, model64: 0x96c4000096cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x96cf000096ea, model64: 0x96ea00009705},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f1, match64: 0x00000000, model64: 0x970500009710},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f2, match64: 0x00000000, model64: 0x971000009716},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f3, match64: 0x00000000, model64: 0x971600009725},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f4, match64: 0x00000000, model64: 0x972500009737},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f5, match64: 0x00000000, model64: 0x97370000973d},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f6, match64: 0x00000000, model64: 0x973d00009743},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f7, match64: 0x00000000, model64: 0x97430000974d},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f8, match64: 0x00000000, model64: 0x974d00009753},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f9, match64: 0x00000000, model64: 0x975300009759},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fa, match64: 0x00000000, model64: 0x975900009764},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fb, match64: 0x00000000, model64: 0x97640000976a},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fc, match64: 0x00000000, model64: 0x976a00009773},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fd, match64: 0x00000000, model64: 0x977300009779},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fe, match64: 0x00000000, model64: 0x97790000977f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x977f00009786, model64: 0x978600009796},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9796000097a0, model64: 0x97a0000097a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x97a9000097b1, model64: 0x97b1000097bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x97bc000097c6, model64: 0x97c6000097d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x97d8000097e0, model64: 0x74320000743b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x97e0000097e8, model64: 0x97e8000097eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x97eb000097f0, model64: 0x73f5000073f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ff, match64: 0x00000000, model64: 0x345b0000345d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a00, match64: 0x00000000, model64: 0x97f0000097f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a01, match64: 0x00000000, model64: 0x97f900009804},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a02, match64: 0x00000000, model64: 0x98040000980e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a03, match64: 0x00000000, model64: 0x980e00009818},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a04, match64: 0x00000000, model64: 0x981800009822},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a05, match64: 0x00000000, model64: 0x98220000982c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a06, match64: 0x00000000, model64: 0x982c00009837},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a07, match64: 0x00000000, model64: 0x983700009841},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a08, match64: 0x00000000, model64: 0x98410000984b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a09, match64: 0x00000000, model64: 0x984b00009855},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0a, match64: 0x00000000, model64: 0x98550000985f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0b, match64: 0x00000000, model64: 0x985f00009869},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0c, match64: 0x00000000, model64: 0x986900009873},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0d, match64: 0x00000000, model64: 0x98730000987d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0e, match64: 0x00000000, model64: 0x987d00009891},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0f, match64: 0x00000000, model64: 0x989100009899},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a10, match64: 0x00000000, model64: 0x98990000989d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a11, match64: 0x00000000, model64: 0x989d000098ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a12, match64: 0x00000000, model64: 0x98ae000098bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a13, match64: 0x00000000, model64: 0x98bb000098c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a14, match64: 0x00000000, model64: 0x98c1000098d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a15, match64: 0x00000000, model64: 0x98d1000098de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a16, match64: 0x00000000, model64: 0x98de000098f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x98f2000098fa, model64: 0x98fa000098fd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a17, match64: 0x00000000, model64: 0x98fd00009902},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a18, match64: 0x00000000, model64: 0x990200009907},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a19, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a1a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a1b, match64: 0x00000000, model64: 0x99070000990f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0a1c, match64: 0x00000000, model64: 0x990f00009916},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a1e, match64: 0x00000000, model64: 0x991600009921},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1f, match64: 0x00000000, model64: 0x991600009921},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a20, match64: 0x00000000, model64: 0x992100009931},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a21, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a22, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a23, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a24, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a25, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a26, match64: 0x00000000, model64: 0x58b5000058ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a27, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a28, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a29, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2a, match64: 0x00000000, model64: 0x345b0000345d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2c, match64: 0x00000000, model64: 0x99370000993b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99400000994b, model64: 0x994b0000995c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x995c00009963, model64: 0x996300009970},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99700000997a, model64: 0x997a0000997c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x997c00009983, model64: 0x997c00009983},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2f, match64: 0x00000000, model64: 0x99830000998f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x998f00009999, model64: 0x5c5a00005c5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9999000099a3, model64: 0x5c8b00005c8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99a3000099ad, model64: 0x99ad000099b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99b0000099ba, model64: 0x99ba000099be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99be000099c8, model64: 0x99c8000099cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99cb000099d5, model64: 0x99d5000099d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a30, match64: 0x00000000, model64: 0x99d8000099da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99da000099e9, model64: 0x99e9000099f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a31, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a32, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a33, match64: 0x00000000, model64: 0x8faf00008fb2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a34, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a35, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x99f400009a03, model64: 0x701d0000702a},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x9a0300009a0b, model64: 0x9a0b00009a15},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x9a1500009a2b, model64: 0x9a2b00009a3b},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x9a3b00009a4c, model64: 0x9a3b00009a4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a36, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a37, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a38, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x0a39, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3a, match64: 0x00000000, model64: 0x9a5200009a5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3c, match64: 0x00000000, model64: 0x9a6000009a6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3e, match64: 0x00000000, model64: 0x9a7200009a7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3f, match64: 0x00000000, model64: 0x9a7e00009a8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a40, match64: 0x00000000, model64: 0x9a8b00009a97},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a41, match64: 0x00000000, model64: 0x9a9700009aa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a42, match64: 0x00000000, model64: 0x72ca000072d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a43, match64: 0x00000000, model64: 0x835b00008361},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9aa600009ab4, model64: 0x9ab400009abb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a44, match64: 0x00000000, model64: 0x9abb00009ac0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a45, match64: 0x00000000, model64: 0x9ac000009ac7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a46, match64: 0x00000000, model64: 0x9ac700009acb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a47, match64: 0x00000000, model64: 0x9acb00009ad3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a48, match64: 0x00000000, model64: 0x9ad300009ad9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a49, match64: 0x00000000, model64: 0x9ad900009ae1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4a, match64: 0x00000000, model64: 0x9ae100009aed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9aed00009afc, model64: 0x9afc00009b04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b0400009b15, model64: 0x9b1500009b20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b2000009b2e, model64: 0x9b2e00009b35},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0a4c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a50, match64: 0x00000000, model64: 0x9b4600009b51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b5100009b58, model64: 0x9b5100009b58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b5800009b5e, model64: 0x9b5800009b5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b5e00009b66, model64: 0x9b5e00009b66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b6600009b6e, model64: 0x9b6600009b6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b6e00009b73, model64: 0x9b7300009b7c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9b8600009b8f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a54, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a55, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9bb000009bb6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9bc300009bc5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5c, match64: 0x00000000, model64: 0x9bcd00009bd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5d, match64: 0x00000000, model64: 0x49f1000049f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5e, match64: 0x00000000, model64: 0x9bd500009bdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x9bdd00009bec, model64: 0x9bec00009bfa},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0a60, match64: 0x00000000, model64: 0x9bfa00009c01},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0a61, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c0800009c10, model64: 0x9c1000009c14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c1400009c1d, model64: 0x9c1d00009c22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c2200009c2b, model64: 0x9c2b00009c2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c2c00009c34, model64: 0x345b0000345d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c3400009c3c, model64: 0x9c3c00009c42},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9c4a00009c51},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a64, match64: 0x00000000, model64: 0x9c5a00009c65},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a66, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a67, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9c6b00009c6f, model64: 0x9c6f00009c74},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a69, match64: 0x00000000, model64: 0x9c7900009c82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6a, match64: 0x00000000, model64: 0x9c8200009c89},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6f, match64: 0x00000000, model64: 0x9c9f00009cad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a70, match64: 0x00000000, model64: 0x9cad00009cc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a71, match64: 0x00000000, model64: 0x9cc000009cd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a72, match64: 0x00000000, model64: 0x9cd000009cde},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a73, match64: 0x00000000, model64: 0x9cde00009cec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a74, match64: 0x00000000, model64: 0x9cec00009cf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a75, match64: 0x00000000, model64: 0x9cf600009cfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a76, match64: 0x00000000, model64: 0x9cfb00009d02},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a77, match64: 0x00000000, model64: 0x9d0200009d0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a78, match64: 0x00000000, model64: 0x9d0d00009d14},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a79, match64: 0x00000000, model64: 0x9d1400009d1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7a, match64: 0x00000000, model64: 0x9d1c00009d20},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7b, match64: 0x00000000, model64: 0x9d2000009d23},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7c, match64: 0x00000000, model64: 0x9d2300009d2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7d, match64: 0x00000000, model64: 0x9d2d00009d37},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7e, match64: 0x00000000, model64: 0x9d3700009d3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7f, match64: 0x00000000, model64: 0x9d3d00009d46},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a80, match64: 0x00000000, model64: 0x9d4600009d4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a81, match64: 0x00000000, model64: 0x9d4b00009d56},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a82, match64: 0x00000000, model64: 0x9d5600009d5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a83, match64: 0x00000000, model64: 0x9d5d00009d6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a84, match64: 0x00000000, model64: 0x9d6b00009d75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9d7500009d7e, model64: 0x9d7500009d7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a85, match64: 0x00000000, model64: 0x9d7e00009d85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a86, match64: 0x00000000, model64: 0x9d8500009d8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a87, match64: 0x00000000, model64: 0x9d8f00009d99},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a88, match64: 0x00000000, model64: 0x9d9900009da7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a89, match64: 0x00000000, model64: 0x9da700009dae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8a, match64: 0x00000000, model64: 0x9dae00009dba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8b, match64: 0x00000000, model64: 0x9dba00009dbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8c, match64: 0x00000000, model64: 0x9dbf00009dc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8d, match64: 0x00000000, model64: 0x9dc600009dcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8e, match64: 0x00000000, model64: 0x9dcc00009dd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8f, match64: 0x00000000, model64: 0x9dd300009ddb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ddb00009de2, model64: 0x9ddb00009de2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a90, match64: 0x00000000, model64: 0x9de200009dec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a91, match64: 0x00000000, model64: 0x85580000855d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a92, match64: 0x00000000, model64: 0x9dec00009df9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a93, match64: 0x00000000, model64: 0x9df900009e01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9e0100009e0a, model64: 0x9e0a00009e13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9e1300009e1a, model64: 0x9e1300009e1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a95, match64: 0x00000000, model64: 0x9e2300009e28},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a96, match64: 0x00000000, model64: 0x83e9000083f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a97, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x9e2f00009e36, model64: 0x9e3600009e3c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a99, match64: 0x00000000, model64: 0x9e3c00009e3f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0a9a, match64: 0x00000000, model64: 0x9e3f00009e49},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x9e4900009e4e, model64: 0x9e4e00009e54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9e5400009e5c, model64: 0x154500001547},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9e5c00009e64, model64: 0x9e6400009e6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9e6d00009e75, model64: 0x9e7500009e77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9e7700009e7f, model64: 0x9e7f00009e82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9e8200009e89, model64: 0x155c0000155e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9e8900009e91, model64: 0x3ce000003d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9e9100009e9e, model64: 0x9e9e00009ead},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9b, match64: 0x00000000, model64: 0x9ead00009eb1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9eb100009ebf, model64: 0x9ebf00009ecd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9c, match64: 0x00000000, model64: 0x9ecd00009ed2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ed200009eda, model64: 0x9eda00009ee0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ee000009ee5, model64: 0x9ee500009ee7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ee700009eef, model64: 0x9eef00009ef2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ef200009ef8, model64: 0x9ef800009f0c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f0c00009f11, model64: 0x9f1100009f25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f2500009f29, model64: 0x9f2900009f3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9d, match64: 0x00000000, model64: 0x9f3e00009f41},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9e, match64: 0x00000000, model64: 0x9f4100009f44},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9f, match64: 0x00000000, model64: 0x9f4400009f47},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa0, match64: 0x00000000, model64: 0x9f4700009f52},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa1, match64: 0x00000000, model64: 0x9f5200009f61},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa2, match64: 0x00000000, model64: 0x9f6100009f6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa3, match64: 0x00000000, model64: 0x4f3400004f43},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa4, match64: 0x00000000, model64: 0x9f6c00009f77},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa5, match64: 0x00000000, model64: 0x9f7700009f7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa6, match64: 0x00000000, model64: 0x9f7e00009f82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa7, match64: 0x00000000, model64: 0x9f8200009f85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa8, match64: 0x00000000, model64: 0x9f8500009f88},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa9, match64: 0x00000000, model64: 0x9f8800009f90},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aaa, match64: 0x00000000, model64: 0x9f9000009f93},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aab, match64: 0x00000000, model64: 0x9f9300009f96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f9600009f9e, model64: 0x9f9e00009fa1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9fa100009fb1, model64: 0x9fb100009fb4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9fb400009fbc, model64: 0x9fbc00009fc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aac, match64: 0x00000000, model64: 0x9fc200009fc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aad, match64: 0x00000000, model64: 0x9fc500009fd6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9fd600009fde, model64: 0x9fde00009fea},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0aae, match64: 0x00000000, model64: 0x9fea00009fed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aaf, match64: 0x00000000, model64: 0x9fed00009ff5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab1, match64: 0x00000000, model64: 0x9ff500009ff7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab2, match64: 0x00000000, model64: 0x9ff700009ffb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab3, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab4, match64: 0x00000000, model64: 0x9ffb0000a00c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab5, match64: 0x00000000, model64: 0xa00c0000a01b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0ab7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xa01b0000a030, matchRI: 0x0ab8, match64: 0x00000000, model64: 0xa0300000a035},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab9, match64: 0x00000000, model64: 0xa0350000a03e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aba, match64: 0x00000000, model64: 0xa03e0000a047},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abb, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abc, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abe, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac2, match64: 0x00000000, model64: 0x46a2000046a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac3, match64: 0x00000000, model64: 0xa05c0000a060},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac4, match64: 0x00000000, model64: 0xa05c0000a060},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac7, match64: 0x00000000, model64: 0xa0680000a06f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac8, match64: 0x00000000, model64: 0xa06f0000a080},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac9, match64: 0x00000000, model64: 0xa0800000a085},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa08b0000a092, model64: 0xa08b0000a092},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0920000a096, model64: 0xa0960000a099},
		modelTuple{type64: 0x2700000027, matchRI: 0x0acb, match64: 0x00000000, model64: 0xa0990000a0a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0acc, match64: 0x00000000, model64: 0xa0a10000a0a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0acd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0acf, match64: 0x00000000, model64: 0xa0ae0000a0b8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xa0b80000a0bd, model64: 0xa0bd0000a0ca},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x0ad0, match64: 0x00000000, model64: 0xa0ca0000a0d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0ad4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0f00000a0f7, model64: 0x8f1e00008f23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0f70000a0fb, model64: 0xa0fb0000a102},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1020000a10a, model64: 0xa10a0000a111},
		modelTuple{type64: 0x2700000027, matchRI: 0x0adb, match64: 0x00000000, model64: 0xa1170000a125},
		modelTuple{type64: 0x2700000027, matchRI: 0x0adc, match64: 0x00000000, model64: 0xa1250000a12a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0add, match64: 0x00000000, model64: 0xa12a0000a137},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ade, match64: 0x00000000, model64: 0xa1370000a140},
		modelTuple{type64: 0x2700000027, matchRI: 0x0adf, match64: 0x00000000, model64: 0x62170000621f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae0, match64: 0x00000000, model64: 0xa1400000a14c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae1, match64: 0x00000000, model64: 0xa14c0000a154},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae2, match64: 0x00000000, model64: 0xa1540000a15d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae3, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae4, match64: 0x00000000, model64: 0xa15d0000a160},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae5, match64: 0x00000000, model64: 0xa1600000a163},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0xa1630000a16d, model64: 0xa1630000a16d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xa16d0000a177, model64: 0xa1770000a181},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1810000a18b, model64: 0xa1810000a18b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa18b0000a191, model64: 0xa18b0000a191},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae9, match64: 0x00000000, model64: 0xa1940000a1a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aea, match64: 0x00000000, model64: 0xa1a40000a1a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aec, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aed, match64: 0x00000000, model64: 0xa1af0000a1b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aef, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af1, match64: 0x00000000, model64: 0xa1be0000a1ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af2, match64: 0x00000000, model64: 0xa1ce0000a1dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1e30000a1ea, model64: 0xa1ea0000a1f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1f70000a1fe, model64: 0xa1fe0000a206},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2060000a20e, model64: 0xa20e0000a21a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa21a0000a222, model64: 0xa2220000a22a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa22a0000a231, model64: 0xa2310000a23c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa23c0000a244, model64: 0xa2440000a250},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2500000a258, model64: 0xa2580000a264},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2640000a26c, model64: 0xa26c0000a27d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa27d0000a285, model64: 0xa2850000a290},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2900000a298, model64: 0xa2980000a2a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af4, match64: 0x00000000, model64: 0xa2a50000a2a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af5, match64: 0x00000000, model64: 0xa2a70000a2b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af6, match64: 0x00000000, model64: 0xa2b00000a2b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af7, match64: 0x00000000, model64: 0xa2b90000a2c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af8, match64: 0x00000000, model64: 0xa2c40000a2cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af9, match64: 0x00000000, model64: 0xa2cf0000a2da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afa, match64: 0x00000000, model64: 0xa2da0000a2e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afb, match64: 0x00000000, model64: 0xa2e40000a2ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afc, match64: 0x00000000, model64: 0xa2ef0000a2fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afd, match64: 0x00000000, model64: 0xa2fa0000a306},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afe, match64: 0x00000000, model64: 0xa3060000a311},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aff, match64: 0x00000000, model64: 0xa3110000a31a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b00, match64: 0x00000000, model64: 0xa31a0000a323},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b01, match64: 0x00000000, model64: 0xa3230000a32c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b02, match64: 0x00000000, model64: 0xa32c0000a337},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b03, match64: 0x00000000, model64: 0xa3370000a340},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b04, match64: 0x00000000, model64: 0xa3400000a34a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b05, match64: 0x00000000, model64: 0xa34a0000a355},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b06, match64: 0x00000000, model64: 0xa3550000a360},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b07, match64: 0x00000000, model64: 0xa3600000a36b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b08, match64: 0x00000000, model64: 0xa36b0000a376},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b09, match64: 0x00000000, model64: 0xa3760000a37e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0a, match64: 0x00000000, model64: 0xa37e0000a38b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0b, match64: 0x00000000, model64: 0xa38b0000a394},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0c, match64: 0x00000000, model64: 0xa3940000a39d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0d, match64: 0x00000000, model64: 0xa39d0000a3a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3a50000a3ad, model64: 0xa3ad0000a3b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3b50000a3bd, model64: 0xa3bd0000a3c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3c50000a3cd, model64: 0xa3cd0000a3d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3d90000a3e1, model64: 0xa3e10000a3ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0e, match64: 0x00000000, model64: 0xa3ea0000a3ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0f, match64: 0x00000000, model64: 0xa3ed0000a3f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b10, match64: 0x00000000, model64: 0xa3f40000a3fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b11, match64: 0x00000000, model64: 0xa3fc0000a403},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b12, match64: 0x00000000, model64: 0xa4030000a40b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b13, match64: 0x00000000, model64: 0xa40b0000a417},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b14, match64: 0x00000000, model64: 0xa4170000a41e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b15, match64: 0x00000000, model64: 0xa41e0000a42a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b16, match64: 0x00000000, model64: 0xa42a0000a432},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b17, match64: 0x00000000, model64: 0xa4320000a43a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b18, match64: 0x00000000, model64: 0xa43a0000a446},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b19, match64: 0x00000000, model64: 0xa4460000a450},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1a, match64: 0x00000000, model64: 0xa4500000a45b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1b, match64: 0x00000000, model64: 0xa45b0000a46b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1c, match64: 0x00000000, model64: 0xa46b0000a474},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1d, match64: 0x00000000, model64: 0xa4740000a47c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1e, match64: 0x00000000, model64: 0xa47c0000a47f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1f, match64: 0x00000000, model64: 0xa47f0000a485},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b20, match64: 0x00000000, model64: 0xa4850000a490},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b21, match64: 0x00000000, model64: 0xa4900000a494},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b22, match64: 0x00000000, model64: 0xa4940000a49e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b23, match64: 0x00000000, model64: 0xa49e0000a4a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b24, match64: 0x00000000, model64: 0xa4a10000a4ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b25, match64: 0x00000000, model64: 0xa4ab0000a4ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b26, match64: 0x00000000, model64: 0xa4ae0000a4b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b27, match64: 0x00000000, model64: 0xa4b00000a4b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b28, match64: 0x00000000, model64: 0xa4b70000a4be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b29, match64: 0x00000000, model64: 0xa4be0000a4c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2a, match64: 0x00000000, model64: 0xa4c10000a4c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2b, match64: 0x00000000, model64: 0xa4c80000a4cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2c, match64: 0x00000000, model64: 0xa4cb0000a4cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2d, match64: 0x00000000, model64: 0xa4cf0000a4d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2e, match64: 0x00000000, model64: 0xa4d90000a4de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2f, match64: 0x00000000, model64: 0xa4de0000a4e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b30, match64: 0x00000000, model64: 0xa4e60000a4f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b31, match64: 0x00000000, model64: 0xa4f30000a4fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b32, match64: 0x00000000, model64: 0xa4fc0000a503},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b33, match64: 0x00000000, model64: 0xa5030000a50b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b34, match64: 0x00000000, model64: 0xa50b0000a518},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b35, match64: 0x00000000, model64: 0xa5180000a521},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b36, match64: 0x00000000, model64: 0xa5210000a52d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b37, match64: 0x00000000, model64: 0xa52d0000a536},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b38, match64: 0x00000000, model64: 0xa5360000a542},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b39, match64: 0x00000000, model64: 0xa5420000a553},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3a, match64: 0x00000000, model64: 0xa5530000a55c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3b, match64: 0x00000000, model64: 0xa55c0000a565},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3c, match64: 0x00000000, model64: 0xa5650000a572},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3d, match64: 0x00000000, model64: 0xa5720000a57a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3e, match64: 0x00000000, model64: 0xa57a0000a582},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3f, match64: 0x00000000, model64: 0xa5820000a58f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b40, match64: 0x00000000, model64: 0xa58f0000a597},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5970000a59e, model64: 0xa59e0000a5a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b41, match64: 0x00000000, model64: 0xa5a50000a5ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b42, match64: 0x00000000, model64: 0xa5ad0000a5b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b43, match64: 0x00000000, model64: 0xa5b50000a5c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b44, match64: 0x00000000, model64: 0xa5c10000a5cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b45, match64: 0x00000000, model64: 0xa5cd0000a5d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b46, match64: 0x00000000, model64: 0xa5d50000a5e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b47, match64: 0x00000000, model64: 0xa5e10000a5e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b48, match64: 0x00000000, model64: 0xa5e90000a5f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b49, match64: 0x00000000, model64: 0xa5f10000a602},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4a, match64: 0x00000000, model64: 0xa6020000a60a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4b, match64: 0x00000000, model64: 0xa60a0000a615},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4c, match64: 0x00000000, model64: 0xa6150000a620},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4d, match64: 0x00000000, model64: 0xa6200000a62d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4e, match64: 0x00000000, model64: 0xa62d0000a63c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa63c0000a644, model64: 0xa6440000a64c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa64c0000a654, model64: 0xa6540000a662},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6620000a66a, model64: 0xa66a0000a676},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4f, match64: 0x00000000, model64: 0xa6760000a67d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b50, match64: 0x00000000, model64: 0xa67d0000a689},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b51, match64: 0x00000000, model64: 0xa6890000a695},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b52, match64: 0x00000000, model64: 0xa6950000a69d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b53, match64: 0x00000000, model64: 0xa69d0000a6a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b54, match64: 0x00000000, model64: 0xa6a50000a6b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b55, match64: 0x00000000, model64: 0xa6b10000a6b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b56, match64: 0x00000000, model64: 0xa6b90000a6c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b57, match64: 0x00000000, model64: 0xa6c00000a6cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b58, match64: 0x00000000, model64: 0xa6cc0000a6d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b59, match64: 0x00000000, model64: 0xa6d40000a6e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5a, match64: 0x00000000, model64: 0xa6e00000a6e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5b, match64: 0x00000000, model64: 0xa6e80000a6f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5c, match64: 0x00000000, model64: 0xa6f00000a6f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5d, match64: 0x00000000, model64: 0xa6f80000a700},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5e, match64: 0x00000000, model64: 0xa7000000a707},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5f, match64: 0x00000000, model64: 0xa7070000a713},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b60, match64: 0x00000000, model64: 0xa7130000a71e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b61, match64: 0x00000000, model64: 0xa71e0000a72b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b62, match64: 0x00000000, model64: 0xa72b0000a733},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b63, match64: 0x00000000, model64: 0xa7330000a73f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b64, match64: 0x00000000, model64: 0xa73f0000a747},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b65, match64: 0x00000000, model64: 0xa7470000a74f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b66, match64: 0x00000000, model64: 0xa74f0000a757},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b67, match64: 0x00000000, model64: 0xa7570000a763},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b68, match64: 0x00000000, model64: 0xa7630000a76a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b69, match64: 0x00000000, model64: 0xa76a0000a772},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6a, match64: 0x00000000, model64: 0xa7720000a77a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6b, match64: 0x00000000, model64: 0xa77a0000a786},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6c, match64: 0x00000000, model64: 0xa7860000a78e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6d, match64: 0x00000000, model64: 0xa78e0000a796},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6e, match64: 0x00000000, model64: 0xa7960000a79e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6f, match64: 0x00000000, model64: 0xa79e0000a7aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b70, match64: 0x00000000, model64: 0xa7aa0000a7b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b71, match64: 0x00000000, model64: 0xa7b70000a7c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b72, match64: 0x00000000, model64: 0xa7c20000a7cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b73, match64: 0x00000000, model64: 0xa7cd0000a7da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7da0000a7e2, model64: 0xa7e20000a7ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7ef0000a7f7, model64: 0xa7f70000a808},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8080000a810, model64: 0xa8100000a822},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b74, match64: 0x00000000, model64: 0xa8220000a833},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8330000a83b, model64: 0xa83b0000a848},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8480000a850, model64: 0xa8500000a862},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8620000a869, model64: 0xa8690000a87b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa87b0000a882, model64: 0xa8820000a894},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8940000a89c, model64: 0xa89c0000a8a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b75, match64: 0x00000000, model64: 0xa8a90000a8ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8ba0000a8c2, model64: 0xa8c20000a8d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b76, match64: 0x00000000, model64: 0xa8d80000a8e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b77, match64: 0x00000000, model64: 0xa8e50000a8f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b78, match64: 0x00000000, model64: 0xa8f10000a8ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b79, match64: 0x00000000, model64: 0xa8ff0000a90c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7a, match64: 0x00000000, model64: 0xa90c0000a918},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7b, match64: 0x00000000, model64: 0xa9180000a924},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7c, match64: 0x00000000, model64: 0xa9240000a932},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7d, match64: 0x00000000, model64: 0xa9320000a93c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7e, match64: 0x00000000, model64: 0xa93c0000a948},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7f, match64: 0x00000000, model64: 0xa9480000a95a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa95a0000a962, model64: 0xa9620000a96f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa96f0000a977, model64: 0xa9770000a984},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b80, match64: 0x00000000, model64: 0xa9840000a991},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b81, match64: 0x00000000, model64: 0xa9910000a999},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b82, match64: 0x00000000, model64: 0xa9990000a9a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b83, match64: 0x00000000, model64: 0xa9a50000a9b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b84, match64: 0x00000000, model64: 0xa9b20000a9bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b85, match64: 0x00000000, model64: 0xa9bf0000a9cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b86, match64: 0x00000000, model64: 0xa9cf0000a9e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b87, match64: 0x00000000, model64: 0xa9e10000a9ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b88, match64: 0x00000000, model64: 0xa9ea0000a9f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9f70000a9ff, model64: 0xa9ff0000aa14},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b89, match64: 0x00000000, model64: 0xaa140000aa25},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8a, match64: 0x00000000, model64: 0xaa250000aa32},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8b, match64: 0x00000000, model64: 0xaa320000aa3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8c, match64: 0x00000000, model64: 0xaa3e0000aa4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8d, match64: 0x00000000, model64: 0xaa4a0000aa56},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8e, match64: 0x00000000, model64: 0xaa560000aa63},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8f, match64: 0x00000000, model64: 0xaa630000aa74},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b90, match64: 0x00000000, model64: 0xaa740000aa81},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b91, match64: 0x00000000, model64: 0xaa810000aa8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b92, match64: 0x00000000, model64: 0xaa8e0000aa97},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b93, match64: 0x00000000, model64: 0xaa970000aaa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b94, match64: 0x00000000, model64: 0xaaa00000aaa9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b95, match64: 0x00000000, model64: 0xaaa90000aab1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b96, match64: 0x00000000, model64: 0xaab10000aab9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b97, match64: 0x00000000, model64: 0xaab90000aac6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b98, match64: 0x00000000, model64: 0xaac60000aad3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b99, match64: 0x00000000, model64: 0xaad30000aae0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaae00000aae7, model64: 0xaad30000aae0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9a, match64: 0x00000000, model64: 0xaae70000aaf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9b, match64: 0x00000000, model64: 0xaaf40000ab05},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9c, match64: 0x00000000, model64: 0xab050000ab0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9d, match64: 0x00000000, model64: 0xab0d0000ab20},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9e, match64: 0x00000000, model64: 0xab200000ab28},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9f, match64: 0x00000000, model64: 0xab280000ab31},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba0, match64: 0x00000000, model64: 0xab310000ab3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba1, match64: 0x00000000, model64: 0xab3d0000ab4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba2, match64: 0x00000000, model64: 0xab4a0000ab52},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba3, match64: 0x00000000, model64: 0xab520000ab5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba4, match64: 0x00000000, model64: 0xab5a0000ab63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xab630000ab6a, model64: 0xab6a0000ab75},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba5, match64: 0x00000000, model64: 0xab750000ab7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba6, match64: 0x00000000, model64: 0xab7d0000ab86},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0ba7, match64: 0x00000000, model64: 0xab860000ab93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xab930000ab9b, model64: 0xab9b0000aba8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaba80000abb0, model64: 0xabb00000abb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xabb90000abc1, model64: 0xabc10000abcb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xabcb0000abd3, model64: 0xabd30000abe4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xabe40000abec, model64: 0xabec0000abf6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xabf60000abfe, model64: 0xabfe0000ac0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac0a0000ac12, model64: 0xac120000ac1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac1b0000ac22, model64: 0xac220000ac2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba8, match64: 0x00000000, model64: 0xac2b0000ac39},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba9, match64: 0x00000000, model64: 0xac390000ac44},
		modelTuple{type64: 0x2700000027, matchRI: 0x0baa, match64: 0x00000000, model64: 0xac440000ac4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bab, match64: 0x00000000, model64: 0xac4c0000ac54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac540000ac5c, model64: 0xac5c0000ac66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac660000ac6e, model64: 0xac6e0000ac77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac770000ac7e, model64: 0xac7e0000ac8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bac, match64: 0x00000000, model64: 0xac8b0000ac99},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bad, match64: 0x00000000, model64: 0xac990000aca1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bae, match64: 0x00000000, model64: 0xaca10000aca9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0baf, match64: 0x00000000, model64: 0xaca90000acb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb0, match64: 0x00000000, model64: 0xacb10000acbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb1, match64: 0x00000000, model64: 0xacbd0000acc6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xacc60000acce, model64: 0xacce0000acd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb2, match64: 0x00000000, model64: 0xacd70000ace0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb3, match64: 0x00000000, model64: 0xace00000ace9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xace90000acf0, model64: 0xacf00000acfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb4, match64: 0x00000000, model64: 0xacfc0000ad03},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb5, match64: 0x00000000, model64: 0xad030000ad0c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad0c0000ad14, model64: 0xad140000ad1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad1a0000ad21, model64: 0xad210000ad28},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb6, match64: 0x00000000, model64: 0xad280000ad2f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad2f0000ad37, model64: 0xad370000ad41},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb7, match64: 0x00000000, model64: 0xad410000ad48},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb8, match64: 0x00000000, model64: 0xad480000ad54},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb9, match64: 0x00000000, model64: 0xad540000ad5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bba, match64: 0x00000000, model64: 0xad5f0000ad66},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbb, match64: 0x00000000, model64: 0xad660000ad72},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbc, match64: 0x00000000, model64: 0xad720000ad7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbd, match64: 0x00000000, model64: 0xad7d0000ad87},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbe, match64: 0x00000000, model64: 0xad870000ad90},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbf, match64: 0x00000000, model64: 0xad900000ad97},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc0, match64: 0x00000000, model64: 0xad970000ada1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc1, match64: 0x00000000, model64: 0xada10000adba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc2, match64: 0x00000000, model64: 0xadba0000adc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc3, match64: 0x00000000, model64: 0xadc60000add1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc4, match64: 0x00000000, model64: 0xadd10000addf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc5, match64: 0x00000000, model64: 0xaddf0000adee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc6, match64: 0x00000000, model64: 0xadee0000adf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc7, match64: 0x00000000, model64: 0xadf90000ae05},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc8, match64: 0x00000000, model64: 0xae050000ae0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc9, match64: 0x00000000, model64: 0xae0f0000ae16},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bca, match64: 0x00000000, model64: 0xae160000ae1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcb, match64: 0x00000000, model64: 0xae1e0000ae29},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcc, match64: 0x00000000, model64: 0xae290000ae30},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae300000ae38, model64: 0xae380000ae40},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcd, match64: 0x00000000, model64: 0xae400000ae46},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bce, match64: 0x00000000, model64: 0xae460000ae4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcf, match64: 0x00000000, model64: 0xae4c0000ae57},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd0, match64: 0x00000000, model64: 0xae570000ae61},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd1, match64: 0x00000000, model64: 0xae610000ae68},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd2, match64: 0x00000000, model64: 0xae680000ae7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd3, match64: 0x00000000, model64: 0xae7e0000ae84},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd4, match64: 0x00000000, model64: 0xae840000ae8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd5, match64: 0x00000000, model64: 0x500500005009},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd6, match64: 0x00000000, model64: 0xae8b0000ae94},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd7, match64: 0x00000000, model64: 0xae940000ae9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd8, match64: 0x00000000, model64: 0xae9d0000aea3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd9, match64: 0x00000000, model64: 0xaea30000aeae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bda, match64: 0x00000000, model64: 0xaeae0000aeb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdb, match64: 0x00000000, model64: 0xaeb90000aecd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdc, match64: 0x00000000, model64: 0xaecd0000aed4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdd, match64: 0x00000000, model64: 0xaed40000aedb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bde, match64: 0x00000000, model64: 0xaedb0000aee1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdf, match64: 0x00000000, model64: 0xaee10000aee8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be0, match64: 0x00000000, model64: 0xaee80000aeef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be1, match64: 0x00000000, model64: 0xaeef0000aef5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be2, match64: 0x00000000, model64: 0xaef50000aefc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be3, match64: 0x00000000, model64: 0xaefc0000af02},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be4, match64: 0x00000000, model64: 0xaf020000af0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be5, match64: 0x00000000, model64: 0xaf0c0000af13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaf130000af1a, model64: 0xaf1a0000af21},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be6, match64: 0x00000000, model64: 0xaf210000af2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be7, match64: 0x00000000, model64: 0xaf2c0000af32},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be8, match64: 0x00000000, model64: 0xaf320000af3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be9, match64: 0x00000000, model64: 0xaf3b0000af44},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bea, match64: 0x00000000, model64: 0xaf440000af4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0beb, match64: 0x00000000, model64: 0xaf4d0000af5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bec, match64: 0x00000000, model64: 0xaf5a0000af66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaf660000af6d, model64: 0xaf6d0000af75},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bed, match64: 0x00000000, model64: 0xaf750000af80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaf800000af87, model64: 0xaf870000af8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bee, match64: 0x00000000, model64: 0xaf8e0000af95},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bef, match64: 0x00000000, model64: 0xaf950000af9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf0, match64: 0x00000000, model64: 0xaf9b0000afa2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf1, match64: 0x00000000, model64: 0xafa20000afab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xafab0000afb3, model64: 0xafb30000afbf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xafbf0000afc7, model64: 0xafc70000afd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xafd30000afdb, model64: 0xafdb0000afed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf2, match64: 0x00000000, model64: 0xafed0000affa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf3, match64: 0x00000000, model64: 0xaffa0000b007},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf4, match64: 0x00000000, model64: 0xb0070000b00d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf5, match64: 0x00000000, model64: 0xb00d0000b017},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf6, match64: 0x00000000, model64: 0xb0170000b020},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf7, match64: 0x00000000, model64: 0xb0200000b02b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf8, match64: 0x00000000, model64: 0xb02b0000b035},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf9, match64: 0x00000000, model64: 0xb0350000b03f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb03f0000b047, model64: 0xaf6d0000af75},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfa, match64: 0x00000000, model64: 0xb0470000b051},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfb, match64: 0x00000000, model64: 0xb0510000b05b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfc, match64: 0x00000000, model64: 0xb05b0000b066},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfd, match64: 0x00000000, model64: 0xb0660000b06e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb06e0000b075, model64: 0xb0750000b07d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfe, match64: 0x00000000, model64: 0xb07d0000b085},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bff, match64: 0x00000000, model64: 0xb0850000b08d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb08d0000b094, model64: 0xb0940000b09c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c00, match64: 0x00000000, model64: 0xb09c0000b0a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c01, match64: 0x00000000, model64: 0xb0a30000b0b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c02, match64: 0x00000000, model64: 0xb0b10000b0bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c03, match64: 0x00000000, model64: 0xb0bf0000b0cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c04, match64: 0x00000000, model64: 0xb0cd0000b0d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c05, match64: 0x00000000, model64: 0xb0d60000b0df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c06, match64: 0x00000000, model64: 0xb0df0000b0e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c07, match64: 0x00000000, model64: 0xb0e20000b0ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c08, match64: 0x00000000, model64: 0xb0ea0000b0f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c09, match64: 0x00000000, model64: 0xb0f20000b0fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0a, match64: 0x00000000, model64: 0xb0fc0000b0ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0b, match64: 0x00000000, model64: 0xb0ff0000b107},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0c, match64: 0x00000000, model64: 0xb1070000b10e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0d, match64: 0x00000000, model64: 0xb10e0000b111},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0e, match64: 0x00000000, model64: 0xb1110000b119},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0f, match64: 0x00000000, model64: 0xa08b0000a092},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c10, match64: 0x00000000, model64: 0x7e0000007e03},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c11, match64: 0x00000000, model64: 0xb1190000b121},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c12, match64: 0x00000000, model64: 0xb1210000b12b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c13, match64: 0x00000000, model64: 0xb12b0000b139},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c14, match64: 0x00000000, model64: 0xb1390000b140},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c15, match64: 0x00000000, model64: 0xb1400000b14c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c16, match64: 0x00000000, model64: 0xb14c0000b14e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c17, match64: 0x00000000, model64: 0x90960000909c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c18, match64: 0x00000000, model64: 0xb14e0000b158},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c19, match64: 0x00000000, model64: 0xb1580000b166},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1a, match64: 0x00000000, model64: 0xb1660000b174},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1b, match64: 0x00000000, model64: 0xb1740000b176},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1c, match64: 0x00000000, model64: 0xb1760000b17d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1d, match64: 0x00000000, model64: 0xb17d0000b18c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1e, match64: 0x00000000, model64: 0xb18c0000b198},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1f, match64: 0x00000000, model64: 0xb1980000b1a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c20, match64: 0x00000000, model64: 0xb1a50000b1ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c21, match64: 0x00000000, model64: 0xb1ac0000b1b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c22, match64: 0x00000000, model64: 0xb1b30000b1ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c23, match64: 0x00000000, model64: 0xb1ba0000b1bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c24, match64: 0x00000000, model64: 0x34e7000034ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c25, match64: 0x00000000, model64: 0xb1bf0000b1c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c26, match64: 0x00000000, model64: 0xb1c40000b1cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c27, match64: 0x00000000, model64: 0xb1cd0000b1d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c28, match64: 0x00000000, model64: 0xb1d60000b1da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c29, match64: 0x00000000, model64: 0xb1da0000b1e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2a, match64: 0x00000000, model64: 0xb1e30000b1ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2b, match64: 0x00000000, model64: 0xb1ec0000b1f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2c, match64: 0x00000000, model64: 0xb1f50000b1fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2d, match64: 0x00000000, model64: 0xb1fc0000b1ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2e, match64: 0x00000000, model64: 0xb1ff0000b20d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2f, match64: 0x00000000, model64: 0xb20d0000b21b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c30, match64: 0x00000000, model64: 0xb21b0000b22a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c31, match64: 0x00000000, model64: 0xb22a0000b237},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c32, match64: 0x00000000, model64: 0xb2370000b23b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c33, match64: 0x00000000, model64: 0xb23b0000b23d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c34, match64: 0x00000000, model64: 0xb23d0000b246},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c35, match64: 0x00000000, model64: 0xb2460000b24f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c36, match64: 0x00000000, model64: 0xb24f0000b258},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c37, match64: 0x00000000, model64: 0xb2580000b261},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c38, match64: 0x00000000, model64: 0xb2610000b270},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c39, match64: 0x00000000, model64: 0xb2700000b276},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3a, match64: 0x00000000, model64: 0xb2760000b283},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3b, match64: 0x00000000, model64: 0xb2830000b287},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3c, match64: 0x00000000, model64: 0xb2870000b28b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3d, match64: 0x00000000, model64: 0xb28b0000b298},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3e, match64: 0x00000000, model64: 0xb2980000b29c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3f, match64: 0x00000000, model64: 0xb29c0000b2a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c40, match64: 0x00000000, model64: 0xb2a50000b2ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c41, match64: 0x00000000, model64: 0xb2ae0000b2b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c42, match64: 0x00000000, model64: 0xb2b70000b2bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c43, match64: 0x00000000, model64: 0xb2bf0000b2ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c44, match64: 0x00000000, model64: 0xb2ce0000b2db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c45, match64: 0x00000000, model64: 0xb2db0000b2e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c46, match64: 0x00000000, model64: 0xb2ce0000b2db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c47, match64: 0x00000000, model64: 0xb2e20000b2e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c48, match64: 0x00000000, model64: 0xb2e50000b2e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c49, match64: 0x00000000, model64: 0xb2e80000b2eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4a, match64: 0x00000000, model64: 0xb2eb0000b2f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4b, match64: 0x00000000, model64: 0xb2f40000b2fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4c, match64: 0x00000000, model64: 0xb2fd0000b30c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4d, match64: 0x00000000, model64: 0xb30c0000b30f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4e, match64: 0x00000000, model64: 0xb30f0000b317},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4f, match64: 0x00000000, model64: 0xb3170000b31a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c50, match64: 0x00000000, model64: 0xb31a0000b325},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c51, match64: 0x00000000, model64: 0xb3250000b32c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c52, match64: 0x00000000, model64: 0xb32c0000b335},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0c53, match64: 0x00000000, model64: 0xb3350000b33d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c54, match64: 0x00000000, model64: 0xb33d0000b34d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c55, match64: 0x00000000, model64: 0xb34d0000b362},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c56, match64: 0x00000000, model64: 0xb3620000b376},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c57, match64: 0x00000000, model64: 0xb3760000b38f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c58, match64: 0x00000000, model64: 0xb38f0000b39c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c59, match64: 0x00000000, model64: 0xb39c0000b3ae},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c5a, match64: 0x00000000, model64: 0xb3ae0000b3be},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c5b, match64: 0x00000000, model64: 0xb3be0000b3cd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c5c, match64: 0x00000000, model64: 0xb3cd0000b3db},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c5d, match64: 0x00000000, model64: 0xb3db0000b3ee},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c5e, match64: 0x00000000, model64: 0xb3ee0000b400},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c5f, match64: 0x00000000, model64: 0xb4000000b40d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c60, match64: 0x00000000, model64: 0xb40d0000b419},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c61, match64: 0x00000000, model64: 0xb4190000b42a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c62, match64: 0x00000000, model64: 0xb42a0000b43a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb43a0000b442, model64: 0xb4420000b458},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb4580000b460, model64: 0xb4600000b471},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c63, match64: 0x00000000, model64: 0xb4710000b486},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c64, match64: 0x00000000, model64: 0xb4860000b49e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c65, match64: 0x00000000, model64: 0xb49e0000b4b2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c66, match64: 0x00000000, model64: 0xb4b20000b4bd},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb4bd0000b4c4, model64: 0xb4c40000b4df},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb4df0000b4e7, model64: 0xb4e70000b4fe},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb4fe0000b507, model64: 0xb5070000b51c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb51c0000b523, model64: 0xb5230000b53c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb53c0000b544, model64: 0xb5440000b55b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c67, match64: 0x00000000, model64: 0xb55b0000b570},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c68, match64: 0x00000000, model64: 0xb5700000b587},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb5870000b591, model64: 0xb5910000b5a5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb5a50000b5ae, model64: 0xb5ae0000b5bf},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb5bf0000b5ca, model64: 0xb5ca0000b5dd},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb5dd0000b5e6, model64: 0xb5e60000b5f2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb5f20000b5fb, model64: 0xb5fb0000b611},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb6110000b61b, model64: 0xb61b0000b62c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c69, match64: 0x00000000, model64: 0xb62c0000b63d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c6a, match64: 0x00000000, model64: 0xb63d0000b653},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c6b, match64: 0x00000000, model64: 0xb6530000b669},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c6c, match64: 0x00000000, model64: 0xb6690000b675},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c6d, match64: 0x00000000, model64: 0xb6750000b681},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c6e, match64: 0x00000000, model64: 0xb6810000b688},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c6f, match64: 0x00000000, model64: 0xb6880000b696},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c70, match64: 0x00000000, model64: 0xb6960000b6a9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c71, match64: 0x00000000, model64: 0xb6a90000b6b2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c72, match64: 0x00000000, model64: 0xb6b20000b6bf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c73, match64: 0x00000000, model64: 0xb6bf0000b6cf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c74, match64: 0x00000000, model64: 0xb6cf0000b6e0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c75, match64: 0x00000000, model64: 0xb6e00000b6f5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c76, match64: 0x00000000, model64: 0xb6f50000b706},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c77, match64: 0x00000000, model64: 0xb7060000b71c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c78, match64: 0x00000000, model64: 0xb71c0000b739},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c79, match64: 0x00000000, model64: 0xb7390000b74d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c7a, match64: 0x00000000, model64: 0xb74d0000b763},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c7b, match64: 0x00000000, model64: 0xb7630000b774},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c7c, match64: 0x00000000, model64: 0xb7740000b784},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c7d, match64: 0x00000000, model64: 0xb7840000b798},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c7e, match64: 0x00000000, model64: 0xb7980000b7a9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c7f, match64: 0x00000000, model64: 0xb7a90000b7b4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c80, match64: 0x00000000, model64: 0xb7b40000b7c4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c81, match64: 0x00000000, model64: 0xb7c40000b7d3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c82, match64: 0x00000000, model64: 0xb7d30000b7e2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c83, match64: 0x00000000, model64: 0xb7e20000b7f8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c84, match64: 0x00000000, model64: 0xb7f80000b805},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c85, match64: 0x00000000, model64: 0xb8050000b815},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c86, match64: 0x00000000, model64: 0xb8150000b828},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb8280000b830, model64: 0xb8300000b83b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c87, match64: 0x00000000, model64: 0xb83b0000b846},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb8460000b850, model64: 0xb8500000b866},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb8660000b871, model64: 0xb8710000b882},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c88, match64: 0x00000000, model64: 0xb8820000b890},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c89, match64: 0x00000000, model64: 0xb8900000b89f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c8a, match64: 0x00000000, model64: 0xb89f0000b8ac},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c8b, match64: 0x00000000, model64: 0xb8ac0000b8ba},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c8c, match64: 0x00000000, model64: 0xb8ba0000b8c7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c8d, match64: 0x00000000, model64: 0xb8c70000b8d4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c8e, match64: 0x00000000, model64: 0xb8d40000b8e3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c8f, match64: 0x00000000, model64: 0xb8e30000b8f6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c90, match64: 0x00000000, model64: 0xb8f60000b909},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c91, match64: 0x00000000, model64: 0xb9090000b91e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c92, match64: 0x00000000, model64: 0xb91e0000b92c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c93, match64: 0x00000000, model64: 0xb92c0000b939},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c94, match64: 0x00000000, model64: 0xb9390000b946},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb9460000b94f, model64: 0xb94f0000b965},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c95, match64: 0x00000000, model64: 0xb9650000b97d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb97d0000b986, model64: 0xb9860000b99d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb99d0000b9a5, model64: 0xb9a50000b9bb},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xb9bb0000b9c3, model64: 0xb9c30000b9d8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c96, match64: 0x00000000, model64: 0xb9d80000b9e9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c97, match64: 0x00000000, model64: 0xb9e90000ba02},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c98, match64: 0x00000000, model64: 0xba020000ba12},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c99, match64: 0x00000000, model64: 0xba120000ba27},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xba270000ba30, model64: 0xba300000ba3e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xba3e0000ba46, model64: 0xba460000ba4f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xba4f0000ba56, model64: 0xba560000ba64},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xba640000ba6c, model64: 0xb6b20000b6bf},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xba6c0000ba75, model64: 0xba750000ba7d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xba7d0000ba84, model64: 0xba840000ba99},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xba990000baa1, model64: 0xbaa10000bab1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c9a, match64: 0x00000000, model64: 0xbab10000babe},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0c9b, match64: 0x00000000, model64: 0xbabe0000bac5},
		modelTuple{type64: 0x245800002460, matchRI: 0x0c9c, match64: 0x00000000, model64: 0xbac50000bad2},
		modelTuple{type64: 0x245800002460, matchRI: 0x0c9d, match64: 0x00000000, model64: 0xbad20000bae5},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0xbae50000baed, model64: 0xbaed0000bafe},
		modelTuple{type64: 0x51800000525, matchRI: 0x0c9e, match64: 0x00000000, model64: 0xbafe0000bb10},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0c9f, match64: 0x00000000, model64: 0xbb100000bb19},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xbb190000bb21, model64: 0xbb210000bb2d},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xbb2d0000bb35, model64: 0xbb350000bb41},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0ca0, match64: 0x00000000, model64: 0xbb410000bb53},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xbb530000bb5c, model64: 0xbb5c0000bb72},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xbb720000bb7b, model64: 0xbb7b0000bb91},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xbb910000bb99, model64: 0xbb990000bbab},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xbbab0000bbb4, model64: 0xbbb40000bbca},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xbbca0000bbd2, model64: 0xbbd20000bbe4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ca1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca2, match64: 0x00000000, model64: 0xbbe40000bbeb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0ca3, match64: 0x00000000, model64: 0xbbeb0000bbf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc010000bc0a, model64: 0xbc0a0000bc15},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cab, match64: 0x00000000, model64: 0xbc230000bc29},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cac, match64: 0x00000000, model64: 0x73f5000073f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cad, match64: 0x00000000, model64: 0xbc290000bc2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cae, match64: 0x00000000, model64: 0xbc2f0000bc33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc330000bc38, model64: 0xbc330000bc38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc380000bc3d, model64: 0xbc380000bc3d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc3d0000bc42, model64: 0xbc420000bc47},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc470000bc4b, model64: 0xbc4b0000bc4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc4f0000bc53, model64: 0xbc4f0000bc53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc530000bc57, model64: 0xbc530000bc57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x736c00007370, model64: 0x736c00007370},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc570000bc5d, model64: 0xbc570000bc5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc5d0000bc67, model64: 0xbc670000bc71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc710000bc7b, model64: 0xbc710000bc7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc7b0000bc84, model64: 0xbc7b0000bc84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc840000bc92, model64: 0xbc920000bca2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbca20000bcac, model64: 0xbcac0000bcb7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbcb70000bcbd, model64: 0xbcb70000bcbd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbcbd0000bcc2, model64: 0xbcbd0000bcc2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x744e00007455, model64: 0x744e00007455},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbcc80000bccf, model64: 0xbccf0000bcd6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cb0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xbcea0000bcf1},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x0cb2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb4, match64: 0x00000000, model64: 0xbcfe0000bd0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb5, match64: 0x00000000, model64: 0xbd0f0000bd17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd170000bd1f, model64: 0xbd170000bd1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd1f0000bd28, model64: 0xbd280000bd31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd310000bd3a, model64: 0xbd3a0000bd43},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd430000bd4f, model64: 0xbd430000bd4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb6, match64: 0x00000000, model64: 0xbd4f0000bd57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd570000bd5e, model64: 0xbd5e0000bd6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb7, match64: 0x00000000, model64: 0xbd6a0000bd75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd750000bd7c, model64: 0xbd7c0000bd88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd880000bd8f, model64: 0xbd8f0000bd9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd9b0000bda2, model64: 0xbda20000bdae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbdae0000bdb4, model64: 0xbdae0000bdb4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbdb40000bdbe, model64: 0xbdb40000bdbe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbdbe0000bdca, model64: 0xbdca0000bdd6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbdd60000bddc, model64: 0xbddc0000bde3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbde30000bded, model64: 0xbded0000bdf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb8, match64: 0x00000000, model64: 0x3fbf00003fc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb9, match64: 0x00000000, model64: 0xbdf70000bdfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cba, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0cbb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cbc, match64: 0x00000000, model64: 0xbdfa0000be03},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbe030000be0c, model64: 0xbe0c0000be15},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbe150000be1e, model64: 0xbe1e0000be28},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbe280000be31, model64: 0xbe310000be3a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbe3a0000be3f, model64: 0xbe3f0000be4a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbe4a0000be54, model64: 0xbe540000be5e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbe5e0000be67, model64: 0xbe670000be70},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbe700000be79, model64: 0xbe540000be5e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbe790000be82, model64: 0xbe820000be8b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbe8b0000be94, model64: 0xbe940000be9d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbe9d0000bea6, model64: 0xbea60000beb0},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbeb00000beb9, model64: 0xbeb90000bec2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbec20000bec7, model64: 0xbec70000bed2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xbed20000bedb, model64: 0xbedb0000beea},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cbd, match64: 0x00000000, model64: 0xbeea0000bef4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cbe, match64: 0x00000000, model64: 0xbef40000bf03},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cbf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cc0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbf070000bf0f, model64: 0xbf070000bf0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbf0f0000bf13, model64: 0xbf130000bf1d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xbf220000bf36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbf400000bf46, model64: 0xbf460000bf4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc4, match64: 0x00000000, model64: 0xbf4d0000bf54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbf540000bf5e, model64: 0xbf5e0000bf6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbf6b0000bf74, model64: 0xbf740000bf7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cc9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cca, match64: 0x00000000, model64: 0xbf880000bf8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ccc, match64: 0x00000000, model64: 0xbf970000bf9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ccd, match64: 0x00000000, model64: 0xbf9f0000bfa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cce, match64: 0x00000000, model64: 0xbfa60000bfa8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ccf, match64: 0x00000000, model64: 0xbfa80000bfaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd0, match64: 0x00000000, model64: 0xbfaa0000bfb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd1, match64: 0x00000000, model64: 0xbfb10000bfba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd2, match64: 0x00000000, model64: 0xbfba0000bfc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd3, match64: 0x00000000, model64: 0xbfc20000bfcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd4, match64: 0x00000000, model64: 0xbfcd0000bfda},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd5, match64: 0x00000000, model64: 0xbfda0000bfe3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd6, match64: 0x00000000, model64: 0xbfe30000bfef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd7, match64: 0x00000000, model64: 0xbfef0000bff9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd8, match64: 0x00000000, model64: 0xbff90000c002},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd9, match64: 0x00000000, model64: 0xc0020000c00b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cda, match64: 0x00000000, model64: 0xc00b0000c015},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdb, match64: 0x00000000, model64: 0xc0150000c021},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdc, match64: 0x00000000, model64: 0xc0210000c022},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cdd, match64: 0x00000000, model64: 0x3fb600003fbc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cde, match64: 0x00000000, model64: 0xc0220000c028},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0ce2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0350000c03d, model64: 0xc0350000c03d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc03d0000c045, model64: 0xc0450000c04d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc04d0000c055, model64: 0xc0550000c060},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ce4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce6, match64: 0x00000000, model64: 0x83000000837},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce7, match64: 0x00000000, model64: 0xc0630000c06a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce8, match64: 0x00000000, model64: 0xc06a0000c070},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cea, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0730000c07a, model64: 0xc07a0000c084},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0860000c092, model64: 0xc0920000c09b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cec, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cee, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xc0a60000c0ae, model64: 0xc0ae0000c0c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0c50000c0cd, model64: 0xc0cd0000c0da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0da0000c0e2, model64: 0xc0e20000c0f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0f00000c0f8, model64: 0xc0f80000c10b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf0, match64: 0x00000000, model64: 0xc10b0000c119},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1190000c121, model64: 0xc1210000c134},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1340000c142, model64: 0xc1420000c152},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1520000c15a, model64: 0xc15a0000c16f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc16f0000c177, model64: 0xc1770000c187},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1870000c18f, model64: 0xc18f0000c1a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1a20000c1aa, model64: 0xc1aa0000c1bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1bb0000c1c3, model64: 0xc1c30000c1d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1d40000c1dc, model64: 0xc1dc0000c1ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1ea0000c1f2, model64: 0xc1f20000c200},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2000000c208, model64: 0xc2080000c21c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc21c0000c22b, model64: 0xc22b0000c23a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc23a0000c242, model64: 0xc2420000c256},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2560000c25e, model64: 0xc25e0000c26f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc26f0000c27b, model64: 0xc27b0000c28e},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0xc28e0000c296, model64: 0xc2960000c2a2},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xc2a20000c2b0, model64: 0xc2b00000c2be},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xc2be0000c2d2, model64: 0xc2d20000c2e6},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xc2e60000c2f5, model64: 0xc2f50000c304},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0cf1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xc3090000c30f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0cf3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0cf4, match64: 0x00000000, model64: 0xc3190000c323},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf5, match64: 0x00000000, model64: 0xc3230000c32b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0cf6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3320000c338, model64: 0xc3380000c33f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc33f0000c345, model64: 0x15180000151a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3450000c34b, model64: 0xc34b0000c357},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3570000c35d, model64: 0xc35d0000c35f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc35f0000c365, model64: 0xc3650000c368},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3680000c36e, model64: 0xc36e0000c371},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3710000c377, model64: 0xc3770000c37f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc37f0000c385, model64: 0xc3850000c391},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0cfa, match64: 0x00000000, model64: 0xc3910000c39e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfb, match64: 0x00000000, model64: 0xc39e0000c3a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3a70000c3b5, model64: 0xc3b50000c3c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3c30000c3cc, model64: 0xc3cc0000c3d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cff, match64: 0x00000000, model64: 0xc3d90000c3dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d00, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d02, match64: 0x00000000, model64: 0xc3e00000c3e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d03, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3e70000c3ef, model64: 0xc3ef0000c3f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc3f70000c3fd, model64: 0xc3fd0000c403},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4030000c408, model64: 0xc4080000c40d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d04, match64: 0x00000000, model64: 0xc40d0000c414},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0d05, match64: 0x00000000, model64: 0xc4140000c41c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d07, match64: 0x00000000, model64: 0xc4250000c427},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0d08, match64: 0x00000000, model64: 0xc4270000c432},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xc4320000c439, model64: 0xc4390000c447},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d09, match64: 0x00000000, model64: 0xc44e0000c452},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0a, match64: 0x00000000, model64: 0xc4520000c45e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0b, match64: 0x00000000, model64: 0x31c00000321},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0c, match64: 0x00000000, model64: 0xc45e0000c468},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0d, match64: 0x00000000, model64: 0xc4680000c475},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0e, match64: 0x00000000, model64: 0xc4750000c481},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0f, match64: 0x00000000, model64: 0xc4810000c48b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d10, match64: 0x00000000, model64: 0xc48b0000c495},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d11, match64: 0x00000000, model64: 0xc4950000c49e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d12, match64: 0x00000000, model64: 0xc49e0000c4a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d13, match64: 0x00000000, model64: 0xc4a20000c4ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d14, match64: 0x00000000, model64: 0xc4ab0000c4b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d15, match64: 0x00000000, model64: 0xc4b40000c4bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d16, match64: 0x00000000, model64: 0xc4bf0000c4ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d17, match64: 0x00000000, model64: 0xc4ca0000c4d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d18, match64: 0x00000000, model64: 0xc4d40000c4dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d19, match64: 0x00000000, model64: 0xc4dc0000c4e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1a, match64: 0x00000000, model64: 0xc4e00000c4e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1b, match64: 0x00000000, model64: 0xc4e60000c4ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1c, match64: 0x00000000, model64: 0xc4ed0000c4f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1d, match64: 0x00000000, model64: 0xc4f30000c4fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1e, match64: 0x00000000, model64: 0xc4fe0000c504},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1f, match64: 0x00000000, model64: 0xc5040000c50a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d20, match64: 0x00000000, model64: 0xc50a0000c514},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d21, match64: 0x00000000, model64: 0xc5140000c51a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d22, match64: 0x00000000, model64: 0xc51a0000c524},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d23, match64: 0x00000000, model64: 0xc5240000c52b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d24, match64: 0x00000000, model64: 0xc52b0000c531},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d25, match64: 0x00000000, model64: 0xc5310000c538},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d26, match64: 0x00000000, model64: 0xc5380000c53e},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d27, match64: 0x00000000, model64: 0xc5310000c538},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d28, match64: 0x00000000, model64: 0xc53e0000c548},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d29, match64: 0x00000000, model64: 0xc5480000c552},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d2a, match64: 0x00000000, model64: 0xc5520000c55c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2b, match64: 0x00000000, model64: 0xc55c0000c55f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2c, match64: 0x00000000, model64: 0xc55f0000c564},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2d, match64: 0x00000000, model64: 0xc5640000c569},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2e, match64: 0x00000000, model64: 0xc5690000c570},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2f, match64: 0x00000000, model64: 0xc5700000c576},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d30, match64: 0x00000000, model64: 0xc5760000c581},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d31, match64: 0x00000000, model64: 0xc5810000c588},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d32, match64: 0x00000000, model64: 0xc5880000c58d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d33, match64: 0x00000000, model64: 0xc58d0000c593},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d34, match64: 0x00000000, model64: 0xc5930000c598},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d35, match64: 0x00000000, model64: 0xc5980000c5a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d36, match64: 0x00000000, model64: 0xc5a10000c5a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d37, match64: 0x00000000, model64: 0xc5a60000c5b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d38, match64: 0x00000000, model64: 0xa1250000a12a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d39, match64: 0x00000000, model64: 0xc5b00000c5b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3a, match64: 0x00000000, model64: 0xc5b60000c5bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3b, match64: 0x00000000, model64: 0xc5bf0000c5c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3c, match64: 0x00000000, model64: 0xc5c40000c5cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3d, match64: 0x00000000, model64: 0xc5cd0000c5d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3e, match64: 0x00000000, model64: 0xc5d20000c5db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3f, match64: 0x00000000, model64: 0xc5db0000c5e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d40, match64: 0x00000000, model64: 0xc5e00000c5ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d41, match64: 0x00000000, model64: 0xc5ea0000c5f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d42, match64: 0x00000000, model64: 0xc5f60000c5fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d43, match64: 0x00000000, model64: 0xc5fd0000c608},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d44, match64: 0x00000000, model64: 0xc6080000c60e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d45, match64: 0x00000000, model64: 0xc60e0000c615},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d46, match64: 0x00000000, model64: 0xc6150000c61b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc61b0000c628, model64: 0xc6280000c633},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6330000c63f, model64: 0xc63f0000c646},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d47, match64: 0x00000000, model64: 0xc6460000c64d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d48, match64: 0x00000000, model64: 0xc64d0000c653},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d49, match64: 0x00000000, model64: 0xc6530000c65a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4a, match64: 0x00000000, model64: 0xc65a0000c667},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4b, match64: 0x00000000, model64: 0xc6150000c61b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4c, match64: 0x00000000, model64: 0xc6670000c676},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4d, match64: 0x00000000, model64: 0xc6760000c681},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4e, match64: 0x00000000, model64: 0xc6810000c68b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4f, match64: 0x00000000, model64: 0xc68b0000c692},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d50, match64: 0x00000000, model64: 0xc6920000c698},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d51, match64: 0x00000000, model64: 0xc6980000c6a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d52, match64: 0x00000000, model64: 0xc6a10000c6ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d53, match64: 0x00000000, model64: 0xc6ac0000c6b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d54, match64: 0x00000000, model64: 0xc6b30000c6ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d55, match64: 0x00000000, model64: 0xc6ba0000c6c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d56, match64: 0x00000000, model64: 0xc6c00000c6cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d57, match64: 0x00000000, model64: 0xc6cf0000c6d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d58, match64: 0x00000000, model64: 0xc6d40000c6db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d59, match64: 0x00000000, model64: 0xc6db0000c6e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5a, match64: 0x00000000, model64: 0xc6e50000c6ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5b, match64: 0x00000000, model64: 0xc6ec0000c6f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5c, match64: 0x00000000, model64: 0xc6f80000c703},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5d, match64: 0x00000000, model64: 0xc5f60000c5fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5e, match64: 0x00000000, model64: 0xc7030000c70a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5f, match64: 0x00000000, model64: 0xc70a0000c716},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d60, match64: 0x00000000, model64: 0xc7160000c71d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d61, match64: 0x00000000, model64: 0xc71d0000c727},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d62, match64: 0x00000000, model64: 0xc7270000c733},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d63, match64: 0x00000000, model64: 0xc7330000c73a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d64, match64: 0x00000000, model64: 0xc73a0000c744},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d65, match64: 0x00000000, model64: 0xc7440000c74b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d66, match64: 0x00000000, model64: 0xc74b0000c74d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d67, match64: 0x00000000, model64: 0xc7440000c74b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d68, match64: 0x00000000, model64: 0x8fbf00008fc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d69, match64: 0x00000000, model64: 0x8fb200008fb8},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d6a, match64: 0x00000000, model64: 0xc74d0000c755},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d6b, match64: 0x00000000, model64: 0xc7550000c75b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d6c, match64: 0x00000000, model64: 0x61a5000061ab},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d6d, match64: 0x00000000, model64: 0xc75b0000c761},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d6e, match64: 0x00000000, model64: 0xc7610000c76b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d6f, match64: 0x00000000, model64: 0x7e2200007e28},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d70, match64: 0x00000000, model64: 0xc76b0000c778},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d71, match64: 0x00000000, model64: 0x61ab000061b1},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d72, match64: 0x00000000, model64: 0x4fd200004fd8},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d73, match64: 0x00000000, model64: 0xc7780000c783},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d74, match64: 0x00000000, model64: 0xc7830000c789},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d75, match64: 0x00000000, model64: 0xc7890000c790},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d76, match64: 0x00000000, model64: 0xc7900000c79b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d77, match64: 0x00000000, model64: 0xc79b0000c7a2},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d78, match64: 0x00000000, model64: 0xc7a20000c7a9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d79, match64: 0x00000000, model64: 0xc7a90000c7b8},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d7a, match64: 0x00000000, model64: 0xc7b80000c7c0},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d7b, match64: 0x00000000, model64: 0xc7c00000c7cb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d7c, match64: 0x00000000, model64: 0xc7cb0000c7d9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d7d, match64: 0x00000000, model64: 0xc7d90000c7e4},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d7e, match64: 0x00000000, model64: 0xc7e40000c7ef},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d7f, match64: 0x00000000, model64: 0xc7cb0000c7d9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d80, match64: 0x00000000, model64: 0xc7ef0000c7f6},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d81, match64: 0x00000000, model64: 0xc7f60000c801},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d82, match64: 0x00000000, model64: 0xc8010000c809},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d83, match64: 0x00000000, model64: 0xc7a20000c7a9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d84, match64: 0x00000000, model64: 0xc8090000c817},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d85, match64: 0x00000000, model64: 0xc8170000c81f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d86, match64: 0x00000000, model64: 0xc81f0000c82a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0d87, match64: 0x00000000, model64: 0xc82a0000c835},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d88, match64: 0x00000000, model64: 0xc8350000c83d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0d89, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d91, match64: 0x00000000, model64: 0xc8540000c856},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d92, match64: 0x00000000, model64: 0xc8560000c860},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d93, match64: 0x00000000, model64: 0xc8600000c861},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d94, match64: 0x00000000, model64: 0xc8610000c86a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d95, match64: 0x00000000, model64: 0xc86a0000c879},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d96, match64: 0x00000000, model64: 0xc8790000c87f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d97, match64: 0x00000000, model64: 0xc87f0000c889},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d98, match64: 0x00000000, model64: 0xc8890000c88e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d99, match64: 0x00000000, model64: 0xc88e0000c894},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9a, match64: 0x00000000, model64: 0xc8940000c899},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc8990000c8a7, model64: 0xc8a70000c8b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc8b60000c8c3, model64: 0xc8c30000c8d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc8d00000c8dd, model64: 0xc8dd0000c8eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc8eb0000c8f8, model64: 0xc8f80000c906},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9060000c90f, model64: 0xc90f0000c919},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9190000c923, model64: 0xc9230000c92e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc92e0000c938, model64: 0xc92e0000c938},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9380000c943, model64: 0xc9380000c943},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9430000c949, model64: 0xc9430000c949},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9490000c954, model64: 0xc9540000c95f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc95f0000c965, model64: 0xc9650000c96b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc96b0000c975, model64: 0xc9750000c97f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xc98e0000c994},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0d9f, match64: 0x00000000, model64: 0xc9980000c9a5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0da0, match64: 0x00000000, model64: 0xc9a50000c9ad},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0da1, match64: 0x00000000, model64: 0xc9ad0000c9bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9bf0000c9cd, model64: 0xc9cd0000c9d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da2, match64: 0x00000000, model64: 0xc9d70000c9e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da3, match64: 0x00000000, model64: 0x42830000428a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9e30000c9ec, model64: 0xc9ec0000c9ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9ef0000c9f8, model64: 0xc9f80000ca01},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da5, match64: 0x00000000, model64: 0xca010000ca04},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da6, match64: 0x00000000, model64: 0x65740000657b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xca0c0000ca17, model64: 0xca170000ca1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da9, match64: 0x00000000, model64: 0xca1c0000ca26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xca260000ca30, model64: 0xca300000ca37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xca370000ca42, model64: 0xca420000ca44},
		modelTuple{type64: 0x2700000027, matchRI: 0x0daa, match64: 0x00000000, model64: 0xca440000ca49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xca490000ca56, model64: 0xca560000ca66},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xca660000ca70, model64: 0xca700000ca79},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xca790000ca82, model64: 0xca820000ca8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xca900000ca9a, model64: 0xca9a0000caa0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcaa50000caad, model64: 0xcaad0000cab9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dac, match64: 0x00000000, model64: 0xcab90000cacb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dad, match64: 0x00000000, model64: 0xcacb0000cad8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dae, match64: 0x00000000, model64: 0xcad80000cae4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0daf, match64: 0x00000000, model64: 0xcae40000caeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db0, match64: 0x00000000, model64: 0xcaeb0000cafd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db1, match64: 0x00000000, model64: 0xcafd0000cb0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db2, match64: 0x00000000, model64: 0xcb0e0000cb1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db3, match64: 0x00000000, model64: 0xcb1b0000cb27},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db4, match64: 0x00000000, model64: 0xcb270000cb34},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db5, match64: 0x00000000, model64: 0xcb340000cb3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db6, match64: 0x00000000, model64: 0xcb3f0000cb4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db7, match64: 0x00000000, model64: 0xcb4b0000cb58},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db8, match64: 0x00000000, model64: 0xcb580000cb65},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db9, match64: 0x00000000, model64: 0xcb650000cb70},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dba, match64: 0x00000000, model64: 0xcb700000cb7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbb, match64: 0x00000000, model64: 0xcb7d0000cb8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbc, match64: 0x00000000, model64: 0xcb8a0000cb99},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbd, match64: 0x00000000, model64: 0xcb990000cba8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbe, match64: 0x00000000, model64: 0xcba80000cbb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbf, match64: 0x00000000, model64: 0xcbb90000cbc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc0, match64: 0x00000000, model64: 0xcbc60000cbda},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc1, match64: 0x00000000, model64: 0xcbda0000cbe6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc2, match64: 0x00000000, model64: 0xcbe60000cbf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc3, match64: 0x00000000, model64: 0xcbf40000cbfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc4, match64: 0x00000000, model64: 0xcbfd0000cc04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcc040000cc0c, model64: 0xcc0c0000cc14},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc5, match64: 0x00000000, model64: 0xcc140000cc1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc6, match64: 0x00000000, model64: 0xcc1b0000cc23},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc8, match64: 0x00000000, model64: 0xcc230000cc2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dca, match64: 0x00000000, model64: 0x58b5000058ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dcb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dcd, match64: 0x00000000, model64: 0x4fb400004fba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dce, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcc390000cc3f, model64: 0xcc3f0000cc46},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0dd4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0dd5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd7, match64: 0x00000000, model64: 0xcc4f0000cc56},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd8, match64: 0x00000000, model64: 0xcc560000cc59},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd9, match64: 0x00000000, model64: 0xcc590000cc63},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dda, match64: 0x00000000, model64: 0xcc630000cc6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcc6b0000cc79, model64: 0xcc790000cc87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcc870000cc95, model64: 0xcc950000cca3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcca30000ccac, model64: 0xccac0000ccb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xccb50000ccbf, model64: 0xccbf0000ccc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xccc90000ccd5, model64: 0xccd50000cce1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcce10000ccec, model64: 0xccec0000ccf7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xccf70000cd01, model64: 0xcd010000cd0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ddb, match64: 0x00000000, model64: 0xcd0b0000cd12},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ddc, match64: 0x00000000, model64: 0xcd120000cd1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd1b0000cd24, model64: 0xcd240000cd28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd280000cd2c, model64: 0xcd280000cd2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd2c0000cd33, model64: 0xcd330000cd3a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ddd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ddf, match64: 0x00000000, model64: 0xcd420000cd53},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de0, match64: 0x00000000, model64: 0xcd530000cd5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de1, match64: 0x00000000, model64: 0xcd530000cd5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd720000cd7a, model64: 0xcd7a0000cd8b},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0de9, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0dea, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xcd8f0000cd98, model64: 0xcd8f0000cd98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd980000cda2, model64: 0xcd980000cda2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ded, match64: 0x00000000, model64: 0xcda60000cdae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dee, match64: 0x00000000, model64: 0xcdae0000cdb3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcdb70000cdbe, model64: 0xcdbe0000cdc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xcdca0000cdcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df3, match64: 0x00000000, model64: 0xcdd40000cdd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df5, match64: 0x00000000, model64: 0xcdd90000cdde},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df7, match64: 0x00000000, model64: 0xcde30000cdeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df8, match64: 0x00000000, model64: 0xcdeb0000cdf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df9, match64: 0x00000000, model64: 0xcdf30000cdfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dfa, match64: 0x00000000, model64: 0xcdfa0000ce00},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dfb, match64: 0x00000000, model64: 0xce000000ce09},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dfc, match64: 0x00000000, model64: 0xce090000ce10},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dfd, match64: 0x00000000, model64: 0xce100000ce19},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dfe, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dff, match64: 0x00000000, model64: 0xce190000ce21},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e00, match64: 0x00000000, model64: 0xce210000ce29},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e01, match64: 0x00000000, model64: 0xce290000ce32},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e02, match64: 0x00000000, model64: 0xce320000ce37},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e03, match64: 0x00000000, model64: 0xce370000ce43},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e04, match64: 0x00000000, model64: 0x9ac700009acb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e05, match64: 0x00000000, model64: 0x79c1000079c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e06, match64: 0x00000000, model64: 0xce430000ce49},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e07, match64: 0x00000000, model64: 0xce490000ce52},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e08, match64: 0x00000000, model64: 0xce520000ce5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e09, match64: 0x00000000, model64: 0xce5f0000ce67},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0a, match64: 0x00000000, model64: 0xce670000ce75},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0b, match64: 0x00000000, model64: 0xce750000ce7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0c, match64: 0x00000000, model64: 0xce7b0000ce81},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0f, match64: 0x00000000, model64: 0xce840000ce91},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e11, match64: 0x00000000, model64: 0xce950000cea2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcea20000cea9, model64: 0xcea20000cea9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcea90000ceaf, model64: 0xceaf0000ceb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e12, match64: 0x00000000, model64: 0xceb60000cec5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e13, match64: 0x00000000, model64: 0x9df900009e01},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e14, match64: 0x00000000, model64: 0xcec50000cedc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e15, match64: 0x00000000, model64: 0xcedc0000ceea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e16, match64: 0x00000000, model64: 0xceea0000cef3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e18, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xcf020000cf06},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xcf0c0000cf14},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xcf2c0000cf35, model64: 0xcf350000cf38},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1c, match64: 0x00000000, model64: 0xcf3d0000cf45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1d, match64: 0x00000000, model64: 0xcf450000cf4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcf4f0000cf56, model64: 0xcf4f0000cf56},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1e, match64: 0x00000000, model64: 0xcf560000cf5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1f, match64: 0x00000000, model64: 0xcf5f0000cf67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcf670000cf72, model64: 0xcf720000cf78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcf780000cf81, model64: 0xcf810000cf8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcf8a0000cf91, model64: 0xcf910000cf98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcf9e0000cfaf, model64: 0xcfaf0000cfc0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcfc70000cfd1, model64: 0xa4b70000a4be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcfd10000cfdb, model64: 0xcfdb0000cfe6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcfe60000cfef, model64: 0xcfef0000cffa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcffa0000d003, model64: 0xd0030000d00a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd00a0000d013, model64: 0xd0130000d017},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0170000d020, model64: 0xd0200000d028},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0280000d031, model64: 0xd0310000d035},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0350000d040, model64: 0xd0350000d040},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e21, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e22, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e25, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0e26, match64: 0x00000000, model64: 0xd0490000d058},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0e27, match64: 0x00000000, model64: 0xd0580000d063},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0e28, match64: 0x00000000, model64: 0x96b9000096c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e2a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e2b, match64: 0x00000000, model64: 0xd06b0000d073},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e2e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e2f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e31, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e32, match64: 0x00000000, model64: 0x2790000027e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e34, match64: 0x00000000, model64: 0xd0880000d08b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0900000d097, model64: 0xd0970000d09f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e36, match64: 0x00000000, model64: 0xd09f0000d0a5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xd0a50000d0af, model64: 0xd0af0000d0b9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xd0b90000d0c0, model64: 0xd0c00000d0c7},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xd0c70000d0cd, model64: 0xd0cd0000d0d3},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xd0d30000d0da, model64: 0xd0da0000d0e1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xd0f50000d100},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd1060000d10f, model64: 0xd10f0000d118},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e3c, match64: 0x00000000, model64: 0xd1180000d120},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd1200000d129, model64: 0xd1290000d132},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd1320000d140, model64: 0xd1320000d140},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd1400000d14b, model64: 0xd14b0000d156},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd1560000d160, model64: 0xd1600000d16a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e3d, match64: 0x00000000, model64: 0xd16a0000d177},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd1770000d183, model64: 0xd1830000d18f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd18f0000d198, model64: 0xd1980000d1a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd1a10000d1ae, model64: 0xd1ae0000d1bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd1bb0000d1c3, model64: 0xd1c30000d1cb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e3e, match64: 0x00000000, model64: 0xd1cb0000d1d3},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0e3f, match64: 0x00000000, model64: 0xd1d30000d1e0},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0e40, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e42, match64: 0x00000000, model64: 0xd1e50000d1eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd1eb0000d1f3, model64: 0xd1f30000d1f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e43, match64: 0x00000000, model64: 0xd1f80000d200},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e44, match64: 0x00000000, model64: 0xd2000000d207},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e45, match64: 0x00000000, model64: 0xd2070000d20b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e46, match64: 0x00000000, model64: 0xd20b0000d210},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xd2100000d21a, model64: 0xd21a0000d222},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd22f0000d23b, model64: 0xd22f0000d23b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd23b0000d246, model64: 0xd23b0000d246},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2460000d257, model64: 0xd2460000d257},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2570000d263, model64: 0xd2570000d263},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2630000d26e, model64: 0xd2630000d26e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd26e0000d27d, model64: 0xd26e0000d27d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd27d0000d28b, model64: 0xd27d0000d28b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd28b0000d298, model64: 0xd28b0000d298},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e49, match64: 0x00000000, model64: 0xd2980000d2a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4a, match64: 0x00000000, model64: 0xd2a50000d2ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2ad0000d2bc, model64: 0xd2ad0000d2bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4b, match64: 0x00000000, model64: 0xd2bc0000d2c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4c, match64: 0x00000000, model64: 0xd2c60000d2d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2d40000d2e3, model64: 0xd2d40000d2e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2e30000d2f5, model64: 0xd2e30000d2f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd2f50000d303, model64: 0xd2f50000d303},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3030000d30e, model64: 0xd3030000d30e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd30e0000d318, model64: 0xd30e0000d318},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3180000d322, model64: 0xd3180000d322},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3220000d32f, model64: 0xd3220000d32f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd32f0000d33d, model64: 0xd32f0000d33d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4d, match64: 0x00000000, model64: 0xd33d0000d349},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3490000d351, model64: 0xd3510000d35a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd35a0000d365, model64: 0xd3650000d37b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd37b0000d382, model64: 0xd3820000d393},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3930000d39e, model64: 0xd39e0000d3b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4e, match64: 0x00000000, model64: 0xd3b20000d3c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e4f, match64: 0x00000000, model64: 0xd3c30000d3cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e50, match64: 0x00000000, model64: 0xd3cf0000d3e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3e00000d3f0, model64: 0xd3e00000d3f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd3f00000d3fe, model64: 0xd3f00000d3fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e51, match64: 0x00000000, model64: 0xd3fe0000d40d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd40d0000d41f, model64: 0xd40d0000d41f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd41f0000d433, model64: 0xd41f0000d433},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e52, match64: 0x00000000, model64: 0xd4330000d443},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4430000d44a, model64: 0xd44a0000d45b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd45b0000d464, model64: 0xd4640000d46d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd46d0000d476, model64: 0xd46d0000d476},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4760000d47f, model64: 0xd4760000d47f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e53, match64: 0x00000000, model64: 0xd47f0000d48d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e54, match64: 0x00000000, model64: 0xd48d0000d49c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e55, match64: 0x00000000, model64: 0xd49c0000d4aa},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x0e56, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x0e57, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e58, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e59, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e5a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e5c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e5d, match64: 0x00000000, model64: 0xd4ae0000d4b0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e5e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e5f, match64: 0x00000000, model64: 0xd4b00000d4b8},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0e60, match64: 0x00000000, model64: 0xd4b80000d4bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4c20000d4cd, model64: 0xd4c20000d4cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4cd0000d4d9, model64: 0xd4cd0000d4d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e62, match64: 0x00000000, model64: 0xd4d90000d4e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e63, match64: 0x00000000, model64: 0xd4e50000d4f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e64, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4f90000d500, model64: 0xd5000000d50c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e66, match64: 0x00000000, model64: 0xd51d0000d526},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e67, match64: 0x00000000, model64: 0xd5260000d534},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5340000d53c, model64: 0xd53c0000d545},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e68, match64: 0x00000000, model64: 0xd5450000d548},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e69, match64: 0x00000000, model64: 0xd5480000d552},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5520000d55c, model64: 0xd55c0000d55e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd55e0000d567, model64: 0xc8600000c861},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5670000d575, model64: 0xd5750000d57b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd57b0000d584, model64: 0x9c2b00009c2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5890000d58f, model64: 0xd58f0000d596},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd5960000d59e, model64: 0xd5960000d59e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6e, match64: 0x00000000, model64: 0xd5a50000d5ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e6f, match64: 0x00000000, model64: 0x7b2200007b27},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e70, match64: 0x00000000, model64: 0xd5ac0000d5af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e71, match64: 0x00000000, model64: 0x66dd000066e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e72, match64: 0x00000000, model64: 0xd5af0000d5b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e73, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xd5bc0000d5cf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e77, match64: 0x00000000, model64: 0xd5da0000d5e5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e78, match64: 0x00000000, model64: 0xd5e50000d5f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e79, match64: 0x00000000, model64: 0xd5f60000d609},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e7a, match64: 0x00000000, model64: 0xd6090000d61b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd61b0000d625, model64: 0xd6250000d635},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e7b, match64: 0x00000000, model64: 0xd6350000d644},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e7c, match64: 0x00000000, model64: 0xd6440000d649},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e7d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e7e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e80, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e81, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e84, match64: 0x00000000, model64: 0xd66c0000d676},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6760000d67e, model64: 0xd67e0000d686},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e86, match64: 0x00000000, model64: 0xd68a0000d690},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e87, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e88, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e8b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xd6960000d69e, model64: 0xd69e0000d6a5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0e8c, match64: 0x00000000, model64: 0xd6a50000d6af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8e, match64: 0x00000000, model64: 0xd6b50000d6be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8f, match64: 0x00000000, model64: 0xd6be0000d6c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e90, match64: 0x00000000, model64: 0xd6c30000d6c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e91, match64: 0x00000000, model64: 0xc39e0000c3a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e92, match64: 0x00000000, model64: 0xc39e0000c3a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e93, match64: 0x00000000, model64: 0xd6c70000d6cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e94, match64: 0x00000000, model64: 0xc39e0000c3a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e95, match64: 0x00000000, model64: 0xc39e0000c3a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e96, match64: 0x00000000, model64: 0xd6cc0000d6d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e97, match64: 0x00000000, model64: 0xd6d00000d6d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e98, match64: 0x00000000, model64: 0xc39e0000c3a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e99, match64: 0x00000000, model64: 0xd6d60000d6db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9a, match64: 0x00000000, model64: 0xd6db0000d6e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6e50000d6e8, model64: 0xd6e50000d6e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9e, match64: 0x00000000, model64: 0xd6e80000d6f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9f, match64: 0x00000000, model64: 0xd6f00000d6f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea0, match64: 0x00000000, model64: 0xd6f50000d704},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea1, match64: 0x00000000, model64: 0xd7040000d70f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ea2, match64: 0x00000000, model64: 0xd70f0000d718},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0ea4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea5, match64: 0x00000000, model64: 0xd71d0000d72a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd72a0000d732, model64: 0xd7320000d73a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd73a0000d742, model64: 0xd73a0000d742},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7420000d74e, model64: 0xd7420000d74e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd74e0000d758, model64: 0xd74e0000d758},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ea9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eaa, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7610000d76a, model64: 0xd76a0000d775},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7750000d77a, model64: 0x83e9000083f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd77a0000d780, model64: 0xd7800000d78a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd78a0000d78e, model64: 0xd78e0000d797},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eac, match64: 0x00000000, model64: 0xd7970000d7a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd7a00000d7a4, model64: 0xd7a40000d7ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ead, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x0eae, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb0, match64: 0x00000000, model64: 0xd7b40000d7bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb1, match64: 0x00000000, model64: 0xd7bb0000d7c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb2, match64: 0x00000000, model64: 0xd7c10000d7c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb3, match64: 0x00000000, model64: 0xd7c80000d7ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb4, match64: 0x00000000, model64: 0xd7ce0000d7d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb5, match64: 0x00000000, model64: 0xd7d70000d7dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb6, match64: 0x00000000, model64: 0xd7dd0000d7e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb7, match64: 0x00000000, model64: 0x9d5600009d5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb8, match64: 0x00000000, model64: 0xd7e30000d7e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb9, match64: 0x00000000, model64: 0xd7e90000d7ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eba, match64: 0x00000000, model64: 0xd7ef0000d7f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebb, match64: 0x00000000, model64: 0xd7f60000d7fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebc, match64: 0x00000000, model64: 0xd7fc0000d804},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ebd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ebe, match64: 0x00000000, model64: 0xd8040000d80e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec0, match64: 0x00000000, model64: 0xd8140000d81b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xd8280000d833},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xd8440000d84a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd8560000d85f, model64: 0xd85f0000d86a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd86a0000d875, model64: 0xd8750000d880},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec9, match64: 0x00000000, model64: 0xd8800000d887},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd8870000d897, model64: 0xd8870000d897},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eca, match64: 0x00000000, model64: 0xd8970000d89f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ecb, match64: 0x00000000, model64: 0xd89f0000d8ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ecc, match64: 0x00000000, model64: 0xd8ab0000d8b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ecd, match64: 0x00000000, model64: 0xd8b60000d8bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ece, match64: 0x00000000, model64: 0xd8bd0000d8c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ecf, match64: 0x00000000, model64: 0xd8c60000d8cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed0, match64: 0x00000000, model64: 0xd8cc0000d8d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed1, match64: 0x00000000, model64: 0xd8d50000d8e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed2, match64: 0x00000000, model64: 0xd8e00000d8eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed3, match64: 0x00000000, model64: 0xd8eb0000d8f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed4, match64: 0x00000000, model64: 0xd8f30000d8fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed5, match64: 0x00000000, model64: 0xd8fa0000d900},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ed6, match64: 0x00000000, model64: 0xd9000000d90e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ed7, match64: 0x00000000, model64: 0xd90e0000d916},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ed8, match64: 0x00000000, model64: 0xd9160000d924},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ed9, match64: 0x00000000, model64: 0xd9000000d90e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0eda, match64: 0x00000000, model64: 0xd9240000d931},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0edb, match64: 0x00000000, model64: 0xd9310000d93e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0edc, match64: 0x00000000, model64: 0xd93e0000d94b},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x0edd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee4, match64: 0x00000000, model64: 0xd95f0000d964},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x0ee6, match64: 0x00000000, model64: 0xd9640000d970},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee8, match64: 0x00000000, model64: 0xd9770000d97d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee9, match64: 0x00000000, model64: 0xd97d0000d987},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eea, match64: 0x00000000, model64: 0xd9870000d98e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eeb, match64: 0x00000000, model64: 0xd98e0000d992},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eec, match64: 0x00000000, model64: 0xd9920000d999},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eed, match64: 0x00000000, model64: 0xd9990000d9a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eee, match64: 0x00000000, model64: 0xd9a00000d9a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eef, match64: 0x00000000, model64: 0xd9a70000d9ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef0, match64: 0x00000000, model64: 0xd9ae0000d9b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef1, match64: 0x00000000, model64: 0xd9b50000d9be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef2, match64: 0x00000000, model64: 0xd9be0000d9c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef3, match64: 0x00000000, model64: 0xd9c30000d9cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef4, match64: 0x00000000, model64: 0xd9cf0000d9da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef5, match64: 0x00000000, model64: 0xd9da0000d9e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef6, match64: 0x00000000, model64: 0xd9e20000d9ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef7, match64: 0x00000000, model64: 0xd9ec0000d9f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef8, match64: 0x00000000, model64: 0xd9f40000d9fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef9, match64: 0x00000000, model64: 0xd9fe0000da03},
		modelTuple{type64: 0x2700000027, matchRI: 0x0efa, match64: 0x00000000, model64: 0xda030000da0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0efb, match64: 0x00000000, model64: 0xda0d0000da17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda170000da1c, model64: 0xda1c0000da26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda260000da2b, model64: 0xda2b0000da36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda360000da3c, model64: 0xda3c0000da46},
		modelTuple{type64: 0x2700000027, matchRI: 0x0efc, match64: 0x00000000, model64: 0xda460000da50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda500000da55, model64: 0xda550000da60},
		modelTuple{type64: 0x2700000027, matchRI: 0x0efd, match64: 0x00000000, model64: 0xda600000da69},
		modelTuple{type64: 0x2700000027, matchRI: 0x0efe, match64: 0x00000000, model64: 0xda690000da76},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eff, match64: 0x00000000, model64: 0xda760000da85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda850000da8a, model64: 0xda8a0000da9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xda9c0000daa1, model64: 0xdaa10000daad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdaad0000dab4, model64: 0xdab40000daba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdaba0000dabf, model64: 0xdabf0000dac8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f00, match64: 0x00000000, model64: 0xdac80000dacf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f01, match64: 0x00000000, model64: 0xdacf0000dad5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f02, match64: 0x00000000, model64: 0xdad50000dadf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f03, match64: 0x00000000, model64: 0xdadf0000daf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f04, match64: 0x00000000, model64: 0xdaf30000dafa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f05, match64: 0x00000000, model64: 0xdafa0000db04},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f06, match64: 0x00000000, model64: 0xdb040000db0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f07, match64: 0x00000000, model64: 0xdb0e0000db18},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f08, match64: 0x00000000, model64: 0xdb180000db22},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f09, match64: 0x00000000, model64: 0xdb220000db2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0a, match64: 0x00000000, model64: 0xdb2b0000db35},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0b, match64: 0x00000000, model64: 0xdb350000db3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0c, match64: 0x00000000, model64: 0xdb3f0000db49},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0d, match64: 0x00000000, model64: 0xdb490000db4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0e, match64: 0x00000000, model64: 0xdb4e0000db55},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0f, match64: 0x00000000, model64: 0xdb550000db5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f10, match64: 0x00000000, model64: 0xdb5c0000db69},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f11, match64: 0x00000000, model64: 0xdb690000db72},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f12, match64: 0x00000000, model64: 0xdb720000db7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f13, match64: 0x00000000, model64: 0xdb7e0000db8a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0f14, match64: 0x00000000, model64: 0xdb8a0000db96},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0f15, match64: 0x00000000, model64: 0xdb960000dba1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0f16, match64: 0x00000000, model64: 0xdba10000dbab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f17, match64: 0x00000000, model64: 0xdbab0000dbb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f18, match64: 0x00000000, model64: 0xdbb00000dbbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f19, match64: 0x00000000, model64: 0xdbbb0000dbc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1a, match64: 0x00000000, model64: 0xdbc50000dbcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1b, match64: 0x00000000, model64: 0xdbcf0000dbd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1c, match64: 0x00000000, model64: 0xdbd90000dbe3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1d, match64: 0x00000000, model64: 0xdbe30000dbed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1e, match64: 0x00000000, model64: 0xdbed0000dbf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1f, match64: 0x00000000, model64: 0xdbf70000dc03},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f20, match64: 0x00000000, model64: 0xdc030000dc09},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f21, match64: 0x00000000, model64: 0xdc090000dc12},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f22, match64: 0x00000000, model64: 0xdc120000dc1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f23, match64: 0x00000000, model64: 0xdc1b0000dc1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f24, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0f25, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f26, match64: 0x00000000, model64: 0xdc1f0000dc2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f27, match64: 0x00000000, model64: 0xdc2d0000dc3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f28, match64: 0x00000000, model64: 0xdc3c0000dc4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f29, match64: 0x00000000, model64: 0xdc4c0000dc59},
		modelTuple{type64: 0x2e8000002f5, matchRI: -0x0001, match64: 0xdc590000dc5e, model64: 0xdc5e0000dc63},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2a, match64: 0x00000000, model64: 0xdc630000dc68},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2c, match64: 0x00000000, model64: 0xdc680000dc6d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdc770000dc7f, model64: 0xdc7f0000dc87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdc870000dc8e, model64: 0xdc8e0000dc95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdc950000dc9e, model64: 0xdc950000dc9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdc9e0000dca4, model64: 0xdca40000dcaa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdcaa0000dcb3, model64: 0xdcaa0000dcb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2f, match64: 0x00000000, model64: 0xdcb30000dcbd},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xdcbd0000dcc6, model64: 0xdcc60000dccf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f31, match64: 0x00000000, model64: 0xdcd40000dce0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f32, match64: 0x00000000, model64: 0xdce00000dceb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f33, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f36, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f37, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f39, match64: 0x00000000, model64: 0xdcf90000dd0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3a, match64: 0x00000000, model64: 0xdd0c0000dd0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3b, match64: 0x00000000, model64: 0xdd0f0000dd12},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3c, match64: 0x00000000, model64: 0xdd120000dd15},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3d, match64: 0x00000000, model64: 0xdd150000dd18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd180000dd21, model64: 0xdd210000dd28},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3e, match64: 0x00000000, model64: 0xdd280000dd2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd2b0000dd32, model64: 0xdd320000dd35},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3f, match64: 0x00000000, model64: 0xdd350000dd38},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f40, match64: 0x00000000, model64: 0xdd380000dd3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f41, match64: 0x00000000, model64: 0xdd3b0000dd3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f42, match64: 0x00000000, model64: 0xdd3e0000dd41},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f43, match64: 0x00000000, model64: 0xdd410000dd45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f44, match64: 0x00000000, model64: 0xdd450000dd48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd480000dd52, model64: 0xdd520000dd5b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd5b0000dd63, model64: 0x83e9000083f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd630000dd6d, model64: 0xdd6d0000dd73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd730000dd7c, model64: 0xdd7c0000dd8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd8a0000dd92, model64: 0xdd920000dda1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f45, match64: 0x00000000, model64: 0xdda10000ddaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f46, match64: 0x00000000, model64: 0xddaa0000ddb3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xddb30000ddba, model64: 0xddba0000ddc3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xddc30000ddcb, model64: 0xddcb0000ddd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f47, match64: 0x00000000, model64: 0xddd90000dddb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f48, match64: 0x00000000, model64: 0xdddb0000dde2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f49, match64: 0x00000000, model64: 0xdde20000dde4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4a, match64: 0x00000000, model64: 0xdde40000ddec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xddec0000ddf4, model64: 0xddf40000ddf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4b, match64: 0x00000000, model64: 0xddf80000ddfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4c, match64: 0x00000000, model64: 0xddfb0000de02},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4d, match64: 0x00000000, model64: 0xde020000de0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde0b0000de12, model64: 0xde120000de1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde1b0000de22, model64: 0xde220000de25},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4e, match64: 0x00000000, model64: 0xde250000de27},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4f, match64: 0x00000000, model64: 0xde270000de2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f50, match64: 0x00000000, model64: 0xcef80000cefb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f51, match64: 0x00000000, model64: 0xde2a0000de33},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f52, match64: 0x00000000, model64: 0xde330000de36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde360000de3d, model64: 0xde3d0000de44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde440000de4b, model64: 0xde4b0000de53},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f53, match64: 0x00000000, model64: 0xa8f00000a91},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f54, match64: 0x00000000, model64: 0xde530000de58},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f55, match64: 0x00000000, model64: 0xde580000de5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde5a0000de61, model64: 0xde610000de67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde670000de6e, model64: 0xde6e0000de74},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f56, match64: 0x00000000, model64: 0xde740000de7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f57, match64: 0x00000000, model64: 0xde7a0000de82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f58, match64: 0x00000000, model64: 0xde820000de8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f59, match64: 0x00000000, model64: 0xa4ae0000a4b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde8c0000de94, model64: 0xde940000de97},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5a, match64: 0x00000000, model64: 0xde970000de99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde990000dea0, model64: 0xdea00000dea9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdea90000deb0, model64: 0xdeb00000deb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5b, match64: 0x00000000, model64: 0xdea00000dea9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5c, match64: 0x00000000, model64: 0xdeb90000dec8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5d, match64: 0x00000000, model64: 0xdec80000ded2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5e, match64: 0x00000000, model64: 0xded20000dedf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5f, match64: 0x00000000, model64: 0xdedf0000deee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f60, match64: 0x00000000, model64: 0xdeee0000def1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f61, match64: 0x00000000, model64: 0xdef10000def4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f62, match64: 0x00000000, model64: 0xdef40000def7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdef70000defe, model64: 0xdefe0000df01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf010000df07, model64: 0xdf070000df11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf110000df18, model64: 0xdf180000df1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f63, match64: 0x00000000, model64: 0xdf1f0000df24},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf240000df2b, model64: 0xdf2b0000df31},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f64, match64: 0x00000000, model64: 0xdf310000df39},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f65, match64: 0x00000000, model64: 0xdf390000df40},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f66, match64: 0x00000000, model64: 0xdf400000df47},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f67, match64: 0x00000000, model64: 0xdf470000df4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f68, match64: 0x00000000, model64: 0xdf4d0000df52},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f69, match64: 0x00000000, model64: 0xc4dc0000c4e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6a, match64: 0x00000000, model64: 0xdf520000df59},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6b, match64: 0x00000000, model64: 0xdf590000df5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6c, match64: 0x00000000, model64: 0xdf5d0000df62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf620000df6b, model64: 0x743b0000743f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6d, match64: 0x00000000, model64: 0xdf6b0000df6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf6f0000df78, model64: 0xdf780000df8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6e, match64: 0x00000000, model64: 0xdf8a0000df8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f6f, match64: 0x00000000, model64: 0xdf8f0000df96},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f70, match64: 0x00000000, model64: 0xdf960000dfa1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f71, match64: 0x00000000, model64: 0xdfa10000dfb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f72, match64: 0x00000000, model64: 0xdfb10000dfba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdfba0000dfc2, model64: 0xdfc20000dfcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f73, match64: 0x00000000, model64: 0xdfcc0000dfde},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f74, match64: 0x00000000, model64: 0xdfde0000dfeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f75, match64: 0x00000000, model64: 0xdfeb0000dff8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f76, match64: 0x00000000, model64: 0xdff80000e005},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f77, match64: 0x00000000, model64: 0xe0050000e017},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f78, match64: 0x00000000, model64: 0xe0170000e022},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f79, match64: 0x00000000, model64: 0xe0220000e02f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7a, match64: 0x00000000, model64: 0xe02f0000e039},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7b, match64: 0x00000000, model64: 0xe0390000e046},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7c, match64: 0x00000000, model64: 0xe0460000e053},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe0530000e05a, model64: 0xe05a0000e064},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7d, match64: 0x00000000, model64: 0xe0640000e06e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7e, match64: 0x00000000, model64: 0xe06e0000e078},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe0780000e080, model64: 0xe0800000e08a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f7f, match64: 0x00000000, model64: 0xe08a0000e097},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f80, match64: 0x00000000, model64: 0xe0970000e0a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe0a40000e0ac, model64: 0xe0ac0000e0b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe0b90000e0c0, model64: 0xe0c00000e0cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe0cf0000e0d6, model64: 0xe0d60000e0e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f81, match64: 0x00000000, model64: 0xe0e00000e0ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f82, match64: 0x00000000, model64: 0xe0ed0000e0ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f83, match64: 0x00000000, model64: 0xe0ff0000e10a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f84, match64: 0x00000000, model64: 0xe10a0000e11b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f85, match64: 0x00000000, model64: 0xe11b0000e12c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe12c0000e131, model64: 0xe1310000e145},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f86, match64: 0x00000000, model64: 0xe1450000e148},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f87, match64: 0x00000000, model64: 0xe1480000e155},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f88, match64: 0x00000000, model64: 0xe1550000e15f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe15f0000e167, model64: 0xe1670000e173},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe1730000e178, model64: 0xe1780000e180},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe1800000e187, model64: 0xe1870000e18f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f89, match64: 0x00000000, model64: 0xe18f0000e197},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8a, match64: 0x00000000, model64: 0xe1970000e1a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8b, match64: 0x00000000, model64: 0xe1a40000e1a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8c, match64: 0x00000000, model64: 0xe1a60000e1a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8d, match64: 0x00000000, model64: 0xe1a90000e1ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8e, match64: 0x00000000, model64: 0xe1ac0000e1ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8f, match64: 0x00000000, model64: 0xe1ae0000e1b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f90, match64: 0x00000000, model64: 0xe1b00000e1b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f91, match64: 0x00000000, model64: 0xe1b30000e1b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f92, match64: 0x00000000, model64: 0xe1b60000e1c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe1c20000e1ca, model64: 0xe1ca0000e1d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f93, match64: 0x00000000, model64: 0xe1d30000e1d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f94, match64: 0x00000000, model64: 0xe1d80000e1df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f95, match64: 0x00000000, model64: 0xe1df0000e1e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f96, match64: 0x00000000, model64: 0xe1e60000e1ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f97, match64: 0x00000000, model64: 0xe1ef0000e1fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f98, match64: 0x00000000, model64: 0xe1fb0000e202},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f99, match64: 0x00000000, model64: 0xe2020000e209},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9a, match64: 0x00000000, model64: 0xe2090000e210},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9b, match64: 0x00000000, model64: 0xe2100000e21c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9c, match64: 0x00000000, model64: 0xe21c0000e223},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9d, match64: 0x00000000, model64: 0xe2230000e22a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9e, match64: 0x00000000, model64: 0xe22a0000e231},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9f, match64: 0x00000000, model64: 0xe2310000e239},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2390000e240, model64: 0xe2400000e247},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2470000e250, model64: 0xe2500000e259},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa0, match64: 0x00000000, model64: 0xe2590000e261},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa1, match64: 0x00000000, model64: 0xe2610000e26c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa2, match64: 0x00000000, model64: 0xe26c0000e27c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa3, match64: 0x00000000, model64: 0xe27c0000e28b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa4, match64: 0x00000000, model64: 0xe28b0000e292},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa5, match64: 0x00000000, model64: 0xe2920000e29a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe29a0000e2a1, model64: 0xe2a10000e2a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2a40000e2ad, model64: 0xe2ad0000e2b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa6, match64: 0x00000000, model64: 0xe2b00000e2b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2b30000e2bb, model64: 0xe2bb0000e2c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2c30000e2cb, model64: 0xe2cb0000e2cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa7, match64: 0x00000000, model64: 0xe2cc0000e2ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa8, match64: 0x00000000, model64: 0xe2ce0000e2d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa9, match64: 0x00000000, model64: 0xe2d30000e2d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0faa, match64: 0x00000000, model64: 0xe2d90000e2e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fab, match64: 0x00000000, model64: 0xe2e10000e2e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2e80000e2f0, model64: 0xe2f00000e2f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fac, match64: 0x00000000, model64: 0xe2f60000e2fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fad, match64: 0x00000000, model64: 0xe2fe0000e307},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3070000e310, model64: 0xe3100000e319},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fae, match64: 0x00000000, model64: 0xe3190000e31b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0faf, match64: 0x00000000, model64: 0xe31b0000e31e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb0, match64: 0x00000000, model64: 0xe31e0000e321},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb1, match64: 0x00000000, model64: 0xe3210000e324},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3240000e32c, model64: 0xa15d0000a160},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe32c0000e335, model64: 0xe3350000e338},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3380000e341, model64: 0xe3410000e348},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3480000e352, model64: 0xe3520000e355},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3550000e35e, model64: 0xe35e0000e361},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3610000e368, model64: 0xe3680000e375},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3750000e37c, model64: 0xe37c0000e383},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3830000e38a, model64: 0xe38a0000e38d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb2, match64: 0x00000000, model64: 0xe38d0000e391},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb3, match64: 0x00000000, model64: 0xe3910000e398},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3980000e39f, model64: 0xe3980000e39f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe39f0000e3a7, model64: 0x743b0000743f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3a70000e3b0, model64: 0xe3b00000e3b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3b40000e3bc, model64: 0xe3bc0000e3c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb4, match64: 0x00000000, model64: 0xe3c50000e3c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb5, match64: 0x00000000, model64: 0xe3c70000e3cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb6, match64: 0x00000000, model64: 0xe3cd0000e3d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3d60000e3dd, model64: 0xe3dd0000e3e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb7, match64: 0x00000000, model64: 0xe3e00000e3e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3e40000e3eb, model64: 0xe3eb0000e3ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3ef0000e3f6, model64: 0xe3f60000e3f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3f80000e3ff, model64: 0xe3ff0000e403},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb8, match64: 0x00000000, model64: 0xe4030000e406},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4060000e40b, model64: 0xe40b0000e410},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4100000e415, model64: 0xe4150000e419},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb9, match64: 0x00000000, model64: 0x6dcf00006dd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4190000e422, model64: 0xe4220000e424},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4240000e42c, model64: 0xe42c0000e435},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fba, match64: 0x00000000, model64: 0xe4350000e43b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbb, match64: 0x00000000, model64: 0xe43b0000e443},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbc, match64: 0x00000000, model64: 0xe4430000e44b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbd, match64: 0x00000000, model64: 0xe44b0000e454},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbe, match64: 0x00000000, model64: 0xe4540000e45d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbf, match64: 0x00000000, model64: 0xe45d0000e466},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4660000e46e, model64: 0xe46e0000e478},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4780000e480, model64: 0xe4800000e483},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4830000e48b, model64: 0xe48b0000e491},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc0, match64: 0x00000000, model64: 0xe4910000e494},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc1, match64: 0x00000000, model64: 0xe4940000e49d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe49d0000e4a7, model64: 0xe4a70000e4aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc2, match64: 0x00000000, model64: 0xe4aa0000e4af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc3, match64: 0x00000000, model64: 0xe4af0000e4b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc4, match64: 0x00000000, model64: 0xe4b30000e4bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc5, match64: 0x00000000, model64: 0xe1450000e148},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc6, match64: 0x00000000, model64: 0xe4bc0000e4bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc7, match64: 0x00000000, model64: 0xe4bf0000e4c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc8, match64: 0x00000000, model64: 0xe4c60000e4ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc9, match64: 0x00000000, model64: 0x406e00004071},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fca, match64: 0x00000000, model64: 0xe4ce0000e4d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcb, match64: 0x00000000, model64: 0xe4d70000e4e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4e30000e4ea, model64: 0xe4ea0000e4f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcc, match64: 0x00000000, model64: 0xe4f30000e4ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcd, match64: 0x00000000, model64: 0xe4ff0000e50b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fce, match64: 0x00000000, model64: 0xe50b0000e50e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcf, match64: 0x00000000, model64: 0xe50e0000e51c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd0, match64: 0x00000000, model64: 0xe51c0000e52a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd1, match64: 0x00000000, model64: 0xe52a0000e52c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd2, match64: 0x00000000, model64: 0xe52c0000e535},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd3, match64: 0x00000000, model64: 0xe5350000e537},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd4, match64: 0x00000000, model64: 0xe5370000e539},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe5390000e540, model64: 0xe4af0000e4b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd5, match64: 0x00000000, model64: 0xe5400000e543},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd6, match64: 0x00000000, model64: 0xe5430000e54d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd7, match64: 0x00000000, model64: 0xdeee0000def1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd8, match64: 0x00000000, model64: 0xe54d0000e555},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd9, match64: 0x00000000, model64: 0xe5550000e558},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fda, match64: 0x00000000, model64: 0xe2b00000e2b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdb, match64: 0x00000000, model64: 0xe5580000e55b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdc, match64: 0x00000000, model64: 0xe55b0000e55e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdd, match64: 0x00000000, model64: 0xe55e0000e561},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fde, match64: 0x00000000, model64: 0xe5610000e565},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdf, match64: 0x00000000, model64: 0xe5650000e568},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe0, match64: 0x00000000, model64: 0xe5680000e56b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe1, match64: 0x00000000, model64: 0xe56b0000e573},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe2, match64: 0x00000000, model64: 0xe5730000e576},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe3, match64: 0x00000000, model64: 0xe5760000e579},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe4, match64: 0x00000000, model64: 0xe5790000e57c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe5, match64: 0x00000000, model64: 0xe57c0000e57e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe57e0000e585, model64: 0xe3520000e355},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe6, match64: 0x00000000, model64: 0xe5850000e587},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe7, match64: 0x00000000, model64: 0xe5870000e58e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe8, match64: 0x00000000, model64: 0xe58e0000e597},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe9, match64: 0x00000000, model64: 0xe5970000e59e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fea, match64: 0x00000000, model64: 0xe59e0000e5a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0feb, match64: 0x00000000, model64: 0x83f0000083f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fec, match64: 0x00000000, model64: 0xe5a70000e5b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fed, match64: 0x00000000, model64: 0xe5b00000e5ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fee, match64: 0x00000000, model64: 0xe5ba0000e5c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fef, match64: 0x00000000, model64: 0xe5c70000e5d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff0, match64: 0x00000000, model64: 0xe5d00000e5dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff1, match64: 0x00000000, model64: 0xe5dd0000e5e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff2, match64: 0x00000000, model64: 0xe5e10000e5ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff3, match64: 0x00000000, model64: 0xe5ec0000e5f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff4, match64: 0x00000000, model64: 0xe5f20000e5fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe5fd0000e605, model64: 0xe6050000e60c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff5, match64: 0x00000000, model64: 0xe60c0000e613},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff6, match64: 0x00000000, model64: 0xe6130000e618},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6180000e61d, model64: 0xe61d0000e624},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff7, match64: 0x00000000, model64: 0xe6240000e62b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe62b0000e632, model64: 0xe6320000e63b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe63b0000e640, model64: 0xe6400000e646},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6460000e64e, model64: 0xe64e0000e655},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6550000e65c, model64: 0xe65c0000e665},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6650000e66d, model64: 0xe66d0000e673},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff8, match64: 0x00000000, model64: 0xe6730000e67a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff9, match64: 0x00000000, model64: 0xe67a0000e67e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe67e0000e686, model64: 0xe6860000e68f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe68f0000e697, model64: 0xe6970000e6a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffa, match64: 0x00000000, model64: 0xe6a60000e6ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6ae0000e6b5, model64: 0xe6b50000e6bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ffb, match64: 0x00000000, model64: 0xe6bf0000e6c2},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x0ffc, match64: 0x00000000, model64: 0xe6c20000e6c6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ffd, match64: 0x00000000, model64: 0xe6c60000e6d7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0ffe, match64: 0x00000000, model64: 0xe6d70000e6e5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe6e50000e6ec, model64: 0xe6ec0000e6f9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x0fff, match64: 0x00000000, model64: 0xe6f90000e705},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe7050000e70c, model64: 0xe6f90000e705},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1000, match64: 0x00000000, model64: 0xe70c0000e718},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe7180000e720, model64: 0xe7200000e72d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1001, match64: 0x00000000, model64: 0xe72d0000e736},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1002, match64: 0x00000000, model64: 0xe7360000e744},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1003, match64: 0x00000000, model64: 0xe7440000e74d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe74d0000e754, model64: 0xe7540000e75e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe75e0000e765, model64: 0xe7650000e772},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe7720000e779, model64: 0xe7790000e786},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe7860000e78d, model64: 0xe78d0000e79e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1004, match64: 0x00000000, model64: 0xe79e0000e7ab},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1005, match64: 0x00000000, model64: 0xe7ab0000e7bd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1006, match64: 0x00000000, model64: 0xe7bd0000e7d4},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe7d40000e7dc, model64: 0xe7dc0000e7f1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe7f10000e7f6, model64: 0xe7f60000e803},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe8030000e808, model64: 0xe8080000e813},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1007, match64: 0x00000000, model64: 0xe8130000e81f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe81f0000e826, model64: 0xe8260000e833},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe8330000e83a, model64: 0xe83a0000e84c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1008, match64: 0x00000000, model64: 0xe84c0000e85a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe85a0000e85f, model64: 0xe85f0000e869},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xe8690000e86e, model64: 0xe86e0000e878},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1009, match64: 0x00000000, model64: 0xe8780000e880},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x100a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x100b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xe8800000e88b, model64: 0xe88b0000e890},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0xe8900000e89b, model64: 0xe8900000e89b},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x100c, match64: 0x00000000, model64: 0xe8780000e880},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x100d, match64: 0x00000000, model64: 0xe89b0000e8a2},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0xe8a20000e8b1, model64: 0xe8b10000e8bd},
		modelTuple{type64: 0x245800002460, matchRI: 0x100e, match64: 0x00000000, model64: 0xe8bd0000e8c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x100f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1010, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1011, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1012, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1013, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1014, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1015, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1016, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1017, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1018, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1019, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x101a, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe8e00000e8ed, model64: 0xe8ed0000e8f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x101e, match64: 0x00000000, model64: 0x4fee00004ff5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe8fd0000e907, model64: 0xe9070000e90e},
		modelTuple{type64: 0x2700000027, matchRI: 0x101f, match64: 0x00000000, model64: 0xb1740000b176},
		modelTuple{type64: 0x2700000027, matchRI: 0x1020, match64: 0x00000000, model64: 0xb0df0000b0e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1021, match64: 0x00000000, model64: 0xe90e0000e911},
		modelTuple{type64: 0x2700000027, matchRI: 0x1022, match64: 0x00000000, model64: 0xb0ea0000b0f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1023, match64: 0x00000000, model64: 0xb0fc0000b0ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1024, match64: 0x00000000, model64: 0xb10e0000b111},
		modelTuple{type64: 0x2700000027, matchRI: 0x1025, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1026, match64: 0x00000000, model64: 0xe9110000e919},
		modelTuple{type64: 0x2700000027, matchRI: 0x1027, match64: 0x00000000, model64: 0xe9190000e91c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1028, match64: 0x00000000, model64: 0xe91c0000e920},
		modelTuple{type64: 0x2700000027, matchRI: 0x1029, match64: 0x00000000, model64: 0xd5450000d548},
		modelTuple{type64: 0x2700000027, matchRI: 0x102a, match64: 0x00000000, model64: 0xe9200000e928},
		modelTuple{type64: 0x2700000027, matchRI: 0x102b, match64: 0x00000000, model64: 0xc39e0000c3a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe92b0000e932, model64: 0xe9320000e939},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9390000e940, model64: 0xe9400000e947},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9470000e94e, model64: 0xe94e0000e955},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9550000e95c, model64: 0xe95c0000e964},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9640000e96b, model64: 0xe96b0000e978},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9780000e97f, model64: 0xe97f0000e986},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9860000e98d, model64: 0xe98d0000e994},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9940000e99b, model64: 0xe99b0000e9a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9a20000e9a9, model64: 0xe9a90000e9b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x102d, match64: 0x00000000, model64: 0xe9b00000e9b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9b70000e9be, model64: 0xe9be0000e9c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x102e, match64: 0x00000000, model64: 0xe9c60000e9cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9cd0000e9d4, model64: 0xe9d40000e9db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9db0000e9e2, model64: 0xe9e20000e9e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9e90000e9f0, model64: 0xe9f00000e9f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9f70000e9fe, model64: 0xe9fe0000ea05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea050000ea0c, model64: 0xea0c0000ea12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea120000ea19, model64: 0xea190000ea1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea1f0000ea26, model64: 0xea260000ea2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea2c0000ea33, model64: 0xea330000ea39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea390000ea40, model64: 0xea400000ea47},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea470000ea4e, model64: 0xea4e0000ea54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea540000ea5b, model64: 0xea5b0000ea62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea620000ea69, model64: 0xea690000ea71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea710000ea78, model64: 0xea780000ea80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea800000ea87, model64: 0xea870000ea8e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea8e0000ea95, model64: 0xea950000ea9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xea9d0000eaa4, model64: 0xeaa40000eaad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeaad0000eab4, model64: 0xeab40000eaba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeaba0000eac1, model64: 0xeac10000eac8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeac80000eacf, model64: 0xeacf0000ead6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xead60000eadd, model64: 0xeadd0000eae3},
		modelTuple{type64: 0x2700000027, matchRI: 0x102f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1031, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1032, match64: 0x00000000, model64: 0xeaed0000eaf6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeaf60000eafc, model64: 0xeafc0000eb0c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1033, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb120000eb1a, model64: 0xeb1a0000eb1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1035, match64: 0x00000000, model64: 0xeb1c0000eb24},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xeb2e0000eb3e, model64: 0xeb3e0000eb4f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xeb4f0000eb5b, model64: 0xeb5b0000eb67},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1038, match64: 0x00000000, model64: 0xeb670000eb73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeb730000eb78, model64: 0xeb780000eb83},
		modelTuple{type64: 0x2700000027, matchRI: 0x1039, match64: 0x00000000, model64: 0xeb830000eb8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x103a, match64: 0x00000000, model64: 0xeb830000eb8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x103b, match64: 0x00000000, model64: 0xeb8b0000eb99},
		modelTuple{type64: 0x2700000027, matchRI: 0x103c, match64: 0x00000000, model64: 0xeb990000eba2},
		modelTuple{type64: 0x2700000027, matchRI: 0x103d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x103e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1040, match64: 0x00000000, model64: 0xeba60000ebb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1041, match64: 0x00000000, model64: 0xebb30000ebca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xebca0000ebdb, model64: 0xebdb0000ebeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1042, match64: 0x00000000, model64: 0xebeb0000ebf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1043, match64: 0x00000000, model64: 0xebf70000ec04},
		modelTuple{type64: 0x2700000027, matchRI: 0x1044, match64: 0x00000000, model64: 0xec040000ec0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec0f0000ec1a, model64: 0xec0f0000ec1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec1a0000ec28, model64: 0xec280000ec37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1045, match64: 0x00000000, model64: 0xec370000ec43},
		modelTuple{type64: 0x2700000027, matchRI: 0x1046, match64: 0x00000000, model64: 0xec430000ec4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec4e0000ec57, model64: 0xec570000ec60},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1047, match64: 0x00000000, model64: 0xec600000ec6b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1048, match64: 0x00000000, model64: 0xec6b0000ec77},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1049, match64: 0x00000000, model64: 0xec770000ec80},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x104a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xec800000ec8c, model64: 0xec8c0000ec98},
		modelTuple{type64: 0x2700000027, matchRI: 0x104c, match64: 0x00000000, model64: 0xec9c0000eca3},
		modelTuple{type64: 0x2700000027, matchRI: 0x104d, match64: 0x00000000, model64: 0xeca30000ecab},
		modelTuple{type64: 0x2700000027, matchRI: 0x104e, match64: 0x00000000, model64: 0xecab0000ecb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x104f, match64: 0x00000000, model64: 0xecb40000ecbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1050, match64: 0x00000000, model64: 0xecbd0000ecc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1051, match64: 0x00000000, model64: 0xecc60000eccd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1052, match64: 0x00000000, model64: 0xeccd0000ecd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1053, match64: 0x00000000, model64: 0xecd40000ecdb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1054, match64: 0x00000000, model64: 0xecdb0000ece3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1055, match64: 0x00000000, model64: 0xece30000ecef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1056, match64: 0x00000000, model64: 0xecef0000ecf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1057, match64: 0x00000000, model64: 0xecf70000ecfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1058, match64: 0x00000000, model64: 0xecfe0000ed0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1059, match64: 0x00000000, model64: 0xed0b0000ed14},
		modelTuple{type64: 0x2700000027, matchRI: 0x105a, match64: 0x00000000, model64: 0xed140000ed1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x105b, match64: 0x00000000, model64: 0xed1d0000ed2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x105c, match64: 0x00000000, model64: 0xed2b0000ed33},
		modelTuple{type64: 0x2700000027, matchRI: 0x105d, match64: 0x00000000, model64: 0x427000004273},
		modelTuple{type64: 0x2700000027, matchRI: 0x105e, match64: 0x00000000, model64: 0xed330000ed36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed360000ed40, model64: 0xed400000ed42},
		modelTuple{type64: 0x2700000027, matchRI: 0x105f, match64: 0x00000000, model64: 0xed420000ed45},
		modelTuple{type64: 0x2700000027, matchRI: 0x1060, match64: 0x00000000, model64: 0xed450000ed4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1061, match64: 0x00000000, model64: 0xed4c0000ed4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1062, match64: 0x00000000, model64: 0xed4e0000ed50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed500000ed59, model64: 0xed590000ed5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1063, match64: 0x00000000, model64: 0xe2cc0000e2ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1064, match64: 0x00000000, model64: 0xed400000ed42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1065, match64: 0x00000000, model64: 0xed4c0000ed4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1066, match64: 0x00000000, model64: 0xed5c0000ed60},
		modelTuple{type64: 0x2700000027, matchRI: 0x1067, match64: 0x00000000, model64: 0xed600000ed62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1068, match64: 0x00000000, model64: 0xed620000ed64},
		modelTuple{type64: 0x2700000027, matchRI: 0x1069, match64: 0x00000000, model64: 0xed640000ed6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x106a, match64: 0x00000000, model64: 0xed6c0000ed6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x106b, match64: 0x00000000, model64: 0xed6f0000ed72},
		modelTuple{type64: 0x2700000027, matchRI: 0x106c, match64: 0x00000000, model64: 0xed720000ed75},
		modelTuple{type64: 0x2700000027, matchRI: 0x106d, match64: 0x00000000, model64: 0xed750000ed78},
		modelTuple{type64: 0x2700000027, matchRI: 0x106e, match64: 0x00000000, model64: 0xed780000ed7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x106f, match64: 0x00000000, model64: 0xed7b0000ed82},
		modelTuple{type64: 0x2700000027, matchRI: 0x1070, match64: 0x00000000, model64: 0xed820000ed89},
		modelTuple{type64: 0x2700000027, matchRI: 0x1071, match64: 0x00000000, model64: 0xed890000ed90},
		modelTuple{type64: 0x2700000027, matchRI: 0x1072, match64: 0x00000000, model64: 0xed900000ed97},
		modelTuple{type64: 0x2700000027, matchRI: 0x1073, match64: 0x00000000, model64: 0xed970000ed9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1074, match64: 0x00000000, model64: 0xed9e0000eda6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1075, match64: 0x00000000, model64: 0xeda60000edad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1076, match64: 0x00000000, model64: 0xedad0000edb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1077, match64: 0x00000000, model64: 0xedb90000edc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1078, match64: 0x00000000, model64: 0xedc40000edc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1079, match64: 0x00000000, model64: 0xedc70000edc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x107a, match64: 0x00000000, model64: 0xedc90000edcc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xedcc0000edd3, model64: 0xedd30000eddb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeddb0000ede2, model64: 0xede20000ede9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xede90000edef, model64: 0xedef0000edf1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xedf10000edf7, model64: 0xedf70000edfe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xedfe0000ee04, model64: 0x5edf00005ee6},
		modelTuple{type64: 0x2700000027, matchRI: 0x107b, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x107c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x107d, match64: 0x00000000, model64: 0xee040000ee0e},
		modelTuple{type64: 0x2e8000002f5, matchRI: -0x0001, match64: 0xee0e0000ee19, model64: 0xee190000ee25},
		modelTuple{type64: 0x2e8000002f5, matchRI: -0x0001, match64: 0xee250000ee2f, model64: 0xee2f0000ee39},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x107e, match64: 0x00000000, model64: 0xee390000ee49},
		modelTuple{type64: 0x20d00000213, matchRI: 0x107f, match64: 0x00000000, model64: 0xee490000ee51},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1080, match64: 0x00000000, model64: 0xee510000ee58},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1081, match64: 0x00000000, model64: 0xee580000ee5c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1082, match64: 0x00000000, model64: 0xee5c0000ee5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1083, match64: 0x00000000, model64: 0xee5f0000ee6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1084, match64: 0x00000000, model64: 0xee6b0000ee72},
		modelTuple{type64: 0x2700000027, matchRI: 0x1085, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1086, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xee780000ee7e, model64: 0xee7e0000ee89},
		modelTuple{type64: 0x2700000027, matchRI: 0x1088, match64: 0x00000000, model64: 0xee890000ee91},
		modelTuple{type64: 0x2700000027, matchRI: 0x1089, match64: 0x00000000, model64: 0xee910000ee9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x108a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x108d, match64: 0x00000000, model64: 0xeea50000eead},
		modelTuple{type64: 0x2700000027, matchRI: 0x108e, match64: 0x00000000, model64: 0xeead0000eeb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x108f, match64: 0x00000000, model64: 0xeeb60000eebb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1090, match64: 0x00000000, model64: 0xeebb0000eec3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1091, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeec30000eecd, model64: 0xeecd0000eed4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1092, match64: 0x00000000, model64: 0xeed40000eedc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1093, match64: 0x00000000, model64: 0xeedc0000eee7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1094, match64: 0x00000000, model64: 0xeee70000eeee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1095, match64: 0x00000000, model64: 0xeeee0000eef2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeef20000eefe, model64: 0x613c00006142},
		modelTuple{type64: 0x2700000027, matchRI: 0x1096, match64: 0x00000000, model64: 0xeefe0000ef06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1097, match64: 0x00000000, model64: 0xef060000ef0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1098, match64: 0x00000000, model64: 0xef060000ef0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1099, match64: 0x00000000, model64: 0xef0c0000ef11},
		modelTuple{type64: 0x2700000027, matchRI: 0x109a, match64: 0x00000000, model64: 0xef110000ef19},
		modelTuple{type64: 0x2700000027, matchRI: 0x109b, match64: 0x00000000, model64: 0xef110000ef19},
		modelTuple{type64: 0x2700000027, matchRI: 0x109c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef250000ef2f, model64: 0xef2f0000ef39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef390000ef42, model64: 0xef420000ef4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef4b0000ef53, model64: 0xef530000ef58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef580000ef61, model64: 0xef610000ef67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef670000ef6f, model64: 0xef6f0000ef74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef740000ef7b, model64: 0xef7b0000ef7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef7e0000ef8c, model64: 0xef8c0000ef97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef970000efa5, model64: 0xefa50000efb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x109e, match64: 0x00000000, model64: 0xefb30000efc0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xefc00000efcb, model64: 0xefcb0000efd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xefd30000efe1, model64: 0xefe10000efec},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xefec0000eff7, model64: 0xeff70000efff},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xefff0000f005, model64: 0xf0050000f008},
		modelTuple{type64: 0x2700000027, matchRI: 0x109f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a1, match64: 0x00000000, model64: 0xf00e0000f015},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0150000f01c, model64: 0xf01c0000f023},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a3, match64: 0x00000000, model64: 0xf0230000f02a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf02a0000f036, model64: 0xf0360000f042},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0420000f04c, model64: 0xf04c0000f056},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a4, match64: 0x00000000, model64: 0xf0560000f05e},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a5, match64: 0x00000000, model64: 0xf05e0000f066},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a6, match64: 0x00000000, model64: 0xf0660000f071},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a7, match64: 0x00000000, model64: 0xf0710000f079},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a8, match64: 0x00000000, model64: 0xf0790000f082},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a9, match64: 0x00000000, model64: 0xf0820000f089},
		modelTuple{type64: 0x2700000027, matchRI: 0x10aa, match64: 0x00000000, model64: 0xf0890000f091},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ab, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf0910000f09c, model64: 0xf09c0000f0a8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ad, match64: 0x00000000, model64: 0xf0a80000f0b1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf0b80000f0c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b0, match64: 0x00000000, model64: 0xf0c90000f0d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b1, match64: 0x00000000, model64: 0xf0d30000f0e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b3, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xdc680000dc6d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf0fa0000f100},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xa01b0000a030, matchRI: -0x0001, match64: 0xf10c0000f11d, model64: 0xf11d0000f128},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1280000f12e, model64: 0xf1280000f12e},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x10bb, match64: 0x00000000, model64: 0xf1340000f138},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10bc, match64: 0x00000000, model64: 0xf1380000f145},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10bd, match64: 0x00000000, model64: 0xf1450000f152},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10be, match64: 0x00000000, model64: 0xf1520000f15f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10bf, match64: 0x00000000, model64: 0xf15f0000f16d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf16d0000f175, model64: 0xf1750000f17a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf17a0000f180, model64: 0xf1800000f18e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10c0, match64: 0x00000000, model64: 0xf18e0000f19a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10c1, match64: 0x00000000, model64: 0xf19a0000f1a1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10c2, match64: 0x00000000, model64: 0xf1a10000f1ab},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10c3, match64: 0x00000000, model64: 0xf1ab0000f1b6},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf1b60000f1be, model64: 0xf1be0000f1ca},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf1ca0000f1d2, model64: 0xf1d20000f1d8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10c4, match64: 0x00000000, model64: 0xf1d80000f1e8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf1e80000f1f0, model64: 0xf1f00000f1fb},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf1fb0000f203, model64: 0xf2030000f20f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf20f0000f217, model64: 0xf2170000f227},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10c5, match64: 0x00000000, model64: 0xf2270000f232},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf2320000f23a, model64: 0xf23a0000f244},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf2440000f251, model64: 0xf2510000f25d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10c6, match64: 0x00000000, model64: 0xf25d0000f266},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10c7, match64: 0x00000000, model64: 0xf2660000f26f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10c8, match64: 0x00000000, model64: 0xf26f0000f275},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10c9, match64: 0x00000000, model64: 0xf2750000f280},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ca, match64: 0x00000000, model64: 0xf2800000f287},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10cb, match64: 0x00000000, model64: 0xf2870000f28d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf28d0000f295, model64: 0xf2950000f2a0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10cc, match64: 0x00000000, model64: 0xf2a00000f2ac},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10cd, match64: 0x00000000, model64: 0xf2ac0000f2b6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ce, match64: 0x00000000, model64: 0xf2b60000f2c1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10cf, match64: 0x00000000, model64: 0xf2c10000f2c9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d0, match64: 0x00000000, model64: 0xf2c90000f2d0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d1, match64: 0x00000000, model64: 0xf2d00000f2d7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d2, match64: 0x00000000, model64: 0xf2d70000f2de},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d3, match64: 0x00000000, model64: 0xf2de0000f2e9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d4, match64: 0x00000000, model64: 0xf2e90000f2f0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d5, match64: 0x00000000, model64: 0xf2f00000f303},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d6, match64: 0x00000000, model64: 0xf3030000f312},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d7, match64: 0x00000000, model64: 0xf3120000f31e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d8, match64: 0x00000000, model64: 0xf31e0000f329},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10d9, match64: 0x00000000, model64: 0xf3290000f33c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10da, match64: 0x00000000, model64: 0xf33c0000f34b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10db, match64: 0x00000000, model64: 0xf34b0000f359},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10dc, match64: 0x00000000, model64: 0xf3590000f35f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10dd, match64: 0x00000000, model64: 0xf35f0000f365},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf3650000f36c, model64: 0xf36c0000f37b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10de, match64: 0x00000000, model64: 0xf37b0000f380},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf3800000f387, model64: 0xf3870000f38d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf38d0000f393, model64: 0xf3930000f398},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10df, match64: 0x00000000, model64: 0xf3980000f3a8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e0, match64: 0x00000000, model64: 0xf3a80000f3b7},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf3b70000f3be, model64: 0xf3be0000f3c9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf3c90000f3d7, model64: 0xf3d70000f3e1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e1, match64: 0x00000000, model64: 0xf3e10000f3f5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e2, match64: 0x00000000, model64: 0xf3f50000f404},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e3, match64: 0x00000000, model64: 0xf2c90000f2d0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e4, match64: 0x00000000, model64: 0xf4040000f40a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e5, match64: 0x00000000, model64: 0xf40a0000f418},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e6, match64: 0x00000000, model64: 0xf4180000f426},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e7, match64: 0x00000000, model64: 0xf4260000f437},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e8, match64: 0x00000000, model64: 0xf4370000f44e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10e9, match64: 0x00000000, model64: 0xf44e0000f461},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ea, match64: 0x00000000, model64: 0xf4610000f473},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10eb, match64: 0x00000000, model64: 0xf4730000f480},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ec, match64: 0x00000000, model64: 0xf4800000f48a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ed, match64: 0x00000000, model64: 0xf48a0000f496},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf4960000f49e, model64: 0xf49e0000f4ab},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ee, match64: 0x00000000, model64: 0xf4ab0000f4ba},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ef, match64: 0x00000000, model64: 0xf4ba0000f4c8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f0, match64: 0x00000000, model64: 0xf4c80000f4d1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf4d10000f4d9, model64: 0xf4d90000f4f5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf4f50000f4fc, model64: 0xf4fc0000f516},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf5160000f51f, model64: 0xf51f0000f531},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f1, match64: 0x00000000, model64: 0xf5310000f53e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f2, match64: 0x00000000, model64: 0xf53e0000f548},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f3, match64: 0x00000000, model64: 0xf5480000f55a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f4, match64: 0x00000000, model64: 0xf55a0000f56b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f5, match64: 0x00000000, model64: 0xf56b0000f576},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f6, match64: 0x00000000, model64: 0xf5760000f57e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf57e0000f586, model64: 0xf5860000f58d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f7, match64: 0x00000000, model64: 0xf58d0000f59a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf59a0000f5a2, model64: 0xf5a20000f5ad},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf5ad0000f5b5, model64: 0xf2800000f287},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f8, match64: 0x00000000, model64: 0x5d1c00005d1f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10f9, match64: 0x00000000, model64: 0xf5b50000f5b8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10fa, match64: 0x00000000, model64: 0xf5b80000f5c1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10fb, match64: 0x00000000, model64: 0xf53e0000f548},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf5c10000f5c9, model64: 0xf5c90000f5d1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf5d10000f5d9, model64: 0xf4ba0000f4c8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10fc, match64: 0x00000000, model64: 0xf5d90000f5e6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10fd, match64: 0x00000000, model64: 0xf5e60000f5f2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10fe, match64: 0x00000000, model64: 0xf5f20000f5f8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x10ff, match64: 0x00000000, model64: 0xf5f80000f606},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1100, match64: 0x00000000, model64: 0xf6060000f614},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1101, match64: 0x00000000, model64: 0xf6140000f61e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1102, match64: 0x00000000, model64: 0xf61e0000f629},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1103, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6290000f62f, model64: 0xf62f0000f639},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6390000f63f, model64: 0xf63f0000f649},
		modelTuple{type64: 0x2700000027, matchRI: 0x1104, match64: 0x00000000, model64: 0xf6490000f64c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1105, match64: 0x00000000, model64: 0xe52a0000e52c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1106, match64: 0x00000000, model64: 0x154500001547},
		modelTuple{type64: 0x2700000027, matchRI: 0x1107, match64: 0x00000000, model64: 0xf64c0000f64f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1108, match64: 0x00000000, model64: 0x155c0000155e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1109, match64: 0x00000000, model64: 0xf64f0000f651},
		modelTuple{type64: 0x2700000027, matchRI: 0x110a, match64: 0x00000000, model64: 0xed4c0000ed4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3860000038d, model64: 0x3860000038d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6510000f656, model64: 0xf6560000f65e},
		modelTuple{type64: 0x2700000027, matchRI: 0x110b, match64: 0x00000000, model64: 0xf65e0000f664},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6640000f669, model64: 0xf6690000f673},
		modelTuple{type64: 0x2700000027, matchRI: 0x110c, match64: 0x00000000, model64: 0xf6730000f679},
		modelTuple{type64: 0x2700000027, matchRI: 0x110d, match64: 0x00000000, model64: 0x5da900005dab},
		modelTuple{type64: 0x2700000027, matchRI: 0x110e, match64: 0x00000000, model64: 0xf6790000f680},
		modelTuple{type64: 0x2700000027, matchRI: 0x110f, match64: 0x00000000, model64: 0xf6800000f688},
		modelTuple{type64: 0x2700000027, matchRI: 0x1110, match64: 0x00000000, model64: 0xf6880000f68f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1111, match64: 0x00000000, model64: 0xe3f60000e3f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1112, match64: 0x00000000, model64: 0xf68f0000f696},
		modelTuple{type64: 0x2700000027, matchRI: 0x1113, match64: 0x00000000, model64: 0xf6960000f69c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1114, match64: 0x00000000, model64: 0xf69c0000f6a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1115, match64: 0x00000000, model64: 0xf6a40000f6ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1116, match64: 0x00000000, model64: 0xf6ab0000f6b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1117, match64: 0x00000000, model64: 0xe2b00000e2b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1118, match64: 0x00000000, model64: 0xf6b20000f6bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1119, match64: 0x00000000, model64: 0xf6bb0000f6c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x111a, match64: 0x00000000, model64: 0xf6c70000f6ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x111b, match64: 0x00000000, model64: 0xf6ce0000f6d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x111c, match64: 0x00000000, model64: 0xf6d50000f6db},
		modelTuple{type64: 0x2700000027, matchRI: 0x111d, match64: 0x00000000, model64: 0xf6db0000f6e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x111e, match64: 0x00000000, model64: 0xf6e20000f6e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x111f, match64: 0x00000000, model64: 0xf6e90000f6f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1120, match64: 0x00000000, model64: 0xf6f50000f6fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1121, match64: 0x00000000, model64: 0xf6fc0000f709},
		modelTuple{type64: 0x2700000027, matchRI: 0x1122, match64: 0x00000000, model64: 0xf7090000f712},
		modelTuple{type64: 0x2700000027, matchRI: 0x1123, match64: 0x00000000, model64: 0xf7120000f71c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1124, match64: 0x00000000, model64: 0xf71c0000f728},
		modelTuple{type64: 0x2700000027, matchRI: 0x1125, match64: 0x00000000, model64: 0x903100009033},
		modelTuple{type64: 0x2700000027, matchRI: 0x1126, match64: 0x00000000, model64: 0xf7280000f72a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1127, match64: 0x00000000, model64: 0xe31e0000e321},
		modelTuple{type64: 0x2700000027, matchRI: 0x1128, match64: 0x00000000, model64: 0x99d8000099da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1129, match64: 0x00000000, model64: 0xf72a0000f72d},
		modelTuple{type64: 0x2700000027, matchRI: 0x112a, match64: 0x00000000, model64: 0xf72d0000f734},
		modelTuple{type64: 0x2700000027, matchRI: 0x112b, match64: 0x00000000, model64: 0xf7340000f73c},
		modelTuple{type64: 0x2700000027, matchRI: 0x112c, match64: 0x00000000, model64: 0xf73c0000f744},
		modelTuple{type64: 0x2700000027, matchRI: 0x112d, match64: 0x00000000, model64: 0xf7440000f751},
		modelTuple{type64: 0x2700000027, matchRI: 0x112e, match64: 0x00000000, model64: 0xf7510000f758},
		modelTuple{type64: 0x2700000027, matchRI: 0x112f, match64: 0x00000000, model64: 0xf7580000f75e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1130, match64: 0x00000000, model64: 0xf75e0000f764},
		modelTuple{type64: 0x2700000027, matchRI: 0x1131, match64: 0x00000000, model64: 0xf7640000f76d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1132, match64: 0x00000000, model64: 0xf76d0000f774},
		modelTuple{type64: 0x2700000027, matchRI: 0x1133, match64: 0x00000000, model64: 0xf7740000f780},
		modelTuple{type64: 0x2700000027, matchRI: 0x1134, match64: 0x00000000, model64: 0xf7800000f783},
		modelTuple{type64: 0x2700000027, matchRI: 0x1135, match64: 0x00000000, model64: 0xf7830000f785},
		modelTuple{type64: 0x2700000027, matchRI: 0x1136, match64: 0x00000000, model64: 0xf7850000f78b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1137, match64: 0x00000000, model64: 0xf78b0000f791},
		modelTuple{type64: 0x2700000027, matchRI: 0x1138, match64: 0x00000000, model64: 0xf7910000f79a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1139, match64: 0x00000000, model64: 0xf79a0000f7a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x113a, match64: 0x00000000, model64: 0x8fb200008fb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x113b, match64: 0x00000000, model64: 0xf7a20000f7ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x113c, match64: 0x00000000, model64: 0x15180000151a},
		modelTuple{type64: 0x2700000027, matchRI: 0x113d, match64: 0x00000000, model64: 0xf7ab0000f7b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x113e, match64: 0x00000000, model64: 0xf7b10000f7b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x113f, match64: 0x00000000, model64: 0xf7b50000f7be},
		modelTuple{type64: 0x2700000027, matchRI: 0x1140, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1141, match64: 0x00000000, model64: 0xf7be0000f7c8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1142, match64: 0x00000000, model64: 0xf7c80000f7d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7d80000f7e0, model64: 0xf7e00000f7e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7e30000f7eb, model64: 0xf7eb0000f7f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7f00000f7fe, model64: 0xf7fe0000f805},
		modelTuple{type64: 0x2700000027, matchRI: 0x1143, match64: 0x00000000, model64: 0xe2cc0000e2ce},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0xf8050000f80d, model64: 0xf80d0000f818},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x1144, match64: 0x00000000, model64: 0xf8180000f82a},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x1145, match64: 0x00000000, model64: 0xf82a0000f83c},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x1146, match64: 0x00000000, model64: 0xf83c0000f84b},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x1147, match64: 0x00000000, model64: 0xf84b0000f860},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1148, match64: 0x00000000, model64: 0xcf900000cff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1149, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x114a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8660000f86f, model64: 0xf86f0000f879},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8790000f883, model64: 0xf8830000f88e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf88e0000f897, model64: 0xf8970000f8a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8a30000f8b0, model64: 0xf8a30000f8b0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x114c, match64: 0x00000000, model64: 0xf8b00000f8bc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x114d, match64: 0x00000000, model64: 0xf8bc0000f8c5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xf8c50000f8cd, model64: 0xf8cd0000f8d9},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x114f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8e00000f8e5, model64: 0xf8e00000f8e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1150, match64: 0x00000000, model64: 0xf8e50000f8ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1151, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf8f10000f8f9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1154, match64: 0x00000000, model64: 0x427000004273},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8ff0000f903, model64: 0xf9030000f907},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9070000f90b, model64: 0xf90b0000f910},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9100000f914, model64: 0xf9140000f91b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf91b0000f91f, model64: 0xf91f0000f925},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9250000f92e, model64: 0xf92e0000f937},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9370000f93b, model64: 0xf93b0000f943},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9430000f947, model64: 0xf9470000f94d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf94d0000f951, model64: 0xf9510000f958},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9580000f95c, model64: 0xf95c0000f961},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9610000f965, model64: 0xf9650000f96c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1155, match64: 0x00000000, model64: 0xf96c0000f975},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9750000f980, model64: 0xf9800000f98b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1156, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9930000f99b, model64: 0xf99b0000f9ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9ac0000f9b4, model64: 0xf9b40000f9ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9ba0000f9c2, model64: 0xf9c20000f9d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9d10000f9d9, model64: 0xf9d90000f9e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9e40000f9ec, model64: 0xf9ec0000f9f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9f90000fa01, model64: 0xfa010000fa1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa1a0000fa22, model64: 0xfa220000fa31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa310000fa39, model64: 0xfa390000fa43},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa430000fa4b, model64: 0xfa4b0000fa58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa580000fa60, model64: 0xfa600000fa6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1158, match64: 0x00000000, model64: 0xfa6f0000fa7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa7b0000fa83, model64: 0xfa830000fa91},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa910000fa99, model64: 0xfa990000faa5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfaa50000faad, model64: 0xfaad0000fabc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfabc0000fac4, model64: 0xfac40000fad5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfad50000fadd, model64: 0xfadd0000fae6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfae60000faf0, model64: 0xfaf00000fafd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfafd0000fb07, model64: 0xfb070000fb1c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb1c0000fb26, model64: 0xfb260000fb32},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb320000fb3c, model64: 0xfb3c0000fb56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb560000fb5e, model64: 0xfb5e0000fb64},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb640000fb6c, model64: 0xfb6c0000fb74},
		modelTuple{type64: 0x2700000027, matchRI: 0x1159, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3860000038d},
		modelTuple{type64: 0x2700000027, matchRI: 0x115d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x115e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xfb9f0000fba4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1161, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1162, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xfbaf0000fbb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1165, match64: 0x00000000, model64: 0xfbbd0000fbc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1166, match64: 0x00000000, model64: 0x42830000428a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1167, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1168, match64: 0x00000000, model64: 0xfbc50000fbce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1169, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x116a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x116c, match64: 0x00000000, model64: 0xfbde0000fbea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfbea0000fbf7, model64: 0xfbea0000fbf7},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0xfbf70000fc05, model64: 0xfbf70000fc05},
		modelTuple{type64: 0x2700000027, matchRI: 0x116e, match64: 0x00000000, model64: 0xfc0c0000fc15},
		modelTuple{type64: 0x2700000027, matchRI: 0x116f, match64: 0x00000000, model64: 0xfc150000fc21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1170, match64: 0x00000000, model64: 0xfc210000fc33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfc330000fc49, model64: 0xfc490000fc57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfc570000fc60, model64: 0xfc600000fc6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1171, match64: 0x00000000, model64: 0xfc6a0000fc7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfc7b0000fc8c, model64: 0xfc8c0000fc9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfc9e0000fca7, model64: 0xfca70000fcb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1172, match64: 0x00000000, model64: 0xfcb60000fcc3},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1173, match64: 0x00000000, model64: 0xfcc30000fccb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1174, match64: 0x00000000, model64: 0xfccb0000fcd7},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1175, match64: 0x00000000, model64: 0xfcd70000fce1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1176, match64: 0x00000000, model64: 0xfce10000fcef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1177, match64: 0x00000000, model64: 0xfce10000fcef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1178, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfcef0000fcf8, model64: 0xfcef0000fcf8},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1179, match64: 0x00000000, model64: 0xfcf80000fd00},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x117a, match64: 0x00000000, model64: 0xfd000000fd0e},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x117b, match64: 0x00000000, model64: 0xfd0e0000fd17},
		modelTuple{type64: 0x2700000027, matchRI: 0x117c, match64: 0x00000000, model64: 0xfd170000fd24},
		modelTuple{type64: 0x2700000027, matchRI: 0x117d, match64: 0x00000000, model64: 0xfd240000fd2d},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xfd2d0000fd34, model64: 0xfd2d0000fd34},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xfd340000fd3b, model64: 0xfd340000fd3b},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xfd3b0000fd43, model64: 0xfd3b0000fd43},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xfd430000fd4b, model64: 0xfd430000fd4b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x117e, match64: 0x00000000, model64: 0xfd4b0000fd55},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x117f, match64: 0x00000000, model64: 0xfd550000fd5d},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1180, match64: 0x00000000, model64: 0xfd5d0000fd65},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1181, match64: 0x00000000, model64: 0xfd650000fd6f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1182, match64: 0x00000000, model64: 0xfd6f0000fd76},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1183, match64: 0x00000000, model64: 0xfd760000fd7f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1184, match64: 0x00000000, model64: 0xfd7f0000fd86},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1185, match64: 0x00000000, model64: 0xfd860000fd8f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1186, match64: 0x00000000, model64: 0xfd8f0000fd95},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xfd950000fd9c, model64: 0xfd950000fd9c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1187, match64: 0x00000000, model64: 0xfd9c0000fda2},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1188, match64: 0x00000000, model64: 0xfda20000fdaa},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1189, match64: 0x00000000, model64: 0xfdaa0000fdb6},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x118a, match64: 0x00000000, model64: 0xfdb60000fdbf},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x118b, match64: 0x00000000, model64: 0xfdbf0000fdc8},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x118c, match64: 0x00000000, model64: 0xfdc80000fdcf},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x118d, match64: 0x00000000, model64: 0xfdcf0000fddb},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x118e, match64: 0x00000000, model64: 0xfddb0000fde3},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x118f, match64: 0x00000000, model64: 0xfd5d0000fd65},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xfde30000fdef, model64: 0xfdef0000fdfc},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0xfdfc0000fe06, model64: 0xfe060000fe11},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1190, match64: 0x00000000, model64: 0xfe110000fe16},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1195, match64: 0x00000000, model64: 0x46a2000046a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1196, match64: 0x00000000, model64: 0xfe2e0000fe35},
		modelTuple{type64: 0x2700000027, matchRI: 0x1197, match64: 0x00000000, model64: 0xfe350000fe38},
		modelTuple{type64: 0x2700000027, matchRI: 0x1198, match64: 0x00000000, model64: 0xfe380000fe3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x119a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x119b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x119e, match64: 0x00000000, model64: 0x460f00004616},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe4f0000fe55, model64: 0xfe550000fe5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x119f, match64: 0x00000000, model64: 0xfe5c0000fe62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe620000fe6b, model64: 0xfe6b0000fe75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe7b0000fe82, model64: 0xfe820000fe89},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a1, match64: 0x00000000, model64: 0xfe890000fe92},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a2, match64: 0x00000000, model64: 0xfe920000fe9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a3, match64: 0x00000000, model64: 0xfe9c0000fea5},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a4, match64: 0x00000000, model64: 0xfea50000feaf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfeaf0000feb3, model64: 0xfeb30000feb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfeb80000febe, model64: 0xfeb80000febe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfebe0000fec4, model64: 0xfebe0000fec4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfec40000fec9, model64: 0xfec90000fecf},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a5, match64: 0x00000000, model64: 0xfecf0000fed8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfede0000fee7, model64: 0xfee70000feec},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11a7, match64: 0x00000000, model64: 0xfeec0000fef4},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x5db000005e5, matchRI: -0x0001, match64: 0xfefd0000ff04, model64: 0xff040000ff0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff0f0000ff15, model64: 0xcef80000cefb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff150000ff1b, model64: 0xff1b0000ff1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff1f0000ff25, model64: 0xff250000ff2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff2a0000ff30, model64: 0xff300000ff37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff370000ff3d, model64: 0xff3d0000ff46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff460000ff4c, model64: 0xff4c0000ff50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff500000ff56, model64: 0xff560000ff5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff5e0000ff64, model64: 0xe1d30000e1d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff640000ff6a, model64: 0xff6a0000ff73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff730000ff79, model64: 0xff790000ff7d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff7d0000ff83, model64: 0xff830000ff8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff8f0000ff95, model64: 0xff950000ff9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xff9a0000ffa0, model64: 0xffa00000ffa7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffa70000ffad, model64: 0xffad0000ffb2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffb20000ffba, model64: 0xffba0000ffc1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffc10000ffc8, model64: 0xffc80000ffcf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffcf0000ffd5, model64: 0xffd50000ffe0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffe00000ffe6, model64: 0xbcb70000bcbd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffe60000ffec, model64: 0xffec0000fff5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfff50000fffd, model64: 0xfffd00010001},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1000100010007, model64: 0x100070001000f},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ab, match64: 0x00000000, model64: 0x1000f00010018},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100180001001e, model64: 0x1001e00010026},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ac, match64: 0x00000000, model64: 0x1002600010029},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ad, match64: 0x00000000, model64: 0xed330000ed36},
		modelTuple{type64: 0x2700000027, matchRI: 0x11af, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1002e00010033, model64: 0x100330001003d},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b0, match64: 0x00000000, model64: 0x1003d00010048},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x11b1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b6, match64: 0x00000000, model64: 0x1005c00010063},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100630001006b, model64: 0x100630001006b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1006b00010074, model64: 0x1006b00010074},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b7, match64: 0x00000000, model64: 0x1007400010079},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b8, match64: 0x00000000, model64: 0x19ab000019ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x11bb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11bc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11bf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c0, match64: 0x00000000, model64: 0x1008800010096},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c6, match64: 0x00000000, model64: 0x100a4000100ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cb, match64: 0x00000000, model64: 0x100b4000100c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cc, match64: 0x00000000, model64: 0x100c0000100ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cd, match64: 0x00000000, model64: 0x100ca000100d5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11ce, match64: 0x00000000, model64: 0x100d5000100dd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11cf, match64: 0x00000000, model64: 0x100dd000100eb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11d0, match64: 0x00000000, model64: 0x100eb000100fa},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11d1, match64: 0x00000000, model64: 0x100fa00010104},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11d2, match64: 0x00000000, model64: 0x1010400010115},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11d3, match64: 0x00000000, model64: 0x1011500010125},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11d4, match64: 0x00000000, model64: 0x1012500010134},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d5, match64: 0x00000000, model64: 0x101340001013c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d6, match64: 0x00000000, model64: 0x1013c0001014b},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d7, match64: 0x00000000, model64: 0x1014b00010158},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d8, match64: 0x00000000, model64: 0x1015800010160},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d9, match64: 0x00000000, model64: 0x1016000010168},
		modelTuple{type64: 0x2700000027, matchRI: 0x11da, match64: 0x00000000, model64: 0x1016800010173},
		modelTuple{type64: 0x2700000027, matchRI: 0x11db, match64: 0x00000000, model64: 0x101730001017f},
		modelTuple{type64: 0x2700000027, matchRI: 0x11dc, match64: 0x00000000, model64: 0x1017f0001018b},
		modelTuple{type64: 0x2700000027, matchRI: 0x11dd, match64: 0x00000000, model64: 0x1018b0001019a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11de, match64: 0x00000000, model64: 0x1019a000101a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x11df, match64: 0x00000000, model64: 0x101a4000101ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e0, match64: 0x00000000, model64: 0x101ac000101bf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11e1, match64: 0x00000000, model64: 0x101bf000101c9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11e2, match64: 0x00000000, model64: 0x101c9000101d5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11e3, match64: 0x00000000, model64: 0x101d5000101e3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11e4, match64: 0x00000000, model64: 0x101e3000101e9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11e5, match64: 0x00000000, model64: 0x101e9000101f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e6, match64: 0x00000000, model64: 0x101f200010200},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e7, match64: 0x00000000, model64: 0x102000001020b},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e8, match64: 0x00000000, model64: 0x1020b00010213},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11e9, match64: 0x00000000, model64: 0x102130001021b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11ea, match64: 0x00000000, model64: 0x1021b0001022a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11eb, match64: 0x00000000, model64: 0x1022a00010232},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ec, match64: 0x00000000, model64: 0x102320001023a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ed, match64: 0x00000000, model64: 0x1023a0001023c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ee, match64: 0x00000000, model64: 0x1023c00010245},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ef, match64: 0x00000000, model64: 0x102450001024a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f0, match64: 0x00000000, model64: 0x1024a00010253},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f1, match64: 0x00000000, model64: 0x1025300010259},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f2, match64: 0x00000000, model64: 0x1025900010262},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f3, match64: 0x00000000, model64: 0x1026200010269},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f4, match64: 0x00000000, model64: 0x1026900010270},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11f5, match64: 0x00000000, model64: 0x102700001027d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11f6, match64: 0x00000000, model64: 0x1027d00010285},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f7, match64: 0x00000000, model64: 0x7fc000007fca},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f8, match64: 0x00000000, model64: 0x102850001028c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f9, match64: 0x00000000, model64: 0x1028c00010291},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11fa, match64: 0x00000000, model64: 0x1029100010299},
		modelTuple{type64: 0x20d00000213, matchRI: 0x11fb, match64: 0x00000000, model64: 0x10299000102a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fc, match64: 0x00000000, model64: 0x102a3000102a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fd, match64: 0x00000000, model64: 0x943a0000943f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x11fe, match64: 0x00000000, model64: 0x102a8000102b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ff, match64: 0x00000000, model64: 0x102b1000102b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1200, match64: 0x00000000, model64: 0x102b6000102bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1201, match64: 0x00000000, model64: 0x102bd000102c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1202, match64: 0x00000000, model64: 0x102c5000102cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1203, match64: 0x00000000, model64: 0x102cb000102da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1204, match64: 0x00000000, model64: 0x102da000102ee},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1205, match64: 0x00000000, model64: 0x102ee000102ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1206, match64: 0x00000000, model64: 0x102ff00010305},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x120a, match64: 0x00000000, model64: 0x103120001031a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa40b0000a417, model64: 0xa40b0000a417},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1031d00010328, model64: 0x1031d00010328},
		modelTuple{type64: 0x2700000027, matchRI: 0x120c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x120d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x120e, match64: 0x00000000, model64: 0x1032800010335},
		modelTuple{type64: 0x2700000027, matchRI: 0x120f, match64: 0x00000000, model64: 0x1033500010344},
		modelTuple{type64: 0x2700000027, matchRI: 0x1210, match64: 0x00000000, model64: 0x1034400010353},
		modelTuple{type64: 0x2700000027, matchRI: 0x1211, match64: 0x00000000, model64: 0x1035300010361},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x103610001036b, model64: 0x1036b00010375},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1037500010380, model64: 0x103800001038b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1038b00010394, model64: 0x1038b00010394},
		modelTuple{type64: 0x2700000027, matchRI: 0x1212, match64: 0x00000000, model64: 0x10394000103a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1213, match64: 0x00000000, model64: 0x103a0000103af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1214, match64: 0x00000000, model64: 0x103af000103bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1215, match64: 0x00000000, model64: 0x103bc000103ca},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1216, match64: 0x00000000, model64: 0x103ca000103d7},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1217, match64: 0x00000000, model64: 0x103d7000103dc},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x103dc000103e4, model64: 0x103e4000103f6},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1218, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x121a, match64: 0x00000000, model64: 0x103f900010401},
		modelTuple{type64: 0x2700000027, matchRI: 0x121b, match64: 0x00000000, model64: 0x104010001040d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1040d00010417, model64: 0x1041700010421},
		modelTuple{type64: 0x2700000027, matchRI: 0x121c, match64: 0x00000000, model64: 0x104210001042e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1042e00010437, model64: 0x104370001043d},
		modelTuple{type64: 0x2700000027, matchRI: 0x121d, match64: 0x00000000, model64: 0x1043d00010443},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1044f00010458},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1045e00010468},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1046c00010475, model64: 0x104750001047f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1220, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104870001048d, model64: 0x1048d00010494},
		modelTuple{type64: 0x2700000027, matchRI: 0x1222, match64: 0x00000000, model64: 0x1049400010499},
		modelTuple{type64: 0x2700000027, matchRI: 0x1224, match64: 0x00000000, model64: 0x1049f000104a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1225, match64: 0x00000000, model64: 0x104a7000104b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1227, match64: 0x00000000, model64: 0x104ba000104be},
		modelTuple{type64: 0x2700000027, matchRI: 0x1228, match64: 0x00000000, model64: 0x104be000104c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1229, match64: 0x00000000, model64: 0x104c1000104cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x122a, match64: 0x00000000, model64: 0x104cd000104d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x122b, match64: 0x00000000, model64: 0x104d5000104dd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x122c, match64: 0x00000000, model64: 0x104dd000104e7},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x104e7000104ee, model64: 0x104ee000104fa},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x104fa00010501, model64: 0x1050100010508},
		modelTuple{type64: 0x20d00000213, matchRI: 0x122d, match64: 0x00000000, model64: 0x105080001050d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x122e, match64: 0x00000000, model64: 0x105080001050d},
		modelTuple{type64: 0x2700000027, matchRI: 0x122f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1230, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1231, match64: 0x00000000, model64: 0x1050d00010515},
		modelTuple{type64: 0x2700000027, matchRI: 0x1232, match64: 0x00000000, model64: 0x1050d00010515},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1236, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1237, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1239, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105340001053c, model64: 0x1053c00010544},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105440001054c, model64: 0x1054c00010554},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105540001055c, model64: 0x1055c00010562},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105620001056a, model64: 0x1056a00010571},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1057100010579, model64: 0x1057900010584},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105840001058c, model64: 0x1058c00010593},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105930001059b, model64: 0x1059b000105a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105a2000105aa, model64: 0x105aa000105b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x123a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x123e, match64: 0x00000000, model64: 0x105c6000105cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x123f, match64: 0x00000000, model64: 0x105c6000105cb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1242, match64: 0x00000000, model64: 0x105d7000105dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1243, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1245, match64: 0x00000000, model64: 0x105e3000105ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1246, match64: 0x00000000, model64: 0x105ef000105f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1247, match64: 0x00000000, model64: 0x105f6000105fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1248, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1249, match64: 0x00000000, model64: 0x105fb00010604},
		modelTuple{type64: 0x20d00000213, matchRI: 0x124a, match64: 0x00000000, model64: 0x106040001060f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x124b, match64: 0x00000000, model64: 0x1060f00010618},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1061800010622, model64: 0x106220001062e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x124c, match64: 0x00000000, model64: 0x1062e00010639},
		modelTuple{type64: 0x20d00000213, matchRI: 0x124d, match64: 0x00000000, model64: 0x3fb600003fbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x124e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x106410001064f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1251, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1252, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1066a00010678, model64: 0x106780001067f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1255, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1256, match64: 0x00000000, model64: 0x1067f00010686},
		modelTuple{type64: 0x2700000027, matchRI: 0x1258, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x1259, match64: 0x00000000, model64: 0x1068c00010695},
		modelTuple{type64: 0x2700000027, matchRI: 0x125a, match64: 0x00000000, model64: 0x1069500010699},
		modelTuple{type64: 0x2700000027, matchRI: 0x125b, match64: 0x00000000, model64: 0x106990001069f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1069f000106ab, model64: 0x1069f000106ab},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x125e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x125f, match64: 0x00000000, model64: 0x106b9000106c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106c0000106c8, model64: 0x106c0000106c8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1260, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1262, match64: 0x00000000, model64: 0x106cf000106d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1263, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1264, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1266, match64: 0x00000000, model64: 0x106db000106e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1267, match64: 0x00000000, model64: 0x106e8000106f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106f500010703, model64: 0x1070300010711},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x107110001071c, model64: 0x1071c00010727},
		modelTuple{type64: 0x2700000027, matchRI: 0x1268, match64: 0x00000000, model64: 0x107270001072f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1269, match64: 0x00000000, model64: 0x1072f00010738},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1073800010741, model64: 0x1073800010741},
		modelTuple{type64: 0x2700000027, matchRI: 0x126a, match64: 0x00000000, model64: 0x1074100010749},
		modelTuple{type64: 0x2700000027, matchRI: 0x126b, match64: 0x00000000, model64: 0x1074900010754},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1075400010760, model64: 0x1075400010760},
		modelTuple{type64: 0x2700000027, matchRI: 0x126c, match64: 0x00000000, model64: 0x1076000010768},
		modelTuple{type64: 0x2700000027, matchRI: 0x126d, match64: 0x00000000, model64: 0x1076800010770},
		modelTuple{type64: 0x2700000027, matchRI: 0x126e, match64: 0x00000000, model64: 0x107700001077d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1077d00010787, model64: 0x1078700010791},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1079100010797, model64: 0x107970001079e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x126f, match64: 0x00000000, model64: 0x1079e000107ae},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x107ae000107bd, model64: 0x107bd000107cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1271, match64: 0x00000000, model64: 0x107d0000107d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1272, match64: 0x00000000, model64: 0x31c00000321},
		modelTuple{type64: 0x2700000027, matchRI: 0x1273, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1275, match64: 0x00000000, model64: 0x107e1000107e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1277, match64: 0x00000000, model64: 0x107ec00010801},
		modelTuple{type64: 0x2700000027, matchRI: 0x1278, match64: 0x00000000, model64: 0x1080100010806},
		modelTuple{type64: 0x2700000027, matchRI: 0x1279, match64: 0x00000000, model64: 0x1080600010814},
		modelTuple{type64: 0x2700000027, matchRI: 0x127a, match64: 0x00000000, model64: 0x108140001081f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1081f00010826, model64: 0x108260001083e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1083e00010845, model64: 0x108450001085d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1085d00010864, model64: 0x108640001087c},
		modelTuple{type64: 0x2700000027, matchRI: 0x127b, match64: 0x00000000, model64: 0x1087c00010894},
		modelTuple{type64: 0x2700000027, matchRI: 0x127c, match64: 0x00000000, model64: 0x10894000108ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x108ae000108b3, model64: 0x108b3000108c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x127e, match64: 0x00000000, model64: 0x108ce000108d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x127f, match64: 0x00000000, model64: 0x108d5000108df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1280, match64: 0x00000000, model64: 0x108df000108e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1281, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1282, match64: 0x00000000, model64: 0x108e6000108ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1283, match64: 0x00000000, model64: 0x108ed000108f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1284, match64: 0x00000000, model64: 0x108f600010902},
		modelTuple{type64: 0x2700000027, matchRI: 0x1285, match64: 0x00000000, model64: 0x109020001090d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1286, match64: 0x00000000, model64: 0x1090d00010917},
		modelTuple{type64: 0x2700000027, matchRI: 0x1287, match64: 0x00000000, model64: 0x1091700010923},
		modelTuple{type64: 0x2700000027, matchRI: 0x1288, match64: 0x00000000, model64: 0x109230001092a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1289, match64: 0x00000000, model64: 0x1092a00010931},
		modelTuple{type64: 0x2700000027, matchRI: 0x128a, match64: 0x00000000, model64: 0xd0880000d08b},
		modelTuple{type64: 0x2700000027, matchRI: 0x128b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x128d, match64: 0x00000000, model64: 0x1093900010948},
		modelTuple{type64: 0x2700000027, matchRI: 0x128e, match64: 0x00000000, model64: 0x109480001095a},
		modelTuple{type64: 0x2700000027, matchRI: 0x128f, match64: 0x00000000, model64: 0x1095a00010969},
		modelTuple{type64: 0x2700000027, matchRI: 0x1290, match64: 0x00000000, model64: 0x109690001097d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1291, match64: 0x00000000, model64: 0x1097d00010991},
		modelTuple{type64: 0x2700000027, matchRI: 0x1292, match64: 0x00000000, model64: 0x10991000109a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1293, match64: 0x00000000, model64: 0x109a2000109b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1294, match64: 0x00000000, model64: 0x109b2000109c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1295, match64: 0x00000000, model64: 0x109c2000109d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1296, match64: 0x00000000, model64: 0x109d2000109e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1297, match64: 0x00000000, model64: 0x109e5000109f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1298, match64: 0x00000000, model64: 0x109f500010a05},
		modelTuple{type64: 0x2700000027, matchRI: 0x1299, match64: 0x00000000, model64: 0x10a0500010a18},
		modelTuple{type64: 0x2700000027, matchRI: 0x129a, match64: 0x00000000, model64: 0x10a1800010a26},
		modelTuple{type64: 0x2700000027, matchRI: 0x129b, match64: 0x00000000, model64: 0x10a2600010a38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a3800010a42, model64: 0x10a4200010a53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a5300010a5d, model64: 0x10a5d00010a73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a7300010a77, model64: 0x10a7700010a8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x129c, match64: 0x00000000, model64: 0x10a8a00010a9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x129d, match64: 0x00000000, model64: 0x10a9c00010aad},
		modelTuple{type64: 0x2700000027, matchRI: 0x129e, match64: 0x00000000, model64: 0x10aad00010ac1},
		modelTuple{type64: 0x2700000027, matchRI: 0x129f, match64: 0x00000000, model64: 0x10ac100010ad1},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a0, match64: 0x00000000, model64: 0x10ad100010ae4},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a1, match64: 0x00000000, model64: 0x10ae400010af7},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a2, match64: 0x00000000, model64: 0x10af700010b08},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a3, match64: 0x00000000, model64: 0x10b0800010b1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a4, match64: 0x00000000, model64: 0x10b1b00010b32},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a5, match64: 0x00000000, model64: 0x10b3200010b46},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a6, match64: 0x00000000, model64: 0x10b4600010b5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a7, match64: 0x00000000, model64: 0x10b5a00010b6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a8, match64: 0x00000000, model64: 0x10b6b00010b81},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a9, match64: 0x00000000, model64: 0x10b8100010b98},
		modelTuple{type64: 0x2700000027, matchRI: 0x12aa, match64: 0x00000000, model64: 0x10b9800010bad},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ab, match64: 0x00000000, model64: 0x10bad00010bc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ac, match64: 0x00000000, model64: 0x10bc500010bdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ad, match64: 0x00000000, model64: 0x10bdf00010bf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ae, match64: 0x00000000, model64: 0x10bf600010c12},
		modelTuple{type64: 0x2700000027, matchRI: 0x12af, match64: 0x00000000, model64: 0x10c1200010c2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b0, match64: 0x00000000, model64: 0x10c2d00010c44},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b1, match64: 0x00000000, model64: 0x10c4400010c53},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b2, match64: 0x00000000, model64: 0x10c5300010c63},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b3, match64: 0x00000000, model64: 0x10c6300010c6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b4, match64: 0x00000000, model64: 0x10c6f00010c7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12b6, match64: 0x00000000, model64: 0x10c7a00010c8e},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12b7, match64: 0x00000000, model64: 0x10c8e00010ca1},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12b8, match64: 0x00000000, model64: 0x10ca100010cb5},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12b9, match64: 0x00000000, model64: 0x10cb500010cc6},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12ba, match64: 0x00000000, model64: 0x10cc600010cd7},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12bb, match64: 0x00000000, model64: 0x10cd700010ce8},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12bc, match64: 0x00000000, model64: 0x10ce800010cf9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12bd, match64: 0x00000000, model64: 0x10cf900010d0a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12be, match64: 0x00000000, model64: 0x10d0a00010d1b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12bf, match64: 0x00000000, model64: 0x10d1b00010d2c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12c0, match64: 0x00000000, model64: 0x10d2c00010d3d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12c1, match64: 0x00000000, model64: 0x10d3d00010d4f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12c2, match64: 0x00000000, model64: 0x10d4f00010d5e},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12c3, match64: 0x00000000, model64: 0x10d5e00010d6f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12c4, match64: 0x00000000, model64: 0x10d6f00010d80},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12c5, match64: 0x00000000, model64: 0x10d8000010d8f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12c6, match64: 0x00000000, model64: 0x10d8f00010da0},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12c7, match64: 0x00000000, model64: 0x10da000010db0},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12c8, match64: 0x00000000, model64: 0x10db000010dc0},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12c9, match64: 0x00000000, model64: 0x10da000010db0},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x12ca, match64: 0x00000000, model64: 0x10d8000010d8f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12cb, match64: 0x00000000, model64: 0x10d8000010d8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x12cc, match64: 0x00000000, model64: 0x10dc000010dcb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x12ce, match64: 0x00000000, model64: 0x10dd100010ddb},
		modelTuple{type64: 0x2700000027, matchRI: 0x12cf, match64: 0x00000000, model64: 0x10ddb00010de2},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x12d1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x12d2, match64: 0x00000000, model64: 0x10dd100010ddb},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x12d4, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d6, match64: 0x00000000, model64: 0x10de900010def},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10def00010df7, model64: 0x10df700010e02},
		modelTuple{type64: 0x20d00000213, matchRI: 0x12d7, match64: 0x00000000, model64: 0x10e0200010e09},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d8, match64: 0x00000000, model64: 0x10e0900010e0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10e0f00010e16, model64: 0x10e1600010e1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x12da, match64: 0x00000000, model64: 0x10e1a00010e21},
		modelTuple{type64: 0x2700000027, matchRI: 0x12dc, match64: 0x00000000, model64: 0x90390000903b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12dd, match64: 0x00000000, model64: 0xc36e0000c371},
		modelTuple{type64: 0x2700000027, matchRI: 0x12de, match64: 0x00000000, model64: 0x10e2600010e28},
		modelTuple{type64: 0x2700000027, matchRI: 0x12df, match64: 0x00000000, model64: 0x491100004913},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e0, match64: 0x00000000, model64: 0xed620000ed64},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e1, match64: 0x00000000, model64: 0x10e2800010e2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e2, match64: 0x00000000, model64: 0x10e2b00010e2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e3, match64: 0x00000000, model64: 0x5cad00005caf},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e4, match64: 0x00000000, model64: 0x10e2d00010e30},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e5, match64: 0x00000000, model64: 0x10e3000010e31},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12e8, match64: 0x00000000, model64: 0x10e3600010e3d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12e9, match64: 0x00000000, model64: 0x10e3d00010e45},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ea, match64: 0x00000000, model64: 0x10e4500010e48},
		modelTuple{type64: 0x2700000027, matchRI: 0x12eb, match64: 0x00000000, model64: 0x10e4800010e4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ec, match64: 0x00000000, model64: 0x10e4b00010e4d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12ed, match64: 0x00000000, model64: 0x10e4d00010e54},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12ee, match64: 0x00000000, model64: 0x10e5400010e5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ef, match64: 0x00000000, model64: 0x90390000903b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x12f0, match64: 0x00000000, model64: 0x10e5b00010e62},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f2, match64: 0x00000000, model64: 0x10e6200010e65},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f3, match64: 0x00000000, model64: 0x10e6500010e6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f4, match64: 0x00000000, model64: 0x19a8000019ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f5, match64: 0x00000000, model64: 0x10e6b00010e6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f6, match64: 0x00000000, model64: 0x10e6e00010e71},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f7, match64: 0x00000000, model64: 0x10e7100010e74},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f8, match64: 0x00000000, model64: 0x10e7400010e7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f9, match64: 0x00000000, model64: 0x10e7b00010e7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fa, match64: 0x00000000, model64: 0x10e7e00010e81},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10e8100010e89, model64: 0x10e8900010e91},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fb, match64: 0x00000000, model64: 0x5cad00005caf},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fc, match64: 0x00000000, model64: 0x10e9100010e98},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fd, match64: 0x00000000, model64: 0x10e9800010e9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fe, match64: 0x00000000, model64: 0x10e9f00010ea4},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ff, match64: 0x00000000, model64: 0x10ea400010eaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1300, match64: 0x00000000, model64: 0x10eaf00010eb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1301, match64: 0x00000000, model64: 0x10eb500010ec1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1302, match64: 0x00000000, model64: 0x90d5000090d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1303, match64: 0x00000000, model64: 0xc7830000c789},
		modelTuple{type64: 0x2700000027, matchRI: 0x1304, match64: 0x00000000, model64: 0x10ec100010ec4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1305, match64: 0x00000000, model64: 0x10ec400010ecd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1306, match64: 0x00000000, model64: 0x10ecd00010ed4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1307, match64: 0x00000000, model64: 0x10ed400010edb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1308, match64: 0x00000000, model64: 0x10edb00010edf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1309, match64: 0x00000000, model64: 0x10edf00010ee2},
		modelTuple{type64: 0x2700000027, matchRI: 0x130a, match64: 0x00000000, model64: 0x10ee200010ee4},
		modelTuple{type64: 0x2700000027, matchRI: 0x130b, match64: 0x00000000, model64: 0x10ee400010eeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x130c, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x130d, match64: 0x00000000, model64: 0x10eeb00010eed},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x130e, match64: 0x00000000, model64: 0x4fee00004ff5},
		modelTuple{type64: 0x2700000027, matchRI: 0x130f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1310, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1311, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1313, match64: 0x00000000, model64: 0x10ef400010efb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1314, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1315, match64: 0x00000000, model64: 0x10efb00010f0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1317, match64: 0x00000000, model64: 0x10f1400010f1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1318, match64: 0x00000000, model64: 0x10f1f00010f2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1319, match64: 0x00000000, model64: 0x10f2c00010f3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x131a, match64: 0x00000000, model64: 0x10f3c00010f4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10f4e00010f55, model64: 0x10f5500010f57},
		modelTuple{type64: 0x2700000027, matchRI: 0x131c, match64: 0x00000000, model64: 0x10f5700010f5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f9200004f97, model64: 0x4f9200004f97},
		modelTuple{type64: 0x2700000027, matchRI: 0x131e, match64: 0x00000000, model64: 0x10f6300010f6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x131f, match64: 0x00000000, model64: 0x10f6b00010f74},
		modelTuple{type64: 0x2700000027, matchRI: 0x1320, match64: 0x00000000, model64: 0x10f7400010f7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1321, match64: 0x00000000, model64: 0x10f7b00010f84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10f8c00010f9f, model64: 0x10f9f00010fab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10fab00010fb1, model64: 0x10fb100010fbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1323, match64: 0x00000000, model64: 0x10fbf00010fce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1324, match64: 0x00000000, model64: 0x10fce00010fdb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1325, match64: 0x00000000, model64: 0x10fdb00010fe9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1326, match64: 0x00000000, model64: 0x10fe900010ff5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1327, match64: 0x00000000, model64: 0x10ff500010ffc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1328, match64: 0x00000000, model64: 0x10ffc00011001},
		modelTuple{type64: 0x2700000027, matchRI: 0x1329, match64: 0x00000000, model64: 0x1100100011006},
		modelTuple{type64: 0x2700000027, matchRI: 0x132a, match64: 0x00000000, model64: 0x110060001100f},
		modelTuple{type64: 0x2700000027, matchRI: 0x132b, match64: 0x00000000, model64: 0x1100f0001101f},
		modelTuple{type64: 0x2700000027, matchRI: 0x132c, match64: 0x00000000, model64: 0x1101f00011027},
		modelTuple{type64: 0x2700000027, matchRI: 0x132d, match64: 0x00000000, model64: 0x1102700011034},
		modelTuple{type64: 0x20d00000213, matchRI: 0x132e, match64: 0x00000000, model64: 0x110340001103e},
		modelTuple{type64: 0x2700000027, matchRI: 0x132f, match64: 0x00000000, model64: 0x1103e00011046},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110460001104a, model64: 0x1104a00011055},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110550001105a, model64: 0x1105a0001106e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1106e00011072, model64: 0x1107200011080},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1108000011084, model64: 0x1108400011090},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1109000011094, model64: 0x11094000110a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110a6000110aa, model64: 0x110aa000110bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110bd000110c1, model64: 0x110c1000110d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1330, match64: 0x00000000, model64: 0x110d0000110d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110d9000110dd, model64: 0x110dd000110ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110ec000110f0, model64: 0x110f0000110fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110fb000110ff, model64: 0x110ff00011107},
		modelTuple{type64: 0x2700000027, matchRI: 0x1331, match64: 0x00000000, model64: 0x1110700011117},
		modelTuple{type64: 0x2700000027, matchRI: 0x1332, match64: 0x00000000, model64: 0x1111700011125},
		modelTuple{type64: 0x2700000027, matchRI: 0x1333, match64: 0x00000000, model64: 0x1112500011137},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111370001113b, model64: 0x1113b00011146},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111460001114b, model64: 0x1114b0001115e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1115e00011162, model64: 0x1116200011170},
		modelTuple{type64: 0x2700000027, matchRI: 0x1334, match64: 0x00000000, model64: 0x1117000011177},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111770001117b, model64: 0x1117b00011188},
		modelTuple{type64: 0x2700000027, matchRI: 0x1335, match64: 0x00000000, model64: 0x1118800011195},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1119500011199, model64: 0x11199000111a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111a6000111ab, model64: 0x111ab000111b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111b7000111bc, model64: 0x111bc000111c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1336, match64: 0x00000000, model64: 0x111c8000111db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1337, match64: 0x00000000, model64: 0x111db000111ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1338, match64: 0x00000000, model64: 0x111ea000111fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1339, match64: 0x00000000, model64: 0x111fe00011207},
		modelTuple{type64: 0x2700000027, matchRI: 0x133a, match64: 0x00000000, model64: 0x1120700011210},
		modelTuple{type64: 0x2700000027, matchRI: 0x133b, match64: 0x00000000, model64: 0x112100001121e},
		modelTuple{type64: 0x2700000027, matchRI: 0x133c, match64: 0x00000000, model64: 0x1121e0001122b},
		modelTuple{type64: 0x2700000027, matchRI: 0x133d, match64: 0x00000000, model64: 0x1122b0001123b},
		modelTuple{type64: 0x2700000027, matchRI: 0x133e, match64: 0x00000000, model64: 0x1123b0001124a},
		modelTuple{type64: 0x2700000027, matchRI: 0x133f, match64: 0x00000000, model64: 0x1124a00011257},
		modelTuple{type64: 0x2700000027, matchRI: 0x1340, match64: 0x00000000, model64: 0x112570001125d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1341, match64: 0x00000000, model64: 0x1125d0001126c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1342, match64: 0x00000000, model64: 0x1126c00011279},
		modelTuple{type64: 0x2700000027, matchRI: 0x1343, match64: 0x00000000, model64: 0x1127900011286},
		modelTuple{type64: 0x2700000027, matchRI: 0x1344, match64: 0x00000000, model64: 0x1128600011294},
		modelTuple{type64: 0x2700000027, matchRI: 0x1345, match64: 0x00000000, model64: 0x112940001129d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1346, match64: 0x00000000, model64: 0x1129d000112a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1347, match64: 0x00000000, model64: 0x112a6000112af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1348, match64: 0x00000000, model64: 0x112af000112b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1349, match64: 0x00000000, model64: 0x598f00005995},
		modelTuple{type64: 0x2700000027, matchRI: 0x134a, match64: 0x00000000, model64: 0x112b4000112c1},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x134b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x134c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x134d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x134f, match64: 0x00000000, model64: 0x112c1000112c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1350, match64: 0x00000000, model64: 0x112c7000112d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1351, match64: 0x00000000, model64: 0x112d0000112d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1352, match64: 0x00000000, model64: 0x112d9000112e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x112e2000112f4, model64: 0x112e2000112f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1353, match64: 0x00000000, model64: 0x112f4000112fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1354, match64: 0x00000000, model64: 0x112fd00011306},
		modelTuple{type64: 0x2700000027, matchRI: 0x1355, match64: 0x00000000, model64: 0x113060001130f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1130f00011316, model64: 0x113160001131f},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1131f0001132f, model64: 0x1131f0001132f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1356, match64: 0x00000000, model64: 0x1132f0001133b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1133b00011351, model64: 0x1133b00011351},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x113510001135e, model64: 0x113510001135e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1135e00011370, model64: 0x1135e00011370},
		modelTuple{type64: 0x2700000027, matchRI: 0x1357, match64: 0x00000000, model64: 0x1137000011379},
		modelTuple{type64: 0x2700000027, matchRI: 0x1358, match64: 0x00000000, model64: 0x1137900011382},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1138200011389, model64: 0x1138900011395},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x113950001139e, model64: 0x113950001139e},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1139e000113b3, model64: 0x1139e000113b3},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x113b3000113bf, model64: 0x113b3000113bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x113bf000113d1, model64: 0x113bf000113d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1359, match64: 0x00000000, model64: 0x113d1000113da},
		modelTuple{type64: 0x2700000027, matchRI: 0x135a, match64: 0x00000000, model64: 0x113da000113e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x113e4000113ee, model64: 0x113e4000113ee},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x113ee000113fc, model64: 0x113ee000113fc},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x135b, match64: 0x00000000, model64: 0x113fc00011409},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1140900011416, model64: 0x1140900011416},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1141600011421, model64: 0x1141600011421},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x114210001142a, model64: 0x114210001142a},
		modelTuple{type64: 0x2700000027, matchRI: 0x135c, match64: 0x00000000, model64: 0x1142a00011432},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1143b00011443, model64: 0x114430001144d},
		modelTuple{type64: 0x2700000027, matchRI: 0x135e, match64: 0x00000000, model64: 0x1144d00011456},
		modelTuple{type64: 0x2700000027, matchRI: 0x1360, match64: 0x00000000, model64: 0x1145b00011462},
		modelTuple{type64: 0x2700000027, matchRI: 0x1361, match64: 0x00000000, model64: 0x1146200011469},
		modelTuple{type64: 0x2700000027, matchRI: 0x1362, match64: 0x00000000, model64: 0x1146900011475},
		modelTuple{type64: 0x2700000027, matchRI: 0x1363, match64: 0x00000000, model64: 0x1147500011480},
		modelTuple{type64: 0x2700000027, matchRI: 0x1364, match64: 0x00000000, model64: 0x1148000011488},
		modelTuple{type64: 0x2700000027, matchRI: 0x1365, match64: 0x00000000, model64: 0x114880001148e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1366, match64: 0x00000000, model64: 0x1148e00011494},
		modelTuple{type64: 0x2700000027, matchRI: 0x1367, match64: 0x00000000, model64: 0x114940001149b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1368, match64: 0x00000000, model64: 0x1149b000114a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1369, match64: 0x00000000, model64: 0x114a1000114a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x136a, match64: 0x00000000, model64: 0x114a8000114af},
		modelTuple{type64: 0x2700000027, matchRI: 0x136c, match64: 0x00000000, model64: 0x114af000114b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x136d, match64: 0x00000000, model64: 0x114b7000114be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x114be000114c2, model64: 0x114c2000114c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x136e, match64: 0x00000000, model64: 0x114c8000114cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x136f, match64: 0x00000000, model64: 0x114cd000114d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1371, match64: 0x00000000, model64: 0x114d7000114e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1372, match64: 0x00000000, model64: 0x114e3000114f0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1373, match64: 0x00000000, model64: 0x114f0000114fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1375, match64: 0x00000000, model64: 0x1150000011508},
		modelTuple{type64: 0x2700000027, matchRI: 0x1376, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1150800011520, model64: 0x1152000011534},
		modelTuple{type64: 0x2700000027, matchRI: 0x1378, match64: 0x00000000, model64: 0x1153900011540},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1154000011549, model64: 0x115490001154f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1379, match64: 0x00000000, model64: 0x1154f00011552},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x115520001155e, model64: 0x1155e00011564},
		modelTuple{type64: 0x2700000027, matchRI: 0x137a, match64: 0x00000000, model64: 0x37200000375},
		modelTuple{type64: 0x2700000027, matchRI: 0x137b, match64: 0x00000000, model64: 0x115640001156b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1157000011579, model64: 0x1157900011582},
		modelTuple{type64: 0x20d00000213, matchRI: 0x137d, match64: 0x00000000, model64: 0x1158200011589},
		modelTuple{type64: 0x2700000027, matchRI: 0x137e, match64: 0x00000000, model64: 0x115890001158f},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1380, match64: 0x00000000, model64: 0x1159300011597},
		modelTuple{type64: 0x2700000027, matchRI: 0x1381, match64: 0x00000000, model64: 0x11597000115a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1382, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1383, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1385, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1386, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1387, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x138a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x115b8000115bf, model64: 0x115bf000115c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x138c, match64: 0x00000000, model64: 0x115cd000115d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x138d, match64: 0x00000000, model64: 0x115d5000115e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x115ed000115f3, model64: 0x115f3000115f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x115f900011600, model64: 0x1160000011607},
		modelTuple{type64: 0x2700000027, matchRI: 0x138f, match64: 0x00000000, model64: 0x3fc200003fca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1390, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1392, match64: 0x00000000, model64: 0x1160e00011619},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106640001066a, model64: 0x106640001066a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1161900011623, model64: 0x116230001162d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1162d00011639, model64: 0x1163900011645},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1164500011653, model64: 0x1164500011653},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1165300011658, model64: 0x116580001165d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1165d00011662, model64: 0x9abb00009ac0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1393, match64: 0x00000000, model64: 0x1166200011669},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116690001166f, model64: 0x1166f00011676},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116760001167f, model64: 0x1167f00011688},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116880001168f, model64: 0x1168f00011696},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116960001169e, model64: 0x1169e000116a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1394, match64: 0x00000000, model64: 0x116a6000116b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116b0000116b5, model64: 0x116b5000116ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116ba000116c5, model64: 0x116c5000116d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116d0000116db, model64: 0x116db000116e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116e6000116ec, model64: 0x116e6000116ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116ec000116f2, model64: 0x116f2000116f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116f8000116fc, model64: 0x116fc00011700},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1170000011709, model64: 0x1170900011712},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1171200011717, model64: 0x117170001171c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1171c00011722, model64: 0x1172200011729},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117290001172e, model64: 0x35d4000035d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1172e00011735, model64: 0x117350001173d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1173d00011747, model64: 0x1174700011751},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1175100011759, model64: 0x1175900011761},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1176100011766, model64: 0xe6130000e618},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117660001176a, model64: 0x1176a0001176e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1395, match64: 0x00000000, model64: 0x1176e00011770},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1177000011774, model64: 0x1177400011778},
		modelTuple{type64: 0x2700000027, matchRI: 0x1396, match64: 0x00000000, model64: 0x117780001177b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1177b00011782, model64: 0x1178200011789},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117890001178f, model64: 0x1178f00011795},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117950001179c, model64: 0x1179c000117a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117a3000117aa, model64: 0x117aa000117b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117b1000117b5, model64: 0x117b5000117b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117b9000117bd, model64: 0xbc4f0000bc53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117bd000117c6, model64: 0x117bd000117c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1397, match64: 0x00000000, model64: 0x117c6000117cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117cd000117d2, model64: 0x117d2000117d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117d5000117dd, model64: 0x117dd000117e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1398, match64: 0x00000000, model64: 0x117e5000117eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117eb000117f6, model64: 0x117f600011801},
		modelTuple{type64: 0x2700000027, matchRI: 0x1399, match64: 0x00000000, model64: 0x118010001180a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1180a00011811, model64: 0x1181100011817},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118170001181f, model64: 0x1181f00011826},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118260001182f, model64: 0x1182f00011838},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118380001183c, model64: 0x1183c00011840},
		modelTuple{type64: 0x2700000027, matchRI: 0x139a, match64: 0x00000000, model64: 0x1184000011844},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118440001184b, model64: 0x1184b00011852},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118520001185b, model64: 0x1185b00011864},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x118640001186e, model64: 0x1186e00011878},
		modelTuple{type64: 0x2700000027, matchRI: 0x139b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x118780001187e, model64: 0x1187e00011884},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1188400011888, model64: 0x118880001188c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x139c, match64: 0x00000000, model64: 0x1188c00011899},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x11899000118a3, model64: 0x118a3000118ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x139e, match64: 0x00000000, model64: 0x118b6000118bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x139f, match64: 0x00000000, model64: 0x118bb000118c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a0, match64: 0x00000000, model64: 0x118c4000118cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a1, match64: 0x00000000, model64: 0x118cb000118d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a2, match64: 0x00000000, model64: 0x118d0000118e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a3, match64: 0x00000000, model64: 0x118e7000118f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a4, match64: 0x00000000, model64: 0x118f900011901},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a5, match64: 0x00000000, model64: 0x1190100011913},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a6, match64: 0x00000000, model64: 0x119130001191e},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a7, match64: 0x00000000, model64: 0x1191e0001192a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a8, match64: 0x00000000, model64: 0x118f900011901},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1192a0001193f, model64: 0x1193f0001194a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a9, match64: 0x00000000, model64: 0x1194a00011955},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1195500011967, model64: 0x119670001196f},
		modelTuple{type64: 0x2700000027, matchRI: 0x13aa, match64: 0x00000000, model64: 0x1196f0001197a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ab, match64: 0x00000000, model64: 0x1197a00011982},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ac, match64: 0x00000000, model64: 0x1198200011989},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x119890001199a, model64: 0x1199a000119a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x119a1000119b8, model64: 0x119b8000119c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ad, match64: 0x00000000, model64: 0x119c5000119ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x119ce000119dd, model64: 0x119dd000119e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x119e2000119f8, model64: 0x119f8000119ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x119ff00011a06, model64: 0x119ff00011a06},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ae, match64: 0x00000000, model64: 0x9df900009e01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a0600011a16, model64: 0x11a1600011a21},
		modelTuple{type64: 0x2700000027, matchRI: 0x13af, match64: 0x00000000, model64: 0x11a2100011a27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a2700011a3e, model64: 0x11a3e00011a45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a4500011a5e, model64: 0x11a5e00011a67},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x11a7500011a81},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11a8800011a8e, model64: 0x11a8e00011a96},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b3, match64: 0x00000000, model64: 0x11a9600011aa2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11aa200011aa8, model64: 0x11aa800011ab4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11ab400011aba, model64: 0x11aba00011ac3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11ac300011ac9, model64: 0x11ac900011acd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11acd00011ad3, model64: 0x11ad300011ad7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11ad700011ae6, model64: 0x11ae600011af5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11af500011afe, model64: 0x11af500011afe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11afe00011b07, model64: 0x11b0700011b0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b0d00011b16, model64: 0x11b1600011b1c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b1c00011b25, model64: 0x11b2500011b34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b3400011b3d, model64: 0x11b3d00011b4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b4a00011b53, model64: 0x11b5300011b61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b6100011b6b, model64: 0x11b6100011b6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11b6b00011b70, model64: 0x11b7000011b76},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x11b8800011b93},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x13b9, match64: 0x00000000, model64: 0x11b9a00011ba6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11ba600011bb0, model64: 0x11bb000011bba},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ba, match64: 0x00000000, model64: 0x11bba00011bc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x13bb, match64: 0x00000000, model64: 0x11bba00011bc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x13bc, match64: 0x00000000, model64: 0x11bc400011bd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x13bd, match64: 0x00000000, model64: 0x11bc400011bd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x13be, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x13bf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11bdf00011be5, model64: 0x11be500011beb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: -0x0001, match64: 0x11bf800011c00, model64: 0x11c0000011c04},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x11c0400011c10, model64: 0x11c1000011c1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c3, match64: 0x00000000, model64: 0x11c1c00011c21},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c4, match64: 0x00000000, model64: 0x11c2100011c2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c5, match64: 0x00000000, model64: 0x11c2d00011c31},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c6, match64: 0x00000000, model64: 0x11c3100011c37},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c7, match64: 0x00000000, model64: 0x11c3700011c40},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c8, match64: 0x00000000, model64: 0x11c4000011c48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c4800011c5e, model64: 0x11c5e00011c6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11c6b00011c7f, model64: 0x11c7f00011c8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c9, match64: 0x00000000, model64: 0x11c8a00011c91},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ca, match64: 0x00000000, model64: 0x11c9100011c9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x13cb, match64: 0x00000000, model64: 0x11c9b00011ca4},
		modelTuple{type64: 0x2700000027, matchRI: 0x13cc, match64: 0x00000000, model64: 0x11ca400011cad},
		modelTuple{type64: 0x2700000027, matchRI: 0x13cd, match64: 0x00000000, model64: 0x11cad00011cb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ce, match64: 0x00000000, model64: 0x11cb300011cba},
		modelTuple{type64: 0x2700000027, matchRI: 0x13cf, match64: 0x00000000, model64: 0x11cba00011cbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d0, match64: 0x00000000, model64: 0x11cbe00011cc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d1, match64: 0x00000000, model64: 0x11cc500011ccc},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d2, match64: 0x00000000, model64: 0x11ccc00011cd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d3, match64: 0x00000000, model64: 0x11cd500011cdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d4, match64: 0x00000000, model64: 0x11cdd00011ce3},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d5, match64: 0x00000000, model64: 0x11ce300011ceb},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d6, match64: 0x00000000, model64: 0x11ceb00011cf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d7, match64: 0x00000000, model64: 0x11cf000011d01},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d8, match64: 0x00000000, model64: 0x11d0100011d09},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d9, match64: 0x00000000, model64: 0x11d0900011d11},
		modelTuple{type64: 0x2700000027, matchRI: 0x13da, match64: 0x00000000, model64: 0x11d1100011d1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13db, match64: 0x00000000, model64: 0x11d1a00011d1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x13dc, match64: 0x00000000, model64: 0x11d1e00011d29},
		modelTuple{type64: 0x2700000027, matchRI: 0x13dd, match64: 0x00000000, model64: 0x11d2900011d34},
		modelTuple{type64: 0x2700000027, matchRI: 0x13de, match64: 0x00000000, model64: 0x11d3400011d3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x13df, match64: 0x00000000, model64: 0x11d3e00011d4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e0, match64: 0x00000000, model64: 0x11d4a00011d56},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e1, match64: 0x00000000, model64: 0x11d5600011d5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e2, match64: 0x00000000, model64: 0x11d5d00011d65},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e3, match64: 0x00000000, model64: 0x11d6500011d70},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e4, match64: 0x00000000, model64: 0x11d7000011d7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e5, match64: 0x00000000, model64: 0x11d7c00011d86},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e6, match64: 0x00000000, model64: 0x11d8600011d93},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e7, match64: 0x00000000, model64: 0x11d9300011da0},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e8, match64: 0x00000000, model64: 0x11da000011dad},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e9, match64: 0x00000000, model64: 0x11dad00011dbc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11dbc00011dc8, model64: 0x11dc800011dd4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11dd400011ddc, model64: 0x11ddc00011de4},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ea, match64: 0x00000000, model64: 0x11de400011dea},
		modelTuple{type64: 0x2700000027, matchRI: 0x13eb, match64: 0x00000000, model64: 0x11dea00011df7},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ec, match64: 0x00000000, model64: 0x11df700011e04},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ed, match64: 0x00000000, model64: 0x11e0400011e14},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ee, match64: 0x00000000, model64: 0x11e1400011e20},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ef, match64: 0x00000000, model64: 0x11e2000011e2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f0, match64: 0x00000000, model64: 0x11e2d00011e3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f1, match64: 0x00000000, model64: 0x11e3a00011e4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f2, match64: 0x00000000, model64: 0x11e4c00011e5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f3, match64: 0x00000000, model64: 0x11e5a00011e67},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f4, match64: 0x00000000, model64: 0x11e6700011e71},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f5, match64: 0x00000000, model64: 0x11e7100011e7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f6, match64: 0x00000000, model64: 0x11e7f00011e87},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f7, match64: 0x00000000, model64: 0x11e8700011e90},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f8, match64: 0x00000000, model64: 0x11e8700011e90},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f9, match64: 0x00000000, model64: 0x11de400011dea},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fa, match64: 0x00000000, model64: 0x11e9000011e9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fb, match64: 0x00000000, model64: 0x11e9a00011ea6},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fc, match64: 0x00000000, model64: 0x11ea600011ead},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fd, match64: 0x00000000, model64: 0x11ead00011eb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fe, match64: 0x00000000, model64: 0x11eb300011ebe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11ebe00011eca, model64: 0x11ebe00011eca},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ff, match64: 0x00000000, model64: 0x11eca00011ed5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1400, match64: 0x00000000, model64: 0x11ed500011edb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1401, match64: 0x00000000, model64: 0x11edb00011ee2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1402, match64: 0x00000000, model64: 0x11ee200011eed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1403, match64: 0x00000000, model64: 0x11eed00011ef9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1404, match64: 0x00000000, model64: 0x11ef900011f06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1405, match64: 0x00000000, model64: 0x11f0600011f0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1406, match64: 0x00000000, model64: 0x11f0e00011f1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1407, match64: 0x00000000, model64: 0x11f1a00011f21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1408, match64: 0x00000000, model64: 0x11f2100011f28},
		modelTuple{type64: 0x2700000027, matchRI: 0x1409, match64: 0x00000000, model64: 0x11f2800011f34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11f3400011f3c, model64: 0x11f3c00011f44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11f4400011f4c, model64: 0x11f4c00011f54},
		modelTuple{type64: 0x2700000027, matchRI: 0x140a, match64: 0x00000000, model64: 0x11f5400011f5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x140b, match64: 0x00000000, model64: 0x11f5a00011f65},
		modelTuple{type64: 0x2700000027, matchRI: 0x140c, match64: 0x00000000, model64: 0x11f6500011f71},
		modelTuple{type64: 0x2700000027, matchRI: 0x140d, match64: 0x00000000, model64: 0x11f7100011f84},
		modelTuple{type64: 0x2700000027, matchRI: 0x140e, match64: 0x00000000, model64: 0x11f8400011f90},
		modelTuple{type64: 0x2700000027, matchRI: 0x140f, match64: 0x00000000, model64: 0x11f9000011f9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1410, match64: 0x00000000, model64: 0x11f9b00011fa8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1411, match64: 0x00000000, model64: 0x11fa800011fae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1412, match64: 0x00000000, model64: 0x11fae00011fb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1413, match64: 0x00000000, model64: 0x11fb500011fc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1414, match64: 0x00000000, model64: 0x11fc100011fcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1415, match64: 0x00000000, model64: 0x11fcc00011fd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1416, match64: 0x00000000, model64: 0x11fd800011fe5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1417, match64: 0x00000000, model64: 0x11fe500011fec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1418, match64: 0x00000000, model64: 0x11fec00011ff2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1419, match64: 0x00000000, model64: 0x11ff200011ffe},
		modelTuple{type64: 0x2700000027, matchRI: 0x141a, match64: 0x00000000, model64: 0x11ffe00012006},
		modelTuple{type64: 0x2700000027, matchRI: 0x141b, match64: 0x00000000, model64: 0x120060001200e},
		modelTuple{type64: 0x2700000027, matchRI: 0x141c, match64: 0x00000000, model64: 0xb10e0000b111},
		modelTuple{type64: 0x2700000027, matchRI: 0x141d, match64: 0x00000000, model64: 0x1200e00012016},
		modelTuple{type64: 0x2700000027, matchRI: 0x141e, match64: 0x00000000, model64: 0x120160001201e},
		modelTuple{type64: 0x2700000027, matchRI: 0x141f, match64: 0x00000000, model64: 0x1201e00012034},
		modelTuple{type64: 0x2700000027, matchRI: 0x1420, match64: 0x00000000, model64: 0x1203400012042},
		modelTuple{type64: 0x2700000027, matchRI: 0x1421, match64: 0x00000000, model64: 0x120420001204b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1204b00012053, model64: 0x120530001205b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1422, match64: 0x00000000, model64: 0x1205b00012069},
		modelTuple{type64: 0x2700000027, matchRI: 0x1423, match64: 0x00000000, model64: 0x1206900012075},
		modelTuple{type64: 0x2700000027, matchRI: 0x1424, match64: 0x00000000, model64: 0x1207500012080},
		modelTuple{type64: 0x2700000027, matchRI: 0x1425, match64: 0x00000000, model64: 0x1208000012091},
		modelTuple{type64: 0x2700000027, matchRI: 0x1426, match64: 0x00000000, model64: 0x334f00003356},
		modelTuple{type64: 0x2700000027, matchRI: 0x1427, match64: 0x00000000, model64: 0x120910001209c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1428, match64: 0x00000000, model64: 0x1209c000120a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1429, match64: 0x00000000, model64: 0x120a0000120af},
		modelTuple{type64: 0x2700000027, matchRI: 0x142a, match64: 0x00000000, model64: 0x120af000120b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x142b, match64: 0x00000000, model64: 0x120b9000120c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x142c, match64: 0x00000000, model64: 0x120c2000120cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x142d, match64: 0x00000000, model64: 0x120cb000120d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x142e, match64: 0x00000000, model64: 0x120d3000120e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x142f, match64: 0x00000000, model64: 0x120e2000120ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x120ec000120ff, model64: 0x120ff00012109},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121090001211b, model64: 0x1211b00012124},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121240001213a, model64: 0x1213a00012147},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1214700012159, model64: 0x1215900012162},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1216200012175, model64: 0x121750001217f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1217f00012192, model64: 0x120af000120b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1430, match64: 0x00000000, model64: 0x12192000121aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1431, match64: 0x00000000, model64: 0x121aa000121bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1432, match64: 0x00000000, model64: 0x121bc000121d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121d1000121e1, model64: 0x121e1000121f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121f1000121fe, model64: 0x121fe0001220b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1433, match64: 0x00000000, model64: 0x1220b00012221},
		modelTuple{type64: 0x2700000027, matchRI: 0x1434, match64: 0x00000000, model64: 0x1222100012233},
		modelTuple{type64: 0x2700000027, matchRI: 0x1435, match64: 0x00000000, model64: 0x122330001223f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1436, match64: 0x00000000, model64: 0x1223f00012252},
		modelTuple{type64: 0x2700000027, matchRI: 0x1437, match64: 0x00000000, model64: 0x1225200012265},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1226500012271, model64: 0x122330001223f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122710001227b, model64: 0x1227b00012285},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1228500012290, model64: 0x122900001229b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1229b000122a6, model64: 0x122a6000122b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122b1000122bf, model64: 0x122bf000122cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1438, match64: 0x00000000, model64: 0x122cd000122dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122dd000122e6, model64: 0x122e6000122ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1439, match64: 0x00000000, model64: 0x122ef000122fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x143a, match64: 0x00000000, model64: 0x122fe00012307},
		modelTuple{type64: 0x2700000027, matchRI: 0x143b, match64: 0x00000000, model64: 0x1230700012311},
		modelTuple{type64: 0x2700000027, matchRI: 0x143c, match64: 0x00000000, model64: 0x1231100012324},
		modelTuple{type64: 0x2700000027, matchRI: 0x143d, match64: 0x00000000, model64: 0x1232400012332},
		modelTuple{type64: 0x2700000027, matchRI: 0x143e, match64: 0x00000000, model64: 0x123320001234c},
		modelTuple{type64: 0x2700000027, matchRI: 0x143f, match64: 0x00000000, model64: 0x1234c0001236b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1440, match64: 0x00000000, model64: 0x1236b0001237e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1441, match64: 0x00000000, model64: 0x1237e0001238c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1442, match64: 0x00000000, model64: 0x1238c0001239a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1443, match64: 0x00000000, model64: 0x1239a000123a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1444, match64: 0x00000000, model64: 0x123a7000123b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1445, match64: 0x00000000, model64: 0x123b4000123bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1446, match64: 0x00000000, model64: 0x123b4000123bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1447, match64: 0x00000000, model64: 0x11e7f00011e87},
		modelTuple{type64: 0x2700000027, matchRI: 0x1448, match64: 0x00000000, model64: 0x123bc000123c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1449, match64: 0x00000000, model64: 0x123c4000123ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x144a, match64: 0x00000000, model64: 0x123ca000123d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x144b, match64: 0x00000000, model64: 0x123d3000123de},
		modelTuple{type64: 0x2700000027, matchRI: 0x144c, match64: 0x00000000, model64: 0x123d3000123de},
		modelTuple{type64: 0x2700000027, matchRI: 0x144d, match64: 0x00000000, model64: 0x123de000123e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x123e7000123ef, model64: 0x123e7000123ef},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x123ef000123f7, model64: 0x123ef000123f7},
		modelTuple{type64: 0x245800002460, matchRI: 0x144e, match64: 0x00000000, model64: 0x123f700012400},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1240000012408, model64: 0x124080001240f},
		modelTuple{type64: 0x2700000027, matchRI: 0x144f, match64: 0x00000000, model64: 0x1240f00012418},
		modelTuple{type64: 0x2700000027, matchRI: 0x1450, match64: 0x00000000, model64: 0x124180001241f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1451, match64: 0x00000000, model64: 0x1241f00012426},
		modelTuple{type64: 0x2700000027, matchRI: 0x1452, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1453, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1454, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1455, match64: 0x00000000, model64: 0x124260001242e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1456, match64: 0x00000000, model64: 0x124260001242e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1457, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1458, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1459, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x145a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x145c, match64: 0x00000000, model64: 0xd0880000d08b},
		modelTuple{type64: 0x2700000027, matchRI: 0x145d, match64: 0x00000000, model64: 0x8faf00008fb2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1243300012438, model64: 0x1243300012438},
		modelTuple{type64: 0x2700000027, matchRI: 0x145f, match64: 0x00000000, model64: 0xc39e0000c3a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1461, match64: 0x00000000, model64: 0x1244400012448},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1462, match64: 0x00000000, model64: 0x124480001244f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1464, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1465, match64: 0x00000000, model64: 0x124540001245f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1466, match64: 0x00000000, model64: 0x1245f00012469},
		modelTuple{type64: 0x2700000027, matchRI: 0x1467, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1468, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x146b, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x146c, match64: 0x00000000, model64: 0x1247b00012482},
		modelTuple{type64: 0x2700000027, matchRI: 0x146d, match64: 0x00000000, model64: 0x1248200012487},
		modelTuple{type64: 0x2700000027, matchRI: 0x146e, match64: 0x00000000, model64: 0x124870001248e},
		modelTuple{type64: 0x2700000027, matchRI: 0x146f, match64: 0x00000000, model64: 0x1248e0001248f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1470, match64: 0x00000000, model64: 0xddd90000dddb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1471, match64: 0x00000000, model64: 0x1248f00012495},
		modelTuple{type64: 0x2700000027, matchRI: 0x1472, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1473, match64: 0x00000000, model64: 0x124950001249f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1249f000124ae, model64: 0x124ae000124bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x124bd000124ca, model64: 0x124ca000124d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1474, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1475, match64: 0x00000000, model64: 0x124d7000124e1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x124e1000124e9, model64: 0x124e9000124f1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1476, match64: 0x00000000, model64: 0x124f1000124f9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1477, match64: 0x00000000, model64: 0x124f900012503},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1478, match64: 0x00000000, model64: 0x125030001250d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1479, match64: 0x00000000, model64: 0x1250d0001251e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x147a, match64: 0x00000000, model64: 0x1251e0001252d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x147b, match64: 0x00000000, model64: 0x1252d0001253f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x147c, match64: 0x00000000, model64: 0x1253f00012547},
		modelTuple{type64: 0x20d00000213, matchRI: 0x147d, match64: 0x00000000, model64: 0x1254700012551},
		modelTuple{type64: 0x20d00000213, matchRI: 0x147e, match64: 0x00000000, model64: 0x125510001255a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x147f, match64: 0x00000000, model64: 0x1255a0001255f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1480, match64: 0x00000000, model64: 0x1255f00012568},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1481, match64: 0x00000000, model64: 0x125680001256d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1482, match64: 0x00000000, model64: 0x1256d00012573},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1483, match64: 0x00000000, model64: 0x125730001257e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1484, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1487, match64: 0x00000000, model64: 0x1258f00012599},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12599000125af, model64: 0x125af000125c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1488, match64: 0x00000000, model64: 0x125c5000125ca},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x125d9000125e4, model64: 0x125e4000125f0},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x125f0000125f9, model64: 0x125f900012604},
		modelTuple{type64: 0x20d00000213, matchRI: 0x148b, match64: 0x00000000, model64: 0x126040001260d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1260d0001261b, model64: 0x1261b0001262a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1262a00012639, model64: 0x1263900012649},
		modelTuple{type64: 0x20d00000213, matchRI: 0x148c, match64: 0x00000000, model64: 0x126490001265a},
		modelTuple{type64: 0x2700000027, matchRI: 0x148d, match64: 0x00000000, model64: 0x1265a00012663},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x126630001266b, model64: 0x1266b00012673},
		modelTuple{type64: 0x2700000027, matchRI: 0x148e, match64: 0x00000000, model64: 0x126730001267b},
		modelTuple{type64: 0x2700000027, matchRI: 0x148f, match64: 0x00000000, model64: 0x104a7000104b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1267b00012684, model64: 0x1267b00012684},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1268400012690, model64: 0x126900001269c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1269c000126a7, model64: 0x126a7000126b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1490, match64: 0x00000000, model64: 0x126b2000126ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1491, match64: 0x00000000, model64: 0x4e7800004e7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1492, match64: 0x00000000, model64: 0x126ba000126c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1493, match64: 0x00000000, model64: 0x126c5000126cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1494, match64: 0x00000000, model64: 0x126cf000126d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x126d5000126e3, model64: 0x126e3000126f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x126f1000126ff, model64: 0x126ff0001270c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1495, match64: 0x00000000, model64: 0x1270c0001271c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1271c00012727, model64: 0x127270001272b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1272b00012730, model64: 0x1273000012734},
		modelTuple{type64: 0x2700000027, matchRI: 0x1496, match64: 0x00000000, model64: 0x127340001273e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1497, match64: 0x00000000, model64: 0x1273e00012747},
		modelTuple{type64: 0x2700000027, matchRI: 0x1498, match64: 0x00000000, model64: 0x127470001274d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1499, match64: 0x00000000, model64: 0x1274d00012751},
		modelTuple{type64: 0x2700000027, matchRI: 0x149a, match64: 0x00000000, model64: 0x127510001275b},
		modelTuple{type64: 0x2700000027, matchRI: 0x149b, match64: 0x00000000, model64: 0x1275b00012765},
		modelTuple{type64: 0x2700000027, matchRI: 0x149c, match64: 0x00000000, model64: 0x1276500012771},
		modelTuple{type64: 0x2700000027, matchRI: 0x149d, match64: 0x00000000, model64: 0x127710001277d},
		modelTuple{type64: 0x2700000027, matchRI: 0x149e, match64: 0x00000000, model64: 0x1277d00012789},
		modelTuple{type64: 0x2700000027, matchRI: 0x149f, match64: 0x00000000, model64: 0x1278900012790},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a0, match64: 0x00000000, model64: 0x1279000012797},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a1, match64: 0x00000000, model64: 0x12797000127a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127a1000127b1, model64: 0x127b1000127c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127c1000127c8, model64: 0x127c8000127cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14a3, match64: 0x00000000, model64: 0x127cf000127d7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14a4, match64: 0x00000000, model64: 0x127d7000127df},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a6, match64: 0x00000000, model64: 0x127e4000127f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a7, match64: 0x00000000, model64: 0x63e7000063ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a8, match64: 0x00000000, model64: 0x106200001067},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1280100012806, model64: 0x128060001280c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1280c00012817, model64: 0x1281700012820},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128310001283b, model64: 0x1283b0001283f},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ad, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1283f0001284d, model64: 0x1284d00012855},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1285500012862, model64: 0x1286200012869},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1286900012875, model64: 0x128750001287b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14ae, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x14af, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b2, match64: 0x00000000, model64: 0x128870001288d},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x14b3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1289200012899, model64: 0x12899000128a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128a0000128a8, model64: 0x128a8000128b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b6, match64: 0x00000000, model64: 0x128b3000128c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b7, match64: 0x00000000, model64: 0x128c1000128c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ba, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14bb, match64: 0x00000000, model64: 0x128c9000128d7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14bc, match64: 0x00000000, model64: 0x128d7000128f0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14bd, match64: 0x00000000, model64: 0x128f000012901},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14be, match64: 0x00000000, model64: 0x1290100012911},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14bf, match64: 0x00000000, model64: 0x1291100012920},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14c0, match64: 0x00000000, model64: 0x129200001292f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14c1, match64: 0x00000000, model64: 0x1292f0001293f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14c2, match64: 0x00000000, model64: 0x1293f0001294f},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c4, match64: 0x00000000, model64: 0x1295300012958},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1295e0001296c, model64: 0x1296c00012973},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x129730001297d, model64: 0x1297d00012980},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12995000129a3, model64: 0x129a3000129af},
		modelTuple{type64: 0x2700000027, matchRI: 0x14cb, match64: 0x00000000, model64: 0x129af000129bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x129bc000129c9, model64: 0x129c9000129d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x14cc, match64: 0x00000000, model64: 0x58b5000058ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x14cd, match64: 0x00000000, model64: 0x58b5000058ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ce, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x14cf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x129e3000129f2, model64: 0x129e3000129f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x129f200012a00, model64: 0x129f200012a00},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d2, match64: 0x00000000, model64: 0x12a0300012a0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12a0d00012a15, model64: 0x12a1500012a1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12a1e00012a2b, model64: 0x12a2b00012a3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d3, match64: 0x00000000, model64: 0x12a3a00012a45},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d4, match64: 0x00000000, model64: 0x12a4500012a4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d5, match64: 0x00000000, model64: 0x12a4b00012a52},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12a5200012a58, model64: 0x12a5800012a5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d6, match64: 0x00000000, model64: 0x5af700005afb},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d7, match64: 0x00000000, model64: 0x12a5f00012a6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d8, match64: 0x00000000, model64: 0x12a6a00012a73},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d9, match64: 0x00000000, model64: 0x12a7300012a77},
		modelTuple{type64: 0x2700000027, matchRI: 0x14da, match64: 0x00000000, model64: 0x12a7700012a7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x14db, match64: 0x00000000, model64: 0x12a7b00012a7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x14dc, match64: 0x00000000, model64: 0x12a7f00012a84},
		modelTuple{type64: 0x2700000027, matchRI: 0x14dd, match64: 0x00000000, model64: 0x12a8400012a89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12a8900012a91, model64: 0xe1ca0000e1d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12a9100012a98, model64: 0x12a9800012aa0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14de, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x14df, match64: 0x00000000, model64: 0x12aa000012aa7},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x12aac00012aba},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14e3, match64: 0x00000000, model64: 0x12abe00012ac8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x14e4, match64: 0x00000000, model64: 0x12ac800012ad9},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x14e5, match64: 0x00000000, model64: 0x12ad900012adf},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x14e6, match64: 0x00000000, model64: 0x12adf00012ae6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x12af200012aff},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ea, match64: 0x00000000, model64: 0x427000004273},
		modelTuple{type64: 0x2700000027, matchRI: 0x14eb, match64: 0x00000000, model64: 0xc39e0000c3a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ec, match64: 0x00000000, model64: 0x6dcf00006dd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b0900012b0f, model64: 0x534b0000534d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b0f00012b15, model64: 0xddd90000dddb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b1500012b1b, model64: 0x12b1b00012b1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b1e00012b24, model64: 0xdde20000dde4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b2400012b2a, model64: 0x12b2a00012b2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b2d00012b33, model64: 0x12b3300012b36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b3600012b3c, model64: 0x12b3c00012b3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b3f00012b45, model64: 0x12b4500012b49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b4900012b4f, model64: 0x12b4f00012b56},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ed, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b6000012b66, model64: 0x2f5000002f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ef, match64: 0x00000000, model64: 0x12b6600012b6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b6b00012b74, model64: 0x116580001165d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b7400012b7b, model64: 0x12b7b00012b7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b7e00012b87, model64: 0x12b8700012b8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b8c00012b96, model64: 0x12b9600012b9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12b9c00012ba8, model64: 0x12ba800012bb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12bb000012bb7, model64: 0x7fec00007fef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12bb700012bbe, model64: 0x12bbe00012bc1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12bc100012bc8, model64: 0x12bc800012bcb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12bcb00012bd3, model64: 0x12bd300012bd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12bd700012be2, model64: 0x12be200012be9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12be900012bf1, model64: 0x12bf100012bf5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12bf500012bfe, model64: 0x12bfe00012c03},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f0, match64: 0x00000000, model64: 0x12c0300012c06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c0600012c0f, model64: 0x12c0f00012c14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c1400012c1b, model64: 0x12c1b00012c1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c1e00012c27, model64: 0x4bc200004bc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c2700012c2e, model64: 0x97e8000097eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c2e00012c39, model64: 0x12c3900012c40},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c4000012c44, model64: 0x11d1a00011d1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c4400012c49, model64: 0xf95c0000f961},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c4900012c4e, model64: 0x12bfe00012c03},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f3, match64: 0x00000000, model64: 0x12c5200012c63},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f4, match64: 0x00000000, model64: 0x12c6300012c73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c7300012c7d, model64: 0x12c7d00012c8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c8c00012c96, model64: 0x12c9600012cb4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12cb400012cbe, model64: 0x12cbe00012cc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12cc400012cce, model64: 0x12cce00012cd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f6, match64: 0x00000000, model64: 0x7c0f00007c13},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f8, match64: 0x00000000, model64: 0x12ce300012ce8},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f9, match64: 0x00000000, model64: 0x12ce800012cee},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12cfd00012d08, model64: 0x12cfd00012d08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d0800012d12, model64: 0x12d1200012d1c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x12d1c00012d2a, model64: 0x12d2a00012d38},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x12d3800012d40, model64: 0x12d4000012d48},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x12d4800012d4f, model64: 0x12d4f00012d56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d5d00012d65, model64: 0x12d6500012d6e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x58b5000058ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ff, match64: 0x00000000, model64: 0x2790000027e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1500, match64: 0x00000000, model64: 0x12d7d00012d83},
		modelTuple{type64: 0x2700000027, matchRI: 0x1501, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1502, match64: 0x00000000, model64: 0x12d8300012d8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1503, match64: 0x00000000, model64: 0x12d8a00012d97},
		modelTuple{type64: 0x2700000027, matchRI: 0x1505, match64: 0x00000000, model64: 0x12d9c00012da9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1506, match64: 0x00000000, model64: 0x12da900012db0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1507, match64: 0x00000000, model64: 0x12db000012dbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1508, match64: 0x00000000, model64: 0x12dbb00012dcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1509, match64: 0x00000000, model64: 0x12dcc00012dde},
		modelTuple{type64: 0x2700000027, matchRI: 0x150a, match64: 0x00000000, model64: 0x12dde00012def},
		modelTuple{type64: 0x2700000027, matchRI: 0x150b, match64: 0x00000000, model64: 0x12def00012dfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x150c, match64: 0x00000000, model64: 0x12dfb00012e08},
		modelTuple{type64: 0x2700000027, matchRI: 0x150d, match64: 0x00000000, model64: 0x12e0800012e19},
		modelTuple{type64: 0x2700000027, matchRI: 0x150e, match64: 0x00000000, model64: 0x12e1900012e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x150f, match64: 0x00000000, model64: 0x12e2500012e30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1510, match64: 0x00000000, model64: 0x12e3000012e3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1511, match64: 0x00000000, model64: 0x12e3a00012e45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12e4500012e51, model64: 0x12e5100012e5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1512, match64: 0x00000000, model64: 0xefcb0000efd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1513, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1514, match64: 0x00000000, model64: 0x12e5f00012e72},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1515, match64: 0x00000000, model64: 0x12e7200012e8a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1516, match64: 0x00000000, model64: 0x12e8a00012e94},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1517, match64: 0x00000000, model64: 0x12e9400012e9f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1518, match64: 0x00000000, model64: 0x12e9f00012eac},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1519, match64: 0x00000000, model64: 0x12eac00012eb9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x151d, match64: 0x00000000, model64: 0x12ece00012ed1},
		modelTuple{type64: 0x2700000027, matchRI: 0x151e, match64: 0x00000000, model64: 0x12ed100012ed4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12ed400012ee2, model64: 0x12ee200012ee9},
		modelTuple{type64: 0x2700000027, matchRI: 0x151f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1522, match64: 0x00000000, model64: 0x12eef00012ef1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1523, match64: 0x00000000, model64: 0x182b0000182d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1524, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x46a2000046a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1527, match64: 0x00000000, model64: 0x12efd00012f0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1528, match64: 0x00000000, model64: 0x12f0a00012f14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12f1400012f1a, model64: 0x12f1a00012f25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12f2c00012f32, model64: 0x12f3200012f3d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x12f4300012f4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x152a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x152c, match64: 0x00000000, model64: 0x91ee000091f0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12f7f00012f87, model64: 0x12f8700012f90},
		modelTuple{type64: 0x5db000005e5, matchRI: -0x0001, match64: 0x12f9000012f98, model64: 0x12f9800012fa6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12fa600012faf, model64: 0x12faf00012fbe},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1535, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1536, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1538, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1539, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12fe300012fec, model64: 0x12fec00012ff8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12ff800013001, model64: 0x1300100013007},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1300700013011, model64: 0x1301100013018},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1301800013022, model64: 0x1302200013029},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1302900013034, model64: 0x130340001303c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1303c00013046, model64: 0x130460001304e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1304e00013059, model64: 0x1305900013060},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130600001306c, model64: 0x1306c00013074},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130740001307f, model64: 0x1307f00013086},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130860001308e, model64: 0x1308e00013097},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13097000130a0, model64: 0x130a0000130ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130ad000130b6, model64: 0x340b0000340c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130b6000130be, model64: 0x130be000130c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130c2000130c8, model64: 0x130c8000130d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x153b, match64: 0x00000000, model64: 0xcd0b0000cd12},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x153e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x153f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1540, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1543, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1544, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1545, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1546, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1548, match64: 0x00000000, model64: 0x10e3000010e31},
		modelTuple{type64: 0x2700000027, matchRI: 0x1549, match64: 0x00000000, model64: 0x189100001892},
		modelTuple{type64: 0x2700000027, matchRI: 0x154a, match64: 0x00000000, model64: 0x18c3000018c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x154b, match64: 0x00000000, model64: 0x130f9000130fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130fa00013101, model64: 0x18c9000018ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x154c, match64: 0x00000000, model64: 0x340b0000340c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1310100013110, model64: 0x1311000013119},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1311900013125, model64: 0x131250001312b},
		modelTuple{type64: 0x2700000027, matchRI: 0x154d, match64: 0x00000000, model64: 0x1312b00013133},
		modelTuple{type64: 0x2700000027, matchRI: 0x154e, match64: 0x00000000, model64: 0x131330001313b},
		modelTuple{type64: 0x2700000027, matchRI: 0x154f, match64: 0x00000000, model64: 0x1313b00013143},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131430001314f, model64: 0x1314f00013155},
		modelTuple{type64: 0x2700000027, matchRI: 0x1550, match64: 0x00000000, model64: 0x131550001315e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1315e0001316d, model64: 0x1316d00013175},
		modelTuple{type64: 0x2700000027, matchRI: 0x1551, match64: 0x00000000, model64: 0x1317500013177},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131770001317d, model64: 0x1317d00013181},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1318100013187, model64: 0x131870001318b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1318b00013191, model64: 0x1319100013195},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131950001319c, model64: 0x1319c000131a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131a3000131aa, model64: 0x131aa000131b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1552, match64: 0x00000000, model64: 0x131b1000131b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131b8000131c2, model64: 0x131c2000131c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1553, match64: 0x00000000, model64: 0x131c6000131ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1554, match64: 0x00000000, model64: 0x131ce000131de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131de000131e7, model64: 0x131e7000131ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131ec000131f5, model64: 0x131f5000131f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131f900013205, model64: 0x1320500013215},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1321500013227, model64: 0x1322700013230},
		modelTuple{type64: 0x2700000027, matchRI: 0x1555, match64: 0x00000000, model64: 0x132300001323d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1323d00013248, model64: 0x132480001324c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1324c00013257, model64: 0x132570001325b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1325b00013266, model64: 0x132660001326a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1326a00013275, model64: 0x1327500013279},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1327900013284, model64: 0x1328400013288},
		modelTuple{type64: 0x2700000027, matchRI: 0x1556, match64: 0x00000000, model64: 0x1328800013294},
		modelTuple{type64: 0x2700000027, matchRI: 0x1557, match64: 0x00000000, model64: 0x132940001329e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1558, match64: 0x00000000, model64: 0x1329e000132a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1559, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x155a, match64: 0x00000000, model64: 0x132a6000132ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x155b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x155c, match64: 0x00000000, model64: 0x132ad000132b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x155d, match64: 0x00000000, model64: 0x132b7000132c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x155e, match64: 0x00000000, model64: 0x132c0000132c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x132c9000132cf, model64: 0x132cf000132d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x155f, match64: 0x00000000, model64: 0x132d8000132e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1560, match64: 0x00000000, model64: 0x132e1000132ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x132ea000132f1, model64: 0x132f1000132fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1561, match64: 0x00000000, model64: 0x132fa00013303},
		modelTuple{type64: 0x2700000027, matchRI: 0x1562, match64: 0x00000000, model64: 0x133030001330d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1330d00013313, model64: 0x133130001331c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1331c00013325, model64: 0x1331c00013325},
		modelTuple{type64: 0x2700000027, matchRI: 0x1563, match64: 0x00000000, model64: 0x133250001332e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1564, match64: 0x00000000, model64: 0x1332e00013338},
		modelTuple{type64: 0x2700000027, matchRI: 0x1565, match64: 0x00000000, model64: 0x1333800013341},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x133410001334a, model64: 0x1334a00013353},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1335300013359, model64: 0x1335900013362},
		modelTuple{type64: 0x2700000027, matchRI: 0x1566, match64: 0x00000000, model64: 0x133620001336b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1567, match64: 0x00000000, model64: 0x1336b00013374},
		modelTuple{type64: 0x2700000027, matchRI: 0x1568, match64: 0x00000000, model64: 0x133740001337d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1337d00013386, model64: 0x1338600013390},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1339000013397, model64: 0x13397000133a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1569, match64: 0x00000000, model64: 0x133a0000133aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x156a, match64: 0x00000000, model64: 0x133aa000133b6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x156b, match64: 0x00000000, model64: 0x133b6000133b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x156c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x156d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x156e, match64: 0x00000000, model64: 0x6f9200006f95},
		modelTuple{type64: 0x2700000027, matchRI: 0x156f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1570, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1571, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1572, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1573, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1574, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x133b9000133c4, model64: 0x133c4000133c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1575, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1576, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1577, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1578, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x157a, match64: 0x00000000, model64: 0x133cc000133d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x157b, match64: 0x00000000, model64: 0x133d2000133d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x157c, match64: 0x00000000, model64: 0x133d7000133dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x157d, match64: 0x00000000, model64: 0x133dd000133e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x157e, match64: 0x00000000, model64: 0x133e3000133ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x157f, match64: 0x00000000, model64: 0x133ed000133fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1580, match64: 0x00000000, model64: 0x133fb00013401},
		modelTuple{type64: 0x2700000027, matchRI: 0x1581, match64: 0x00000000, model64: 0x1340100013407},
		modelTuple{type64: 0x2700000027, matchRI: 0x1582, match64: 0x00000000, model64: 0x134070001340e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1583, match64: 0x00000000, model64: 0x1340e00013414},
		modelTuple{type64: 0x2700000027, matchRI: 0x1584, match64: 0x00000000, model64: 0x134140001341a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1585, match64: 0x00000000, model64: 0x1341a00013420},
		modelTuple{type64: 0x2700000027, matchRI: 0x1586, match64: 0x00000000, model64: 0x1342000013425},
		modelTuple{type64: 0x2700000027, matchRI: 0x1587, match64: 0x00000000, model64: 0x134250001342b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1588, match64: 0x00000000, model64: 0x1342b00013430},
		modelTuple{type64: 0x2700000027, matchRI: 0x1589, match64: 0x00000000, model64: 0x1343000013436},
		modelTuple{type64: 0x2700000027, matchRI: 0x158a, match64: 0x00000000, model64: 0x134360001343d},
		modelTuple{type64: 0x2700000027, matchRI: 0x158b, match64: 0x00000000, model64: 0x1343d00013445},
		modelTuple{type64: 0x2700000027, matchRI: 0x158c, match64: 0x00000000, model64: 0x134450001344c},
		modelTuple{type64: 0x2700000027, matchRI: 0x158d, match64: 0x00000000, model64: 0x1344c00013453},
		modelTuple{type64: 0x2700000027, matchRI: 0x158e, match64: 0x00000000, model64: 0x134530001345b},
		modelTuple{type64: 0x2700000027, matchRI: 0x158f, match64: 0x00000000, model64: 0x1345b00013466},
		modelTuple{type64: 0x2700000027, matchRI: 0x1590, match64: 0x00000000, model64: 0x835b00008361},
		modelTuple{type64: 0x2700000027, matchRI: 0x1591, match64: 0x00000000, model64: 0x6f8f00006f92},
		modelTuple{type64: 0x2700000027, matchRI: 0x1592, match64: 0x00000000, model64: 0x4bc200004bc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1593, match64: 0x00000000, model64: 0x134660001346a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1594, match64: 0x00000000, model64: 0xffad0000ffb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1595, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1596, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1346a00013478, model64: 0x134780001347f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1597, match64: 0x00000000, model64: 0x1347f0001348a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1598, match64: 0x00000000, model64: 0x1348a00013495},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1599, match64: 0x00000000, model64: 0x134950001349f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x159a, match64: 0x00000000, model64: 0x1349f000134a9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x159b, match64: 0x00000000, model64: 0x134a9000134b4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x159c, match64: 0x00000000, model64: 0x134b4000134c3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x159d, match64: 0x00000000, model64: 0x134c3000134c8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x159e, match64: 0x00000000, model64: 0x134c8000134d1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x159f, match64: 0x00000000, model64: 0x134d1000134d8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a0, match64: 0x00000000, model64: 0x134d8000134e3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a1, match64: 0x00000000, model64: 0x134e3000134ed},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a2, match64: 0x00000000, model64: 0x134ed000134fd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a3, match64: 0x00000000, model64: 0x134fd00013508},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a4, match64: 0x00000000, model64: 0x1350800013517},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a5, match64: 0x00000000, model64: 0x1351700013521},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a6, match64: 0x00000000, model64: 0x135210001352b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a7, match64: 0x00000000, model64: 0x1352b00013536},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a8, match64: 0x00000000, model64: 0x1353600013540},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15a9, match64: 0x00000000, model64: 0xd5af0000d5b4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15aa, match64: 0x00000000, model64: 0x135400001354b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15ab, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ad, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15af, match64: 0x00000000, model64: 0x1354f00013552},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b0, match64: 0x00000000, model64: 0xe9190000e91c},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b1, match64: 0x00000000, model64: 0x135520001355a},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b2, match64: 0x00000000, model64: 0x1355a0001355d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b3, match64: 0x00000000, model64: 0x6d6d00006d74},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1357500013583},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b8, match64: 0x00000000, model64: 0x1283b0001283f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b9, match64: 0x00000000, model64: 0x135860001358e},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ba, match64: 0x00000000, model64: 0x1358e00013595},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bb, match64: 0x00000000, model64: 0x1359500013599},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bc, match64: 0x00000000, model64: 0x13599000135a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bd, match64: 0x00000000, model64: 0x135a0000135a4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x182a0000182b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c0, match64: 0x00000000, model64: 0x135b5000135bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x135ca000135d6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135e3000135e9, model64: 0x135e9000135ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135ec000135f2, model64: 0x135f2000135fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x135fb00013601, model64: 0x1360100013608},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136080001360e, model64: 0x1360e00013615},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136150001361b, model64: 0x1361b00013623},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1362300013629, model64: 0x1362900013638},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136380001363e, model64: 0x1363e0001364d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1364d00013653, model64: 0x1365300013663},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c7, match64: 0x00000000, model64: 0x136630001366e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1366e00013674, model64: 0x136740001367f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1367f00013685, model64: 0x1368500013691},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1369100013697, model64: 0x13697000136a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136a5000136ab, model64: 0x136ab000136b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c8, match64: 0x00000000, model64: 0x136b6000136bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c9, match64: 0x00000000, model64: 0x136bd000136c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136c5000136cb, model64: 0x136cb000136ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136ce000136d4, model64: 0x136d4000136d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136d6000136dc, model64: 0x136dc000136e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136e3000136e9, model64: 0x136e9000136ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x136ef000136f5, model64: 0x136f5000136f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ca, match64: 0x00000000, model64: 0x136f7000136fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cb, match64: 0x00000000, model64: 0x136fe00013704},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137040001370a, model64: 0x1370a00013715},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137150001371b, model64: 0x1371b0001371e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1371e00013727, model64: 0x137270001372e},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cc, match64: 0x00000000, model64: 0x1372e00013738},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cd, match64: 0x00000000, model64: 0x1373800013740},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1374000013746, model64: 0x1374600013749},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137490001374f, model64: 0x1374f00013753},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1375300013759, model64: 0x1375900013761},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1376100013767, model64: 0x10e4b00010e4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137670001376d, model64: 0x1376d00013770},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ce, match64: 0x00000000, model64: 0x1377000013778},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137780001377e, model64: 0x1377e00013788},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137880001378e, model64: 0x1378e00013796},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137960001379c, model64: 0x1379c000137a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137a0000137a6, model64: 0x137a6000137a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137a9000137af, model64: 0x137af000137b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137b2000137b8, model64: 0x137b8000137c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137c1000137c7, model64: 0xe4220000e424},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137c7000137cd, model64: 0x137cd000137d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137d6000137dc, model64: 0x137dc000137e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137e8000137ee, model64: 0xff4c0000ff50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137ee000137f4, model64: 0x137f4000137fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137fb00013801, model64: 0x1380100013808},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138080001380e, model64: 0x1380e00013810},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1381000013816, model64: 0x138160001381d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1381d00013823, model64: 0x1382300013825},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cf, match64: 0x00000000, model64: 0x1382500013827},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1382700013831, model64: 0x1383100013834},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d4, match64: 0x00000000, model64: 0x138380001383c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1384200013851, model64: 0x1385100013861},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d6, match64: 0x00000000, model64: 0x138610001386e},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x15d8, match64: 0x00000000, model64: 0x1386e0001387f},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1387f00013895, model64: 0x13895000138a2},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x138a2000138af, model64: 0x138af000138b8},
		modelTuple{type64: 0xed000000f4, matchRI: -0x0001, match64: 0x138b8000138be, model64: 0x138be000138cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x15da, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15db, match64: 0x00000000, model64: 0x138cf000138d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x15dc, match64: 0x00000000, model64: 0x138d2000138dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x15dd, match64: 0x00000000, model64: 0x138dc000138e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x15de, match64: 0x00000000, model64: 0x138e2000138f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x15df, match64: 0x00000000, model64: 0x138f400013902},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e0, match64: 0x00000000, model64: 0x139020001390b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e1, match64: 0x00000000, model64: 0x1cc000001cf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15e2, match64: 0x00000000, model64: 0x1390b00013916},
		modelTuple{type64: 0x20d00000213, matchRI: 0x15e3, match64: 0x00000000, model64: 0x139160001391c},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x15e7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1393000013935, model64: 0xd5af0000d5b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ee, match64: 0x00000000, model64: 0x139350001393c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139440001394c, model64: 0x139440001394c},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f1, match64: 0x00000000, model64: 0x4e4d00004e50},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1395800013960, model64: 0x139600001396a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1396a00013974, model64: 0x100630001006b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139740001397d, model64: 0x1397d0001398c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1398c00013994, model64: 0x139940001399e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1399e000139a8, model64: 0x139a8000139b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139b4000139be, model64: 0x139be000139ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f4, match64: 0x00000000, model64: 0x139ca000139d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139d5000139de, model64: 0x139d5000139de},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f5, match64: 0x00000000, model64: 0x139de000139e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f6, match64: 0x00000000, model64: 0x139e6000139ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139ef000139f7, model64: 0x139f7000139fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139fd00013a07, model64: 0x13a0700013a15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a1500013a21, model64: 0x13a2100013a2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f8, match64: 0x00000000, model64: 0x13a3300013a36},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f9, match64: 0x00000000, model64: 0x13a3600013a3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fa, match64: 0x00000000, model64: 0x13a3c00013a40},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fb, match64: 0x00000000, model64: 0x13a4000013a43},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fc, match64: 0x00000000, model64: 0x13a4300013a47},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fd, match64: 0x00000000, model64: 0x13a4700013a4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a4b00013a52, model64: 0x13a5200013a56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a5600013a5d, model64: 0x13a5d00013a61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a6100013a68, model64: 0x13a6800013a6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a6b00013a72, model64: 0x13a7200013a76},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fe, match64: 0x00000000, model64: 0x13a7600013a79},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ff, match64: 0x00000000, model64: 0x13a3c00013a40},
		modelTuple{type64: 0x2700000027, matchRI: 0x1600, match64: 0x00000000, model64: 0x13a7900013a7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1601, match64: 0x00000000, model64: 0x13a7c00013a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x1602, match64: 0x00000000, model64: 0x13a8000013a83},
		modelTuple{type64: 0x2700000027, matchRI: 0x1603, match64: 0x00000000, model64: 0x13a8300013a86},
		modelTuple{type64: 0x2700000027, matchRI: 0x1604, match64: 0x00000000, model64: 0x15180000151a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1605, match64: 0x00000000, model64: 0x13a8600013a8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1606, match64: 0x00000000, model64: 0x13a8c00013a90},
		modelTuple{type64: 0x2700000027, matchRI: 0x1607, match64: 0x00000000, model64: 0x13a9000013a93},
		modelTuple{type64: 0x2700000027, matchRI: 0x1608, match64: 0x00000000, model64: 0x13a9300013a96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1609, match64: 0x00000000, model64: 0x13a9600013a99},
		modelTuple{type64: 0x2700000027, matchRI: 0x160a, match64: 0x00000000, model64: 0x13a9900013a9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x160b, match64: 0x00000000, model64: 0x582200005825},
		modelTuple{type64: 0x2700000027, matchRI: 0x160c, match64: 0x00000000, model64: 0x154500001547},
		modelTuple{type64: 0x2700000027, matchRI: 0x160d, match64: 0x00000000, model64: 0x13a9c00013aa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x160e, match64: 0x00000000, model64: 0x13aa500013aab},
		modelTuple{type64: 0x2700000027, matchRI: 0x160f, match64: 0x00000000, model64: 0x13aab00013aae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1610, match64: 0x00000000, model64: 0x13aae00013ab1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1611, match64: 0x00000000, model64: 0x13ab100013ab4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1612, match64: 0x00000000, model64: 0x13ab400013ab7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1613, match64: 0x00000000, model64: 0x13ab700013abb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1614, match64: 0x00000000, model64: 0x13abb00013ac2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1615, match64: 0x00000000, model64: 0x13ac200013ac8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1616, match64: 0x00000000, model64: 0x13ac800013acb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1617, match64: 0x00000000, model64: 0x13acb00013acf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1618, match64: 0x00000000, model64: 0x13acf00013ad5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1619, match64: 0x00000000, model64: 0x13ad500013ad8},
		modelTuple{type64: 0x2700000027, matchRI: 0x161a, match64: 0x00000000, model64: 0x13ad800013adf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13adf00013ae5, model64: 0x13ae500013aeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x161b, match64: 0x00000000, model64: 0x13aeb00013aee},
		modelTuple{type64: 0x2700000027, matchRI: 0x161c, match64: 0x00000000, model64: 0x13aee00013af8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13af800013afe, model64: 0x13afe00013b04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b0400013b0b, model64: 0x13b0b00013b0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b0e00013b14, model64: 0x13b1400013b17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b1700013b1d, model64: 0x13b1d00013b20},
		modelTuple{type64: 0x2700000027, matchRI: 0x161d, match64: 0x00000000, model64: 0x13b2000013b23},
		modelTuple{type64: 0x2700000027, matchRI: 0x161e, match64: 0x00000000, model64: 0x155c0000155e},
		modelTuple{type64: 0x2700000027, matchRI: 0x161f, match64: 0x00000000, model64: 0x13b2300013b26},
		modelTuple{type64: 0x2700000027, matchRI: 0x1620, match64: 0x00000000, model64: 0x13b2600013b30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1621, match64: 0x00000000, model64: 0xc9ec0000c9ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1622, match64: 0x00000000, model64: 0x13b3000013b36},
		modelTuple{type64: 0x2700000027, matchRI: 0x1623, match64: 0x00000000, model64: 0x13b3600013b39},
		modelTuple{type64: 0x2700000027, matchRI: 0x1624, match64: 0x00000000, model64: 0x13b3900013b3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1625, match64: 0x00000000, model64: 0x13b3f00013b46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b4600013b4d, model64: 0x13b4d00013b50},
		modelTuple{type64: 0x2700000027, matchRI: 0x1626, match64: 0x00000000, model64: 0x13b5000013b53},
		modelTuple{type64: 0x2700000027, matchRI: 0x1627, match64: 0x00000000, model64: 0x13b5300013b59},
		modelTuple{type64: 0x2700000027, matchRI: 0x1628, match64: 0x00000000, model64: 0x13b5900013b5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1629, match64: 0x00000000, model64: 0x13b5f00013b62},
		modelTuple{type64: 0x2700000027, matchRI: 0x162a, match64: 0x00000000, model64: 0x13b6200013b65},
		modelTuple{type64: 0x2700000027, matchRI: 0x162b, match64: 0x00000000, model64: 0x13b6500013b69},
		modelTuple{type64: 0x2700000027, matchRI: 0x162c, match64: 0x00000000, model64: 0x13b6900013b6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x162d, match64: 0x00000000, model64: 0x13b6c00013b6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x162e, match64: 0x00000000, model64: 0xf64f0000f651},
		modelTuple{type64: 0x2700000027, matchRI: 0x162f, match64: 0x00000000, model64: 0x13b6f00013b72},
		modelTuple{type64: 0x2700000027, matchRI: 0x1630, match64: 0x00000000, model64: 0x13b7200013b7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1631, match64: 0x00000000, model64: 0x3ce000003d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1632, match64: 0x00000000, model64: 0x13b7c00013b85},
		modelTuple{type64: 0x2700000027, matchRI: 0x1633, match64: 0x00000000, model64: 0x13b8500013b88},
		modelTuple{type64: 0x2700000027, matchRI: 0x1634, match64: 0x00000000, model64: 0x13b8800013b8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1635, match64: 0x00000000, model64: 0x13b8b00013b8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1636, match64: 0x00000000, model64: 0x13b8f00013b92},
		modelTuple{type64: 0x2700000027, matchRI: 0x1637, match64: 0x00000000, model64: 0x13b9200013b96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b9600013b9c, model64: 0x13b9c00013ba2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1638, match64: 0x00000000, model64: 0x13ba200013ba5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1639, match64: 0x00000000, model64: 0x13b3900013b3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x163a, match64: 0x00000000, model64: 0x13ba500013ba8},
		modelTuple{type64: 0x2700000027, matchRI: 0x163b, match64: 0x00000000, model64: 0x13ba800013bab},
		modelTuple{type64: 0x2700000027, matchRI: 0x163c, match64: 0x00000000, model64: 0x13bab00013bae},
		modelTuple{type64: 0x2700000027, matchRI: 0x163d, match64: 0x00000000, model64: 0x13bae00013bb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x163e, match64: 0x00000000, model64: 0x13bb200013bb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13bb500013bbc, model64: 0x13bbc00013bc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x163f, match64: 0x00000000, model64: 0x13bc300013bcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1640, match64: 0x00000000, model64: 0x13bcb00013bd2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13bd200013bd9, model64: 0x13bd900013bdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1641, match64: 0x00000000, model64: 0x13bdf00013be2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1642, match64: 0x00000000, model64: 0x13be200013be9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1643, match64: 0x00000000, model64: 0x13be900013bec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1644, match64: 0x00000000, model64: 0x13bec00013bf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1645, match64: 0x00000000, model64: 0x13bf300013bf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1646, match64: 0x00000000, model64: 0x13bf600013bf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1647, match64: 0x00000000, model64: 0x13bf800013bff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1648, match64: 0x00000000, model64: 0x1023a0001023c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1649, match64: 0x00000000, model64: 0x13bff00013c07},
		modelTuple{type64: 0x2700000027, matchRI: 0x164a, match64: 0x00000000, model64: 0x13c0700013c09},
		modelTuple{type64: 0x2700000027, matchRI: 0x164b, match64: 0x00000000, model64: 0x13c0900013c0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x164c, match64: 0x00000000, model64: 0x13c0b00013c11},
		modelTuple{type64: 0x2700000027, matchRI: 0x164d, match64: 0x00000000, model64: 0x13c1100013c15},
		modelTuple{type64: 0x2700000027, matchRI: 0x164e, match64: 0x00000000, model64: 0x13c1500013c1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x164f, match64: 0x00000000, model64: 0x13c1c00013c28},
		modelTuple{type64: 0x2700000027, matchRI: 0x1650, match64: 0x00000000, model64: 0x13c2800013c2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1651, match64: 0x00000000, model64: 0x13c2e00013c39},
		modelTuple{type64: 0x2700000027, matchRI: 0x1652, match64: 0x00000000, model64: 0x13c3900013c3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1653, match64: 0x00000000, model64: 0x13c3f00013c46},
		modelTuple{type64: 0x2700000027, matchRI: 0x1654, match64: 0x00000000, model64: 0x13c4600013c4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1655, match64: 0x00000000, model64: 0x13c4f00013c55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1656, match64: 0x00000000, model64: 0x13c5500013c5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1657, match64: 0x00000000, model64: 0x13c5c00013c68},
		modelTuple{type64: 0x2700000027, matchRI: 0x1658, match64: 0x00000000, model64: 0x13c6800013c73},
		modelTuple{type64: 0x2700000027, matchRI: 0x1659, match64: 0x00000000, model64: 0x13c7300013c7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x165a, match64: 0x00000000, model64: 0x13c7e00013c89},
		modelTuple{type64: 0x2700000027, matchRI: 0x165b, match64: 0x00000000, model64: 0x13c8900013c92},
		modelTuple{type64: 0x2700000027, matchRI: 0x165c, match64: 0x00000000, model64: 0x13c9200013c9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x165d, match64: 0x00000000, model64: 0x13c9c00013ca3},
		modelTuple{type64: 0x2700000027, matchRI: 0x165e, match64: 0x00000000, model64: 0x13ca300013ca9},
		modelTuple{type64: 0x2700000027, matchRI: 0x165f, match64: 0x00000000, model64: 0x13ca900013cbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1660, match64: 0x00000000, model64: 0x13cbb00013cc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1661, match64: 0x00000000, model64: 0x13cc200013cce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1662, match64: 0x00000000, model64: 0x13cce00013cd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1663, match64: 0x00000000, model64: 0x13cd900013ce0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1664, match64: 0x00000000, model64: 0x13ce000013ceb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1665, match64: 0x00000000, model64: 0x13ceb00013cf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1666, match64: 0x00000000, model64: 0x13cf600013d02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1667, match64: 0x00000000, model64: 0x13d0200013d09},
		modelTuple{type64: 0x2700000027, matchRI: 0x1668, match64: 0x00000000, model64: 0x13d0900013d14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13d1400013d1a, model64: 0x13d1a00013d25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13d2500013d2b, model64: 0x13d2b00013d32},
		modelTuple{type64: 0x2700000027, matchRI: 0x1669, match64: 0x00000000, model64: 0x13d3200013d3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x166a, match64: 0x00000000, model64: 0x91ee000091f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x166b, match64: 0x00000000, model64: 0x4c3000004c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x166c, match64: 0x00000000, model64: 0xe52a0000e52c},
		modelTuple{type64: 0x2700000027, matchRI: 0x166d, match64: 0x00000000, model64: 0xe3f60000e3f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x166e, match64: 0x00000000, model64: 0xe5350000e537},
		modelTuple{type64: 0x2700000027, matchRI: 0x166f, match64: 0x00000000, model64: 0x13d3a00013d3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1670, match64: 0x00000000, model64: 0x13d3d00013d40},
		modelTuple{type64: 0x2700000027, matchRI: 0x1671, match64: 0x00000000, model64: 0x13d4000013d44},
		modelTuple{type64: 0x2700000027, matchRI: 0x1672, match64: 0x00000000, model64: 0x13d4400013d47},
		modelTuple{type64: 0x2700000027, matchRI: 0x1673, match64: 0x00000000, model64: 0xe5400000e543},
		modelTuple{type64: 0x2700000027, matchRI: 0x1674, match64: 0x00000000, model64: 0x13d4700013d4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1675, match64: 0x00000000, model64: 0x13d4d00013d57},
		modelTuple{type64: 0x2700000027, matchRI: 0x1676, match64: 0x00000000, model64: 0x13d5700013d5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1677, match64: 0x00000000, model64: 0x1382500013827},
		modelTuple{type64: 0x2700000027, matchRI: 0x1678, match64: 0x00000000, model64: 0x117d2000117d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1679, match64: 0x00000000, model64: 0x13d5e00013d63},
		modelTuple{type64: 0x2700000027, matchRI: 0x167a, match64: 0x00000000, model64: 0x13d6300013d68},
		modelTuple{type64: 0x2700000027, matchRI: 0x167b, match64: 0x00000000, model64: 0x13d6800013d6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x167c, match64: 0x00000000, model64: 0x13d6d00013d73},
		modelTuple{type64: 0x2700000027, matchRI: 0x167d, match64: 0x00000000, model64: 0x13d7300013d78},
		modelTuple{type64: 0x2700000027, matchRI: 0x167e, match64: 0x00000000, model64: 0x13d7800013d7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x167f, match64: 0x00000000, model64: 0x13d7b00013d83},
		modelTuple{type64: 0x2700000027, matchRI: 0x1680, match64: 0x00000000, model64: 0x13d8300013d86},
		modelTuple{type64: 0x2700000027, matchRI: 0x1681, match64: 0x00000000, model64: 0x13d8600013d89},
		modelTuple{type64: 0x2700000027, matchRI: 0x1682, match64: 0x00000000, model64: 0x13d8900013d92},
		modelTuple{type64: 0x2700000027, matchRI: 0x1683, match64: 0x00000000, model64: 0x13d9200013d96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1684, match64: 0x00000000, model64: 0x13d9600013d99},
		modelTuple{type64: 0x2700000027, matchRI: 0x1685, match64: 0x00000000, model64: 0x13d9900013da0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1686, match64: 0x00000000, model64: 0x13da000013da4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1687, match64: 0x00000000, model64: 0x13da400013da7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13da700013dae, model64: 0x13dae00013db6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13db600013dc6, model64: 0x13db600013dc6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13dc600013dcd, model64: 0x13dc600013dcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1688, match64: 0x00000000, model64: 0x13dcd00013dd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1689, match64: 0x00000000, model64: 0x13dd400013ddb},
		modelTuple{type64: 0x2700000027, matchRI: 0x168a, match64: 0x00000000, model64: 0x13ddb00013dde},
		modelTuple{type64: 0x2700000027, matchRI: 0x168b, match64: 0x00000000, model64: 0x13dde00013de1},
		modelTuple{type64: 0x2700000027, matchRI: 0x168c, match64: 0x00000000, model64: 0xedef0000edf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x168d, match64: 0x00000000, model64: 0x13de100013de8},
		modelTuple{type64: 0x2700000027, matchRI: 0x168e, match64: 0x00000000, model64: 0x13de800013df0},
		modelTuple{type64: 0x2700000027, matchRI: 0x168f, match64: 0x00000000, model64: 0x13df000013df3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1690, match64: 0x00000000, model64: 0x1176e00011770},
		modelTuple{type64: 0x2700000027, matchRI: 0x1691, match64: 0x00000000, model64: 0x13df300013dfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1692, match64: 0x00000000, model64: 0x13dfa00013e03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1693, match64: 0x00000000, model64: 0x13e0300013e0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1694, match64: 0x00000000, model64: 0x13e0a00013e0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1695, match64: 0x00000000, model64: 0x13e0d00013e15},
		modelTuple{type64: 0x2700000027, matchRI: 0x1696, match64: 0x00000000, model64: 0x13e1500013e19},
		modelTuple{type64: 0x2700000027, matchRI: 0x1697, match64: 0x00000000, model64: 0x13e1900013e1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1698, match64: 0x00000000, model64: 0x13e1f00013e2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13e2c00013e32, model64: 0x13e3200013e3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13e3a00013e41, model64: 0x13e4100013e4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1699, match64: 0x00000000, model64: 0x13e4b00013e51},
		modelTuple{type64: 0x2700000027, matchRI: 0x169a, match64: 0x00000000, model64: 0x13e5100013e58},
		modelTuple{type64: 0x2700000027, matchRI: 0x169b, match64: 0x00000000, model64: 0x13e5800013e5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x169c, match64: 0x00000000, model64: 0x13e5f00013e65},
		modelTuple{type64: 0x2700000027, matchRI: 0x169d, match64: 0x00000000, model64: 0x13e6500013e6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x169e, match64: 0x00000000, model64: 0x13e6c00013e75},
		modelTuple{type64: 0x2700000027, matchRI: 0x169f, match64: 0x00000000, model64: 0x13e7500013e7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a0, match64: 0x00000000, model64: 0x13e7f00013e8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a1, match64: 0x00000000, model64: 0x13e8a00013e93},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a2, match64: 0x00000000, model64: 0x13e9300013e9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a3, match64: 0x00000000, model64: 0x13e9e00013eab},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a4, match64: 0x00000000, model64: 0x13eab00013eb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a5, match64: 0x00000000, model64: 0x13eb400013ec1},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a6, match64: 0x00000000, model64: 0x13ec100013ece},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a7, match64: 0x00000000, model64: 0x13ece00013ed8},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a8, match64: 0x00000000, model64: 0x13ed800013edf},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a9, match64: 0x00000000, model64: 0x13edf00013ee5},
		modelTuple{type64: 0x2700000027, matchRI: 0x16aa, match64: 0x00000000, model64: 0x13ee500013eec},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ab, match64: 0x00000000, model64: 0x13eec00013ef7},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ac, match64: 0x00000000, model64: 0x13ef700013f00},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ad, match64: 0x00000000, model64: 0x13f0000013f07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13f0700013f11, model64: 0x13f1100013f1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ae, match64: 0x00000000, model64: 0x13f1b00013f22},
		modelTuple{type64: 0x2700000027, matchRI: 0x16af, match64: 0x00000000, model64: 0x13f2200013f29},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b0, match64: 0x00000000, model64: 0x13f2900013f36},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b1, match64: 0x00000000, model64: 0x13f3600013f48},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b2, match64: 0x00000000, model64: 0x13f4800013f4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b3, match64: 0x00000000, model64: 0x13f4f00013f55},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b4, match64: 0x00000000, model64: 0x13f5500013f60},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b5, match64: 0x00000000, model64: 0x13f6000013f6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b6, match64: 0x00000000, model64: 0x13f6a00013f77},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b7, match64: 0x00000000, model64: 0x13f7700013f86},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b8, match64: 0x00000000, model64: 0x13f8600013f8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13f8c00013f93, model64: 0x13f9300013f9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b9, match64: 0x00000000, model64: 0x13f9a00013fa1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13fa100013fa7, model64: 0x13fa700013fb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ba, match64: 0x00000000, model64: 0x13fb000013fba},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bb, match64: 0x00000000, model64: 0x13fba00013fc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13fc400013fca, model64: 0x13fca00013fd5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13fd500013fdc, model64: 0x13fdc00013fe4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13fe400013fea, model64: 0x13fea00013ff0},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bc, match64: 0x00000000, model64: 0x13ff000013ff7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13ff700013ffd, model64: 0x13ffd00014003},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1400300014009, model64: 0x1400900014014},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140140001401a, model64: 0x1401a00014024},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bd, match64: 0x00000000, model64: 0x140240001402d},
		modelTuple{type64: 0x2700000027, matchRI: 0x16be, match64: 0x00000000, model64: 0x1402d00014032},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bf, match64: 0x00000000, model64: 0x140320001403a},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c0, match64: 0x00000000, model64: 0x1403a00014044},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c1, match64: 0x00000000, model64: 0x140440001404b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c2, match64: 0x00000000, model64: 0x1404b00014051},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c3, match64: 0x00000000, model64: 0x1405100014055},
		modelTuple{type64: 0x20d00000213, matchRI: 0x16c4, match64: 0x00000000, model64: 0x140550001405c},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1405c00014063, model64: 0x1406300014068},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x140680001406f, model64: 0x1406f00014077},
		modelTuple{type64: 0x245800002460, matchRI: 0x16c5, match64: 0x00000000, model64: 0x1407700014081},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1408100014087, model64: 0x1408700014091},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1409100014097, model64: 0x14097000140a3},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x16c6, match64: 0x00000000, model64: 0x140a3000140a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c7, match64: 0x00000000, model64: 0xed330000ed36},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140ab000140b1, model64: 0x140b1000140b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x16cb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x140b8000140be, model64: 0x140b8000140be},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140c7000140d2, model64: 0x140d2000140d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x16cd, match64: 0x00000000, model64: 0x140d9000140dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140dc000140e4, model64: 0x140e4000140ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ce, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d1, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d2, match64: 0x00000000, model64: 0x140f5000140fc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1410800014112, model64: 0xc6e50000c6ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d8, match64: 0x00000000, model64: 0x1411900014120},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d9, match64: 0x00000000, model64: 0x1412000014127},
		modelTuple{type64: 0x2700000027, matchRI: 0x16da, match64: 0x00000000, model64: 0x141270001412d},
		modelTuple{type64: 0x2700000027, matchRI: 0x16db, match64: 0x00000000, model64: 0x1412d00014133},
		modelTuple{type64: 0x2700000027, matchRI: 0x16dc, match64: 0x00000000, model64: 0x1413300014136},
		modelTuple{type64: 0x2700000027, matchRI: 0x16dd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x16de, match64: 0x00000000, model64: 0x141360001413f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16df, match64: 0x00000000, model64: 0x1413f00014146},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e0, match64: 0x00000000, model64: 0x141460001414e},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e1, match64: 0x00000000, model64: 0x1414e00014151},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e2, match64: 0x00000000, model64: 0x1415100014158},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e3, match64: 0x00000000, model64: 0x141580001415f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e4, match64: 0x00000000, model64: 0x1415f00014164},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e5, match64: 0x00000000, model64: 0x141640001416c},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e6, match64: 0x00000000, model64: 0x1416c00014175},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ea, match64: 0x00000000, model64: 0x1417c00014191},
		modelTuple{type64: 0x2700000027, matchRI: 0x16eb, match64: 0x00000000, model64: 0x141910001419c},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ed, match64: 0x00000000, model64: 0x141a0000141ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ee, match64: 0x00000000, model64: 0x141ae000141b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141b6000141c4, model64: 0x141c4000141d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141d4000141dd, model64: 0x141dd000141e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141e6000141fb, model64: 0x141fb00014210},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1421000014223, model64: 0x1422300014236},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1423600014244, model64: 0x1424400014253},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1425300014262, model64: 0x1426200014272},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1427200014284, model64: 0x1428400014297},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14297000142a2, model64: 0x142a2000142ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142ad000142bd, model64: 0x142bd000142cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142cd000142de, model64: 0x142de000142f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142f0000142fc, model64: 0x142fc0001430a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1430a00014315, model64: 0x1431500014322},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1432200014332, model64: 0x1433200014342},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x143420001434f, model64: 0x1434f0001435c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1435c00014368, model64: 0x1436800014374},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ef, match64: 0x00000000, model64: 0x1437400014388},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f0, match64: 0x00000000, model64: 0x1438800014395},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f1, match64: 0x00000000, model64: 0x14395000143a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f2, match64: 0x00000000, model64: 0x143a1000143ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x143ac000143b8, model64: 0x143b8000143c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f3, match64: 0x00000000, model64: 0x143c4000143cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f4, match64: 0x00000000, model64: 0x143cf000143db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x143db000143e2, model64: 0x143e2000143e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x143e9000143f8, model64: 0x143f800014408},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1440800014413, model64: 0x144130001441f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1441f0001442d, model64: 0x1442d0001443c},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f5, match64: 0x00000000, model64: 0x1443c00014443},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144430001444e, model64: 0x1444e0001445b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1445b00014467, model64: 0x1446700014473},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144730001447b, model64: 0x1447b00014480},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1448000014485, model64: 0x144850001448b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1448b00014499, model64: 0x14499000144a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f6, match64: 0x00000000, model64: 0x144a7000144ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144ae000144b2, model64: 0x144b2000144b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144b6000144c7, model64: 0x144c7000144d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144d8000144de, model64: 0x144de000144e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f7, match64: 0x00000000, model64: 0x144e6000144ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144ed000144f6, model64: 0x144f6000144fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144fb00014507, model64: 0x1450700014513},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1451300014521, model64: 0x145210001452f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1452f0001453e, model64: 0x1453e0001454d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1454d00014559, model64: 0x1455900014560},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f8, match64: 0x00000000, model64: 0x145600001456f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1456f0001457a, model64: 0x1457a00014587},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1458700014590, model64: 0x1459000014599},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14599000145a4, model64: 0x145a4000145af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145af000145ba, model64: 0x145ba000145c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145c5000145d4, model64: 0x145d4000145e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f9, match64: 0x00000000, model64: 0x145e3000145ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fa, match64: 0x00000000, model64: 0x145ee000145fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fb, match64: 0x00000000, model64: 0x145fa00014607},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x146070001460c, model64: 0x1460c00014611},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x16fc, match64: 0x00000000, model64: 0x146110001461a},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1461a00014623, model64: 0x146230001462c},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fd, match64: 0x00000000, model64: 0x1462c00014633},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fe, match64: 0x00000000, model64: 0x1463300014637},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ff, match64: 0x00000000, model64: 0x146370001463f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1700, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x146410001464a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1703, match64: 0x00000000, model64: 0x146500001465c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1704, match64: 0x00000000, model64: 0x1465c0001465e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1705, match64: 0x00000000, model64: 0x1465e00014664},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1466900014673, model64: 0x146730001467b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1707, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1708, match64: 0x00000000, model64: 0x146840001468c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x146960001469e},
		modelTuple{type64: 0x2700000027, matchRI: 0x170c, match64: 0x00000000, model64: 0x146a5000146a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x170e, match64: 0x00000000, model64: 0x146ad000146b1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x170f, match64: 0x00000000, model64: 0x146b1000146b4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1710, match64: 0x00000000, model64: 0x146b4000146c1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1711, match64: 0x00000000, model64: 0x146c1000146ce},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1712, match64: 0x00000000, model64: 0x146ce000146da},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1713, match64: 0x00000000, model64: 0x146da000146ed},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x146ed000146f9, model64: 0x146f900014709},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1714, match64: 0x00000000, model64: 0x1470900014719},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x147190001472b, model64: 0x1472b0001473e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1473e0001474f, model64: 0x1474f00014761},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x147610001476b, model64: 0x1476b00014776},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1477600014784, model64: 0x1478400014793},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x147930001479c, model64: 0x1479c000147a7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1715, match64: 0x00000000, model64: 0x147a7000147bc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1716, match64: 0x00000000, model64: 0x147bc000147c9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1717, match64: 0x00000000, model64: 0x147c9000147d5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1718, match64: 0x00000000, model64: 0x147d5000147db},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1719, match64: 0x00000000, model64: 0x147db000147eb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x171a, match64: 0x00000000, model64: 0x147eb000147f6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x171b, match64: 0x00000000, model64: 0x147f600014801},
		modelTuple{type64: 0x20d00000213, matchRI: 0x171c, match64: 0x00000000, model64: 0x1480100014807},
		modelTuple{type64: 0x2700000027, matchRI: 0x171d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x171e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1480f0001481d, model64: 0x1481d0001482b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1720, match64: 0x00000000, model64: 0x1482b00014836},
		modelTuple{type64: 0x2700000027, matchRI: 0x1721, match64: 0x00000000, model64: 0x1483600014840},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1724, match64: 0x00000000, model64: 0x1484e00014850},
		modelTuple{type64: 0x2700000027, matchRI: 0x1725, match64: 0x00000000, model64: 0x1485000014856},
		modelTuple{type64: 0x2700000027, matchRI: 0x1726, match64: 0x00000000, model64: 0x6e2000006e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1727, match64: 0x00000000, model64: 0x148560001485b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1728, match64: 0x00000000, model64: 0x1485b00014861},
		modelTuple{type64: 0x2700000027, matchRI: 0x1729, match64: 0x00000000, model64: 0x1486100014868},
		modelTuple{type64: 0x2700000027, matchRI: 0x172a, match64: 0x00000000, model64: 0x148680001487a},
		modelTuple{type64: 0x2700000027, matchRI: 0x172b, match64: 0x00000000, model64: 0x1487a00014881},
		modelTuple{type64: 0x2700000027, matchRI: 0x172c, match64: 0x00000000, model64: 0x1488100014888},
		modelTuple{type64: 0x2700000027, matchRI: 0x172d, match64: 0x00000000, model64: 0x1488800014892},
		modelTuple{type64: 0x2700000027, matchRI: 0x172e, match64: 0x00000000, model64: 0x14892000148a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x172f, match64: 0x00000000, model64: 0x148a0000148ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x148ae000148b5, model64: 0x148b5000148be},
		modelTuple{type64: 0x2700000027, matchRI: 0x1730, match64: 0x00000000, model64: 0x114c2000114c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1731, match64: 0x00000000, model64: 0x148be000148c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1732, match64: 0x00000000, model64: 0x148c7000148d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1733, match64: 0x00000000, model64: 0x148d3000148de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1734, match64: 0x00000000, model64: 0x148de000148e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1735, match64: 0x00000000, model64: 0x148e9000148f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1736, match64: 0x00000000, model64: 0x148f1000148fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1737, match64: 0x00000000, model64: 0x148fc00014909},
		modelTuple{type64: 0x2700000027, matchRI: 0x1738, match64: 0x00000000, model64: 0x1490900014912},
		modelTuple{type64: 0x2700000027, matchRI: 0x1739, match64: 0x00000000, model64: 0x149120001491b},
		modelTuple{type64: 0x2700000027, matchRI: 0x173a, match64: 0x00000000, model64: 0x1491b00014920},
		modelTuple{type64: 0x2700000027, matchRI: 0x173b, match64: 0x00000000, model64: 0x1492000014922},
		modelTuple{type64: 0x2700000027, matchRI: 0x173c, match64: 0x00000000, model64: 0x1492200014928},
		modelTuple{type64: 0x2700000027, matchRI: 0x173d, match64: 0x00000000, model64: 0x340b0000340c},
		modelTuple{type64: 0x2700000027, matchRI: 0x173e, match64: 0x00000000, model64: 0x149280001492f},
		modelTuple{type64: 0x2700000027, matchRI: 0x173f, match64: 0x00000000, model64: 0x9c2b00009c2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1740, match64: 0x00000000, model64: 0x1492f00014935},
		modelTuple{type64: 0x2700000027, matchRI: 0x1741, match64: 0x00000000, model64: 0x1493500014937},
		modelTuple{type64: 0x2700000027, matchRI: 0x1742, match64: 0x00000000, model64: 0x149370001493a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1743, match64: 0x00000000, model64: 0x1493a00014940},
		modelTuple{type64: 0x2700000027, matchRI: 0x1744, match64: 0x00000000, model64: 0x1494000014946},
		modelTuple{type64: 0x2700000027, matchRI: 0x1745, match64: 0x00000000, model64: 0x9c1d00009c22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1746, match64: 0x00000000, model64: 0x149460001495c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1747, match64: 0x00000000, model64: 0x9c3c00009c42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1748, match64: 0x00000000, model64: 0x1495c00014961},
		modelTuple{type64: 0x2700000027, matchRI: 0x1749, match64: 0x00000000, model64: 0x18c9000018ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x174a, match64: 0x00000000, model64: 0x1496100014963},
		modelTuple{type64: 0x2700000027, matchRI: 0x174b, match64: 0x00000000, model64: 0x1496300014969},
		modelTuple{type64: 0x2700000027, matchRI: 0x174c, match64: 0x00000000, model64: 0x1496900014972},
		modelTuple{type64: 0x2700000027, matchRI: 0x174d, match64: 0x00000000, model64: 0x1492000014922},
		modelTuple{type64: 0x2700000027, matchRI: 0x174e, match64: 0x00000000, model64: 0x1497200014978},
		modelTuple{type64: 0x2700000027, matchRI: 0x174f, match64: 0x00000000, model64: 0x968c0000968f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1750, match64: 0x00000000, model64: 0x10e3000010e31},
		modelTuple{type64: 0x2700000027, matchRI: 0x1751, match64: 0x00000000, model64: 0xc8600000c861},
		modelTuple{type64: 0x2700000027, matchRI: 0x1752, match64: 0x00000000, model64: 0x149780001497a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1753, match64: 0x00000000, model64: 0x189100001892},
		modelTuple{type64: 0x2700000027, matchRI: 0x1754, match64: 0x00000000, model64: 0x1497a0001497c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1755, match64: 0x00000000, model64: 0x18c3000018c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1756, match64: 0x00000000, model64: 0x130f9000130fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1757, match64: 0x00000000, model64: 0x1497c0001497e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1758, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x175a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x175b, match64: 0x00000000, model64: 0x149820001498e},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x175c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x175e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x175f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x968c0000968f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x149aa000149b6, model64: 0x149b6000149c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x149c2000149d4, model64: 0x149d4000149db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x149db000149ed, model64: 0x149ed000149f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x149f700014a0a, model64: 0x14a0a00014a11},
		modelTuple{type64: 0x2700000027, matchRI: 0x1762, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a1800014a29, model64: 0x14a2900014a3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a3a00014a47, model64: 0x14a4700014a54},
		modelTuple{type64: 0x2700000027, matchRI: 0x1763, match64: 0x00000000, model64: 0x14a5400014a60},
		modelTuple{type64: 0x2700000027, matchRI: 0x1764, match64: 0x00000000, model64: 0x14a6000014a68},
		modelTuple{type64: 0x2700000027, matchRI: 0x1765, match64: 0x00000000, model64: 0x14a6800014a72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a7200014a78, model64: 0x14a7800014a7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1766, match64: 0x00000000, model64: 0x14a7e00014a83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a8900014a92, model64: 0x14a9200014a9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a9b00014aa4, model64: 0x14aa400014aad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1768, match64: 0x00000000, model64: 0x14aad00014ab7},
		modelTuple{type64: 0x2700000027, matchRI: 0x176a, match64: 0x00000000, model64: 0x14abd00014ac5},
		modelTuple{type64: 0x2700000027, matchRI: 0x176b, match64: 0x00000000, model64: 0x14abd00014ac5},
		modelTuple{type64: 0x2700000027, matchRI: 0x176c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x176d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14acb00014ad5, model64: 0x14ad500014ada},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x14ae000014ae8, model64: 0x14ae800014af4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14af400014afd, model64: 0x14afd00014b06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b0600014b0e, model64: 0x14b0e00014b16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b1600014b1e, model64: 0x14b1e00014b26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b2600014b30, model64: 0x14b3000014b3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b3a00014b40, model64: 0x14b3a00014b40},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x14b4000014b44, model64: 0x14b4000014b44},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1770, match64: 0x00000000, model64: 0x14b4400014b4d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x14b4d00014b5b, model64: 0x14b5b00014b67},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x14b6700014b74, model64: 0x14b7400014b84},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x14b8400014b93, model64: 0x14b9300014b9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1771, match64: 0x00000000, model64: 0x58b5000058ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1772, match64: 0x00000000, model64: 0x14b9b00014ba7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1773, match64: 0x00000000, model64: 0x14ba700014bae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1774, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1775, match64: 0x00000000, model64: 0x14bae00014bb4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bb900014bbf, model64: 0x14bbf00014bc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bc700014bcd, model64: 0x14bcd00014bd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bd100014bd7, model64: 0x14bd700014bdb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bdb00014be1, model64: 0x14be100014be7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14be700014bee, model64: 0x14bee00014bf7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bf700014bfd, model64: 0xcef80000cefb},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x14bfd00014c02, model64: 0x14c0200014c09},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1779, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x177c, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: 0x177d, match64: 0x00000000, model64: 0x14c2000014c29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c2d00014c35, model64: 0x14c2d00014c35},
		modelTuple{type64: 0x2700000027, matchRI: 0x177f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1780, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1781, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1782, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c3c00014c46, model64: 0x14c3c00014c46},
		modelTuple{type64: 0x2700000027, matchRI: 0x1784, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1785, match64: 0x00000000, model64: 0xd0880000d08b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1786, match64: 0x00000000, model64: 0x76ec000076f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1787, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x1788, match64: 0x00000000, model64: 0x42830000428a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1789, match64: 0x00000000, model64: 0x14c4600014c4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x178a, match64: 0x00000000, model64: 0x14c4c00014c54},
		modelTuple{type64: 0x2700000027, matchRI: 0x178b, match64: 0x00000000, model64: 0x14c5400014c63},
		modelTuple{type64: 0x2700000027, matchRI: 0x178c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x178d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x178e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x178f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x14c6a00014c70, model64: 0x14c7000014c7b},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x14c7b00014c8a, model64: 0x14c7b00014c8a},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x14c8a00014c99, model64: 0x14c8a00014c99},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1791, match64: 0x00000000, model64: 0x14c9900014ca2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ca200014cae, model64: 0x14cae00014cbb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14cbb00014cc8, model64: 0x14cbb00014cc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1792, match64: 0x00000000, model64: 0x14cc800014cd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1793, match64: 0x00000000, model64: 0x14cc800014cd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1794, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14cdb00014ce3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1796, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1797, match64: 0x00000000, model64: 0x14ce700014cf2},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1799, match64: 0x00000000, model64: 0x14cf900014d05},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x14d0500014d0d, model64: 0x14d0d00014d16},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x14d1600014d1d, model64: 0x14d1d00014d25},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x179a, match64: 0x00000000, model64: 0x14d2500014d2f},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x179b, match64: 0x00000000, model64: 0x14d2f00014d3a},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x179c, match64: 0x00000000, model64: 0x14d3a00014d43},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x179d, match64: 0x00000000, model64: 0x14d4300014d4e},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x179e, match64: 0x00000000, model64: 0x14d4e00014d55},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x179f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a1, match64: 0x00000000, model64: 0x58b5000058ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14d5500014d5e, model64: 0x14d5e00014d67},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14d6b00014d71},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a7, match64: 0x00000000, model64: 0x14d7c00014d85},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a8, match64: 0x00000000, model64: 0x14d8500014d8e},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x17a9, match64: 0x00000000, model64: 0x14d8e00014d9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ab, match64: 0x00000000, model64: 0x14da100014da9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14dbe00014dcb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14dd000014ddc, model64: 0x14ddc00014ddf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ddf00014deb, model64: 0x14deb00014dee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14dee00014dfb, model64: 0x14dfb00014dff},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x14dff00014e07, model64: 0x14e0700014e10},
		modelTuple{type64: 0x20d00000213, matchRI: 0x17ad, match64: 0x00000000, model64: 0x133b6000133b9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x17ae, match64: 0x00000000, model64: 0x14e1000014e19},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x14e1900014e2b, model64: 0x14e2b00014e39},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b6, match64: 0x00000000, model64: 0x14e5400014e5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b7, match64: 0x00000000, model64: 0x14e5a00014e61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14e6100014e72, model64: 0x14e7200014e79},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b9, match64: 0x00000000, model64: 0xe2cc0000e2ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ba, match64: 0x00000000, model64: 0x13bf600013bf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x17bb, match64: 0x00000000, model64: 0x14e7d00014e83},
		modelTuple{type64: 0x2700000027, matchRI: 0x17bc, match64: 0x00000000, model64: 0x1023a0001023c},
		modelTuple{type64: 0x2700000027, matchRI: 0x17bd, match64: 0x00000000, model64: 0x10e4b00010e4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x17be, match64: 0x00000000, model64: 0x14e8300014e8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x17bf, match64: 0x00000000, model64: 0xf00e0000f015},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c0, match64: 0x00000000, model64: 0x14e8c00014e95},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c1, match64: 0x00000000, model64: 0x14e9500014e9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c2, match64: 0x00000000, model64: 0x19ab000019ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c3, match64: 0x00000000, model64: 0xc3650000c368},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c4, match64: 0x00000000, model64: 0x14e9a00014ea0},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c5, match64: 0x00000000, model64: 0x10eeb00010eed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ea000014eaa, model64: 0x14eaa00014eaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c6, match64: 0x00000000, model64: 0x14eaf00014eb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c7, match64: 0x00000000, model64: 0x14eb500014ebb},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c8, match64: 0x00000000, model64: 0x14ebb00014ec0},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c9, match64: 0x00000000, model64: 0xc8540000c856},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ca, match64: 0x00000000, model64: 0x14ec000014ec5},
		modelTuple{type64: 0x2700000027, matchRI: 0x17cb, match64: 0x00000000, model64: 0x14ec500014eca},
		modelTuple{type64: 0x2700000027, matchRI: 0x17cc, match64: 0x00000000, model64: 0x14eca00014ed3},
		modelTuple{type64: 0x2700000027, matchRI: 0x17cd, match64: 0x00000000, model64: 0x14ed300014edc},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ce, match64: 0x00000000, model64: 0x14edc00014ee5},
		modelTuple{type64: 0x2700000027, matchRI: 0x17cf, match64: 0x00000000, model64: 0x14ee500014eea},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d0, match64: 0x00000000, model64: 0x14eea00014eef},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d1, match64: 0x00000000, model64: 0x14eef00014ef1},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d2, match64: 0x00000000, model64: 0x14ef100014ef3},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d3, match64: 0x00000000, model64: 0x14ef300014ef6},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d4, match64: 0x00000000, model64: 0x14ef600014ef9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ef900014f03, model64: 0x91eb000091ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14f0300014f0d, model64: 0x14f0d00014f10},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d5, match64: 0x00000000, model64: 0x14f1000014f16},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d6, match64: 0x00000000, model64: 0x14f1600014f1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d8, match64: 0x00000000, model64: 0x14f2500014f2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d9, match64: 0x00000000, model64: 0x91ee000091f0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17dd, match64: 0x00000000, model64: 0x14f3c00014f3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x17de, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17df, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x14f4b00014f56, model64: 0x14f5600014f61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14f6100014f69, model64: 0x14f6900014f71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14f7100014f80, model64: 0x14f8000014f8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x14f8f00014f9e, model64: 0x14f8f00014f9e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14faf00014fb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e3, match64: 0x00000000, model64: 0x58b5000058ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e5, match64: 0x00000000, model64: 0x14fb900014fc0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14fc000014fc8, model64: 0x14fc000014fc8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14fc800014fce, model64: 0x14fce00014fd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e6, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x14fdb00014fe2, model64: 0x14fdb00014fe2},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e8, match64: 0x00000000, model64: 0x14feb00014ff9},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e9, match64: 0x00000000, model64: 0x14ff900015005},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ea, match64: 0x00000000, model64: 0x150050001500c},
		modelTuple{type64: 0x2700000027, matchRI: 0x17eb, match64: 0x00000000, model64: 0x1500c00015013},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ec, match64: 0x00000000, model64: 0x150130001501b},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ed, match64: 0x00000000, model64: 0x1501b00015023},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ee, match64: 0x00000000, model64: 0x1501b00015023},
		modelTuple{type64: 0x50000000b, matchRI: 0x17ef, match64: 0x00000000, model64: 0x150230001502b},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f0, match64: 0x00000000, model64: 0x1502b0001503c},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f1, match64: 0x00000000, model64: 0x1503c00015047},
		modelTuple{type64: 0x20d00000213, matchRI: 0x17f2, match64: 0x00000000, model64: 0x1504700015055},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1505500015060, model64: 0x1505500015060},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1506000015067, model64: 0x1506000015067},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f3, match64: 0x00000000, model64: 0x150670001506e},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x17f4, match64: 0x00000000, model64: 0x1506e00015073},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1507300015085, model64: 0x150850001508f},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x17f5, match64: 0x00000000, model64: 0x1508f00015097},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x17f6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x17f7, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x17fa, match64: 0x00000000, model64: 0x15097000150a7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150bb000150c2, model64: 0x150c2000150c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150c8000150cf, model64: 0x150cf000150d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150d8000150df, model64: 0x150df000150e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150e6000150ee, model64: 0x150ee000150f7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x17fe, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ff, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1800, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1801, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1802, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1803, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1804, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1807, match64: 0x00000000, model64: 0xffec0000fff5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1511200015119, model64: 0x1511900015120},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1512600015133, model64: 0x1513300015139},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1513900015147, model64: 0x151470001514e},
		modelTuple{type64: 0x2700000027, matchRI: 0x180a, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x180b, match64: 0x00000000, model64: 0x151540001515b},
		modelTuple{type64: 0x2700000027, matchRI: 0x180c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1515b00015166, model64: 0x151660001516a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1516a00015171, model64: 0x6eb200006eb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x180d, match64: 0x00000000, model64: 0x1517100015178},
		modelTuple{type64: 0x20d00000213, matchRI: 0x180e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1810, match64: 0x00000000, model64: 0x1518100015189},
		modelTuple{type64: 0x2700000027, matchRI: 0x1811, match64: 0x00000000, model64: 0x151890001519b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1812, match64: 0x00000000, model64: 0x1519b000151a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1813, match64: 0x00000000, model64: 0x151a5000151ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1814, match64: 0x00000000, model64: 0x3fb600003fbc},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1815, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151b4000151c3, model64: 0x151c3000151c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151c9000151d8, model64: 0x151d8000151dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151dc000151eb, model64: 0x151eb000151f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1817, match64: 0x00000000, model64: 0x151f8000151fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1818, match64: 0x00000000, model64: 0x151fe00015206},
		modelTuple{type64: 0x2700000027, matchRI: 0x1819, match64: 0x00000000, model64: 0x152060001520f},
		modelTuple{type64: 0x2700000027, matchRI: 0x181a, match64: 0x00000000, model64: 0x1520f00015216},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1521c00015224, model64: 0x152240001522c},
		modelTuple{type64: 0x2700000027, matchRI: 0x181c, match64: 0x00000000, model64: 0x1522c00015232},
		modelTuple{type64: 0x2700000027, matchRI: 0x181d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x181e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x181f, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1820, match64: 0x00000000, model64: 0x1523200015238},
		modelTuple{type64: 0x51800000525, matchRI: 0x1822, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1823, match64: 0x00000000, model64: 0x1523f00015248},
		modelTuple{type64: 0x2700000027, matchRI: 0x1824, match64: 0x00000000, model64: 0x1523f00015248},
		modelTuple{type64: 0x2700000027, matchRI: 0x1825, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1826, match64: 0x00000000, model64: 0x9a0b00009a15},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1827, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1828, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1829, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x182a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x182b, match64: 0x00000000, model64: 0x1524800015254},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x182c, match64: 0x00000000, model64: 0x152540001526a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x182d, match64: 0x00000000, model64: 0x1526a00015273},
		modelTuple{type64: 0x20d00000213, matchRI: 0x182e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x182f, match64: 0x00000000, model64: 0x1527300015279},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1830, match64: 0x00000000, model64: 0x152790001528f},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1831, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1832, match64: 0x00000000, model64: 0x1528f0001529b},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1529b000152a9, model64: 0x152a9000152b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1833, match64: 0x00000000, model64: 0x152b5000152bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1834, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1836, match64: 0x00000000, model64: 0x152c5000152cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1837, match64: 0x00000000, model64: 0x152cd000152d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1838, match64: 0x00000000, model64: 0x152d3000152d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1839, match64: 0x00000000, model64: 0x152d7000152de},
		modelTuple{type64: 0x2700000027, matchRI: 0x183a, match64: 0x00000000, model64: 0x1056a00010571},
		modelTuple{type64: 0x2700000027, matchRI: 0x183c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x152e2000152eb, model64: 0x1527300015279},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x183d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1840, match64: 0x00000000, model64: 0x152f6000152f8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x152f800015300, model64: 0x153000001530d},
		modelTuple{type64: 0xa01b0000a030, matchRI: 0x1841, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x940000009f, matchRI: 0x1842, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1530d00015314, model64: 0x1530d00015314},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1843, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1844, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1845, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1532b00015336},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x194600001948},
		modelTuple{type64: 0x2700000027, matchRI: 0x184a, match64: 0x00000000, model64: 0x153450001534d},
		modelTuple{type64: 0x2700000027, matchRI: 0x184b, match64: 0x00000000, model64: 0x1534d0001535b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1535b00015363, model64: 0x1535b00015363},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x153630001536c, model64: 0x153630001536c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1536c00015373, model64: 0x1536c00015373},
		modelTuple{type64: 0x2700000027, matchRI: 0x184c, match64: 0x00000000, model64: 0x1537300015379},
		modelTuple{type64: 0x2700000027, matchRI: 0x184d, match64: 0x00000000, model64: 0x1537900015383},
		modelTuple{type64: 0x2700000027, matchRI: 0x184e, match64: 0x00000000, model64: 0x153830001538d},
		modelTuple{type64: 0x2700000027, matchRI: 0x184f, match64: 0x00000000, model64: 0x1538d00015398},
		modelTuple{type64: 0x2700000027, matchRI: 0x1850, match64: 0x00000000, model64: 0x15398000153a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1851, match64: 0x00000000, model64: 0x153a3000153b1},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x153b1000153b5, model64: 0x153b1000153b5},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x153b5000153be, model64: 0x153be000153c1},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x153c1000153cc, model64: 0x153cc000153d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1853, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1854, match64: 0x00000000, model64: 0x153e1000153ea},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x153f700015400, model64: 0x154000001540b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1540b00015418, model64: 0x1541800015425},
		modelTuple{type64: 0x2700000027, matchRI: 0x1857, match64: 0x00000000, model64: 0x154250001542c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1543000015434, model64: 0x154340001543b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1543b0001543f, model64: 0x1543f00015444},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1544400015448, model64: 0x154480001544f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1544f00015453, model64: 0x154530001545c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1545c00015460, model64: 0x1546000015467},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x154670001546b, model64: 0x1546b00015475},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1547500015479, model64: 0x1547900015482},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1548200015486, model64: 0x1548600015490},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3fb600003fbc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x185c, match64: 0x00000000, model64: 0x155c0000155e},
		modelTuple{type64: 0x2700000027, matchRI: 0x185d, match64: 0x00000000, model64: 0x154a8000154ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x185e, match64: 0x00000000, model64: 0x154ae000154b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x185f, match64: 0x00000000, model64: 0x154b1000154ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1860, match64: 0x00000000, model64: 0x154ba000154ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1861, match64: 0x00000000, model64: 0x154ca000154d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1862, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x154e2000154e6, model64: 0x154e2000154e6},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x154f300015504, model64: 0x1550400015518},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1551800015529, model64: 0x155290001553c},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1553c00015544, model64: 0x1554400015554},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1555400015560, model64: 0x155600001556d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1864, match64: 0x00000000, model64: 0x1556d0001557a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1557a00015587, model64: 0x1558700015590},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x155900001559c, model64: 0x1559c000155a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x155a9000155b9, model64: 0x155b9000155ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1865, match64: 0x00000000, model64: 0x155ca000155d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x155d6000155e4, model64: 0x155e4000155ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x155ee000155fb, model64: 0x155fb00015608},
		modelTuple{type64: 0x2700000027, matchRI: 0x1866, match64: 0x00000000, model64: 0x1560800015611},
		modelTuple{type64: 0x2700000027, matchRI: 0x1867, match64: 0x00000000, model64: 0x1561100015619},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1562f00015635, model64: 0x156350001563d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1563d00015643, model64: 0x156430001564b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1564b00015651, model64: 0x1565100015659},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1565900015662, model64: 0x156620001566f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1566f00015675, model64: 0x156750001567c},
		modelTuple{type64: 0x2700000027, matchRI: 0x186b, match64: 0x00000000, model64: 0xcf3d0000cf45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1567c00015685, model64: 0x156850001568d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1568d00015693, model64: 0x156930001569a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1569a000156a0, model64: 0x156a0000156ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156ac000156b5, model64: 0x156b5000156bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156bd000156c6, model64: 0x156c6000156d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156d3000156d9, model64: 0x156d9000156e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156e0000156e9, model64: 0x156e9000156f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156f1000156fa, model64: 0x156fa00015702},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1570200015708, model64: 0x1570800015711},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1571100015717, model64: 0x1571700015720},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1572000015726, model64: 0x157260001572d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1572d00015736, model64: 0x157360001573e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1573e00015744, model64: 0x1574400015747},
		modelTuple{type64: 0x2700000027, matchRI: 0x186c, match64: 0x00000000, model64: 0x157470001574e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1574e00015755, model64: 0x157550001575e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1575e00015765, model64: 0x157650001576a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1576a00015771, model64: 0x1577100015778},
		modelTuple{type64: 0x2700000027, matchRI: 0x186d, match64: 0x00000000, model64: 0x157780001577f},
		modelTuple{type64: 0x2700000027, matchRI: 0x186e, match64: 0x00000000, model64: 0x1577f00015784},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157840001578b, model64: 0x1578b00015799},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15799000157a1, model64: 0x157a1000157a5},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x186f, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1870, match64: 0x00000000, model64: 0x157a5000157af},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x157af000157b9, model64: 0x157b9000157ca},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1871, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1872, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1873, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x156270001562f, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1876, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1877, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157e1000157e6, model64: 0x741f00007425},
		modelTuple{type64: 0x2700000027, matchRI: 0x1879, match64: 0x00000000, model64: 0x157e6000157f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157f3000157f8, model64: 0x157f800015801},
		modelTuple{type64: 0x2700000027, matchRI: 0x187a, match64: 0x00000000, model64: 0x158010001580d},
		modelTuple{type64: 0x2700000027, matchRI: 0x187b, match64: 0x00000000, model64: 0x1580d00015816},
		modelTuple{type64: 0x2700000027, matchRI: 0x187c, match64: 0x00000000, model64: 0x158160001581f},
		modelTuple{type64: 0x2700000027, matchRI: 0x187d, match64: 0x00000000, model64: 0x1581f00015828},
		modelTuple{type64: 0x2700000027, matchRI: 0x187e, match64: 0x00000000, model64: 0x1582800015831},
		modelTuple{type64: 0x2700000027, matchRI: 0x187f, match64: 0x00000000, model64: 0x158310001583a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1880, match64: 0x00000000, model64: 0x1583a00015843},
		modelTuple{type64: 0x2700000027, matchRI: 0x1881, match64: 0x00000000, model64: 0x158430001584c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1882, match64: 0x00000000, model64: 0x1584c00015858},
		modelTuple{type64: 0x2700000027, matchRI: 0x1883, match64: 0x00000000, model64: 0x1585800015861},
		modelTuple{type64: 0x2700000027, matchRI: 0x1884, match64: 0x00000000, model64: 0x158610001586a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1885, match64: 0x00000000, model64: 0x1586a00015873},
		modelTuple{type64: 0x2700000027, matchRI: 0x1886, match64: 0x00000000, model64: 0x158730001587e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1887, match64: 0x00000000, model64: 0x1587e0001588d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1588d00015892, model64: 0x1589200015897},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158970001589c, model64: 0x1589c000158a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158a9000158ae, model64: 0x158ae000158b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158b7000158bc, model64: 0x158bc000158c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158c5000158ca, model64: 0x158ca000158d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1888, match64: 0x00000000, model64: 0x158d3000158de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1889, match64: 0x00000000, model64: 0x158de000158e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x188a, match64: 0x00000000, model64: 0x158e6000158f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158f1000158f6, model64: 0x158f600015900},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1590000015905, model64: 0x1590500015914},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1591400015919, model64: 0x1591900015921},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1592100015926, model64: 0x1592600015937},
		modelTuple{type64: 0x2700000027, matchRI: 0x188b, match64: 0x00000000, model64: 0x1593700015941},
		modelTuple{type64: 0x2700000027, matchRI: 0x188c, match64: 0x00000000, model64: 0x159410001594c},
		modelTuple{type64: 0x2700000027, matchRI: 0x188d, match64: 0x00000000, model64: 0x1594c00015956},
		modelTuple{type64: 0x2700000027, matchRI: 0x188e, match64: 0x00000000, model64: 0x1595600015960},
		modelTuple{type64: 0x2700000027, matchRI: 0x188f, match64: 0x00000000, model64: 0x159600001596f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1596f00015976, model64: 0x1596f00015976},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159760001597b, model64: 0x159760001597b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1597b00015980, model64: 0x1598000015988},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1890, match64: 0x00000000, model64: 0x1598800015995},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1891, match64: 0x00000000, model64: 0x159950001599f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1893, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1894, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x6ea100006ea3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159e0000159e8, model64: 0x159e8000159f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1896, match64: 0x00000000, model64: 0x743b0000743f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1897, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1898, match64: 0x00000000, model64: 0x159f0000159fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159fa000159fe, model64: 0x159fe00015a09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15a0900015a0e, model64: 0x15a0e00015a19},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15a1900015a21, model64: 0x15a1900015a21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15a2100015a28, model64: 0x15a2100015a28},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x15a2800015a2d, model64: 0x15a2800015a2d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x15a2d00015a39, model64: 0x15a3900015a45},
		modelTuple{type64: 0x2700000027, matchRI: 0x189a, match64: 0x00000000, model64: 0x15a5100015a57},
		modelTuple{type64: 0x2700000027, matchRI: 0x189b, match64: 0x00000000, model64: 0x15a5700015a63},
		modelTuple{type64: 0x2700000027, matchRI: 0x189c, match64: 0x00000000, model64: 0x15a6300015a73},
		modelTuple{type64: 0x2700000027, matchRI: 0x189d, match64: 0x00000000, model64: 0x15a7300015a7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x189e, match64: 0x00000000, model64: 0x15a7e00015a87},
		modelTuple{type64: 0x2700000027, matchRI: 0x189f, match64: 0x00000000, model64: 0x15a8700015a91},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a0, match64: 0x00000000, model64: 0x15a9100015a9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a1, match64: 0x00000000, model64: 0x15a9c00015aa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a2, match64: 0x00000000, model64: 0x15aa600015ab1},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a3, match64: 0x00000000, model64: 0x15ab100015ab9},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a4, match64: 0x00000000, model64: 0x15ab900015ac1},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a5, match64: 0x00000000, model64: 0x15ac100015ac9},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a6, match64: 0x00000000, model64: 0x15ac900015acf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18a7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18a8, match64: 0x00000000, model64: 0x15acf00015ad5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18a9, match64: 0x00000000, model64: 0x15ad500015ade},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15ade00015ae5, model64: 0x15ae500015aec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15af200015afe, model64: 0x1465c0001465e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15afe00015b04, model64: 0x15b0400015b0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b0a00015b0e, model64: 0x15b0e00015b11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b1100015b1d, model64: 0x15b1d00015b21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b2100015b2d, model64: 0x15b2d00015b31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b3100015b3d, model64: 0x15b3d00015b41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b4100015b4d, model64: 0x15b4d00015b51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b5100015b59, model64: 0x15b5900015b63},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15b6c00015b7e, model64: 0x15b7e00015b91},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x18ae, match64: 0x00000000, model64: 0x15b9100015ba2},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x18af, match64: 0x00000000, model64: 0x15ba200015baf},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15baf00015bb9, model64: 0x15bb900015bc1},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15bc100015bcb, model64: 0x15bcb00015bd7},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15bd700015be1, model64: 0x15be100015bed},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15bed00015bf7, model64: 0x15bf700015bff},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15bff00015c09, model64: 0x15c0900015c11},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15c1100015c1b, model64: 0x15c1b00015c23},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15c2300015c2d, model64: 0x15c2d00015c35},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15c3500015c3f, model64: 0x15c3f00015c4b},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15c4b00015c55, model64: 0x15c5500015c5d},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15c5d00015c67, model64: 0x15c6700015c73},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15c7300015c7d, model64: 0x15c7d00015c85},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15c8500015c8f, model64: 0x15c8f00015c9b},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15c9b00015ca5, model64: 0x15ca500015cad},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15cad00015cb7, model64: 0x15cb700015cbe},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15cbe00015cc8, model64: 0x15cc800015cd3},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15cd300015cdd, model64: 0x15cdd00015ce8},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15ce800015cf2, model64: 0x15cf200015cfd},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15cfd00015d07, model64: 0x15d0700015d12},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d1200015d1c, model64: 0x15d1c00015d27},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d2700015d31, model64: 0x15d3100015d38},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d3800015d42, model64: 0x15d4200015d4d},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d4d00015d57, model64: 0x15d5700015d62},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d6200015d6c, model64: 0x15d6c00015d73},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d7300015d7d, model64: 0x15d7d00015d88},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d8800015d92, model64: 0x15d9200015d9d},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15d9d00015da7, model64: 0x15da700015db2},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15db200015dbc, model64: 0x15dbc00015dc7},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15dc700015dd1, model64: 0x15dd100015ddc},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15ddc00015de6, model64: 0x15de600015df1},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x18b0, match64: 0x00000000, model64: 0x15df100015df8},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15df800015e02, model64: 0x15e0200015e09},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e0900015e13, model64: 0x15e1300015e1a},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e1a00015e24, model64: 0x15e2400015e2b},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e2b00015e35, model64: 0x15e3500015e3c},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e3c00015e46, model64: 0x15e4600015e4d},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e4d00015e57, model64: 0x15e5700015e5e},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e5e00015e68, model64: 0x15e6800015e6f},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e6f00015e79, model64: 0x15e7900015e81},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e8100015e8b, model64: 0x15e8b00015e92},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15e9200015e9c, model64: 0x15e9c00015ea3},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15ea300015ead, model64: 0x15ead00015eb8},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15eb800015ec2, model64: 0x15ec200015ec9},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15ec900015ed3, model64: 0x15ed300015edb},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15edb00015ee5, model64: 0x15ee500015eed},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15eed00015ef7, model64: 0x15ef700015eff},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x15eff00015f09, model64: 0x15f0900015f11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f1100015f1b, model64: 0x15f1b00015f25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f2500015f2f, model64: 0x15f2f00015f46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f4600015f50, model64: 0x15f5000015f5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f5a00015f65, model64: 0x15f6500015f6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f6e00015f77, model64: 0x15f7700015f84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f8400015f90, model64: 0x15f9000015f9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f9c00015fa6, model64: 0x15fa600015fb3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15fb300015fba, model64: 0x15fba00015fc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15fc400015fcb, model64: 0x15fcb00015fd6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15fd600015fe0, model64: 0x15fe000015ffa},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b1, match64: 0x00000000, model64: 0x15ffa0001600b},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b2, match64: 0x00000000, model64: 0x1600b0001601c},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b3, match64: 0x00000000, model64: 0x1601c00016028},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1602800016032, model64: 0x1603200016048},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1604800016052, model64: 0x1605200016057},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b4, match64: 0x00000000, model64: 0x160570001606b},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b5, match64: 0x00000000, model64: 0x1606b00016076},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b6, match64: 0x00000000, model64: 0x1607600016081},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b7, match64: 0x00000000, model64: 0x1608100016086},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b8, match64: 0x00000000, model64: 0x160860001608b},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x18b9, match64: 0x00000000, model64: 0x1608b00016095},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x18ba, match64: 0x00000000, model64: 0x16095000160a3},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x18bb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18bc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x18bd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18bf, match64: 0x00000000, model64: 0x160ab000160b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c0, match64: 0x00000000, model64: 0x160b4000160bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c2, match64: 0x00000000, model64: 0x160c1000160ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c3, match64: 0x00000000, model64: 0x160ca000160d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c4, match64: 0x00000000, model64: 0x160d1000160d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c5, match64: 0x00000000, model64: 0x160d9000160de},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c6, match64: 0x00000000, model64: 0x160de000160e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c7, match64: 0x00000000, model64: 0x4dd600004dde},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c8, match64: 0x00000000, model64: 0x160e4000160ee},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18c9, match64: 0x00000000, model64: 0x160ee000160f0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18ca, match64: 0x00000000, model64: 0x160f0000160f7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18cb, match64: 0x00000000, model64: 0x160f7000160ff},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18cc, match64: 0x00000000, model64: 0x160ff00016107},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1610d00016115, model64: 0x161150001611d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1611d00016124, model64: 0x161240001612b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1612b00016132, model64: 0x1613200016139},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1613900016141, model64: 0x1614100016149},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ce, match64: 0x00000000, model64: 0x5d1c00005d1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x161490001614f, model64: 0x1614f00016151},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1615100016156, model64: 0x1615600016164},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x18d0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d3, match64: 0x00000000, model64: 0x1617200016177},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d4, match64: 0x00000000, model64: 0x161770001617d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x18d7, match64: 0x00000000, model64: 0x1618d00016196},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x161960001619a, model64: 0x1619a000161a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x161bc000161c4, model64: 0x161bc000161c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x18de, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x161d6000161de, model64: 0x161d6000161de},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x161ed000161fa, model64: 0x161fa00016208},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e5, match64: 0x00000000, model64: 0x1620800016213},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162130001621f, model64: 0x1621f0001622b},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e6, match64: 0x00000000, model64: 0x1622b00016232},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xce000000ce7, model64: 0xce000000ce7},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e7, match64: 0x00000000, model64: 0x162320001623b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1623b00016242, model64: 0x162420001624e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1624e00016255, model64: 0x1624e00016255},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162550001625e, model64: 0x162550001625e},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e8, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc5a10000c5a6, model64: 0xc5a10000c5a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e9, match64: 0x00000000, model64: 0x1625e0001626b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1626b00016277, model64: 0x1626b00016277},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1627700016282, model64: 0x162820001628d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1628d0001629a, model64: 0x1629a000162a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162a7000162af, model64: 0x162af000162b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162b7000162bf, model64: 0x162b7000162bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162bf000162c7, model64: 0x162c7000162cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162cf000162d5, model64: 0x162d5000162db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x162db000162e1, model64: 0x162e1000162e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ea, match64: 0x00000000, model64: 0x162e7000162f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x18eb, match64: 0x00000000, model64: 0x162f0000162fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ec, match64: 0x00000000, model64: 0x162fb00016305},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163050001630d, model64: 0x1630d00016317},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163170001631e, model64: 0x1631e00016325},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163250001632d, model64: 0x163250001632d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1632d00016338, model64: 0x163380001633b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1633b00016347, model64: 0x1634700016353},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1635300016360, model64: 0x163600001636f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1636f0001637b, model64: 0x1636f0001637b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1637b00016385, model64: 0x1637b00016385},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1638500016390, model64: 0x1638500016390},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ed, match64: 0x00000000, model64: 0x1639000016397},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ee, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16397000163a8, model64: 0x16397000163a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163a8000163b8, model64: 0x163a8000163b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163b8000163c7, model64: 0x163c7000163d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163d6000163e5, model64: 0x163e5000163f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163f400016402, model64: 0x1640200016410},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1641000016421, model64: 0x1641000016421},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ef, match64: 0x00000000, model64: 0x164210001642e},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f1, match64: 0x00000000, model64: 0x1642e00016436},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f2, match64: 0x00000000, model64: 0x1643600016439},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f3, match64: 0x00000000, model64: 0x1643900016442},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f4, match64: 0x00000000, model64: 0x72ca000072d3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18f5, match64: 0x00000000, model64: 0x1644200016448},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18f6, match64: 0x00000000, model64: 0x1644200016448},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f7, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f8, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1644800016452, model64: 0x1644800016452},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fb, match64: 0x00000000, model64: 0x164570001645d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164630001646b, model64: 0x1646b00016475},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164750001647e, model64: 0x1647e00016488},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1648800016492, model64: 0x164920001649c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1649c000164a4, model64: 0x164a4000164ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164ae000164b7, model64: 0x164b7000164c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164c1000164c9, model64: 0x164c9000164d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164d3000164dc, model64: 0x164dc000164e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164e6000164f0, model64: 0x164f0000164fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164fb00016505, model64: 0x1650500016510},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fd, match64: 0x00000000, model64: 0x165100001651b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1651b00016524, model64: 0x165240001652f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1652f00016535, model64: 0xe57c0000e57e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x165350001653d, model64: 0x1653d00016545},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x165450001654c, model64: 0x1654c00016554},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x165540001655c, model64: 0x1655c00016566},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x165660001656c, model64: 0x1656c00016573},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x165730001657c, model64: 0x1657c00016587},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18fe, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x165870001658e, model64: 0x1658e00016593},
		modelTuple{type64: 0x20d00000213, matchRI: 0x18ff, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1900, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1901, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1659300016598, model64: 0x165980001659c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1902, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1904, match64: 0x00000000, model64: 0x165a7000165b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1905, match64: 0x00000000, model64: 0x165b1000165bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165bd000165c5, model64: 0x165bd000165c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1906, match64: 0x00000000, model64: 0x165c5000165d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1907, match64: 0x00000000, model64: 0x165d2000165da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1908, match64: 0x00000000, model64: 0x165da000165e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1909, match64: 0x00000000, model64: 0x165e2000165f0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x190c, match64: 0x00000000, model64: 0x165fb00016603},
		modelTuple{type64: 0x2700000027, matchRI: 0x190d, match64: 0x00000000, model64: 0x1660300016607},
		modelTuple{type64: 0x2700000027, matchRI: 0x190e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x190f, match64: 0x00000000, model64: 0x166070001660e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1910, match64: 0x00000000, model64: 0x1660e00016614},
		modelTuple{type64: 0x2700000027, matchRI: 0x1911, match64: 0x00000000, model64: 0x1661400016616},
		modelTuple{type64: 0x2700000027, matchRI: 0x1912, match64: 0x00000000, model64: 0x1661600016621},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1913, match64: 0x00000000, model64: 0x166210001662c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1914, match64: 0x00000000, model64: 0x1662c00016635},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1917, match64: 0x00000000, model64: 0x1663f00016646},
		modelTuple{type64: 0x2700000027, matchRI: 0x1918, match64: 0x00000000, model64: 0x166460001664a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1919, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1665100016660},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1666000016666, model64: 0x166660001666c},
		modelTuple{type64: 0x2700000027, matchRI: 0x191c, match64: 0x00000000, model64: 0x1667200016677},
		modelTuple{type64: 0x2700000027, matchRI: 0x191e, match64: 0x00000000, model64: 0x1667b00016682},
		modelTuple{type64: 0x2700000027, matchRI: 0x191f, match64: 0x00000000, model64: 0x1668200016687},
		modelTuple{type64: 0x2700000027, matchRI: 0x1920, match64: 0x00000000, model64: 0x1668700016690},
		modelTuple{type64: 0x2700000027, matchRI: 0x1921, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1922, match64: 0x00000000, model64: 0x1669000016698},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1669d000166a5, model64: 0x166a5000166aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166aa000166b2, model64: 0x166b2000166b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166b7000166bf, model64: 0x166bf000166c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166c4000166cc, model64: 0x166cc000166d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1924, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x166d5000166db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1927, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x166e6000166f0, model64: 0x166f000016701},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1928, match64: 0x00000000, model64: 0x167010001670d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1929, match64: 0x00000000, model64: 0x1670d0001671d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1671d00016728, model64: 0x1672800016737},
		modelTuple{type64: 0x20d00000213, matchRI: 0x192a, match64: 0x00000000, model64: 0x1673700016742},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x167420001674d, model64: 0x1674d0001675e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1675e00016768, model64: 0x1676800016779},
		modelTuple{type64: 0x20d00000213, matchRI: 0x192b, match64: 0x00000000, model64: 0x1677900016789},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1678900016795, model64: 0x16795000167a4},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x167a4000167af, model64: 0x167af000167be},
		modelTuple{type64: 0xa01b0000a030, matchRI: 0x192c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x192d, match64: 0x00000000, model64: 0x167be000167c3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x192e, match64: 0x00000000, model64: 0x167c3000167c7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x167ca000167d6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1932, match64: 0x00000000, model64: 0x167de000167ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1933, match64: 0x00000000, model64: 0x167ef000167f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x167f5000167fd, model64: 0x6fbf00006fc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1934, match64: 0x00000000, model64: 0x167fd00016803},
		modelTuple{type64: 0x2700000027, matchRI: 0x1935, match64: 0x00000000, model64: 0x168030001680a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1936, match64: 0x00000000, model64: 0x1680a0001680e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1680e00016816, model64: 0x1681600016821},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1682100016829, model64: 0x1682900016833},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168330001683b, model64: 0x52c4000052ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1683b00016843, model64: 0x168430001684b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1937, match64: 0x00000000, model64: 0x46280000462f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1938, match64: 0x00000000, model64: 0x1684b0001685a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1939, match64: 0x00000000, model64: 0x1685a0001686b},
		modelTuple{type64: 0x2700000027, matchRI: 0x193a, match64: 0x00000000, model64: 0x1686b00016878},
		modelTuple{type64: 0x20d00000213, matchRI: 0x193b, match64: 0x00000000, model64: 0x168780001688b},
		modelTuple{type64: 0x2700000027, matchRI: 0x193c, match64: 0x00000000, model64: 0x1686b00016878},
		modelTuple{type64: 0x2700000027, matchRI: 0x193d, match64: 0x00000000, model64: 0x1686b00016878},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1688b0001688f, model64: 0x1688f0001689c},
		modelTuple{type64: 0x2700000027, matchRI: 0x193e, match64: 0x00000000, model64: 0x1689c000168a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168a4000168a8, model64: 0x168a8000168b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168b1000168b5, model64: 0x168b1000168b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x193f, match64: 0x00000000, model64: 0x168b5000168bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168bd000168c7, model64: 0x168bd000168c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168ce000168dc, model64: 0x168ce000168dc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1943, match64: 0x00000000, model64: 0x168ea000168f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168f2000168f9, model64: 0x168f900016901},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169080001690c, model64: 0x1690c0001690f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1690f00016915, model64: 0x169150001691a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1691a0001691e, model64: 0x1691e00016922},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1692200016926, model64: 0x169260001692f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1946, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1947, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169340001693b, model64: 0x1693b00016943},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x169430001694c, model64: 0x1694c00016956},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1948, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1696c00016978, model64: 0x1697800016984},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1698900016990},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x194e, match64: 0x00000000, model64: 0x1699c000169a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x194f, match64: 0x00000000, model64: 0x169a3000169aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1950, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1952, match64: 0x00000000, model64: 0x169b0000169b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169b8000169bf, model64: 0x169bf000169ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1953, match64: 0x00000000, model64: 0x169ca000169d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1954, match64: 0x00000000, model64: 0x182a0000182b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169d5000169dc, model64: 0x9c3c00009c42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1955, match64: 0x00000000, model64: 0x10e3000010e31},
		modelTuple{type64: 0x2700000027, matchRI: 0x1956, match64: 0x00000000, model64: 0x169dc000169e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1957, match64: 0x00000000, model64: 0x189100001892},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169e1000169e8, model64: 0x169e8000169ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1958, match64: 0x00000000, model64: 0x169ea000169ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1959, match64: 0x00000000, model64: 0xc8600000c861},
		modelTuple{type64: 0x2700000027, matchRI: 0x195a, match64: 0x00000000, model64: 0xe2cc0000e2ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169ef000169f6, model64: 0x131b1000131b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x195b, match64: 0x00000000, model64: 0x169f6000169fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169fc00016a03, model64: 0x16a0300016a08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a0800016a0f, model64: 0x16a0f00016a15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a1500016a1c, model64: 0x16a1c00016a25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a2500016a2c, model64: 0x16a2c00016a31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a3100016a38, model64: 0x16a3800016a3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a3b00016a42, model64: 0x16a4200016a48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a4800016a4f, model64: 0x16a4f00016a51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a5100016a58, model64: 0x16a5800016a5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x195c, match64: 0x00000000, model64: 0x16a5b00016a60},
		modelTuple{type64: 0x2700000027, matchRI: 0x195d, match64: 0x00000000, model64: 0x16a6000016a69},
		modelTuple{type64: 0x2700000027, matchRI: 0x195e, match64: 0x00000000, model64: 0x16a6900016a6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x195f, match64: 0x00000000, model64: 0x18c3000018c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1960, match64: 0x00000000, model64: 0x16a6b00016a70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1961, match64: 0x00000000, model64: 0x16a7000016a72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a7200016a79, model64: 0x16a7900016a7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1962, match64: 0x00000000, model64: 0x130f9000130fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1963, match64: 0x00000000, model64: 0x16a7b00016a7d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a7d00016a84, model64: 0x16a8400016a86},
		modelTuple{type64: 0x2700000027, matchRI: 0x1964, match64: 0x00000000, model64: 0x16a8600016a8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1965, match64: 0x00000000, model64: 0x18c9000018ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a8b00016a92, model64: 0x16a9200016a94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a9400016a9b, model64: 0x1495c00014961},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a9b00016aa2, model64: 0x16aa200016ab8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ab800016abf, model64: 0x1491b00014920},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16abf00016ac6, model64: 0x340b0000340c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1966, match64: 0x00000000, model64: 0x16ac600016ac8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ac800016acf, model64: 0x16acf00016ad1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ad100016ad8, model64: 0x16ad800016adc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1967, match64: 0x00000000, model64: 0x16adc00016ade},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ade00016ae5, model64: 0x16ae500016aea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16aea00016af1, model64: 0x9c2b00009c2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1968, match64: 0x00000000, model64: 0x16af100016af5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1969, match64: 0x00000000, model64: 0x16af500016afe},
		modelTuple{type64: 0x2700000027, matchRI: 0x196a, match64: 0x00000000, model64: 0x16afe00016b06},
		modelTuple{type64: 0x2700000027, matchRI: 0x196b, match64: 0x00000000, model64: 0x345b0000345d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b0600016b0d, model64: 0x16b0d00016b10},
		modelTuple{type64: 0x2700000027, matchRI: 0x196c, match64: 0x00000000, model64: 0x16b1000016b19},
		modelTuple{type64: 0x2700000027, matchRI: 0x196d, match64: 0x00000000, model64: 0x16b1900016b23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b2300016b2a, model64: 0x16b2a00016b34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b3400016b3b, model64: 0x16b3b00016b42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b4200016b49, model64: 0x16b4900016b52},
		modelTuple{type64: 0x2700000027, matchRI: 0x196e, match64: 0x00000000, model64: 0x16b5200016b54},
		modelTuple{type64: 0x2700000027, matchRI: 0x196f, match64: 0x00000000, model64: 0x4c3000004c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1970, match64: 0x00000000, model64: 0x5da900005dab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1971, match64: 0x00000000, model64: 0x14ef100014ef3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1972, match64: 0x00000000, model64: 0x16b5400016b57},
		modelTuple{type64: 0x2700000027, matchRI: 0x1973, match64: 0x00000000, model64: 0x16b5700016b5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1974, match64: 0x00000000, model64: 0x16b5a00016b5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1975, match64: 0x00000000, model64: 0x16b5d00016b71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1976, match64: 0x00000000, model64: 0x16b7100016b74},
		modelTuple{type64: 0x2700000027, matchRI: 0x1977, match64: 0x00000000, model64: 0x16b7400016b77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1978, match64: 0x00000000, model64: 0x16b7700016b7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1979, match64: 0x00000000, model64: 0x16b7a00016b7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x197a, match64: 0x00000000, model64: 0x16b7e00016b81},
		modelTuple{type64: 0x2700000027, matchRI: 0x197b, match64: 0x00000000, model64: 0x16b8100016b85},
		modelTuple{type64: 0x2700000027, matchRI: 0x197c, match64: 0x00000000, model64: 0x16b8500016b89},
		modelTuple{type64: 0x2700000027, matchRI: 0x197d, match64: 0x00000000, model64: 0x14ef300014ef6},
		modelTuple{type64: 0x2700000027, matchRI: 0x197e, match64: 0x00000000, model64: 0x16b8900016b8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b8c00016b93, model64: 0x16b9300016b97},
		modelTuple{type64: 0x2700000027, matchRI: 0x197f, match64: 0x00000000, model64: 0x16b9700016b9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1980, match64: 0x00000000, model64: 0x16b9a00016b9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b9d00016ba4, model64: 0x14f0d00014f10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ba400016bab, model64: 0x91eb000091ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16bab00016bb2, model64: 0x16bb200016bb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16bb500016bbc, model64: 0x16bbc00016bc6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16bc600016bcd, model64: 0x16bcd00016bd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1981, match64: 0x00000000, model64: 0x16bd100016bd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1982, match64: 0x00000000, model64: 0x16bd900016bdd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16bdd00016be4, model64: 0x16be400016bf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1983, match64: 0x00000000, model64: 0x16bf800016bfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1984, match64: 0x00000000, model64: 0x16bfe00016c06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1985, match64: 0x00000000, model64: 0x16c0600016c0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1986, match64: 0x00000000, model64: 0x16c0e00016c1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1987, match64: 0x00000000, model64: 0x16c1b00016c24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1988, match64: 0x00000000, model64: 0x16c2400016c2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1989, match64: 0x00000000, model64: 0x16c2d00016c3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x198a, match64: 0x00000000, model64: 0x16c3e00016c4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x198b, match64: 0x00000000, model64: 0x16c4a00016c56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c5600016c5d, model64: 0x16c5d00016c65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c6500016c6c, model64: 0x16c6c00016c75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c7500016c7c, model64: 0x16c7c00016c85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c8500016c8c, model64: 0x16c8c00016c94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c9400016c9b, model64: 0x16c9b00016ca6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ca600016cad, model64: 0x16cad00016cb6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16cb600016cbd, model64: 0x16cbd00016cc5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16cc500016ccc, model64: 0x16ccc00016cd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16cd700016cde, model64: 0x16cde00016cea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16cea00016cf1, model64: 0x16cf100016d00},
		modelTuple{type64: 0x2700000027, matchRI: 0x198c, match64: 0x00000000, model64: 0x16d0000016d0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16d0f00016d16, model64: 0x16d1600016d1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16d1f00016d26, model64: 0x16d2600016d35},
		modelTuple{type64: 0x2700000027, matchRI: 0x198d, match64: 0x00000000, model64: 0x91f0000091f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x198e, match64: 0x00000000, model64: 0x16d3500016d3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x198f, match64: 0x00000000, model64: 0x16d3b00016d42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1990, match64: 0x00000000, model64: 0x16d4200016d49},
		modelTuple{type64: 0x2700000027, matchRI: 0x1991, match64: 0x00000000, model64: 0x16d4900016d53},
		modelTuple{type64: 0x2700000027, matchRI: 0x1992, match64: 0x00000000, model64: 0x16d5300016d61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1993, match64: 0x00000000, model64: 0xc8540000c856},
		modelTuple{type64: 0x2700000027, matchRI: 0x1994, match64: 0x00000000, model64: 0x16d6100016d6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16d6e00016d75, model64: 0xc8540000c856},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a0800016a0f, model64: 0x16a0f00016a15},
		modelTuple{type64: 0x2700000027, matchRI: 0x1995, match64: 0x00000000, model64: 0x16d7500016d78},
		modelTuple{type64: 0x2700000027, matchRI: 0x1996, match64: 0x00000000, model64: 0x16d7800016d7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1997, match64: 0x00000000, model64: 0x16d7d00016d82},
		modelTuple{type64: 0x2700000027, matchRI: 0x1998, match64: 0x00000000, model64: 0x16d8200016d88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16d8800016d8f, model64: 0x16d8f00016d96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1999, match64: 0x00000000, model64: 0x16d9600016d9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x199a, match64: 0x00000000, model64: 0x16d9c00016da2},
		modelTuple{type64: 0x2700000027, matchRI: 0x199b, match64: 0x00000000, model64: 0xe1450000e148},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16da200016da9, model64: 0x16da900016dac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16dac00016db3, model64: 0x16db300016db6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16db600016dbd, model64: 0x16dbd00016dc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x199c, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x199d, match64: 0x00000000, model64: 0x16dc200016dc5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x199e, match64: 0x00000000, model64: 0x16dc500016dca},
		modelTuple{type64: 0x20d00000213, matchRI: 0x199f, match64: 0x00000000, model64: 0x16dca00016dd2},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x16dd200016de4, model64: 0x16dd200016de4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a3, match64: 0x00000000, model64: 0x16df800016e08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e0e00016e1b, model64: 0x16e1b00016e22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e2200016e2d, model64: 0x1495c00014961},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e2d00016e35, model64: 0x18c9000018ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e3b00016e41, model64: 0x16e4100016e47},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e4700016e4f, model64: 0x16e4f00016e58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e5800016e5e, model64: 0x16e5e00016e65},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a7, match64: 0x00000000, model64: 0x16e6500016e6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a8, match64: 0x00000000, model64: 0x16e6a00016e6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e6f00016e7b, model64: 0x16e6f00016e7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e7b00016e86, model64: 0x16e7b00016e86},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x16e8600016e8e, model64: 0x16e8e00016e97},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x16e9700016ea6, model64: 0x16ea600016eb7},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x16eb700016ec4, model64: 0x16ec400016ed1},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x16ed100016ede, model64: 0x16ede00016eeb},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x16eeb00016f00, model64: 0x16f0000016f17},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x16f1700016f28, model64: 0x16f1700016f28},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x16f2800016f38, model64: 0x16f2800016f38},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x19a9, match64: 0x00000000, model64: 0x16f3800016f48},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x19aa, match64: 0x00000000, model64: 0x16f4800016f5c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x19ab, match64: 0x00000000, model64: 0x16f5c00016f68},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x16f6800016f70, model64: 0x16f7000016f78},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x16f7800016f84, model64: 0x16f8400016f8b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ae, match64: 0x00000000, model64: 0x16f9700016f9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f9f00016fab, model64: 0x16fab00016fb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16fbc00016fc1, model64: 0x16fc100016fc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16fcf00016fdc, model64: 0x16fdc00016fdf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16fe800016fec},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b5, match64: 0x00000000, model64: 0x16ff700016ffd},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x19b6, match64: 0x00000000, model64: 0x16ffd00017003},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1700b00017010},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1701b00017027, model64: 0x1702700017034},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170340001703c, model64: 0x1703c00017044},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bb, match64: 0x00000000, model64: 0x1704400017050},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bc, match64: 0x00000000, model64: 0x170500001705c},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bd, match64: 0x00000000, model64: 0x1705c00017067},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1708900017092},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1709f000170a5, model64: 0x1709f000170a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170a5000170ad, model64: 0x170a5000170ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170ad000170b2, model64: 0x170ad000170b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170b6000170bb, model64: 0x170bb000170c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170c2000170cb, model64: 0x170cb000170d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2700000027, model64: 0x170d0000170e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c3, match64: 0x00000000, model64: 0x170eb000170f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c4, match64: 0x00000000, model64: 0x170f900017106},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1710f00017116},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x19c9, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ca, match64: 0x00000000, model64: 0x171230001712e},
		modelTuple{type64: 0x2700000027, matchRI: 0x19cb, match64: 0x00000000, model64: 0x1712e0001713a},
		modelTuple{type64: 0x2700000027, matchRI: 0x19cc, match64: 0x00000000, model64: 0x1713a00017145},
		modelTuple{type64: 0x2700000027, matchRI: 0x19cd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19cf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1714d00017159, model64: 0x171590001715f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x19d0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171650001716e, model64: 0x171650001716e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1716e00017175, model64: 0x1716e00017175},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1717c00017181, model64: 0x1717c00017181},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d6, match64: 0x00000000, model64: 0x171900001719b},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d9, match64: 0x00000000, model64: 0x64e00000655},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1719f000171a5, model64: 0x171a5000171ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x19da, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19dc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171b1000171b6, model64: 0x171b1000171b6},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x171b6000171bd, model64: 0x99d8000099da},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x171c1000171cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x19de, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x19df, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e2, match64: 0x00000000, model64: 0xc39e0000c3a1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x19e4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171e6000171f1, model64: 0x171f1000171f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171df000171e6, model64: 0xedc70000edc9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e8, match64: 0x00000000, model64: 0x1720900017210},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e9, match64: 0x00000000, model64: 0x172100001721b},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ea, match64: 0x00000000, model64: 0x1721b00017221},
		modelTuple{type64: 0x2700000027, matchRI: 0x19eb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ed, match64: 0x00000000, model64: 0x172240001722f},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ee, match64: 0x00000000, model64: 0x1722f0001723b},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ef, match64: 0x00000000, model64: 0x1723b00017244},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f0, match64: 0x00000000, model64: 0x172440001724f},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f1, match64: 0x00000000, model64: 0x1724f0001725a},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f2, match64: 0x00000000, model64: 0x1725a0001726a},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f3, match64: 0x00000000, model64: 0x1726a00017276},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f4, match64: 0x00000000, model64: 0x172760001727f},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f5, match64: 0x00000000, model64: 0x1727f00017288},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f6, match64: 0x00000000, model64: 0x1728800017292},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f7, match64: 0x00000000, model64: 0x1729200017296},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f8, match64: 0x00000000, model64: 0x17296000172a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x19f9, match64: 0x00000000, model64: 0x172a1000172ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fa, match64: 0x00000000, model64: 0x172ac000172b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fb, match64: 0x00000000, model64: 0x172b5000172c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fc, match64: 0x00000000, model64: 0x172c1000172cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fd, match64: 0x00000000, model64: 0x172cd000172d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fe, match64: 0x00000000, model64: 0x172d9000172ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ff, match64: 0x00000000, model64: 0x172ea000172f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a00, match64: 0x00000000, model64: 0x172f600017300},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a01, match64: 0x00000000, model64: 0x173000001730a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a02, match64: 0x00000000, model64: 0x1730a00017312},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a03, match64: 0x00000000, model64: 0x173120001731d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a04, match64: 0x00000000, model64: 0x1731d00017329},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a05, match64: 0x00000000, model64: 0x1732900017332},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1733200017339, model64: 0x1733200017339},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a06, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1733d00017340},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a08, match64: 0x00000000, model64: 0x1734c00017355},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x173620001736b, model64: 0x1736b00017374},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1737400017382, model64: 0x1737400017382},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1738200017392, model64: 0x17392000173a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x173a2000173af, model64: 0x173af000173bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x173c3000173cc, model64: 0x173cc000173d6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x173df000173e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a10, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x173ea000173f9, model64: 0x173f900017408},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1740800017412, model64: 0x174120001741c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1742000017429},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1742c0001743c, model64: 0x1743c0001744c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a12, match64: 0x00000000, model64: 0x1744c0001745e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a13, match64: 0x00000000, model64: 0x1745e00017469},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1746900017474, model64: 0x1746900017474},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x174740001747f, model64: 0x1747f0001748a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1748a00017494, model64: 0x174940001749e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1749e000174ab, model64: 0x174ab000174b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a14, match64: 0x00000000, model64: 0x174b8000174c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a15, match64: 0x00000000, model64: 0x174c1000174ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x174ca000174d3, model64: 0x174ca000174d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x174d3000174db, model64: 0x174db000174e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x174e3000174e9, model64: 0x174e9000174ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x174ef000174f4, model64: 0x174ef000174f4},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x174f400017502, model64: 0x175020001750c},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1750c0001751a, model64: 0x1751a00017524},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1752400017531, model64: 0x175310001753a},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1753a00017543, model64: 0xc6cf0000c6d4},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x175430001754e, model64: 0x1754e00017555},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1755500017561, model64: 0x1756100017569},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1756900017575, model64: 0x175750001757d},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1757d00017584, model64: 0x1758400017587},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1a16, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1758700017596, model64: 0x17596000175a1},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x175a1000175aa, model64: 0x175aa000175af},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x175b4000175b7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175c5000175cc, model64: 0x175c5000175cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175cc000175d7, model64: 0x175cc000175d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175d7000175e2, model64: 0x175e2000175ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175ed000175f3, model64: 0x175f3000175f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175f900017603, model64: 0x176030001760d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1760d00017619, model64: 0x1761900017625},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176250001762c, model64: 0x1762c00017633},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176330001763b, model64: 0x1763b00017643},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176430001764a, model64: 0x1764a00017651},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1765100017658, model64: 0x1765100017658},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176660001766c, model64: 0x176660001766c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1766c00017673, model64: 0x1766c00017673},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1767300017680, model64: 0x176800001768d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1768d00017699, model64: 0x1768d00017699},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1c, match64: 0x00000000, model64: 0x17699000176a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176ac000176b3, model64: 0x176ac000176b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a20, match64: 0x00000000, model64: 0xdc680000dc6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a22, match64: 0x00000000, model64: 0x176ba000176c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176c6000176d1, model64: 0x176d1000176dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a23, match64: 0x00000000, model64: 0x176dc000176e6},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1a24, match64: 0x00000000, model64: 0x176e6000176ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a26, match64: 0x00000000, model64: 0x176fc00017704},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a27, match64: 0x00000000, model64: 0x1770400017709},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1770900017710, model64: 0x1771000017716},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a28, match64: 0x00000000, model64: 0x177160001771b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1771e00017726},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1772f0001773b, model64: 0x1773b00017747},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1774700017755, model64: 0x1774700017755},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177550001775d, model64: 0x1775d00017765},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177650001776f, model64: 0x1776f00017779},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1777900017782, model64: 0x177820001778b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1778b00017794, model64: 0x177940001779d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1779d000177a6, model64: 0x177a6000177af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177af000177b9, model64: 0x177af000177b9},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x177b9000177c4, model64: 0x177c4000177cd},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1a2c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x177d2000177df, model64: 0x177df000177e4},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x177e4000177ed, model64: 0x177ed000177f3},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1a30, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a32, match64: 0x00000000, model64: 0x177f800017807},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a33, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x178070001780f, model64: 0x1780f00017818},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1a35, match64: 0x00000000, model64: 0x1781800017821},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1782100017827, model64: 0x2700000027},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1a36, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a37, match64: 0x00000000, model64: 0x1782700017837},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a38, match64: 0x00000000, model64: 0x178370001784c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a39, match64: 0x00000000, model64: 0x1784c00017862},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a3a, match64: 0x00000000, model64: 0x1786200017877},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a3b, match64: 0x00000000, model64: 0x178770001788b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a3c, match64: 0x00000000, model64: 0x1788b0001789c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a3d, match64: 0x00000000, model64: 0x1789c000178b2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a3e, match64: 0x00000000, model64: 0x178b2000178c7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a3f, match64: 0x00000000, model64: 0x178c7000178d1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a40, match64: 0x00000000, model64: 0x178d1000178e0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a41, match64: 0x00000000, model64: 0x178e0000178f4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a42, match64: 0x00000000, model64: 0x178f400017906},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a43, match64: 0x00000000, model64: 0x179060001791d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a44, match64: 0x00000000, model64: 0x1791d00017931},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a45, match64: 0x00000000, model64: 0x1793100017943},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a46, match64: 0x00000000, model64: 0x179430001795a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a47, match64: 0x00000000, model64: 0x1795a00017970},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a48, match64: 0x00000000, model64: 0x1797000017982},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a49, match64: 0x00000000, model64: 0x1798200017996},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a4a, match64: 0x00000000, model64: 0x17996000179a5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x179a5000179ab, model64: 0x179ab000179bf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a4b, match64: 0x00000000, model64: 0x179bf000179cf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a4c, match64: 0x00000000, model64: 0x179cf000179df},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a4d, match64: 0x00000000, model64: 0x179df000179f5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a4e, match64: 0x00000000, model64: 0x179f500017a0d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a4f, match64: 0x00000000, model64: 0x17a0d00017a30},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a50, match64: 0x00000000, model64: 0x17a3000017a4e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a51, match64: 0x00000000, model64: 0x17a4e00017a70},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a52, match64: 0x00000000, model64: 0x17a7000017a89},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a53, match64: 0x00000000, model64: 0x17a8900017a9d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a54, match64: 0x00000000, model64: 0x17a9d00017ab5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a55, match64: 0x00000000, model64: 0x17ab500017add},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a56, match64: 0x00000000, model64: 0x17add00017b06},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a57, match64: 0x00000000, model64: 0x17b0600017b2d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a58, match64: 0x00000000, model64: 0x17b2d00017b55},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a59, match64: 0x00000000, model64: 0x17b5500017b71},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a5a, match64: 0x00000000, model64: 0x17b7100017b8d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a5b, match64: 0x00000000, model64: 0x17b8d00017bab},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a5c, match64: 0x00000000, model64: 0x17bab00017bca},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a5d, match64: 0x00000000, model64: 0x17bca00017bec},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a5e, match64: 0x00000000, model64: 0x17bec00017c0f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a5f, match64: 0x00000000, model64: 0x17c0f00017c2a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a60, match64: 0x00000000, model64: 0x17c2a00017c41},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a61, match64: 0x00000000, model64: 0x17c4100017c59},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a62, match64: 0x00000000, model64: 0x17c5900017c71},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a63, match64: 0x00000000, model64: 0x17c7100017c8f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a64, match64: 0x00000000, model64: 0x17c8f00017ca2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a65, match64: 0x00000000, model64: 0x17ca200017cb6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a66, match64: 0x00000000, model64: 0x17cb600017ccf},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a67, match64: 0x00000000, model64: 0x17ccf00017ce2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a68, match64: 0x00000000, model64: 0x17ce200017cf9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a69, match64: 0x00000000, model64: 0x17cf900017d11},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a6a, match64: 0x00000000, model64: 0x17d1100017d2e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a6b, match64: 0x00000000, model64: 0x17d2e00017d46},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a6c, match64: 0x00000000, model64: 0x17d4600017d5c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a6d, match64: 0x00000000, model64: 0x17d5c00017d74},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a6e, match64: 0x00000000, model64: 0x17d7400017d92},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a6f, match64: 0x00000000, model64: 0x17d9200017da8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a70, match64: 0x00000000, model64: 0x17da800017db6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a71, match64: 0x00000000, model64: 0x17db600017dcc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a72, match64: 0x00000000, model64: 0x17dcc00017de2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a73, match64: 0x00000000, model64: 0x17de200017df3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a74, match64: 0x00000000, model64: 0x17df300017e09},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a75, match64: 0x00000000, model64: 0x17e0900017e1d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a76, match64: 0x00000000, model64: 0x17e1d00017e32},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a77, match64: 0x00000000, model64: 0x17e3200017e4d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a78, match64: 0x00000000, model64: 0x17e4d00017e63},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a79, match64: 0x00000000, model64: 0x17e6300017e77},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a7a, match64: 0x00000000, model64: 0x17e7700017e88},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a7b, match64: 0x00000000, model64: 0x17e8800017e9d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a7c, match64: 0x00000000, model64: 0x17e9d00017eb3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a7d, match64: 0x00000000, model64: 0x17eb300017ec8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a7e, match64: 0x00000000, model64: 0x17ec800017ee0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a7f, match64: 0x00000000, model64: 0x17ee000017ef6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a80, match64: 0x00000000, model64: 0x17ef600017f11},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a81, match64: 0x00000000, model64: 0x17f1100017f23},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a82, match64: 0x00000000, model64: 0x17f2300017f3a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a83, match64: 0x00000000, model64: 0x17f3a00017f50},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a84, match64: 0x00000000, model64: 0x17f5000017f67},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a85, match64: 0x00000000, model64: 0x17f6700017f7e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a86, match64: 0x00000000, model64: 0x17f7e00017f94},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a87, match64: 0x00000000, model64: 0x17f9400017fa9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a88, match64: 0x00000000, model64: 0x17fa900017fc0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a89, match64: 0x00000000, model64: 0x17fc000017fd6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a8a, match64: 0x00000000, model64: 0x17fd600017fed},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a8b, match64: 0x00000000, model64: 0x17fed00018003},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a8c, match64: 0x00000000, model64: 0x180030001801a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a8d, match64: 0x00000000, model64: 0x1801a00018030},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a8e, match64: 0x00000000, model64: 0x1803000018047},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a8f, match64: 0x00000000, model64: 0x180470001805d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a90, match64: 0x00000000, model64: 0x1805d00018075},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a91, match64: 0x00000000, model64: 0x180750001808e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a92, match64: 0x00000000, model64: 0x1808e000180a5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a93, match64: 0x00000000, model64: 0x180a5000180bd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a94, match64: 0x00000000, model64: 0x180bd000180d4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a95, match64: 0x00000000, model64: 0x180d4000180ea},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a96, match64: 0x00000000, model64: 0x180ea00018104},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a97, match64: 0x00000000, model64: 0x181040001811d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a98, match64: 0x00000000, model64: 0x1811d00018138},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a99, match64: 0x00000000, model64: 0x1813800018154},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a9a, match64: 0x00000000, model64: 0x181540001816b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a9b, match64: 0x00000000, model64: 0x1816b00018184},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a9c, match64: 0x00000000, model64: 0x181840001819a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a9d, match64: 0x00000000, model64: 0x1819a000181b2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a9e, match64: 0x00000000, model64: 0x181b2000181c8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1a9f, match64: 0x00000000, model64: 0x181c8000181dd},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa0, match64: 0x00000000, model64: 0x181dd000181f3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa1, match64: 0x00000000, model64: 0x181f300018208},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa2, match64: 0x00000000, model64: 0x1820800018224},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa3, match64: 0x00000000, model64: 0x1822400018240},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa4, match64: 0x00000000, model64: 0x182400001825d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa5, match64: 0x00000000, model64: 0x1825d00018273},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa6, match64: 0x00000000, model64: 0x1827300018288},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa7, match64: 0x00000000, model64: 0x18288000182a6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa8, match64: 0x00000000, model64: 0x182a6000182c3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aa9, match64: 0x00000000, model64: 0x182c3000182e0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aaa, match64: 0x00000000, model64: 0x182e0000182f9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aab, match64: 0x00000000, model64: 0x182f90001830a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aac, match64: 0x00000000, model64: 0x1830a00018320},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aad, match64: 0x00000000, model64: 0x1832000018334},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aae, match64: 0x00000000, model64: 0x1833400018348},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1aaf, match64: 0x00000000, model64: 0x183480001835e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab0, match64: 0x00000000, model64: 0x1835e00018379},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab1, match64: 0x00000000, model64: 0x1837900018391},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab2, match64: 0x00000000, model64: 0x18391000183ae},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab3, match64: 0x00000000, model64: 0x183ae000183c6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab4, match64: 0x00000000, model64: 0x183c6000183e3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab5, match64: 0x00000000, model64: 0x183e3000183fe},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab6, match64: 0x00000000, model64: 0x183fe0001841e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab7, match64: 0x00000000, model64: 0x1841e00018433},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ab8, match64: 0x00000000, model64: 0x184330001843f},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1843f00018446, model64: 0x1844600018460},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1846000018468, model64: 0x1846800018473},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x184730001847b, model64: 0x1847b0001848a},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1848a00018492, model64: 0x184920001849f},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1849f000184a8, model64: 0x184a8000184b9},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x184b9000184c0, model64: 0x184c0000184de},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x184de000184e5, model64: 0x184e5000184ff},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x184ff00018506, model64: 0x1850600018524},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x185240001852b, model64: 0x1852b0001853c},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1853c00018543, model64: 0x1854300018556},
		modelTuple{type64: 0x245800002460, matchRI: 0x1ab9, match64: 0x00000000, model64: 0x1855600018569},
		modelTuple{type64: 0x245800002460, matchRI: 0x1aba, match64: 0x00000000, model64: 0x185690001857c},
		modelTuple{type64: 0x245800002460, matchRI: 0x1abb, match64: 0x00000000, model64: 0x1857c0001858f},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1858f00018596, model64: 0x18596000185ad},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x185ad000185b4, model64: 0x185b4000185cb},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x185cb000185d2, model64: 0x185d2000185e7},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x185e7000185ee, model64: 0x185ee00018601},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1860100018608, model64: 0x1860800018619},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1861900018620, model64: 0x1862000018635},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x186350001863c, model64: 0x1863c0001864f},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1864f00018656, model64: 0x186560001866c},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1866c00018673, model64: 0x186730001868f},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1868f00018696, model64: 0x18696000186a9},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x186a9000186b0, model64: 0x186b0000186c3},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x186c3000186ca, model64: 0x186ca000186d5},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x186d5000186dc, model64: 0x186dc000186e8},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x186e8000186ef, model64: 0x186ef0001870b},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1870b00018712, model64: 0x187120001872d},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1872d00018734, model64: 0x187340001874b},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1874b00018752, model64: 0x1875200018765},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x187650001876c, model64: 0x1876c0001877f},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1877f00018786, model64: 0x187860001879c},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1879c000187a5, model64: 0x1879c000187a5},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x1abc, match64: 0x00000000, model64: 0x187a5000187af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1abd, match64: 0x00000000, model64: 0x187af000187b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1abe, match64: 0x00000000, model64: 0x187b9000187c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1abf, match64: 0x00000000, model64: 0x187c5000187d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac0, match64: 0x00000000, model64: 0x187d0000187db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac1, match64: 0x00000000, model64: 0x187db000187e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac2, match64: 0x00000000, model64: 0x187e8000187f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac3, match64: 0x00000000, model64: 0x187f400018805},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac4, match64: 0x00000000, model64: 0x188050001880f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac5, match64: 0x00000000, model64: 0x1880f0001881b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac6, match64: 0x00000000, model64: 0x1881b00018828},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac7, match64: 0x00000000, model64: 0x1882800018830},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac8, match64: 0x00000000, model64: 0x1883000018838},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac9, match64: 0x00000000, model64: 0x188380001883f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aca, match64: 0x00000000, model64: 0x1883f00018846},
		modelTuple{type64: 0x2700000027, matchRI: 0x1acb, match64: 0x00000000, model64: 0x188460001884d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1acc, match64: 0x00000000, model64: 0x1884d00018858},
		modelTuple{type64: 0x2700000027, matchRI: 0x1acd, match64: 0x00000000, model64: 0x188580001885d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ace, match64: 0x00000000, model64: 0x1885d00018864},
		modelTuple{type64: 0x2700000027, matchRI: 0x1acf, match64: 0x00000000, model64: 0x188640001886c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad0, match64: 0x00000000, model64: 0x1886c0001887d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad1, match64: 0x00000000, model64: 0x1887d00018887},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad2, match64: 0x00000000, model64: 0x1888700018897},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad3, match64: 0x00000000, model64: 0x18897000188a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad4, match64: 0x00000000, model64: 0x188a3000188af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad5, match64: 0x00000000, model64: 0x188af000188c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad6, match64: 0x00000000, model64: 0x188c0000188d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad7, match64: 0x00000000, model64: 0x188d1000188e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad8, match64: 0x00000000, model64: 0x188e1000188ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad9, match64: 0x00000000, model64: 0x188ec000188fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ada, match64: 0x00000000, model64: 0x188fe0001890f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1adb, match64: 0x00000000, model64: 0x1890f0001892e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1adc, match64: 0x00000000, model64: 0x1892e00018939},
		modelTuple{type64: 0x2700000027, matchRI: 0x1add, match64: 0x00000000, model64: 0x189390001894c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ade, match64: 0x00000000, model64: 0x1894c0001895b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1adf, match64: 0x00000000, model64: 0x1895b0001896f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae0, match64: 0x00000000, model64: 0x1896f00018971},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae1, match64: 0x00000000, model64: 0x189710001897c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae2, match64: 0x00000000, model64: 0x1897c00018989},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae3, match64: 0x00000000, model64: 0x1898900018994},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae4, match64: 0x00000000, model64: 0x18994000189a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae5, match64: 0x00000000, model64: 0x189a1000189ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae6, match64: 0x00000000, model64: 0x189ab000189b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae7, match64: 0x00000000, model64: 0x189390001894c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae8, match64: 0x00000000, model64: 0x189b9000189c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae9, match64: 0x00000000, model64: 0x189c7000189d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aea, match64: 0x00000000, model64: 0x189d0000189d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aeb, match64: 0x00000000, model64: 0x189d9000189e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aec, match64: 0x00000000, model64: 0x189e1000189ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aed, match64: 0x00000000, model64: 0x189ee000189f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aee, match64: 0x00000000, model64: 0x189f700018a0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aef, match64: 0x00000000, model64: 0x18a0e00018a1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af0, match64: 0x00000000, model64: 0x188e1000188ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af1, match64: 0x00000000, model64: 0x18a1e00018a2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af2, match64: 0x00000000, model64: 0x18a2f00018a37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af3, match64: 0x00000000, model64: 0x18a3700018a47},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af4, match64: 0x00000000, model64: 0x18a4700018a55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af5, match64: 0x00000000, model64: 0x18a5500018a63},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af6, match64: 0x00000000, model64: 0x18a6300018a7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af7, match64: 0x00000000, model64: 0x18a7a00018a8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af8, match64: 0x00000000, model64: 0x18a8a00018a96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af9, match64: 0x00000000, model64: 0x18a9600018aa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afa, match64: 0x00000000, model64: 0x18aa600018aaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afb, match64: 0x00000000, model64: 0x18aaf00018ac2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afc, match64: 0x00000000, model64: 0x18ac200018acf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afd, match64: 0x00000000, model64: 0x18acf00018ada},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afe, match64: 0x00000000, model64: 0x18ada00018aec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aff, match64: 0x00000000, model64: 0x18aec00018afd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b00, match64: 0x00000000, model64: 0x18afd00018b0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b01, match64: 0x00000000, model64: 0x18b0c00018b20},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b02, match64: 0x00000000, model64: 0x18b2000018b2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b03, match64: 0x00000000, model64: 0x18b2c00018b3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b04, match64: 0x00000000, model64: 0x18b3d00018b4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b05, match64: 0x00000000, model64: 0x18b4b00018b5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b06, match64: 0x00000000, model64: 0x18b5d00018b76},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b07, match64: 0x00000000, model64: 0x18b7600018b81},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b08, match64: 0x00000000, model64: 0x18b8100018b91},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b09, match64: 0x00000000, model64: 0x18b9100018b9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0a, match64: 0x00000000, model64: 0x18b9c00018ba9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0b, match64: 0x00000000, model64: 0x18ba900018bb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0c, match64: 0x00000000, model64: 0x18bb500018bc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0d, match64: 0x00000000, model64: 0x18bc400018bd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0e, match64: 0x00000000, model64: 0x18bd000018be1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0f, match64: 0x00000000, model64: 0x18be100018bf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b10, match64: 0x00000000, model64: 0x18bf200018c00},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b11, match64: 0x00000000, model64: 0x18c0000018c0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b12, match64: 0x00000000, model64: 0x18c0d00018c1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b13, match64: 0x00000000, model64: 0x18c1c00018c2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b14, match64: 0x00000000, model64: 0x18c2b00018c3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b15, match64: 0x00000000, model64: 0x18c3a00018c49},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b16, match64: 0x00000000, model64: 0x18c4900018c5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b17, match64: 0x00000000, model64: 0x18c5b00018c6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b18, match64: 0x00000000, model64: 0x18c6a00018c7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b19, match64: 0x00000000, model64: 0x18c7a00018c8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1a, match64: 0x00000000, model64: 0x18c8b00018ca1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1b, match64: 0x00000000, model64: 0x18ca100018cb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1c, match64: 0x00000000, model64: 0x18cb000018cc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1d, match64: 0x00000000, model64: 0x16b2000016b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1e, match64: 0x00000000, model64: 0x18cc300018cca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1f, match64: 0x00000000, model64: 0x18cca00018cd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b20, match64: 0x00000000, model64: 0x18cd000018cd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b21, match64: 0x00000000, model64: 0x18cd600018cdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b22, match64: 0x00000000, model64: 0x18cdc00018ce4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b23, match64: 0x00000000, model64: 0x18ce400018cec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b24, match64: 0x00000000, model64: 0x18cec00018cf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b25, match64: 0x00000000, model64: 0x18cf400018cfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b26, match64: 0x00000000, model64: 0x18cfc00018d0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b27, match64: 0x00000000, model64: 0x18d0a00018d17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b28, match64: 0x00000000, model64: 0x18d1700018d24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b29, match64: 0x00000000, model64: 0x18d2400018d31},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2a, match64: 0x00000000, model64: 0x18d3100018d41},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2b, match64: 0x00000000, model64: 0x18d4100018d52},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2c, match64: 0x00000000, model64: 0x18d5200018d71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2d, match64: 0x00000000, model64: 0x1894c0001895b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2e, match64: 0x00000000, model64: 0x18d7100018d84},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2f, match64: 0x00000000, model64: 0x18d8400018d93},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b30, match64: 0x00000000, model64: 0x18d9300018da4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b31, match64: 0x00000000, model64: 0x18da400018db2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b32, match64: 0x00000000, model64: 0x18db200018dc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b33, match64: 0x00000000, model64: 0x18dc400018dd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b34, match64: 0x00000000, model64: 0x18dd200018ddb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b35, match64: 0x00000000, model64: 0x18ddb00018de9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b36, match64: 0x00000000, model64: 0x18de900018df9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b37, match64: 0x00000000, model64: 0x18df900018e06},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b38, match64: 0x00000000, model64: 0x18e0600018e17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b39, match64: 0x00000000, model64: 0x18e1700018e20},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3a, match64: 0x00000000, model64: 0x18de900018df9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3b, match64: 0x00000000, model64: 0x18e2000018e2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3c, match64: 0x00000000, model64: 0x18e2e00018e3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3d, match64: 0x00000000, model64: 0x18e3d00018e46},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3e, match64: 0x00000000, model64: 0x18e4600018e54},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3f, match64: 0x00000000, model64: 0x18e5400018e64},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b40, match64: 0x00000000, model64: 0x18e6400018e6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b41, match64: 0x00000000, model64: 0x18e6d00018e7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b42, match64: 0x00000000, model64: 0x18e7b00018e8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b43, match64: 0x00000000, model64: 0x18e8b00018e95},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b44, match64: 0x00000000, model64: 0x18e9500018e9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b45, match64: 0x00000000, model64: 0x18e9e00018ea8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b46, match64: 0x00000000, model64: 0x18ea800018eb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b47, match64: 0x00000000, model64: 0x18eb200018ec1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b48, match64: 0x00000000, model64: 0x18ec100018ecc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18ecc00018ed2, model64: 0x18ed200018ef3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b49, match64: 0x00000000, model64: 0x18ef300018efe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4a, match64: 0x00000000, model64: 0x18efe00018f08},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4b, match64: 0x00000000, model64: 0x18f0800018f15},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4c, match64: 0x00000000, model64: 0x18f1500018f22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4d, match64: 0x00000000, model64: 0x18f2200018f32},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4e, match64: 0x00000000, model64: 0x18f3200018f45},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b4f, match64: 0x00000000, model64: 0x18f4500018f50},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b50, match64: 0x00000000, model64: 0x18f5000018f5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b51, match64: 0x00000000, model64: 0x18f5e00018f6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b52, match64: 0x00000000, model64: 0x18f6e00018f7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b53, match64: 0x00000000, model64: 0x18f7b00018f8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b54, match64: 0x00000000, model64: 0x18f8b00018fae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b55, match64: 0x00000000, model64: 0x18fae00018fc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b56, match64: 0x00000000, model64: 0x18fc100018fcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b57, match64: 0x00000000, model64: 0x18fcf00018fd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b58, match64: 0x00000000, model64: 0x18fd900018fe9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b59, match64: 0x00000000, model64: 0x18fe900018ff4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5a, match64: 0x00000000, model64: 0x18ff400018ffe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5b, match64: 0x00000000, model64: 0x18ffe00019009},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5c, match64: 0x00000000, model64: 0x1900900019019},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5d, match64: 0x00000000, model64: 0x1901900019026},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5e, match64: 0x00000000, model64: 0x1902600019036},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5f, match64: 0x00000000, model64: 0x1903600019044},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b60, match64: 0x00000000, model64: 0x1904400019055},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b61, match64: 0x00000000, model64: 0x1905500019064},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b62, match64: 0x00000000, model64: 0x1906400019072},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b63, match64: 0x00000000, model64: 0x190720001907c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b64, match64: 0x00000000, model64: 0x1907c00019088},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b65, match64: 0x00000000, model64: 0x1908800019098},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b66, match64: 0x00000000, model64: 0x19098000190a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b67, match64: 0x00000000, model64: 0x190a2000190b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b68, match64: 0x00000000, model64: 0x190b1000190bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b69, match64: 0x00000000, model64: 0x190bc000190c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6a, match64: 0x00000000, model64: 0x190c7000190d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6b, match64: 0x00000000, model64: 0x190d1000190dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6c, match64: 0x00000000, model64: 0x190dc000190e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6d, match64: 0x00000000, model64: 0x190e7000190f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6e, match64: 0x00000000, model64: 0x190f100019100},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6f, match64: 0x00000000, model64: 0x191000001910a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b70, match64: 0x00000000, model64: 0x1910a00019118},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b71, match64: 0x00000000, model64: 0x1911800019122},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b72, match64: 0x00000000, model64: 0x191220001912f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b73, match64: 0x00000000, model64: 0x1912f00019139},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b74, match64: 0x00000000, model64: 0x1913900019143},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b75, match64: 0x00000000, model64: 0x191430001914f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b76, match64: 0x00000000, model64: 0x1914f0001915c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b77, match64: 0x00000000, model64: 0x1915c0001916c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b78, match64: 0x00000000, model64: 0x1916c0001917c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b79, match64: 0x00000000, model64: 0x1917c0001918c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7a, match64: 0x00000000, model64: 0x1918c00019199},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7b, match64: 0x00000000, model64: 0x19199000191a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7c, match64: 0x00000000, model64: 0x191a2000191ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7d, match64: 0x00000000, model64: 0x191ab000191b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7e, match64: 0x00000000, model64: 0x191b9000191c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7f, match64: 0x00000000, model64: 0x191c9000191d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b80, match64: 0x00000000, model64: 0x191d9000191e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b81, match64: 0x00000000, model64: 0x191e9000191f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b82, match64: 0x00000000, model64: 0x191f300019200},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b83, match64: 0x00000000, model64: 0x192000001920e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b84, match64: 0x00000000, model64: 0x1920e00019217},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b85, match64: 0x00000000, model64: 0x1921700019221},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b86, match64: 0x00000000, model64: 0x1922100019232},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b87, match64: 0x00000000, model64: 0x192320001923c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b88, match64: 0x00000000, model64: 0x1923c00019245},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b89, match64: 0x00000000, model64: 0x1924500019255},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8a, match64: 0x00000000, model64: 0x1925500019265},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8b, match64: 0x00000000, model64: 0x1926500019275},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8c, match64: 0x00000000, model64: 0x192750001927f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8d, match64: 0x00000000, model64: 0x1927f00019289},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8e, match64: 0x00000000, model64: 0x1928900019296},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8f, match64: 0x00000000, model64: 0x19296000192a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b90, match64: 0x00000000, model64: 0x192a3000192ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b91, match64: 0x00000000, model64: 0x192ac000192ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b92, match64: 0x00000000, model64: 0x192ba000192ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b93, match64: 0x00000000, model64: 0x192ca000192d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b94, match64: 0x00000000, model64: 0x192d4000192e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b95, match64: 0x00000000, model64: 0x192e4000192f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b96, match64: 0x00000000, model64: 0x192f5000192fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b97, match64: 0x00000000, model64: 0x192fe00019309},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b98, match64: 0x00000000, model64: 0x1930900019319},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b99, match64: 0x00000000, model64: 0x1931900019327},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9a, match64: 0x00000000, model64: 0x1932700019334},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9b, match64: 0x00000000, model64: 0x193340001933e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9c, match64: 0x00000000, model64: 0x1933e00019349},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9d, match64: 0x00000000, model64: 0x1934900019354},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9e, match64: 0x00000000, model64: 0x1911800019122},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b9f, match64: 0x00000000, model64: 0x193540001935e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba0, match64: 0x00000000, model64: 0x1935e0001936b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba1, match64: 0x00000000, model64: 0x1936b00019375},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba2, match64: 0x00000000, model64: 0x193750001937f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba3, match64: 0x00000000, model64: 0x1937f00019389},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba4, match64: 0x00000000, model64: 0x1938900019394},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba5, match64: 0x00000000, model64: 0x193940001939f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba6, match64: 0x00000000, model64: 0x1939f000193aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba7, match64: 0x00000000, model64: 0x193aa000193b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba8, match64: 0x00000000, model64: 0x193b4000193c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba9, match64: 0x00000000, model64: 0x193c1000193cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1baa, match64: 0x00000000, model64: 0x193cb000193d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bab, match64: 0x00000000, model64: 0x193d6000193e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bac, match64: 0x00000000, model64: 0x193e0000193ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bad, match64: 0x00000000, model64: 0x193ea000193f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bae, match64: 0x00000000, model64: 0x193f700019404},
		modelTuple{type64: 0x2700000027, matchRI: 0x1baf, match64: 0x00000000, model64: 0x194040001940e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb0, match64: 0x00000000, model64: 0x1940e00019419},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb1, match64: 0x00000000, model64: 0x1941900019423},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb2, match64: 0x00000000, model64: 0x1942300019430},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb3, match64: 0x00000000, model64: 0x194300001943a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb4, match64: 0x00000000, model64: 0x1943a00019445},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb5, match64: 0x00000000, model64: 0x1943a00019445},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb6, match64: 0x00000000, model64: 0x194450001944f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb7, match64: 0x00000000, model64: 0x1944f0001945c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb8, match64: 0x00000000, model64: 0x1945c0001946c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb9, match64: 0x00000000, model64: 0x1946c00019479},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bba, match64: 0x00000000, model64: 0x1947900019486},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbb, match64: 0x00000000, model64: 0x1948600019490},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbc, match64: 0x00000000, model64: 0x194900001949b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbd, match64: 0x00000000, model64: 0x1949b000194a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbe, match64: 0x00000000, model64: 0x194a5000194af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbf, match64: 0x00000000, model64: 0x194af000194bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc0, match64: 0x00000000, model64: 0x194bc000194c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc1, match64: 0x00000000, model64: 0x194c7000194d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc2, match64: 0x00000000, model64: 0x194d1000194db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc3, match64: 0x00000000, model64: 0x194db000194e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc4, match64: 0x00000000, model64: 0x194e5000194f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc5, match64: 0x00000000, model64: 0x194f2000194fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc6, match64: 0x00000000, model64: 0x194fc00019509},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc7, match64: 0x00000000, model64: 0x1950900019516},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc8, match64: 0x00000000, model64: 0x1951600019520},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc9, match64: 0x00000000, model64: 0x1952000019530},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bca, match64: 0x00000000, model64: 0x195300001953b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcb, match64: 0x00000000, model64: 0x1953b00019544},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcc, match64: 0x00000000, model64: 0x1954400019552},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcd, match64: 0x00000000, model64: 0x1955200019566},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bce, match64: 0x00000000, model64: 0x1956600019576},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcf, match64: 0x00000000, model64: 0x1957600019583},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd0, match64: 0x00000000, model64: 0x195830001958c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd1, match64: 0x00000000, model64: 0x1958c0001959a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd2, match64: 0x00000000, model64: 0x1959a000195a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd3, match64: 0x00000000, model64: 0x195a8000195b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd4, match64: 0x00000000, model64: 0x195b6000195c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd5, match64: 0x00000000, model64: 0x195c3000195d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd6, match64: 0x00000000, model64: 0x195d2000195df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd7, match64: 0x00000000, model64: 0x195df000195ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd8, match64: 0x00000000, model64: 0x195ec000195fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd9, match64: 0x00000000, model64: 0x195fe0001960d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bda, match64: 0x00000000, model64: 0x1960d0001961d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdb, match64: 0x00000000, model64: 0x1961d0001962b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdc, match64: 0x00000000, model64: 0x1962b00019639},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdd, match64: 0x00000000, model64: 0x196390001964a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bde, match64: 0x00000000, model64: 0x1964a0001965b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdf, match64: 0x00000000, model64: 0x195ec000195fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be0, match64: 0x00000000, model64: 0x1965b0001966b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be1, match64: 0x00000000, model64: 0x1966b0001967b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be2, match64: 0x00000000, model64: 0x1967b0001968b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be3, match64: 0x00000000, model64: 0x1968b0001969b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be4, match64: 0x00000000, model64: 0x1969b000196a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be5, match64: 0x00000000, model64: 0x196a4000196b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be6, match64: 0x00000000, model64: 0x196b4000196c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be7, match64: 0x00000000, model64: 0x196c4000196d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be8, match64: 0x00000000, model64: 0x196d8000196e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be9, match64: 0x00000000, model64: 0x196e8000196f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bea, match64: 0x00000000, model64: 0x196f700019700},
		modelTuple{type64: 0x2700000027, matchRI: 0x1beb, match64: 0x00000000, model64: 0x197000001970a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bec, match64: 0x00000000, model64: 0x1970a00019718},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bed, match64: 0x00000000, model64: 0x1971800019722},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bee, match64: 0x00000000, model64: 0x197220001972c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bef, match64: 0x00000000, model64: 0x1972c00019735},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf0, match64: 0x00000000, model64: 0x1973500019745},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf1, match64: 0x00000000, model64: 0x1974500019755},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf2, match64: 0x00000000, model64: 0x1975500019765},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf3, match64: 0x00000000, model64: 0x1976500019775},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf4, match64: 0x00000000, model64: 0x1977500019784},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf5, match64: 0x00000000, model64: 0x1978400019793},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf6, match64: 0x00000000, model64: 0x19793000197a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf7, match64: 0x00000000, model64: 0x197a4000197b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf8, match64: 0x00000000, model64: 0x197b1000197c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf9, match64: 0x00000000, model64: 0x197c2000197cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfa, match64: 0x00000000, model64: 0x197cf000197dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfb, match64: 0x00000000, model64: 0x197dd000197ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfc, match64: 0x00000000, model64: 0x197ea000197f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfd, match64: 0x00000000, model64: 0x197f900019804},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfe, match64: 0x00000000, model64: 0x198040001980f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1980f00019819, model64: 0x1981900019827},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1982700019830, model64: 0x198300001983d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bff, match64: 0x00000000, model64: 0x1983d00019846},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c00, match64: 0x00000000, model64: 0x1984600019857},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c01, match64: 0x00000000, model64: 0x1985700019866},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x198660001986d, model64: 0x1986d0001987b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1987b00019883, model64: 0x1988300019890},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c02, match64: 0x00000000, model64: 0x198900001989a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c03, match64: 0x00000000, model64: 0x1989a000198a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c04, match64: 0x00000000, model64: 0x198a4000198b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c05, match64: 0x00000000, model64: 0x198b3000198be},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c06, match64: 0x00000000, model64: 0x198be000198c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c07, match64: 0x00000000, model64: 0x198c9000198d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c08, match64: 0x00000000, model64: 0x198d3000198dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c09, match64: 0x00000000, model64: 0x198dd000198e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0a, match64: 0x00000000, model64: 0x198e8000198f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0b, match64: 0x00000000, model64: 0x198f2000198fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0c, match64: 0x00000000, model64: 0x198fc00019906},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0d, match64: 0x00000000, model64: 0x1990600019913},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0e, match64: 0x00000000, model64: 0x1991300019920},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0f, match64: 0x00000000, model64: 0x199200001992a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c10, match64: 0x00000000, model64: 0x1992a00019934},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c11, match64: 0x00000000, model64: 0x1993400019945},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c12, match64: 0x00000000, model64: 0x199450001994f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c13, match64: 0x00000000, model64: 0x1994f0001995d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c14, match64: 0x00000000, model64: 0x1995d0001996a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c15, match64: 0x00000000, model64: 0x1996a00019975},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c16, match64: 0x00000000, model64: 0x199750001997f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c17, match64: 0x00000000, model64: 0x1997f00019989},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c18, match64: 0x00000000, model64: 0x1998900019993},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c19, match64: 0x00000000, model64: 0x19993000199a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1a, match64: 0x00000000, model64: 0x199a0000199ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1b, match64: 0x00000000, model64: 0x199ad000199b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1c, match64: 0x00000000, model64: 0x199b8000199c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1d, match64: 0x00000000, model64: 0x199c2000199cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1e, match64: 0x00000000, model64: 0x199cf000199d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1f, match64: 0x00000000, model64: 0x199d9000199e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c20, match64: 0x00000000, model64: 0x199e6000199f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c21, match64: 0x00000000, model64: 0x199f600019a03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c22, match64: 0x00000000, model64: 0x19a0300019a10},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c23, match64: 0x00000000, model64: 0x19a1000019a1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c24, match64: 0x00000000, model64: 0x19a1a00019a27},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c25, match64: 0x00000000, model64: 0x19a2700019a31},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c26, match64: 0x00000000, model64: 0x19a3100019a3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c27, match64: 0x00000000, model64: 0x19a3b00019a45},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c28, match64: 0x00000000, model64: 0x19a4500019a55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c29, match64: 0x00000000, model64: 0x19a5500019a64},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2a, match64: 0x00000000, model64: 0x19a6400019a70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2b, match64: 0x00000000, model64: 0x19a7000019a7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2c, match64: 0x00000000, model64: 0x19a7a00019a8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2d, match64: 0x00000000, model64: 0x19a8b00019a95},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2e, match64: 0x00000000, model64: 0x19a9500019aa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2f, match64: 0x00000000, model64: 0x19aa600019ab6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c30, match64: 0x00000000, model64: 0x19ab600019abf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c31, match64: 0x00000000, model64: 0x19abf00019acc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c32, match64: 0x00000000, model64: 0x19acc00019ad5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c33, match64: 0x00000000, model64: 0x19ad500019ae2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c34, match64: 0x00000000, model64: 0x19ae200019aeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c35, match64: 0x00000000, model64: 0x19aeb00019af8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c36, match64: 0x00000000, model64: 0x19af800019b01},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c37, match64: 0x00000000, model64: 0x19b0100019b0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c38, match64: 0x00000000, model64: 0x19b0a00019b13},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c39, match64: 0x00000000, model64: 0x19b1300019b1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3a, match64: 0x00000000, model64: 0x19b1c00019b29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3b, match64: 0x00000000, model64: 0x19b2900019b38},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3c, match64: 0x00000000, model64: 0x19b3800019b42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3d, match64: 0x00000000, model64: 0x19b4200019b4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3e, match64: 0x00000000, model64: 0x19b4e00019b5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3f, match64: 0x00000000, model64: 0x19b5a00019b65},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c40, match64: 0x00000000, model64: 0x19b6500019b77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c41, match64: 0x00000000, model64: 0x19b7700019b90},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c42, match64: 0x00000000, model64: 0x19b9000019b9b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c43, match64: 0x00000000, model64: 0x19b9b00019baa},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c44, match64: 0x00000000, model64: 0x19baa00019bb9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c45, match64: 0x00000000, model64: 0x19bb900019bc8},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c46, match64: 0x00000000, model64: 0x19bc800019bd7},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c47, match64: 0x00000000, model64: 0x19bd700019be9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c48, match64: 0x00000000, model64: 0x19be900019bfb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c49, match64: 0x00000000, model64: 0x19bfb00019c0a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c4a, match64: 0x00000000, model64: 0x19c0a00019c19},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c4b, match64: 0x00000000, model64: 0x19c1900019c29},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c4c, match64: 0x00000000, model64: 0x19c2900019c3e},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c4d, match64: 0x00000000, model64: 0x19c3e00019c4a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c4e, match64: 0x00000000, model64: 0x19c4a00019c5b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c4f, match64: 0x00000000, model64: 0x19c5b00019c6c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c50, match64: 0x00000000, model64: 0x19c6c00019c77},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c51, match64: 0x00000000, model64: 0x19c7700019c87},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c52, match64: 0x00000000, model64: 0x19c8700019c9e},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c53, match64: 0x00000000, model64: 0x19c9e00019cac},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c54, match64: 0x00000000, model64: 0x19cac00019cbe},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c55, match64: 0x00000000, model64: 0x19cbe00019ccc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c56, match64: 0x00000000, model64: 0x19ccc00019cdc},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c57, match64: 0x00000000, model64: 0x19cdc00019cee},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c58, match64: 0x00000000, model64: 0x19cee00019d08},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c59, match64: 0x00000000, model64: 0x19d0800019d1f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c5a, match64: 0x00000000, model64: 0x19d1f00019d33},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c5b, match64: 0x00000000, model64: 0x19d3300019d42},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c5c, match64: 0x00000000, model64: 0x19d4200019d58},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c5d, match64: 0x00000000, model64: 0x19d5800019d69},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c5e, match64: 0x00000000, model64: 0x19d6900019d7b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c5f, match64: 0x00000000, model64: 0x19d7b00019d8c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c60, match64: 0x00000000, model64: 0x19d8c00019d99},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c61, match64: 0x00000000, model64: 0x19d9900019da6},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c62, match64: 0x00000000, model64: 0x19da600019db7},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c63, match64: 0x00000000, model64: 0x19db700019dc9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c64, match64: 0x00000000, model64: 0x19dc900019dd6},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c65, match64: 0x00000000, model64: 0x19dd600019de8},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c66, match64: 0x00000000, model64: 0x19de800019df5},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c67, match64: 0x00000000, model64: 0x19df500019e04},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c68, match64: 0x00000000, model64: 0x19e0400019e13},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c69, match64: 0x00000000, model64: 0x19e1300019e20},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c6a, match64: 0x00000000, model64: 0x19e2000019e2d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c6b, match64: 0x00000000, model64: 0x19e2d00019e3a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c6c, match64: 0x00000000, model64: 0x19e3a00019e49},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c6d, match64: 0x00000000, model64: 0x19e4900019e57},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c6e, match64: 0x00000000, model64: 0x19e5700019e6a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c6f, match64: 0x00000000, model64: 0x19e6a00019e7b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c70, match64: 0x00000000, model64: 0x19e7b00019e8f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c71, match64: 0x00000000, model64: 0x19e8f00019e9d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1c72, match64: 0x00000000, model64: 0x19e9d00019eb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c73, match64: 0x00000000, model64: 0x19eb400019ebb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c74, match64: 0x00000000, model64: 0x19ebb00019ecc},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1c75, match64: 0x00000000, model64: 0x19ecc00019ed1},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x19ed100019edd, model64: 0x19ed100019edd},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x19edd00019eec, model64: 0x19edd00019eec},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1c76, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19eec00019ef2, model64: 0x188e1000188ec},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1c77, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c78, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x19ef200019efa, model64: 0x1508f00015097},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c79, match64: 0x00000000, model64: 0x19efa00019f03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7a, match64: 0x00000000, model64: 0x19efa00019f03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7f, match64: 0x00000000, model64: 0x19f0300019f08},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c80, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c81, match64: 0x00000000, model64: 0x19f0800019f0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c82, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c83, match64: 0x00000000, model64: 0x19f0800019f0e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f2100019f24, model64: 0x19f2100019f24},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f2400019f27, model64: 0x19f2400019f27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f2700019f2c, model64: 0x19f2c00019f30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c87, match64: 0x00000000, model64: 0x945600009459},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x19f3f00019f49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f4f00019f56, model64: 0x83bd000083c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c89, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8b, match64: 0x00000000, model64: 0x19f5c00019f66},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8c, match64: 0x00000000, model64: 0x19f6600019f6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8d, match64: 0x00000000, model64: 0x19f6f00019f75},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8e, match64: 0x00000000, model64: 0x19f7500019f7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8f, match64: 0x00000000, model64: 0x19f7f00019f8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c90, match64: 0x00000000, model64: 0x19f8b00019f99},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c91, match64: 0x00000000, model64: 0x93f700009403},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c92, match64: 0x00000000, model64: 0x19f9900019fa2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c93, match64: 0x00000000, model64: 0x19fa200019fa8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c94, match64: 0x00000000, model64: 0x19fa800019fb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c95, match64: 0x00000000, model64: 0x19fb200019fb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c96, match64: 0x00000000, model64: 0x19fb800019fc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c97, match64: 0x00000000, model64: 0x4bbd00004bc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c98, match64: 0x00000000, model64: 0x19fc200019fc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c99, match64: 0x00000000, model64: 0x19fc700019fcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9a, match64: 0x00000000, model64: 0x19fcd00019fd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9b, match64: 0x00000000, model64: 0x19fd500019fe0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1c9c, match64: 0x00000000, model64: 0x19fe000019fe7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca1, match64: 0x00000000, model64: 0x19fec00019ffc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca2, match64: 0x00000000, model64: 0x19ffc0001a005},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca3, match64: 0x00000000, model64: 0x1a0050001a00d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a01b0001a02a, model64: 0x1a02a0001a033},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0330001a041, model64: 0x1a0410001a051},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1caa, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1cad, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1caf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb0, match64: 0x00000000, model64: 0x345b0000345d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0800001a08d, model64: 0x1a08d0001a094},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0940001a09f, model64: 0x1a09f0001a0aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0aa0001a0bf, model64: 0x1a0bf0001a0cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0cd0001a0dc, model64: 0x1a0dc0001a0e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0e40001a0f3, model64: 0x1a0f30001a0fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0fb0001a10d, model64: 0x1a10d0001a118},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1180001a130, model64: 0x1a1300001a141},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb3, match64: 0x00000000, model64: 0x1a1470001a155},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb4, match64: 0x00000000, model64: 0x1a1550001a161},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb5, match64: 0x00000000, model64: 0x1a1610001a173},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb6, match64: 0x00000000, model64: 0x1a1730001a17f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb7, match64: 0x00000000, model64: 0x1a17f0001a18b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb8, match64: 0x00000000, model64: 0x1a18b0001a197},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb9, match64: 0x00000000, model64: 0x1a1970001a1a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cba, match64: 0x00000000, model64: 0x1a1a00001a1ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbb, match64: 0x00000000, model64: 0x1a1ae0001a1bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbc, match64: 0x00000000, model64: 0x1a1bc0001a1c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbd, match64: 0x00000000, model64: 0x1a1c70001a1d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbe, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbf, match64: 0x00000000, model64: 0x1a1d30001a1d8},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1cc0, match64: 0x00000000, model64: 0x1a1d80001a1e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1f00001a1fc, model64: 0x1a1fc0001a209},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc7, match64: 0x00000000, model64: 0x82e7000082eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc8, match64: 0x00000000, model64: 0x1e4900001e4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc9, match64: 0x00000000, model64: 0x1a2150001a219},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cca, match64: 0x00000000, model64: 0x1a2150001a219},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccb, match64: 0x00000000, model64: 0x1a2190001a21f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccc, match64: 0x00000000, model64: 0x1a21f0001a229},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccd, match64: 0x00000000, model64: 0x600200006005},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cce, match64: 0x00000000, model64: 0x1a2290001a22e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccf, match64: 0x00000000, model64: 0xffec0000fff5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd0, match64: 0x00000000, model64: 0x1a22e0001a235},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd1, match64: 0x00000000, model64: 0x1a2350001a239},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd2, match64: 0x00000000, model64: 0x1a2390001a240},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd3, match64: 0x00000000, model64: 0x1a2400001a247},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd7, match64: 0x00000000, model64: 0x1a24c0001a255},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cda, match64: 0x00000000, model64: 0x1a25f0001a268},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2680001a272, model64: 0x1a2720001a279},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdb, match64: 0x00000000, model64: 0x1a2790001a287},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdc, match64: 0x00000000, model64: 0x1a2870001a290},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdd, match64: 0x00000000, model64: 0x1a2900001a298},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cde, match64: 0x00000000, model64: 0x1a2980001a2a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdf, match64: 0x00000000, model64: 0x1a2a00001a2ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce0, match64: 0x00000000, model64: 0x1a2ab0001a2b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce1, match64: 0x00000000, model64: 0x1a2b90001a2c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce2, match64: 0x00000000, model64: 0x1a2c70001a2d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce3, match64: 0x00000000, model64: 0x1a2d50001a2e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce4, match64: 0x00000000, model64: 0x1a2e30001a2ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce5, match64: 0x00000000, model64: 0x1a2ed0001a2f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce6, match64: 0x00000000, model64: 0x1a2f90001a305},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce7, match64: 0x00000000, model64: 0x1a3050001a315},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce8, match64: 0x00000000, model64: 0x1a3150001a325},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce9, match64: 0x00000000, model64: 0x1a3250001a338},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cea, match64: 0x00000000, model64: 0x1a3380001a345},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ceb, match64: 0x00000000, model64: 0x1a3450001a357},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cec, match64: 0x00000000, model64: 0x1a3570001a364},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ced, match64: 0x00000000, model64: 0x1a3640001a372},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cee, match64: 0x00000000, model64: 0x1a3720001a384},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cef, match64: 0x00000000, model64: 0x1a3840001a391},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf0, match64: 0x00000000, model64: 0x1a3910001a39f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf1, match64: 0x00000000, model64: 0x1a39f0001a3a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf2, match64: 0x00000000, model64: 0x1a3a80001a3b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf3, match64: 0x00000000, model64: 0x1a3b90001a3c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf4, match64: 0x00000000, model64: 0x1a3c30001a3cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf5, match64: 0x00000000, model64: 0x1a3cd0001a3d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf6, match64: 0x00000000, model64: 0x1a3d90001a3e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf7, match64: 0x00000000, model64: 0x1a3e50001a3f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf8, match64: 0x00000000, model64: 0x1a3f80001a406},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf9, match64: 0x00000000, model64: 0x1a4060001a416},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfa, match64: 0x00000000, model64: 0x1a4160001a422},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfb, match64: 0x00000000, model64: 0x1a4220001a434},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfc, match64: 0x00000000, model64: 0x1a4340001a442},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfd, match64: 0x00000000, model64: 0x1a4420001a453},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfe, match64: 0x00000000, model64: 0x1a4530001a45b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cff, match64: 0x00000000, model64: 0x1a45b0001a462},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d00, match64: 0x00000000, model64: 0x1a4620001a471},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d01, match64: 0x00000000, model64: 0x1a4710001a479},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d02, match64: 0x00000000, model64: 0x1a4790001a489},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d03, match64: 0x00000000, model64: 0x1a4890001a492},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d04, match64: 0x00000000, model64: 0x1a4920001a49f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d05, match64: 0x00000000, model64: 0x1a49f0001a4ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d06, match64: 0x00000000, model64: 0x1a4ab0001a4b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d07, match64: 0x00000000, model64: 0x1a4b20001a4bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d08, match64: 0x00000000, model64: 0x1a4bc0001a4cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d09, match64: 0x00000000, model64: 0x1a4cf0001a4e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0a, match64: 0x00000000, model64: 0x1a4e20001a4ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0b, match64: 0x00000000, model64: 0x1a4ec0001a4f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0c, match64: 0x00000000, model64: 0x1a4f90001a506},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0d, match64: 0x00000000, model64: 0x1a5060001a515},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0e, match64: 0x00000000, model64: 0x1a5150001a524},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0f, match64: 0x00000000, model64: 0x1a5240001a52b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d10, match64: 0x00000000, model64: 0x1a52b0001a532},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d11, match64: 0x00000000, model64: 0x1a5320001a539},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d12, match64: 0x00000000, model64: 0x1a5390001a546},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d13, match64: 0x00000000, model64: 0x1a5460001a54e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d14, match64: 0x00000000, model64: 0x1a54e0001a55a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d15, match64: 0x00000000, model64: 0x1a55a0001a562},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d16, match64: 0x00000000, model64: 0x1a5620001a56f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d17, match64: 0x00000000, model64: 0x1a56f0001a57c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d18, match64: 0x00000000, model64: 0x1a57c0001a584},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d19, match64: 0x00000000, model64: 0x1a5840001a58c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1a, match64: 0x00000000, model64: 0x1a58c0001a599},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1b, match64: 0x00000000, model64: 0x1a5990001a5a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1c, match64: 0x00000000, model64: 0x1a5a70001a5b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1d, match64: 0x00000000, model64: 0x1a5b40001a5c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1e, match64: 0x00000000, model64: 0x1a4890001a492},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1f, match64: 0x00000000, model64: 0x1a5c10001a5c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d20, match64: 0x00000000, model64: 0x1a5c90001a5d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d21, match64: 0x00000000, model64: 0x1a5d10001a5d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d22, match64: 0x00000000, model64: 0x1a5d80001a5de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d23, match64: 0x00000000, model64: 0x1a5de0001a5e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d24, match64: 0x00000000, model64: 0x1a5e10001a5e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d25, match64: 0x00000000, model64: 0xc35d0000c35f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d26, match64: 0x00000000, model64: 0xed4e0000ed50},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d27, match64: 0x00000000, model64: 0xed400000ed42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d28, match64: 0x00000000, model64: 0x152f6000152f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d29, match64: 0x00000000, model64: 0x13dde00013de1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2a, match64: 0x00000000, model64: 0x1a5e80001a5ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2b, match64: 0x00000000, model64: 0x1a5ef0001a5f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5f80001a5ff, model64: 0x1a5ff0001a60c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a60c0001a611, model64: 0x1a6110001a61c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2c, match64: 0x00000000, model64: 0x1a61c0001a62c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a62c0001a632, model64: 0x1a6320001a641},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2d, match64: 0x00000000, model64: 0x1a6410001a64f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a64f0001a657, model64: 0x1a6570001a665},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6650001a66c, model64: 0x1a66c0001a67b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a67b0001a682, model64: 0x1a6820001a68e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2e, match64: 0x00000000, model64: 0x1a68e0001a6a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2f, match64: 0x00000000, model64: 0x1a6a20001a6ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d30, match64: 0x00000000, model64: 0x1a4340001a442},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d31, match64: 0x00000000, model64: 0x1a6ae0001a6b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d32, match64: 0x00000000, model64: 0x1a6b90001a6c2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d33, match64: 0x00000000, model64: 0x1a6c20001a6d1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d34, match64: 0x00000000, model64: 0xbabe0000bac5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d35, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1d36, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1a6d10001a6e0, model64: 0x1a6e00001a6ec},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1d37, match64: 0x00000000, model64: 0x1a6ec0001a6fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d38, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1d39, match64: 0x00000000, model64: 0x1a6fa0001a704},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d3a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d3b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1a7170001a71d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1a7260001a731},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d41, match64: 0x00000000, model64: 0x1a73c0001a742},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7420001a748, model64: 0x1a7480001a74e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a74e0001a756, model64: 0x1a7560001a75c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d42, match64: 0x00000000, model64: 0x32e00000332},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d43, match64: 0x00000000, model64: 0x1a75c0001a761},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7610001a769, model64: 0x1a7690001a773},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7730001a778, model64: 0x1a7780001a77e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a77e0001a784, model64: 0x1a77e0001a784},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7840001a790, model64: 0x166bf000166c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7900001a79c, model64: 0x1a2400001a247},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x83850000838e, model64: 0x83850000838e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a79c0001a7a8, model64: 0x1a79c0001a7a8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d44, match64: 0x00000000, model64: 0x1a7a80001a7ad},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1a7ad0001a7b9, model64: 0x1a7b90001a7c6},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1a7c60001a7ce, model64: 0x1a7ce0001a7d7},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1d46, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d47, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d48, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d49, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d4a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d4c, match64: 0x00000000, model64: 0x1a7de0001a7ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d4d, match64: 0x00000000, model64: 0x1a7ee0001a7fa},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d4e, match64: 0x00000000, model64: 0x1a7fa0001a809},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d4f, match64: 0x00000000, model64: 0x3fb600003fbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d50, match64: 0x00000000, model64: 0x1a8090001a814},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1a8280001a834},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d53, match64: 0x00000000, model64: 0x1a83b0001a846},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8460001a84e, model64: 0x1a8460001a84e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a84e0001a855, model64: 0x1a84e0001a855},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8550001a85c, model64: 0x1a8550001a85c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d54, match64: 0x00000000, model64: 0x1a85c0001a86a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a86a0001a870, model64: 0x1a86a0001a870},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8700001a875, model64: 0x1a8700001a875},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8750001a879, model64: 0x1a8750001a879},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d57, match64: 0x00000000, model64: 0xdce00000dceb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d58, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d59, match64: 0x00000000, model64: 0x1a8870001a892},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5a, match64: 0x00000000, model64: 0x1a8920001a8a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5e, match64: 0x00000000, model64: 0x1a8b10001a8ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5f, match64: 0x00000000, model64: 0x1a8ba0001a8c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d61, match64: 0x00000000, model64: 0x1a8c10001a8ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d62, match64: 0x00000000, model64: 0x1a8ce0001a8db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d63, match64: 0x00000000, model64: 0x1a8db0001a8ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8ee0001a8fe, model64: 0x1a8fe0001a90f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d64, match64: 0x00000000, model64: 0x1a90f0001a91b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d65, match64: 0x00000000, model64: 0x1a91b0001a92a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d66, match64: 0x00000000, model64: 0x1a92a0001a935},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d67, match64: 0x00000000, model64: 0x1a9350001a944},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d68, match64: 0x00000000, model64: 0x140b8000140be},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1a9440001a94d, model64: 0x1a94d0001a953},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1a9530001a95e, model64: 0x1a95e0001a966},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d69, match64: 0x00000000, model64: 0x1a9660001a974},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d6a, match64: 0x00000000, model64: 0x1a9740001a981},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d6b, match64: 0x00000000, model64: 0x1a9810001a98b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d6c, match64: 0x00000000, model64: 0x1a98b0001a998},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a9980001a9a6, model64: 0x1a9a60001a9b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a9b40001a9c2, model64: 0x1a9c20001a9d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a9d10001a9dd, model64: 0x1a9dd0001a9ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a9ea0001a9f6, model64: 0x1a9f60001aa03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6d, match64: 0x00000000, model64: 0xf0560000f05e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d6e, match64: 0x00000000, model64: 0xf0560000f05e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6f, match64: 0x00000000, model64: 0x1aa030001aa0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d70, match64: 0x00000000, model64: 0x1aa0e0001aa16},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d71, match64: 0x00000000, model64: 0xd1180000d120},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aa160001aa21, model64: 0x1aa210001aa28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aa280001aa32, model64: 0x1aa320001aa3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d72, match64: 0x00000000, model64: 0x14e5400014e5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aa3c0001aa43, model64: 0x1aa430001aa46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aa460001aa4e, model64: 0x1aa4e0001aa57},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d73, match64: 0x00000000, model64: 0x1aa570001aa61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d74, match64: 0x00000000, model64: 0x1aa610001aa69},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d75, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aa720001aa81, model64: 0x1aa810001aa89},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aa980001aaa2, model64: 0x1aa980001aaa2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d79, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7c, match64: 0x00000000, model64: 0x1aaa70001aaad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7d, match64: 0x00000000, model64: 0x1aaad0001aab5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aabb0001aac9, model64: 0x1aac90001aad1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d80, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d82, match64: 0x00000000, model64: 0x1aadd0001aae3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d84, match64: 0x00000000, model64: 0x1aaec0001aaf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d85, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d88, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ab070001ab0f, model64: 0x1ab0f0001ab1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab1f0001ab25, model64: 0x1ab250001ab31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab310001ab37, model64: 0x1ab370001ab41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab410001ab47, model64: 0x1ab470001ab52},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab520001ab58, model64: 0x1ab580001ab63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab630001ab69, model64: 0x1ab690001ab75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab750001ab7b, model64: 0x1ab7b0001ab8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab8a0001ab90, model64: 0x1ab900001ab9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab9b0001aba1, model64: 0x1aba10001abab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1abab0001abb1, model64: 0x1abb10001abbb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1abbb0001abc9, model64: 0x1abc90001abd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8a, match64: 0x00000000, model64: 0x1abd70001abe2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8b, match64: 0x00000000, model64: 0x1abd70001abe2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1d8d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8f, match64: 0x00000000, model64: 0x1abeb0001abed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1abed0001abf2, model64: 0x1abf20001abf4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1abf40001abf9, model64: 0x1abf90001abfb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1abfb0001ac00, model64: 0x1ac000001ac03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d90, match64: 0x00000000, model64: 0x91f0000091f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d91, match64: 0x00000000, model64: 0x37200000375},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d92, match64: 0x00000000, model64: 0xc8890000c88e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d93, match64: 0x00000000, model64: 0x152f6000152f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d94, match64: 0x00000000, model64: 0x1ac030001ac0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d95, match64: 0x00000000, model64: 0x1ac0d0001ac12},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d96, match64: 0x00000000, model64: 0x1ac120001ac17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d97, match64: 0x00000000, model64: 0x1ac170001ac20},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d98, match64: 0x00000000, model64: 0x1ac200001ac2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac2d0001ac3d, model64: 0x1ac3d0001ac43},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9a, match64: 0x00000000, model64: 0x1ac490001ac50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac500001ac58, model64: 0x1ac500001ac58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac650001ac6f, model64: 0x1ac650001ac6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9c, match64: 0x00000000, model64: 0x1ac6f0001ac7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9d, match64: 0x00000000, model64: 0x1ac7e0001ac87},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9e, match64: 0x00000000, model64: 0x1ac870001ac92},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9f, match64: 0x00000000, model64: 0x1ac920001aca0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1acb30001acc0, model64: 0x1acc00001acd6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1acda0001ace3, model64: 0x11c2d00011c31},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1acfb0001ad00, model64: 0x1ad000001ad10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ad100001ad15, model64: 0x1ad150001ad26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ad260001ad2b, model64: 0x1ad2b0001ad39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ad390001ad43, model64: 0x1ad430001ad49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ad490001ad52, model64: 0x1ad520001ad5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da9, match64: 0x00000000, model64: 0x1ad5b0001ad66},
		modelTuple{type64: 0x2700000027, matchRI: 0x1daa, match64: 0x00000000, model64: 0x1ad660001ad70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dab, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dad, match64: 0x00000000, model64: 0x1ad750001ad7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dae, match64: 0x00000000, model64: 0x1ad7b0001ad7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1daf, match64: 0x00000000, model64: 0x1ad7e0001ad86},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db0, match64: 0x00000000, model64: 0x1ad860001ad8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db1, match64: 0x00000000, model64: 0x1ad8a0001ad8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db2, match64: 0x00000000, model64: 0x1ad8d0001ad90},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db3, match64: 0x00000000, model64: 0x1ad900001ad93},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db4, match64: 0x00000000, model64: 0x1ad930001ad96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db6, match64: 0x00000000, model64: 0x1ad960001ada5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db7, match64: 0x00000000, model64: 0x1ada50001adb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db8, match64: 0x00000000, model64: 0x1adb80001adc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db9, match64: 0x00000000, model64: 0x1adc10001adcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dba, match64: 0x00000000, model64: 0x1adcb0001add7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dbb, match64: 0x00000000, model64: 0x1add70001ade3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dbc, match64: 0x00000000, model64: 0x1ade30001aded},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dbd, match64: 0x00000000, model64: 0x1aded0001adf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dbe, match64: 0x00000000, model64: 0x1adf80001ae02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dbf, match64: 0x00000000, model64: 0x1ae020001ae0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc0, match64: 0x00000000, model64: 0x1ae0d0001ae1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc1, match64: 0x00000000, model64: 0x1ae1a0001ae24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc2, match64: 0x00000000, model64: 0x1ae240001ae2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc3, match64: 0x00000000, model64: 0x1ae2e0001ae3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc4, match64: 0x00000000, model64: 0x1ae3d0001ae47},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc5, match64: 0x00000000, model64: 0x1ae470001ae4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc6, match64: 0x00000000, model64: 0x1ae4c0001ae57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae570001ae64, model64: 0x1ae570001ae64},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dc7, match64: 0x00000000, model64: 0x1ae640001ae75},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dc8, match64: 0x00000000, model64: 0x1ae750001ae78},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dc9, match64: 0x00000000, model64: 0x1ae780001ae7f},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dca, match64: 0x00000000, model64: 0x1ae7f0001ae84},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dcb, match64: 0x00000000, model64: 0x1ae840001ae89},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dcc, match64: 0x00000000, model64: 0x1ae890001ae8e},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dcd, match64: 0x00000000, model64: 0x1ae8e0001ae91},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dce, match64: 0x00000000, model64: 0x1ae910001ae96},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dcf, match64: 0x00000000, model64: 0x1ae960001ae9a},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dd0, match64: 0x00000000, model64: 0x1ae9a0001ae9e},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dd1, match64: 0x00000000, model64: 0x1ae9e0001aea3},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dd2, match64: 0x00000000, model64: 0x1aea30001aea8},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dd3, match64: 0x00000000, model64: 0x1aea80001aeb1},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dd4, match64: 0x00000000, model64: 0x1aeb10001aeb5},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dd5, match64: 0x00000000, model64: 0x1aeb50001aeba},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dd6, match64: 0x00000000, model64: 0x1aeba0001aebf},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dd7, match64: 0x00000000, model64: 0x1aebf0001aec3},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1dd8, match64: 0x00000000, model64: 0x1aec30001aece},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dd9, match64: 0x00000000, model64: 0x1aece0001aed7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dda, match64: 0x00000000, model64: 0x1aed70001aee3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ddb, match64: 0x00000000, model64: 0x1aee30001aeed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aeed0001aef3, model64: 0x1aef30001aefc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aefc0001af02, model64: 0x1af020001af0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1af0b0001af10, model64: 0x1af100001af1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1af1e0001af24, model64: 0x1af240001af2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ddc, match64: 0x00000000, model64: 0x1af2d0001af36},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ddd, match64: 0x00000000, model64: 0x1ae1a0001ae24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dde, match64: 0x00000000, model64: 0x1af360001af43},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ddf, match64: 0x00000000, model64: 0x1af430001af51},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de0, match64: 0x00000000, model64: 0x1af510001af5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de1, match64: 0x00000000, model64: 0x1af5d0001af6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de2, match64: 0x00000000, model64: 0x1af6a0001af7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de3, match64: 0x00000000, model64: 0x1af7c0001af88},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de4, match64: 0x00000000, model64: 0x1af880001af96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de5, match64: 0x00000000, model64: 0x1af960001afa4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de6, match64: 0x00000000, model64: 0x1afa40001afac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de7, match64: 0x00000000, model64: 0x1afac0001afc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de8, match64: 0x00000000, model64: 0x1afc90001afd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1de9, match64: 0x00000000, model64: 0x1afd40001afe0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dea, match64: 0x00000000, model64: 0x1afe00001afeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1deb, match64: 0x00000000, model64: 0x1afeb0001aff3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dec, match64: 0x00000000, model64: 0x1aff30001affb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ded, match64: 0x00000000, model64: 0x1affb0001b008},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dee, match64: 0x00000000, model64: 0x1b0080001b010},
		modelTuple{type64: 0x2700000027, matchRI: 0x1def, match64: 0x00000000, model64: 0x1b0100001b01b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df0, match64: 0x00000000, model64: 0x1b01b0001b027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df1, match64: 0x00000000, model64: 0x1b0270001b032},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df2, match64: 0x00000000, model64: 0x1b0320001b03a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df3, match64: 0x00000000, model64: 0x1b03a0001b047},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df4, match64: 0x00000000, model64: 0x1b0470001b050},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df5, match64: 0x00000000, model64: 0x1b0500001b058},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df6, match64: 0x00000000, model64: 0x1b0580001b063},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df7, match64: 0x00000000, model64: 0x1b0630001b071},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df8, match64: 0x00000000, model64: 0x1b0710001b07e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1df9, match64: 0x00000000, model64: 0x1b07e0001b088},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfa, match64: 0x00000000, model64: 0x1b0880001b091},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfb, match64: 0x00000000, model64: 0x1b0910001b09d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfc, match64: 0x00000000, model64: 0x1b09d0001b0a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfd, match64: 0x00000000, model64: 0x1b0a50001b0b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dfe, match64: 0x00000000, model64: 0x1b0b50001b0c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dff, match64: 0x00000000, model64: 0x1b0c00001b0cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e00, match64: 0x00000000, model64: 0x1b0cb0001b0d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e01, match64: 0x00000000, model64: 0x1b0d30001b0dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e02, match64: 0x00000000, model64: 0x1b0dc0001b0e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e03, match64: 0x00000000, model64: 0x1b0e50001b0ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e04, match64: 0x00000000, model64: 0x1b0ed0001b0f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e05, match64: 0x00000000, model64: 0x1b0f60001b0fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e06, match64: 0x00000000, model64: 0x1b0fe0001b10b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e07, match64: 0x00000000, model64: 0x1b10b0001b114},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e08, match64: 0x00000000, model64: 0x1b1140001b11e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e09, match64: 0x00000000, model64: 0x1b11e0001b126},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0a, match64: 0x00000000, model64: 0x1b1260001b133},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0b, match64: 0x00000000, model64: 0x1b1330001b13b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0c, match64: 0x00000000, model64: 0x1b13b0001b143},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0d, match64: 0x00000000, model64: 0x1b1430001b14c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0e, match64: 0x00000000, model64: 0x1b14c0001b155},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e0f, match64: 0x00000000, model64: 0x1b1550001b15e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e10, match64: 0x00000000, model64: 0x1b15e0001b168},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e11, match64: 0x00000000, model64: 0x1b1680001b170},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1e12, match64: 0x00000000, model64: 0x1b1700001b17e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e13, match64: 0x00000000, model64: 0x1b1680001b170},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e14, match64: 0x00000000, model64: 0x1b17e0001b187},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e15, match64: 0x00000000, model64: 0x1b1870001b195},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e16, match64: 0x00000000, model64: 0x1b1950001b19e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e17, match64: 0x00000000, model64: 0x1b19e0001b1ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e18, match64: 0x00000000, model64: 0x1b1ac0001b1bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e19, match64: 0x00000000, model64: 0x1b1bb0001b1c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1a, match64: 0x00000000, model64: 0x1b1c40001b1d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1d20001b1d7, model64: 0x1b1d70001b1e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1b, match64: 0x00000000, model64: 0x1b1e00001b1ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1c, match64: 0x00000000, model64: 0x1b1ee0001b1f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1d, match64: 0x00000000, model64: 0x1b1f70001b205},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1e, match64: 0x00000000, model64: 0x1b2050001b20e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e1f, match64: 0x00000000, model64: 0x1b20e0001b21c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e20, match64: 0x00000000, model64: 0x1b21c0001b22a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e21, match64: 0x00000000, model64: 0x1b22a0001b23d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e22, match64: 0x00000000, model64: 0x1b23d0001b246},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e23, match64: 0x00000000, model64: 0x1b2460001b254},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e24, match64: 0x00000000, model64: 0x1b2540001b262},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e25, match64: 0x00000000, model64: 0x1b2620001b26b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e26, match64: 0x00000000, model64: 0x1b26b0001b274},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e27, match64: 0x00000000, model64: 0x1b2740001b282},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e28, match64: 0x00000000, model64: 0x1b2820001b291},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e29, match64: 0x00000000, model64: 0x1b2910001b2a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2a, match64: 0x00000000, model64: 0x1b2a50001b2ae},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1e2b, match64: 0x00000000, model64: 0x1b2ae0001b2bd},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x1e2c, match64: 0x00000000, model64: 0x1b2bd0001b2d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2d, match64: 0x00000000, model64: 0x1b2d10001b2e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2e, match64: 0x00000000, model64: 0x1b2e20001b2eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e2f, match64: 0x00000000, model64: 0x1b2eb0001b2fc},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1b2fc0001b311, model64: 0x1b3110001b326},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e30, match64: 0x00000000, model64: 0x1b3260001b336},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e31, match64: 0x00000000, model64: 0x1b3360001b33f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b33f0001b344, model64: 0x1b3440001b34e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e32, match64: 0x00000000, model64: 0x1b34e0001b357},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e33, match64: 0x00000000, model64: 0x1b3570001b365},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e34, match64: 0x00000000, model64: 0x1b3650001b36f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e35, match64: 0x00000000, model64: 0x1b36f0001b379},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e36, match64: 0x00000000, model64: 0x1b3790001b382},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b3820001b387, model64: 0x1b3870001b391},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e37, match64: 0x00000000, model64: 0x1b3790001b382},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e38, match64: 0x00000000, model64: 0x1b3910001b3a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e39, match64: 0x00000000, model64: 0x1b3a20001b3ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3a, match64: 0x00000000, model64: 0x1b3ab0001b3b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3b, match64: 0x00000000, model64: 0x1b3b90001b3ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3c, match64: 0x00000000, model64: 0x1b3ca0001b3e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3d, match64: 0x00000000, model64: 0x1b3e00001b3e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3e, match64: 0x00000000, model64: 0x1b3e90001b3f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e3f, match64: 0x00000000, model64: 0x1b3f70001b406},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e40, match64: 0x00000000, model64: 0x1b4060001b41a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e41, match64: 0x00000000, model64: 0x1b41a0001b423},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e42, match64: 0x00000000, model64: 0x1b4230001b42d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e43, match64: 0x00000000, model64: 0x1b42d0001b43f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e44, match64: 0x00000000, model64: 0x1b43f0001b448},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e45, match64: 0x00000000, model64: 0x1b4480001b452},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e46, match64: 0x00000000, model64: 0x1b4520001b461},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e47, match64: 0x00000000, model64: 0x1b4610001b475},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e48, match64: 0x00000000, model64: 0x1b4750001b485},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e49, match64: 0x00000000, model64: 0x1b4850001b48f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4a, match64: 0x00000000, model64: 0x1b48f0001b49e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4b, match64: 0x00000000, model64: 0x1b49e0001b4ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b4ad0001b4b2, model64: 0x1b4ad0001b4b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4c, match64: 0x00000000, model64: 0x1b4b20001b4c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4d, match64: 0x00000000, model64: 0x1b4c20001b4cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4e, match64: 0x00000000, model64: 0x1b4cc0001b4dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e4f, match64: 0x00000000, model64: 0x1b4dd0001b4e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b4e70001b4ec, model64: 0x1b4ec0001b4fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b4fb0001b501, model64: 0x1b5010001b513},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e50, match64: 0x00000000, model64: 0x1b5130001b52a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e51, match64: 0x00000000, model64: 0x1b52a0001b534},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e52, match64: 0x00000000, model64: 0x1b5340001b53d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e53, match64: 0x00000000, model64: 0x1b53d0001b54b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e54, match64: 0x00000000, model64: 0x1b54b0001b553},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e55, match64: 0x00000000, model64: 0x1b5530001b55c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e56, match64: 0x00000000, model64: 0x1b55c0001b565},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e57, match64: 0x00000000, model64: 0x1b5650001b56d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e58, match64: 0x00000000, model64: 0x1b56d0001b57a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e59, match64: 0x00000000, model64: 0x1b57a0001b58a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5a, match64: 0x00000000, model64: 0x1b58a0001b59e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5b, match64: 0x00000000, model64: 0x1b59e0001b5b7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e5c, match64: 0x00000000, model64: 0x1b5b70001b5c6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e5d, match64: 0x00000000, model64: 0x1b5c60001b5d6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e5e, match64: 0x00000000, model64: 0x1b5d60001b5e6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e5f, match64: 0x00000000, model64: 0x1b5e60001b5fe},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e60, match64: 0x00000000, model64: 0x1b5fe0001b60d},
		modelTuple{type64: 0x245800002460, matchRI: -0x0001, match64: 0x1b60d0001b619, model64: 0x1b60d0001b619},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1e61, match64: 0x00000000, model64: 0x1b6190001b622},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1e62, match64: 0x00000000, model64: 0x1b6220001b632},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1e63, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1e64, match64: 0x00000000, model64: 0x1b6320001b63c},
		modelTuple{type64: 0xa01b0000a030, matchRI: 0x1e65, match64: 0x00000000, model64: 0x1b63c0001b646},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1e66, match64: 0x00000000, model64: 0x1b6460001b654},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1b6540001b65b, model64: 0x1b65b0001b670},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1e67, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1e68, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e69, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6b, match64: 0x00000000, model64: 0xd0880000d08b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6c, match64: 0x00000000, model64: 0x1b6700001b67a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x1e6e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x1e70, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e71, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e72, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e73, match64: 0x00000000, model64: 0x1b67a0001b683},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e74, match64: 0x00000000, model64: 0x1b67a0001b683},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e75, match64: 0x00000000, model64: 0x1b67a0001b683},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e76, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e77, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e78, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b6900001b695, model64: 0x1b6900001b695},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b6950001b69d, model64: 0x1b69d0001b6a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7560001a75c, model64: 0x1a7560001a75c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b6aa0001b6b5, model64: 0x1b6aa0001b6b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b6b50001b6be, model64: 0x1b6b50001b6be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13d6800013d6d, model64: 0x13d6800013d6d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e80, match64: 0x00000000, model64: 0x1b6d10001b6dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e81, match64: 0x00000000, model64: 0x1b6dd0001b6e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e82, match64: 0x00000000, model64: 0x1b6e90001b6f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e83, match64: 0x00000000, model64: 0x1b6f40001b701},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e85, match64: 0x00000000, model64: 0x1b7010001b709},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e86, match64: 0x00000000, model64: 0x1b7090001b713},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b7130001b71f, model64: 0x1b71f0001b72b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b72b0001b738, model64: 0x1b7380001b746},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b7460001b757, model64: 0x1b7570001b769},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b7690001b77a, model64: 0x1b77a0001b78d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e87, match64: 0x00000000, model64: 0x1b78d0001b793},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e88, match64: 0x00000000, model64: 0x1b7930001b798},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e89, match64: 0x00000000, model64: 0x1b78d0001b793},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8a, match64: 0x00000000, model64: 0x1b7930001b798},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1b7980001b79d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b7a10001b7a6, model64: 0x61a5000061ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8f, match64: 0x00000000, model64: 0x6f9200006f95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b7af0001b7b8, model64: 0x1b7b80001b7c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b7c10001b7c9, model64: 0x1b7c90001b7d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b7d10001b7db, model64: 0x1b7db0001b7e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b7e50001b7eb, model64: 0x1b7eb0001b7f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b7f10001b7fb, model64: 0x1b7fb0001b805},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8050001b810, model64: 0x1b8100001b81b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e91, match64: 0x00000000, model64: 0x1b81b0001b825},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8250001b82f, model64: 0x1b82f0001b839},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b8390001b849, model64: 0x1b8490001b84f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b84f0001b85d, model64: 0x1b85d0001b863},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e93, match64: 0x00000000, model64: 0x1b86d0001b874},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e94, match64: 0x00000000, model64: 0x1b8740001b879},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e95, match64: 0x00000000, model64: 0x1b8790001b883},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e96, match64: 0x00000000, model64: 0x1b8830001b88a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e97, match64: 0x00000000, model64: 0x1b88a0001b88f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1e98, match64: 0x00000000, model64: 0x1b88f0001b89c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1b8a30001b8b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9b, match64: 0x00000000, model64: 0x1b8b80001b8c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea0, match64: 0x00000000, model64: 0x1b8cc0001b8d6},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1b8d60001b8e4, model64: 0x1b8e40001b8eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea5, match64: 0x00000000, model64: 0x1b8fb0001b901},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9060001b90d, model64: 0x1b90d0001b914},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9140001b91b, model64: 0x1b91b0001b922},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea9, match64: 0x00000000, model64: 0x1b9220001b92a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eaa, match64: 0x00000000, model64: 0x1b92a0001b93a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eab, match64: 0x00000000, model64: 0x1b93a0001b949},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9490001b951, model64: 0x1b9510001b959},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9590001b962, model64: 0x1b9620001b96b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b96b0001b974, model64: 0x1b9740001b97d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b97d0001b985, model64: 0x1b9850001b98d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b98d0001b992, model64: 0x1b9920001b999},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9990001b9a1, model64: 0x1b9990001b9a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9a10001b9aa, model64: 0x1b9aa0001b9b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9b30001b9bb, model64: 0x1b9bb0001b9c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9c30001b9cb, model64: 0x1b9cb0001b9d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9d30001b9da, model64: 0x1b9d30001b9da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9da0001b9e0, model64: 0x1b9e00001b9e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9e60001b9ef, model64: 0x1b9ef0001b9f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b9f80001ba00, model64: 0x1ba000001ba08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba080001ba0e, model64: 0x1ba0e0001ba14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba140001ba1a, model64: 0x1ba1a0001ba20},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eac, match64: 0x00000000, model64: 0x1ba200001ba29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ead, match64: 0x00000000, model64: 0x1ba290001ba31},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eae, match64: 0x00000000, model64: 0x1ba310001ba38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba380001ba41, model64: 0x1ba410001ba4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe3f0000fe43, model64: 0xfe3f0000fe43},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba4a0001ba4f, model64: 0x745900007460},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba4f0001ba59, model64: 0x1ba590001ba63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba630001ba69, model64: 0x1ba690001ba6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba6f0001ba79, model64: 0x1ba790001ba83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba830001ba8c, model64: 0x1ba8c0001ba95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3f5c00003f61, model64: 0x1ba950001ba9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eaf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1eb1, match64: 0x00000000, model64: 0x1ba9a0001baa6},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1baa60001baab, model64: 0x1baab0001bab6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb4, match64: 0x00000000, model64: 0xf69c0000f6a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb6, match64: 0x00000000, model64: 0x1bac00001bac7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb7, match64: 0x00000000, model64: 0x140b1000140b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb8, match64: 0x00000000, model64: 0x1bac70001bace},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb9, match64: 0x00000000, model64: 0x58ae000058b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eba, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebe, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x51800000525, matchRI: 0x1ec1, match64: 0x00000000, model64: 0x1bae80001baf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ec6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb040001bb0c, model64: 0x1bb0c0001bb15},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec9, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1bb1d0001bb23},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ecd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb350001bb3c, model64: 0x1bb350001bb3c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ecf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ed0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1bb4d0001bb54},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed4, match64: 0x00000000, model64: 0x1bb5a0001bb64},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb640001bb6b, model64: 0x1bb6b0001bb73},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb7d0001bb8a, model64: 0x1bb7d0001bb8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb8a0001bb97, model64: 0x1bb8a0001bb97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bb970001bba5, model64: 0x1bb970001bba5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed7, match64: 0x00000000, model64: 0xf0560000f05e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ed8, match64: 0x00000000, model64: 0x1bba50001bbac},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ed9, match64: 0x00000000, model64: 0x1bbac0001bbb4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1bbc30001bbcc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bbd00001bbd6, model64: 0x1bbd00001bbd6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bbde0001bbe3, model64: 0x1bbde0001bbe3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bbe30001bbe7, model64: 0x1bbe30001bbe7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bbe70001bbec, model64: 0x1bbec0001bbf1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bbf10001bc01, model64: 0x1bc010001bc08},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ede, match64: 0x00000000, model64: 0x1bc080001bc0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1edf, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee0, match64: 0x00000000, model64: 0x1bc0f0001bc17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1ee3, match64: 0x00000000, model64: 0x1bc170001bc20},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bc200001bc2a, model64: 0x1bc2a0001bc34},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bc410001bc48, model64: 0x1bc480001bc4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee6, match64: 0x00000000, model64: 0x1bc4f0001bc5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee7, match64: 0x00000000, model64: 0x1bc5b0001bc62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee8, match64: 0x00000000, model64: 0x1bc620001bc6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bc6a0001bc76, model64: 0x1bc760001bc82},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee9, match64: 0x00000000, model64: 0x1bc820001bc8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bc8d0001bc94, model64: 0x60db000060e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eea, match64: 0x00000000, model64: 0x1bc940001bc9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eeb, match64: 0x00000000, model64: 0x1bc9b0001bca5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eec, match64: 0x00000000, model64: 0x1bca50001bcb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eed, match64: 0x00000000, model64: 0x1bcb30001bcbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eee, match64: 0x00000000, model64: 0x1bcbf0001bcca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eef, match64: 0x00000000, model64: 0x1bcca0001bcd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x151660001516a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef4, match64: 0x00000000, model64: 0x3fb600003fbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef6, match64: 0x00000000, model64: 0x1bce40001bcec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef8, match64: 0x00000000, model64: 0x1bcef0001bcf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef9, match64: 0x00000000, model64: 0x1bcf70001bcfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efa, match64: 0x00000000, model64: 0x1bcfc0001bd01},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efb, match64: 0x00000000, model64: 0xfe350000fe38},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efc, match64: 0x00000000, model64: 0x1bd010001bd0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efd, match64: 0x00000000, model64: 0x1bd0a0001bd0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efe, match64: 0x00000000, model64: 0x1bd0d0001bd10},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eff, match64: 0x00000000, model64: 0x1bd100001bd13},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f00, match64: 0x00000000, model64: 0x1bd130001bd16},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f01, match64: 0x00000000, model64: 0x1bd160001bd1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f02, match64: 0x00000000, model64: 0x1bd1a0001bd1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f03, match64: 0x00000000, model64: 0x1bd1d0001bd20},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f04, match64: 0x00000000, model64: 0x1bd200001bd23},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f05, match64: 0x00000000, model64: 0x1bd230001bd28},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f06, match64: 0x00000000, model64: 0x1bd280001bd2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f07, match64: 0x00000000, model64: 0x1bd2b0001bd43},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f08, match64: 0x00000000, model64: 0x1bd430001bd4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f09, match64: 0x00000000, model64: 0x1bd4b0001bd4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0a, match64: 0x00000000, model64: 0x1bd4e0001bd51},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0b, match64: 0x00000000, model64: 0x1bd510001bd54},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0c, match64: 0x00000000, model64: 0x1bd540001bd57},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0d, match64: 0x00000000, model64: 0x1bd570001bd59},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0e, match64: 0x00000000, model64: 0x15180000151a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0f, match64: 0x00000000, model64: 0x1bd590001bd5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f10, match64: 0x00000000, model64: 0x155e00001561},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f11, match64: 0x00000000, model64: 0x5dab00005dad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f12, match64: 0x00000000, model64: 0x1bd5c0001bd5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f13, match64: 0x00000000, model64: 0x5c5a00005c5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f14, match64: 0x00000000, model64: 0x1bd5e0001bd60},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f15, match64: 0x00000000, model64: 0x1720900017210},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f16, match64: 0x00000000, model64: 0x1bd600001bd63},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f17, match64: 0x00000000, model64: 0x1bd630001bd66},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f18, match64: 0x00000000, model64: 0x1bd660001bd6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f19, match64: 0x00000000, model64: 0x1bd6a0001bd72},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1a, match64: 0x00000000, model64: 0x10e2b00010e2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1b, match64: 0x00000000, model64: 0x1bd720001bd77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1c, match64: 0x00000000, model64: 0x1bd770001bd7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1d, match64: 0x00000000, model64: 0x959c000095a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1e, match64: 0x00000000, model64: 0x1bd7b0001bd80},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1f, match64: 0x00000000, model64: 0x1bd800001bd88},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f20, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f21, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f22, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f23, match64: 0x00000000, model64: 0x1bd880001bd8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f24, match64: 0x00000000, model64: 0xc35d0000c35f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f25, match64: 0x00000000, model64: 0x1bd8a0001bd8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f26, match64: 0x00000000, model64: 0x1bd8d0001bd92},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f27, match64: 0x00000000, model64: 0x1bd920001bd95},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f28, match64: 0x00000000, model64: 0x1bd950001bd9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f29, match64: 0x00000000, model64: 0x1bd9a0001bd9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2a, match64: 0x00000000, model64: 0x1bd9f0001bda3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2b, match64: 0x00000000, model64: 0x1bda30001bda8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bda80001bdad, model64: 0x1bdad0001bdb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2c, match64: 0x00000000, model64: 0x1bdb20001bdb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bdb50001bdba, model64: 0x1bdba0001bdbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2d, match64: 0x00000000, model64: 0x1bdbc0001bdc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2e, match64: 0x00000000, model64: 0x1bdc00001bdc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bdc70001bdcd, model64: 0x1bdcd0001bdd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2f, match64: 0x00000000, model64: 0x1bdd10001bdd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f30, match64: 0x00000000, model64: 0x1bdd60001bdde},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f31, match64: 0x00000000, model64: 0x1bdde0001bde3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f32, match64: 0x00000000, model64: 0x1bde30001bde9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f33, match64: 0x00000000, model64: 0x1bde90001bdec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f34, match64: 0x00000000, model64: 0x1bdec0001bdf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f35, match64: 0x00000000, model64: 0x1bdf10001bdf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f36, match64: 0x00000000, model64: 0x1bdf60001bdff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f37, match64: 0x00000000, model64: 0x9c3c00009c42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f38, match64: 0x00000000, model64: 0x1bdff0001be05},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1be050001be0b, model64: 0x1be0b0001be16},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f39, match64: 0x00000000, model64: 0x1be160001be1e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f3a, match64: 0x00000000, model64: 0x1be1e0001be27},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1be270001be2c, model64: 0x1be2c0001be32},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1be320001be37, model64: 0x1be370001be43},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1be430001be48, model64: 0x1be480001be56},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1be560001be5b, model64: 0x1be5b0001be64},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f3b, match64: 0x00000000, model64: 0x1be640001be6b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f3c, match64: 0x00000000, model64: 0x1be6b0001be76},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f3d, match64: 0x00000000, model64: 0x1be760001be82},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f3e, match64: 0x00000000, model64: 0x1be820001be8f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1be8f0001be94, model64: 0x1be940001bea0},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bea00001bea5, model64: 0x1bea50001bead},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bead0001beb2, model64: 0x1beb20001bebc},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bebc0001bec1, model64: 0x1bec10001bec8},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1bec80001becd, model64: 0x1becd0001bed7},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1f3f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1f40, match64: 0x00000000, model64: 0x1bed70001bee3},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x1f41, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bef40001befc, model64: 0x1befc0001bf02},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bf020001bf0a, model64: 0xa4c80000a4cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bf0a0001bf12, model64: 0x1bf120001bf15},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f44, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f47, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f48, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1bf340001bf3b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1bf3e0001bf4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f50, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f51, match64: 0x00000000, model64: 0x1bf670001bf6b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x182a0000182b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1bf8a0001bf90},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1bf930001bfa1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f56, match64: 0x00000000, model64: 0x1bfa40001bfaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f57, match64: 0x00000000, model64: 0x1bfaf0001bfb9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f58, match64: 0x00000000, model64: 0x1bfaf0001bfb9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1f5a, match64: 0x00000000, model64: 0x1bfbc0001bfc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bfc60001bfcb, model64: 0x1bfcb0001bfd0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1bfdc0001bfe8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f61, match64: 0x00000000, model64: 0x1bffe0001c003},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f62, match64: 0x00000000, model64: 0x1c0030001c00b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c00b0001c012, model64: 0x1c00b0001c012},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f63, match64: 0x00000000, model64: 0x1c0120001c01a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f65, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1c02a0001c032},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c0390001c03e, model64: 0x1c0390001c03e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c03e0001c049, model64: 0x1c0490001c04d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c04d0001c059, model64: 0x1c0590001c05d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c05d0001c067, model64: 0x1c0670001c06a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f68, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f69, match64: 0x00000000, model64: 0x1c06a0001c06d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c06d0001c072, model64: 0x1c0720001c077},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6b, match64: 0x00000000, model64: 0x1c0770001c07e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6c, match64: 0x00000000, model64: 0x1c0770001c07e},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1f6d, match64: 0x00000000, model64: 0x1c07e0001c083},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1c0830001c089, model64: 0x1c0890001c090},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1f6e, match64: 0x00000000, model64: 0x1c0900001c09a},
		modelTuple{type64: 0x2e8000002f5, matchRI: -0x0001, match64: 0x1c09a0001c0af, model64: 0x1c0af0001c0bb},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x1f6f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f71, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1c0cd0001c0da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f74, match64: 0x00000000, model64: 0x1c0e20001c0ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f75, match64: 0x00000000, model64: 0x1c0ed0001c0fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f77, match64: 0x00000000, model64: 0x1c10b0001c113},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f78, match64: 0x00000000, model64: 0x1c1130001c116},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f79, match64: 0x00000000, model64: 0x1c1160001c119},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7a, match64: 0x00000000, model64: 0x1733d00017340},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7b, match64: 0x00000000, model64: 0x1c1190001c11d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7c, match64: 0x00000000, model64: 0x1c11d0001c122},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7d, match64: 0x00000000, model64: 0x1c1220001c127},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7e, match64: 0x00000000, model64: 0x1c1270001c131},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1310001c13b, model64: 0x1c13b0001c14a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7f, match64: 0x00000000, model64: 0x1c14a0001c14d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f80, match64: 0x00000000, model64: 0x1c14d0001c151},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f81, match64: 0x00000000, model64: 0x1c1510001c154},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f82, match64: 0x00000000, model64: 0xf00e0000f015},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1540001c15a, model64: 0x1c15a0001c160},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1600001c167, model64: 0x1c1600001c167},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1670001c16d, model64: 0x1c16d0001c173},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1730001c179, model64: 0x1c1790001c17c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c17c0001c182, model64: 0x1c1820001c189},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f83, match64: 0x00000000, model64: 0x1bf120001bf15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1890001c18e, model64: 0x1c18e0001c194},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f84, match64: 0x00000000, model64: 0x1c1940001c19c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f85, match64: 0x00000000, model64: 0x1c19c0001c1a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1940001c19c, model64: 0x1c1940001c19c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f86, match64: 0x00000000, model64: 0x1c1a00001c1a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1a70001c1ad, model64: 0x1c1ad0001c1b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f87, match64: 0x00000000, model64: 0x1c1b00001c1b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1b80001c1c0, model64: 0x1c1c00001c1c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f88, match64: 0x00000000, model64: 0x1c1c70001c1cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f89, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1cb0001c1cf, model64: 0x1c1cb0001c1cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1cf0001c1d5, model64: 0x1c1d50001c1dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8a, match64: 0x00000000, model64: 0x1c1dc0001c1ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8b, match64: 0x00000000, model64: 0x1c1ec0001c1f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8c, match64: 0x00000000, model64: 0x1c1f50001c200},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8d, match64: 0x00000000, model64: 0x1c2000001c20a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c2160001c223, model64: 0x1c2230001c231},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c2310001c23a, model64: 0x1c23a0001c244},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f90, match64: 0x00000000, model64: 0x1c2440001c24e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f91, match64: 0x00000000, model64: 0x1c24e0001c258},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f92, match64: 0x00000000, model64: 0x1c2580001c266},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f93, match64: 0x00000000, model64: 0x1c2660001c26f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f94, match64: 0x00000000, model64: 0x1c26f0001c27d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f95, match64: 0x00000000, model64: 0x1c27d0001c286},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f96, match64: 0x00000000, model64: 0x1c2860001c28f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c28f0001c29b, model64: 0x1c29b0001c2a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c2a20001c2aa, model64: 0x1c2aa0001c2ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f97, match64: 0x00000000, model64: 0x1c2ac0001c2b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f98, match64: 0x00000000, model64: 0x1c2b20001c2b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f99, match64: 0x00000000, model64: 0x1c2b90001c2c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9a, match64: 0x00000000, model64: 0x1c2c40001c2d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9b, match64: 0x00000000, model64: 0x1c2d10001c2dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9c, match64: 0x00000000, model64: 0x1c2dd0001c2e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9d, match64: 0x00000000, model64: 0x1c2e60001c2ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9e, match64: 0x00000000, model64: 0x1c2ee0001c2fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9f, match64: 0x00000000, model64: 0x1c2fc0001c306},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa0, match64: 0x00000000, model64: 0x1c3060001c312},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa1, match64: 0x00000000, model64: 0x1c3120001c31e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1fa2, match64: 0x00000000, model64: 0x1c31e0001c329},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1fa3, match64: 0x00000000, model64: 0x1c3290001c334},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1fa4, match64: 0x00000000, model64: 0x1c3340001c343},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1fa5, match64: 0x00000000, model64: 0x1c3430001c34e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1fa6, match64: 0x00000000, model64: 0x1c34e0001c359},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1fa7, match64: 0x00000000, model64: 0x1c3590001c369},
		modelTuple{type64: 0x20d00000213, matchRI: 0x1fa8, match64: 0x00000000, model64: 0x1c3690001c378},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa9, match64: 0x00000000, model64: 0x1c3780001c37b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1faa, match64: 0x00000000, model64: 0x1c37b0001c383},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fab, match64: 0x00000000, model64: 0x1c3830001c38b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fac, match64: 0x00000000, model64: 0x1c38b0001c393},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fad, match64: 0x00000000, model64: 0x1c3930001c39f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fae, match64: 0x00000000, model64: 0x1c39f0001c3a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1faf, match64: 0x00000000, model64: 0x1c3a70001c3b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb0, match64: 0x00000000, model64: 0x1c3b30001c3bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb1, match64: 0x00000000, model64: 0x1c3bf0001c3c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb2, match64: 0x00000000, model64: 0x1c3c70001c3d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb3, match64: 0x00000000, model64: 0x1c3d30001c3e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb4, match64: 0x00000000, model64: 0x1c3e30001c3ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb5, match64: 0x00000000, model64: 0x1c3ef0001c3f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb6, match64: 0x00000000, model64: 0x1c3f70001c407},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb7, match64: 0x00000000, model64: 0x1c4070001c413},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb8, match64: 0x00000000, model64: 0x1c4130001c41d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb9, match64: 0x00000000, model64: 0x1c41d0001c428},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fba, match64: 0x00000000, model64: 0x1c4280001c430},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbb, match64: 0x00000000, model64: 0x1c4300001c43c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbc, match64: 0x00000000, model64: 0x1c43c0001c445},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbd, match64: 0x00000000, model64: 0x1c4450001c455},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbe, match64: 0x00000000, model64: 0x1c4550001c45d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbf, match64: 0x00000000, model64: 0x1c45d0001c466},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc0, match64: 0x00000000, model64: 0x1c4660001c46e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc1, match64: 0x00000000, model64: 0x1c46e0001c47a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc2, match64: 0x00000000, model64: 0x1c47a0001c489},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc3, match64: 0x00000000, model64: 0x1c4890001c495},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc4, match64: 0x00000000, model64: 0x1c4950001c49d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc5, match64: 0x00000000, model64: 0x1c49d0001c4ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc6, match64: 0x00000000, model64: 0x1c4ac0001c4bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc7, match64: 0x00000000, model64: 0x1c4bf0001c4c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc8, match64: 0x00000000, model64: 0x1c4c70001c4ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc9, match64: 0x00000000, model64: 0x1c4ce0001c4d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fca, match64: 0x00000000, model64: 0x1c4d90001c4e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcb, match64: 0x00000000, model64: 0x1c4e10001c4ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcc, match64: 0x00000000, model64: 0x1c4ed0001c4f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcd, match64: 0x00000000, model64: 0x1c4f20001c4f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fce, match64: 0x00000000, model64: 0x1c4f70001c501},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcf, match64: 0x00000000, model64: 0x1c5010001c507},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd0, match64: 0x00000000, model64: 0x1c5070001c50d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd1, match64: 0x00000000, model64: 0x1c50d0001c517},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd2, match64: 0x00000000, model64: 0x1c5170001c521},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd3, match64: 0x00000000, model64: 0x1c5210001c52c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd4, match64: 0x00000000, model64: 0x1c52c0001c537},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd5, match64: 0x00000000, model64: 0x1c5370001c541},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd6, match64: 0x00000000, model64: 0x1c5410001c547},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd7, match64: 0x00000000, model64: 0x1c5010001c507},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd8, match64: 0x00000000, model64: 0x1c5470001c550},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd9, match64: 0x00000000, model64: 0x1c5500001c555},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fda, match64: 0x00000000, model64: 0x1c5550001c55f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdb, match64: 0x00000000, model64: 0x1c55f0001c564},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdc, match64: 0x00000000, model64: 0x1c5640001c56d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdd, match64: 0x00000000, model64: 0x1c56d0001c576},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fde, match64: 0x00000000, model64: 0x1c5760001c57f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdf, match64: 0x00000000, model64: 0x1c57f0001c584},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe0, match64: 0x00000000, model64: 0x1c5840001c58a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe1, match64: 0x00000000, model64: 0x1c58a0001c592},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe2, match64: 0x00000000, model64: 0x1c5920001c598},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe3, match64: 0x00000000, model64: 0x1c5980001c5a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe4, match64: 0x00000000, model64: 0x1c5a10001c5aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe5, match64: 0x00000000, model64: 0x1c5aa0001c5b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe6, match64: 0x00000000, model64: 0x1c5b00001c5b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe7, match64: 0x00000000, model64: 0x1c5b50001c5bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe8, match64: 0x00000000, model64: 0x1c5bd0001c5c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe9, match64: 0x00000000, model64: 0x1c5c60001c5cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fea, match64: 0x00000000, model64: 0x1c5cf0001c5d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1feb, match64: 0x00000000, model64: 0x1c5d70001c5e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fec, match64: 0x00000000, model64: 0x1c5e60001c5f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fed, match64: 0x00000000, model64: 0x9cfb00009d02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fee, match64: 0x00000000, model64: 0x1c5f50001c602},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fef, match64: 0x00000000, model64: 0x1c6020001c609},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff0, match64: 0x00000000, model64: 0x1c6090001c614},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff1, match64: 0x00000000, model64: 0x1c6140001c61b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff2, match64: 0x00000000, model64: 0x1c61b0001c626},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff3, match64: 0x00000000, model64: 0x1c6260001c632},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff4, match64: 0x00000000, model64: 0x1c6320001c63d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff5, match64: 0x00000000, model64: 0x1c63d0001c644},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff6, match64: 0x00000000, model64: 0x1c6440001c64f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff7, match64: 0x00000000, model64: 0x1c64f0001c656},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff8, match64: 0x00000000, model64: 0x1c6560001c661},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ff9, match64: 0x00000000, model64: 0x1c6610001c66b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffa, match64: 0x00000000, model64: 0x1c66b0001c672},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffb, match64: 0x00000000, model64: 0x1c6720001c67d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffc, match64: 0x00000000, model64: 0x1c67d0001c685},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffd, match64: 0x00000000, model64: 0x1c6850001c68d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ffe, match64: 0x00000000, model64: 0x1c68d0001c694},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fff, match64: 0x00000000, model64: 0x1c6940001c69c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2000, match64: 0x00000000, model64: 0x1c69c0001c6a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2001, match64: 0x00000000, model64: 0x1c6a40001c6ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x2002, match64: 0x00000000, model64: 0x1c6ac0001c6b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2003, match64: 0x00000000, model64: 0x1c6b70001c6c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2004, match64: 0x00000000, model64: 0x1c6c20001c6c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2005, match64: 0x00000000, model64: 0x1c6c90001c6d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2006, match64: 0x00000000, model64: 0x1c6d10001c6da},
		modelTuple{type64: 0x2700000027, matchRI: 0x2007, match64: 0x00000000, model64: 0x1c6da0001c6e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2008, match64: 0x00000000, model64: 0x1c6e20001c6ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x2009, match64: 0x00000000, model64: 0x1c6ed0001c6f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x200a, match64: 0x00000000, model64: 0x1c6f90001c701},
		modelTuple{type64: 0x2700000027, matchRI: 0x200b, match64: 0x00000000, model64: 0x1c7010001c710},
		modelTuple{type64: 0x2700000027, matchRI: 0x200c, match64: 0x00000000, model64: 0x1c7100001c719},
		modelTuple{type64: 0x2700000027, matchRI: 0x200d, match64: 0x00000000, model64: 0x1c7190001c723},
		modelTuple{type64: 0x2700000027, matchRI: 0x200e, match64: 0x00000000, model64: 0x1c7230001c72e},
		modelTuple{type64: 0x2700000027, matchRI: 0x200f, match64: 0x00000000, model64: 0x1c72e0001c736},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2010, match64: 0x00000000, model64: 0x1c7360001c741},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2011, match64: 0x00000000, model64: 0x1c7410001c74c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2012, match64: 0x00000000, model64: 0x1c74c0001c759},
		modelTuple{type64: 0x2700000027, matchRI: 0x2013, match64: 0x00000000, model64: 0x1c7590001c762},
		modelTuple{type64: 0x2700000027, matchRI: 0x2014, match64: 0x00000000, model64: 0x1c7620001c76b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2015, match64: 0x00000000, model64: 0x1c76b0001c774},
		modelTuple{type64: 0x2700000027, matchRI: 0x2016, match64: 0x00000000, model64: 0x1c7740001c781},
		modelTuple{type64: 0x2700000027, matchRI: 0x2017, match64: 0x00000000, model64: 0x1c7810001c78f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2018, match64: 0x00000000, model64: 0x1c78f0001c798},
		modelTuple{type64: 0x2700000027, matchRI: 0x2019, match64: 0x00000000, model64: 0x1c7980001c7a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x201a, match64: 0x00000000, model64: 0x1c7a50001c7ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x201b, match64: 0x00000000, model64: 0x1c7ac0001c7b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x201c, match64: 0x00000000, model64: 0x1c7b10001c7b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x201d, match64: 0x00000000, model64: 0x1c7b70001c7be},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1c7be0001c7c6, model64: 0x351100003513},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x201e, match64: 0x00000000, model64: 0x1c7c60001c7ca},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x201f, match64: 0x00000000, model64: 0x1c7ca0001c7d2},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2020, match64: 0x00000000, model64: 0x1c7d20001c7dc},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2021, match64: 0x00000000, model64: 0x1c7dc0001c7e6},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2022, match64: 0x00000000, model64: 0x1c7e60001c7ec},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2023, match64: 0x00000000, model64: 0x1c7ec0001c7f2},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2024, match64: 0x00000000, model64: 0x1c7f20001c7f9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2025, match64: 0x00000000, model64: 0x1c7f90001c7ff},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2026, match64: 0x00000000, model64: 0x1c7ff0001c809},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2027, match64: 0x00000000, model64: 0x1c8090001c80f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2028, match64: 0x00000000, model64: 0x12d7d00012d83},
		modelTuple{type64: 0x2700000027, matchRI: 0x2029, match64: 0x00000000, model64: 0x1c80f0001c816},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x202a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x202b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x202c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c81d0001c82c, model64: 0x1c82c0001c833},
		modelTuple{type64: 0x2700000027, matchRI: 0x202e, match64: 0x00000000, model64: 0x1c8330001c83b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2030, match64: 0x00000000, model64: 0x491100004913},
		modelTuple{type64: 0x2700000027, matchRI: 0x2031, match64: 0x00000000, model64: 0x1c8400001c846},
		modelTuple{type64: 0x2700000027, matchRI: 0x2032, match64: 0x00000000, model64: 0x1c8460001c84e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2033, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2034, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c8580001c864, model64: 0x1c8640001c870},
		modelTuple{type64: 0x2700000027, matchRI: 0x2036, match64: 0x00000000, model64: 0x1c8700001c876},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1c8760001c87e, model64: 0x1c87e0001c887},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1c8870001c88f, model64: 0x1c88f0001c897},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1c8970001c8a2, model64: 0x1c8a20001c8ad},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1c8ad0001c8b5, model64: 0x1c8b50001c8bd},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2037, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2038, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2039, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x203a, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c8c30001c8ce, model64: 0x1c8ce0001c8d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c8d20001c8dd, model64: 0x1c8dd0001c8e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c8e20001c8ec, model64: 0x1c8ec0001c8f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x203c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x203e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x203f, match64: 0x00000000, model64: 0x104a7000104b2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1c90c0001c90f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2040, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2041, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c9190001c928, model64: 0x1c9280001c931},
		modelTuple{type64: 0x2700000027, matchRI: 0x2043, match64: 0x00000000, model64: 0x1c9310001c93b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c93b0001c940, model64: 0x1c9400001c946},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c9460001c94f, model64: 0x1000f00010018},
		modelTuple{type64: 0x2700000027, matchRI: 0x2044, match64: 0x00000000, model64: 0x1c94f0001c953},
		modelTuple{type64: 0x2700000027, matchRI: 0x2045, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2047, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x5db000005e5, matchRI: -0x0001, match64: 0x1c95e0001c965, model64: 0x19ab000019ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x2049, match64: 0x00000000, model64: 0x1c96a0001c96f},
		modelTuple{type64: 0x2700000027, matchRI: 0x204a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x204c, match64: 0x00000000, model64: 0x1c97c0001c983},
		modelTuple{type64: 0x2700000027, matchRI: 0x204d, match64: 0x00000000, model64: 0x1c9830001c98c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1c9940001c99e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c9a10001c9a9, model64: 0x1c9a10001c9a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2050, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2051, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2052, match64: 0x00000000, model64: 0x1c9a90001c9b2},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2053, match64: 0x00000000, model64: 0x1c9b20001c9b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2054, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2055, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2057, match64: 0x00000000, model64: 0x103120001031a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c9be0001c9c5, model64: 0x1c9be0001c9c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c9c50001c9cd, model64: 0x1c9c50001c9cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c9cd0001c9d5, model64: 0x1c9cd0001c9d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2058, match64: 0x00000000, model64: 0x1c9d50001c9e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2059, match64: 0x00000000, model64: 0x1c9e20001c9e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c9e90001c9f4, model64: 0x1c9f40001c9fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x205a, match64: 0x00000000, model64: 0x1c9fd0001ca02},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ca020001ca0a, model64: 0x1ca0a0001ca13},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x205b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x205c, match64: 0x00000000, model64: 0x1ca130001ca1a},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x205d, match64: 0x00000000, model64: 0x1ca1a0001ca21},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1ca210001ca2e, model64: 0x1ca210001ca2e},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1ca2e0001ca3c, model64: 0x1ca3c0001ca4a},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x205e, match64: 0x00000000, model64: 0x1ca4a0001ca53},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x205f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ca650001ca6e, model64: 0x1ca6e0001ca77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ca770001ca80, model64: 0x1ca770001ca80},
		modelTuple{type64: 0x2700000027, matchRI: 0x2064, match64: 0x00000000, model64: 0x1ca860001ca92},
		modelTuple{type64: 0x2700000027, matchRI: 0x2066, match64: 0x00000000, model64: 0x1ca980001caa2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2067, match64: 0x00000000, model64: 0x1caa20001caab},
		modelTuple{type64: 0x2700000027, matchRI: 0x2068, match64: 0x00000000, model64: 0x1caab0001cab3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1cab80001cac0},
		modelTuple{type64: 0x2700000027, matchRI: 0x206b, match64: 0x00000000, model64: 0x7d6a00007d6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cac60001cad5, model64: 0x1cad50001cade},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cade0001cae6, model64: 0x1cae60001caef},
		modelTuple{type64: 0x2700000027, matchRI: 0x206c, match64: 0x00000000, model64: 0x1caef0001cafc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cafc0001cb0a, model64: 0x1cafc0001cb0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cb0a0001cb14, model64: 0x1cb0a0001cb14},
		modelTuple{type64: 0x2700000027, matchRI: 0x206d, match64: 0x00000000, model64: 0x1cb140001cb22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cb220001cb2c, model64: 0x1cb2c0001cb36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cb360001cb42, model64: 0x1cb420001cb4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cb4e0001cb52, model64: 0x1cb4e0001cb52},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cb520001cb59, model64: 0x1cb590001cb60},
		modelTuple{type64: 0x20d00000213, matchRI: 0x206e, match64: 0x00000000, model64: 0x1cb600001cb6b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x206f, match64: 0x00000000, model64: 0x1cb6b0001cb7c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1cb8c0001cb99},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2074, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2075, match64: 0x00000000, model64: 0x1cba70001cbae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cbb70001cbc0, model64: 0x1cbb70001cbc0},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1cbc00001cbc9, model64: 0x1cbc90001cbd2},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1cbd20001cbd7, model64: 0x1cbd20001cbd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cbd70001cbe2, model64: 0x1cbe20001cbe8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2078, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1cbf10001cbfb, model64: 0xf64f0000f651},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1cc0a0001cc1c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1cc290001cc2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x207c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x207d, match64: 0x00000000, model64: 0x1cc320001cc3b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x207e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2080, match64: 0x00000000, model64: 0x1cc3b0001cc44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cc440001cc51, model64: 0x1cc510001cc5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cc5e0001cc6b, model64: 0x1cc6b0001cc78},
		modelTuple{type64: 0x2700000027, matchRI: 0x2081, match64: 0x00000000, model64: 0x1cc3b0001cc44},
		modelTuple{type64: 0x2700000027, matchRI: 0x2082, match64: 0x00000000, model64: 0x1cc780001cc7e},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1cc7e0001cc89, model64: 0x1cc7e0001cc89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cc890001cc94, model64: 0x1cc890001cc94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cc9b0001cca0, model64: 0x1cca00001ccab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ccab0001ccb0, model64: 0x1ccb00001ccbb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ccbb0001ccc0, model64: 0x1ccc00001cccb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cccb0001cccf, model64: 0x1cccf0001ccd9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ccd90001ccde, model64: 0x1ccde0001cce9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1cce90001ccee, model64: 0xbcb70000bcbd},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ccee0001ccf3, model64: 0x1ccf30001ccfe},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ccfe0001cd05, model64: 0x1cd050001cd12},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1cd120001cd18, model64: 0x1cd180001cd24},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2084, match64: 0x00000000, model64: 0x1cd240001cd2e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2085, match64: 0x00000000, model64: 0x1cd2e0001cd3d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1cd3d0001cd43, model64: 0x1cd430001cd50},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x1cd500001cd5f, model64: 0x1cd5f0001cd6d},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x2086, match64: 0x00000000, model64: 0x1cd6d0001cd79},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1cd790001cd82, model64: 0x1cd820001cd8c},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1cd8c0001cd94, model64: 0x1cd940001cda1},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1cda10001cdab, model64: 0x1cdab0001cdb5},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2087, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1cdb50001cdbe, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x2088, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2089, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x208a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x208d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1cdd10001cddc, model64: 0x1cddc0001cde7},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1cde70001cdf4, model64: 0x1cdf40001ce08},
		modelTuple{type64: 0x2700000027, matchRI: 0x208e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x208f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2091, match64: 0x00000000, model64: 0x1ce110001ce1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2092, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2094, match64: 0x00000000, model64: 0x1ce270001ce33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ce330001ce3c, model64: 0x1ce3c0001ce51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ce510001ce64, model64: 0x1ce640001ce77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ce770001ce83, model64: 0x1ce770001ce83},
		modelTuple{type64: 0x2700000027, matchRI: 0x2095, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2096, match64: 0x00000000, model64: 0x1ce830001ce8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2097, match64: 0x00000000, model64: 0x1ce830001ce8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ce8d0001ce99, model64: 0x1ce990001cea4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2098, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2099, match64: 0x00000000, model64: 0x1cea40001cebb},
		modelTuple{type64: 0x2700000027, matchRI: 0x209a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x209c, match64: 0x00000000, model64: 0x1cec00001cecc},
		modelTuple{type64: 0x2700000027, matchRI: 0x209d, match64: 0x00000000, model64: 0x1cecc0001ced7},
		modelTuple{type64: 0x2700000027, matchRI: 0x209e, match64: 0x00000000, model64: 0x1ced70001cedf},
		modelTuple{type64: 0x2700000027, matchRI: 0x209f, match64: 0x00000000, model64: 0x1cedf0001ceec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ceec0001cef7, model64: 0x1cef70001cf03},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x20a0, match64: 0x00000000, model64: 0x1cf030001cf0e},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x20a1, match64: 0x00000000, model64: 0x1cf0e0001cf19},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x20a2, match64: 0x00000000, model64: 0x1cf190001cf25},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x20a3, match64: 0x00000000, model64: 0x1cf250001cf30},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x20a4, match64: 0x00000000, model64: 0x1cf300001cf3d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x20a5, match64: 0x00000000, model64: 0x1cf3d0001cf52},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x20a6, match64: 0x00000000, model64: 0x1cf520001cf5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cf6b0001cf75, model64: 0x1cf750001cf7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cf7f0001cf8b, model64: 0x1cf8b0001cf97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cf970001cfa2, model64: 0x1cfa20001cfad},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1cfb10001cfb6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ad, match64: 0x00000000, model64: 0x1cfc30001cfcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ae, match64: 0x00000000, model64: 0x1cfcb0001cfdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x20af, match64: 0x00000000, model64: 0x1cfdd0001cfec},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b0, match64: 0x00000000, model64: 0x1cfec0001cffe},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b1, match64: 0x00000000, model64: 0x1cffe0001d016},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d0160001d02c, model64: 0x1d02c0001d042},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d0420001d054, model64: 0x1d0540001d066},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b2, match64: 0x00000000, model64: 0x1d0660001d077},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b3, match64: 0x00000000, model64: 0x1d0770001d088},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b4, match64: 0x00000000, model64: 0x1d0880001d099},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b5, match64: 0x00000000, model64: 0x1d0990001d0a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b6, match64: 0x00000000, model64: 0x1d0a40001d0b4},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1d0b40001d0c6, model64: 0x1d0c60001d0d3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20b7, match64: 0x00000000, model64: 0x1d0d30001d0e9},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1d0e90001d0ee, model64: 0x1d0ee0001d0f9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d1160001d125},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bc, match64: 0x00000000, model64: 0x1d1250001d12d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bd, match64: 0x00000000, model64: 0x1d12d0001d134},
		modelTuple{type64: 0x2700000027, matchRI: 0x20be, match64: 0x00000000, model64: 0x1d1340001d139},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bf, match64: 0x00000000, model64: 0x1d1390001d141},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c0, match64: 0x00000000, model64: 0x1d1410001d147},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c1, match64: 0x00000000, model64: 0x1d1470001d14b},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c2, match64: 0x00000000, model64: 0x90d5000090d7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20c3, match64: 0x00000000, model64: 0x1d14b0001d158},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d15f0001d168, model64: 0x1d1680001d16a},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c5, match64: 0x00000000, model64: 0xc35d0000c35f},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c6, match64: 0x00000000, model64: 0x1d16a0001d16c},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c7, match64: 0x00000000, model64: 0x1d16c0001d173},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d1730001d182, model64: 0x1d1820001d189},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d1890001d196, model64: 0x1d1960001d19b},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c8, match64: 0x00000000, model64: 0x1d19b0001d1a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d1a00001d1aa, model64: 0x1d1aa0001d1ae},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20c9, match64: 0x00000000, model64: 0x1d1ae0001d1b1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1d1b10001d1c1, model64: 0x1d1c10001d1c9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20ca, match64: 0x00000000, model64: 0x1d1c90001d1d0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20cb, match64: 0x00000000, model64: 0x1d1d00001d1d9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1d1d90001d1e0, model64: 0x1d1d90001d1e0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20cc, match64: 0x00000000, model64: 0x1d1e00001d1ec},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20cd, match64: 0x00000000, model64: 0x1d1ec0001d1f5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20ce, match64: 0x00000000, model64: 0x1d1f50001d200},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20cf, match64: 0x00000000, model64: 0x1d2000001d20e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20d0, match64: 0x00000000, model64: 0x1d20e0001d21d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20d1, match64: 0x00000000, model64: 0x1d21d0001d22b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20d2, match64: 0x00000000, model64: 0x1d22b0001d23b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1d23b0001d247, model64: 0x1d2470001d254},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1d2540001d260, model64: 0x1d2600001d26a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1d26a0001d27c, model64: 0x1d27c0001d283},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x20d3, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20d4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d28c0001d299, model64: 0x1d2990001d2a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d7, match64: 0x00000000, model64: 0x1d2a60001d2ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20db, match64: 0x00000000, model64: 0x1d2bc0001d2c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x20dc, match64: 0x00000000, model64: 0x1d2c50001d2c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x20dd, match64: 0x00000000, model64: 0x1d2c90001d2d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x20de, match64: 0x00000000, model64: 0x1d2d80001d2e6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20df, match64: 0x00000000, model64: 0x1d2e60001d2ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e4, match64: 0x00000000, model64: 0x1d3100001d315},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e6, match64: 0x00000000, model64: 0xa45b0000a46b},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e7, match64: 0x00000000, model64: 0xb05b0000b066},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e8, match64: 0x00000000, model64: 0x1d31c0001d328},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d33a0001d344, model64: 0x1d3440001d355},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d35f0001d364},
		modelTuple{type64: 0x20d00000213, matchRI: 0x20eb, match64: 0x00000000, model64: 0x1d36b0001d372},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ec, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d3720001d37d, model64: 0x1d3720001d37d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d37d0001d381, model64: 0x1d3810001d387},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d3870001d38b, model64: 0x1d38b0001d391},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ed, match64: 0x00000000, model64: 0x1d3910001d395},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ee, match64: 0x00000000, model64: 0x1d3950001d399},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d3990001d3a4, model64: 0x1d3a40001d3ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d3ab0001d3b4, model64: 0xa0300000a035},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d3b40001d3ba, model64: 0x1d3b40001d3ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d3ba0001d3c1, model64: 0x1d3ba0001d3c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ef, match64: 0x00000000, model64: 0x1b8490001b84f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d3c10001d3c9, model64: 0x1d3c90001d3d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f0, match64: 0x00000000, model64: 0x1d3d10001d3db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d3db0001d3e3, model64: 0x1d3db0001d3e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f1, match64: 0x00000000, model64: 0x1d3e30001d3ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f2, match64: 0x00000000, model64: 0x1d3ec0001d3f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f3, match64: 0x00000000, model64: 0x1d3f80001d401},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f4, match64: 0x00000000, model64: 0x1d4010001d408},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4080001d411, model64: 0x1d4110001d41a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d41a0001d41f, model64: 0x1d41f0001d424},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4240001d42c, model64: 0x1d42c0001d434},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4340001d43d, model64: 0x1d43d0001d446},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4460001d44e, model64: 0x1d44e0001d456},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f5, match64: 0x00000000, model64: 0x1d4560001d45b},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f6, match64: 0x00000000, model64: 0xc4dc0000c4e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d45b0001d460, model64: 0x1d45b0001d460},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4600001d467, model64: 0x1d4670001d46e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d46e0001d474, model64: 0x1bb1d0001bb23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4740001d47b, model64: 0x1d4740001d47b},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f7, match64: 0x00000000, model64: 0x1d47b0001d483},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f8, match64: 0x00000000, model64: 0x534b0000534d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f9, match64: 0x00000000, model64: 0x1d4830001d48d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fa, match64: 0x00000000, model64: 0x1d48d0001d49b},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fb, match64: 0x00000000, model64: 0x1d49b0001d4a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x20fe, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2100, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2101, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2103, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2104, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2106, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d4b90001d4c1, model64: 0x1d4b90001d4c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2107, match64: 0x00000000, model64: 0x1d4c10001d4c9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1d4c90001d4d1, model64: 0x1d4c90001d4d1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d4e80001d4f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x210c, match64: 0x00000000, model64: 0x1d4f70001d4ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x210d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x210e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2111, match64: 0x00000000, model64: 0x1d50a0001d50e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d50e0001d513, model64: 0x1d50e0001d513},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5130001d518, model64: 0x1d5130001d518},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5180001d51c, model64: 0x1d5180001d51c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2112, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2113, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2115, match64: 0x00000000, model64: 0x6d6d00006d74},
		modelTuple{type64: 0x2700000027, matchRI: 0x2116, match64: 0x00000000, model64: 0x1d5230001d52d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2117, match64: 0x00000000, model64: 0x1d52d0001d539},
		modelTuple{type64: 0x2700000027, matchRI: 0x2118, match64: 0x00000000, model64: 0x1d5390001d540},
		modelTuple{type64: 0x2700000027, matchRI: 0x2119, match64: 0x00000000, model64: 0x1d5400001d54b},
		modelTuple{type64: 0x2700000027, matchRI: 0x211a, match64: 0x00000000, model64: 0x1d54b0001d551},
		modelTuple{type64: 0x2700000027, matchRI: 0x211b, match64: 0x00000000, model64: 0x1d5510001d555},
		modelTuple{type64: 0x2700000027, matchRI: 0x211c, match64: 0x00000000, model64: 0x1d5550001d55c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d55c0001d566, model64: 0x71e7000071f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5660001d570, model64: 0x1d5700001d57a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d57a0001d581, model64: 0x1d5810001d588},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5880001d58d, model64: 0x1d5880001d58d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d58d0001d597, model64: 0x1d5970001d5a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x211d, match64: 0x00000000, model64: 0x1d5a10001d5b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x211e, match64: 0x00000000, model64: 0x1d5b30001d5c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5c10001d5d4, model64: 0x1d5c10001d5d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d5d40001d5e3, model64: 0x1d5d40001d5e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x211f, match64: 0x00000000, model64: 0x1d5e30001d5eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2120, match64: 0x00000000, model64: 0x1d5eb0001d5f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2121, match64: 0x00000000, model64: 0x1d5f40001d601},
		modelTuple{type64: 0x2700000027, matchRI: 0x2122, match64: 0x00000000, model64: 0x1d6010001d60a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2123, match64: 0x00000000, model64: 0x1d60a0001d613},
		modelTuple{type64: 0x2700000027, matchRI: 0x2124, match64: 0x00000000, model64: 0x1d6130001d61a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2125, match64: 0x00000000, model64: 0x1d61a0001d622},
		modelTuple{type64: 0x2700000027, matchRI: 0x2126, match64: 0x00000000, model64: 0x1d6220001d62b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2127, match64: 0x00000000, model64: 0x1d62b0001d636},
		modelTuple{type64: 0x2700000027, matchRI: 0x2128, match64: 0x00000000, model64: 0x1d6360001d642},
		modelTuple{type64: 0x2700000027, matchRI: 0x2129, match64: 0x00000000, model64: 0x1d6420001d64a},
		modelTuple{type64: 0x2700000027, matchRI: 0x212a, match64: 0x00000000, model64: 0x1d64a0001d651},
		modelTuple{type64: 0x2700000027, matchRI: 0x212b, match64: 0x00000000, model64: 0x1d6510001d65b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d65b0001d661, model64: 0x1d65b0001d661},
		modelTuple{type64: 0x2700000027, matchRI: 0x212c, match64: 0x00000000, model64: 0xf0710000f079},
		modelTuple{type64: 0x2700000027, matchRI: 0x212d, match64: 0x00000000, model64: 0x4fee00004ff5},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x212e, match64: 0x00000000, model64: 0x1d6610001d669},
		modelTuple{type64: 0x20d00000213, matchRI: 0x212f, match64: 0x00000000, model64: 0x3fb600003fbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2130, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2131, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2132, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2134, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2135, match64: 0x00000000, model64: 0x1d66d0001d67a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2136, match64: 0x00000000, model64: 0x1d67a0001d68c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2137, match64: 0x00000000, model64: 0x1d68c0001d69e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2138, match64: 0x00000000, model64: 0x1d69e0001d6b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d6b00001d6b8, model64: 0x1d6b80001d6cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2139, match64: 0x00000000, model64: 0x1d6cb0001d6dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x213a, match64: 0x00000000, model64: 0x1d6dd0001d6ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x213b, match64: 0x00000000, model64: 0x1d6ef0001d702},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x213c, match64: 0x00000000, model64: 0x1d7020001d719},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x213d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7250001d72e, model64: 0x1d72e0001d739},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7390001d741, model64: 0x1d7410001d749},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2141, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2142, match64: 0x00000000, model64: 0x1d7570001d75e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d75e0001d76a, model64: 0x1d76a0001d776},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7760001d780, model64: 0x1d7760001d780},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7800001d78a, model64: 0x1d78a0001d794},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7940001d79c, model64: 0x1d7940001d79c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d79c0001d7a3, model64: 0x1d7a30001d7aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7aa0001d7af, model64: 0x1d7af0001d7ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x2143, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x34e7000034ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x2145, match64: 0x00000000, model64: 0x1d7d10001d7d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2146, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2147, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x214b, match64: 0x00000000, model64: 0x1d7f20001d7f8},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x214c, match64: 0x00000000, model64: 0x1d7f80001d801},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x214d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x214e, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x214f, match64: 0x00000000, model64: 0x1d8010001d808},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2150, match64: 0x00000000, model64: 0x1d8080001d810},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2151, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x2152, match64: 0x00000000, model64: 0x1d8100001d81b},
		modelTuple{type64: 0x940000009f, matchRI: 0x2153, match64: 0x00000000, model64: 0x1d81b0001d822},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8290001d82d, model64: 0x1d82d0001d835},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8350001d83a, model64: 0x73f5000073f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d83a0001d83e, model64: 0x1d83e0001d847},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8470001d84b, model64: 0x1d84b0001d854},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8540001d858, model64: 0x1d8580001d861},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8610001d865, model64: 0x1d8610001d865},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8650001d869, model64: 0x1d8690001d875},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8750001d879, model64: 0x1d8790001d882},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8820001d887, model64: 0x1d8870001d88b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d88b0001d88f, model64: 0x138cf000138d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d88f0001d893, model64: 0x1d8930001d89a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2156, match64: 0x00000000, model64: 0x1d8ad0001d8b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2158, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2159, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x215a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x215c, match64: 0x00000000, model64: 0x1d8bb0001d8c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8c30001d8c7, model64: 0x1d8c30001d8c7},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x215e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8e10001d8e7, model64: 0x1d8e70001d8ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2163, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d8fc0001d905},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d9170001d923},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2166, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9290001d933, model64: 0x1d9330001d93d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2167, match64: 0x00000000, model64: 0x1d93d0001d942},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x216c, match64: 0x00000000, model64: 0x1d9560001d961},
		modelTuple{type64: 0x2700000027, matchRI: 0x216d, match64: 0x00000000, model64: 0x1d9610001d969},
		modelTuple{type64: 0x2700000027, matchRI: 0x216e, match64: 0x00000000, model64: 0x1d9690001d96f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d96f0001d976, model64: 0x1d9760001d97d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2170, match64: 0x00000000, model64: 0x6f8f00006f92},
		modelTuple{type64: 0x2700000027, matchRI: 0x2171, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9870001d991, model64: 0x1d9910001d993},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d99f0001d9a9, model64: 0x1d9a90001d9b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9b30001d9bd, model64: 0x1d9bd0001d9c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9c70001d9d0, model64: 0x1d9d00001d9d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2175, match64: 0x00000000, model64: 0x1d9d90001d9e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d9e60001d9ee, model64: 0x1d9ee0001d9f6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d9ff0001da03},
		modelTuple{type64: 0x2700000027, matchRI: 0x2178, match64: 0x00000000, model64: 0x76ec000076f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2179, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x217a, match64: 0x00000000, model64: 0x1da0a0001da0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x217b, match64: 0x00000000, model64: 0x1d9ff0001da03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1da130001da1d, model64: 0x1da1d0001da1e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x217e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1da3c0001da3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2181, match64: 0x00000000, model64: 0x1da440001da51},
		modelTuple{type64: 0x2700000027, matchRI: 0x2182, match64: 0x00000000, model64: 0x1da510001da5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2183, match64: 0x00000000, model64: 0x1da5d0001da64},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1da640001da6b, model64: 0x1da6b0001da78},
		modelTuple{type64: 0x2700000027, matchRI: 0x2185, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2187, match64: 0x00000000, model64: 0x1da850001da92},
		modelTuple{type64: 0x2700000027, matchRI: 0x2188, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x218c, match64: 0x00000000, model64: 0x1da9c0001daa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x218d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2190, match64: 0x00000000, model64: 0x1dab50001dac9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2191, match64: 0x00000000, model64: 0x1dac90001dad7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2192, match64: 0x00000000, model64: 0x1dad70001dadc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2194, match64: 0x00000000, model64: 0x1dae20001daec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2195, match64: 0x00000000, model64: 0x1daec0001daf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2197, match64: 0x00000000, model64: 0x1db000001db0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1db0b0001db12, model64: 0x1db120001db1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1db1f0001db26, model64: 0x1db260001db3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1db3a0001db43, model64: 0x1db430001db54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1db540001db5a, model64: 0x1db5a0001db64},
		modelTuple{type64: 0x2700000027, matchRI: 0x2198, match64: 0x00000000, model64: 0x1db640001db6e},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1db6e0001db75, model64: 0x1db750001db85},
		modelTuple{type64: 0x2700000027, matchRI: 0x219a, match64: 0x00000000, model64: 0x1db8b0001db96},
		modelTuple{type64: 0x2700000027, matchRI: 0x219b, match64: 0x00000000, model64: 0x1db960001db9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1db9e0001dba6, model64: 0x1db9e0001dba6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dba60001dbac, model64: 0x1dba60001dbac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dbac0001dbb5, model64: 0x1dbac0001dbb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dbb50001dbbe, model64: 0x19ab000019ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dbbe0001dbc4, model64: 0x5c9c00005c9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dbc40001dbcb, model64: 0xe2cc0000e2ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x219c, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x219d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x219e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1dbd20001dbdd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a2, match64: 0x00000000, model64: 0x1dbe90001dbf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a4, match64: 0x00000000, model64: 0x1dbf60001dc01},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a5, match64: 0x00000000, model64: 0x1dc010001dc10},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a6, match64: 0x00000000, model64: 0x1dc100001dc1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a7, match64: 0x00000000, model64: 0x1dc1a0001dc2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a8, match64: 0x00000000, model64: 0x1dc2d0001dc3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x21a9, match64: 0x00000000, model64: 0x1dc3c0001dc42},
		modelTuple{type64: 0x2700000027, matchRI: 0x21aa, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21ab, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21ac, match64: 0x00000000, model64: 0x1dc420001dc49},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21ad, match64: 0x00000000, model64: 0x1dc490001dc57},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x21af, match64: 0x00000000, model64: 0x1dc5c0001dc63},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x21b0, match64: 0x00000000, model64: 0x1dc630001dc6c},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x21b1, match64: 0x00000000, model64: 0x1dc6c0001dc78},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x21b2, match64: 0x00000000, model64: 0x1dc780001dc87},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b4, match64: 0x00000000, model64: 0x153be000153c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b5, match64: 0x00000000, model64: 0x1dc970001dc9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b6, match64: 0x00000000, model64: 0x1dc9c0001dca4},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b7, match64: 0x00000000, model64: 0x1dca40001dcae},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b8, match64: 0x00000000, model64: 0x1dcae0001dcb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b9, match64: 0x00000000, model64: 0x1dcb60001dcbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ba, match64: 0x00000000, model64: 0x16b2000016b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x21bb, match64: 0x00000000, model64: 0x1dcbf0001dcc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x21bc, match64: 0x00000000, model64: 0x1dcc70001dcd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x21bd, match64: 0x00000000, model64: 0x1dcd30001dcda},
		modelTuple{type64: 0x2700000027, matchRI: 0x21be, match64: 0x00000000, model64: 0x1dcda0001dce1},
		modelTuple{type64: 0x2700000027, matchRI: 0x21bf, match64: 0x00000000, model64: 0x1dce10001dce9},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c0, match64: 0x00000000, model64: 0x1dce90001dcf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c1, match64: 0x00000000, model64: 0x31c00000321},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c2, match64: 0x00000000, model64: 0x1dcf20001dcfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c3, match64: 0x00000000, model64: 0x1dcfd0001dd09},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c4, match64: 0x00000000, model64: 0x1dd090001dd18},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c5, match64: 0x00000000, model64: 0x1dd180001dd23},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c6, match64: 0x00000000, model64: 0x1dd230001dd2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c7, match64: 0x00000000, model64: 0x1dd2f0001dd34},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c8, match64: 0x00000000, model64: 0x1dd340001dd3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c9, match64: 0x00000000, model64: 0x1dd3c0001dd4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ca, match64: 0x00000000, model64: 0x1dd4a0001dd50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dd500001dd5d, model64: 0x1dd500001dd5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x21cb, match64: 0x00000000, model64: 0x1dd5d0001dd67},
		modelTuple{type64: 0x2700000027, matchRI: 0x21cc, match64: 0x00000000, model64: 0x1dd670001dd71},
		modelTuple{type64: 0x2700000027, matchRI: 0x21cd, match64: 0x00000000, model64: 0x1dd710001dd77},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ce, match64: 0x00000000, model64: 0x1dd770001dd7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x21cf, match64: 0x00000000, model64: 0x1dd7d0001dd82},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d0, match64: 0x00000000, model64: 0x1dd820001dd88},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d1, match64: 0x00000000, model64: 0xfe3f0000fe43},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d2, match64: 0x00000000, model64: 0x114cd000114d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d3, match64: 0x00000000, model64: 0x1dd880001dd91},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d4, match64: 0x00000000, model64: 0x1dd910001dd99},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d5, match64: 0x00000000, model64: 0x1dd990001dd9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d6, match64: 0x00000000, model64: 0x1dd9e0001ddac},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d7, match64: 0x00000000, model64: 0x73fd00007405},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d8, match64: 0x00000000, model64: 0x741f00007425},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21d9, match64: 0x00000000, model64: 0x1ddac0001ddb8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21da, match64: 0x00000000, model64: 0x1ddb80001ddc3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21db, match64: 0x00000000, model64: 0x1ddc30001ddce},
		modelTuple{type64: 0x2700000027, matchRI: 0x21dc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x21dd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ddd30001ddde, model64: 0x1ddde0001dded},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dded0001ddfb, model64: 0x1ddfb0001de02},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1de080001de0f, model64: 0x1de0f0001de1b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1de1b0001de1f, model64: 0x1de1f0001de2b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1de2b0001de31, model64: 0x1de310001de38},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1de380001de47, model64: 0x1de470001de53},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1de530001de63, model64: 0x1de630001de70},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21e0, match64: 0x00000000, model64: 0x1de700001de77},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21e1, match64: 0x00000000, model64: 0x1de700001de77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1de770001de83, model64: 0x1de830001de95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1de950001de9c, model64: 0x1de9c0001dea5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dea50001deac, model64: 0x1deac0001deb6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1deb60001debd, model64: 0x1debd0001dec7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dec70001dece, model64: 0x1dece0001ded8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ded80001dedf, model64: 0x1dedf0001dee9},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e2, match64: 0x00000000, model64: 0x1dee90001def4},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e3, match64: 0x00000000, model64: 0x1def40001defd},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e4, match64: 0x00000000, model64: 0x117350001173d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1defd0001df0f, model64: 0x1defd0001df0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e5, match64: 0x00000000, model64: 0x1df0f0001df1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e6, match64: 0x00000000, model64: 0x1df1c0001df25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1df250001df35, model64: 0x1df350001df3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1df3e0001df4d, model64: 0x1df4d0001df55},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e7, match64: 0x00000000, model64: 0x1df550001df5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1df630001df73, model64: 0x1df730001df82},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ea, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1df8f0001df9a},
		modelTuple{type64: 0x2e8000002f5, matchRI: -0x0001, match64: 0x1dfa20001dfb0, model64: 0x1dfb00001dfb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ee, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x21ef, match64: 0x00000000, model64: 0x1dfb50001dfba},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f0, match64: 0x00000000, model64: 0x1dfba0001dfc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f1, match64: 0x00000000, model64: 0x1dfc20001dfc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f2, match64: 0x00000000, model64: 0x1dfc80001dfd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f3, match64: 0x00000000, model64: 0x1dfd60001dfdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f4, match64: 0x00000000, model64: 0x1dfdf0001dfe8},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f5, match64: 0x00000000, model64: 0x1dfe80001dff3},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f6, match64: 0x00000000, model64: 0x1dff30001dffe},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f7, match64: 0x00000000, model64: 0x1dffe0001e007},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f8, match64: 0x00000000, model64: 0x1e0070001e00f},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x21fa, match64: 0x00000000, model64: 0x1e00f0001e01e},
		modelTuple{type64: 0x2700000027, matchRI: 0x21fb, match64: 0x00000000, model64: 0x1e01e0001e030},
		modelTuple{type64: 0x2700000027, matchRI: 0x21fc, match64: 0x00000000, model64: 0x1e0300001e041},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x21fe, match64: 0x00000000, model64: 0x1e04a0001e04e},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x21ff, match64: 0x00000000, model64: 0x1e04e0001e055},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2200, match64: 0x00000000, model64: 0x1e0550001e061},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1e0610001e068, model64: 0x1e0680001e073},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2201, match64: 0x00000000, model64: 0x1e0730001e07d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2202, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2203, match64: 0x00000000, model64: 0x1e07d0001e097},
		modelTuple{type64: 0x2700000027, matchRI: 0x2204, match64: 0x00000000, model64: 0x1e09e0001e0a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2205, match64: 0x00000000, model64: 0x94be000094c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2206, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0ab0001e0b5, model64: 0x1e0b50001e0b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0b80001e0c3, model64: 0x1e0c30001e0c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0c60001e0d1, model64: 0x1e0d10001e0d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0d40001e0df, model64: 0x1e0df0001e0e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0e20001e0ed, model64: 0x1e0ed0001e0f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0f00001e0fa, model64: 0x1e0fa0001e0fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2208, match64: 0x00000000, model64: 0x1e0fd0001e100},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x220a, match64: 0x00000000, model64: 0x1e10a0001e111},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x220d, match64: 0x00000000, model64: 0x1e1160001e11c},
		modelTuple{type64: 0x2700000027, matchRI: 0x220e, match64: 0x00000000, model64: 0x1e11c0001e122},
		modelTuple{type64: 0x2700000027, matchRI: 0x220f, match64: 0x00000000, model64: 0x3fb000003fb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2211, match64: 0x00000000, model64: 0x1e1270001e12b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2212, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e1370001e146, model64: 0x1e1460001e14a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e14a0001e151, model64: 0x1e14a0001e151},
		modelTuple{type64: 0x2700000027, matchRI: 0x2215, match64: 0x00000000, model64: 0x1e15c0001e16f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2216, match64: 0x00000000, model64: 0x1e16f0001e180},
		modelTuple{type64: 0x2700000027, matchRI: 0x2218, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2219, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x221a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x221d, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x221e, match64: 0x00000000, model64: 0x1e1940001e19c},
		modelTuple{type64: 0x2700000027, matchRI: 0x221f, match64: 0x00000000, model64: 0x1e19c0001e1a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e1a30001e1a8, model64: 0x1e1a30001e1a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2220, match64: 0x00000000, model64: 0x1e1a80001e1ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x2221, match64: 0x00000000, model64: 0x3fc200003fca},
		modelTuple{type64: 0x2700000027, matchRI: 0x2223, match64: 0x00000000, model64: 0x1e1b00001e1ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x2224, match64: 0x00000000, model64: 0x1e1ba0001e1bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2225, match64: 0x00000000, model64: 0x1e1bf0001e1c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2226, match64: 0x00000000, model64: 0x1e1c80001e1d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2227, match64: 0x00000000, model64: 0x1e1d00001e1d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2228, match64: 0x00000000, model64: 0x1e1d70001e1dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2229, match64: 0x00000000, model64: 0x1e1dd0001e1e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x222a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x222b, match64: 0x00000000, model64: 0x1e1e40001e1f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x222c, match64: 0x00000000, model64: 0x3fb000003fb6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x222d, match64: 0x00000000, model64: 0x1e1f50001e1ff},
		modelTuple{type64: 0x20d00000213, matchRI: 0x222e, match64: 0x00000000, model64: 0x1e1f50001e1ff},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x222f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2231, match64: 0x00000000, model64: 0x16dc200016dc5},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2232, match64: 0x00000000, model64: 0x1e2030001e209},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1e2090001e20f, model64: 0x1e20f0001e215},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1e2150001e21b, model64: 0x1e21b0001e223},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x1e2230001e229, model64: 0x1e2290001e230},
		modelTuple{type64: 0x2700000027, matchRI: 0x2233, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2234, match64: 0x00000000, model64: 0x1e2300001e234},
		modelTuple{type64: 0x2700000027, matchRI: 0x2235, match64: 0x00000000, model64: 0x1e2340001e23a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2236, match64: 0x00000000, model64: 0x1e23a0001e240},
		modelTuple{type64: 0x2700000027, matchRI: 0x2237, match64: 0x00000000, model64: 0x1e2400001e249},
		modelTuple{type64: 0x2700000027, matchRI: 0x2238, match64: 0x00000000, model64: 0x1e2490001e253},
		modelTuple{type64: 0x2700000027, matchRI: 0x2239, match64: 0x00000000, model64: 0x1e2530001e25a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e25a0001e260, model64: 0x1e2600001e26b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e26b0001e271, model64: 0x1e2710001e278},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e2780001e27e, model64: 0x1e27e0001e285},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e2850001e28b, model64: 0x1e28b0001e296},
		modelTuple{type64: 0x2700000027, matchRI: 0x223a, match64: 0x00000000, model64: 0x1e2960001e29f},
		modelTuple{type64: 0x2700000027, matchRI: 0x223b, match64: 0x00000000, model64: 0x1e29f0001e2a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e2a60001e2ad, model64: 0x1e2ad0001e2b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x223c, match64: 0x00000000, model64: 0x1e2b50001e2bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e2bb0001e2c1, model64: 0x1e2c10001e2cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e2cb0001e2d1, model64: 0x1e2d10001e2db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e2db0001e2e1, model64: 0x1e2e10001e2ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e2ee0001e2f4, model64: 0x1e2f40001e301},
		modelTuple{type64: 0x2700000027, matchRI: 0x223d, match64: 0x00000000, model64: 0x1e3010001e30c},
		modelTuple{type64: 0x2700000027, matchRI: 0x223e, match64: 0x00000000, model64: 0x1e30c0001e315},
		modelTuple{type64: 0x2700000027, matchRI: 0x223f, match64: 0x00000000, model64: 0x1e3150001e31d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2240, match64: 0x00000000, model64: 0x1e31d0001e328},
		modelTuple{type64: 0x2700000027, matchRI: 0x2241, match64: 0x00000000, model64: 0x1e3280001e330},
		modelTuple{type64: 0x2700000027, matchRI: 0x2242, match64: 0x00000000, model64: 0x1e3300001e33a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2243, match64: 0x00000000, model64: 0x1e33a0001e346},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e3460001e34c, model64: 0x1e34c0001e356},
		modelTuple{type64: 0x2700000027, matchRI: 0x2244, match64: 0x00000000, model64: 0x1e3560001e360},
		modelTuple{type64: 0x2700000027, matchRI: 0x2245, match64: 0x00000000, model64: 0x1e3600001e36f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2246, match64: 0x00000000, model64: 0x1e36f0001e37c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2247, match64: 0x00000000, model64: 0x1e37c0001e383},
		modelTuple{type64: 0x2700000027, matchRI: 0x2248, match64: 0x00000000, model64: 0x1e3830001e38b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2249, match64: 0x00000000, model64: 0x1e38b0001e392},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e3920001e398, model64: 0x1e3980001e3a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e3a00001e3a6, model64: 0x1e3a60001e3b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e3b10001e3b7, model64: 0x1e3b70001e3be},
		modelTuple{type64: 0x2700000027, matchRI: 0x224a, match64: 0x00000000, model64: 0x1e3be0001e3c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x224b, match64: 0x00000000, model64: 0x1e3c80001e3cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e3cf0001e3d6, model64: 0x1e3d60001e3de},
		modelTuple{type64: 0x2700000027, matchRI: 0x224c, match64: 0x00000000, model64: 0x1e3de0001e3e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x224d, match64: 0x00000000, model64: 0x1e3e90001e3f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x224e, match64: 0x00000000, model64: 0x1e3f50001e3fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x224f, match64: 0x00000000, model64: 0x1e3fc0001e404},
		modelTuple{type64: 0x2700000027, matchRI: 0x2250, match64: 0x00000000, model64: 0x1e4040001e40b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2251, match64: 0x00000000, model64: 0x1e40b0001e413},
		modelTuple{type64: 0x2700000027, matchRI: 0x2252, match64: 0x00000000, model64: 0x1e4130001e41e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2253, match64: 0x00000000, model64: 0x1e41e0001e424},
		modelTuple{type64: 0x2700000027, matchRI: 0x2254, match64: 0x00000000, model64: 0x1e4240001e42e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2255, match64: 0x00000000, model64: 0x1e42e0001e434},
		modelTuple{type64: 0x2700000027, matchRI: 0x2256, match64: 0x00000000, model64: 0x1e4340001e43e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2257, match64: 0x00000000, model64: 0xe1450000e148},
		modelTuple{type64: 0x2700000027, matchRI: 0x2258, match64: 0x00000000, model64: 0x1e43e0001e441},
		modelTuple{type64: 0x2700000027, matchRI: 0x2259, match64: 0x00000000, model64: 0x1e4410001e447},
		modelTuple{type64: 0x2700000027, matchRI: 0x225a, match64: 0x00000000, model64: 0x1e4470001e44b},
		modelTuple{type64: 0x2700000027, matchRI: 0x225b, match64: 0x00000000, model64: 0x1e44b0001e452},
		modelTuple{type64: 0x2700000027, matchRI: 0x225c, match64: 0x00000000, model64: 0x1e4520001e45c},
		modelTuple{type64: 0x2700000027, matchRI: 0x225d, match64: 0x00000000, model64: 0x1e45c0001e45f},
		modelTuple{type64: 0x2700000027, matchRI: 0x225e, match64: 0x00000000, model64: 0x1e45f0001e462},
		modelTuple{type64: 0x2700000027, matchRI: 0x225f, match64: 0x00000000, model64: 0x1e4620001e465},
		modelTuple{type64: 0x2700000027, matchRI: 0x2260, match64: 0x00000000, model64: 0x1e4650001e46a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2261, match64: 0x00000000, model64: 0x1e46a0001e472},
		modelTuple{type64: 0x2700000027, matchRI: 0x2262, match64: 0x00000000, model64: 0x1e4720001e478},
		modelTuple{type64: 0x2700000027, matchRI: 0x2263, match64: 0x00000000, model64: 0x1e4780001e47d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2264, match64: 0x00000000, model64: 0x1e47d0001e486},
		modelTuple{type64: 0x2700000027, matchRI: 0x2265, match64: 0x00000000, model64: 0x1e4860001e48b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2266, match64: 0x00000000, model64: 0x1e4620001e465},
		modelTuple{type64: 0x2700000027, matchRI: 0x2267, match64: 0x00000000, model64: 0x1e48b0001e49b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2268, match64: 0x00000000, model64: 0x968c0000968f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2269, match64: 0x00000000, model64: 0x1e49b0001e4a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e4a00001e4a5, model64: 0x1e4a50001e4ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e4ae0001e4b3, model64: 0x1e4b30001e4b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e4b80001e4bd, model64: 0x1e4bd0001e4c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e4c00001e4c6, model64: 0x1e4c60001e4c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e4c90001e4ce, model64: 0x1e4ce0001e4d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e4d40001e4db, model64: 0x1e4db0001e4e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x226a, match64: 0x00000000, model64: 0x1e4e00001e4e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x226b, match64: 0x00000000, model64: 0x194600001948},
		modelTuple{type64: 0x2700000027, matchRI: 0x226c, match64: 0x00000000, model64: 0x1e4e30001e4e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x226d, match64: 0x00000000, model64: 0xe9190000e91c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e4e90001e4ef, model64: 0x1e4ef0001e4f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x226e, match64: 0x00000000, model64: 0x1e4f60001e4fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e4fa0001e4ff, model64: 0x1e4ff0001e506},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5060001e50b, model64: 0x1e50b0001e511},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5110001e517, model64: 0x1e5170001e51b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e51b0001e520, model64: 0x1e5200001e52a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e52a0001e52f, model64: 0x1e52f0001e535},
		modelTuple{type64: 0x2700000027, matchRI: 0x226f, match64: 0x00000000, model64: 0x1e5350001e539},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5390001e53e, model64: 0x1e53e0001e545},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5450001e54a, model64: 0x1e54a0001e54e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2270, match64: 0x00000000, model64: 0x1e54e0001e551},
		modelTuple{type64: 0x2700000027, matchRI: 0x2271, match64: 0x00000000, model64: 0x8fbf00008fc1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5510001e557, model64: 0x1e5570001e55e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2272, match64: 0x00000000, model64: 0x1e55e0001e563},
		modelTuple{type64: 0x2700000027, matchRI: 0x2273, match64: 0x00000000, model64: 0x1e5630001e569},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5690001e56f, model64: 0x1e56f0001e573},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5730001e579, model64: 0x1e5790001e57c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e57c0001e582, model64: 0x1e5820001e586},
		modelTuple{type64: 0x2700000027, matchRI: 0x2274, match64: 0x00000000, model64: 0x1e5860001e588},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5880001e58e, model64: 0xa0960000a099},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e58e0001e594, model64: 0x1e5940001e59b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2275, match64: 0x00000000, model64: 0x1e59b0001e59e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2276, match64: 0x00000000, model64: 0x1e59e0001e5a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2277, match64: 0x00000000, model64: 0x1e5a10001e5a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2278, match64: 0x00000000, model64: 0x1e5a70001e5b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2279, match64: 0x00000000, model64: 0x1e5b00001e5b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x227a, match64: 0x00000000, model64: 0x17cd000017cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x227b, match64: 0x00000000, model64: 0x1e5b30001e5b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x227c, match64: 0x00000000, model64: 0x1e5b60001e5bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x227d, match64: 0x00000000, model64: 0x1e5bd0001e5c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x227e, match64: 0x00000000, model64: 0x1e5c10001e5c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x227f, match64: 0x00000000, model64: 0x1e5c40001e5cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2280, match64: 0x00000000, model64: 0x1e5cb0001e5d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2281, match64: 0x00000000, model64: 0x1e5d20001e5d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2282, match64: 0x00000000, model64: 0x1e5d90001e5dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2283, match64: 0x00000000, model64: 0x1e5dc0001e5df},
		modelTuple{type64: 0x2700000027, matchRI: 0x2284, match64: 0x00000000, model64: 0x1e5df0001e5e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2285, match64: 0x00000000, model64: 0xe4bf0000e4c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2286, match64: 0x00000000, model64: 0x1e5e50001e5e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2287, match64: 0x00000000, model64: 0x1e5e70001e5ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2288, match64: 0x00000000, model64: 0x1e5ee0001e5f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2289, match64: 0x00000000, model64: 0x1e5f50001e5f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x228a, match64: 0x00000000, model64: 0xed620000ed64},
		modelTuple{type64: 0x2700000027, matchRI: 0x228b, match64: 0x00000000, model64: 0x1e5f80001e5fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x228c, match64: 0x00000000, model64: 0x1e5fc0001e603},
		modelTuple{type64: 0x2700000027, matchRI: 0x228d, match64: 0x00000000, model64: 0x1e6030001e605},
		modelTuple{type64: 0x2700000027, matchRI: 0x228e, match64: 0x00000000, model64: 0x1e6050001e60d},
		modelTuple{type64: 0x2700000027, matchRI: 0x228f, match64: 0x00000000, model64: 0x1e60d0001e613},
		modelTuple{type64: 0x2700000027, matchRI: 0x2290, match64: 0x00000000, model64: 0x1e6130001e619},
		modelTuple{type64: 0x2700000027, matchRI: 0x2291, match64: 0x00000000, model64: 0x1e6190001e621},
		modelTuple{type64: 0x2700000027, matchRI: 0x2292, match64: 0x00000000, model64: 0x1e6210001e624},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6240001e62a, model64: 0x1e62a0001e62d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2293, match64: 0x00000000, model64: 0x1e62d0001e633},
		modelTuple{type64: 0x2700000027, matchRI: 0x2294, match64: 0x00000000, model64: 0x1e6330001e63e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2295, match64: 0x00000000, model64: 0x1e63e0001e641},
		modelTuple{type64: 0x2700000027, matchRI: 0x2296, match64: 0x00000000, model64: 0x1e6410001e649},
		modelTuple{type64: 0x2700000027, matchRI: 0x2297, match64: 0x00000000, model64: 0x1e6490001e64d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2298, match64: 0x00000000, model64: 0x1e64d0001e653},
		modelTuple{type64: 0x2700000027, matchRI: 0x2299, match64: 0x00000000, model64: 0x1e6530001e656},
		modelTuple{type64: 0x2700000027, matchRI: 0x229a, match64: 0x00000000, model64: 0x1e6560001e65a},
		modelTuple{type64: 0x2700000027, matchRI: 0x229b, match64: 0x00000000, model64: 0x1e65a0001e65d},
		modelTuple{type64: 0x2700000027, matchRI: 0x229c, match64: 0x00000000, model64: 0x1e65a0001e65d},
		modelTuple{type64: 0x2700000027, matchRI: 0x229d, match64: 0x00000000, model64: 0x1e65d0001e660},
		modelTuple{type64: 0x2700000027, matchRI: 0x229e, match64: 0x00000000, model64: 0x1e6600001e667},
		modelTuple{type64: 0x2700000027, matchRI: 0x229f, match64: 0x00000000, model64: 0x1e6670001e66a},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a0, match64: 0x00000000, model64: 0x1e66a0001e671},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a1, match64: 0x00000000, model64: 0x1e6710001e674},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a2, match64: 0x00000000, model64: 0x1e6740001e678},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a3, match64: 0x00000000, model64: 0x16d3500016d3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a4, match64: 0x00000000, model64: 0x1e6780001e680},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a5, match64: 0x00000000, model64: 0x16d4200016d49},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a6, match64: 0x00000000, model64: 0x1e6800001e68c},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a7, match64: 0x00000000, model64: 0x1e68c0001e68f},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a8, match64: 0x00000000, model64: 0x1e68f0001e693},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a9, match64: 0x00000000, model64: 0x1e6930001e69a},
		modelTuple{type64: 0x2700000027, matchRI: 0x22aa, match64: 0x00000000, model64: 0x1e69a0001e6a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ab, match64: 0x00000000, model64: 0x1e6a60001e6ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ac, match64: 0x00000000, model64: 0x1e6ad0001e6b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ad, match64: 0x00000000, model64: 0x1e6b50001e6b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ae, match64: 0x00000000, model64: 0x1e6b80001e6be},
		modelTuple{type64: 0x2700000027, matchRI: 0x22af, match64: 0x00000000, model64: 0x1e6be0001e6c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6c10001e6c7, model64: 0x1e6c70001e6ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6ce0001e6d4, model64: 0x1e6d40001e6dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b0, match64: 0x00000000, model64: 0x1e6dc0001e6e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b1, match64: 0x00000000, model64: 0x1e6e30001e6ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b2, match64: 0x00000000, model64: 0x94be000094c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b3, match64: 0x00000000, model64: 0x1e6ee0001e6f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b4, match64: 0x00000000, model64: 0x1e6f60001e6f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b5, match64: 0x00000000, model64: 0x1e6f90001e6fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b6, match64: 0x00000000, model64: 0x1e6fc0001e6ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b7, match64: 0x00000000, model64: 0x408000004083},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6ff0001e705, model64: 0x1e7050001e70b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e70b0001e710, model64: 0x1abeb0001abed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7100001e715, model64: 0x1e7150001e718},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b8, match64: 0x00000000, model64: 0x1e7180001e71c},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b9, match64: 0x00000000, model64: 0x1e71c0001e720},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ba, match64: 0x00000000, model64: 0x1e7200001e724},
		modelTuple{type64: 0x2700000027, matchRI: 0x22bb, match64: 0x00000000, model64: 0x1e7240001e727},
		modelTuple{type64: 0x2700000027, matchRI: 0x22bc, match64: 0x00000000, model64: 0x1e7270001e72a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e72a0001e730, model64: 0x1e7300001e737},
		modelTuple{type64: 0x2700000027, matchRI: 0x22bd, match64: 0x00000000, model64: 0x1e7370001e73b},
		modelTuple{type64: 0x2700000027, matchRI: 0x22be, match64: 0x00000000, model64: 0x1e73b0001e73f},
		modelTuple{type64: 0x2700000027, matchRI: 0x22bf, match64: 0x00000000, model64: 0x1e73f0001e742},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7420001e747, model64: 0x1e7470001e74b},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c0, match64: 0x00000000, model64: 0x1e74b0001e74f},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c1, match64: 0x00000000, model64: 0x1e74f0001e753},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c2, match64: 0x00000000, model64: 0x1e7530001e756},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c3, match64: 0x00000000, model64: 0x1e7560001e759},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c4, match64: 0x00000000, model64: 0x1e7590001e75c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e75c0001e761, model64: 0x1e7610001e764},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7640001e769, model64: 0x1e7690001e76f},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c5, match64: 0x00000000, model64: 0x1e76f0001e773},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c6, match64: 0x00000000, model64: 0xe6bf0000e6c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c7, match64: 0x00000000, model64: 0x1e7730001e77d},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c8, match64: 0x00000000, model64: 0x1e77d0001e781},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c9, match64: 0x00000000, model64: 0x1e7810001e785},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ca, match64: 0x00000000, model64: 0x1e7850001e789},
		modelTuple{type64: 0x2700000027, matchRI: 0x22cb, match64: 0x00000000, model64: 0x1e7890001e794},
		modelTuple{type64: 0x2700000027, matchRI: 0x22cc, match64: 0x00000000, model64: 0x1e7940001e798},
		modelTuple{type64: 0x2700000027, matchRI: 0x22cd, match64: 0x00000000, model64: 0x1e7980001e79c},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ce, match64: 0x00000000, model64: 0x1e7730001e77d},
		modelTuple{type64: 0x2700000027, matchRI: 0x22cf, match64: 0x00000000, model64: 0x1e79c0001e7a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7a20001e7a8, model64: 0x1e7a80001e7af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7af0001e7b4, model64: 0x1e7b40001e7b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7b70001e7bd, model64: 0x1e7bd0001e7c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7c00001e7c5, model64: 0x1e7c50001e7cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d0, match64: 0x00000000, model64: 0x1e7cb0001e7cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d1, match64: 0x00000000, model64: 0x1e7cf0001e7d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d2, match64: 0x00000000, model64: 0x1e7d30001e7d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d3, match64: 0x00000000, model64: 0x1e7d70001e7da},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d4, match64: 0x00000000, model64: 0x1e7da0001e7de},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d5, match64: 0x00000000, model64: 0x1e7de0001e7e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d6, match64: 0x00000000, model64: 0x1e7e20001e7e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d7, match64: 0x00000000, model64: 0x1e5df0001e5e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d8, match64: 0x00000000, model64: 0x1e7e60001e7e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7e80001e7ed, model64: 0x1e7ed0001e7f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d9, match64: 0x00000000, model64: 0x1e7f00001e7fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x22da, match64: 0x00000000, model64: 0x1e7fb0001e7fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x22db, match64: 0x00000000, model64: 0x1e7fe0001e804},
		modelTuple{type64: 0x2700000027, matchRI: 0x22dc, match64: 0x00000000, model64: 0x1e8040001e80e},
		modelTuple{type64: 0x2700000027, matchRI: 0x22dd, match64: 0x00000000, model64: 0x1e80e0001e812},
		modelTuple{type64: 0x2700000027, matchRI: 0x22de, match64: 0x00000000, model64: 0x1e8120001e815},
		modelTuple{type64: 0x2700000027, matchRI: 0x22df, match64: 0x00000000, model64: 0x1e8150001e819},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8190001e81f, model64: 0x1e81f0001e822},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e0, match64: 0x00000000, model64: 0x16db300016db6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8220001e827, model64: 0x1e8270001e82e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e82e0001e834, model64: 0x1e8340001e838},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e1, match64: 0x00000000, model64: 0x1e8380001e83b},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e2, match64: 0x00000000, model64: 0x1e83b0001e83f},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e3, match64: 0x00000000, model64: 0x1e83f0001e843},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e4, match64: 0x00000000, model64: 0x1e8430001e84e},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e5, match64: 0x00000000, model64: 0x1e84e0001e851},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e6, match64: 0x00000000, model64: 0x1e8510001e854},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e7, match64: 0x00000000, model64: 0x1e8540001e857},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e8, match64: 0x00000000, model64: 0x12ed100012ed4},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e9, match64: 0x00000000, model64: 0x1e8570001e85b},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ea, match64: 0x00000000, model64: 0x1e85b0001e85e},
		modelTuple{type64: 0x2700000027, matchRI: 0x22eb, match64: 0x00000000, model64: 0x1e85e0001e868},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ec, match64: 0x00000000, model64: 0x1e8680001e86c},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ed, match64: 0x00000000, model64: 0x1e8150001e819},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ee, match64: 0x00000000, model64: 0x1e86c0001e870},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ef, match64: 0x00000000, model64: 0x1e8700001e873},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f0, match64: 0x00000000, model64: 0x1e8730001e877},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f1, match64: 0x00000000, model64: 0x1e8770001e87a},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f2, match64: 0x00000000, model64: 0x1e87a0001e87e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e87e0001e884, model64: 0x1e8840001e88b},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f3, match64: 0x00000000, model64: 0x1e88b0001e88f},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f4, match64: 0x00000000, model64: 0x1e88f0001e893},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f5, match64: 0x00000000, model64: 0x1e8930001e89e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e89e0001e8a5, model64: 0x1e8a50001e8ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8ac0001e8b1, model64: 0x1e8b10001e8b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8b70001e8bc, model64: 0x1e8bc0001e8bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8bf0001e8c5, model64: 0x1e8c50001e8c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f6, match64: 0x00000000, model64: 0x1e8c90001e8cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f7, match64: 0x00000000, model64: 0x1e8cc0001e8cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f8, match64: 0x00000000, model64: 0x1e8cf0001e8d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f9, match64: 0x00000000, model64: 0x1e8d30001e8d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fa, match64: 0x00000000, model64: 0x1e8d70001e8da},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fb, match64: 0x00000000, model64: 0x1e8da0001e8de},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fc, match64: 0x00000000, model64: 0x1e8de0001e8e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fd, match64: 0x00000000, model64: 0x1e8e10001e8eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fe, match64: 0x00000000, model64: 0x1e8eb0001e8ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ff, match64: 0x00000000, model64: 0x1e8ef0001e8f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8f50001e8fb, model64: 0x1e8fb0001e8ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2300, match64: 0x00000000, model64: 0x1e8ff0001e902},
		modelTuple{type64: 0x2700000027, matchRI: 0x2301, match64: 0x00000000, model64: 0x1e9020001e905},
		modelTuple{type64: 0x2700000027, matchRI: 0x2302, match64: 0x00000000, model64: 0x1e9050001e909},
		modelTuple{type64: 0x2700000027, matchRI: 0x2303, match64: 0x00000000, model64: 0x1e9090001e90d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2304, match64: 0x00000000, model64: 0x1e90d0001e910},
		modelTuple{type64: 0x2700000027, matchRI: 0x2305, match64: 0x00000000, model64: 0x1e9100001e917},
		modelTuple{type64: 0x2700000027, matchRI: 0x2306, match64: 0x00000000, model64: 0x1e9170001e91a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2307, match64: 0x00000000, model64: 0x1e91a0001e91d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2308, match64: 0x00000000, model64: 0x1e91d0001e920},
		modelTuple{type64: 0x2700000027, matchRI: 0x2309, match64: 0x00000000, model64: 0x1e9200001e924},
		modelTuple{type64: 0x2700000027, matchRI: 0x230a, match64: 0x00000000, model64: 0x1e9240001e927},
		modelTuple{type64: 0x2700000027, matchRI: 0x230b, match64: 0x00000000, model64: 0x1e9270001e92b},
		modelTuple{type64: 0x2700000027, matchRI: 0x230c, match64: 0x00000000, model64: 0x1e92b0001e936},
		modelTuple{type64: 0x2700000027, matchRI: 0x230d, match64: 0x00000000, model64: 0x1e9200001e924},
		modelTuple{type64: 0x2700000027, matchRI: 0x230e, match64: 0x00000000, model64: 0x1e9360001e939},
		modelTuple{type64: 0x2700000027, matchRI: 0x230f, match64: 0x00000000, model64: 0x1e9390001e93d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2310, match64: 0x00000000, model64: 0x1e93d0001e940},
		modelTuple{type64: 0x2700000027, matchRI: 0x2311, match64: 0x00000000, model64: 0x1e9400001e943},
		modelTuple{type64: 0x2700000027, matchRI: 0x2312, match64: 0x00000000, model64: 0x1e9430001e945},
		modelTuple{type64: 0x2700000027, matchRI: 0x2313, match64: 0x00000000, model64: 0x1e9450001e94b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2314, match64: 0x00000000, model64: 0x1e94b0001e94e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2315, match64: 0x00000000, model64: 0x1e94e0001e951},
		modelTuple{type64: 0x2700000027, matchRI: 0x2316, match64: 0x00000000, model64: 0xed400000ed42},
		modelTuple{type64: 0x2700000027, matchRI: 0x2317, match64: 0x00000000, model64: 0x1e9510001e954},
		modelTuple{type64: 0x2700000027, matchRI: 0x2318, match64: 0x00000000, model64: 0xf7830000f785},
		modelTuple{type64: 0x2700000027, matchRI: 0x2319, match64: 0x00000000, model64: 0x1e9540001e957},
		modelTuple{type64: 0x2700000027, matchRI: 0x231a, match64: 0x00000000, model64: 0x1e9570001e961},
		modelTuple{type64: 0x2700000027, matchRI: 0x231b, match64: 0x00000000, model64: 0xed4c0000ed4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x231c, match64: 0x00000000, model64: 0x1e9610001e967},
		modelTuple{type64: 0x2700000027, matchRI: 0x231d, match64: 0x00000000, model64: 0x1e9670001e96b},
		modelTuple{type64: 0x2700000027, matchRI: 0x231e, match64: 0x00000000, model64: 0x1e96b0001e971},
		modelTuple{type64: 0x2700000027, matchRI: 0x231f, match64: 0x00000000, model64: 0x1e9710001e979},
		modelTuple{type64: 0x2700000027, matchRI: 0x2320, match64: 0x00000000, model64: 0x1e9790001e97c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2321, match64: 0x00000000, model64: 0x4e4d00004e50},
		modelTuple{type64: 0x2700000027, matchRI: 0x2322, match64: 0x00000000, model64: 0x1e62d0001e633},
		modelTuple{type64: 0x2700000027, matchRI: 0x2323, match64: 0x00000000, model64: 0x1e97c0001e980},
		modelTuple{type64: 0x2700000027, matchRI: 0x2324, match64: 0x00000000, model64: 0x3f1200003f15},
		modelTuple{type64: 0x2700000027, matchRI: 0x2325, match64: 0x00000000, model64: 0x1e9800001e98a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2326, match64: 0x00000000, model64: 0x1e98a0001e993},
		modelTuple{type64: 0x2700000027, matchRI: 0x2327, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2328, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9980001e99e, model64: 0x1e9980001e99e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e99e0001e9a5, model64: 0x1e99e0001e9a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9a50001e9ac, model64: 0x1e9a50001e9ac},
		modelTuple{type64: 0x20d00000213, matchRI: 0x232a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x232c, match64: 0x00000000, model64: 0x1e9b10001e9ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x232d, match64: 0x00000000, model64: 0x1e9ba0001e9c6},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x1e9cd0001e9dc, model64: 0x1e9cd0001e9dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x232f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9e40001e9eb, model64: 0x1e9eb0001e9f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9f50001e9fb, model64: 0x1e9fb0001ea03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ea030001ea08, model64: 0x1ea080001ea13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ea130001ea18, model64: 0x1ea180001ea25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ea250001ea2c, model64: 0x1ea2c0001ea39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ea390001ea40, model64: 0x1ea400001ea4c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ea4c0001ea53, model64: 0x1ea530001ea64},
		modelTuple{type64: 0x2700000027, matchRI: 0x2331, match64: 0x00000000, model64: 0x1ea640001ea71},
		modelTuple{type64: 0x2700000027, matchRI: 0x2332, match64: 0x00000000, model64: 0x1ea710001ea79},
		modelTuple{type64: 0x2700000027, matchRI: 0x2333, match64: 0x00000000, model64: 0x1ea790001ea81},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ea810001ea88, model64: 0x1ea880001ea90},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ea900001ea97, model64: 0x1ea970001eaa4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eaa40001eaaa, model64: 0x1eaaa0001eab2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eab20001eab9, model64: 0x1ea880001ea90},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eab90001eac0, model64: 0x1eac00001eac8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eac80001eacf, model64: 0x1eacf0001ead8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ead80001eadf, model64: 0x1eadf0001eaec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eaec0001eaf9, model64: 0x1eaf90001eb06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb060001eb0d, model64: 0x1eb0d0001eb1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb1a0001eb21, model64: 0x1eb210001eb29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb290001eb30, model64: 0x1e9fb0001ea03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb300001eb37, model64: 0x1eb370001eb40},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb400001eb47, model64: 0x1eb470001eb57},
		modelTuple{type64: 0x2700000027, matchRI: 0x2334, match64: 0x00000000, model64: 0x1e9eb0001e9f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2335, match64: 0x00000000, model64: 0xc6e50000c6ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2336, match64: 0x00000000, model64: 0x1eb570001eb63},
		modelTuple{type64: 0x2700000027, matchRI: 0x2337, match64: 0x00000000, model64: 0x1eb630001eb6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2338, match64: 0x00000000, model64: 0x1eb6b0001eb78},
		modelTuple{type64: 0x2700000027, matchRI: 0x2339, match64: 0x00000000, model64: 0x1eb780001eb85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb850001eb96, model64: 0x1eb960001eba0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eba00001eba6, model64: 0x1eba60001ebb3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ebb30001ebb9, model64: 0x1ebb90001ebc6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ebc60001ebcd, model64: 0x1ebcd0001ebda},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ebda0001ebe1, model64: 0x1ebe10001ebec},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ebec0001ebf3, model64: 0x1ebf30001ebfe},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ebfe0001ec06, model64: 0x1ec060001ec10},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ec100001ec18, model64: 0x1ec180001ec24},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ec240001ec2c, model64: 0x1ec2c0001ec37},
		modelTuple{type64: 0x20d00000213, matchRI: 0x233a, match64: 0x00000000, model64: 0x1ec370001ec43},
		modelTuple{type64: 0x20d00000213, matchRI: 0x233b, match64: 0x00000000, model64: 0x1ec430001ec4f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x233c, match64: 0x00000000, model64: 0x1ec4f0001ec5a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x233d, match64: 0x00000000, model64: 0x1be0b0001be16},
		modelTuple{type64: 0x20d00000213, matchRI: 0x233e, match64: 0x00000000, model64: 0x1ec5a0001ec66},
		modelTuple{type64: 0x20d00000213, matchRI: 0x233f, match64: 0x00000000, model64: 0x1ec660001ec74},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2340, match64: 0x00000000, model64: 0x1ec740001ec83},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2341, match64: 0x00000000, model64: 0x1ec830001ec92},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2342, match64: 0x00000000, model64: 0x1ec920001eca2},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2343, match64: 0x00000000, model64: 0xd55c0000d55e},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x1eca20001eca8, model64: 0x1eca80001ecaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2344, match64: 0x00000000, model64: 0x1ecaf0001ecb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2345, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2346, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2349, match64: 0x00000000, model64: 0x1ecbb0001ecc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x234a, match64: 0x00000000, model64: 0x1ecc10001ecc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x234b, match64: 0x00000000, model64: 0x1ecc80001ecd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x234c, match64: 0x00000000, model64: 0x1ecd10001ecd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x234d, match64: 0x00000000, model64: 0x1ecd70001ecdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x234e, match64: 0x00000000, model64: 0x1ecdd0001ece4},
		modelTuple{type64: 0x2700000027, matchRI: 0x234f, match64: 0x00000000, model64: 0x1ece40001eceb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2350, match64: 0x00000000, model64: 0x1eceb0001ecf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2351, match64: 0x00000000, model64: 0x1ecf20001ecf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2352, match64: 0x00000000, model64: 0x1ecf80001ed00},
		modelTuple{type64: 0x2700000027, matchRI: 0x2353, match64: 0x00000000, model64: 0x1ed000001ed06},
		modelTuple{type64: 0x2700000027, matchRI: 0x2354, match64: 0x00000000, model64: 0x1ed060001ed0e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ed0e0001ed17, model64: 0x1ed170001ed20},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2355, match64: 0x00000000, model64: 0x1166200011669},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ed200001ed2d, model64: 0x1ed2d0001ed3c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2356, match64: 0x00000000, model64: 0x1ed3c0001ed45},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2357, match64: 0x00000000, model64: 0x1ed450001ed4e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2358, match64: 0x00000000, model64: 0x1ed4e0001ed56},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2359, match64: 0x00000000, model64: 0x1ed560001ed67},
		modelTuple{type64: 0x20d00000213, matchRI: 0x235a, match64: 0x00000000, model64: 0x1ed670001ed70},
		modelTuple{type64: 0x20d00000213, matchRI: 0x235b, match64: 0x00000000, model64: 0x1ed700001ed77},
		modelTuple{type64: 0x20d00000213, matchRI: 0x235c, match64: 0x00000000, model64: 0x76c2000076c9},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ed770001ed7e, model64: 0x1ed7e0001ed85},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1ed850001ed8e, model64: 0x1ed8e0001ed97},
		modelTuple{type64: 0x20d00000213, matchRI: 0x235d, match64: 0x00000000, model64: 0x1ed970001ed9e},
		modelTuple{type64: 0xa01b0000a030, matchRI: 0x235e, match64: 0x00000000, model64: 0x1ed9e0001eda9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2360, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2361, match64: 0x00000000, model64: 0x1edaf0001edb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2362, match64: 0x00000000, model64: 0x1edb60001edbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2363, match64: 0x00000000, model64: 0x1edbc0001edc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2364, match64: 0x00000000, model64: 0x1edc90001edd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2365, match64: 0x00000000, model64: 0x1edd10001edd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2366, match64: 0x00000000, model64: 0x1edd90001ede0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ede60001edee, model64: 0x1ede60001edee},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2368, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1edf40001ee01, model64: 0x1ee010001ee0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ee0f0001ee14, model64: 0x1ee140001ee1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ee1a0001ee24, model64: 0x1ee240001ee2e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1e62d0001e633},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x236e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x236f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2370, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2373, match64: 0x00000000, model64: 0x1ee470001ee4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2374, match64: 0x00000000, model64: 0x1007400010079},
		modelTuple{type64: 0x2700000027, matchRI: 0x2375, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2377, match64: 0x00000000, model64: 0x1ee530001ee5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2378, match64: 0x00000000, model64: 0x1ee5e0001ee64},
		modelTuple{type64: 0x2700000027, matchRI: 0x2379, match64: 0x00000000, model64: 0x1ee640001ee71},
		modelTuple{type64: 0x2700000027, matchRI: 0x237a, match64: 0x00000000, model64: 0x1ee710001ee76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ee760001ee7e, model64: 0x1ee760001ee7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x237b, match64: 0x00000000, model64: 0x14deb00014dee},
		modelTuple{type64: 0x2700000027, matchRI: 0x237c, match64: 0x00000000, model64: 0x1ee7e0001ee85},
		modelTuple{type64: 0x2700000027, matchRI: 0x237d, match64: 0x00000000, model64: 0x1ee850001ee8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x237e, match64: 0x00000000, model64: 0x1ee8e0001ee94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ee940001ee9c, model64: 0x1ee940001ee9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ee9c0001eea0, model64: 0x1ee9c0001eea0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2380, match64: 0x00000000, model64: 0x1eea40001eeac},
		modelTuple{type64: 0x2700000027, matchRI: 0x2381, match64: 0x00000000, model64: 0x1eeac0001eeb6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eeb60001eec3, model64: 0x1eec30001eed0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eed00001eed9, model64: 0x1eed90001eee2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eee20001eeec, model64: 0x1eeec0001eef6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eef60001ef00, model64: 0x1eef60001ef00},
		modelTuple{type64: 0x2700000027, matchRI: 0x2382, match64: 0x00000000, model64: 0x1ef000001ef0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2383, match64: 0x00000000, model64: 0xc49e0000c4a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2384, match64: 0x00000000, model64: 0xa0300000a035},
		modelTuple{type64: 0x2700000027, matchRI: 0x2385, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2388, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2389, match64: 0x00000000, model64: 0x1ef160001ef1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x238a, match64: 0x00000000, model64: 0x1ef1f0001ef28},
		modelTuple{type64: 0x20d00000213, matchRI: 0x238c, match64: 0x00000000, model64: 0x1ef2f0001ef38},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1ef460001ef55},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2392, match64: 0x00000000, model64: 0x1ef5b0001ef6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ef6a0001ef7b, model64: 0x1ef7b0001ef8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ef8c0001ef99, model64: 0x1ef990001efa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2393, match64: 0x00000000, model64: 0x1efa60001efb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2394, match64: 0x00000000, model64: 0x1efb20001efbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2395, match64: 0x00000000, model64: 0x1efbf0001efcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2396, match64: 0x00000000, model64: 0x1efcd0001efd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2397, match64: 0x00000000, model64: 0x1efd50001efe2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2398, match64: 0x00000000, model64: 0x103120001031a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2399, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1efe90001eff2},
		modelTuple{type64: 0x9d7000009de, matchRI: 0x239c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f0030001f00b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f0200001f028, model64: 0x1f0280001f030},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f0460001f052, model64: 0x1f0520001f061},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x23a5, match64: 0x00000000, model64: 0x1f0700001f077},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x23a6, match64: 0x00000000, model64: 0x1f0770001f07e},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x23a7, match64: 0x00000000, model64: 0x1f07e0001f083},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x23a8, match64: 0x00000000, model64: 0x1f0830001f08d},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a9, match64: 0x00000000, model64: 0x1f08d0001f094},
		modelTuple{type64: 0x2700000027, matchRI: 0x23aa, match64: 0x00000000, model64: 0x1f0940001f09f},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ab, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ac, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ad, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f0ab0001f0b2, model64: 0x1f0b20001f0be},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b2, match64: 0x00000000, model64: 0x1f0cd0001f0cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b3, match64: 0x00000000, model64: 0x345b0000345d},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b4, match64: 0x00000000, model64: 0x1f0cf0001f0d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b5, match64: 0x00000000, model64: 0x1f0d30001f0dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b6, match64: 0x00000000, model64: 0x1f0dc0001f0e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b7, match64: 0x00000000, model64: 0x1f0e50001f0ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b8, match64: 0x00000000, model64: 0x1f0ee0001f0f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b9, match64: 0x00000000, model64: 0x1f0f90001f0ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ba, match64: 0x00000000, model64: 0x1f0ff0001f106},
		modelTuple{type64: 0x2700000027, matchRI: 0x23bb, match64: 0x00000000, model64: 0x1f1060001f112},
		modelTuple{type64: 0x2700000027, matchRI: 0x23bc, match64: 0x00000000, model64: 0x1f1120001f11e},
		modelTuple{type64: 0x2700000027, matchRI: 0x23bd, match64: 0x00000000, model64: 0x1f11e0001f127},
		modelTuple{type64: 0x2700000027, matchRI: 0x23be, match64: 0x00000000, model64: 0x1f1270001f131},
		modelTuple{type64: 0x2700000027, matchRI: 0x23bf, match64: 0x00000000, model64: 0x1f1310001f135},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c0, match64: 0x00000000, model64: 0x1f1350001f13a},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c1, match64: 0x00000000, model64: 0x1f13a0001f142},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c2, match64: 0x00000000, model64: 0x1f1420001f14e},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c3, match64: 0x00000000, model64: 0x1f14e0001f156},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c4, match64: 0x00000000, model64: 0x1f1560001f15b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f15b0001f167, model64: 0x1f1670001f173},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c5, match64: 0x00000000, model64: 0x1f1730001f17d},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c6, match64: 0x00000000, model64: 0x4ea000004ea7},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c7, match64: 0x00000000, model64: 0x1f17d0001f185},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c8, match64: 0x00000000, model64: 0x1f1850001f18d},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c9, match64: 0x00000000, model64: 0x1f18d0001f195},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ca, match64: 0x00000000, model64: 0x1f1950001f19e},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cb, match64: 0x00000000, model64: 0x1f19e0001f1a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cc, match64: 0x00000000, model64: 0x1f1a40001f1a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cd, match64: 0x00000000, model64: 0x1f1a80001f1ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ce, match64: 0x00000000, model64: 0x1f1ad0001f1b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cf, match64: 0x00000000, model64: 0x1f1b20001f1b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d0, match64: 0x00000000, model64: 0x1f1b70001f1bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f1bc0001f1c5, model64: 0x1f1c50001f1ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f1ce0001f1d4, model64: 0x1f1d40001f1db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f1db0001f1e5, model64: 0x1f1e50001f1ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d1, match64: 0x00000000, model64: 0x1f1ec0001f1f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d2, match64: 0x00000000, model64: 0x1f1f30001f1f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d3, match64: 0x00000000, model64: 0x1f1f80001f1ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d4, match64: 0x00000000, model64: 0x1f1ff0001f204},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d5, match64: 0x00000000, model64: 0x1f2040001f207},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d6, match64: 0x00000000, model64: 0x1f2070001f20d},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d7, match64: 0x00000000, model64: 0x1f20d0001f211},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2110001f217, model64: 0x1f2170001f21e},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d8, match64: 0x00000000, model64: 0x1e1460001e14a},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d9, match64: 0x00000000, model64: 0x1ba0e0001ba14},
		modelTuple{type64: 0x2700000027, matchRI: 0x23da, match64: 0x00000000, model64: 0x1f21e0001f224},
		modelTuple{type64: 0x2700000027, matchRI: 0x23db, match64: 0x00000000, model64: 0x1f1ff0001f204},
		modelTuple{type64: 0x2700000027, matchRI: 0x23dc, match64: 0x00000000, model64: 0x1f2240001f22f},
		modelTuple{type64: 0x2700000027, matchRI: 0x23dd, match64: 0x00000000, model64: 0x1f22f0001f23b},
		modelTuple{type64: 0x2700000027, matchRI: 0x23de, match64: 0x00000000, model64: 0x1f23b0001f243},
		modelTuple{type64: 0x2700000027, matchRI: 0x23df, match64: 0x00000000, model64: 0x1f2430001f248},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e0, match64: 0x00000000, model64: 0x1f2480001f24d},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e1, match64: 0x00000000, model64: 0x1f24d0001f255},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e2, match64: 0x00000000, model64: 0x1f2550001f25b},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e3, match64: 0x00000000, model64: 0x1f25b0001f267},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e4, match64: 0x00000000, model64: 0x1f2670001f26e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f26e0001f274, model64: 0x1f2740001f280},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e5, match64: 0x00000000, model64: 0x1f2800001f28c},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e6, match64: 0x00000000, model64: 0x1f28c0001f293},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2930001f29c, model64: 0x1f29c0001f2a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2a80001f2b2, model64: 0x1f2b20001f2b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2b90001f2c3, model64: 0x1f2c30001f2ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e7, match64: 0x00000000, model64: 0x1f2ca0001f2d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e8, match64: 0x00000000, model64: 0x1baf00001baf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e9, match64: 0x00000000, model64: 0x1f2d60001f2dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ea, match64: 0x00000000, model64: 0x1f2dd0001f2e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x23eb, match64: 0x00000000, model64: 0x1f2e90001f2f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ec, match64: 0x00000000, model64: 0x1f2f00001f2f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ed, match64: 0x00000000, model64: 0x1f2f50001f2f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ee, match64: 0x00000000, model64: 0x1f2f80001f2fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2fd0001f303, model64: 0x1f3030001f30a},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ef, match64: 0x00000000, model64: 0x1f30a0001f312},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f0, match64: 0x00000000, model64: 0x1f3120001f315},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f1, match64: 0x00000000, model64: 0x1f3150001f320},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f2, match64: 0x00000000, model64: 0x1f3200001f328},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f3, match64: 0x00000000, model64: 0x1f3280001f32f},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f4, match64: 0x00000000, model64: 0x1f32f0001f333},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f5, match64: 0x00000000, model64: 0x1f3330001f33a},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f6, match64: 0x00000000, model64: 0x1f33a0001f346},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f7, match64: 0x00000000, model64: 0x1f3460001f34d},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f8, match64: 0x00000000, model64: 0x1f34d0001f358},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f9, match64: 0x00000000, model64: 0x1f3580001f364},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fa, match64: 0x00000000, model64: 0x1f3640001f36a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f36a0001f371, model64: 0x1f3710001f37b},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fb, match64: 0x00000000, model64: 0x1f37b0001f384},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fc, match64: 0x00000000, model64: 0x1f3840001f38f},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fd, match64: 0x00000000, model64: 0x1f38f0001f396},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fe, match64: 0x00000000, model64: 0x1f3960001f3a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3a00001f3a5, model64: 0x1f3a50001f3ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3ae0001f3b7, model64: 0x1f3b70001f3bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3bb0001f3c1, model64: 0x47360000473c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3c10001f3c7, model64: 0x1f3c70001f3d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3d10001f3d7, model64: 0x7ffe00008006},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ff, match64: 0x00000000, model64: 0x1f3d70001f3de},
		modelTuple{type64: 0x2700000027, matchRI: 0x2400, match64: 0x00000000, model64: 0x1f3de0001f3e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3e90001f3ef, model64: 0x1f3ef0001f3f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3f50001f3ff, model64: 0x1f3ff0001f40a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2401, match64: 0x00000000, model64: 0x12ed100012ed4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f40a0001f414, model64: 0x12ed100012ed4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4140001f41a, model64: 0x1e85b0001e85e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f41a0001f420, model64: 0x1e8700001e873},
		modelTuple{type64: 0x2700000027, matchRI: 0x2402, match64: 0x00000000, model64: 0x1f4200001f423},
		modelTuple{type64: 0x2700000027, matchRI: 0x2403, match64: 0x00000000, model64: 0x1f4230001f426},
		modelTuple{type64: 0x2700000027, matchRI: 0x2404, match64: 0x00000000, model64: 0x1f4260001f42e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f42e0001f434, model64: 0x1f4340001f437},
		modelTuple{type64: 0x2700000027, matchRI: 0x2405, match64: 0x00000000, model64: 0x1f4370001f43a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f43a0001f440, model64: 0x1e9020001e905},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4400001f446, model64: 0x1f4460001f449},
		modelTuple{type64: 0x2700000027, matchRI: 0x2406, match64: 0x00000000, model64: 0x474200004748},
		modelTuple{type64: 0x2700000027, matchRI: 0x2407, match64: 0x00000000, model64: 0x1f4490001f453},
		modelTuple{type64: 0x2700000027, matchRI: 0x2408, match64: 0x00000000, model64: 0x1f4530001f459},
		modelTuple{type64: 0x2700000027, matchRI: 0x2409, match64: 0x00000000, model64: 0x1f4590001f464},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4640001f46e, model64: 0x1f0d30001f0dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x240a, match64: 0x00000000, model64: 0x1f46e0001f472},
		modelTuple{type64: 0x2700000027, matchRI: 0x240b, match64: 0x00000000, model64: 0x1f4720001f478},
		modelTuple{type64: 0x2700000027, matchRI: 0x240c, match64: 0x00000000, model64: 0x1f4780001f47e},
		modelTuple{type64: 0x2700000027, matchRI: 0x240d, match64: 0x00000000, model64: 0x1f47e0001f484},
		modelTuple{type64: 0x2700000027, matchRI: 0x240e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2410, match64: 0x00000000, model64: 0x1f48c0001f493},
		modelTuple{type64: 0x2700000027, matchRI: 0x2411, match64: 0x00000000, model64: 0x37200000375},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4930001f4a3, model64: 0x1f4a30001f4aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2412, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2413, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2414, match64: 0x00000000, model64: 0x1f4aa0001f4b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2415, match64: 0x00000000, model64: 0x1f4b40001f4bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4bb0001f4c4, model64: 0x4a0000004a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4c90001f4d5, model64: 0x1f4d50001f4e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2418, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2419, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4eb0001f4f2, model64: 0x1f4f20001f4fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x241b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x241c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2e8000002f5, matchRI: 0x241d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x241f, match64: 0x00000000, model64: 0x1f5010001f508},
		modelTuple{type64: 0x2700000027, matchRI: 0x2420, match64: 0x00000000, model64: 0x1f5080001f50b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2421, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2422, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2423, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2425, match64: 0x00000000, model64: 0x8fbf00008fc1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f51a0001f51e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2429, match64: 0x00000000, model64: 0x1f5330001f540},
		modelTuple{type64: 0x2700000027, matchRI: 0x242a, match64: 0x00000000, model64: 0x1f5400001f548},
		modelTuple{type64: 0x2700000027, matchRI: 0x242b, match64: 0x00000000, model64: 0x1f5400001f548},
		modelTuple{type64: 0x2700000027, matchRI: 0x242c, match64: 0x00000000, model64: 0x1f5480001f552},
		modelTuple{type64: 0x20d00000213, matchRI: 0x242d, match64: 0x00000000, model64: 0x1f5520001f563},
		modelTuple{type64: 0x20d00000213, matchRI: 0x242e, match64: 0x00000000, model64: 0x1f5630001f56b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f5730001f57a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f57f0001f584, model64: 0x1f5840001f58b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f58b0001f590, model64: 0x1f5900001f595},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f5950001f59e, model64: 0x1f59e0001f5a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f5a80001f5ad, model64: 0x1f5ad0001f5b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f5b20001f5b7, model64: 0x1f5b70001f5bd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f5c40001f5d3, model64: 0x1f5d30001f5da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f5da0001f5e9, model64: 0x1f5e90001f5f4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f5fc0001f608},
		modelTuple{type64: 0x2700000027, matchRI: 0x2435, match64: 0x00000000, model64: 0x1f60e0001f617},
		modelTuple{type64: 0x2700000027, matchRI: 0x2436, match64: 0x00000000, model64: 0x1f6170001f61c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2437, match64: 0x00000000, model64: 0x58b5000058ba},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2438, match64: 0x00000000, model64: 0x1f61c0001f624},
		modelTuple{type64: 0x2700000027, matchRI: 0x2439, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f6290001f630},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f63c0001f646},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f64c0001f65c, model64: 0x1f65c0001f666},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f6660001f672, model64: 0x1f6720001f678},
		modelTuple{type64: 0x20d00000213, matchRI: 0x243e, match64: 0x00000000, model64: 0x1f6780001f680},
		modelTuple{type64: 0x20d00000213, matchRI: 0x243f, match64: 0x00000000, model64: 0x1f6800001f68b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2440, match64: 0x00000000, model64: 0x1f68b0001f695},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2441, match64: 0x00000000, model64: 0x1f6950001f69f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2442, match64: 0x00000000, model64: 0x1f69f0001f6aa},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2443, match64: 0x00000000, model64: 0x1f6aa0001f6b6},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f6b60001f6c5, model64: 0x1f6c50001f6ce},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f6ce0001f6d7, model64: 0x1f6d70001f6e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2444, match64: 0x00000000, model64: 0x1f6e10001f6e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2445, match64: 0x00000000, model64: 0x1e5dc0001e5df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f6e80001f6f1, model64: 0x1f6f10001f6f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2446, match64: 0x00000000, model64: 0x1f6f80001f6ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2447, match64: 0x00000000, model64: 0x1f6ff0001f708},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f7080001f716, model64: 0x1f7160001f724},
		modelTuple{type64: 0x2700000027, matchRI: 0x2448, match64: 0x00000000, model64: 0x1f7240001f72c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2449, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x244b, match64: 0x00000000, model64: 0x1f7320001f739},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f7390001f743, model64: 0x1f7430001f74d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f74d0001f75c, model64: 0x1f75c0001f76b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f76b0001f776, model64: 0x1f7760001f781},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f7810001f792, model64: 0x1f7920001f7a3},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f7a30001f7af, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f7ba0001f7c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f7c30001f7ce, model64: 0x1f7ce0001f7d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f7d60001f7e7, model64: 0x1f7e70001f7f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f7f50001f7fd, model64: 0x1f7fd0001f800},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f8000001f80c, model64: 0x1f80c0001f815},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f8150001f81f, model64: 0x1f81f0001f826},
		modelTuple{type64: 0x2700000027, matchRI: 0x244f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2450, match64: 0x00000000, model64: 0x1f82e0001f834},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2457, match64: 0x00000000, model64: 0x1e6f90001e6fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2458, match64: 0x00000000, model64: 0x1e7530001e756},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x1f85b0001f862, model64: 0x1f8620001f865},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2459, match64: 0x00000000, model64: 0x1f7c00001f7c3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x245c, match64: 0x00000000, model64: 0x1f8750001f886},
		modelTuple{type64: 0x2700000027, matchRI: 0x245d, match64: 0x00000000, model64: 0x4e3a00004e40},
		modelTuple{type64: 0x2700000027, matchRI: 0x245e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x245f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2460, match64: 0x00000000, model64: 0x1f8860001f895},
		modelTuple{type64: 0x2700000027, matchRI: 0x2461, match64: 0x00000000, model64: 0x1f8950001f89d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2462, match64: 0x00000000, model64: 0x1f89d0001f8ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x2463, match64: 0x00000000, model64: 0x1f8ae0001f8bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2464, match64: 0x00000000, model64: 0x1f8bb0001f8c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2466, match64: 0x00000000, model64: 0x1f8cc0001f8d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f8d70001f8dd, model64: 0x1f8dd0001f8ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x2467, match64: 0x00000000, model64: 0x1f8ed0001f8fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2468, match64: 0x00000000, model64: 0x1f8fa0001f90b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2469, match64: 0x00000000, model64: 0x1f90b0001f918},
		modelTuple{type64: 0x2700000027, matchRI: 0x246a, match64: 0x00000000, model64: 0x1f9180001f929},
		modelTuple{type64: 0x2700000027, matchRI: 0x246b, match64: 0x00000000, model64: 0x1f9290001f939},
		modelTuple{type64: 0x2700000027, matchRI: 0x246c, match64: 0x00000000, model64: 0x1f9390001f94d},
		modelTuple{type64: 0x2700000027, matchRI: 0x246d, match64: 0x00000000, model64: 0x1f94d0001f95e},
		modelTuple{type64: 0x2700000027, matchRI: 0x246e, match64: 0x00000000, model64: 0x1f95e0001f96b},
		modelTuple{type64: 0x2700000027, matchRI: 0x246f, match64: 0x00000000, model64: 0x1f96b0001f978},
		modelTuple{type64: 0x2700000027, matchRI: 0x2470, match64: 0x00000000, model64: 0x1f9780001f989},
		modelTuple{type64: 0x2700000027, matchRI: 0x2471, match64: 0x00000000, model64: 0x1f9890001f997},
		modelTuple{type64: 0x2700000027, matchRI: 0x2472, match64: 0x00000000, model64: 0x1f9970001f9a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2473, match64: 0x00000000, model64: 0x1f9a00001f9a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2474, match64: 0x00000000, model64: 0x1f9a90001f9af},
		modelTuple{type64: 0x2700000027, matchRI: 0x2475, match64: 0x00000000, model64: 0x1f9af0001f9ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x2476, match64: 0x00000000, model64: 0x1f9ba0001f9c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2477, match64: 0x00000000, model64: 0x1f9c20001f9cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9cd0001f9d6, model64: 0x1f9cd0001f9d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2478, match64: 0x00000000, model64: 0x1f9d60001f9dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2479, match64: 0x00000000, model64: 0x1f9dd0001f9e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x247a, match64: 0x00000000, model64: 0x1f9e40001f9e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x247b, match64: 0x00000000, model64: 0x1f9e80001f9f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9f00001fa0a, model64: 0x1fa0a0001fa25},
		modelTuple{type64: 0x2700000027, matchRI: 0x247c, match64: 0x00000000, model64: 0x1fa250001fa30},
		modelTuple{type64: 0x2700000027, matchRI: 0x247d, match64: 0x00000000, model64: 0x1fa300001fa37},
		modelTuple{type64: 0x2700000027, matchRI: 0x247e, match64: 0x00000000, model64: 0x1fa370001fa3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x247f, match64: 0x00000000, model64: 0x1fa3c0001fa45},
		modelTuple{type64: 0x2700000027, matchRI: 0x2480, match64: 0x00000000, model64: 0x1fa450001fa4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2481, match64: 0x00000000, model64: 0x1fa4a0001fa5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2482, match64: 0x00000000, model64: 0x1fa5c0001fa62},
		modelTuple{type64: 0x2700000027, matchRI: 0x2483, match64: 0x00000000, model64: 0x1fa620001fa6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2484, match64: 0x00000000, model64: 0x1fa6c0001fa79},
		modelTuple{type64: 0x2700000027, matchRI: 0x2485, match64: 0x00000000, model64: 0x1fa790001fa87},
		modelTuple{type64: 0x2700000027, matchRI: 0x2486, match64: 0x00000000, model64: 0x1fa870001fa90},
		modelTuple{type64: 0x2700000027, matchRI: 0x2487, match64: 0x00000000, model64: 0x1fa900001fa9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2488, match64: 0x00000000, model64: 0x1fa9e0001faa4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2489, match64: 0x00000000, model64: 0x1faa40001fab1},
		modelTuple{type64: 0x2700000027, matchRI: 0x248a, match64: 0x00000000, model64: 0x1fab10001fab7},
		modelTuple{type64: 0x2700000027, matchRI: 0x248b, match64: 0x00000000, model64: 0x1fab70001fabd},
		modelTuple{type64: 0x2700000027, matchRI: 0x248c, match64: 0x00000000, model64: 0x1fabd0001fac7},
		modelTuple{type64: 0x2700000027, matchRI: 0x248d, match64: 0x00000000, model64: 0x1fac70001facd},
		modelTuple{type64: 0x2700000027, matchRI: 0x248e, match64: 0x00000000, model64: 0x1facd0001fadd},
		modelTuple{type64: 0x2700000027, matchRI: 0x248f, match64: 0x00000000, model64: 0x1fadd0001faea},
		modelTuple{type64: 0x2700000027, matchRI: 0x2490, match64: 0x00000000, model64: 0x1faea0001faf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2491, match64: 0x00000000, model64: 0x1faf40001faff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2492, match64: 0x00000000, model64: 0x1faff0001fb08},
		modelTuple{type64: 0x2700000027, matchRI: 0x2493, match64: 0x00000000, model64: 0x1fb080001fb0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2494, match64: 0x00000000, model64: 0x1fb0e0001fb10},
		modelTuple{type64: 0x2700000027, matchRI: 0x2495, match64: 0x00000000, model64: 0xc7c00000c7cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2496, match64: 0x00000000, model64: 0x1fb100001fb13},
		modelTuple{type64: 0x2700000027, matchRI: 0x2497, match64: 0x00000000, model64: 0x1fb130001fb23},
		modelTuple{type64: 0x2700000027, matchRI: 0x2498, match64: 0x00000000, model64: 0x1fb230001fb2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2499, match64: 0x00000000, model64: 0x1fb2a0001fb31},
		modelTuple{type64: 0x2700000027, matchRI: 0x249a, match64: 0x00000000, model64: 0x1fb310001fb34},
		modelTuple{type64: 0x2700000027, matchRI: 0x249b, match64: 0x00000000, model64: 0x1fb340001fb3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x249c, match64: 0x00000000, model64: 0x1fb3d0001fb44},
		modelTuple{type64: 0x2700000027, matchRI: 0x249d, match64: 0x00000000, model64: 0x1fb440001fb47},
		modelTuple{type64: 0x2700000027, matchRI: 0x249e, match64: 0x00000000, model64: 0x1fb470001fb4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x249f, match64: 0x00000000, model64: 0x1fb4d0001fb54},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a0, match64: 0x00000000, model64: 0x1fb540001fb56},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a1, match64: 0x00000000, model64: 0x1fb560001fb5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a2, match64: 0x00000000, model64: 0x1fb5e0001fb67},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a3, match64: 0x00000000, model64: 0x1fb670001fb7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a4, match64: 0x00000000, model64: 0x1fb7c0001fb83},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a5, match64: 0x00000000, model64: 0x1fb830001fb8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a6, match64: 0x00000000, model64: 0x1fb8c0001fb97},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a7, match64: 0x00000000, model64: 0x1fb970001fbaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a8, match64: 0x00000000, model64: 0x1fbaf0001fbb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a9, match64: 0x00000000, model64: 0x1fbb90001fbc3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fbc30001fbce, model64: 0x1fbce0001fbd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x24aa, match64: 0x00000000, model64: 0x1fbd30001fbd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ab, match64: 0x00000000, model64: 0x1fbd70001fbdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ac, match64: 0x00000000, model64: 0x1fbdd0001fbe2},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ad, match64: 0x00000000, model64: 0x1fbe20001fbe7},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ae, match64: 0x00000000, model64: 0x1fbe70001fbef},
		modelTuple{type64: 0x2700000027, matchRI: 0x24af, match64: 0x00000000, model64: 0x1fbef0001fbf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b0, match64: 0x00000000, model64: 0x1fbf80001fbfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b1, match64: 0x00000000, model64: 0x1fbfe0001fc08},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b2, match64: 0x00000000, model64: 0x1fc080001fc0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b3, match64: 0x00000000, model64: 0x1fc0d0001fc15},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b4, match64: 0x00000000, model64: 0x1fc150001fc20},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b5, match64: 0x00000000, model64: 0x1fc200001fc29},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b6, match64: 0x00000000, model64: 0x1fc290001fc36},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b7, match64: 0x00000000, model64: 0x1fc360001fc3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b8, match64: 0x00000000, model64: 0x1fc3f0001fc45},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b9, match64: 0x00000000, model64: 0x1fc450001fc4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ba, match64: 0x00000000, model64: 0x1fc4e0001fc5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fc5a0001fc66, model64: 0x1fc5a0001fc66},
		modelTuple{type64: 0x2700000027, matchRI: 0x24bb, match64: 0x00000000, model64: 0x1fc660001fc6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x24bc, match64: 0x00000000, model64: 0x1fc6d0001fc74},
		modelTuple{type64: 0x2700000027, matchRI: 0x24bd, match64: 0x00000000, model64: 0x1fc740001fc7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x24be, match64: 0x00000000, model64: 0x1fc7f0001fc87},
		modelTuple{type64: 0x2700000027, matchRI: 0x24bf, match64: 0x00000000, model64: 0x1fc870001fc8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c0, match64: 0x00000000, model64: 0x1fc8f0001fc96},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c1, match64: 0x00000000, model64: 0x1fc960001fc9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c2, match64: 0x00000000, model64: 0x1fc9e0001fca9},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c3, match64: 0x00000000, model64: 0x1fca90001fcb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c4, match64: 0x00000000, model64: 0x1fcb20001fcbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c5, match64: 0x00000000, model64: 0x1fcbb0001fcc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c6, match64: 0x00000000, model64: 0x1fcc20001fccf},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c7, match64: 0x00000000, model64: 0x1fccf0001fcdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c8, match64: 0x00000000, model64: 0x1fcdc0001fce4},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c9, match64: 0x00000000, model64: 0x1fce40001fcec},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ca, match64: 0x00000000, model64: 0x1fcec0001fcf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x24cb, match64: 0x00000000, model64: 0x1fcf40001fcfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x24cc, match64: 0x00000000, model64: 0x1fcfd0001fd05},
		modelTuple{type64: 0x2700000027, matchRI: 0x24cd, match64: 0x00000000, model64: 0x1fd050001fd11},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ce, match64: 0x00000000, model64: 0x1fd110001fd1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x24cf, match64: 0x00000000, model64: 0x1fd1d0001fd28},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d0, match64: 0x00000000, model64: 0x1fd280001fd30},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d1, match64: 0x00000000, model64: 0x1fd300001fd3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d2, match64: 0x00000000, model64: 0x1fd3e0001fd47},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d3, match64: 0x00000000, model64: 0x1fd470001fd56},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d4, match64: 0x00000000, model64: 0x1fd560001fd68},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d5, match64: 0x00000000, model64: 0x1fd680001fd7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d6, match64: 0x00000000, model64: 0x1fd7d0001fd8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d7, match64: 0x00000000, model64: 0x1fd8b0001fd98},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d8, match64: 0x00000000, model64: 0x1fd980001fda1},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d9, match64: 0x00000000, model64: 0x1fda10001fda9},
		modelTuple{type64: 0x2700000027, matchRI: 0x24da, match64: 0x00000000, model64: 0x1fda90001fdb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x24db, match64: 0x00000000, model64: 0x1fdb40001fdc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x24dc, match64: 0x00000000, model64: 0x1fdc20001fddf},
		modelTuple{type64: 0x2700000027, matchRI: 0x24dd, match64: 0x00000000, model64: 0x1fddf0001fdf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x24de, match64: 0x00000000, model64: 0x1fdf90001fe09},
		modelTuple{type64: 0x2700000027, matchRI: 0x24df, match64: 0x00000000, model64: 0x1fe090001fe16},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e0, match64: 0x00000000, model64: 0x1fe160001fe22},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e1, match64: 0x00000000, model64: 0x1fe220001fe2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e2, match64: 0x00000000, model64: 0x1fe2e0001fe3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e3, match64: 0x00000000, model64: 0x1fe3b0001fe44},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e4, match64: 0x00000000, model64: 0x1fe440001fe4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e5, match64: 0x00000000, model64: 0x1fe4e0001fe5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e6, match64: 0x00000000, model64: 0x1fe5e0001fe6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e7, match64: 0x00000000, model64: 0x1fe6c0001fe79},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e8, match64: 0x00000000, model64: 0x1fe790001fe88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fe880001fe92, model64: 0x1fe920001fe9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fe9b0001fea4, model64: 0x1fea40001feae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1feae0001feb7, model64: 0x1feb70001fec1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fec10001feca, model64: 0x1feca0001fed7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fed70001fee1, model64: 0x1fee10001feea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1feea0001fef4, model64: 0x1fef40001fefe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fefe0001ff08, model64: 0x1ff080001ff15},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e9, match64: 0x00000000, model64: 0x1ff150001ff22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff220001ff35, model64: 0x1ff220001ff35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff350001ff45, model64: 0x1ff450001ff50},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ea, match64: 0x00000000, model64: 0x1ff500001ff57},
		modelTuple{type64: 0x2700000027, matchRI: 0x24eb, match64: 0x00000000, model64: 0x1ff570001ff63},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ec, match64: 0x00000000, model64: 0x1ff630001ff70},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ed, match64: 0x00000000, model64: 0x1ff700001ff79},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ee, match64: 0x00000000, model64: 0x1ff790001ff81},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ef, match64: 0x00000000, model64: 0x1ff810001ff89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff890001ff93, model64: 0x1ff930001ff9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f0, match64: 0x00000000, model64: 0x1ff9c0001ffa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f1, match64: 0x00000000, model64: 0x1ffa50001ffaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f2, match64: 0x00000000, model64: 0x1ffaa0001ffae},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f3, match64: 0x00000000, model64: 0x1ffae0001ffb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f4, match64: 0x00000000, model64: 0x1ffb20001ffb8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x24f5, match64: 0x00000000, model64: 0x1ffb80001ffc4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x24f6, match64: 0x00000000, model64: 0x1ffc40001ffcc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x24f7, match64: 0x00000000, model64: 0x1ffcc0001ffdb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x24f8, match64: 0x00000000, model64: 0x1ffdb0001ffe4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x24f9, match64: 0x00000000, model64: 0x1ffe40001ffe9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x24fa, match64: 0x00000000, model64: 0x1ffe90001fff6},
		modelTuple{type64: 0x20d00000213, matchRI: 0x24fb, match64: 0x00000000, model64: 0x1fff60001fffe},
		modelTuple{type64: 0x20d00000213, matchRI: 0x24fc, match64: 0x00000000, model64: 0x1fffe00020006},
		modelTuple{type64: 0x20d00000213, matchRI: 0x24fd, match64: 0x00000000, model64: 0x200060002000e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x24fe, match64: 0x00000000, model64: 0x2000e00020014},
		modelTuple{type64: 0x20d00000213, matchRI: 0x24ff, match64: 0x00000000, model64: 0x200140002001d},
		modelTuple{type64: 0x5db000005e5, matchRI: -0x0001, match64: 0x2001d00020025, model64: 0x200250002003c},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2500, match64: 0x00000000, model64: 0x2003c00020048},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2501, match64: 0x00000000, model64: 0x2004800020051},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2502, match64: 0x00000000, model64: 0x200510002005a},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2503, match64: 0x00000000, model64: 0x2005a00020061},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2504, match64: 0x00000000, model64: 0x2006100020068},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2505, match64: 0x00000000, model64: 0x2006800020072},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2506, match64: 0x00000000, model64: 0x200720002007f},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2507, match64: 0x00000000, model64: 0x2007f00020086},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2508, match64: 0x00000000, model64: 0x200860002008d},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2509, match64: 0x00000000, model64: 0x2006100020068},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x250a, match64: 0x00000000, model64: 0x2008d00020094},
		modelTuple{type64: 0x2700000027, matchRI: 0x250b, match64: 0x00000000, model64: 0x200940002009f},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x250c, match64: 0x00000000, model64: 0x2009f000200a6},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x250d, match64: 0x00000000, model64: 0x200a6000200b1},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x250e, match64: 0x00000000, model64: 0x200b1000200bb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x250f, match64: 0x00000000, model64: 0x200bb000200c5},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2510, match64: 0x00000000, model64: 0x200c5000200d4},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2511, match64: 0x00000000, model64: 0x200d4000200e1},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2512, match64: 0x00000000, model64: 0x200e1000200ed},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x200ed000200f2, model64: 0x200f2000200fe},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x200fe00020111, model64: 0x200fe00020111},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x2011100020123, model64: 0x2011100020123},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2513, match64: 0x00000000, model64: 0x201230002012f},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2514, match64: 0x00000000, model64: 0x2012f0002013c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2515, match64: 0x00000000, model64: 0x2013c0002014a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2516, match64: 0x00000000, model64: 0x2014a00020158},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2517, match64: 0x00000000, model64: 0x2015800020168},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2518, match64: 0x00000000, model64: 0x2016800020177},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2519, match64: 0x00000000, model64: 0x201770002018a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x251a, match64: 0x00000000, model64: 0x2018a0002019a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x251b, match64: 0x00000000, model64: 0x2019a000201ac},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x251c, match64: 0x00000000, model64: 0x201ac000201c0},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x251d, match64: 0x00000000, model64: 0x201c0000201cd},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x251e, match64: 0x00000000, model64: 0x201cd000201db},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x251f, match64: 0x00000000, model64: 0x2014a00020158},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2520, match64: 0x00000000, model64: 0x201db000201eb},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2521, match64: 0x00000000, model64: 0x201eb000201fc},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2522, match64: 0x00000000, model64: 0x201fc0002020c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2523, match64: 0x00000000, model64: 0x2020c0002021d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2524, match64: 0x00000000, model64: 0x2021d0002022e},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2525, match64: 0x00000000, model64: 0x2022e0002023c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2526, match64: 0x00000000, model64: 0x2023c00020249},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2527, match64: 0x00000000, model64: 0x2024900020257},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2528, match64: 0x00000000, model64: 0x202570002026b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2529, match64: 0x00000000, model64: 0x2026b00020280},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x252a, match64: 0x00000000, model64: 0x2028000020297},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x252b, match64: 0x00000000, model64: 0x20297000202a9},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x252c, match64: 0x00000000, model64: 0x2023c00020249},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x252d, match64: 0x00000000, model64: 0x202a9000202ba},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x252e, match64: 0x00000000, model64: 0x202ba000202cc},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x252f, match64: 0x00000000, model64: 0x202cc000202da},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2530, match64: 0x00000000, model64: 0x202da000202ec},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2531, match64: 0x00000000, model64: 0x202ec000202ff},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2532, match64: 0x00000000, model64: 0x202ff00020313},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2533, match64: 0x00000000, model64: 0x2031300020328},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2534, match64: 0x00000000, model64: 0x203280002033a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2535, match64: 0x00000000, model64: 0x2033a0002034a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2536, match64: 0x00000000, model64: 0x2034a0002035b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2537, match64: 0x00000000, model64: 0x2035b0002036b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2538, match64: 0x00000000, model64: 0x2036b0002037b},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2539, match64: 0x00000000, model64: 0x2037b00020389},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x253a, match64: 0x00000000, model64: 0x203890002039a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x253b, match64: 0x00000000, model64: 0x2039a000203ab},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x253c, match64: 0x00000000, model64: 0x203ab000203b7},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x253d, match64: 0x00000000, model64: 0x203b7000203ca},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x253e, match64: 0x00000000, model64: 0x203ca000203da},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x253f, match64: 0x00000000, model64: 0x203da000203e7},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2540, match64: 0x00000000, model64: 0x203e7000203f4},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2541, match64: 0x00000000, model64: 0x203f400020404},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2542, match64: 0x00000000, model64: 0x2040400020419},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2543, match64: 0x00000000, model64: 0x204190002042a},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2544, match64: 0x00000000, model64: 0x2042a00020437},
		modelTuple{type64: 0x2700000027, matchRI: 0x2545, match64: 0x00000000, model64: 0x204370002043f},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x2043f0002044a, model64: 0x2044a00020455},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2546, match64: 0x00000000, model64: 0x2045500020463},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x2046300020472, model64: 0x2046300020472},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x204720002047c, model64: 0x204720002047c},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2547, match64: 0x00000000, model64: 0x2047c00020486},
		modelTuple{type64: 0x2700000027, matchRI: 0x2548, match64: 0x00000000, model64: 0x204860002048d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2549, match64: 0x00000000, model64: 0x2048d00020498},
		modelTuple{type64: 0x2700000027, matchRI: 0x254a, match64: 0x00000000, model64: 0x20498000204a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x254b, match64: 0x00000000, model64: 0x204a1000204a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x254c, match64: 0x00000000, model64: 0x204a1000204a6},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x254d, match64: 0x00000000, model64: 0x8de200008de6},
		modelTuple{type64: 0x2700000027, matchRI: 0x254e, match64: 0x00000000, model64: 0x204a6000204ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x254f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2551, match64: 0x00000000, model64: 0x204af000204b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x204b7000204c0, model64: 0x204c0000204c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2553, match64: 0x00000000, model64: 0x204c8000204d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2554, match64: 0x00000000, model64: 0x204d2000204d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2555, match64: 0x00000000, model64: 0x204d9000204e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2556, match64: 0x00000000, model64: 0x204e3000204e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2557, match64: 0x00000000, model64: 0x204e9000204ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x2558, match64: 0x00000000, model64: 0x204ef000204f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2559, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x255a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x255b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x255d, match64: 0x00000000, model64: 0x204fb0002050b},
		modelTuple{type64: 0x2700000027, matchRI: 0x255e, match64: 0x00000000, model64: 0x2050b00020515},
		modelTuple{type64: 0x2700000027, matchRI: 0x255f, match64: 0x00000000, model64: 0x2051500020524},
		modelTuple{type64: 0xa01b0000a030, matchRI: 0x2560, match64: 0x00000000, model64: 0x205240002052a},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2561, match64: 0x00000000, model64: 0x2052a00020531},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2564, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2565, match64: 0x00000000, model64: 0x2053e00020540},
		modelTuple{type64: 0x2700000027, matchRI: 0x2566, match64: 0x00000000, model64: 0x2054000020547},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x2054700020550, model64: 0x2055000020559},
		modelTuple{type64: 0x2700000027, matchRI: 0x2568, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x2056100020566, model64: 0x2056600020575},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x205750002057c, model64: 0x205750002057c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2058100020588},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2059b000205a4, model64: 0x205a4000205af},
		modelTuple{type64: 0x2700000027, matchRI: 0x256e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x256f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2572, match64: 0x00000000, model64: 0x429f000042a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x205bf000205cd, model64: 0x205cd000205d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x205d6000205e1, model64: 0x205e1000205e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x205e7000205f3, model64: 0x205f3000205fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x205fa00020606, model64: 0x206060002060d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2573, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x2061f00020632, model64: 0x2063200020638},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2577, match64: 0x00000000, model64: 0x206380002063f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2578, match64: 0x00000000, model64: 0x2063f00020649},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2064f0002065e, model64: 0x2065e00020664},
		modelTuple{type64: 0x2700000027, matchRI: 0x257a, match64: 0x00000000, model64: 0x206640002066b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2066b00020676, model64: 0x206640002066b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2067600020681, model64: 0x2068100020688},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2068800020696, model64: 0x206960002069e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2069e000206a7, model64: 0x206a7000206b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206b0000206b9, model64: 0x206b9000206c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206c3000206cc, model64: 0x206cc000206d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x257b, match64: 0x00000000, model64: 0x206d6000206de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206de000206e7, model64: 0x206e7000206f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206f0000206f9, model64: 0x206f900020702},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207020002070e, model64: 0x2070e00020716},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207160002071e, model64: 0x2071e00020729},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2072900020732, model64: 0x207320002073e},
		modelTuple{type64: 0x2700000027, matchRI: 0x257c, match64: 0x00000000, model64: 0x2073e00020748},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2074800020751, model64: 0x207510002075a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2075d00020762, model64: 0x207620002076a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2076a00020772, model64: 0x207720002077c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2077c00020782, model64: 0x207820002078c},
		modelTuple{type64: 0x2700000027, matchRI: 0x257e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2580, match64: 0x00000000, model64: 0xb10e0000b111},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2581, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2583, match64: 0x00000000, model64: 0x207960002079d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2079d000207a7, model64: 0x207a7000207af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207af000207b7, model64: 0x207b7000207c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207c0000207c4, model64: 0x207c4000207c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207c9000207d0, model64: 0x207d0000207d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207d9000207df, model64: 0x207df000207e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207e5000207e9, model64: 0x207e5000207e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207e9000207ef, model64: 0x207e9000207ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x2584, match64: 0x00000000, model64: 0x207ef000207f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207f700020801, model64: 0x208010002080b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2080b00020814, model64: 0x208140002081e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2585, match64: 0x00000000, model64: 0x2081e00020828},
		modelTuple{type64: 0x2700000027, matchRI: 0x2586, match64: 0x00000000, model64: 0x2082800020835},
		modelTuple{type64: 0x2700000027, matchRI: 0x2587, match64: 0x00000000, model64: 0x2081e00020828},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2083c00020843},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x127cf000127d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x258b, match64: 0x00000000, model64: 0x1698900016990},
		modelTuple{type64: 0x2700000027, matchRI: 0x258c, match64: 0x00000000, model64: 0x2084b00020857},
		modelTuple{type64: 0x2700000027, matchRI: 0x258e, match64: 0x00000000, model64: 0x2085c00020863},
		modelTuple{type64: 0x2700000027, matchRI: 0x2590, match64: 0x00000000, model64: 0x2086900020870},
		modelTuple{type64: 0x2700000027, matchRI: 0x2592, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2593, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2595, match64: 0x00000000, model64: 0x208770002087f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2596, match64: 0x00000000, model64: 0x2087f00020888},
		modelTuple{type64: 0x2700000027, matchRI: 0x2597, match64: 0x00000000, model64: 0x208880002088f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2598, match64: 0x00000000, model64: 0x2088f00020895},
		modelTuple{type64: 0x2700000027, matchRI: 0x2599, match64: 0x00000000, model64: 0x208950002089d},
		modelTuple{type64: 0x2700000027, matchRI: 0x259a, match64: 0x00000000, model64: 0x2089d000208a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x259b, match64: 0x00000000, model64: 0x208a8000208af},
		modelTuple{type64: 0x2700000027, matchRI: 0x259c, match64: 0x00000000, model64: 0x6e2000006e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208af000208b6, model64: 0x208b6000208c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x259d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x208c8000208cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a0, match64: 0x00000000, model64: 0x208d3000208db},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a2, match64: 0x00000000, model64: 0x208df000208e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208ea000208ef, model64: 0x208ea000208ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a8, match64: 0x00000000, model64: 0x208f800020908},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a9, match64: 0x00000000, model64: 0x2090800020912},
		modelTuple{type64: 0x2700000027, matchRI: 0x25aa, match64: 0x00000000, model64: 0x209120002091e},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ab, match64: 0x00000000, model64: 0x2091e00020929},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ac, match64: 0x00000000, model64: 0x2092900020936},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ad, match64: 0x00000000, model64: 0x2093600020942},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ae, match64: 0x00000000, model64: 0x209420002094f},
		modelTuple{type64: 0x2700000027, matchRI: 0x25af, match64: 0x00000000, model64: 0x2094f0002095c},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b0, match64: 0x00000000, model64: 0x2095c00020967},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b1, match64: 0x00000000, model64: 0x2096700020976},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b2, match64: 0x00000000, model64: 0x2097600020983},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b3, match64: 0x00000000, model64: 0x2098300020990},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b4, match64: 0x00000000, model64: 0x209900002099c},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b5, match64: 0x00000000, model64: 0x2099c000209aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b6, match64: 0x00000000, model64: 0x209aa000209b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b7, match64: 0x00000000, model64: 0x209b6000209c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b8, match64: 0x00000000, model64: 0x209c3000209d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b9, match64: 0x00000000, model64: 0x209d5000209e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ba, match64: 0x00000000, model64: 0x209e2000209ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x25bb, match64: 0x00000000, model64: 0x209ee000209fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x25bc, match64: 0x00000000, model64: 0x209fa00020a05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20a0500020a11, model64: 0x20a1100020a1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20a1d00020a29, model64: 0x20a2900020a35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20a3500020a41, model64: 0x20a4100020a4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x25be, match64: 0x00000000, model64: 0x2790000027e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c1, match64: 0x00000000, model64: 0x20a5800020a66},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c2, match64: 0x00000000, model64: 0x20a6600020a78},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c3, match64: 0x00000000, model64: 0x20a7800020a81},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c4, match64: 0x00000000, model64: 0x20a8100020a8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c5, match64: 0x00000000, model64: 0x20a8e00020a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c6, match64: 0x00000000, model64: 0x20a9800020aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c7, match64: 0x00000000, model64: 0x20aa000020aa8},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c8, match64: 0x00000000, model64: 0x20aa800020ab1},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c9, match64: 0x00000000, model64: 0x20ab100020abd},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ca, match64: 0x00000000, model64: 0x20abd00020aca},
		modelTuple{type64: 0x2700000027, matchRI: 0x25cb, match64: 0x00000000, model64: 0x20aca00020ad4},
		modelTuple{type64: 0x2700000027, matchRI: 0x25cc, match64: 0x00000000, model64: 0x2f5000002f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x25cd, match64: 0x00000000, model64: 0x20ad400020add},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ce, match64: 0x00000000, model64: 0x20add00020ae5},
		modelTuple{type64: 0x2700000027, matchRI: 0x25cf, match64: 0x00000000, model64: 0x20ae500020af4},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d0, match64: 0x00000000, model64: 0x20af400020b01},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d1, match64: 0x00000000, model64: 0x20b0100020b0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d2, match64: 0x00000000, model64: 0x20b0f00020b1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d3, match64: 0x00000000, model64: 0x20b1f00020b2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d4, match64: 0x00000000, model64: 0x20b2e00020b3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d5, match64: 0x00000000, model64: 0x20b3e00020b47},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b4700020b4d, model64: 0x20b4d00020b57},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d6, match64: 0x00000000, model64: 0x20b5700020b60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20b6000020b65, model64: 0x20b6500020b71},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d7, match64: 0x00000000, model64: 0x20b7100020b7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d8, match64: 0x00000000, model64: 0x20b7e00020b86},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d9, match64: 0x00000000, model64: 0x20b8600020b93},
		modelTuple{type64: 0x2700000027, matchRI: 0x25da, match64: 0x00000000, model64: 0x20b9300020ba1},
		modelTuple{type64: 0x2700000027, matchRI: 0x25db, match64: 0x00000000, model64: 0x20ba100020baf},
		modelTuple{type64: 0x2700000027, matchRI: 0x25dc, match64: 0x00000000, model64: 0x20baf00020bb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x25dd, match64: 0x00000000, model64: 0x20bb500020bbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x25de, match64: 0x00000000, model64: 0x20bbf00020bcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x25df, match64: 0x00000000, model64: 0x20bcd00020bdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e0, match64: 0x00000000, model64: 0x20bdc00020be6},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e1, match64: 0x00000000, model64: 0x20be600020bed},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e2, match64: 0x00000000, model64: 0x20bed00020bfa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20bfa00020c00, model64: 0x20c0000020c0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e3, match64: 0x00000000, model64: 0x20c0a00020c11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20c1100020c17, model64: 0x20c1700020c25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20c2500020c2c, model64: 0x20c2c00020c39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20c3900020c3f, model64: 0x20c3f00020c4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20c4d00020c52, model64: 0x20c5200020c5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20c5d00020c63, model64: 0x20c6300020c70},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20c7000020c76, model64: 0x20c7600020c81},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e4, match64: 0x00000000, model64: 0x20c8100020c8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20c8b00020c90, model64: 0x20c9000020c9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e5, match64: 0x00000000, model64: 0x20c9a00020ca2},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e6, match64: 0x00000000, model64: 0x20ca200020ca9},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e7, match64: 0x00000000, model64: 0x20ca900020cb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e8, match64: 0x00000000, model64: 0x20cb300020cba},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e9, match64: 0x00000000, model64: 0x20cba00020cc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ea, match64: 0x00000000, model64: 0x20cc200020cc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x25eb, match64: 0x00000000, model64: 0x20cc500020cc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ec, match64: 0x00000000, model64: 0x20cc800020cce},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ed, match64: 0x00000000, model64: 0x20cce00020cd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ee, match64: 0x00000000, model64: 0x20cd600020ce2},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ef, match64: 0x00000000, model64: 0x20ce200020ce6},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f0, match64: 0x00000000, model64: 0x20ce600020cee},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f1, match64: 0x00000000, model64: 0x20cee00020cf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f2, match64: 0x00000000, model64: 0x1f1f00001f24},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f3, match64: 0x00000000, model64: 0x1aa610001aa69},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f4, match64: 0x00000000, model64: 0x20cf600020d00},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f5, match64: 0x00000000, model64: 0x20d0000020d07},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f6, match64: 0x00000000, model64: 0x1e5e50001e5e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f7, match64: 0x00000000, model64: 0x20d0700020d0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f8, match64: 0x00000000, model64: 0x20d0e00020d18},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f9, match64: 0x00000000, model64: 0x20d1800020d23},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fa, match64: 0x00000000, model64: 0x20d2300020d2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fb, match64: 0x00000000, model64: 0x20d2b00020d33},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fc, match64: 0x00000000, model64: 0x20d3300020d3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fd, match64: 0x00000000, model64: 0x20d3e00020d47},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fe, match64: 0x00000000, model64: 0x20d4700020d50},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ff, match64: 0x00000000, model64: 0x20d5000020d56},
		modelTuple{type64: 0x2700000027, matchRI: 0x2600, match64: 0x00000000, model64: 0x20d5600020d5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2601, match64: 0x00000000, model64: 0x20d5f00020d69},
		modelTuple{type64: 0x2700000027, matchRI: 0x2602, match64: 0x00000000, model64: 0x20d6900020d6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2603, match64: 0x00000000, model64: 0x20d6f00020d74},
		modelTuple{type64: 0x2700000027, matchRI: 0x2604, match64: 0x00000000, model64: 0x20d7400020d7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2605, match64: 0x00000000, model64: 0x20d7f00020d8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20d8d00020d92, model64: 0x20d9200020d9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20d9d00020da1, model64: 0x20da100020da8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20da800020dac, model64: 0x20dac00020db4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2606, match64: 0x00000000, model64: 0x20db400020dc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2607, match64: 0x00000000, model64: 0x20dc100020dca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20dca00020dd6, model64: 0x20dca00020dd6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20dd600020de3, model64: 0x20de300020dec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2608, match64: 0x00000000, model64: 0x20dec00020df7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20df700020dfb, model64: 0x20dfb00020dff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20dff00020e04, model64: 0x20e0400020e0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2609, match64: 0x00000000, model64: 0x20e0c00020e13},
		modelTuple{type64: 0x2700000027, matchRI: 0x260a, match64: 0x00000000, model64: 0x20e1300020e1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x260b, match64: 0x00000000, model64: 0x20e1b00020e1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20e1f00020e24, model64: 0xaeef0000aef5},
		modelTuple{type64: 0x2700000027, matchRI: 0x260c, match64: 0x00000000, model64: 0x20e2400020e2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20e2c00020e30, model64: 0x20e3000020e3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x260d, match64: 0x00000000, model64: 0x20e3c00020e45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20e4500020e52, model64: 0x20e5200020e5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20e5a00020e5f, model64: 0x20e5f00020e67},
		modelTuple{type64: 0x2700000027, matchRI: 0x260e, match64: 0x00000000, model64: 0x20e6700020e6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x260f, match64: 0x00000000, model64: 0x20e6b00020e70},
		modelTuple{type64: 0x2700000027, matchRI: 0x2610, match64: 0x00000000, model64: 0x20e7000020e7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2611, match64: 0x00000000, model64: 0x20e7d00020e8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2612, match64: 0x00000000, model64: 0x20e8d00020e9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2613, match64: 0x00000000, model64: 0x20e9c00020ea8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2614, match64: 0x00000000, model64: 0x20ea800020eb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2615, match64: 0x00000000, model64: 0x20eb500020ebf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2616, match64: 0x00000000, model64: 0x20ebf00020ecd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2617, match64: 0x00000000, model64: 0x20ecd00020eda},
		modelTuple{type64: 0x2700000027, matchRI: 0x2618, match64: 0x00000000, model64: 0x20eda00020ee2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2619, match64: 0x00000000, model64: 0x20ee200020eef},
		modelTuple{type64: 0x2700000027, matchRI: 0x261a, match64: 0x00000000, model64: 0x20eef00020efc},
		modelTuple{type64: 0x2700000027, matchRI: 0x261b, match64: 0x00000000, model64: 0x20efc00020f04},
		modelTuple{type64: 0x2700000027, matchRI: 0x261c, match64: 0x00000000, model64: 0x20f0400020f0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x261d, match64: 0x00000000, model64: 0x20f0c00020f18},
		modelTuple{type64: 0x2700000027, matchRI: 0x261e, match64: 0x00000000, model64: 0x20f1800020f25},
		modelTuple{type64: 0x2700000027, matchRI: 0x261f, match64: 0x00000000, model64: 0x20f2500020f2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2620, match64: 0x00000000, model64: 0x20f2d00020f36},
		modelTuple{type64: 0x2700000027, matchRI: 0x2621, match64: 0x00000000, model64: 0x20f3600020f3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2622, match64: 0x00000000, model64: 0x20f3f00020f4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2623, match64: 0x00000000, model64: 0x20f4d00020f55},
		modelTuple{type64: 0x2700000027, matchRI: 0x2624, match64: 0x00000000, model64: 0x20f5500020f65},
		modelTuple{type64: 0x2700000027, matchRI: 0x2625, match64: 0x00000000, model64: 0x20f6500020f6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2626, match64: 0x00000000, model64: 0x20ebf00020ecd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2627, match64: 0x00000000, model64: 0x20db400020dc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2628, match64: 0x00000000, model64: 0x20f6d00020f75},
		modelTuple{type64: 0x2700000027, matchRI: 0x2629, match64: 0x00000000, model64: 0x20f7500020f81},
		modelTuple{type64: 0x2700000027, matchRI: 0x262a, match64: 0x00000000, model64: 0x20f8100020f8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x262b, match64: 0x00000000, model64: 0x20f8e00020f9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x262c, match64: 0x00000000, model64: 0x20f9b00020fa3},
		modelTuple{type64: 0x2700000027, matchRI: 0x262d, match64: 0x00000000, model64: 0x20fa300020faf},
		modelTuple{type64: 0x2700000027, matchRI: 0x262e, match64: 0x00000000, model64: 0x20faf00020fb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x262f, match64: 0x00000000, model64: 0x20fb700020fc2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20fc200020fcc, model64: 0x20fc200020fcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2630, match64: 0x00000000, model64: 0x20fcc00020fd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2631, match64: 0x00000000, model64: 0x20fd400020fe1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2632, match64: 0x00000000, model64: 0x20fe100020fed},
		modelTuple{type64: 0x2700000027, matchRI: 0x2633, match64: 0x00000000, model64: 0x20fed00020ffa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2634, match64: 0x00000000, model64: 0x20ffa00021007},
		modelTuple{type64: 0x2700000027, matchRI: 0x2635, match64: 0x00000000, model64: 0x210070002100f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2636, match64: 0x00000000, model64: 0x2100f00021018},
		modelTuple{type64: 0x2700000027, matchRI: 0x2637, match64: 0x00000000, model64: 0x2101800021020},
		modelTuple{type64: 0x2700000027, matchRI: 0x2638, match64: 0x00000000, model64: 0x2102000021029},
		modelTuple{type64: 0x2700000027, matchRI: 0x2639, match64: 0x00000000, model64: 0x2102900021034},
		modelTuple{type64: 0x2700000027, matchRI: 0x263a, match64: 0x00000000, model64: 0x210340002103d},
		modelTuple{type64: 0x2700000027, matchRI: 0x263b, match64: 0x00000000, model64: 0x2103d00021045},
		modelTuple{type64: 0x2700000027, matchRI: 0x263c, match64: 0x00000000, model64: 0x210450002104d},
		modelTuple{type64: 0x2700000027, matchRI: 0x263d, match64: 0x00000000, model64: 0x2104d00021056},
		modelTuple{type64: 0x2700000027, matchRI: 0x263e, match64: 0x00000000, model64: 0x2105600021061},
		modelTuple{type64: 0x2700000027, matchRI: 0x263f, match64: 0x00000000, model64: 0x210610002106e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2640, match64: 0x00000000, model64: 0x2106e0002107b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2107b00021083, model64: 0x2108300021091},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2109100021099, model64: 0x21099000210a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210a7000210b0, model64: 0x210b0000210b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210b9000210c1, model64: 0x210c1000210ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210ca000210d3, model64: 0x210d3000210e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210e2000210eb, model64: 0x210eb000210fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210fa00021102, model64: 0x2110200021110},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2111000021119, model64: 0x2111900021127},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x211270002112f, model64: 0x2112f0002113c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2113c00021144, model64: 0x2114400021154},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x211540002115c, model64: 0x2115c00021165},
		modelTuple{type64: 0x2700000027, matchRI: 0x2641, match64: 0x00000000, model64: 0x2116500021173},
		modelTuple{type64: 0x2700000027, matchRI: 0x2642, match64: 0x00000000, model64: 0x2100f00021018},
		modelTuple{type64: 0x2700000027, matchRI: 0x2643, match64: 0x00000000, model64: 0x2117300021180},
		modelTuple{type64: 0x2700000027, matchRI: 0x2644, match64: 0x00000000, model64: 0x2118000021188},
		modelTuple{type64: 0x2700000027, matchRI: 0x2645, match64: 0x00000000, model64: 0x2118800021190},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2119000021194, model64: 0x211940002119c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2119c000211a1, model64: 0x211a1000211ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x211ac000211b2, model64: 0x211b2000211be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x211be000211c4, model64: 0x211c4000211d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x211d2000211d6, model64: 0x211d6000211e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x211e1000211e5, model64: 0x211e5000211f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x211f1000211f5, model64: 0x211f500021202},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2120200021208, model64: 0x2120800021217},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212170002121c, model64: 0x2121c00021225},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2122500021229, model64: 0x2122900021230},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2123000021236, model64: 0x2123600021242},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2124200021246, model64: 0x2124600021255},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2125500021259, model64: 0x2125900021264},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2126400021268, model64: 0x2126800021273},
		modelTuple{type64: 0x2700000027, matchRI: 0x2646, match64: 0x00000000, model64: 0x212730002127e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2647, match64: 0x00000000, model64: 0x2127e0002128a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2128a0002128f, model64: 0x2128f00021299},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212990002129f, model64: 0x2129f000212ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212ab000212b1, model64: 0x212b1000212bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212bd000212c3, model64: 0x212c3000212cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212cd000212d7, model64: 0x212d7000212e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212e1000212e6, model64: 0x212e1000212e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2648, match64: 0x00000000, model64: 0x212e6000212f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212f5000212fb, model64: 0x212fb0002130f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2130f00021315, model64: 0x2131500021325},
		modelTuple{type64: 0x2700000027, matchRI: 0x2649, match64: 0x00000000, model64: 0x213250002132c},
		modelTuple{type64: 0x2700000027, matchRI: 0x264a, match64: 0x00000000, model64: 0x2132c00021331},
		modelTuple{type64: 0x2700000027, matchRI: 0x264b, match64: 0x00000000, model64: 0x2133100021339},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213390002133d, model64: 0x2133d00021346},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213460002134a, model64: 0x2134a00021351},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2135100021355, model64: 0x213550002135d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2135d00021361, model64: 0x2136100021368},
		modelTuple{type64: 0x2700000027, matchRI: 0x264c, match64: 0x00000000, model64: 0x2136800021374},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2137400021379, model64: 0x2137900021383},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2138300021387, model64: 0x2138700021390},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2139000021394, model64: 0x213940002139d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2139d000213a1, model64: 0x213a1000213a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213a7000213ab, model64: 0x213ab000213b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x264d, match64: 0x00000000, model64: 0x213b4000213bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213bf000213c5, model64: 0x213c5000213d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213d0000213d6, model64: 0x213d6000213e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x264e, match64: 0x00000000, model64: 0x213e1000213ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213ec000213f2, model64: 0x213f200021400},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2140000021406, model64: 0x2140600021414},
		modelTuple{type64: 0x2700000027, matchRI: 0x264f, match64: 0x00000000, model64: 0x214140002141a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2650, match64: 0x00000000, model64: 0x2141a00021420},
		modelTuple{type64: 0x2700000027, matchRI: 0x2651, match64: 0x00000000, model64: 0x2142000021427},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214270002142d, model64: 0x2142d00021438},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214380002143c, model64: 0x2143c00021445},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214450002144b, model64: 0x2144b00021457},
		modelTuple{type64: 0x2700000027, matchRI: 0x2652, match64: 0x00000000, model64: 0x214570002145e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2653, match64: 0x00000000, model64: 0x2145e00021464},
		modelTuple{type64: 0x2700000027, matchRI: 0x2654, match64: 0x00000000, model64: 0x214640002146d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2146d00021472, model64: 0x214720002147d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2655, match64: 0x00000000, model64: 0x20baf00020bb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2147d00021482, model64: 0x214820002148c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2148c00021491, model64: 0x2149100021498},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214980002149e, model64: 0x2149e000214a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2656, match64: 0x00000000, model64: 0x214a9000214b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214b4000214b9, model64: 0x214b9000214bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214bf000214c6, model64: 0x214bf000214c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2657, match64: 0x00000000, model64: 0x214c6000214ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214ca000214d0, model64: 0x212730002127e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf6b0000df6f, model64: 0x214d0000214d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214d5000214d9, model64: 0x214d9000214df},
		modelTuple{type64: 0x2700000027, matchRI: 0x2658, match64: 0x00000000, model64: 0x197b0000197e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214df000214e4, model64: 0x214e4000214eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2659, match64: 0x00000000, model64: 0x214eb000214f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x265a, match64: 0x00000000, model64: 0x214f0000214f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x265b, match64: 0x00000000, model64: 0x214f4000214f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x265c, match64: 0x00000000, model64: 0x214f900021506},
		modelTuple{type64: 0x2700000027, matchRI: 0x265d, match64: 0x00000000, model64: 0x2150600021515},
		modelTuple{type64: 0x2700000027, matchRI: 0x265e, match64: 0x00000000, model64: 0x215150002151b},
		modelTuple{type64: 0x2700000027, matchRI: 0x265f, match64: 0x00000000, model64: 0x2151b00021527},
		modelTuple{type64: 0x2700000027, matchRI: 0x2660, match64: 0x00000000, model64: 0x2152700021538},
		modelTuple{type64: 0x2700000027, matchRI: 0x2661, match64: 0x00000000, model64: 0x215380002153e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2153e00021547, model64: 0x2154700021555},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215550002155d, model64: 0x2155d00021568},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2156800021570, model64: 0x2157000021580},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2158000021588, model64: 0x2158800021590},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215900002159d, model64: 0x215900002159d},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x2662, match64: 0x00000000, model64: 0x2159d000215a7},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x215a7000215af, model64: 0x215af000215c0},
		modelTuple{type64: 0x1a7000001a9, matchRI: 0x2663, match64: 0x00000000, model64: 0x215c0000215cc},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2664, match64: 0x00000000, model64: 0x215cc000215da},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2665, match64: 0x00000000, model64: 0x215da000215e8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2666, match64: 0x00000000, model64: 0x215e8000215f8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2667, match64: 0x00000000, model64: 0x215f8000215fe},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2668, match64: 0x00000000, model64: 0x215fe00021607},
		modelTuple{type64: 0x2700000027, matchRI: 0x2669, match64: 0x00000000, model64: 0x2160700021613},
		modelTuple{type64: 0x2700000027, matchRI: 0x266a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x266b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x266c, match64: 0x00000000, model64: 0x2118000021188},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2161300021620, model64: 0x2162000021629},
		modelTuple{type64: 0x2700000027, matchRI: 0x266d, match64: 0x00000000, model64: 0x210070002100f},
		modelTuple{type64: 0x2700000027, matchRI: 0x266e, match64: 0x00000000, model64: 0x2101800021020},
		modelTuple{type64: 0x2700000027, matchRI: 0x266f, match64: 0x00000000, model64: 0x2102000021029},
		modelTuple{type64: 0x2700000027, matchRI: 0x2670, match64: 0x00000000, model64: 0x2118000021188},
		modelTuple{type64: 0x2700000027, matchRI: 0x2671, match64: 0x00000000, model64: 0x2118000021188},
		modelTuple{type64: 0x2700000027, matchRI: 0x2672, match64: 0x00000000, model64: 0x2162900021633},
		modelTuple{type64: 0x2700000027, matchRI: 0x2673, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2674, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2675, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x216360002163a, model64: 0x939300009395},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2163a0002163f, model64: 0x2163f00021647},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x216470002164c, model64: 0x2164c00021653},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2165300021658, model64: 0x216580002165f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2165f00021664, model64: 0x2165f00021664},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2166400021669, model64: 0x2166400021669},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x216690002166e, model64: 0x2166e00021674},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2167400021679, model64: 0x2167900021680},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2168000021685, model64: 0x216850002168c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2168c00021691, model64: 0x2168c00021691},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2169100021698, model64: 0x216980002169f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2169f000216a3, model64: 0x216a3000216ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x216ab000216af, model64: 0x216af000216b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x216b4000216b7, model64: 0x216b7000216bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2677, match64: 0x00000000, model64: 0x216bc000216c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2678, match64: 0x00000000, model64: 0x216c3000216c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2679, match64: 0x00000000, model64: 0x216c7000216d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x267a, match64: 0x00000000, model64: 0x216d1000216da},
		modelTuple{type64: 0x2700000027, matchRI: 0x267b, match64: 0x00000000, model64: 0x216da000216e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x267c, match64: 0x00000000, model64: 0x216e3000216ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x267d, match64: 0x00000000, model64: 0x216ea000216ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x267e, match64: 0x00000000, model64: 0x216ee000216f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x267f, match64: 0x00000000, model64: 0x216f9000216fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x2680, match64: 0x00000000, model64: 0x216fe0002170d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2681, match64: 0x00000000, model64: 0x2170d00021718},
		modelTuple{type64: 0x2700000027, matchRI: 0x2682, match64: 0x00000000, model64: 0x217180002171c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2683, match64: 0x00000000, model64: 0x2171c00021726},
		modelTuple{type64: 0x2700000027, matchRI: 0x2684, match64: 0x00000000, model64: 0x217260002172f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2685, match64: 0x00000000, model64: 0x2172f00021738},
		modelTuple{type64: 0x2700000027, matchRI: 0x2686, match64: 0x00000000, model64: 0x2173800021740},
		modelTuple{type64: 0x2700000027, matchRI: 0x2687, match64: 0x00000000, model64: 0x2174000021745},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x217450002174e, model64: 0x2174e00021757},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x217570002175e, model64: 0x2175e00021761},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x268b, match64: 0x00000000, model64: 0x106780001067f},
		modelTuple{type64: 0x2700000027, matchRI: 0x268c, match64: 0x00000000, model64: 0x2177200021776},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2177600021781, model64: 0x217810002178d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2178d00021798, model64: 0x21798000217a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x217a5000217b0, model64: 0x217b0000217bb},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x217bb000217c1, model64: 0x217c1000217c5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x14faf00014fb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x268f, match64: 0x00000000, model64: 0x217d2000217d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x217d9000217e1, model64: 0x217e1000217e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2691, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2692, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x2693, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x940000009f, matchRI: 0x2694, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2695, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2697, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2698, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x218020002180c, model64: 0x2180c00021817},
		modelTuple{type64: 0x2700000027, matchRI: 0x269a, match64: 0x00000000, model64: 0x2181700021824},
		modelTuple{type64: 0x2700000027, matchRI: 0x269b, match64: 0x00000000, model64: 0x2182400021833},
		modelTuple{type64: 0x2700000027, matchRI: 0x269c, match64: 0x00000000, model64: 0x2183300021843},
		modelTuple{type64: 0x2700000027, matchRI: 0x269d, match64: 0x00000000, model64: 0x2184300021853},
		modelTuple{type64: 0x2700000027, matchRI: 0x269e, match64: 0x00000000, model64: 0x2185300021860},
		modelTuple{type64: 0x2700000027, matchRI: 0x269f, match64: 0x00000000, model64: 0x218600002186b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a0, match64: 0x00000000, model64: 0x2186b00021875},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a1, match64: 0x00000000, model64: 0x2187500021881},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a2, match64: 0x00000000, model64: 0x2188100021890},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a3, match64: 0x00000000, model64: 0x218900002189c},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a4, match64: 0x00000000, model64: 0x2189c000218a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a5, match64: 0x00000000, model64: 0x218a9000218b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x218bb000218c0, model64: 0x218c0000218c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x218c8000218cd, model64: 0x218cd000218d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x218d5000218da, model64: 0x218da000218dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x218dd000218e2, model64: 0x218e2000218eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x218eb000218f0, model64: 0x217e9000217ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x26aa, match64: 0x00000000, model64: 0x218f900021903},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x219090002190d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x219160002191c, model64: 0x2191c00021923},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2192800021938, model64: 0x219380002194b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2194b00021956, model64: 0x2195600021961},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b0, match64: 0x00000000, model64: 0x13c0b00013c11},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b1, match64: 0x00000000, model64: 0x2196500021970},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b2, match64: 0x00000000, model64: 0x2197000021978},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b3, match64: 0x00000000, model64: 0x2197800021984},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2198400021991, model64: 0x2198400021991},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b4, match64: 0x00000000, model64: 0x2199100021999},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2199e000219a3, model64: 0x219a3000219a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x219ad000219b1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26bb, match64: 0x00000000, model64: 0x219be000219c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x26bc, match64: 0x00000000, model64: 0x219c3000219cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x26bd, match64: 0x00000000, model64: 0x219cb000219d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x26be, match64: 0x00000000, model64: 0x1f5d30001f5da},
		modelTuple{type64: 0x2700000027, matchRI: 0x26bf, match64: 0x00000000, model64: 0x219d1000219dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c0, match64: 0x00000000, model64: 0x219dd000219e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c1, match64: 0x00000000, model64: 0x219e3000219ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c2, match64: 0x00000000, model64: 0x219ea000219f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c3, match64: 0x00000000, model64: 0x219f1000219fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c4, match64: 0x00000000, model64: 0x79e7000079ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c5, match64: 0x00000000, model64: 0x219fb00021a04},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c6, match64: 0x00000000, model64: 0x21a0400021a0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c7, match64: 0x00000000, model64: 0x21a0a00021a11},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c8, match64: 0x00000000, model64: 0x21a1100021a18},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c9, match64: 0x00000000, model64: 0x21a1800021a20},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ca, match64: 0x00000000, model64: 0x21a2000021a2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26cb, match64: 0x00000000, model64: 0x21a2b00021a36},
		modelTuple{type64: 0x2700000027, matchRI: 0x26cc, match64: 0x00000000, model64: 0x21a3600021a3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x26cd, match64: 0x00000000, model64: 0x21a3d00021a46},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ce, match64: 0x00000000, model64: 0x21a4600021a4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26cf, match64: 0x00000000, model64: 0x21a4b00021a52},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d0, match64: 0x00000000, model64: 0x21a5200021a57},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d1, match64: 0x00000000, model64: 0x21a5700021a5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d2, match64: 0x00000000, model64: 0x21a5f00021a6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d3, match64: 0x00000000, model64: 0x21a6c00021a72},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21a7600021a7e, model64: 0x21a7e00021a86},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d6, match64: 0x00000000, model64: 0x21a8600021a8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d7, match64: 0x00000000, model64: 0x21a8d00021a93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21a9300021aa1, model64: 0x21aa100021aaf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21aaf00021ab8, model64: 0x21ab800021ac1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21ac100021acb, model64: 0x21acb00021ad5},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d8, match64: 0x00000000, model64: 0x21ad500021adc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21adc00021ae6, model64: 0x21ae600021af0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21af000021af7, model64: 0x21af700021afe},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d9, match64: 0x00000000, model64: 0x21afe00021b05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b0500021b0b, model64: 0x21b0b00021b11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b1100021b15, model64: 0x1497e00014982},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b1500021b1a, model64: 0x21b1a00021b1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b1f00021b2a, model64: 0x21b2a00021b35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b3500021b41, model64: 0x21b4100021b4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x26da, match64: 0x00000000, model64: 0x21b4d00021b57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b5700021b63, model64: 0x21b6300021b6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b6f00021b7a, model64: 0x21b7a00021b85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b8500021b8c, model64: 0x21b8c00021b93},
		modelTuple{type64: 0x2700000027, matchRI: 0x26db, match64: 0x00000000, model64: 0x21b9300021b9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b9d00021ba9, model64: 0x21b9d00021ba9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21ba900021bb6, model64: 0x21bb600021bc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21bc400021bd0, model64: 0x21bd000021bdd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21bdd00021be5, model64: 0x21be500021bed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21bed00021bf3, model64: 0x21bf300021bf9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21bf900021bfd, model64: 0x21bfd00021c01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c0100021c08, model64: 0x21c0800021c0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x26dc, match64: 0x00000000, model64: 0x21c0f00021c18},
		modelTuple{type64: 0x2700000027, matchRI: 0x26dd, match64: 0x00000000, model64: 0x21c1800021c1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x26de, match64: 0x00000000, model64: 0x21c1c00021c21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c2100021c26, model64: 0x21c2600021c2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26df, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e4, match64: 0x00000000, model64: 0x21c2f00021c37},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e5, match64: 0x00000000, model64: 0x21c2f00021c37},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x21c3c00021c41},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c5b00021c61, model64: 0x21c5b00021c61},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e9, match64: 0x00000000, model64: 0x21c6100021c66},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x21c6600021c6c, model64: 0x21c6600021c6c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x21c6f00021c78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c7c00021c84, model64: 0x21c8400021c91},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c9100021c9b, model64: 0x21c9b00021ca8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21ca800021cb2, model64: 0x21cb200021cbf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21cbf00021ccc, model64: 0x21ccc00021cd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ec, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ee, match64: 0x00000000, model64: 0x21cdb00021ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ef, match64: 0x00000000, model64: 0x21ce500021cf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f0, match64: 0x00000000, model64: 0x21cf500021d06},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f1, match64: 0x00000000, model64: 0xcef80000cefb},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f2, match64: 0x00000000, model64: 0x4faf00004fb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f3, match64: 0x00000000, model64: 0x21d0600021d0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f4, match64: 0x00000000, model64: 0x21d0d00021d14},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f5, match64: 0x00000000, model64: 0x21d1400021d1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f6, match64: 0x00000000, model64: 0x21d1b00021d21},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f7, match64: 0x00000000, model64: 0x79c1000079c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f8, match64: 0x00000000, model64: 0x21d2100021d24},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f9, match64: 0x00000000, model64: 0x21d2400021d2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x26fa, match64: 0x00000000, model64: 0x6fbf00006fc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x26fb, match64: 0x00000000, model64: 0x21d2d00021d34},
		modelTuple{type64: 0x20d00000213, matchRI: 0x26fc, match64: 0x00000000, model64: 0x1a94d0001a953},
		modelTuple{type64: 0x2700000027, matchRI: 0x26fd, match64: 0x00000000, model64: 0x21d3400021d43},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21d4300021d4b, model64: 0x21d4b00021d56},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21d5600021d5e, model64: 0x21d5600021d5e},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21d5e00021d66, model64: 0x14ddc00014ddf},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21d6600021d6e, model64: 0x21d6e00021d74},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21d7400021d7c, model64: 0x21d7c00021d82},
		modelTuple{type64: 0x20d00000213, matchRI: 0x26fe, match64: 0x00000000, model64: 0x21d8200021d87},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21d8700021d8f, model64: 0x21d8f00021d93},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21d9300021d9b, model64: 0x21d9b00021da1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x26ff, match64: 0x00000000, model64: 0x21da100021da7},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21da700021daf, model64: 0x12bbe00012bc1},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21daf00021db7, model64: 0x3670000036a},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21db700021dbf, model64: 0x21dbf00021dc4},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x21dc400021dcb, model64: 0x21dcb00021dd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2700, match64: 0x00000000, model64: 0x6fbf00006fc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2701, match64: 0x00000000, model64: 0x35770000357b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21dd200021dda, model64: 0x21dda00021de7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21de700021def, model64: 0x21def00021df9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21df900021e01, model64: 0x1729200017296},
		modelTuple{type64: 0x2700000027, matchRI: 0x2702, match64: 0x00000000, model64: 0x21e0100021e09},
		modelTuple{type64: 0x2700000027, matchRI: 0x2703, match64: 0x00000000, model64: 0x21e0900021e10},
		modelTuple{type64: 0x2700000027, matchRI: 0x2704, match64: 0x00000000, model64: 0x21e1000021e15},
		modelTuple{type64: 0x2700000027, matchRI: 0x2705, match64: 0x00000000, model64: 0x21e1500021e1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2706, match64: 0x00000000, model64: 0x21e1f00021e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x2707, match64: 0x00000000, model64: 0x1344c00013453},
		modelTuple{type64: 0x2700000027, matchRI: 0x2708, match64: 0x00000000, model64: 0x21e2500021e2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e2a00021e31, model64: 0x5af700005afb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2709, match64: 0x00000000, model64: 0x21e3100021e35},
		modelTuple{type64: 0x2700000027, matchRI: 0x270a, match64: 0x00000000, model64: 0x21e3500021e3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x270b, match64: 0x00000000, model64: 0x21e3e00021e46},
		modelTuple{type64: 0x2700000027, matchRI: 0x270c, match64: 0x00000000, model64: 0x21e4600021e4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x270d, match64: 0x00000000, model64: 0x21e4e00021e52},
		modelTuple{type64: 0x2700000027, matchRI: 0x270e, match64: 0x00000000, model64: 0x21e5200021e56},
		modelTuple{type64: 0x2700000027, matchRI: 0x270f, match64: 0x00000000, model64: 0x3fda00003fde},
		modelTuple{type64: 0x2700000027, matchRI: 0x2710, match64: 0x00000000, model64: 0x21e5600021e64},
		modelTuple{type64: 0x2700000027, matchRI: 0x2711, match64: 0x00000000, model64: 0x21e6400021e69},
		modelTuple{type64: 0x2700000027, matchRI: 0x2712, match64: 0x00000000, model64: 0x21e6900021e72},
		modelTuple{type64: 0x2700000027, matchRI: 0x2713, match64: 0x00000000, model64: 0x21e7200021e85},
		modelTuple{type64: 0x2700000027, matchRI: 0x2714, match64: 0x00000000, model64: 0x21ce500021cf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2715, match64: 0x00000000, model64: 0x21e8500021e8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2716, match64: 0x00000000, model64: 0x21e8d00021e95},
		modelTuple{type64: 0x2700000027, matchRI: 0x2717, match64: 0x00000000, model64: 0x21e9500021ea6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2718, match64: 0x00000000, model64: 0x21ea600021eac},
		modelTuple{type64: 0x2700000027, matchRI: 0x2719, match64: 0x00000000, model64: 0x21eac00021eb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x271a, match64: 0x00000000, model64: 0x21eb000021eb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x271b, match64: 0x00000000, model64: 0x9a6c00009a72},
		modelTuple{type64: 0x2700000027, matchRI: 0x271c, match64: 0x00000000, model64: 0x21eb900021ec1},
		modelTuple{type64: 0x2700000027, matchRI: 0x271d, match64: 0x00000000, model64: 0x21ec100021eca},
		modelTuple{type64: 0x2700000027, matchRI: 0x271e, match64: 0x00000000, model64: 0xac000000ac7},
		modelTuple{type64: 0x2700000027, matchRI: 0x271f, match64: 0x00000000, model64: 0x21eca00021ed2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2720, match64: 0x00000000, model64: 0x21ed200021edd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2721, match64: 0x00000000, model64: 0x21edd00021ee8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2722, match64: 0x00000000, model64: 0x21ee800021eee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2723, match64: 0x00000000, model64: 0x21eee00021ef5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2724, match64: 0x00000000, model64: 0x21ef500021f02},
		modelTuple{type64: 0x2700000027, matchRI: 0x2725, match64: 0x00000000, model64: 0x1a94d0001a953},
		modelTuple{type64: 0x2700000027, matchRI: 0x2726, match64: 0x00000000, model64: 0x21f0200021f0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2727, match64: 0x00000000, model64: 0x4a9000004a95},
		modelTuple{type64: 0x2700000027, matchRI: 0x2728, match64: 0x00000000, model64: 0x21f0c00021f13},
		modelTuple{type64: 0x2700000027, matchRI: 0x2729, match64: 0x00000000, model64: 0x21f1300021f19},
		modelTuple{type64: 0x2700000027, matchRI: 0x272a, match64: 0x00000000, model64: 0x21f1900021f1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x272b, match64: 0x00000000, model64: 0x21f1d00021f23},
		modelTuple{type64: 0x2700000027, matchRI: 0x272c, match64: 0x00000000, model64: 0x21f2300021f29},
		modelTuple{type64: 0x2700000027, matchRI: 0x272d, match64: 0x00000000, model64: 0x21f2900021f33},
		modelTuple{type64: 0x2700000027, matchRI: 0x272e, match64: 0x00000000, model64: 0x21f3300021f3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x272f, match64: 0x00000000, model64: 0x21f3f00021f50},
		modelTuple{type64: 0x2700000027, matchRI: 0x2730, match64: 0x00000000, model64: 0x21f5000021f58},
		modelTuple{type64: 0x2700000027, matchRI: 0x2731, match64: 0x00000000, model64: 0x79c1000079c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2732, match64: 0x00000000, model64: 0x21f5800021f5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2733, match64: 0x00000000, model64: 0x21f5f00021f69},
		modelTuple{type64: 0x2700000027, matchRI: 0x2734, match64: 0x00000000, model64: 0x4a6500004a6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2735, match64: 0x00000000, model64: 0xff250000ff2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21f6900021f71, model64: 0x21f7100021f76},
		modelTuple{type64: 0x2700000027, matchRI: 0x2736, match64: 0x00000000, model64: 0xff790000ff7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2737, match64: 0x00000000, model64: 0x3fda00003fde},
		modelTuple{type64: 0x2700000027, matchRI: 0x2738, match64: 0x00000000, model64: 0x21f7600021f85},
		modelTuple{type64: 0x2700000027, matchRI: 0x2739, match64: 0x00000000, model64: 0x21f8500021f8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x273a, match64: 0x00000000, model64: 0x21f8b00021f90},
		modelTuple{type64: 0x2700000027, matchRI: 0x273b, match64: 0x00000000, model64: 0x21f9000021f9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x273c, match64: 0x00000000, model64: 0x71a4000071ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x273d, match64: 0x00000000, model64: 0x21f9a00021fa2},
		modelTuple{type64: 0x2700000027, matchRI: 0x273e, match64: 0x00000000, model64: 0x21fa200021fa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x273f, match64: 0x00000000, model64: 0x21fa600021fab},
		modelTuple{type64: 0x2700000027, matchRI: 0x2740, match64: 0x00000000, model64: 0x21f2300021f29},
		modelTuple{type64: 0x2700000027, matchRI: 0x2741, match64: 0x00000000, model64: 0x21fab00021faf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2742, match64: 0x00000000, model64: 0x21faf00021fb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2743, match64: 0x00000000, model64: 0x21fb700021fc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2744, match64: 0x00000000, model64: 0x21fc200021fc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2745, match64: 0x00000000, model64: 0x21fc600021fd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2746, match64: 0x00000000, model64: 0x21fd100021fd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2747, match64: 0x00000000, model64: 0x4a7d00004a82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21fd700021fdf, model64: 0x21fdf00021feb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21feb00021ff3, model64: 0x9d1c00009d20},
		modelTuple{type64: 0x2700000027, matchRI: 0x2748, match64: 0x00000000, model64: 0x21ff300021ff9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2749, match64: 0x00000000, model64: 0x1ba950001ba9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x274a, match64: 0x00000000, model64: 0x9ac700009acb},
		modelTuple{type64: 0x2700000027, matchRI: 0x274b, match64: 0x00000000, model64: 0x21ff900022004},
		modelTuple{type64: 0x2700000027, matchRI: 0x274c, match64: 0x00000000, model64: 0x220040002200b},
		modelTuple{type64: 0x2700000027, matchRI: 0x274d, match64: 0x00000000, model64: 0x1d5880001d58d},
		modelTuple{type64: 0x2700000027, matchRI: 0x274e, match64: 0x00000000, model64: 0x2200b00022014},
		modelTuple{type64: 0x2700000027, matchRI: 0x274f, match64: 0x00000000, model64: 0x21d2100021d24},
		modelTuple{type64: 0x2700000027, matchRI: 0x2750, match64: 0x00000000, model64: 0x220140002201b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2751, match64: 0x00000000, model64: 0x2201b00022025},
		modelTuple{type64: 0x2700000027, matchRI: 0x2752, match64: 0x00000000, model64: 0x220250002202c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2753, match64: 0x00000000, model64: 0x2202c00022031},
		modelTuple{type64: 0x2700000027, matchRI: 0x2754, match64: 0x00000000, model64: 0x2203100022036},
		modelTuple{type64: 0x2700000027, matchRI: 0x2755, match64: 0x00000000, model64: 0x220360002203b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2756, match64: 0x00000000, model64: 0x2203b00022043},
		modelTuple{type64: 0x2700000027, matchRI: 0x2757, match64: 0x00000000, model64: 0x2204300022049},
		modelTuple{type64: 0x2700000027, matchRI: 0x2758, match64: 0x00000000, model64: 0x220490002204f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2759, match64: 0x00000000, model64: 0x2204f00022057},
		modelTuple{type64: 0x2700000027, matchRI: 0x275a, match64: 0x00000000, model64: 0x2205700022060},
		modelTuple{type64: 0x2700000027, matchRI: 0x275b, match64: 0x00000000, model64: 0x2206000022065},
		modelTuple{type64: 0x2700000027, matchRI: 0x275c, match64: 0x00000000, model64: 0x2206500022069},
		modelTuple{type64: 0x2700000027, matchRI: 0x275d, match64: 0x00000000, model64: 0x83050000830a},
		modelTuple{type64: 0x2700000027, matchRI: 0x275e, match64: 0x00000000, model64: 0x2206900022071},
		modelTuple{type64: 0x2700000027, matchRI: 0x275f, match64: 0x00000000, model64: 0x1413300014136},
		modelTuple{type64: 0x2700000027, matchRI: 0x2760, match64: 0x00000000, model64: 0x1d65b0001d661},
		modelTuple{type64: 0x2700000027, matchRI: 0x2761, match64: 0x00000000, model64: 0x220710002207a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2762, match64: 0x00000000, model64: 0x1ba1a0001ba20},
		modelTuple{type64: 0x2700000027, matchRI: 0x2763, match64: 0x00000000, model64: 0x2207a00022082},
		modelTuple{type64: 0x2700000027, matchRI: 0x2764, match64: 0x00000000, model64: 0x220820002208a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2765, match64: 0x00000000, model64: 0x2208a0002208f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2766, match64: 0x00000000, model64: 0x2208f00022097},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22097000220a7, model64: 0x220a7000220ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x2767, match64: 0x00000000, model64: 0x220ae000220b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2768, match64: 0x00000000, model64: 0x220b6000220bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2769, match64: 0x00000000, model64: 0x220bd000220c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x276a, match64: 0x00000000, model64: 0x220c7000220d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x276b, match64: 0x00000000, model64: 0x220d2000220d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x276c, match64: 0x00000000, model64: 0x1ae470001ae4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x276d, match64: 0x00000000, model64: 0x220d5000220dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x276e, match64: 0x00000000, model64: 0x220dc000220e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x276f, match64: 0x00000000, model64: 0x220e4000220ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2770, match64: 0x00000000, model64: 0x220ec000220f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2771, match64: 0x00000000, model64: 0x220f1000220fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2772, match64: 0x00000000, model64: 0x220fb00022101},
		modelTuple{type64: 0x2700000027, matchRI: 0x2773, match64: 0x00000000, model64: 0x2210100022105},
		modelTuple{type64: 0x2700000027, matchRI: 0x2774, match64: 0x00000000, model64: 0x221050002210b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2775, match64: 0x00000000, model64: 0x2210b00022115},
		modelTuple{type64: 0x2700000027, matchRI: 0x2776, match64: 0x00000000, model64: 0x221150002211b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2777, match64: 0x00000000, model64: 0x2211b00022129},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x2212900022131, model64: 0x221310002213d},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2778, match64: 0x00000000, model64: 0x2213d00022147},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2779, match64: 0x00000000, model64: 0x2214700022155},
		modelTuple{type64: 0x20d00000213, matchRI: 0x277a, match64: 0x00000000, model64: 0x221550002215e},
		modelTuple{type64: 0x20d00000213, matchRI: 0x277b, match64: 0x00000000, model64: 0x2215e0002216b},
		modelTuple{type64: 0x20d00000213, matchRI: 0x277c, match64: 0x00000000, model64: 0x2216b00022172},
		modelTuple{type64: 0x20d00000213, matchRI: 0x277d, match64: 0x00000000, model64: 0x2217200022179},
		modelTuple{type64: 0x20d00000213, matchRI: 0x277e, match64: 0x00000000, model64: 0x221790002217f},
		modelTuple{type64: 0x20d00000213, matchRI: 0x277f, match64: 0x00000000, model64: 0x2217f00022184},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2780, match64: 0x00000000, model64: 0x221840002218e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2781, match64: 0x00000000, model64: 0x2218e0002219b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2782, match64: 0x00000000, model64: 0x21e1f00021e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x2783, match64: 0x00000000, model64: 0x1d16c0001d173},
		modelTuple{type64: 0x2700000027, matchRI: 0x2784, match64: 0x00000000, model64: 0x14bcd00014bd1},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2785, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2786, match64: 0x00000000, model64: 0x2219b0002219f},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x2219f000221a7, model64: 0x221a7000221b5},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x221b5000221bd, model64: 0x221bd000221c7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2787, match64: 0x00000000, model64: 0x221c7000221cb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2788, match64: 0x00000000, model64: 0x221cb000221d3},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2789, match64: 0x00000000, model64: 0x221d3000221d8},
		modelTuple{type64: 0x20d00000213, matchRI: 0x278a, match64: 0x00000000, model64: 0x221d8000221df},
		modelTuple{type64: 0x20d00000213, matchRI: 0x278b, match64: 0x00000000, model64: 0x221df000221e5},
		modelTuple{type64: 0x20d00000213, matchRI: 0x278c, match64: 0x00000000, model64: 0x221e5000221ea},
		modelTuple{type64: 0x20d00000213, matchRI: 0x278d, match64: 0x00000000, model64: 0x221ea000221f0},
		modelTuple{type64: 0x20d00000213, matchRI: 0x278e, match64: 0x00000000, model64: 0x221f0000221fb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x278f, match64: 0x00000000, model64: 0x1d9bd0001d9c7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2790, match64: 0x00000000, model64: 0x14bd700014bdb},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2791, match64: 0x00000000, model64: 0x221fb00022206},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2792, match64: 0x00000000, model64: 0x222060002220c},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2793, match64: 0x00000000, model64: 0x114cd000114d2},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2794, match64: 0x00000000, model64: 0x2220c00022212},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2795, match64: 0x00000000, model64: 0x2221200022217},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2796, match64: 0x00000000, model64: 0x2221700022221},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2797, match64: 0x00000000, model64: 0x2222100022225},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2798, match64: 0x00000000, model64: 0x222250002222a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2799, match64: 0x00000000, model64: 0x2222a00022238},
		modelTuple{type64: 0x20d00000213, matchRI: 0x279a, match64: 0x00000000, model64: 0x2223800022241},
		modelTuple{type64: 0x20d00000213, matchRI: 0x279b, match64: 0x00000000, model64: 0x222410002224a},
		modelTuple{type64: 0x20d00000213, matchRI: 0x279c, match64: 0x00000000, model64: 0x2224a00022253},
		modelTuple{type64: 0x20d00000213, matchRI: 0x279d, match64: 0x00000000, model64: 0x2225300022258},
		modelTuple{type64: 0x20d00000213, matchRI: 0x279e, match64: 0x00000000, model64: 0x2225800022260},
		modelTuple{type64: 0x2700000027, matchRI: 0x279f, match64: 0x00000000, model64: 0x221840002218e},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a0, match64: 0x00000000, model64: 0x2226000022267},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27a1, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1a7000001a9, matchRI: -0x0001, match64: 0x2226700022272, model64: 0x2700000027},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x2227700022287, model64: 0x2228700022292},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a3, match64: 0x00000000, model64: 0x22297000222a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a5, match64: 0x00000000, model64: 0x222a9000222bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x222bd000222c8, model64: 0x222c8000222cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x222cd000222e1, model64: 0x222e1000222f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x222f50002230e, model64: 0x2230e00022321},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2232100022338, model64: 0x223380002234c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2234c00022367, model64: 0x223670002237c},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a6, match64: 0x00000000, model64: 0x2237c00022383},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x223830002238a, model64: 0x2238a00022391},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ab, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x223a3000223af, model64: 0x223af000223bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ad, match64: 0x00000000, model64: 0x223c0000223c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ae, match64: 0x00000000, model64: 0x223c9000223d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x27af, match64: 0x00000000, model64: 0x223d2000223dc},
		modelTuple{type64: 0xb1700000b1e, matchRI: 0x27b0, match64: 0x00000000, model64: 0x223dc000223e7},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27b1, match64: 0x00000000, model64: 0x223e7000223ee},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27b2, match64: 0x00000000, model64: 0x223ee000223f4},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27b3, match64: 0x00000000, model64: 0x223f4000223f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b4, match64: 0x00000000, model64: 0x223f800022401},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27b8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x27b9, match64: 0x00000000, model64: 0x2240f00022419},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x27ba, match64: 0x00000000, model64: 0x224190002241e},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2241e00022426, model64: 0x224260002242e},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2242e00022439, model64: 0x2243900022444},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x27bb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27bc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27bd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2244900022455, model64: 0x2244900022455},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2245500022465, model64: 0x2245500022465},
		modelTuple{type64: 0x2700000027, matchRI: 0x27bf, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c0, match64: 0x00000000, model64: 0x1f2480001f24d},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c1, match64: 0x00000000, model64: 0x2246500022471},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c2, match64: 0x00000000, model64: 0x2247100022482},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c3, match64: 0x00000000, model64: 0x224820002248a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2248a00022493, model64: 0x224930002249c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2249c000224a9, model64: 0x224a9000224b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c4, match64: 0x00000000, model64: 0x224b6000224be},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c5, match64: 0x00000000, model64: 0x224be000224c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c6, match64: 0x00000000, model64: 0x224c9000224d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c7, match64: 0x00000000, model64: 0x224d9000224e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27ca, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27cb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27cd, match64: 0x00000000, model64: 0xa7900000a7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x224f3000224f9, model64: 0x224f900022500},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ce, match64: 0x00000000, model64: 0x2250000022507},
		modelTuple{type64: 0x2700000027, matchRI: 0x27cf, match64: 0x00000000, model64: 0x2250700022510},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d0, match64: 0x00000000, model64: 0x1f1f00001f24},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d1, match64: 0x00000000, model64: 0x225100002251a},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d2, match64: 0x00000000, model64: 0x2251a00022521},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2252100022527, model64: 0x225270002252e},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d3, match64: 0x00000000, model64: 0x2252e00022532},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2253c00022546},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2254c00022555, model64: 0x225550002255e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2255e00022566, model64: 0x2255e00022566},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d7, match64: 0x00000000, model64: 0x225660002256d},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d9, match64: 0x00000000, model64: 0x225710002257b},
		modelTuple{type64: 0x2700000027, matchRI: 0x27da, match64: 0x00000000, model64: 0x3fc200003fca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x225800002258c, model64: 0x2258c00022598},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22598000225a6, model64: 0x225a6000225b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x27dc, match64: 0x00000000, model64: 0x225b6000225c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x225c5000225d6, model64: 0x225d6000225e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x225e9000225f3, model64: 0x225f3000225fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x27dd, match64: 0x00000000, model64: 0x225fb00022605},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2260500022615, model64: 0x2261500022625},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2262500022638, model64: 0x226380002264b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2264b0002265f, model64: 0x2265f00022675},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2267500022689, model64: 0x226890002269f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2269f000226ae, model64: 0x226ae000226bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x27de, match64: 0x00000000, model64: 0x226bd000226c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x226c8000226d2, model64: 0x226d2000226dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x226dc000226e7, model64: 0x226e7000226f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x226f2000226fa, model64: 0x226f2000226fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x27df, match64: 0x00000000, model64: 0x226fa00022701},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2270100022708, model64: 0x227080002270f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2270f00022719, model64: 0x21f1900021f1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2271900022723, model64: 0x2271900022723},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2272300022735, model64: 0x2273500022749},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x227490002275b, model64: 0x227490002275b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2275b00022771, model64: 0x2277100022789},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2278900022797, model64: 0x22797000227aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x227aa000227ba, model64: 0x227ba000227ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x227ca000227d6, model64: 0x227ca000227d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x227d6000227e6, model64: 0x227e6000227f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x227f800022809, model64: 0x228090002281c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2281c00022828, model64: 0x2282800022834},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e0, match64: 0x00000000, model64: 0x228340002283c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2283c00022843, model64: 0x228430002284a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2284a00022857, model64: 0x2285700022866},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e1, match64: 0x00000000, model64: 0x228660002287b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2287b0002288c, model64: 0x2288c0002289f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2289f000228a8, model64: 0x228a8000228b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x228b1000228b9, model64: 0x228b9000228c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x228c1000228d7, model64: 0x228d7000228ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e6, match64: 0x00000000, model64: 0x42830000428a},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229050002290f, model64: 0x2290f00022919},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ea, match64: 0x00000000, model64: 0x2291900022920},
		modelTuple{type64: 0x2700000027, matchRI: 0x27eb, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229200002292a, model64: 0x229200002292a},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x27ec, match64: 0x00000000, model64: 0x2292a00022933},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x27ed, match64: 0x00000000, model64: 0x229330002293c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2293f00022945, model64: 0x229450002294c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2294c00022955, model64: 0x229550002295f},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ef, match64: 0x00000000, model64: 0x2295f00022965},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f0, match64: 0x00000000, model64: 0x229650002296d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2297600022983, model64: 0x229830002298a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2298a00022990, model64: 0x2299000022996},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22996000229a2, model64: 0x229a2000229ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f5, match64: 0x00000000, model64: 0x229b2000229ba},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229c4000229cd, model64: 0x229cd000229d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f9, match64: 0x00000000, model64: 0x229d8000229db},
		modelTuple{type64: 0x2700000027, matchRI: 0x27fa, match64: 0x00000000, model64: 0x229db000229df},
		modelTuple{type64: 0x2700000027, matchRI: 0x27fb, match64: 0x00000000, model64: 0x229df000229e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x27fc, match64: 0x00000000, model64: 0x229e6000229e9},
		modelTuple{type64: 0x20d00000213, matchRI: 0x27fd, match64: 0x00000000, model64: 0x229e9000229f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x27fe, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229fd00022a08, model64: 0x22a0800022a0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a0f00022a15, model64: 0x130f9000130fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a1500022a1b, model64: 0x351100003513},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a2100022a26, model64: 0x22a2100022a26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a2600022a31, model64: 0x22a3100022a3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a3c00022a43, model64: 0x22a4300022a4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2801, match64: 0x00000000, model64: 0x22a4a00022a53},
		modelTuple{type64: 0x2700000027, matchRI: 0x2802, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2803, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2804, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2806, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2808, match64: 0x00000000, model64: 0x22a6d00022a77},
		modelTuple{type64: 0x2700000027, matchRI: 0x2809, match64: 0x00000000, model64: 0x22a7700022a7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a7f00022a87, model64: 0x22a8700022a90},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a9000022a97, model64: 0x22a9700022a9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a9f00022aa6, model64: 0x22a9f00022aa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x280a, match64: 0x00000000, model64: 0x22aa600022aae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22aae00022ab9, model64: 0x22ab900022ac5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ac500022acb, model64: 0x22acb00022ad2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ad200022ad9, model64: 0x22ad900022ae1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ae100022aec, model64: 0x22aec00022af8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22af800022aff, model64: 0x22aff00022b07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b0700022b0d, model64: 0x22b0d00022b14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b1400022b1b, model64: 0x22b1b00022b23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b2300022b2e, model64: 0x22b2e00022b3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b3a00022b40, model64: 0x22b4000022b47},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b4700022b4f, model64: 0x22b4f00022b58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b5800022b5e, model64: 0x22b5800022b5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x280b, match64: 0x00000000, model64: 0x22b5e00022b69},
		modelTuple{type64: 0x2700000027, matchRI: 0x280c, match64: 0x00000000, model64: 0x22b6900022b71},
		modelTuple{type64: 0x2700000027, matchRI: 0x280d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x22b7100022b76, model64: 0x22b7600022b7c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x22b8800022b90},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2812, match64: 0x00000000, model64: 0x22b9b00022ba4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2813, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2814, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2816, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2817, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2819, match64: 0x00000000, model64: 0x22bae00022bb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x281a, match64: 0x00000000, model64: 0x22bb300022bb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x281b, match64: 0x00000000, model64: 0x22bb900022bbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x281c, match64: 0x00000000, model64: 0x22bbd00022bc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x281d, match64: 0x00000000, model64: 0x105b5000105bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x281e, match64: 0x00000000, model64: 0x22bc100022bc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x281f, match64: 0x00000000, model64: 0x117d2000117d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2820, match64: 0x00000000, model64: 0x7b7200007b77},
		modelTuple{type64: 0x2700000027, matchRI: 0x2822, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2823, match64: 0x00000000, model64: 0x22bd400022bd9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x22be200022be7, model64: 0x1e5790001e57c},
		modelTuple{type64: 0xb1700000b1e, matchRI: -0x0001, match64: 0x22be700022bec, model64: 0x22bec00022bf3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22bf300022bf8, model64: 0x13a9300013a96},
		modelTuple{type64: 0x2700000027, matchRI: 0x2826, match64: 0x00000000, model64: 0x22bf800022bfb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22bfb00022c01, model64: 0x22c0100022c05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c0500022c0a, model64: 0x22c0a00022c0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c0d00022c12, model64: 0x22c1200022c15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c1500022c1a, model64: 0x31c00000321},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c1a00022c1f, model64: 0x13aae00013ab1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c1f00022c24, model64: 0x22c2400022c27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c2700022c2c, model64: 0x22c2c00022c34},
		modelTuple{type64: 0x2700000027, matchRI: 0x2827, match64: 0x00000000, model64: 0x1e4e00001e4e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2828, match64: 0x00000000, model64: 0x22c3400022c3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c3c00022c43, model64: 0x22c4300022c50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c5000022c55, model64: 0x22c5500022c58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c5800022c5d, model64: 0xa0960000a099},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c5d00022c62, model64: 0x1e5940001e59b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2829, match64: 0x00000000, model64: 0x22c6200022c65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c6500022c6a, model64: 0x22c6a00022c71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c7100022c76, model64: 0x22c7600022c79},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c7900022c7e, model64: 0x22c7e00022c86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c8600022c8b, model64: 0x22c8b00022c92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c9200022c97, model64: 0x22c9700022c9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c9a00022ca0, model64: 0x13a6800013a6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ca000022ca5, model64: 0x22ca500022cad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22cad00022cb2, model64: 0x22cb200022cb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22cb500022cba, model64: 0x22cba00022cbd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22cbd00022cc2, model64: 0x22cc200022cc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x282a, match64: 0x00000000, model64: 0x22cc500022ccd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ccd00022cd2, model64: 0x22cd200022cd9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22cd900022cde, model64: 0x22cde00022ce1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ce100022ce6, model64: 0x22ce600022ce9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ce900022cee, model64: 0x22cee00022cf1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22cf100022cf6, model64: 0x22cf600022cf9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22cf900022cff, model64: 0x22cff00022d06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d0600022d0c, model64: 0x1e5570001e55e},
		modelTuple{type64: 0x2700000027, matchRI: 0x282b, match64: 0x00000000, model64: 0x22bec00022bf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x282c, match64: 0x00000000, model64: 0x22d0c00022d13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d1300022d19, model64: 0x22d1900022d20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d2000022d25, model64: 0x22d2500022d28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d2800022d2e, model64: 0x22cee00022cf1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d2e00022d33, model64: 0x22d3300022d36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d3600022d3b, model64: 0x22d3b00022d3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d3e00022d44, model64: 0x22d4400022d4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d4b00022d51, model64: 0x22d5100022d58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d5800022d5d, model64: 0x13b0b00013b0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d5d00022d62, model64: 0x22d6200022d6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d6a00022d70, model64: 0x22d7000022d74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d7400022d7a, model64: 0x22d7a00022d7d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d7d00022d82, model64: 0x22d8200022d86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d8600022d8b, model64: 0x22d8b00022d93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22d9300022d98, model64: 0x22d9800022d9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x282d, match64: 0x00000000, model64: 0x22d9f00022da6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22da600022dab, model64: 0x22dab00022db3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22db300022db9, model64: 0x13a9900013a9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22db900022dbe, model64: 0x13ad500013ad8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22dbe00022dc3, model64: 0x13aeb00013aee},
		modelTuple{type64: 0x2700000027, matchRI: 0x282e, match64: 0x00000000, model64: 0x13a7600013a79},
		modelTuple{type64: 0x2700000027, matchRI: 0x282f, match64: 0x00000000, model64: 0x7e0000007e03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22dc300022dc8, model64: 0x22dc800022dd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2830, match64: 0x00000000, model64: 0x22dd000022ddd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ddd00022de2, model64: 0x22de200022de9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22de900022dee, model64: 0x22dee00022df7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22df700022dfc, model64: 0x22dfc00022e09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e0900022e0e, model64: 0x22e0e00022e1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e1a00022e1f, model64: 0xc3770000c37f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e1f00022e28, model64: 0x22e1f00022e28},
		modelTuple{type64: 0x2700000027, matchRI: 0x2831, match64: 0x00000000, model64: 0x22e2800022e30},
		modelTuple{type64: 0x2700000027, matchRI: 0x2832, match64: 0x00000000, model64: 0x22e2800022e30},
		modelTuple{type64: 0x2700000027, matchRI: 0x2833, match64: 0x00000000, model64: 0x22e3000022e34},
		modelTuple{type64: 0x2700000027, matchRI: 0x2834, match64: 0x00000000, model64: 0x22e3400022e3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2835, match64: 0x00000000, model64: 0x22e3d00022e45},
		modelTuple{type64: 0x2700000027, matchRI: 0x2836, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x22e4500022e50, model64: 0x22e5000022e5b},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x22e5b00022e65, model64: 0x22e6500022e6d},
		modelTuple{type64: 0x20d00000213, matchRI: -0x0001, match64: 0x22e6d00022e77, model64: 0x22e7700022e81},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2837, match64: 0x00000000, model64: 0x22e8100022e8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2838, match64: 0x00000000, model64: 0x22e8f00022e97},
		modelTuple{type64: 0x2700000027, matchRI: 0x2839, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x283a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x22e9d00022ea4},
		modelTuple{type64: 0x2700000027, matchRI: 0x283d, match64: 0x00000000, model64: 0x22ea700022eaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x283e, match64: 0x00000000, model64: 0xeb1a0000eb1c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22eb400022ebf, model64: 0x22ebf00022eca},
		modelTuple{type64: 0x2700000027, matchRI: 0x2840, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ed000022ed8, model64: 0x22ed800022ee0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ee000022ee6, model64: 0x22ee600022eea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22eea00022ef1, model64: 0x22ef100022ef8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2842, match64: 0x00000000, model64: 0x22ef800022efa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2843, match64: 0x00000000, model64: 0x22efa00022eff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2844, match64: 0x00000000, model64: 0x22eff00022f04},
		modelTuple{type64: 0x5db000005e5, matchRI: 0x2846, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x284a, match64: 0x00000000, model64: 0x22f1d00022f2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x284b, match64: 0x00000000, model64: 0x22f2a00022f36},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f4000022f51, model64: 0x22f5100022f5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x284e, match64: 0x00000000, model64: 0xdc680000dc6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x284f, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2852, match64: 0x00000000, model64: 0x22f6900022f70},
		modelTuple{type64: 0x2700000027, matchRI: 0x2853, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x20d00000213, matchRI: 0x2854, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2857, match64: 0x00000000, model64: 0x22f7b00022f80},
		modelTuple{type64: 0x2700000027, matchRI: 0x2858, match64: 0x00000000, model64: 0x22f8000022f83},
		modelTuple{type64: 0x2700000027, matchRI: 0x2859, match64: 0x00000000, model64: 0x22f8300022f85},
		modelTuple{type64: 0x2700000027, matchRI: 0x285b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f9b00022fa2, model64: 0x22fa200022fb3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22fb300022fba, model64: 0x22fba00022fc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22fc900022fd0, model64: 0x22fd000022fe1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22fe100022fe8, model64: 0x22fe800022ff5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ff500022ffc, model64: 0x22ffc0002300c},
		modelTuple{type64: 0x2700000027, matchRI: 0x285e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2300c00023015, model64: 0x230150002301f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2301f00023026, model64: 0x2302600023037},
		modelTuple{type64: 0x2700000027, matchRI: 0x285f, match64: 0x00000000, model64: 0x230370002304a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2304a0002305a, model64: 0x2305a0002306d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2306d0002307c, model64: 0x2307c0002308e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2860, match64: 0x00000000, model64: 0x2308e000230a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x230a0000230b0, model64: 0x230b0000230c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x230c3000230cf, model64: 0x230cf000230db},
		modelTuple{type64: 0x2700000027, matchRI: 0x2861, match64: 0x00000000, model64: 0x230db000230e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x230e9000230f0, model64: 0x230f000023104},
		modelTuple{type64: 0x2700000027, matchRI: 0x2862, match64: 0x00000000, model64: 0x2310400023118},
		modelTuple{type64: 0x2700000027, matchRI: 0x2863, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2864, match64: 0x00000000, model64: 0x231180002312a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2312a00023131, model64: 0x2313100023143},
		modelTuple{type64: 0x2700000027, matchRI: 0x2865, match64: 0x00000000, model64: 0x2314300023155},
		modelTuple{type64: 0x2700000027, matchRI: 0x2866, match64: 0x00000000, model64: 0x2315500023166},
		modelTuple{type64: 0x2700000027, matchRI: 0x2867, match64: 0x00000000, model64: 0x2316600023179},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2317900023180, model64: 0x2318000023192},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2319200023199, model64: 0x23199000231ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231ab000231b2, model64: 0x231b2000231c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231c4000231cb, model64: 0x231cb000231de},
		modelTuple{type64: 0x2700000027, matchRI: 0x2868, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x231de000231e5, model64: 0x231e5000231eb},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2869, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x231eb000231f2, model64: 0x231f2000231f8},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x231f8000231ff, model64: 0x231ff00023206},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x232060002320d, model64: 0x2320d00023214},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x286a, match64: 0x00000000, model64: 0x232140002321b},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x286b, match64: 0x00000000, model64: 0x2321b00023227},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x232270002322e, model64: 0x2322e00023239},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2323900023240, model64: 0x232400002324c},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2324c00023253, model64: 0x6fdc00006fe0},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x232530002325a, model64: 0x2325a00023261},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x286c, match64: 0x00000000, model64: 0x2326100023269},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2326900023270, model64: 0x2327000023277},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x232770002327e, model64: 0x2327e00023285},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x286d, match64: 0x00000000, model64: 0x232850002328c},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2328c00023293, model64: 0x232930002329b},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x2329b000232a3, model64: 0x232a3000232b0},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x232b0000232b7, model64: 0x232b7000232bd},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x232bd000232c4, model64: 0x232c4000232cb},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x286e, match64: 0x00000000, model64: 0x232cb000232d2},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x286f, match64: 0x00000000, model64: 0x232d2000232d8},
		modelTuple{type64: 0x1ab000001b5, matchRI: 0x2870, match64: 0x00000000, model64: 0x232d8000232e5},
		modelTuple{type64: 0x1ab000001b5, matchRI: -0x0001, match64: 0x232e5000232ec, model64: 0x232ec000232f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2872, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2873, match64: 0x00000000, model64: 0x232fb00023301},
		modelTuple{type64: 0x2700000027, matchRI: 0x2875, match64: 0x00000000, model64: 0x233050002330b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2876, match64: 0x00000000, model64: 0x2330b00023313},
		modelTuple{type64: 0x2700000027, matchRI: 0x2877, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233130002331b, model64: 0x233130002331b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x968c0000968f, model64: 0x968c0000968f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2331b00023329, model64: 0x2331b00023329},
		modelTuple{type64: 0x2700000027, matchRI: 0x2878, match64: 0x00000000, model64: 0x2332900023335},
		modelTuple{type64: 0x2700000027, matchRI: 0x2879, match64: 0x00000000, model64: 0x3fc200003fca},
		modelTuple{type64: 0x2700000027, matchRI: 0x287a, match64: 0x00000000, model64: 0x2333500023343},
		modelTuple{type64: 0x2700000027, matchRI: 0x287c, match64: 0x00000000, model64: 0x2334300023351},
		modelTuple{type64: 0x2700000027, matchRI: 0x287d, match64: 0x00000000, model64: 0x233510002335e},
		modelTuple{type64: 0x2700000027, matchRI: 0x287e, match64: 0x00000000, model64: 0x2335e00023364},
		modelTuple{type64: 0x2700000027, matchRI: 0x2880, match64: 0x00000000, model64: 0x2336400023369},
		modelTuple{type64: 0x2700000027, matchRI: 0x2881, match64: 0x00000000, model64: 0x233690002336d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2882, match64: 0x00000000, model64: 0x2336d0002337d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2883, match64: 0x00000000, model64: 0x2337d0002338d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2884, match64: 0x00000000, model64: 0x2338d00023399},
		modelTuple{type64: 0x2700000027, matchRI: 0x2885, match64: 0x00000000, model64: 0x233990002339f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2886, match64: 0x00000000, model64: 0x2339f000233a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2887, match64: 0x00000000, model64: 0x233a5000233ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x2888, match64: 0x00000000, model64: 0x233ab000233b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233b2000233c0, model64: 0x233b2000233c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233c0000233cd, model64: 0x233c0000233cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233cd000233d8, model64: 0x233cd000233d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233d8000233e3, model64: 0x233d8000233e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233e300023403, model64: 0x2340300023417},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2341700023430, model64: 0x234300002343b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2343b0002344d, model64: 0x2344d00023459},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234590002347a, model64: 0x2347a00023492},
		modelTuple{type64: 0x2700000027, matchRI: 0x288b, match64: 0x00000000, model64: 0x234920002349e},
		modelTuple{type64: 0x2700000027, matchRI: 0x288c, match64: 0x00000000, model64: 0x96040000960e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2349e000234b9, model64: 0x234b9000234c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234c5000234d9, model64: 0x234d9000234e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234e1000234fc, model64: 0x234fc00023508},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x2350800023526, model64: 0x235260002354c},
		modelTuple{type64: 0x9d7000009de, matchRI: -0x0001, match64: 0x2354c00023553, model64: 0x2355300023584},
		modelTuple{type64: 0x2700000027, matchRI: 0x288e, match64: 0x00000000, model64: 0x2358400023597},
		modelTuple{type64: 0x2700000027, matchRI: 0x288f, match64: 0x00000000, model64: 0x235970002359d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2890, match64: 0x00000000, model64: 0x2359d000235ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x2891, match64: 0x00000000, model64: 0x235ae000235b9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x235c2000235db},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x235db000235f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2894, match64: 0x00000000, model64: 0x1cd6d0001cd79},
		modelTuple{type64: 0x2700000027, matchRI: 0x2895, match64: 0x00000000, model64: 0x1cd6d0001cd79},
		modelTuple{type64: 0x2700000027, matchRI: 0x2897, match64: 0x00000000, model64: 0x236020002360f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2898, match64: 0x00000000, model64: 0x2360f0002361c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2899, match64: 0x00000000, model64: 0x2361c00023628},
		modelTuple{type64: 0x2700000027, matchRI: 0x289a, match64: 0x00000000, model64: 0x2362800023634},
		modelTuple{type64: 0x2700000027, matchRI: 0x289b, match64: 0x00000000, model64: 0x2363400023640},
		modelTuple{type64: 0x2700000027, matchRI: 0x289c, match64: 0x00000000, model64: 0x236400002364c},
		modelTuple{type64: 0x2700000027, matchRI: 0x289d, match64: 0x00000000, model64: 0x2364c00023658},
		modelTuple{type64: 0x2700000027, matchRI: 0x289e, match64: 0x00000000, model64: 0x2365800023662},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2366b00023677, model64: 0x2366b00023677},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a0, match64: 0x00000000, model64: 0xc39e0000c3a1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2368c00023693},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a5, match64: 0x00000000, model64: 0x236980002369e},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a6, match64: 0x00000000, model64: 0x968c0000968f},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a8, match64: 0x00000000, model64: 0x2369e000236af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x236af000236b5, model64: 0x236b5000236c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x236c6000236cc, model64: 0x236cc000236dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x236dd000236e3, model64: 0x236e3000236f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x236f4000236fa, model64: 0x236fa0002370b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2370b00023711, model64: 0x2371100023721},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2372100023729, model64: 0x237290002373e},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28af, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2384a00023854, model64: 0x2384a00023854},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b2, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2386a00023871, model64: 0x2386a00023871},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2388700023890},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238900002389d, model64: 0x238900002389d},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x238a4000238aa},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x238ad000238b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238c7000238c9, model64: 0x238c7000238c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238c9000238d3, model64: 0x238c9000238d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238d3000238dd, model64: 0x238d3000238dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238dd000238e7, model64: 0x238dd000238e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238e7000238f0, model64: 0x238e7000238f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238f0000238fa, model64: 0x238f0000238fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238fa00023903, model64: 0x238fa00023903},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2390300023910, model64: 0x2390300023910},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2391000023917, model64: 0x2391000023917},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2391c00023924, model64: 0x239240002392d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2392d00023935, model64: 0x239350002393e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2393e00023946, model64: 0x239460002394f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2394f00023957, model64: 0x2395700023960},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2396000023968, model64: 0x2396800023971},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ca, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28cc, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28cd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ce, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd720000cd7a, model64: 0x239810002398a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2398e00023995, model64: 0x2398e00023995},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23998000239a2, model64: 0x23998000239a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239a2000239ad, model64: 0x239a2000239ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239ad000239b8, model64: 0x239ad000239b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239b8000239c5, model64: 0x239b8000239c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239c5000239d0, model64: 0x239c5000239d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d2, match64: 0x00000000, model64: 0x239d0000239db},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d3, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d4, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d5, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d7, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d8, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d9, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28da, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239db000239e0, model64: 0x239db000239e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239e0000239e4, model64: 0x239e0000239e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x28df, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e2, match64: 0x00000000, model64: 0x239fa00023a01},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e4, match64: 0x00000000, model64: 0x23a0100023a0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f0cd0001f0cf, model64: 0x1f0cd0001f0cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e6, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e7, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a2900023a34, model64: 0x23a2900023a34},
		modelTuple{type64: 0x2700000027, matchRI: 0x28eb, match64: 0x00000000, model64: 0x23a4800023a52},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ec, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ed, match64: 0x00000000, model64: 0x23a5200023a59},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ee, match64: 0x00000000, model64: 0x23a5900023a66},
		modelTuple{type64: 0x2700000027, matchRI: 0x28f0, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28f1, match64: 0x00000000, model64: 0x1528f0001529b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a6a00023a71, model64: 0x23a6a00023a71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a7100023a78, model64: 0x23a7100023a78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a7f00023a88, model64: 0x23a7f00023a88},
		modelTuple{type64: 0x2700000027, matchRI: 0x28fb, match64: 0x00000000, model64: 0x23a9200023a94},
		modelTuple{type64: 0x2700000027, matchRI: 0x28fc, match64: 0x00000000, model64: 0x23a5900023a66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a9400023a9e, model64: 0x23a9e00023aad},
		modelTuple{type64: 0x2700000027, matchRI: 0x28fd, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x28fe, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2900, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x2901, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2902, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2903, match64: 0x00000000, model64: 0x23ab700023abc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23abc00023ac2, model64: 0x23abc00023ac2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2904, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2906, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2907, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23adb00023ae2, model64: 0x23adb00023ae2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2908, match64: 0x00000000, model64: 0x23ae200023aea},
		modelTuple{type64: 0x2700000027, matchRI: 0x2909, match64: 0x00000000, model64: 0x23aea00023af3},
		modelTuple{type64: 0x2700000027, matchRI: 0x290a, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x290b, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x290c, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x290e, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2910, match64: 0x00000000, model64: 0x23a5900023a66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23af800023b03, model64: 0x23af800023b03},
		modelTuple{type64: 0x2700000027, matchRI: 0x2912, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b0e00023b18, model64: 0x23b1800023b22},
		modelTuple{type64: 0x2700000027, matchRI: 0x2914, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2917, match64: 0x00000000, model64: 0x23b3500023b3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2918, match64: 0x00000000, model64: 0x23b3d00023b45},
		modelTuple{type64: 0x2700000027, matchRI: 0x2919, match64: 0x00000000, model64: 0x23b4500023b4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x291a, match64: 0x00000000, model64: 0x23b4d00023b55},
		modelTuple{type64: 0x2700000027, matchRI: 0x291b, match64: 0x00000000, model64: 0x23b5500023b5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x291c, match64: 0x00000000, model64: 0x23b5d00023b65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b6500023b6d, model64: 0x23b6500023b6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b6d00023b74, model64: 0x23b6d00023b74},
		modelTuple{type64: 0x2700000027, matchRI: 0x291d, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2922, match64: 0x00000000, model64: 0x16700000169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2923, match64: 0x00000000, model64: 0x23b7f00023b8a},
	}
	__dr_re = []*regexp.Regexp{
		regexp.MustCompile(`(?i)EK-G[CN][0-9]{3}`),
		regexp.MustCompile(`(?i)EK-GC([0-9]{3})`),
		regexp.MustCompile(`(?i)(?:Tesla/(?:(?:develop|feature|terminal-das-fsd-eap)-)?[0-9.]+|QtCarBrowser)`),
		regexp.MustCompile(`(?i)Tesla/[0-9.]+`),
		regexp.MustCompile(`(?i)Archos.*GAMEPAD([2]?)`),
		regexp.MustCompile(`(?i)Nintendo (([3]?DS[i]?)|Wii[U]?|Switch|GameBoy)`),
		regexp.MustCompile(`(?i)Retroid Pocket 2(?:Plus|\+)`),
		regexp.MustCompile(`(?i)PlayStation ?(2|3|4 Pro|4|5|Portable|Vita)`),
		regexp.MustCompile(`(?i)10moons[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:E500A_2019|2E E450 2018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E500A_2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2E E450 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:180[1379]-A01|1713-A01|1707-A01|1509-A00|1603-A03|1607-A01|1503-A01|1505-A0[12]|1605-A01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1807-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1803-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1809-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1713-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1707-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1801-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1509-A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1503-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1605-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1603-A03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1607-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1505-A0[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)3GNET[ _]`),
		regexp.MustCompile(`(?i)3GNET[ _](U8|T800|U6s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)3GNET[ _]T ?900`),
		regexp.MustCompile(`(?i)(?:Aplay ?[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aplay ?([34])`),
		regexp.MustCompile(`(?i)AC0731B|AC1024C|AC7803C|BC9710AM|EL72B|LC0720C|LC0723B|LC0725B|LC0804B|LC0808B|LC0809B|LC0810C|LC0816C|LC0901D|LC1016C|MT0724B|MT0729[BD]|MT0811B|OC1020A|RC07(?:09B|10B|18C|19H|2[16]B|22C|27H|34H|43H)|RC0817C|RC1018C|RC1019G|RC1025F|RC1301C|RC780[24]F|RC9711B|RC9712C|RC9716B|RC9717B|RC9724C|RC9726C|RC9727F|RC9730C|RC9731C|TS0807B|TS1013B|VM0711A|VM1017A|RC0813C|QS9719D|QS9718C|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT7801C|TS9708B|AC0732C|MT0739D|MT0812E|(?:3Q_)?ER71B`),
		regexp.MustCompile(`(?i)MT0724B|LC0901D|LC0816C|LC0810C|LC0809B|LC0808B|LC0804B|LC0725B|LC0723B`),
		regexp.MustCompile(`(?i)VM1017A|TS1013B|TS0807B|RC9731C|RC9730C|RC9727F|RC9726C|RC9724C|RC9717B|RC9716B|RC9712C|RC9711B|RC1301C|RC1025F|RC1019G|RC1018C|RC0817C|RC0813C|RC0743H|RC0734H|RC0726B|RC0722C|RC0721B|RC0719H|RC0718C|RC0710B|RC0709B|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT0811B|MT0739D|MT0729[BD]|LC1016C|LC0720C|BC9710AM|AC1024C|AC0731B`),
		regexp.MustCompile(`(?i)MT7801C|QS9718C|QS9719D|VM0711A|OC1020A`),
		regexp.MustCompile(`(?i)AC7803C|AC0732C|RC0727H`),
		regexp.MustCompile(`(?i)MT0812E|RC7802F`),
		regexp.MustCompile(`(?i)EL72B|(?:3Q_)?ER71B`),
		regexp.MustCompile(`(?i)(RC7804F)`),
		regexp.MustCompile(`(?i)4Good[ _]|S450m [43]G|S555m 4G|S501m 3G|T700i_3G|People (?:G503|G410|GT300)|Light (?:A10[34]|B100|AT300)|Light_AT200`),
		regexp.MustCompile(`(?i)(T700i|T100m|T70[34]m)[_ ]?3G`),
		regexp.MustCompile(`(?i)Light[_ ](AT[23]00)`),
		regexp.MustCompile(`(?i)People (GT300|AT100)`),
		regexp.MustCompile(`(?i)S555m[_ ]4G`),
		regexp.MustCompile(`(?i)(S(?:450m|501m)[_ ][43]G|Light (?:A10[34]|B100)|People (?:G503|G410))`),
		regexp.MustCompile(`(?i)4Good[ _]([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)4ife (4K Smart TV Box)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tarzan F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SWEGUE|DRENA|Kamba(?:_2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8848 (M[3-6])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G4040)`),
		regexp.MustCompile(`(?i)(?:A1 (?:Alpha|Alpha 20\+)|Alpha 20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1 Alpha 20\+`),
		regexp.MustCompile(`(?i)A95X MAX \+`),
		regexp.MustCompile(`(?i)A95X ?Z2PLUS`),
		regexp.MustCompile(`(?i)A95X[ _-]?(F[1-4]|R[1235]|[AWZ]2|A1)`),
		regexp.MustCompile(`(?i)(TK701)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)elite Aquarius(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hashtag|Shine|Chacer)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM[ _]([^/;)]+)(?: Build|[;)])|AG[_ ]Go[_-]Tab|(?:Flair|Ultra 2|Freedom Access)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AG[_ ]Go[_-]Tab[_ ]Access(_2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Flair|Ultra 2|Freedom Access)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM A9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM_H3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM_H5_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM[ _]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:AIDATA ELDE 10 TABLET|ADT_?1061(?:_1)?|ADT1012L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADT_?1061(?:_1)?`),
		regexp.MustCompile(`(?i)AIRBOOK PRO 8S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris708|Kingcomm C500`),
		regexp.MustCompile(`(?i)ALDINORD, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)ALDISUED, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)ALLINmobile_ARENA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMA[ _](A703)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LE-3[29]ZTHS25)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AM(350|355|40[257]|41[025]|450|50[689]|52[037]|51[58]|53[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AM(355|407)`),
		regexp.MustCompile(`(?i)AM([0-9]{3})`),
		regexp.MustCompile(`(?i)ANS/|UL40 Build`),
		regexp.MustCompile(`(?i)(AnPad_U2)`),
		regexp.MustCompile(`(?i)AOC,|(?:Q10107L-ME)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Q10107L-ME)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LE(?:32|43)S5970(?:s)?-20|LE55U7970-30|LE43S5977-20|U60856)`),
		regexp.MustCompile(`(?i)AOYODKG[_ ](A38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(WT(?:22|19)M-FI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARRIS[,;] ([^),;/]+)`),
		regexp.MustCompile(`(?i)ASSE[-._ ](Q[35]s?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EA1002|EA21100[125]|U(?:202|304|31[89]|328|626|668|705)AA|QS5509A|V340U|V350U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U304AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U705AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA211001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QS5509A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U318AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U319AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U328AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U202AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA1002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V350U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U626AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA211002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U668AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V340U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATMAN[ _-]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:ATOL (?:150F)|Smart_(?:Prime|SLIM_Plus))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATOL (150F)`),
		regexp.MustCompile(`(?i)(TB-703G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUX[ _]([^/;)]+)(?:_TD)`),
		regexp.MustCompile(`(?i)Excer[ _]`),
		regexp.MustCompile(`(?i)Excer[ _]G5.([236])`),
		regexp.MustCompile(`(?i)Excer[ _]G5`),
		regexp.MustCompile(`(?i)Excer[ _]10[ _]PRO`),
		regexp.MustCompile(`(?i)Excer[ _]8`),
		regexp.MustCompile(`(?i)AXXA[ _]`),
		regexp.MustCompile(`(?i)AXXA[ _](S\d+)[ _]PLUS`),
		regexp.MustCompile(`(?i)AXXA[ _](S\d+)`),
		regexp.MustCompile(`(?i)AYYA[ _](T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ACCENT[_ ]NEON|FAST7 ?3G|PEARL[_ ]A[24567]|TANK_P55|CAMELEON[_ ](?:C[456]|A1|H2)(?:[_ ]PLUS)?|Speed[- ](?:[AXYM]2|X2\+)|SURF1000|KIDZY70|SPEED_S8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ACCENT[_ ]NEON(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAMELEON[_ ]C([65])[_ ]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Speed[- _]([AXYM]2|S8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Speed-X2\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAMELEON[_ ](C[456]|A1|H2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL A4 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL A4 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL[_ ]A([24567])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TANK_P55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FAST7 ?3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURF1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KIDZY70(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U43EY1500B|F32EY1500B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BUZZ [123]|CLEVER 1|URBAN [13](?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BUZZ ([12]) Lite`),
		regexp.MustCompile(`(?i)BUZZ ([123]) Plus`),
		regexp.MustCompile(`(?i)BUZZ ([123])`),
		regexp.MustCompile(`(?i)URBAN ([13])`),
		regexp.MustCompile(`(?i)acer|ACTAB|TravelMate|a(?:101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)|Android.*V3[67]0(?:[);/ ]|$)|Android.*Z1[23456]0 Build|Android.*Z5\d{2} Build|Android.*T0[234678] Build|Android 5(?:[\d.]*);(?: [\w-]+;)? S59|Android.*S55(?:[);/ ]|$)|(?:A1-(713(HD)?|7[23]4|830|841|840(?:FHD)?|81[01])|A3-A[1-5][01]|B1-(7[1235-9][01](HD)?|7[23]3|7A0|8[1235]0|A71|860A)|TPA60W|B3-(A[125]0|A3[02]|A40FHD)|E39)(?:[);/ ]|$)|S5[12]0 Build|(DA[0-9]+HQ?L|Aspire (?:V5-121|XC-704G|V5-573G|4349)|Chromebook 14 \(CB3-431\)|Predator G9-793|GT-810|B1-870|B3-A20B|B3-A4[02]|B3-A50FHD|ET-108-11A|AC?TAB(?:721E?|1422E|821|1021(?:E|_A)|1022)|A3-A20FHD|E380|Swift SF113-31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DA220HQL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DA241HL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DA[0-9]+HQ?L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1-81[01]`),
		regexp.MustCompile(`(?i)ATAB(102[12]|721|1422)E`),
		regexp.MustCompile(`(?i)ACTAB1021(?:_A)?`),
		regexp.MustCompile(`(?i)ACTAB(821|1022)`),
		regexp.MustCompile(`(?i)A1-84(1|0(?:FHD)?)`),
		regexp.MustCompile(`(?i)A1-713(HD)?`),
		regexp.MustCompile(`(?i)A1-7[23]4`),
		regexp.MustCompile(`(?i)A3-A[12][01]`),
		regexp.MustCompile(`(?i)A3-A[345]0`),
		regexp.MustCompile(`(?i)B1-7(?:[5-9]0|30HD|A0)`),
		regexp.MustCompile(`(?i)B1-7[123][01]|B1-A71`),
		regexp.MustCompile(`(?i)B1-7[23]3`),
		regexp.MustCompile(`(?i)B1-8[123567]0`),
		regexp.MustCompile(`(?i)B3-A([125]0|3[02]|[45]0FHD|4[02])`),
		regexp.MustCompile(`(?i)A50[01]`),
		regexp.MustCompile(`(?i)(ACTAB721)`),
		regexp.MustCompile(`(?i)E39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E310(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E320(?:-orange)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*V360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*V370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E380(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?P400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?P300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?S200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?E100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z1([234])0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z150(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z160(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z(5\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*S57(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T07(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T08(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*S55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) S59(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer )?(Chromebook R1[13])`),
		regexp.MustCompile(`(?i)TravelMate Spin (B118-G2-R)`),
		regexp.MustCompile(`(?i)TravelMate (P653-M|5760G|8371|B118-M)`),
		regexp.MustCompile(`(?i)(?:Acer )?(Chromebook 1[45])`),
		regexp.MustCompile(`(?i)Aspire (V5-121|XC-704G|V5-573G|A515-51G|4349|E5-511)`),
		regexp.MustCompile(`(?i)(Predator G9-793|Swift SF113-31)`),
		regexp.MustCompile(`(?i)a(101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Acer; ?([^;()/]+)`),
		regexp.MustCompile(`(?i)Acer[ _-]?([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)acer[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)BLECK|AT723C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Adronix[ _]?(?:MT[0-9]+|X1001|Mini ?Tab ?7 ?3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Adronix ?Mini ?Tab ?7 ?3G`),
		regexp.MustCompile(`(?i)Adronix[ _]?(MT[0-9]+|X1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ADVAN (?:M4|S40|T5C)|i7U|S45E|S50H|I7D|i55[KD]|i4U|S7D|S4Z|i5[KE]|S5E[ _]NXT|S5J\+|S4\+|1011|E1C_3G)(?:[);/ ]|$)| (?:E1C Pro|5505|5202|50(?:[46]1|5[89]|62)|600[234]|6[25]01|Android [56].*; (?:i5C|i7A)|i5G|E1C 3G)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)S5E[ _]NXT`),
		regexp.MustCompile(`(?i)i(55[KD]|5[KE])`),
		regexp.MustCompile(`(?i) 5505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 5202(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 6201(?: Build|[;)])`),
		regexp.MustCompile(`(?i) 6501(?: Build|[;)])`),
		regexp.MustCompile(`(?i) i5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i) 6004(?: Build|[;)])`),
		regexp.MustCompile(`(?i) 6002(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(S45E|50[46]1|505[89]|5062|S50H|I7D|S7D|S4Z|S5J\+|S4\+|i5C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E1C[_ ]3G`),
		regexp.MustCompile(`(?i)(T5C|i7A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADVAN 1011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hollogram|(?:HL(?:4[79]36|6246|5576|5585|[56]575|5[67]67|6[05]77|6256|7257|9000)|IntroTr3544|Pr(?:61(?:4[56]|50)|60[27]0|5[69]50)|Tr3845|TR7989|SP[345]701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IntroTr3544|Tr3845`),
		regexp.MustCompile(`(?i)SP([345]701)`),
		regexp.MustCompile(`(?i)Pr(61(?:4[56]|50)|60[27]0|5[69]50)`),
		regexp.MustCompile(`(?i)HL(4[79]36|6246|[56]575|5576|5585|5[67]67|6[05]77|6256|7257|9000)`),
		regexp.MustCompile(`(?i)Hollogram ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(PIC7GS8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CYGNUSX?|Gravity Z2|ChampionPro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CYGNUSX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CYGNUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gravity Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ChampionPro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy|novo[0-9]|Novo 10 Hero|AX10PRO|NUMY3GAX9|NOVO10 Spark|Aurora-II|Rainbow(?:II)? 3G`),
		regexp.MustCompile(`(?i)Numy[_ ]?3G[_ ]?Sword`),
		regexp.MustCompile(`(?i)NUMY3GAX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy3G_AX10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Novo 10 Hero QuadCore)`),
		regexp.MustCompile(`(?i)Novo7 ?Flame(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)novo ?7[_ ]ELF(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOVO7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Novo([0-9]+)[_ \-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)TM50QZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AIRNESS-([\w]+)`),
		regexp.MustCompile(`(?i)(?:Halo3_Pro|Halo4 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo([34])[ _]Pro`),
		regexp.MustCompile(`(?i)Airtel[ _]`),
		regexp.MustCompile(`(?i)(AT702)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AW790|M300|AWM(?:53[39]|50[19]|561|999)|AW500|Android 7(?:[\d.]*);(?: [\w-]+;)? Z9 PLUS|JA2-SMP0601)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AW790(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AW500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AWM(53[39]|50[19]|561|999)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(JA2-SMP0601)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AKAI,|Akai[ _-]|Eco[ _]E2|Glory[ _](?:G[1235]|L[123]|O[125])|(?:TAB-[79]8[03]0Q?|X[56] METAL|AKTB-703MZ|FZ70[13]|X5_PRO|X3[_ ]PRO[_ ]SLIM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB-([79]8[03]0Q?)`),
		regexp.MustCompile(`(?i)(FZ70[13])`),
		regexp.MustCompile(`(?i)X([56]) METAL`),
		regexp.MustCompile(`(?i)X3[_ ]PRO[_ ]SLIM`),
		regexp.MustCompile(`(?i)Glory[ _](G[1235]|L[123]|O[125])`),
		regexp.MustCompile(`(?i)Eco[ _]E2`),
		regexp.MustCompile(`(?i)Akai[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)AKAI,(AK3219NF)`),
		regexp.MustCompile(`(?i)Alba ?(?:7Q|10Q|57|4|10 TABLET|(?:[78]|10)(?:Nou|Pie))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alba (4)`),
		regexp.MustCompile(`(?i)Alba((?:[78]|10)(?:Nou|Pie)|7Q|10Q)`),
		regexp.MustCompile(`(?i)Alcatel|Alc[a-z0-9]+|One[ _]?Touch|idol[3X]|TIMXL|(?:(?:4003[AJ]|4009[ADEFIKMSX]|4013[DEJKMX]|4014[ADEKMX]|4015[ADNTX]|4016[ADX]|4017[ADEFSX]|4018[ADEFMX]|4024[DEX]|4027[ADNX]|4028[AEJS]|4032[ADEX]|4034[ADEFGLTX]|4035[ADXY]|4045[ADELX]|4047[ADFGNX]|4049[DEGMX]|4060[SW]|4063F|4065F|4087U|4114E|5001[ADJTU]|5002[ABDEFHJLMRSUWX]|5003[ADGU]|5006[ADG]|5007[AGUOS]|5008[ADTUY]|5009[AD]|5010[DEGSUX]|5011A|5012[DFG]|5015[ADEX]|5016[AJX]|5017[ABDEOX]|5019D|5022[DEX]|5023[EF]|5024[ADFIJ]|5025[DEG]|5026[ADJ]|5027B|5028[ADY]|5029[ADEFY]|5030[ADEFJMU]|5031[ADGJ]|5032[OW]|5033(?:[DFTXY]R|[EFM]P|[ADEFGJMOQSTXY])|5034D|5036D|5038[ADEX]|5039[DY]|5041[CD]|5042[ADEFGTWX]|5044[ADGIKOPSTY]|5045[ADFGIJTXY]|5046[ADGIJSTUY]|5047[DIUY]|5048[AIUY]|5049[EGSWZ]|5050[ASXY]|5051[ADEJMTWX]|5052[ADY]|5053[ADKY]|5054[ADNSTWX]|5056[ADEGIJMNTUWX]|5057M|5058[AIJY]|5059[ADIJSTXYZ]|5060[ADJ]|5061[AKU]|5065[ADNWX]|5070D|5080[ADFQUX]|5085[ABCDGHIJNOQY]|5086[ADY]|5090[AIY]|5095[IKY]|5098[OS]|5099[ADIUY]|5116J|5145A|6002[AD]|6016[ADEX]|6025[ADH]|6027A|6036[AXY]|6037[BKY]|6039[AHJKSY]|6042D|6043[AD]|6044D|6045[BFIKOXY]|6050[AFY]|6055[ABDHIKPUYZ]|6056[ADH]|6058[ADX]|6060[SXC]|6062W|6070K|7040[ADEFKRT]|7041[DX]|7042A|7043[AEKY]|7044[AX]|7045Y|7048[ASWX]|7053D|7055A|7070X|7071[ADX]|8030Y|8050[DEGX]|8063|8088[MQX]|8094[MTX]|9001[DIX]|9002X|9003[AX]|9005X|9007[ATX]|9008[ADIJNTUX]|9009[AG]|9010X|9013[ATX]|9020A|9022X|9024O|9026X|9027[FQTWX]|9029[ZW]|9032[TWXZ]|9203A|9309X|A(?:46[46]BG|57[04]BL|576CC|621BL|50[13]DL|57[17]VL)|I213|I216[AX]|80(?:[89]2|84|91|6[78]|5[124567]))(?:_(?:EEA|RU|TR))?|P3[36]0X|AM-H200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5022[EDX]|5070D`),
		regexp.MustCompile(`(?i)4015[ATX]|4016A`),
		regexp.MustCompile(`(?i)4015[DN]|4016[DX]`),
		regexp.MustCompile(`(?i)4032[AX]`),
		regexp.MustCompile(`(?i)4032[DE]`),
		regexp.MustCompile(`(?i)7040[AFK]|7041X|7042A`),
		regexp.MustCompile(`(?i)7040[DE]|7041D`),
		regexp.MustCompile(`(?i)4018[ADEFMX]`),
		regexp.MustCompile(`(?i)4035[ADXY]`),
		regexp.MustCompile(`(?i)5038[ADEX]`),
		regexp.MustCompile(`(?i)4045[AXL]`),
		regexp.MustCompile(`(?i)4045[DE]`),
		regexp.MustCompile(`(?i)5042[AFGWX]`),
		regexp.MustCompile(`(?i)5042[DE]`),
		regexp.MustCompile(`(?i)7043[AY]|7044[AX]`),
		regexp.MustCompile(`(?i)7043[EK]`),
		regexp.MustCompile(`(?i)50[16]5X`),
		regexp.MustCompile(`(?i)5015[AE]|5016[AJ]|5065[ADWX]|5116J`),
		regexp.MustCompile(`(?i)5025[DEG]|5054[ADSTX]`),
		regexp.MustCompile(`(?i)5051[AEJMTWX]`),
		regexp.MustCompile(`(?i)5095[IKY]`),
		regexp.MustCompile(`(?i)5056[ADEGJMTUX]`),
		regexp.MustCompile(`(?i)5050[ASXY]`),
		regexp.MustCompile(`(?i)6037[BKY]`),
		regexp.MustCompile(`(?i)7071[ADX]`),
		regexp.MustCompile(`(?i)5002[ABDEHJLMSUWX]`),
		regexp.MustCompile(`(?i)5031[ADGJ]`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5008R`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5002R`),
		regexp.MustCompile(`(?i)5034D|6056[ADH]`),
		regexp.MustCompile(`(?i)7040[RT]`),
		regexp.MustCompile(`(?i)5056[NW]`),
		regexp.MustCompile(`(?i)6016[AX]`),
		regexp.MustCompile(`(?i)6016[DE]`),
		regexp.MustCompile(`(?i)6036[AXY]`),
		regexp.MustCompile(`(?i)6050[AFY]`),
		regexp.MustCompile(`(?i)6039[AHJKYS]|idol3`),
		regexp.MustCompile(`(?i)6045[BFIKOYX]|AM-H200`),
		regexp.MustCompile(`(?i)6055[ABDHIKPUYZ]`),
		regexp.MustCompile(`(?i)6058[ADX]`),
		regexp.MustCompile(`(?i)6060[SX]`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?6060C`),
		regexp.MustCompile(`(?i)6043[AD]`),
		regexp.MustCompile(`(?i)4024[DEX]`),
		regexp.MustCompile(`(?i)4009[AFIKMSX]`),
		regexp.MustCompile(`(?i)4009[DE]`),
		regexp.MustCompile(`(?i)4003[AJ]|4013[DEJKMX]|4014[AEKMX]|4114E`),
		regexp.MustCompile(`(?i)4027[ADNX]|4028[AEJS]|5019D`),
		regexp.MustCompile(`(?i)5017[ABDEOX]`),
		regexp.MustCompile(`(?i)9007[TX]`),
		regexp.MustCompile(`(?i)(?:9009G|9013[AT])`),
		regexp.MustCompile(`(?i)808[24](?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8092(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8091(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8052(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8051(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)805[4567](?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:806[78]|9013X)(?:_(?:EEA|RU))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4017[ADEFSX]`),
		regexp.MustCompile(`(?i)4034[ADEFGXL]`),
		regexp.MustCompile(`(?i)4060[SW]`),
		regexp.MustCompile(`(?i)5023[EF]`),
		regexp.MustCompile(`(?i)5010[DEGSUX]`),
		regexp.MustCompile(`(?i)5012[DFG]`),
		regexp.MustCompile(`(?i)5045[ADFGIJTXY]|5145A`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5004R`),
		regexp.MustCompile(`(?i)5046[ADIJTUY]`),
		regexp.MustCompile(`(?i)5011A|5049[EG]`),
		regexp.MustCompile(`(?i)9008[ADIJNTUX]`),
		regexp.MustCompile(`(?i)(?:9027[QFTWX]|9032[TX])`),
		regexp.MustCompile(`(?i)5085[BQ]`),
		regexp.MustCompile(`(?i)5085[ADHIJY]`),
		regexp.MustCompile(`(?i)5090[AIY]`),
		regexp.MustCompile(`(?i)5046[GS]`),
		regexp.MustCompile(`(?i)5085[GO]`),
		regexp.MustCompile(`(?i)5048[AYUI]`),
		regexp.MustCompile(`(?i)8050[GX]`),
		regexp.MustCompile(`(?i)8050[ED]`),
		regexp.MustCompile(`(?i)5098S|9001[DIX]`),
		regexp.MustCompile(`(?i)9003[AX]`),
		regexp.MustCompile(`(?i)I216[AX]`),
		regexp.MustCompile(`(?i)7048[ASWX]`),
		regexp.MustCompile(`(?i)(?:Alcatel-)?OT-802`),
		regexp.MustCompile(`(?i)(?:TRIBE_)?3075A`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch[ _]((?:T[0-9]+|TAB[^/;]+|EVO[78](?:HD)?)) Build`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch([^/;\)]*)\)`),
		regexp.MustCompile(`(?i)5080[ADFQUX]`),
		regexp.MustCompile(`(?i)4049[DEGMX]`),
		regexp.MustCompile(`(?i)5044[ADIKOPTY]`),
		regexp.MustCompile(`(?i)4047[DFXN]`),
		regexp.MustCompile(`(?i)5047[DIUY]`),
		regexp.MustCompile(`(?i)4044[CV]`),
		regexp.MustCompile(`(?i)(?:Alcatel)?4044[MNT]`),
		regexp.MustCompile(`(?i)5044[GS]`),
		regexp.MustCompile(`(?i)5033[DFTXY]R(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5033MP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5033(?:[ADJEFGMOTXYQS]|[EF]P)(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5009[AD]`),
		regexp.MustCompile(`(?i)5008[ADUYT]`),
		regexp.MustCompile(`(?i)5007[AGUS]`),
		regexp.MustCompile(`(?i)6002[AD]`),
		regexp.MustCompile(`(?i)5003[ADGU]`),
		regexp.MustCompile(`(?i)5006[ADG]`),
		regexp.MustCompile(`(?i)5024[ADFIJ]|5028Y|6025[ADH]`),
		regexp.MustCompile(`(?i)(?:5028[AD]|5007O)`),
		regexp.MustCompile(`(?i)5030[ADFJMU]`),
		regexp.MustCompile(`(?i)5001[ADJTU]`),
		regexp.MustCompile(`(?i)5059[ADJXYZIT]`),
		regexp.MustCompile(`(?i)5060[ADJ]`),
		regexp.MustCompile(`(?i)5052[ADY]|5053[ADKY]`),
		regexp.MustCompile(`(?i)5029[ADFY]`),
		regexp.MustCompile(`(?i)5032[OW]|5099[ADYUI]`),
		regexp.MustCompile(`(?i)5026[ADJ]`),
		regexp.MustCompile(`(?i)5039[DY]`),
		regexp.MustCompile(`(?i)5058[AIJY]`),
		regexp.MustCompile(`(?i)5061[AKU]`),
		regexp.MustCompile(`(?i)5086[ADY]`),
		regexp.MustCompile(`(?i)8088[XQM]`),
		regexp.MustCompile(`(?i)8094[MTX]`),
		regexp.MustCompile(`(?i)9029[ZW]`),
		regexp.MustCompile(`(?i)9032[WZ]`),
		regexp.MustCompile(`(?i)(?:ALCATEL_)?A383G`),
		regexp.MustCompile(`(?i)ALCATEL([^/;]+) Build`),
		regexp.MustCompile(`(?i)ALCATEL[ \-]?([^/;\)]+)`),
		regexp.MustCompile(`(?i)ALCATEL_([^/;\)]+)`),
		regexp.MustCompile(`(?i)Alc([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Access_Q784C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Alfawise (?:A9)|(?:A95X_R1|Z28Pro))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A95X_R1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z28Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfawise (A9)`),
		regexp.MustCompile(`(?i)ALIGATOR[_ ]|(?:RX[67]00|S5710|RX460)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ALIGATOR[ _])?(S4080|S50(?:6[56]|[678]0)|S55[24]0|S5710|RX510|S6[05]00|RX710|RX[678]00|RX460)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AllCall_|Heat[34]|(?:Rio_X|S5500)(?:[);/ ]|$)|Hot ?[125][^;/]+ Build`),
		regexp.MustCompile(`(?i)AllCall_(Alpha|Atom|Bro|Madrid)`),
		regexp.MustCompile(`(?i)Heat([34])`),
		regexp.MustCompile(`(?i)Rio_X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S5500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hot ?([125][^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:T1001XS?|T1006S?|T1001|iPlay[_ ][2345]0|U1006H?|U63PLUS|iPlay8|iPlay_?[89]T|iPlay[134]0|iPlay_40H|iPlay50 Pro|iPlay_?20[SP]|kPad|X_Game|T806MHE?|Power M3|Smile_X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smile_X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001XS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kPad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1006S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U63PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U1006H?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T806MHE?`),
		regexp.MustCompile(`(?i)iPlay[_ ]?([1-5]0|[89]T?|40H|20[sP])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X_Game(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power M3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Allview|A4You|H1003_LTE_PRO|A5_(?:Easy(?:_TM)?|Ready(?:_TM)?|Quad|Quad_Plus_TM)|A[5-9]_Lite|A5Smiley|A6_Duo|A10_Lite_(?:2019|2GB)|A10_(?:Plus|Max)|AX2_Frenzy|AX4Nano|AX5NanoQ|AX50(?:[23]|1Q)|C6_Duo|E[23]_Living|E[23]_(?:Jump|Sign)|E4_Lite|M9_Connect|P(?:43_Easy|[5689]_Energy|6_Energy_Lite|[68]_Energy_Mini(?:_TM)?|(41|[4568])_eMagic(?:_TM)?|[589](?:_)?Life(?:_TM)?|[567]_Lite(?:_TM)?|6_plus|[45678]_Pro|7_Seon|10_Life|10_Max|10_Style|7_Xtreme|6_Qmax|4_Quad)|V(?:[1345]_Viper|1_Viper_I|2_Viper_(?:[EISX]|X_plus|Xe))|X4_Soul_Vision|X(?:[1-46]_Soul_Xtreme|[1-5]_Soul|3_Soul_Lite|[2-6]_Soul_Mini(?:_TM)?|4_Soul_Mini_S(?:_TM)?|[2-58]_Soul_Style(?:_TM)?|2_Soul_Style_Plus|2_Twin)|Viva_(?:H801|100[13]G|(?:H100[124]|H701|H802)_LTE|C701|i701G|803G)|VivaH(?:10|[78])|X7_Soul_Style|X[78]_Soul_Pro|Viva_(?:Home|i7G)|H1004_LTE`),
		regexp.MustCompile(`(?i)E([23])_Living`),
		regexp.MustCompile(`(?i)E([23])_Jump`),
		regexp.MustCompile(`(?i)P(41|[4568])_eMagic(?:_TM)?`),
		regexp.MustCompile(`(?i)P([567])_Lite(?:_TM)?`),
		regexp.MustCompile(`(?i)P([45678])_Pro`),
		regexp.MustCompile(`(?i)P([69])_Energy_Lite`),
		regexp.MustCompile(`(?i)P([689])_Energy_mini(?:_TM)?`),
		regexp.MustCompile(`(?i)P([5689])_Energy`),
		regexp.MustCompile(`(?i)P([589])(?:_)?Life(?:_TM)?`),
		regexp.MustCompile(`(?i)V([12])_Viper_I4G(?:_TM)?`),
		regexp.MustCompile(`(?i)V([1345])_Viper`),
		regexp.MustCompile(`(?i)V2_Viper_(E|I|S|X(?:e)?)`),
		regexp.MustCompile(`(?i)X([1246])_Soul_Xtreme`),
		regexp.MustCompile(`(?i)X4_Soul_Infinity_(L|N|S|Z)`),
		regexp.MustCompile(`(?i)X4[_ ]Soul[_ ]Infinity[_ ]Plus`),
		regexp.MustCompile(`(?i)X([34])_Soul_Lite`),
		regexp.MustCompile(`(?i)X4_Soul_Mini_S(?:_TM)?`),
		regexp.MustCompile(`(?i)X([23456])_Soul_Mini(?:_TM)?`),
		regexp.MustCompile(`(?i)X([357])_Soul_Pro`),
		regexp.MustCompile(`(?i)X([23458])_Soul_Style(?:_TM)?`),
		regexp.MustCompile(`(?i)X([12345])_Soul`),
		regexp.MustCompile(`(?i)A5_Easy(?:_TM)?`),
		regexp.MustCompile(`(?i)A([56789])_Lite`),
		regexp.MustCompile(`(?i)A5_Ready(?:_TM)?`),
		regexp.MustCompile(`(?i)Viva_(i7G)`),
		regexp.MustCompile(`(?i) H1003_LTE_PRO([13])`),
		regexp.MustCompile(`(?i)Viva[_ ]?H([78]|10)[_ ]?LTE`),
		regexp.MustCompile(`(?i)Viva_?((?:H80[12]|H100[12]|H701)_LTE|C701|i701G|803G|H10|H7|H801|100[13]G)`),
		regexp.MustCompile(`(?i)ALLVIEW ?SPEEDI`),
		regexp.MustCompile(`(?i)ALLVIEW ?SPEED`),
		regexp.MustCompile(`(?i)AX4Nano[_ ]plus`),
		regexp.MustCompile(`(?i)AX(50[23]|501Q)`),
		regexp.MustCompile(`(?i)Allview[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Allview[ _-]([^;/]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:QUAD-CORE (?:T3 p1|A64 p3|A33 y3|T3 K2001M|T3 k2001o|T3 k2001-nwd)|ZY-07B|UltraOcta-T8|OCTA-CORE T8|OCTOPUS-CORE T8|QUAD-CORE T3 p3|QuadCore-R16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUAD-CORE T3 K(2001M?)`),
		regexp.MustCompile(`(?i)QUAD-CORE T3 p([13])`),
		regexp.MustCompile(`(?i)(?:FF-5000|ZQ8003|825X_Pro|03_v89_jbl|benz_hy1920x720|8227L_demo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FF-5000)`),
		regexp.MustCompile(`(?i)(ZQ8003|825X_Pro|benz_hy|8227L_demo)(?:1920x720)?`),
		regexp.MustCompile(`(?i)Altice[ _]|(SX41|Android 9;(?: [\w-]+;)? (?:S32|S42|S32_(?:Plus|NFC)))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (SX41|S32|S42|S32_Plus|S32_NFC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Altice[ _](S62|S31|S43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AFT[ABMNRST]|AFTSSS?|AFTKA|SD4930UR|AEO(?:BC|C[HW]|KN)|KF(?:OT|ONWI|TT|JWI|JWA|[DFS]OWI|A[PRSU]WI|T[BH]WI|TRP?WI|SAW[IA]|GIWI|KAWI|MAWI|MEWI|MUWI|SUWI))(?:[);/ ]|$)|Kindle|AlexaMediaPlayer|Amazon (?:Tate|Jem)|Silk/\d+\.\d+|Echo/1|.+FIRETVSTICK`),
		regexp.MustCompile(`(?i)AFT[MST]`),
		regexp.MustCompile(`(?i).+FIRETVSTICK2018`),
		regexp.MustCompile(`(?i)KFFOWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFJWI(?:[);/ ]|$)|Amazon Jem`),
		regexp.MustCompile(`(?i)KFJWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSOWI(?:[);/ ]|$)|Amazon Tate`),
		regexp.MustCompile(`(?i)KFTHWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTHWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAPWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAPWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFARWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFASWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFQUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMEWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFRAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFGIWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFDOWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFKAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFONWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSAWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTBWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTRWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTRPWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFOT|Kindle Fire|Silk/\d+\.\d+`),
		regexp.MustCompile(`(?i)Echo/1|AEO(?:BC|KN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AEOC[HW](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMIGOO (R300|R9 Max|M1 Max|X15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Amigo7x?(?:YUF|SCB)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amoi|(?:A862W|Clever[ -]?(?:Gem S52|Gleam S45|Pad P7|Wave S50|Touch S46|JOY S40|Lite S41))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Clever[ -]?(Gleam S45|Gem S52|Wave S50|Touch S46|Lite S41)`),
		regexp.MustCompile(`(?i)Amoi[-_ /](CA6)`),
		regexp.MustCompile(`(?i)Amoi[-_ /]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Amoisonic-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:ANDOWL-)?(Q[45]|QG9|QK9MAX)(?:[);/ ]|$)|Andowl`),
		regexp.MustCompile(`(?i)angelcare[ _]`),
		regexp.MustCompile(`(?i)F20 ?pro`),
		regexp.MustCompile(`(?i)angelcare[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)AFTMM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANRY-(RS10|[SX]20|E30|1006)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AOCOS ([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Aoro[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:aoson ?(?:R10[1-3]|S[78]|M707TG|M96T)(?:[_ ]?Pro)?|R103)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:aoson ?)?R10([1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?S7_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?S7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?S8Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?(M707TG|M96T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:iTunes-)?Apple[ _]?TV|Apple\/|(?:Apple-|iTunes-)?[^l][^i][^k][^e][^\s](?:iPad|iPhone)|iPh(?:[0-9]|1[0-4]),[0-9]|CFNetwork|HomePod|AirPlay|Watch ?OS|Watch1,[12]|MDCR_Mac|ICRU_iP(?:ad|hone)|Mac OS X[,;]|macOS,`),
		regexp.MustCompile(`(?i)Watch3,[13]`),
		regexp.MustCompile(`(?i)Watch3,[24]`),
		regexp.MustCompile(`(?i)Watch5,(?:9|11)`),
		regexp.MustCompile(`(?i)Watch5,1[02]`),
		regexp.MustCompile(`(?i)Watch([456]),[13]`),
		regexp.MustCompile(`(?i)Watch([456]),[24]`),
		regexp.MustCompile(`(?i)Watch6,[68]`),
		regexp.MustCompile(`(?i)Watch6,[79]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac11(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac11(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac11(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac12(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac13(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac13(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac14(?:%2C|,)[13]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac14(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac14(?:%2C|,)4`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac17(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac18(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac18(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac19(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac19(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac20(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac21(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMacPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook[45](?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir3(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir4(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir6(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir7(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro1(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro2(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro[34](?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)[34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)5`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro6(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro8(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro9(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro10(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro11(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro11(?:%2C|,)[23]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro11(?:%2C|,)[45]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro13(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro13(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro14(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro14(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)4`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro16(?:%2C|,)[14]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro16(?:%2C|,)[23]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro17(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro18(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro18(?:%2C|,)[34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini5(?:%2C|,)[123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini6(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac7(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac7(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerBook5(?:%2C|,)6`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerBook6(?:%2C|,)7`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?1[C,_]1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?1[C,_]2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?2[C,_]1| 3GS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?3[C,_][123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?4[C,_]1|1C2%254enohPi| 4S\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?5[C,_][12]| 5\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?5[C,_][34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?6[C,_][12]| 5S\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?7[C,_]1|1C2%257enohPi| 6PLUS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?7[C,_]2| 6\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?8[C,_]2| 6SPLUS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?8[C,_]1|iPhone[ /]6s| 6S\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?8[C,_]4| SE\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?9[C,_][13]|iphone7 | 7\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?9[C,_][24]| 7PLUS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?10[C,_][14]| 8\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?10[C,_][25]| 8PLUS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?10[C,_][36]|iPhone X| X\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?11[C,_]2| XS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?11[C,_][46]|iPhoneXSMax| XSMAX\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?11[C,_]8| XR\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]1|iPhone 11| 11\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]3| 11PRO\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]5| 11PROMAX\)$|iPhone_11_Pro_Max`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]8| SE2\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]1| 12MINI\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]2| 12\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]3| 12PRO\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]4| 12PROMAX\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]2| 13PRO\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]3| 13PROMAX\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]4| 13MINI\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]5| 13\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]6`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]8| 14PLUS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]2| 14PRO\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]3| 14PROMAX\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]7| 14\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]5| 15PLUS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?16[C,_]1| 15PRO\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?16[C,_]2| 15PROMAX\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]4| 15\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad1[C,_]1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad2[C,_][1-4]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad2[C,_][567]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad3[C,_][123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad3[C,_][456]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad4[C,_][123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad4[C,_][456]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad4[C,_][789]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad5[C,_][12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad5[C,_][34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad6[C,_][34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad6[C,_][78]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad6[C,_](?:11|12)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_][12](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_][34](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_][56](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_](?:11|12)(?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_](?:9|10)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]4`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_][5-7]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_]1[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_][1-4]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_][5-8]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad11[C,_][12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad11[C,_][34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad11[C,_][67]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad12[C,_]1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad12[C,_]2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]8`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_](?:9|10|11)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]16`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]17`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]2`),
		regexp.MustCompile(`(?i)Apple-?TV2[C,_]1`),
		regexp.MustCompile(`(?i)Apple-?TV3[C,_][12]`),
		regexp.MustCompile(`(?i)Apple-?TV5[C,_]3|Apple TV 4`),
		regexp.MustCompile(`(?i)Apple-?TV6[C,_]2`),
		regexp.MustCompile(`(?i)Apple-?TV11[C,_]1`),
		regexp.MustCompile(`(?i)(?:iTunes-)?Apple[ _]?TV`),
		regexp.MustCompile(`(?i)iTunes-iPad/[0-9]+(?:\.[0-9]+)* \(([^;]+);`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad`),
		regexp.MustCompile(`(?i)iTunes-iPhone/[0-9]+(?:\.[0-9]+)* \(([^;]+);`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPhone ?(3GS?|4S?|5[CS]?|6(:? Plus)?)?`),
		regexp.MustCompile(`(?i)(NS220)`),
		regexp.MustCompile(`(?i)Aquarius[_ ]CMP[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Aquarius[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos|(?:A50TI|AC101BHE|AC50BHE|AC45NE|X67 5G|AC45BHE|AC101PL3GV2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos (Oxygen (?:63|57|68XL))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A50TI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC45NE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X67 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos ?5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC101BHE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC50BHE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos 80 Oxygen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos 101 Oxygen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Access 70 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Oxygen 101S ARDOIZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Oxygen 101S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos T ?(101X?) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Core (101) 3G Ultra`),
		regexp.MustCompile(`(?i)Archos Core (70|101) 3G`),
		regexp.MustCompile(`(?i)Archos Hello 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Sense 101 X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos ([^/;]*(?:PAD)[^/;]*) Build`),
		regexp.MustCompile(`(?i)Archos ((?:[789]|10)[0-9]?[a-z]* ?(?:G9|Access|Magnus|G10|Helium|Titanium|Copper|Cobalt|Platini?um|Xenon|Carbon|Neon|XS|IT)[^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos ([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\))|Impulse[ _]P[12]|(?:EDGE A5HD|Elf_S8|ICON (R40\+|R45)|Wizard_[12]|UKOZI U[56]|L925)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)Impulse[ _]P1\+`),
		regexp.MustCompile(`(?i)Impulse[ _](P[12])`),
		regexp.MustCompile(`(?i)EDGE (A5HD)`),
		regexp.MustCompile(`(?i)ICON (R40\+|R45)`),
		regexp.MustCompile(`(?i)Wizard_([12])`),
		regexp.MustCompile(`(?i)Elf_S8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UKOZI U([56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L925(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TSD Octa A0520P|TSD Quadra A050[59]P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arnova|ARCHM901|AN7CG2|AN7IG3|AN7G2(DTE|I)?|AN7[BCDFH]?G3|A80KSC|AN8G2|AN8[BC]?G3|AN9G2I?|AN9G3|A101[BC]|AN10G2|AN10BG2(DT|I)?|AN10BG3(DT)?|AN10[CD]G3`),
		regexp.MustCompile(`(?i)AN7G2I|AN7G2|AN7G2DTE`),
		regexp.MustCompile(`(?i)A101B2|A101C|AN10G2`),
		regexp.MustCompile(`(?i)AN10BG2|AN10BG2DT|AN10BG2I`),
		regexp.MustCompile(`(?i)AN10BG3|AN10BG3DT|AN10BG3-LZ`),
		regexp.MustCompile(`(?i)Arnova ([^/;]*) Build`),
		regexp.MustCompile(`(?i)ARTLINE[ _-](KMX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artel[_ ]|\w+_ARTEL_\w+|(?: GAP|GAP YOQ| ALO|U1 MINI|Android 8(?:[\d.]*);(?: [\w-]+;)? U[124]|U3_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) GAP|GAP YOQ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U1 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U3_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) U([124])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) ALO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artel[_ ](Quadro(?: Pro)?|Tesla|Air|Tomchi|Premium|U3_4G|Z5|Sentinel (?:X 8G|X D5|X)|T10|T21)`),
		regexp.MustCompile(`(?i)Artel[_ ]Komi3`),
		regexp.MustCompile(`(?i)Artel[_ ]Q21_PRO`),
		regexp.MustCompile(`(?i)Artel[_ ]Q21`),
		regexp.MustCompile(`(?i)Artel[_ ](Star|Nova|Connect|Choice|Style)`),
		regexp.MustCompile(`(?i)(?:\w+_)?ARTEL_([FVM]5|X[45])_\w+`),
		regexp.MustCompile(`(?i)Artizlee[ _]S9|ATL-(?:16|21(?:PLUS|[XT])?|31|26)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATL-21PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ATL-(?:16|21[XT]?|31|26))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artizlee[ _]S9`),
		regexp.MustCompile(`(?i)(?:32LH7010T|32LH8[10]10T|32LH7030S|32LF7130S|28LH701[10]T|43LU8010T|24LH7011T|24LH7020T|24LH8010T|40LF7030S|5[05]LU8120T|42LF7110T|32LF7120T|32LF8120T|50LU8110T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2})(L[FHU]\d+[ST])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASANZO[ _](?:A2|S[23]|[SZ]5|S3_PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASANZO[ _]S3[ _]PLUS`),
		regexp.MustCompile(`(?i)ASANZO[ _](A2|S[23]|[SZ]5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASK[ _]`),
		regexp.MustCompile(`(?i)ASK[ _]791SP[ _]3G`),
		regexp.MustCompile(`(?i)ASK[_ ]([^/;]*) Build`),
		regexp.MustCompile(`(?i)ASPERA|(?:Wren|Jazz 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASPERA[ _](R5h|R9|RT3|A4[02]|A50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wren(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jazz 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AS[-_](?:50[123]|543[1-6]|44[12]1|541[12]|54[23]1|6431|[46]01L)|AP-(?:109|115G|721N|753G|7[25]7G|10[68]|107G|110N|941|719))[;/)_ ]`),
		regexp.MustCompile(`(?i)AS[-_]401L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5432(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS[-_](?:5434|501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS_601L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5433 Secret(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5433(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5421(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-44[12]1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5435(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5436[ _]`),
		regexp.MustCompile(`(?i)AS-6431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5411[_ ]`),
		regexp.MustCompile(`(?i)AS-5412 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-721N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-941(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-108(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-106(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AP-(?:109|115G|7[25]7G|753G|107G|110N|719))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AS-(?:\d+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[- ](S451|S501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Asus|Transformer|ZenFone Max|MeMOPad 10|TF300T|Slider SL101|PadFone|ME302(?:C|KL)|ME301T|ME371MG|ME17(?:1|2V|3X)|(?:K0[01][0-9a-z]|(?:P(?:00[128ACIL]|01[MTVWYZ]|01MA|01T_1|02[13478])(?: Build|\))|X015D|X018D|X003|X00[7ABT]D|Z00D|Z00[MTY]D|Z01[7FGHKMR]D)|K01[579N]|AST21|K50IJ)(?:[);/ ]|$)|G55[023]KL|ZB(631|602|633|55[135]|50[01])KL|ZC(55[134]|520|600)KL|ZA550KL|ZE(5[02]0|620|55[2345])KL|ZD55[23]KL|ZS6(?:61|7[02136])KS|ZS(6[0236]0|55[10])KL|ZS590KS|ZB(500KG|601KL)|MeMo Pad FHD 10 LTE|Z00[SV]D|P01Y_S|Zenfone 5Z?|AOSP on Duma|Tinker Board(?: S)?|TX201LA|I005DA`),
		regexp.MustCompile(`(?i)XPad 10 ?LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME171(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASUS Z906(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME302C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ME302KL|MeMOPad 10FHD LTE|MeMo Pad FHD 10 LTE|AOSP on Duma)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME301T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z101 Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X Pad 10 LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[3A7]|K007|K00R)(?:[);/ ]|$)|MeMO Pad 7`),
		regexp.MustCompile(`(?i)K01E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00U|ME173X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[15]|K00L|AST21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TF300T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K01B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TX201LA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P01[YZ](?:_S)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00J`),
		regexp.MustCompile(`(?i)P01[VW]|P002`),
		regexp.MustCompile(`(?i)(?:P024|P00A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P01MA?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASUS_(w706)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00I`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P008`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00C|P02[138]|P00L|P01T_1`),
		regexp.MustCompile(`(?i)ME371MG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[2N9]|K00E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K016(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A001D|ZB634KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00N`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00[CE]`),
		regexp.MustCompile(`(?i)(?:ASUS[-_])?T00T`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A002(A)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I006D|ZS590KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I004D|ZS672KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2202)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A006`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A009`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z007`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00P[SD]|ZB555KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZB60[12]KL)|ZenFone Max Pro M1`),
		regexp.MustCompile(`(?i)(?:ASUS[_-])?(X01([AB]D)|ZB633KL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z00[AD]|Z008D|Z008|Z00AD[AB]?|ZE551ML)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZenFone 2E)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:A007|Z00YD|ZA550KL|ZB553KL|ZB501KL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00RD|G552KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z00[ERLMTW]D|Z011D|ZE500KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00[IQ1]|Z01KD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00P`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00K|X017DA|X017D|ZC600KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z01RD|ZS620KL)|Zenfone 5Z`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00[JF]|X00QD|X00QSA|ZE620KL)|Zenfone 5`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00G|Z002|ZS630KL|I01WD[X]?)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZS671KS`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZS670KS|I002D|AI2205_[AC])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z010D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X018D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X00TD?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X01BDA|ZB631KL|Zenfone Max Pro M2)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X014D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(L001|X00[7AB]D|X009[DB][DA]|X009D|Z00[SV]D|ZB500K[LG]|ZB551KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:G550KL|X013DB)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X013D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00[SV]D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00[23])`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X005`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X550`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00GD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00D[DS]|X008D)|ZC553KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X008)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(ZE553KL|Z01HDA?)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZS550KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00UD`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(Z016[DS]|Z01FD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z(?:017DA|E520KL|E552KL|017D|012(?:DC?|S))`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z01B[DS]|ZC551KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A001`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZD552KL|Z01MDA?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00LDA|ZD553KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00LD|Z01KS|Z01KDA|ZE554KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X00(?:[HIK]D|IS)|ZC554KL|ZC520KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X015D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(:?Z01G[DS]|ZS551KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00XS`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z01QD|ZS600KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I001D[ABCE]?|ZS660KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I003DD?|ZS661KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I005D[AC]?|ZS67[36]KS|ROG Phone 5)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2201)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2203)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2205)`),
		regexp.MustCompile(`(?i)(K50IJ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tinker Board( S)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZenWatch( 2)?`),
		regexp.MustCompile(`(?i)Asus(?:-|;)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(PadFone(?: [^;/]+)?) Build`),
		regexp.MustCompile(`(?i)(PadFone(?: [a-z0-9]+)?)`),
		regexp.MustCompile(`(?i)(?:Asus|Transformer) ((?:Pad |Prime )?TF[0-9a-z]+)`),
		regexp.MustCompile(`(?i)Chromebook Flip (C10[01]PA|C302)`),
		regexp.MustCompile(`(?i)(?:AP570[12]|AP5705S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AP570[12]|AP5705S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATOM-(108AM|216RK|216AM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Magic_1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(100011886BK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Audiovox|CDM|UTS(?:TARCOM)?\-|audio[a-z0-9\-]+`),
		regexp.MustCompile(`(?i)Audiovox[_\-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)CDM(?:-)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)UTS(?:TARCOM)?-([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)audio([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)R2021W2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(R2021W2)`),
		regexp.MustCompile(`(?i)Avaya Vantage(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avenzo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOB4 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOB4PRO 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avvio[ _]?([a-z0-9\-]+)|(?:CHIVAS_55|Colombia_2018|Mint_M353)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avvio[ _]PAD`),
		regexp.MustCompile(`(?i)Avvio[ _]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(?:AWOW_)?(UTBook|CreaPad_100[39]_EEA)`),
		regexp.MustCompile(`(?i)(?:AWOW_)?(UTBook|CreaPad_100[39])`),
		regexp.MustCompile(`(?i)Axioo[_ ]|PICOp(?:hone|ad)[_-]`),
		regexp.MustCompile(`(?i)Axioo[_ ](AX[45])`),
		regexp.MustCompile(`(?i)PICOphone_(L1|M4N|M4P_M3|M4U_M2_M)`),
		regexp.MustCompile(`(?i)PICOpad[_-](7H_7|7H|GGT)(?:_3G)?`),
		regexp.MustCompile(`(?i)Axxion ATAB-[0-9]+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Axxion ATAB-([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azumi[_ -]|(?:SPEED55|A50_Style_Plus|LT50\+|KIREI A5Q PLUS|NOBU[ _]A55[ _]PRO|IRO A55 QL?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azumi[_ -]AKANE`),
		regexp.MustCompile(`(?i)Azumi[_ -]A4\+`),
		regexp.MustCompile(`(?i)Azumi[_ -]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Azumi[_ -]([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)LT50\+`),
		regexp.MustCompile(`(?i)NOBU[ _]A55[ _]PRO`),
		regexp.MustCompile(`(?i)BAFF\d{2}`),
		regexp.MustCompile(`(?i)BAFF(\d{2})YFHD`),
		regexp.MustCompile(`(?i)BAFF(\d{2})Y(STV-R)`),
		regexp.MustCompile(`(?i)Pixavi[ _](Phone)`),
		regexp.MustCompile(`(?i)BASE[_ ](Varia)`),
		regexp.MustCompile(`(?i)bb-mobile|Techno[-_ ](8\.0|9\.7|TQ863Q|X595BT|X800BJ|S700BF|I700AJ|10.1 LTE TQ060X|7.0 LTE TQ763I|I785AP|I101BI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]S700BF(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]10.1 LTE TQ060X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]TQ863Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]I700AJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[-_ ]I785AP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]X800BJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[-_ ]I101BI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]7.0 LTE TQ763I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FirstTab TP-17)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ](9\.7|8\.0) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ](?:X595BT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:32LEX-7272|([65]5|50|4[03]|3[29]|2[48])LEX[-_](81(?:27|39|45|58|6[12]|7[34])|71(?:[23]7|4[345]|5[45]|6[2368]|[57]8|7[15])|7202|725[79]|7225|7287|8243)[_/]?([FU]?TS2C)|(?:39|24)LEX-7289)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2})LEX[-_](\d{3,4})[_/]?([FU]?TS2C)`),
		regexp.MustCompile(`(?i)(39|24)LEX-7289(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2})LEX[-_](\d{3,4})`),
		regexp.MustCompile(`(?i)(?:BDF[- ](?:819|P10|M107|K107H|KT107|MT6753|X20|P30)|K960N_MT(?:6580|6753)(?:_32_N)?|m107_\d+a_64_q|ZL80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BDF[- ](819|P10|M107|K107H|KT107|MT6753|X20|P30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)m107_\d`),
		regexp.MustCompile(`(?i)K960N_MT(6580|6753)(_32_N)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SMART_B19|Destiny)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BGH ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Y([17]00|2[01]0|1010)`),
		regexp.MustCompile(`(?i)BGH (\+Simple|Mini|M840)`),
		regexp.MustCompile(`(?i)BGH ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(ZBH-)?BIHEE`),
		regexp.MustCompile(`(?i)(A1[1268]|A[78]\+|A[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BPM9727)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:I11|I10(Plus)?)_EEA|Android 11;(?: [\w-]+;)? I11|I10_Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I10_?(Plus|Pro)?(?:_(?:EEA|ROW))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) I11(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BMXC[_ ]?(?:80[01])| M863(?:-EEA)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M863)`),
		regexp.MustCompile(`(?i)BMXC[_ ]?(80[01])`),
		regexp.MustCompile(`(?i)(BT7X1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BROR[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:RUNE III?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RUNE (III?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BK2021)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Nook|BN[TR]V[0-9]+`),
		regexp.MustCompile(`(?i)Nook([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Nook[ _]([^/;]+)[ _]Build`),
		regexp.MustCompile(`(?i)(BN[TR]V[0-9]+)`),
		regexp.MustCompile(`(?i)(?:Class_C250|TW10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TW10)`),
		regexp.MustCompile(`(?i)(Class_C250)`),
		regexp.MustCompile(`(?i)Becker-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Beeline|(?:A239s|SWG2001A-A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beeline[_ ]Pro[_ ]([2436])`),
		regexp.MustCompile(`(?i)Tab (Fast(?: 2)?|Pro)`),
		regexp.MustCompile(`(?i)Tab ([0-9])`),
		regexp.MustCompile(`(?i)E([67]00)`),
		regexp.MustCompile(`(?i)(?:Beeline[_ ])?Smart[ _]?([0-9])`),
		regexp.MustCompile(`(?i)(?:Beeline[_ ])?Fast[_ ]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fast(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A239s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SWG2001A-A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Beelink (?:G[ST]1|LAKE I|SEA I|A1)|GTKing(?:_AT)?|GT1mini-2|GT1-mini(?:[-_]AT)?|R68 II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beelink (G[ST]1|LAKE I|SEA I|A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT1-mini(?:-AT)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT1mini-2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTKing PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTKing(?:_AT)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R68 II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beetel ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(X104)-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bp100 X-Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BENQ(?:[ \-])?([a-z0-9]+)|(?:F52_09|F5_15|T47_09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F(?:52|5)|T47)_(?:15|09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BENQ(?:[ \-])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)BENQ-SIEMENS - ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)BenWee[ _-]?(?:[^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)BenWee W5 ?pro`),
		regexp.MustCompile(`(?i)BenWee[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Benco[_ ]|(?:AE9010|AE9950|AH9110)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB-A03-(?:BR2|BS))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Class S300 LTE|G-PADLITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Class S300 LTE)`),
		regexp.MustCompile(`(?i)(?:SURVE(10|[26-8]|[12] PRO)|Home9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURVE([12]) PRO`),
		regexp.MustCompile(`(?i)SURVE(10|[26-8])`),
		regexp.MustCompile(`(?i)BEZKAM (BK-RAM2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAMETAB-ONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BilimBook mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Capture\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MD09TV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BioWolf 8-F30|BIOWOLF8F30|Ruggbo 20 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BioWolf 8-F30|BIOWOLF8F30`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+)`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+)`),
		regexp.MustCompile(`(?i)Bitel[ _-]([^/;]+) Build|(?:B(?:840[5-9]|841[0456]|850[2346]|860[146]|9401|950[1-5])|S8402L?|S8501L?|BPRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B(?:840[5789]|841[0456]|850[2346]|860[146]|9401|950[12345])|S8402L?|S8501L?)`),
		regexp.MustCompile(`(?i)BPRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bitel[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:Mobitab10c-3G|Tab1011Q_II|Colortab[ _]?(10(?:M| II)?|816i))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Mobitab)(10)c-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab1011Q_II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Colortab[ _]?(10(?:M| II)?|816i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tough Mobile 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bphone[ _](B111[45]|B2017)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B6 Master|B6 Note X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BMM[ _-]?(?:44[123]D|431B|441[AWB]|44[12]S|431[SD]|53[23]D|54[12]S|541[ABW]|54[123]D|543S|531[ABD]|532 S|531S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BMM441[AS]`),
		regexp.MustCompile(`(?i)BMM442S|BMM441B`),
		regexp.MustCompile(`(?i)BMM543[DS]`),
		regexp.MustCompile(`(?i)BMM[ _-]?(53[23]D|431[DS]|54[12]S|531S|431B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EO104K)[-_]BL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blackview|(BL8800|BV([24-9]000|8800|[46]900|(5[1589]|9[135689])00|6[1368]00|7100)(?:[ _](?:PRO))?|(P10000(?:[ _](?:PRO))?)|omega[ _]pro|Alife[ _][PS]1|Heatwave|DM550|BV9700Pro|A[68]0(?:Pro)?\))|(?:SOLID 4 G2|A[86]0Plus|A80S|BL6000Pro|BL8800Pro|R6 Lite|P2Lite|A8 MAX|A30-RU|A20Pro|Android 10;(?: [\w-]+;)? Tab[89]|Android 10(?:[\d.]*);(?: [\w-]+;)? (?:A80)|Android 11(?:[\d.]*);(?: [\w-]+;)? (?:A95)|Android 1[12];(?: [\w-]+;)? (?:A[79]0|A70 Pro|A55 Pro|Tab 1[01356]|Tab 6)|BV500|BV[579]200|SOLID_4G1|BV5300 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A([2678]0|55) ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A([6798]0|95)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)A8 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A80S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A[86]0|BV[59]500)Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BV6000S|BL8800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P2|R6) ?Lite`),
		regexp.MustCompile(`(?i)(BL6000|BL8800|BV(?:[0-9]+))Pro`),
		regexp.MustCompile(`(?i)Blackview (A[78]|E7S)`),
		regexp.MustCompile(`(?i)(BV6[13]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BV\d+[\w]?|P10000)[ _]?PRO(?:[-_](?:RU|F))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BV\d+[\w]?|P10000)(?:[-_](?:RU|F))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab (1[05]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) Tab ?(6 Kids)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab 11 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) Tab ?([689]|1[01356])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)omega[ _]pro`),
		regexp.MustCompile(`(?i)(Alife[ _][PS]1|DM550|Heatwave)`),
		regexp.MustCompile(`(?i)Blaupunkt|(?:Soundphone S2|Atlantis[_ ](?:1001A|1010A|A10[._]G40[23])|SLplus02|Discovery[_ ](?:A10_302|10[28]C|111C|1000C|1001A?)|Endeavour[_ ](?:785|101[GLM]|1000|1001|101[03]|1100)|Polaris[_ ]80[38](?:_BE)?|BP_(?:6010|6110)|B-STREAM|SL05|SM 02 2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Discovery[_ ](1000|111|10[28])C`),
		regexp.MustCompile(`(?i)Discovery[_ ]A10_302`),
		regexp.MustCompile(`(?i)Discovery[_ ]1001A`),
		regexp.MustCompile(`(?i)Discovery[_ ]1001`),
		regexp.MustCompile(`(?i)Endeavour[_ ](101[GLM]|785|100[01]|101[03]|1100)`),
		regexp.MustCompile(`(?i)Polaris[_ ](808[_ ]BE|80[38])`),
		regexp.MustCompile(`(?i)Atlantis[_ ](1001A|1010A|A10\.G40[23])`),
		regexp.MustCompile(`(?i)BP_(6010|6110)`),
		regexp.MustCompile(`(?i)Blaupunkt[_ ](SL[_ ]0[124]|SM[_ ]0[12])`),
		regexp.MustCompile(`(?i)(SF02|SL05)`),
		regexp.MustCompile(`(?i)(4K Android TV)`),
		regexp.MustCompile(`(?i)(?:BE_(xl|se|o2|fr|et|dg)|BL-919845)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE_(xl|se|o2|fr|et|dg)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Zero18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LaserTAB10|PlatinumTAB10_4G_V\d|BlackTab7_3G_V2|BlackTAB7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PlatinumTAB10_4G_(V\d)`),
		regexp.MustCompile(`(?i)BLU[ _]|(?:blu|Dash)[ _]([^/;)]+)(?: Build|[;)])|(?:Studio[ _](G3|J8M|X10L|X12|5.0K|5.5|View(?: XL)?|Mega(?: LTE)?|C 8\+8|[CGM][ _]HD|G2 HD|G4|[CGX]|SELFIE|Selfie LTE|Touch|M[45] Plus|J[1258]|X[89] HD|X10\+?|XL(?: 2)?)|Advance (4.0 ?[LM]|5.[02](?: HD)?|A4|L[45])|M6 2021|ENERGY (DIAMOND|XL)|ENERGY[_ ]DIAMOND[_ ]MINI|Energy X 2|LIFE XL|B110DL|Dash (?:X[2L]|L3)|PURE (?:X[LR]|MINI|View)|Life One X2|G50 (?:Mega|Plus)|G51 Plus|G90(?: PRO)?|G91 Pro|GRAND (?:M3|Max|5.5 HD|XL LTE|Mini|Energy)|R1 (?:HD|PLUS)|R2 (?:LTE|Plus)|Tank Xtreme [45].0|Tank Xtreme(?: Pro)?|Touchbook M7 Pro|DASH X PLUS|C[456] 2019|BOLD (?:M7|N1)|B1[34]0DL|Vivo (?:5 Mini|One Plus|5R|XL[234]| Plus|8L|XI[+]?|GO)|C[56]L(?: 2020)?|C6 2020|G9 PRO|D701|VIEW 1|B131DL|R2 3G|Grand (?:M2X?|XL|M2 LTE)|D600|D5[01]0|DIAMOND M|M8L Plus|STUDIO ENERGY|M8L 2022|LIFE X8|M10L Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Advance (4.0 ?[LM]|4.0|5.[02](?: HD)?|A4|L[54])`),
		regexp.MustCompile(`(?i)M6 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Studio[ _](G3|J8M|5.0 C|5.5|C 5\+5 LTE|View(?: XL)?|Mega(?: LTE)?|C 8\+8|G HD LTE|[CG][ _]HD|C|G|Touch|M HD|G2 HD|M[45] Plus|J[1258]|X[89] HD|X5|X10\+?|XL(?: 2)?|X|G4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Studio[ _]5.0 ?K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STUDIO[_ ](X10L|X12)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STUDIO SELFIE ([23]|LTE)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?NEO_ENERGY_MINI`),
		regexp.MustCompile(`(?i)ENERGY[_ ]DIAMOND[_ ]MINI`),
		regexp.MustCompile(`(?i)DASH[ _]X[ _]PLUS[ _]LTE`),
		regexp.MustCompile(`(?i)DASH 4.5`),
		regexp.MustCompile(`(?i)PURE (X[LR]|View)`),
		regexp.MustCompile(`(?i)BOLD (M7|N1)`),
		regexp.MustCompile(`(?i)LIFE ONE (X2?)`),
		regexp.MustCompile(`(?i)NEO (XL|X|5\.5)`),
		regexp.MustCompile(`(?i)G(90?) PRO`),
		regexp.MustCompile(`(?i)(G90|D701|R2 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRAND 5.5 HD`),
		regexp.MustCompile(`(?i)Grand (M2X?|XL)`),
		regexp.MustCompile(`(?i)B13[01]DL`),
		regexp.MustCompile(`(?i)R([12]) PLUS`),
		regexp.MustCompile(`(?i)C([456]) 20(19|20)`),
		regexp.MustCompile(`(?i)Tank Xtreme ([45]).0`),
		regexp.MustCompile(`(?i)C([56])L 20(20|21)`),
		regexp.MustCompile(`(?i)C([56])L`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?VIVO[ _]SELFIE`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo 5 Mini`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo (One|XL3|XI)(?: Plus|[+])`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo (5R|XI|XL[234]|8L)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?VIVO GO`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?(D600|D5[01]0)`),
		regexp.MustCompile(`(?i)M(8|10)L Plus`),
		regexp.MustCompile(`(?i)M(10)L Pro`),
		regexp.MustCompile(`(?i)M8L (2022)`),
		regexp.MustCompile(`(?i)STUDIO 7.0 II`),
		regexp.MustCompile(`(?i)DASH (L[45] LTE|5.0|L[45]X|L3|X2|[LMX])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DASH[ _]([^)/;]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)blu[ _]([^/;]+)( Build|[);])`),
		regexp.MustCompile(`(?i)BLUSLATE([67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bluboo|Maya Build|(?:Picasso(?: 4G)?|Xfire2?|D6 Lite|D1_Pro|D6 Pro|S8_plus_a| S8a|Android 8(?:[\d.]*);(?: [\w-]+;)? D6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Picasso(?: 4G)?`),
		regexp.MustCompile(`(?i)D([16])[_ ]Pro`),
		regexp.MustCompile(`(?i)(?:Bluboo[_ ])?S8[_ ]plus`),
		regexp.MustCompile(`(?i) D6(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Bluboo[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Bluboo[ _-]?([^;/)]+)`),
		regexp.MustCompile(`(?i)BSS(45|50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VF550|EF501R?)(:_RU)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLUEDOT[_ ]|(?:BNT-71|BNT-801W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLUEDOT[_ ])?(BNP-500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BNT-71|BNT-801W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:33GT HD|WV8R-M|WV8R[_-]N|WV8-[ML])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WV8R[_-]N`),
		regexp.MustCompile(`(?i)Bmobile[_ ]|B60Pro(?:_MV03)?|BL50P_TG0[567]|BL51_MV05|BL54_?Pro|(?:B50Pro|BL5[02]|BL60_TG(?:05|17)|BL60M_MV05|FUN 4 2018|AX686A|AX-?(?:[1-9][0-9]{2,3}[eEO+]?|7OO))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AX-?([1-9][0-9]{2,3}[eAEO+]?)`),
		regexp.MustCompile(`(?i)B60Pro(?:_MV03)?`),
		regexp.MustCompile(`(?i)BL60_TG(?:05|17)`),
		regexp.MustCompile(`(?i)BL50P_TG0[567](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL(5[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL51_MV05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL54_?Pro`),
		regexp.MustCompile(`(?i)Bmobile[_ ]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Bmobile[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:K10[ ]?SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B_TAB1021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cybook)[ -]Tablet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Pulse Retro|Pulse Sky|Pulse Glide|Cabana|StrikaPlay)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Pulse Retro|Pulse Sky|Pulse Glide)`),
		regexp.MustCompile(`(?i)(Cabana)`),
		regexp.MustCompile(`(?i)(?:sprd-)?(BOWAY)`),
		regexp.MustCompile(`(?i)BOWAY[ _-]([^/;]+)[ _]Build`),
		regexp.MustCompile(`(?i)([^/;]+) Build/BOWAY`),
		regexp.MustCompile(`(?i).*BOWAY[ _-]([^/;]+)/`),
		regexp.MustCompile(`(?i)(?:L1f-pluss|Brandcode B6S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BPRIME|BSTAR\+?|BPRIMES|B-ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bravis[ _]|A501 Bright|A552 JOY Max|A504 Trace|A505 JOY Plus|A503 Joy|NB(?:106M|10[1-8]|751|7[145]|8[57]1|76)|NP101|NB961|NP 104 3G|B501|N1-570 Space|Atlas A551|A511 Harmony|A512 Harmony Pro|A510_Jeans_4G|A509_Jeans|N1_550_Cruiser|N1_551 Gloss`),
		regexp.MustCompile(`(?i)Bravis[_ ]X500`),
		regexp.MustCompile(`(?i)Bravis[_ ]A506`),
		regexp.MustCompile(`(?i)Bravis[_ ]A553`),
		regexp.MustCompile(`(?i)BRAVIS[ _]TAU`),
		regexp.MustCompile(`(?i)BRAVIS[ _]DELTA`),
		regexp.MustCompile(`(?i)BRAVIS[ _]TREND`),
		regexp.MustCompile(`(?i)BRAVIS[ ]A554`),
		regexp.MustCompile(`(?i)BRAVIS[ ]S500`),
		regexp.MustCompile(`(?i)BRAVIS[ _]SPARK`),
		regexp.MustCompile(`(?i)BRAVIS[ _]SLIM[ _]3G`),
		regexp.MustCompile(`(?i)Bravis[_ ]([^;\)]+) Build`),
		regexp.MustCompile(`(?i)(NB(?:106M|10[1-8]|75[134]|7[145]|8[57]1|76)|NP101|NB961)`),
		regexp.MustCompile(`(?i)(HD1023|XD233|XD230|XD1030|XD1132|XT114[34]|4K1142|LS424)`),
		regexp.MustCompile(`(?i)Brondi[ _]|(?:CENTURION|GLADIATOR| GLORY|LUXURY|SENSUELLE|VICTORY|AMICO SMARTPHONE XL|AMICO_SMARTPHONE_4G|MIDNIGHT_SKY|501 SZ|850_4G)(?:[ _-]?[2-6])?(?:[);/ ]|$)|Surfing Tab`),
		regexp.MustCompile(`(?i)(?:Brondi[ _])?(620 SZ|730_4G_HD|501 SZ|850_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CENTURION(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLADIATOR(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUXURY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIDNIGHT_SKY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SENSUELLE(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VICTORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Surfing Tab ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Surfing Tab ([^;/)]+)[;/)]`),
		regexp.MustCompile(`(?i)(BUB6R-3T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BTOUCH7_PLUS|SWEET 5\+ 2019|SWEET ?[56]\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET 5\+ 2019`),
		regexp.MustCompile(`(?i)SWEET ?([65])\+`),
		regexp.MustCompile(`(?i)Bush[ ,_-]|Bush10Nou`),
		regexp.MustCompile(`(?i)Spira B1 (8|10\.1)`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+)Tablet(?: Build|[);])`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+) Smartphone`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)BUSH, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(XR4500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:noa X2 Plus|noa_G1|noaXPower|NOATAB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAGI-([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)(?:CG_OMEGA6|Omega (?:[38])|CG_EON_Blaze_Pro|CG\|EON Blaze GOLD|Blaze [GN])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Omega ([38])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG_OMEGA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG_EON_Blaze_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG\|EON Blaze GOLD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blaze ([GN])`),
		regexp.MustCompile(`(?i)CGV_(Ultimate T8)`),
		regexp.MustCompile(`(?i)CKK (Inspire 1|Garnet)`),
		regexp.MustCompile(`(?i)BlueS10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN[_ ]|(?:C55 Pro|C60 Ultra|Fenix8_3G|Note1|Tronik_[123]|Star7 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C55 Pro|C60 Ultra|Star7 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fenix8_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN Note1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN R([124])0`),
		regexp.MustCompile(`(?i)Tronik_(\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN[_ ]X(4|55|5)`),
		regexp.MustCompile(`(?i)COYOTE[ _]`),
		regexp.MustCompile(`(?i)CUBOT|QUEST(?: LITE)?|(?:NOTE 7|NOTE 20(?: PRO)?|RAINBOW 2|KING_KONG_3|KINGKONG [5679]|KINGKONG 5 Pro|ZORRO 001|KINGKONG[_ ](?:MINI2?|POWER)|KING KONG CS|R15_PRO|S550 Pro| CHEETAH| [RX]19|X19 S|MAX 3|Android 9;(?: [\w-]+;)? (?:J5|MAX 2)|Android [89](?:[\d.]*);(?: [\w-]+;)? R15|Android 11;(?: [\w-]+;)? (?:Pocket|NOTE 9|P50)|POCKET 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCKET (3)`),
		regexp.MustCompile(`(?i)CHEETAH( 2)?`),
		regexp.MustCompile(`(?i)KINGKONG MINI ?([23])`),
		regexp.MustCompile(`(?i)KING[_ ]?KONG[_ ]([35679])`),
		regexp.MustCompile(`(?i)CUBOT[ _]Echo`),
		regexp.MustCompile(`(?i)CUBOT[ _]MANITO`),
		regexp.MustCompile(`(?i)CUBOT[ _]MAGIC`),
		regexp.MustCompile(`(?i)MAX ([23])`),
		regexp.MustCompile(`(?i)CUBOT[ _]MAX`),
		regexp.MustCompile(`(?i)NOTE (20|9)`),
		regexp.MustCompile(`(?i)(R15|S550|J3)[_ ]PRO`),
		regexp.MustCompile(`(?i)CUBOT[_ ]NOTE[_ ]S`),
		regexp.MustCompile(`(?i)CUBOT[ _](A5|C6W|H3|J3|P7|P20|[RXJ]9|R11|X18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (X19 S|[RX]19|R15|J5|P[56]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUBOT ([^;/]+) Build`),
		regexp.MustCompile(`(?i)([^;/]+) Build/CUBOT`),
		regexp.MustCompile(`(?i)CVTE[_ ](MSD338_(:?1G|512M))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Camfone (?:SE)|Hero[_ ](?:H5\+|SE2|H9|(?:H7|XR)_Plus|SX|1[123]|SE3[ _]Max)|Honey (?:Y1|Y2s)|Mega 10|Furious 7 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hero[_ ](?:H5\+|SE2|H9|(?:H7|XR)_Plus|SX|1[123]|SE3[ _]Max)|Honey (?:Y1|Y2s)|Mega 10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Camfone (SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S70CDS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M75TG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Capitel-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Captiva[ _-]([^;/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)CT(?:10[0123]0|7[12]0|820|735_16GB|1056_32GB|1005)(?:W|FR)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT(10[0123]0(?:W|FR)?)`),
		regexp.MustCompile(`(?i)CT(7[12]0(?:W|FR)?|735|1005|1056)`),
		regexp.MustCompile(`(?i)(C811|C7[57]1)(?: 4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C751(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C771(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C811 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASPER[_ ]|VIA[- _](X30 Plus|[XF]20|T7D|A[34]|E[43]|E30|F[123]|G[345]|M4|[LS]8|S7|P[23]|V8C|A[13]_Plus(?:_64)?|A1(?:_1)?|S[13]0|S48|S|T17_M|T1[07]|T7|[ST]7-3G|T8B|T8D-3G|S1[78]|S48_0|[LS]30_0|L30|F30 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CASPER[_ ])?VIA[_ ](A1|X30)[_ ]Plus(?:_64)?`),
		regexp.MustCompile(`(?i)(?:CASPER[_ ])?VIA[_ ]([XF]20|G1_Plus|F30 Plus|A3_Plus|G[135]|E[14]|E30|[AE]2|M[123]|V[35689]|V10|G3|V6X|A[34]|E3|F[123]|G4|M4|P[23]|S|V8C|A1(?:_1)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASPER_L10_4.5G`),
		regexp.MustCompile(`(?i)CASPER_(S[23]8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIA[- _]([ST]7|T8D)-3G`),
		regexp.MustCompile(`(?i)VIA[- _](T7D|S[13]0|S48|[LS]8|S7|T17_M|T1[07]|T7|T8B|S1[78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIA[- _](S48|[LS]30)(?:_0)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B30_Dorado|Cat ?(tablet|stargate|nova)|(?:B15Q|CAT B35|CAT-B100|S62 Pro|S48c|Android 9;(?: [\w-]+;)? S52|Android 10;(?: [\w-]+;)? S42)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (S48c|S[45]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cat ?(?:tablet)? ?((?:Galactica|Nova|StarGate|PHOENIX)[^/;]*) Build`),
		regexp.MustCompile(`(?i)Cat ?tablet`),
		regexp.MustCompile(`(?i)CAT-(B100)`),
		regexp.MustCompile(`(?i)(B30)_Dorado`),
		regexp.MustCompile(`(?i)(?:Cavion[_ ](?:Solid[_ ]4[\._]5|Base[ _](?:7|7_3G_Silver|5[._]0|10|7.2 Quad)|10_3GRQ)|base10_3g_silver|Cavion7.1quad|M1092Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cavion[_ ]Solid[_ ]4[._]5`),
		regexp.MustCompile(`(?i)Cavion[ _]BASE[ _]5[._]0`),
		regexp.MustCompile(`(?i)Cavion(?:7.1quad)`),
		regexp.MustCompile(`(?i)Cavion Base 7.2 Quad`),
		regexp.MustCompile(`(?i)(?:Cavion_)?Base_?(7|10)_3G_Silver`),
		regexp.MustCompile(`(?i)(M1092Q)`),
		regexp.MustCompile(`(?i)(?:ACRUX|BELLATRIX|BETELGEUSE|Kil-82WFDC|U800B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U800B)`),
		regexp.MustCompile(`(?i)CELCUS, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Celkon|Android 7.+ UNIQ(?: Build|[);])|(?:Millennia Hero|2GBStar|2GBXpress|CliQ2|Campus Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Celkon[ _*](C[78]20)`),
		regexp.MustCompile(`(?i)Celkon[_ ]4G_TAB-8`),
		regexp.MustCompile(`(?i)CliQ2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4GPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 7.+ UniQ(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Campus Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Celkon[ _*](CT[^;/]+) Build`),
		regexp.MustCompile(`(?i)Celkon[ _*]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Celkon[\. _*]([^;/\)]+)[\)/]`),
		regexp.MustCompile(`(?i)Cell_?C_|(?:Android 5(?:[\d.]*);(?: [\w-]+;)? (?:Summit|Fantasy))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cell_C_(Summit_Plus|Fame|Evolve)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Summit(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fantasy(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Cool_Extreme_2|Earn|Fashion2Plus|Fashion[ _]C|Cool Duo|CHIC_X1|Miracle XS|Miracle 6.0 S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cool_Extreme_2|Earn|Fashion[ _]C|Cool Duo|Miracle XS|Miracle 6.0 S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cellacom|(?:S51_lite|X501_Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cellacom_S62(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S51_lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X501_Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cosmas|CT_Cosmas_V|PADUA`),
		regexp.MustCompile(`(?i)(?:CT_)?Cosmas_(TF|[VF])`),
		regexp.MustCompile(`(?i)(?:Centric[- ]CM(?:5001|33[23]1|3321Plus)|CM4331|CM2221)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM5001`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3321Plus`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3321`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3331`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM4331`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM2221`),
		regexp.MustCompile(`(?i) (?:C66)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (C66)`),
		regexp.MustCompile(`(?i)Changhong|HON H01|GHONGV12`),
		regexp.MustCompile(`(?i)Changhong[ ]?(X1-K|X6|R8|Z9S?|Z1S|S18|R9|S07)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ChangHong Andr[o0]id TV`),
		regexp.MustCompile(`(?i)changhong,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:Opera TV.+)Changhong-([^);/]+)`),
		regexp.MustCompile(`(?i)Cherry|Superion[_ ](?:S2|Radar Deluxe|S1 DTV|S1 Plus DTV|Tab Pro)|Flare([ _])?(2.[01]|2X|4|A[123]|J[1235678]|P[13]|S[4-8]|X2|Y[3567]|S[ _]Play|HD|LITE|XL|X_V[23]|Y3s|Tab|INFINITY)(?:[ _](?:Pro|Plus|Max|LTE))?|Fusion Aura 3s|Radar Deluxe 2|Desire R[678]|Desire_R[67]_Lite|Fusion Bolt|Omega[_ ](?:Icon 2|Icon Lite 2|lite[_ ][243][Cs]?|HD [45]|HD_Duo|X)|Spin Max 2|Selfie_Two|Flare X Lite|Flare_5|Android 1.*Aqua S9|Omega_HD_4|MAIA PAD PLUS|COSMOS THREE| Revel 3G|Touch XL 2`),
		regexp.MustCompile(`(?i)(Flare2X|Aqua S9(?: (?:Max|Lite|Pro))?)`),
		regexp.MustCompile(`(?i)Flare[_ ]HD[_ ]([345])`),
		regexp.MustCompile(`(?i)Flare[ _]S[ _]Play`),
		regexp.MustCompile(`(?i)Flare (2\.[01])`),
		regexp.MustCompile(`(?i)Flare[_ ]J([2356])S`),
		regexp.MustCompile(`(?i)Flare_([A-Z]\d+)_Prime`),
		regexp.MustCompile(`(?i)Flare_([A-Z]\d+)_Deluxe`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Power`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Pro`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Lite`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Plus`),
		regexp.MustCompile(`(?i)Flare ?J3 ?Plus`),
		regexp.MustCompile(`(?i)Cherry[_ ]X740`),
		regexp.MustCompile(`(?i)Flare[ _]X[_ ]V([23])`),
		regexp.MustCompile(`(?i)Flare[ _]XL[_ ]?2`),
		regexp.MustCompile(`(?i)Flare[ _]([A-Z]\d+)[ _]mini`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Max`),
		regexp.MustCompile(`(?i)Flare[_ ]J2[_ ]DTV`),
		regexp.MustCompile(`(?i)Flare[_ ]INFINITY`),
		regexp.MustCompile(`(?i)Flare[_ ]Lite[_ ]3S`),
		regexp.MustCompile(`(?i)Flare(?:[ _])?(A1_Roam|A[123]|J8 LTE|J1s|J[1235678]|P[13]|S[4-8]|X2|Y3s|Y7_LTE|Y[3567]|[45])`),
		regexp.MustCompile(`(?i)OMEGA[ _]HD[ _]([45])`),
		regexp.MustCompile(`(?i)Omega[_ ]Lite[_ ](3[Cs]|[24])`),
		regexp.MustCompile(`(?i)Omega[_ ]X`),
		regexp.MustCompile(`(?i)Desire[ _]R(\d)[ _]Lite`),
		regexp.MustCompile(`(?i)Flare Tab Pro V(\d)`),
		regexp.MustCompile(`(?i)(Fusion Bolt|Flare Tab Pro|Flare Tab|Superion[_ ](?:S2|Radar Deluxe|S1 DTV))`),
		regexp.MustCompile(`(?i)Cherry(?:[ _]?Mobile)?[ _]?([^/;]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:ALTO (?:Bombo|classic|Estrella|JUEGO|SUBIR|[235])|FUEGO MAX|OJOS[ _](?:CIELO|CAMBIO|NUBE|[68i]|ORO|VIVIR|Plus|DOS mini|DOS|LUNA|X1)|AVANCE classic)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALTO ([235])`),
		regexp.MustCompile(`(?i)OJOS[ _]([68i]|X1)`),
		regexp.MustCompile(`(?i)E-Board[ -]MX05[45]`),
		regexp.MustCompile(`(?i)E-Board[ -](MX05[45])`),
		regexp.MustCompile(`(?i)(M812C|1501_M02|9930i|A1303|A309W|M651CY|M653|CMCC[ -]M(?:670|860)|M762G)(?: Build|[);]|$)`),
		regexp.MustCompile(`(?i)(M812C|1501_M02|9930i|A1303|A309W|M670)`),
		regexp.MustCompile(`(?i)Build/Tianyi|(?:TYH61[12]M|TYH211U|TYH201H|TYH622M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-(Hi8-super|Hi12|V99i?|V17HD3G|VX8-3G|V88-QUAD|V9-DUAL|V88S|Vi[78]|[HV]i10 (?:pro|plus))|Hi10 (?:Pro|plus)|HiPad[ -](?:X|X?Pro|Air|Max)|HiPadX|HiBox-hero|HiBook(?: pro)?|Hi(?:[89]|10) ?(?:Air|X?Pro)|HiPad ?Plus|Hi8SE|Vi8 plus|Vi10(?: ?Pro)?|Surpad|HiPadPro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CW-Hi8-super)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-)?(Vi10|Hi10|Vi8) plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V88)-QUAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V9)-DUAL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V17HD|VX8)-?(3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-)?(Hi10) pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBook pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBook(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?XPro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad-Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi([89]) ?Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi8SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi10 ?XPro`),
		regexp.MustCompile(`(?i)Hi([89]) ?pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10 ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Surpad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBox-hero(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(Vi[78]|Hi12|V99i?|V88S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RK25WO|RK[29]5|RS35|RS51_HS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Life X6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Claresta[ _]|(?:AirPhoneS[56]|AirPhone K6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AirPhone ?(S[56]|K6)`),
		regexp.MustCompile(`(?i)Claresta (F3) PRO`),
		regexp.MustCompile(`(?i)Claresta[ _](F4)`),
		regexp.MustCompile(`(?i)Clarmin|(?:B8Lite|B8Plus|Android 7(?:[\d.]*);(?: [\w-]+;)? B5Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Clarmin[_ ](B[65]|C1)`),
		regexp.MustCompile(`(?i)ClearPHONE ([246]20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CLEMPAD[_ ](?:6_XL|HR_Plus|HR|[68]|7_S|201[89])|ClemPhone_7|MFC_(?:2018|8))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLEMPAD_(201[89])`),
		regexp.MustCompile(`(?i)Clempad[_ ](6_XL|HR_Plus|HR|[68])`),
		regexp.MustCompile(`(?i)ClemPhone[ _](7)`),
		regexp.MustCompile(`(?i)(?:Cirrus_C2|Cyclone_C4|Storm_C3|Stratus_C[57](?:_Elite)?|Sunshine_T1|Typhoon_C6|Sunshine_T1_Elite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cirrus_C2|Cyclone_C4|Storm_C3|Stratus_C[57]|Typhoon_C6)`),
		regexp.MustCompile(`(?i)(Sunshine_T1(?:_Elite)?)`),
		regexp.MustCompile(`(?i)CloudFone[ _]|(?:Thrill[ _](?:Boost[ ]?(2|3)?|Power|Snap|Access|Plus 16GB|Lite|HD)|Excite Prime 2 Pro|Excite Prime|ExciteC|NBA Edition|Go SP|Next Infinity Plus|Next Infinity|Next Lite|Go Connect)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Boost 2 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Boost (2|3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill[ _]Boost(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Snap(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Plus 16GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Access(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill HD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NBA Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Go SP(?: 2)?|Next Infinity (?:Pro|Plus)|Next Infinity|Go Connect(?: Lite)?(?: 2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Next Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Next(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)\+VT(?:107C|Q007C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)\+VT(107C)`),
		regexp.MustCompile(`(?i)\+VTQ(007C)`),
		regexp.MustCompile(`(?i)Hind[ _]5\.1|X417[ _]Amaze|X418[ _]Zest|X421[ _]Nova|X422[ ]Exotic|X425[ _]Shavit|X428[ _]Astute`),
		regexp.MustCompile(`(?i)Hind[ _]5\.1`),
		regexp.MustCompile(`(?i)X417[ _]Amaze`),
		regexp.MustCompile(`(?i)X418[ _]Zest`),
		regexp.MustCompile(`(?i)X421[ _]Nova`),
		regexp.MustCompile(`(?i)X422[ _]Exotic`),
		regexp.MustCompile(`(?i)X425[ _]Shavit`),
		regexp.MustCompile(`(?i)X428[ _]Astute`),
		regexp.MustCompile(`(?i)CnM[ \-](?:Touchpad|TP)[ \-]([0-9\.]+)`),
		regexp.MustCompile(`(?i)Cobalt[ _-](?:SM|T)`),
		regexp.MustCompile(`(?i)Cobalt[ _-]SM_(55?|6)`),
		regexp.MustCompile(`(?i)Cobalt[ _-]T((?:7|10))[ _]3G`),
		regexp.MustCompile(`(?i)Cobalt[ _-]T((?:7|10))[ _]wifi`),
		regexp.MustCompile(`(?i)(MID(?:1024|112[56]|1045|1048|106[05]|4331|701[26]|7015A?|70[32]2|703[56]|704[278]|7052|7065|7120|8024|80[47]2|8048|8065|8125|812[78]|9724|974[02])|CTB761)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Colors[ _](S(?:[19]|11)|P70|P[456]5|P32|E15|P50 Plus)|Pride_1A|P52_Pride5C|P90_Pride5X|P95_Pride_7s|P77_Pride_1E|P88_Pride_1X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pride_1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P95_Pride_7s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P77_Pride_1E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P52_Pride5C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P90_Pride5X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P88_Pride_1X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Colors[ _](S(?:[19]|11)|P70|E15|P[456]5|P32|P50 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tesla|Impulse 7.85 3G|Impulse 10.1 OCTA|Smartphone_6.1|SP(?:6.2|6.2_Lite)|TTL(?:713G|8)`),
		regexp.MustCompile(`(?i)TeslaEvo5.0`),
		regexp.MustCompile(`(?i)(Gravity 9.7 SHD)`),
		regexp.MustCompile(`(?i)(Impulse 7.85 3G)`),
		regexp.MustCompile(`(?i)Impulse 10.1 OCTA`),
		regexp.MustCompile(`(?i)Tesla_SP([^/;)]+)L(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Smartphone_6.1`),
		regexp.MustCompile(`(?i)SP6.2_Lite`),
		regexp.MustCompile(`(?i)Tesla_SP(\d+)[_.](\d+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Tesla_SP([^/;]+) Build`),
		regexp.MustCompile(`(?i)SP([^/;]+) Build`),
		regexp.MustCompile(`(?i)Smartphone ([36])`),
		regexp.MustCompile(`(?i)(L7.1)`),
		regexp.MustCompile(`(?i)(L7 Quad) Build`),
		regexp.MustCompile(`(?i)(L7 Quad Lite)`),
		regexp.MustCompile(`(?i)(L8.1)`),
		regexp.MustCompile(`(?i)TESLA,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Comio|(?:CT701G PLUS|CT701W|GT100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Comio[ _-]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Compal-[a-z0-9]+`),
		regexp.MustCompile(`(?i)(?:CT101|CT1085_32GB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CT1085)_32GB`),
		regexp.MustCompile(`(?i)(CT101)`),
		regexp.MustCompile(`(?i)ConCorde ([^/;]+) Build|Concorde_Raptor_Z55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Concorde_(Raptor_Z55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ConCorde Tab ?([^/;]+) Build`),
		regexp.MustCompile(`(?i)ConCorde ReadMan ?([^/;]+) Build`),
		regexp.MustCompile(`(?i)ConCorde ([^/;]+) Build`),
		regexp.MustCompile(`(?i)(GoCAM_G301)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Concord[ _-]|(?:Flyfix 6|C-721|Plus-7_C777|Plus_M19_C779|Plus-9_C778|Dream_Edition_C-754)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Plus[-_]([79]|M19)_(C77[789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Allure (?:A55 Slim|M[123]|X)|Griffe T[235-9]|TFX71[12]G|TFX71[34]L|TMK715L|TRA-901G|TGW[-]?(710G|709|102L|801[GL])|(?:PGN\-?[456][012][0-9]|PHS\-601|PHQ519|PAM412|PHQ52[056]|TB105L|TB717G|PKT\-301|Plume (?:H1|L[1-68]|P8|P6 PRO LTE)|Infinity E5|Infinity a4|Infinity_i[45]|PKT411|SP413)(?:[);/ ]|$)|CTAB[^/;]+ Build`),
		regexp.MustCompile(`(?i)CTAB([^/;]+) Build`),
		regexp.MustCompile(`(?i)(TGW)-?(710G|709|801[GL]|102L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TFX71[12]G|TFX71[34]L|TB105L|TB717G|TMK715L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TRA)-(901G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGN-?403`),
		regexp.MustCompile(`(?i)PGN-?404`),
		regexp.MustCompile(`(?i)PGN-?409`),
		regexp.MustCompile(`(?i)PKT-?301`),
		regexp.MustCompile(`(?i)PGN-?504`),
		regexp.MustCompile(`(?i)PGN-?505`),
		regexp.MustCompile(`(?i)PGN-?506`),
		regexp.MustCompile(`(?i)(Allure \w+) Plus`),
		regexp.MustCompile(`(?i)(Allure \w+) Lite`),
		regexp.MustCompile(`(?i)(Allure (?:M[123]|X))`),
		regexp.MustCompile(`(?i)PGN\-?507`),
		regexp.MustCompile(`(?i)PGN-?508`),
		regexp.MustCompile(`(?i)PGN\-?509`),
		regexp.MustCompile(`(?i)PGN-?511`),
		regexp.MustCompile(`(?i)PAM-?412`),
		regexp.MustCompile(`(?i)PGN-?513`),
		regexp.MustCompile(`(?i)PGN-?514`),
		regexp.MustCompile(`(?i)PGN-?515`),
		regexp.MustCompile(`(?i)PGN-?516`),
		regexp.MustCompile(`(?i)PGN-?51[78]`),
		regexp.MustCompile(`(?i)Infinity_i([45])`),
		regexp.MustCompile(`(?i)PGN-?521`),
		regexp.MustCompile(`(?i)Griffe T3 ?pro`),
		regexp.MustCompile(`(?i)Griffe T([0-9]) Plus`),
		regexp.MustCompile(`(?i)Griffe T([0-9])`),
		regexp.MustCompile(`(?i)PGN-?522`),
		regexp.MustCompile(`(?i)PGN-?523`),
		regexp.MustCompile(`(?i)PGN-?527`),
		regexp.MustCompile(`(?i)PGN-?528|PLUME P6 PRO LTE`),
		regexp.MustCompile(`(?i)PGN-?605`),
		regexp.MustCompile(`(?i)PGN-?606`),
		regexp.MustCompile(`(?i)PGN-?607`),
		regexp.MustCompile(`(?i)PGN-?608|Allure A55 Slim`),
		regexp.MustCompile(`(?i)PGN-?609`),
		regexp.MustCompile(`(?i)PGN-?610`),
		regexp.MustCompile(`(?i)PGN-?611`),
		regexp.MustCompile(`(?i)PGN-?612`),
		regexp.MustCompile(`(?i)PGN-?613`),
		regexp.MustCompile(`(?i)Plume L([2468]) Pro`),
		regexp.MustCompile(`(?i)Plume L([13]) Plus`),
		regexp.MustCompile(`(?i)Plume L([1-5])`),
		regexp.MustCompile(`(?i)PGN-?([0-9]{3})`),
		regexp.MustCompile(`(?i)(?:CP6001A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CTAB1044hn|CTAB-1044|SEN_1055_ARM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CTAB1044hn|CTAB-1044)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Conquest[-_ ](?:S\d+|F2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Conquest[-_ ]S(\d+)`),
		regexp.MustCompile(`(?i)Contixo|(?:CX-1045 3G|KT995 3G|CX1045|B108_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CX-?1045(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CONTIXO GX 1035(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Contixo GT1160 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B105(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B108(?:[_ ]4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT107(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT715 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT995(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT ?1100GT(?: 4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad|(?:Cool_9S|1824-S0|8190Q|1831-A0|8676-[AM]01|1872-A0|CP8298_I00|CP3648AT?|CP8676_I0[23]|REVVLPLUS C3701A|VCR-[AI]0|C105-(?:8|E0)|C106-[789]|C107-9| C106|MTS-T0|cp3705A[S]?|ORL-C0|DLS-E0|182[56]-I01|1825-E0| 1825|8298-(?:M02|A01)|5560S|CP3320AS2|CP3667AT|CP3706AS|CP3669AS|CP3321AT|CP350[34]L|C103|CP03|C1-U02|SAC-A0| 203[29]|CP05)(?:[);/ ]|$)|(8295|5860S) Build`),
		regexp.MustCompile(`(?i)VCR-[AI]0`),
		regexp.MustCompile(`(?i)1831-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1872-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 2032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8190Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DLS-E0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1824-S0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3321AT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3705A[S]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3648AT?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3320AS2?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3706AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3669AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MTS-T0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:C106-[789]|R116|C10[36]|C1-U02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 2039(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C107-9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C105-(?:E0|8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1826-I01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1825-I01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 1825(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ORL-C0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cool_9S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SAC-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5560S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(5860S|8295) Build`),
		regexp.MustCompile(`(?i)Coolpad[_ ]2041`),
		regexp.MustCompile(`(?i)CP8676_I02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COR-I0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP8676_I03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP8298_I00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CP350[34]L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(8676-[AM]01|8298-(?:M02|A01))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad[ _\-]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(CP20)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cosmote?[_ ]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(CP-J55a|CP-J55aW|CP-J55aX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WING 5|WING9|Venus[ _][14]`),
		regexp.MustCompile(`(?i)Venus[ _]([14])`),
		regexp.MustCompile(`(?i)Cricket-([a-z0-9]+)|(?:U304AC|U325AC|U705AC|V350C|EC1002|EC21100[1-4]|SL100EA|SL101AE|WTCKT01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cricket-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Q7A\+?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRONY-7021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Crosscall|ODYSSEY_Plus|Odyssey S1|Trekker-[MSX][1-4]|Action-X[35]|Core-(?:M[45]|T[45]|X[345])`),
		regexp.MustCompile(`(?i)Action-X3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Action-X([35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Core-(M4) GO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Core-(M[45]|X[345])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Crosscall ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Trekker-([MSX][1-4]) Core`),
		regexp.MustCompile(`(?i)Trekker-([MSX][1-4](?: Core)?)`),
		regexp.MustCompile(`(?i)Core-T([45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CROWN, ([a-z0-9_ \-]+), (?:wired|wireless)|BlossomB902(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CROWN, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:SNOOK-X10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(<!myPhone ?)Cube|(U[0-9]+GT|K8GT)|(?:T8-PLUSM?S?|T8PLUSML|I1-TF[BD]?|I1-TC|i15-T[CG]?|I1_3GD|i1002S|Iwork10 Flagship|iwork10 Pro|T10 PLUS|CUBE-T970|U55GT_C8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U27GT-C8X?`),
		regexp.MustCompile(`(?i)U25GT-C4YT|U25GT-W4`),
		regexp.MustCompile(`(?i)U30GT ?2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U51GT-SL|U51GT-C8`),
		regexp.MustCompile(`(?i)(?:T8-PLUSM?S?|T8PLUSML)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1-TF[BD]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1_3GD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1-TC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i15-TG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i15-T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:i1002S|iwork10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Iwork10 Flagship|i15-TC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUBE-T970(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U[0-9]+GT[^;/]*) Build`),
		regexp.MustCompile(`(?i)(U[0-9]+GT(?:[0-9]|[\-_][a-z]+)?)`),
		regexp.MustCompile(`(?i)(K8GT)`),
		regexp.MustCompile(`(?i)C70W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C70W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cyrus[ _-]|CyrusApel|CM17XA|CS(?:22|45)XA(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CM17XA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CS(22|45)XA(?:_EEA)?`),
		regexp.MustCompile(`(?i)Cyrus[ _-]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Cyrus[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DTB-7168G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:D5-L|DT07-TAB4G|LM-01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LM-01)`),
		regexp.MustCompile(`(?i)(D5-L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DASS[-_ ](H-ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BOXD7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP|(?:Ursus|Ixion)[ _]([^;/)]+)|H135[ _]Build|Larus_TV1|Ixion(?:ML4.7|ES250)|M150Storm|(?:SENIOR|F4[38]D8000K|VA(?:[12]10|170)|ML450|MS[56]50|BL(?:[123]50|160|155)|BS(?:155|160|[1256]50)|S(?:3[78]0|2[89]0|670)|AL(?:[12]40|[23]50)|AS(?:155|[123]60)| (?:B260|B245|H[12]10|H270|L470|N280i|P310|P380i?|R1[18]0|Q110|E1[78]0|E[12]10|B(?:450|340|35[05])|M170|M445|M[12]10|T155|H32F8000C|U43F8000Q|A(?:1[456]0|340|[34]55)|GS15[035]|GL[23]55|G25[035]|G355|G550|G15[05]|ES750|XL150|Z[1-4]55|H[13]70|H[34]10|P[45]10|L2[17]0)|Z250|A440|A350|N[13]80i|L1[178]0|L3[17]0i|G450|G660|Q[123]10|Q[12]80|N[234]10|N[35]70|EX111|S[245]70|S[127]70i|S169|S110|S180i?|S770|A555|(?:U75H8000K|U50H8000E|U65H8000K|U50G8000QG|U55H8050E|U43G9000CG|U43F8100QG|U55G8000QG|U50G9000CG|H32H8001C|H32G8000CG|H32F8000QG?(?:-[abc])?|H32F8[01]00Q|H39F8000Q|F43H8000K|U43H8000E|U43F8000EG|F43F8000[CQ]G?|F32[FG]8000C|F43G8000C|H24H8000C|H24F8000Q|F43F8000Q-G)(?:-[AbcfedH])?|Android 8(?:[\d.]*);(?: [\w-]+;)? A240|android 10;(?: [\w-]+;)? (?:B[23]1|B38|B1[87]|K28|K[34]1)|android 9;(?: [\w-]+;)? (?:K18|K21|B11)|android 11;(?: [\w-]+;)? (?:D[12]1|T21|K[345]1|K[342]8|K61|C3[78]|B28|B27|H28)|H32H8051C-G|50UCY2-G|55UCY1|H3218000K|U50F8000QG|U50H8050EG|H32I8000K|U65G8000Q|U43G8100QG|Android 11;(?: [\w-]+;)? P11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DEXP_)?(ML450|MS[56]50|ES750|XL150|ES1050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IxionES250(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IxionML4.7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ixion[_ ]([^;/]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)M150Storm(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M445(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AL250(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AL350(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS155(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ursus[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i) (K[23456]1|K[234]8|[KB]18|B[23]1|B[12]7|B[23]8|[BD]11|D21|T21|C3[78]|P11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VA[21]10|VA170|E210|R1[18]0|Q110|M[12]10|N280i|P380i?|P[345]10|S2[89]0|S3[78]0|S[456]70|H[12]10|H[123]70|H[34]10|L1[178]0|L2[17]0|N[13]80i|N[234]10|E1[178]0|Q[123]10|Q[12]80|EX111|N[35]70|L3[17]0i|L470|S[127]70i|S270|S110|S169|S770|S180i?|M170)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (H28)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G450)[ _](2021)`),
		regexp.MustCompile(`(?i) (B260|B245|A440|A[345]55|B450|B340|B35[05]|BL155|BL160|A160|A[23]40|A350|T155|Z[1-4]55|G25[035]|G355|Z250|G450|G550|G660)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SENIOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP[_ ]Freya`),
		regexp.MustCompile(`(?i)([HFU]\d{2}[A-Z]\d{4}[A-Z]{1,2}|AL-2020|H32F8000Q|H32[1I]8000K|H32H8051C-G|F43F8000Q-G|50UCY2-G|55UCY1)(?:-[AbcfedH]|U50H8050EG|U65G8000Q)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H135[ _]Build`),
		regexp.MustCompile(`(?i)(BL[123]50|BS155|BS160|BS[1256]50|AL[12]40|A1[45]0|GS15[035]|AS160|GL[23]55|G15[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)DEXP[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEYI-?(10M18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JAGUAR|SATURN|TIGER|PUMA)-0\dC?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SATURN-(02C?)`),
		regexp.MustCompile(`(?i)DG101TBIPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DG101TBIPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGICOM[_ ]`),
		regexp.MustCompile(`(?i)DIGICOM[_ ](A10_LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Digicom[_ ]DTOK`),
		regexp.MustCompile(`(?i)DIGIFORS (400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIJITSU[_ ]Smart[_ ]A11s`),
		regexp.MustCompile(`(?i)(8800i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DINGDING[ _-](SK\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WTCELERO5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIXON_|(?:ACK1010|KT5512|HK7-3502|DN6015|DFM48|TS-M105G-1|TS_M103A|TS-M704F-1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ACK1010|KT5512|DFM48)`),
		regexp.MustCompile(`(?i)TS-(M105G|M704F)-1`),
		regexp.MustCompile(`(?i)DIXON_XK1_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smartphone[ _]DL|DL_Horizon_Selfie|Tablet_DL_\d{4}|Smartphone[_ ](?:YZU[_ ]DS53)`),
		regexp.MustCompile(`(?i)Smartphone[_ ]YZU[_ ]DS53`),
		regexp.MustCompile(`(?i)DL[_ ]Horizon[ _]H8`),
		regexp.MustCompile(`(?i)Tablet_DL_(\d{4})`),
		regexp.MustCompile(`(?i)(?:DNS|AirTab)[ _\-]([^;/)]+)|(?:S4505M|S4004M|SD01M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DNS[_ ])?(S4505M|S4004M|SD01M|S4502|S4003|S4003)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-4003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AirTab[ _\-]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)DNS[ _\-]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Aloha_5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DPA_ZETA|DPA H3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DPA (H3)`),
		regexp.MustCompile(`(?i)DRAGON[_ ](OTT)`),
		regexp.MustCompile(`(?i)(DSCS9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RD86QE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUNNS[ _]`),
		regexp.MustCompile(`(?i)DUNNS[ _](?:MOBILE[ _])?(703GDC|AT1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Daewoo|(DTA-07IDRF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DTA-07IDRF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Daewoo (Android TV 638)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dslide|Konnect_?(?:402|50[246]|556|60[1278])|GEODROID_A5|Dbook[_ ]110`),
		regexp.MustCompile(`(?i)Konnect[_ ]?(402|50[246]|556|60[1278])`),
		regexp.MustCompile(`(?i)Dbook[_ ](110)`),
		regexp.MustCompile(`(?i)Dslide[ _]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Signature-S8|Monster 4GXX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Signature-S8)`),
		regexp.MustCompile(`(?i)(?:MEMOR )([12]0|1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K908H4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DATANG[ _-])+([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:DATANG[ _-])+([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)DW-[A-Z0-9]{5}(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DW-PS3G5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DBTEL(?:[\-/])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)DS-(?:BD1|CR1|CL2 Pro|X1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DS-(X1)`),
		regexp.MustCompile(`(?i)DeWalt (MD501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dell[^a-z]|Venue|XCD35|Latitude E?\d{4}|Inspiron N?\d{4}|Inspiron 13|Vostro (?:3546|14-3468)`),
		regexp.MustCompile(`(?i)Venue ((?:10|[78]) [0-9]{4}|[78] HSPA\+)`),
		regexp.MustCompile(`(?i)(?:Dell )?Venue(?: Build|[);])`),
		regexp.MustCompile(`(?i)Dell; Venue Pro`),
		regexp.MustCompile(`(?i)(OptiPlex (?:3050|7010))`),
		regexp.MustCompile(`(?i)Vostro (3546|14-3468)`),
		regexp.MustCompile(`(?i)Chromebook (\d{2} \(\d{4}\))`),
		regexp.MustCompile(`(?i)(?:Dell )?(Streak|Venue) ?([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:Dell Inc./)?(XPS 13 9360|Latitude (?:7480|7390|E4310)|Inspiron N?\d{4}|Inspiron 13-\d{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dell; ((?:Streak|Venue)[^;/\)]*)`),
		regexp.MustCompile(`(?i)Dell; ([^;/\)]+)`),
		regexp.MustCompile(`(?i)Dell[ _\-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(DT0704K08|DT070[25]W08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TAQ_10[4G]|TA[CDQ]-[0-9]+)|P(?:.+)TAQ-(?:[0-9]+)|SDQ[_-](?:550[24]4L|52001G|50002G|57004L)`),
		regexp.MustCompile(`(?i)TAQ_(10[4G])`),
		regexp.MustCompile(`(?i)P(?:.+)TAQ-(10213GMK2|10172MK3|10242MK2|70242MK2|[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA[CDQ]-[0-9]+)`),
		regexp.MustCompile(`(?i)SDQ[_-](550[24]4L|52001G|50002G|57004L)`),
		regexp.MustCompile(`(?i)Desay[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Desay[ _-]?([^;/)]+)`),
		regexp.MustCompile(`(?i)Dialog ?([^;/]+)(?: Build|[;)])|(?:M50E-1A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M50E-1A)`),
		regexp.MustCompile(`(?i)Dialog ?([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)DICAM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Digi[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGICEL|(?:DL3(?:PlusPro)?|DL501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DL3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DL(755|501)`),
		regexp.MustCompile(`(?i)DIGICEL[ _]([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:DS502|DS6018|DS6261)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DS502|DS6018|DS6261)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGIHOME, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:DL721-RB|DL(?:1016|1023|1025GH|1036|900[23]|[78]006|1008M)|Compumax Blue)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DL(1016|1025GH|1023|1036|900[23]|[78]006|721-RB)`),
		regexp.MustCompile(`(?i)(Compumax Blue)`),
		regexp.MustCompile(`(?i)Digit(?:4G|play1)`),
		regexp.MustCompile(`(?i)Digitplay1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Digit4G[ -](Energy|Pro)`),
		regexp.MustCompile(`(?i)Digma[_ ]([^;/]+) Build|iD[sr]Q\d+|DiMagic|HIT HT707[10]MG|CITI (?:7 E401 4G|8 E400 4G|ATL 4G|Kids|Octa [178]0|1902 3G|10 E402|Z530 3G|13 X703 4G)|(CITI[_ ](?:[A-Z0-9]+)[_ ][34]G)[ _][TC][ST](?:[0-9]{4}[PM][LG])|HIT 4G|HT7074ML|IDX5|(iDx10|iDx7)|MVM900H(?:WZ|C)|MVM908HCZ|(iDxD8 3G|iDxD10 3G|iDrQ10 3G|iDxD[45]|iDxQ5|iD[nx]D7(?:[_ ]3G)?)|PS604M|PT452E|Linx.+ [34]G L[TS][0-9]{4}[PM][GL]|Linx PS474S|PS1043MG|HT7071MG|HT5035PG|HT4039PG|NS6902QL|NS9797MG|TS7854M|TS1012E 3G|TT1004PG|TT702[045]MG|TT1002MG|TT7026MW|WS8251PL|VRL42|((?:Optima(?: Kids 7)?|Platina|Plane)[ _](?:[EM])?(?:[0-9\.ST]+|Prime)(?:[ _][43]G)?)|(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)|DM-LED(?:32SR21|43SR23|42SR24|24SR20|55UR31)|RS1248PL|RS1253PL|RS1249PL|RS1267PL|WS1250PL|WS1262RW`),
		regexp.MustCompile(`(?i)HIT(?: 3G)? HT707[10]MG`),
		regexp.MustCompile(`(?i)(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)`),
		regexp.MustCompile(`(?i)Linx ([A-Z][0-9]{3}) 3G (?:LT4028PG|LS4019PG|LT4001PG|LT5001PG|LT4038PG|LT5037MG|LT4030PG)`),
		regexp.MustCompile(`(?i)(Linx PS474S)`),
		regexp.MustCompile(`(?i)(CITI Z530 3G)`),
		regexp.MustCompile(`(?i)(CITI [A-Z0-9]+ [34]G) C[ST](?:606[32]ML|4024PG|5009PL|5021ML|502[56]PL)`),
		regexp.MustCompile(`(?i)MVM900H(?:WZ|C)`),
		regexp.MustCompile(`(?i)(iD(?:xD10|rQ10|xD7)[_ ]3G)`),
		regexp.MustCompile(`(?i)(iDx10|iDx7)`),
		regexp.MustCompile(`(?i)(iDxD[45]|iDxQ5)`),
		regexp.MustCompile(`(?i)PRO (1[46]00E 4G)`),
		regexp.MustCompile(`(?i)DIGMA[_ ]IDSD`),
		regexp.MustCompile(`(?i)CITI[_ ](1902 3G|Kids(?:[_ ](?:8[01]|10))?|8527_4G|Octa [178]0|10 E402 4G|8 E400 4G|7 E401 4G|13 X703 4G|1312C 4G|8443E 4G)`),
		regexp.MustCompile(`(?i)(CITI[ _](?:[A-Z0-9]+)[ _][34]G)[ _][TC][ST](?:106[24]ML|111[46]ML|1115MG|1117PG|1207MG|1210MG|3001ML|500[67]PG|7052PG|706[567]MG|7097MG|720[48]MG|820[69]MG|11[459]4MG|1195MG|1196ML|3001ML|8152ML|1050PL|709[68]PL|7113PL|7193MG|7216MG|8205PG|7203MG|8143MG|7153MG|7141MG|7140ML|8268PL)`),
		regexp.MustCompile(`(?i)(iDnD7)`),
		regexp.MustCompile(`(?i)Optima ([0-9]+ [AXZE][0-9]+[SC]?) ([43])G`),
		regexp.MustCompile(`(?i)Optima ([0-9]+ A500S) 3G`),
		regexp.MustCompile(`(?i)iD([sr])Q(\d+)[_ ]3G`),
		regexp.MustCompile(`(?i)iD([sr])Q(\d+)`),
		regexp.MustCompile(`(?i)((?:Optima|Platina|Plane)[ _](?:[EM])?(?:[0-9\.STNMEVCD]+|Prime(?:[ _][345])?)(?:[ _][43]G)?)`),
		regexp.MustCompile(`(?i)Digma[_ ]([^;/]+) Build`),
		regexp.MustCompile(`(?i)DiMagic Cube ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)VRL42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DM-LED(\d+[SU]R\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DX_TA_?(7001|SL83)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MARVEL|FROZEN|Toy_story)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MARVEL|FROZEN)`),
		regexp.MustCompile(`(?i)(M1092R(?:-[12]|V[45])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QC-(?:703GN|704GA|803GN|1013G|7BHD)|QC7704GM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DiverMax SpeedBox 3 SB1800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Divisat|X-MEDIA|DVS X3|OPTIMA_T-II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DVS )?(J-Link|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X-MEDIA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPTIMA_T-II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DoCoMo|\;FOMA|KGT/1\.0`),
		regexp.MustCompile(`(?i)DoCoMo/.+MST.+(SH2101V)`),
		regexp.MustCompile(`(?i)DoCoMo/[12]\.0[/ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)([a-z0-9]+)(?:_W)?\;FOMA`),
		regexp.MustCompile(`(?i)KGT/1\.0 ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(24DHS54|32GHS57|40KFS57|32KHS57|43KUS65)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dolamee[_ -](D[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Movix Pro(?: Voice)?|Movix Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DOOGEE[/ _-]|Valencia2_Y100(?:_?(?:pro|plus))?|Y100_Plus|X5max(?:[_ ]PRO)?|Shoot_[12]|x5_doogee|(KISSME|BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)|(?:BL12000|BL5500[_ ]Lite| Y6C|X9 Mini|LEO_DG280|Y9Plus|Y8 Plus|Hitman_DG850|S(?:4[01]|[568]8|9[05678]|59|61|8[69])Pro|X9[567]Pro|S[478]0Lite|S88Plus|BL[579]000|N[24]0Pro|S90C|Ibiza_F2|S55_Lite|T5_Lite|S60 ?Lite|Iron-bone DG750|X10S|X[569]0L|MIX2|Y6 Max|Y6_Piano(?:_black)?|S100Pro|X[679]pro|S96GT|android 10;(?: [\w-]+;)? (?:S59|S35|X95i?|X93|N30)|android 12;(?: [\w-]+;)? (?:S98|S61|S89|V Max|S100|V30T?)|Y7Plus|S35T|Android 9(?:[\d.]*);(?: [\w-]+;)? (?:N100|Y8)|D60 Pro|Turbo_mini_F1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Valencia2_)?Y100_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Valencia2[_ ]Y100pro`),
		regexp.MustCompile(`(?i)Valencia2_Y100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO_(DG280)`),
		regexp.MustCompile(`(?i)Iron-bone (DG750)`),
		regexp.MustCompile(`(?i)(X95i?|BL[579]000|S90C|X10S|X[569]0L|X93|V30T?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X(9[567])Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N([24]0)Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL5500[_ ]Lite`),
		regexp.MustCompile(`(?i)S([568]8|9[05678]|59|61|4[01]|8[69]|100)Pro`),
		regexp.MustCompile(`(?i)S(88)Plus`),
		regexp.MustCompile(`(?i)S([4-8]0|55)[_ ]?Lite`),
		regexp.MustCompile(`(?i)Doogee X5MP|x5MaxPro`),
		regexp.MustCompile(`(?i)Shoot_([12])`),
		regexp.MustCompile(`(?i)(?:Doogee[_ ])?X([679])[_ ]?pro`),
		regexp.MustCompile(`(?i)Y([89]) ?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (S59|S35T?|S98|S89|Y8|Y6C|S61|N30|[NS]100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X5max(?:[_ ]PRO)?)`),
		regexp.MustCompile(`(?i)(?:DOOGEE[ _-])?(BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|Valencia2_Y100pro|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DOOGEE[ _-]([^);/]+) Build`),
		regexp.MustCompile(`(?i)DOOGEE[ _-]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doopro P3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]| (?:20200308|20190808)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20200308(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190808(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dopod(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Doppio DP355(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doppio ([0-9a-z]+)`),
		regexp.MustCompile(`(?i)Doro|DSB-02[23]0`),
		regexp.MustCompile(`(?i)DSB-0230(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DSB-0220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doro[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Doro[ _-]([0-9a-z]+)`),
		regexp.MustCompile(`(?i)(?:Notepad[_ ](?:K10|102|Y80)|MAX 10|T12M_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Notepad[_ ](K10|102|Y80)`),
		regexp.MustCompile(`(?i)DREAMSTAR([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(DRN-[78]09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sens 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sens 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DROXIO (C40|A47|B45|KENTIA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dtac[_ ]?Phone[_ ]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)DuneHD|SOLO 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLO 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DuneHD/\d.\d \([a-z]+__([a-z0-9_-]+);`),
		regexp.MustCompile(`(?i)DuneHD/\d.\d \(([a-z0-9_-]+);`),
		regexp.MustCompile(`(?i)(Diamond R8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Duubee[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)E-Boda|Eclipse_(?:G400M|G500)|Revo R77 GPS`),
		regexp.MustCompile(`(?i)E-Boda ((?:Revo|Izzycomm(?: Z80)?|Essential|Intelligence|Supreme)[^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Eclipse_(G400M|G500)`),
		regexp.MustCompile(`(?i)E-Boda ([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:CT9716(?:-B)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT9716(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT9716-B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E-tel[-_ ](?:i2[45]0|i300|i7c|N[67]|Q4|O9)`),
		regexp.MustCompile(`(?i)E-tel[-_ ]i(7c|\d+)`),
		regexp.MustCompile(`(?i)E-tel[-_ ]N([67])`),
		regexp.MustCompile(`(?i)E-tel[-_ ]O9`),
		regexp.MustCompile(`(?i)E-tel[-_ ]Q4`),
		regexp.MustCompile(`(?i)EBEN[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)EBEST[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)EBEST[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EX-32HS016B|EX-39HS004B)`),
		regexp.MustCompile(`(?i)ECOO[ _]E0[45]`),
		regexp.MustCompile(`(?i)ECOO[ _]E04[ _]3GB\+|Ecoo E04_PLUS`),
		regexp.MustCompile(`(?i)ECOO[ _]E04[ _]3GB`),
		regexp.MustCompile(`(?i)ECOO[ _](E0[45])`),
		regexp.MustCompile(`(?i)(?:TA10CA3|TM105A?|TR10[CR]S1|TF10EA2|TR10CS2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TA10CA3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TR10[CR]S1|TF10EA2|TR10CS2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM105A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM105(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Harrier(?: Tab)?|Hawk|Rook)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)(Harrier Tab)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)Rook[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)(Harrier|Hawk)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)EFT_(H[234])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:E8_Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EKO|Star (?:\d\.\d) (?:G65|G5[05]|G40)`),
		regexp.MustCompile(`(?i)Star (\d\.\d) (G65|G5[05]|G40)`),
		regexp.MustCompile(`(?i)EKO[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)EKO[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EK-(?:5040|5336|5540|5937|6020|8680|MII|T7020)`),
		regexp.MustCompile(`(?i)EK-(MII|T7020)`),
		regexp.MustCompile(`(?i)EK-(5040|5336|5540|5937|6020|8680)`),
		regexp.MustCompile(`(?i)KidPhone4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PIXBA2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:8.*; E4Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EVBOX-PLUS\+|EVPAD-[35]S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVBOX-PLUS\+`),
		regexp.MustCompile(`(?i)EVPAD-([35]S)`),
		regexp.MustCompile(`(?i)(?:OCTA T720Q|OCTA-T700M-T2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EX7SL?4|EX10S4|EX7W1 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Tablet)?(?:EXO_)?(Wave[_-]i101[GLR]|Wave[_ ]i007[BT]?|Wave i101[Hb]|Wave i007Kids)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EYU[ _-](T53|T7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eagle[ _](Classic Pro|Elite|Gold)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EasyPad|EasyPhone`),
		regexp.MustCompile(`(?i)(EasyPhone[^/;]+) Build`),
		regexp.MustCompile(`(?i)EasyPad ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)ECHO[ _](HOLI|HORIZON|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION|PUSH|PRISM|STUDIO)|(?:HORIZON_M|Stellar [34]G|FEELING|MOON|LOOK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HORIZON_M|FEELING|MOON|LOOK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STELLAR ([34])G`),
		regexp.MustCompile(`(?i)ECHO[ _](HOLI|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION|PUSH|PRISM|STUDIO)`),
		regexp.MustCompile(`(?i)Einstein(T3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S5[UL]S|X4UPlus|S45U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S5[UL]S|S45U)`),
		regexp.MustCompile(`(?i)Meeplus_1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)electroneum(M1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(?:4[238]S[AM]{2}RT|5[05](?:CV_)?SMART_UHD|32SMART)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(4[238])S[AM]{2}RT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-55CV_SMART_UHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(50)SMART_UHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(32)SMART(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TAB(?:101|728)[ _]3G|TAB7(?:[03]8|16|40|3[30])|STB0819)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(STB0819)`),
		regexp.MustCompile(`(?i)(TAB(?:101|728)[ _]3G|TAB7(?:[03]8|16|40|3[30]))`),
		regexp.MustCompile(`(?i)Elephone|Vowney(?: Lite)?|P6000( ?Pro| ?Plus|\+| ?02| 5.0 01)?|Soldier|(?:Trunk 1|P8_3D|P8_Max|P8_Mini|A6_mini|P9000(?:_Lite)?|Android 9;(?: [\w-]+;)? PX|PX_Pro| U3H|U_Pro|Android 10;(?: [\w-]+;)? (?:E10_Pro|E10))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Elephone[_ ])?Trunk(?: 1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vowney Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vowney(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000(\+| ?Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 5.0 01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P(\d+)[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Soldier(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A6_mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P8_Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U|PX|E10)_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) U3H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 9;(?: [\w-]+;)? PX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P8_3D|P8_Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Elephone[ _])?(P[7689]000|S2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elephone[ _\-]([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:LUNA (V57|V55A|G58|G62|G60X)|V55C|G55 LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V55C)`),
		regexp.MustCompile(`(?i)(G55)[_ ]LITE`),
		regexp.MustCompile(`(?i)LUNA (V57|V55A|G58|G62|G60X)`),
		regexp.MustCompile(`(?i) (6CS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NV5(?:01|10)WAC|NV501|NV510WB|NV720WB|NV711WAC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV(501|510|711)WAC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV(510|720)WB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EGQ101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)emporia[_ ]|(?:Android 9;(?: [\w-]+;)? S3mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)emporia[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)PowerMax|HARDCASEH5[05]0S|ENERGY[_ ]?(?:[45]00|400S|S[56]00|E12|E5[02]0S?)(?:[_ ](?:LTE|EU))?`),
		regexp.MustCompile(`(?i)PowerMax(P[0-9]+S?)`),
		regexp.MustCompile(`(?i)ENERGY[_ ]([45]00|E520)[_ ]LTE`),
		regexp.MustCompile(`(?i)ENERGY[_ ]400S`),
		regexp.MustCompile(`(?i)ENERGY[_ ]S([56]00)`),
		regexp.MustCompile(`(?i)ENERGY[_ ]?(E500S|E500|E12)`),
		regexp.MustCompile(`(?i)HARDCASE(H5[05]0S)`),
		regexp.MustCompile(`(?i)ENERGY[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Energy Phone ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Energy Tablet ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)ENERGY[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(EN1007Q)plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Enot[ _-](E102|J101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ENT11QF12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ClickTabDSh18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EP19_star|EP19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ePad 7i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K501 Plus|[ ]K5(?:0[0-4]|1[01]|03[TS]|3[456]|4[05]|73|03HD)|[ ]K60[01]|[ ]X507T|[ ]K40[56]|[ ]T700|Android 8([\d.]*);(?: [\w-]+;)? X400|RS550)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Projector(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Axis(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ERGO|(V550[_ ]Vision|B502 Basic|B504[_ ]Unit|A502[_ ]Aurum|A503[ _]Optima|Prime B400|A551 Sky 4G|A553 Power|A555 Universe|Force F500|GoTab GBT9|GoTab Gti8|F501_Magic|V551[ _]Aura|V540_Level|V570_BIG_BEN|B506[_ ]INTRO|A503-Optima|B505_Unit_4G|LE32CT5515AK)`),
		regexp.MustCompile(`(?i)B506[_ ]INTRO`),
		regexp.MustCompile(`(?i)V550[_ ]Vision`),
		regexp.MustCompile(`(?i)B504[_ ]Unit`),
		regexp.MustCompile(`(?i)V551[ _]Aura`),
		regexp.MustCompile(`(?i)(ERGO_)?A500[ _]Best`),
		regexp.MustCompile(`(?i)(ERGO_)?A550[ _]Maxx`),
		regexp.MustCompile(`(?i)A502[_ ]Aurum`),
		regexp.MustCompile(`(?i)A503[ _]Optima`),
		regexp.MustCompile(`(?i)ERGO[_ ]A556`),
		regexp.MustCompile(`(?i)ERGO[_ ]F500`),
		regexp.MustCompile(`(?i)ERGO[_ ]F501`),
		regexp.MustCompile(`(?i)ERGO[_ ]Tab[ _]Crystal[ _]Lite`),
		regexp.MustCompile(`(?i)ERGO[_ ]Tab[ _]Hero[ _]II`),
		regexp.MustCompile(`(?i)ERGO[_ ](B700)`),
		regexp.MustCompile(`(?i)(LE32CT5515AK)`),
		regexp.MustCompile(`(?i)(?:Ericsson(?:/ )?[a-z0-9]+)|(?:R380 2.0 WAP1.1)`),
		regexp.MustCompile(`(?i)Ericsson(?:/ )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)R380 2.0 WAP1.1`),
		regexp.MustCompile(`(?i)Ericy-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(42FLEA73T2SM|42FLX9060T2|39LES80T2SM|32LX9051T2|55ULES92T2SM|32LEA73T2SM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PH-1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wooze[_ ]?(?:I55?|I45|X?L)|HEYOU(?:[135]|20PLUS|[1-7]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEYOU20PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEYOU([135]|[1-7]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wooze[_ ]?((?:I55?|I45|X?L))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eton[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Eton[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ETL-S(?:3520|4521|5042|5084|6022)|ETL-T(?:752G|850|882G|9[78]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ETL-S(?:[^/); ]+))`),
		regexp.MustCompile(`(?i)(ETL-T(?:[^/); ]+))`),
		regexp.MustCompile(`(?i)(EUTB_758G?)`),
		regexp.MustCompile(`(?i)(ET7002C-H12|ET8183GQ-HM15|ET7184GQ-B15|ET7183GQ-H16|Onyx-[13]S|T40SG?LED-A1[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onyx-([13]S)`),
		regexp.MustCompile(`(?i)(ET8183GQ-HM15|ET7184GQ-B15|ET7183GQ-H16)`),
		regexp.MustCompile(`(?i)(T40SG?LED-A1[45])`),
		regexp.MustCompile(`(?i)EVERCOSS[ _]|(U6 PRIME|A75A\*|AT8B|U50A_PLUS|M50 (?:MAX|STAR)|A75 MAX|M55[ABC]|M50A|R40K|R70A|7.*; (?:R70|R5C)|S55[AB]|U70[CB])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A75A\*(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A75|M50A) MAX*(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U50A_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M50 STAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M50 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (M50A|R40K|R70|R5C|S55[AB]|M55[ABC])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT8B|R70A|U70[CB])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVERCOSS[ _](A7[BRLZ]|A65|A74A|A5Z)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DC-(?:1032|121[56]|110[24]|1028|1545|70[59]|71[48]|85[56]|971[45])|(?:EVERPAD )?DC-709|DC-9712-8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DC-(1032|1028|121[56]|110[24]|1545|70[59]|71[48]|85[56]|971[45]|9712)`),
		regexp.MustCompile(`(?i)Fine 7B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ever(?:Allure|Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Solo|Smart|Star)[^/);]*)(?: Build|[;)])|(?:E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E1014HG|E7224HG|E7914HG|V5_Nano|M10\+Max|M10 Nano|V4 Nano| V4\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E7914HG|E7224HG|E1014HG)`),
		regexp.MustCompile(`(?i)(M10|V[45])[_ ]Nano`),
		regexp.MustCompile(`(?i)M10\+Max`),
		regexp.MustCompile(`(?i) V4\+`),
		regexp.MustCompile(`(?i)EverTrendy\+4G`),
		regexp.MustCompile(`(?i)Ever(Shine|Allure|Glory) ?II`),
		regexp.MustCompile(`(?i)(Ever(?:Allure|Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Solo|Smart|Star)[^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Evolio|M4MAGIC`),
		regexp.MustCompile(`(?i)Evolio[ _](M6|S4 Cobalt|S5|X10|Yuppi)`),
		regexp.MustCompile(`(?i)EVOLVEO|StrongPhone`),
		regexp.MustCompile(`(?i)EVOLVEO Android Box (H[48])`),
		regexp.MustCompile(`(?i)Smart TV ([^;/]*) Build`),
		regexp.MustCompile(`(?i)EVOLVEO StrongPhone G(\d)`),
		regexp.MustCompile(`(?i)(?:EVOLVEO[ _])?StrongPhone[ _]?Q([679])(_LTE)?`),
		regexp.MustCompile(`(?i)EVOLVEO[ _]([^;/]*) Build`),
		regexp.MustCompile(`(?i)(EVM4G3|EVM4G6|EVMFV2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVROMEDIA|Playpad[ _]|PLAY_PAD_PRO_XL|3G NOTE XL`),
		regexp.MustCompile(`(?i)(?:EX(?:29|45)i|CHAT_5\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHAT_5+`),
		regexp.MustCompile(`(?i)EX(29|45)i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Exmart[ _](K1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Explay|[\w]+-EXPLAY-FIN|ActiveD[ _]|Atlant |Informer[ _][0-9]+|CinemaTV 3G|Surfer[ _][0-9\.]|Surfer7773G|sQuad[ _][0-9\.]|Onliner[1-4]|RioPlay|Leader|Pulsar|Infinityll|Joy_TV|Imperium[78]|Winner[78]|Indigo|Lagoon|Tornado(?:3G)?|Onyx(?:[);/ ]|$)|android 4([\d.]*);(?: [\w-]+;)? Discovery.+Safari/|Party|Scream 3G|A350 TV`),
		regexp.MustCompile(`(?i)ActiveD[ _]7.4[ _]3G`),
		regexp.MustCompile(`(?i)Imperium([78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ActiveD[ _]8.2[ _]3G`),
		regexp.MustCompile(`(?i)CinemaTV[ _]3G`),
		regexp.MustCompile(`(?i)Informer[ _]([0-9]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Surfer[ _]([0-9\.]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Surfer([0-9\.]+)[ _]?3G`),
		regexp.MustCompile(`(?i)sQuad[ _]([0-9\.]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Onliner([1-4])`),
		regexp.MustCompile(`(?i)Winner([78])`),
		regexp.MustCompile(`(?i)Discovery(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Atlant(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Indigo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pulsar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tornado(?:3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onyx(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy_TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[\w]+-EXPLAY-FIN`),
		regexp.MustCompile(`(?i)Lagoon(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A350 TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Party(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Explay[ _-]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)RioPlay(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rock[ _]X[89]+|ROCK_X11`),
		regexp.MustCompile(`(?i)Rock[ _]X([89])\+`),
		regexp.MustCompile(`(?i)EZIO-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)EZZE-|EZ[a-z0-9]+`),
		regexp.MustCompile(`(?i)EZZE-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)EZ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(SH6[05]|SA50|SP65)_(?:2[13]|66)\d{3}(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Bison2021|B2021|[HR]2022|Air1 Pro| Air1| B1 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([HR]2022|Air1 (?:Ultra\+?|Pro)|Air1|B1 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Bison2021|B2021)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z8PLUS|Z8POCKET|LT5216|F80s_plus|C8Finger|F80 PIABELLA|i8_ROKR|LT1[68])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LT5216|LT1[68])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K118)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FFFTAB10a4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FX4423)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fise_32433_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPTIMUM (500[1-4]|5501)`),
		regexp.MustCompile(`(?i)UNICUM (1002|8S|8003)`),
		regexp.MustCompile(`(?i)(?:16M4HI105024|FMT-NM7058-02|FXT113R|176HS1050(?:232|531)|175WT1050231|175HS1050231|175FT1050241|Global3 B01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FXT113R)`),
		regexp.MustCompile(`(?i)ConeXis (A[12]|X[12])|SP5045V`),
		regexp.MustCompile(`(?i)(?:ifive[_ ]?(?:mini[_ ][43]G?S|X2|Mini3|3|Air|Pro 2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ifive[_ ]mini[_ ]([43]G?S)`),
		regexp.MustCompile(`(?i)ifive(X2|3)`),
		regexp.MustCompile(`(?i)ifive ?Air`),
		regexp.MustCompile(`(?i)FOODO[ _-](X10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FORME[ _-]`),
		regexp.MustCompile(`(?i)FORME[ _-]F520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FORME[ _-](A[35]7|R7S?|P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)android 12;(?: [\w-]+;)? (?:F101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FPT[_ ](X1[05]|X[39]|X50|S68 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FTRW100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Q3_EEA|Q3pro)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Q3_EEA(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Q3pro(?:[);/]|$)`),
		regexp.MustCompile(`(?i)FLEET_7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (FP(?:1U?|[234]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FX[123]00)`),
		regexp.MustCompile(`(?i)Famous|Red Royal Edition`),
		regexp.MustCompile(`(?i)Red 5\+`),
		regexp.MustCompile(`(?i)Famous[_ ]TAB[_ ]10`),
		regexp.MustCompile(`(?i)FAN-M300H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart ?(601|550|50[59])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FAST81[08])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(vKB011B|vKB004L)`),
		regexp.MustCompile(`(?i)Fero[_ ]|Royale[_ ](?:[YX]2|A1)`),
		regexp.MustCompile(`(?i)Royale[_ ]([YX]2|A1)`),
		regexp.MustCompile(`(?i)Fero[ _](A4001|A450[23]|A5001|L100|Iris|Power|Mega LTE|Vibe|J1)`),
		regexp.MustCompile(`(?i)ATRIUM II F55L2|TRIO F40LT|CENTRIC S50G|EPIC F50G|Gravity X55L|Orion M50L|ULTRA M50G|UltraJ8|M405B|VIRTUE3|F55L Build|Orbit_ll|F40G2`),
		regexp.MustCompile(`(?i)(F55L)`),
		regexp.MustCompile(`(?i)(Gravity X55L|Orion M50L)`),
		regexp.MustCompile(`(?i)FIGI[_ ]|(?:Note_(?:[37]|11)_Pro|Note_(?:1C|5)|Note_1_Lite|Nopal|[MGF]two|Hola)(?:[);/ ]|$)|Android 8(?:[\d.]*);(?: [\w-]+;)? Fj(?: Build|[;)])`),
		regexp.MustCompile(`(?i)FIGI[_ ]P40 Max`),
		regexp.MustCompile(`(?i)FIGI[_ ]P40`),
		regexp.MustCompile(`(?i)([MGF])two`),
		regexp.MustCompile(`(?i)(FSE1020)`),
		regexp.MustCompile(`(?i) Fj(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Note_([37]|11)_Pro`),
		regexp.MustCompile(`(?i)Note_(1)_Lite`),
		regexp.MustCompile(`(?i)Figgers[_ ](F3|DragonX)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([AB][1-9]|[CD][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([AB][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([CD][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FINLUX, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:AURII[ _](?:FAME|VIVID|INSPIRE|MAGNUM|Passion|Virtuoso|RAZOR|ULTRA|Secret Lite|AMUSE[_ ]3G|FORCE|FUSION|F8[_ ]Premium|XCITE|DELIGHT|DREAM[_ ](?:MINI|One)|AMUSE_4G)|SECRET_XR?|INTENSE[ _](?:POWER|METAL_2|XT)|RAZOR_PLUS_4G|SUPER SWEET|SWEET MINI|Dream_One_8|INSPIRE_4G|S90_Q|INTENSE_METAL_4G|INTENSE (?:5|XL)|VIVID_PRO|VIVID_PREMIUM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FORCE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]VIVID(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]INSPIRE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]RAZOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RAZOR_PLUS_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DELIGHT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DREAM[_ ]MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FAME(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]AMUSE[ _]4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dream_One_8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DREAM[_ ]One(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]ULTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]AMUSE[_ ]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FUSION(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]MAGNUM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVID_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVID_PREMIUM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]XCITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SECRET_(XR?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]((?:Passion|Virtuoso|Secret Lite|F8[_ ]Premium))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE POWER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_XT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_METAL_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_METAL_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPER SWEET(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE (5|XL)`),
		regexp.MustCompile(`(?i)(S90_Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S554020|F_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly|Power Plus 5000|Power Plus 3|Photo Pro|Slimline|Cirrus (?:6|13)|Life (?:Ace|Jet|Sky|Compact 4G|Geo|Zen|Play)|(?:lineage_)?FS50[1-9]|FS51[0-8]|FS52[0-9]|FS530|FS55[134]|FS40[1-9]|FS45[1-9]|4FS06|MERIDIAN-|(?:Phoenix 2|(?:IQ[0-9]{3,}[i]?)[ _]?(?:Quad|Firebird|Quattro|Turbo|Magic)?|Tornado Slim|Android 8(?:[\d.]*);(?: [\w-]+;)? View Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ310(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ236(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?View Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slimline(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Plus 5000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Photo Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Ace(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Jet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Sky(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Geo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Zen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Buzz(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Compact 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS508|Cirrus 6`),
		regexp.MustCompile(`(?i)(?:lineage_)?FS504`),
		regexp.MustCompile(`(?i)FS518|Cirrus 13`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ237(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ238(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ240(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ255(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ270(?: Firebird)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ275(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ285(?: Turbo)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ432(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ436(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4490(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ434(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4406(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ436i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4490i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ440(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ441(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ442 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ442(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ443(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ444(?: Quattro)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ445(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ446(?: Magic)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ447(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ456(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4409 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ448(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ449(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ450(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ450[ _]Quattro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ451(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ452 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ454(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4404(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4410 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Phoenix 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4411(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4412 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4413[ _]Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4414 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4415 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4418(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4504 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tornado Slim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ([0-9]+[i]? ?(?:Quad|Firebird|Quattro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly[ _\-]?([a-z0-9_]+)/`),
		regexp.MustCompile(`(?i)Flylife[ _\-]?([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Fly[ _\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MERIDIAN-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Fondi[- _]([^;/)]+)|(T702|Q008B|Q010B|Q718B|Q902|T602B|T707G|T708B|T725B|T725B1|T907B)(?:\)| Build)`),
		regexp.MustCompile(`(?i)(T702|T602B)`),
		regexp.MustCompile(`(?i)(Q008B|Q010B|Q718B|Q902|T707G|T708B|T725B|T725B1|T907B)`),
		regexp.MustCompile(`(?i)Fondi[- _]([^;/)]+)`),
		regexp.MustCompile(`(?i)Fonos-|(?:Android 10;(?: [\w-]+;)? O3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fonos-(O\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Android 10;(?: [\w-]+;)? O3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Formuler[ _]|(?:S_TURBO_PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Formuler[ _](Z(?:8|10)(?: Pro)?|Z Alpha)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S_TURBO_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amosta ?3G5`),
		regexp.MustCompile(`(?i)Amosta ?3G5`),
		regexp.MustCompile(`(?i)(Apollo 5 Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Four[ _]?(S600|S300I|S185|K500|S61)|S62_Eco_3|S186_Sky_3|S710 Ruby)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Four[ _]?(S600|S300I|K500)`),
		regexp.MustCompile(`(?i)Four[ _]?S185`),
		regexp.MustCompile(`(?i)Four[ _]?S61`),
		regexp.MustCompile(`(?i)(?:EASYSMARTM3|EasySmart M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY ?SMART ?M([32])`),
		regexp.MustCompile(`(?i)InFocus M[0-9]+[a-z]?`),
		regexp.MustCompile(`(?i)InFocus M([0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)(L590A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FUN PLUS|FTJ17[AC]00|FTJ152[ABCD]|FTU18A00|FT141B|FT142D(?:_LTEXM)?|FT142A?|FTJ161[ABE](?:-VN)?|FTJ1[56]2E|FTJ162[BD]|FT162D|FTE161[GE]|SAKURA_FTE1|FTE171A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTJ17A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTJ17C00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTU18A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTE161E|FTJ161E`),
		regexp.MustCompile(`(?i)FT142D(?:_LTEXM)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FT142A?`),
		regexp.MustCompile(`(?i)FTJ?162D`),
		regexp.MustCompile(`(?i)(RubensTab_T11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:F-01[FHJKLM]|F-02[EFGHLK]|F-03[DEFGKHL]|F-04[EGFHKJ]|F-05[DEFJG]|F-06[EF]|F-07[DE]|F-08D|F-09[DE]|F-10D|F-[45]1A|F-41B|F-[45]2A|F-11D|F-12C|F-5[12]B|M532|FARTM933KZ|901FJ|arrows(?:RX|M03|M0[45](?:-PREMIUM)?)|801FJ|FJL2[12]|RM02|FCG01|A101FC|BZ02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-01[LM]|F-06F|F-03K|F-42A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FJL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FJL22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-52A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901FJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-41B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-06E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-07D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:F-51B|FCG01|A101FC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)801FJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-07E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-08D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-09D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-09E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-52B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-10D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-11D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-12C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-04[JF])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RM02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZ02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsRX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM04-PREMIUM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM(0[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-0[32]F|F-03G|F-04H|F-05E|F-02K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUNAI, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Fusion5|F104Bv2|F104EvII_PRO|F104EvII`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F104B)v2_PRO`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F104B)v2`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?F104EvII_PRO`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?F104EvII(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F704B|F105D|F104E)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FXT810R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QX1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G-TiDE|(?: EX10|EXTREME X9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G-TiDE[_ ](A1|S[34]|E520|Vans [89]c?|V7s)`),
		regexp.MustCompile(`(?i)E(57|60|66|72|77)`),
		regexp.MustCompile(`(?i)GTouch[_ ]|(?:Stella (?:XS?|Omega))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Stella (XS?|Omega)`),
		regexp.MustCompile(`(?i)GTouch[_ ]STELLA`),
		regexp.MustCompile(`(?i)GEOFOX[_ ]MID ?(743\+?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEOZON[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)GFIVE[_ ]|(?:PRESIDENT_GOLD_(9|10)|President Gpower 1|Stark|Gpad70[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRESIDENT_GOLD_(9|10)`),
		regexp.MustCompile(`(?i)GFIVE[_ ]President[_ ]Xhero[_ ](\d)`),
		regexp.MustCompile(`(?i)President (A97)`),
		regexp.MustCompile(`(?i)President Classic (\d)`),
		regexp.MustCompile(`(?i)President ?\(?G(\d)\)?`),
		regexp.MustCompile(`(?i)President Tango (\d)`),
		regexp.MustCompile(`(?i)GFIVE[_ ]President[_ ]Smart[_ ](A98|\d)`),
		regexp.MustCompile(`(?i)GPad(70[12])`),
		regexp.MustCompile(`(?i)(?:Android 8(?:[\d.]*);(?: [\w-]+;)? TAB5)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Quartz(T10-3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GLX (?:Aria|Dorna|Taban|Shine|Spark|ASA)|Maad\+?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maad\+`),
		regexp.MustCompile(`(?i)GLX (Aria|Taban|Shine|Spark)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLX (Dorna)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOCLEVER|QUANTUM_(?:[235]_)?[0-9]{3}|QUANTUM [0-9]{1}|QUANTUM 700N|Quantum2 500|QUANTUM_(1010N|1010M|900|II_500_N)|ARIES|INSIGNIA|ORION_|ELIPSO|LIBRA[ _]97|TERRA_7o[WL]|(?:TQ700|ORION7oL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUANTUM_(1010N|1010M|900)`),
		regexp.MustCompile(`(?i)INSIGNIA_(785_PRO|1010M|800M)`),
		regexp.MustCompile(`(?i)(ORION|ARIES|ELIPSO)[_ ](71|101|102)`),
		regexp.MustCompile(`(?i)TQ700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUANTUM_2_(1010|700|960)_Mobile`),
		regexp.MustCompile(`(?i)QUANTUM_([235])_(5[05]0)_RUGGED`),
		regexp.MustCompile(`(?i)QUANTUM_(\d+)_RUGGED_PRO`),
		regexp.MustCompile(`(?i)QUANTUM[_ ]([235])_([45]00)[_ ]LITE`),
		regexp.MustCompile(`(?i)QUANTUM[_ ]([45]00)[_ ]LITE`),
		regexp.MustCompile(`(?i)QUANTUM[ _]?([235])[ _]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)((?:QUANTUM|ARIES|INSIGNIA|ORION|ELIPSO)[ _-]?[^;/]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)TERRA_(7o[WL])`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]TAB[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)TAB ([^;/)]+) Build/GOCLEVER`),
		regexp.MustCompile(`(?i)([^;/)]+) Build/GOCLEVER`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?TAB[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)LIBRA[ _]97`),
		regexp.MustCompile(`(?i)(?:G10_EEA|CNOTE 50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GTCOMBO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Galactic[_ ](Astro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GI (?:UNI2|iTV912|Fly T2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EDU-7MT4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Garmin-Asus|Garminfone`),
		regexp.MustCompile(`(?i)Garminfone[ \-_]([^;/]*)Build`),
		regexp.MustCompile(`(?i)Garmin-Asus[ \-_]([^;/]+)Build`),
		regexp.MustCompile(`(?i)Garmin-Asus[ \-_]([^;/]+)[\)/]`),
		regexp.MustCompile(`(?i)(JT08-X1|JT10-90|JT10-81B|JT10-X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEANT[_ ](T\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Feel_7013N)`),
		regexp.MustCompile(`(?i)(GEM[0-9]+[a-z]*)`),
		regexp.MustCompile(`(?i)General_Mobile_|GM 5 Plus|GM8 go|GM[ _][568][ _]d|GM [86]|General Mobile 4G|GM6_Tur|GM 9 (?:Pro|Plus)|(?: GM 5|e-tab 20|Android 1[012];(?: [\w-]+;)? (?:G[35]01|G[35]10|G700)|Discovery (?:Air|Elite(?: Plus)?)|GM Discovery II|GM Discovery tab 8|Discovery II Mini| GM6|G300|G008|android 4([\d.]*);(?: [\w-]+;)? Discovery|e-?tab5|G512|G312)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GM[ _](\d+)[ _]d`),
		regexp.MustCompile(`(?i)GM6_Tur|GM ?6`),
		regexp.MustCompile(`(?i)GM ([58])`),
		regexp.MustCompile(`(?i)Discovery (Air|Elite(?: Plus)?)`),
		regexp.MustCompile(`(?i)Discovery(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)General[ _]Mobile[ _]4G[ _]Dual`),
		regexp.MustCompile(`(?i)e-?tab ?(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SK-Mtek GT730[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEOTEL[ _]?`),
		regexp.MustCompile(`(?i)GEOTEL[ _]?Note`),
		regexp.MustCompile(`(?i)GEOTEL[ _]AMIGO`),
		regexp.MustCompile(`(?i)(GTX-R10i Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G-Fone ?(\d{1,3})`),
		regexp.MustCompile(`(?i)GHIA|QS702|SVEGLIO[ _][QH]1|VECTOR10\.1|GTKIDS7[BVR]?|(?:A7_WF|GTA7(?:WF|PLUS)|VENUS7|TREO_TAB8G?|VECTOR_SLIM|GTAB718|GTABPND|GTABKIDS|GTVR10S|AXIS7_SLIM|AXIS7_LED)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SVEGLIO[ _]([QH]1)`),
		regexp.MustCompile(`(?i)GHIA[ _](L1)`),
		regexp.MustCompile(`(?i)VECTOR10\.1`),
		regexp.MustCompile(`(?i)GTKIDS7[ABVR]?|GTABKIDS`),
		regexp.MustCompile(`(?i)GHIA[ _]?(47458|VECTOR_3G)`),
		regexp.MustCompile(`(?i)(GTAB718)`),
		regexp.MustCompile(`(?i)GHONG(V10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GHOST G03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GSmart[ _][a-z0-9 ]+(?: Build|\))|Gigabyte-[a-z0-9]+|Simba SX1|Roma R2|Boston 4G|GSmart_Classic_Lite|Classic[_ ](?:Joy|Pro)`),
		regexp.MustCompile(`(?i)(GSmart[ _][a-z0-9 ]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Gigabyte-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Classic[ _](?:Joy|Pro)|GSmart_Classic_Lite|Boston 4G)`),
		regexp.MustCompile(`(?i)Gigaset|(?: GX290|GS80|GS1[0189]0|GS1[89]5|GS2[89]0|GS5[357]-6|GS[23]70(?:_Plus)?|E940-2795-00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gigaset QV(1030|830)`),
		regexp.MustCompile(`(?i)G(S[23]70)[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GS([23]70|1[0189]0|1[89]5|2[89]0|80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GX290)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gigaset ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Gigaset ([^;/)]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Gini[ _]|(?:SW17W13|SW17W08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gini[ _]W(7)`),
		regexp.MustCompile(`(?i)Gini[ _]n(8)`),
		regexp.MustCompile(`(?i)Gini[ _]s5Pro|SW17W13`),
		regexp.MustCompile(`(?i)Gini[ _]Tab[ _](V[78])`),
		regexp.MustCompile(`(?i)GINZZU[_ ]|((?:RS(?:7[14]|81|9[67])D)|S5002|S5021|S5230|S50[45]0|S51[24]0|RS(6[12]|9[45])D|S40[23]0|RS850[12]|RS9602)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GINZZU[_ ]?(S40[17]0|S4710|ST60[14]0|ST6120)`),
		regexp.MustCompile(`(?i)GINZZU[_ ]?(GT-(?:1050|7105|70[1-4]0|7115|7210|[WX]831|X[78]70|7810|8[01]10|X853|X890))`),
		regexp.MustCompile(`(?i)(RS6[12]D) ULTIMATE`),
		regexp.MustCompile(`(?i)(?:GINZZU[ _])?((?:RS(?:7[14]|81|9[14-7]|7)D)|S50[45]0|S5002|S5021|S5230|S51[24]0|S40[23]0|RS850[12]|RS9602|RS94D|R8 Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]?[a-z0-9]+|(?:Dream_D1|V188S?|GN[0-9]{3,4}[a-z]?)(?:[);/ ]|$)|F103(?: Pro)?(?: Build|\))|P5 mini Build|(M7 Power|F106L|F100A|F103S|F103 Pro|M6 mirror|20190620G|20190619G|20190418Q|GNP21M02|GNS2161B|GAU0820|Android 6(?:[\d.]*);(?: [\w-]+;)? (?:P8 Max|P7 Max)|Android 5(?:[\d.]*);(?: [\w-]+;)? M5 (?:mini|Plus)|Android 11;(?: [\w-]+;)? P61|WBL7519|WBL7361|20190419Q|M5 lite CDMA|GLY1620|M2mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GN810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GIONEE[_ ]MAX Pro`),
		regexp.MustCompile(`(?i)GN([0-9]{3,4}[a-z]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F106L|F100A|V188S|V188|F103S|F8 Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7 Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M([25]) ?mini`),
		regexp.MustCompile(`(?i)20190620G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S11|F205|S10) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M6 mirror(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F9 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190419Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F103( Pro)?( BUILD|\))`),
		regexp.MustCompile(`(?i) (P61)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:GIO-)?GIONEE[ _-])?Dream_D1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+).*Android`),
		regexp.MustCompile(`(?i)Android.*(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+)[ _]Pro`),
		regexp.MustCompile(`(?i)Android.*(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(GU1011C|GU8012C|GU7013C|GU730C|GU-6012B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GU8012C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GU-6012B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GU1011C|GU7013C|GU730C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Gpad_U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO Onyx|GO[0-9]{3,4}`),
		regexp.MustCompile(`(?i)GO([0-9]{3,4})`),
		regexp.MustCompile(`(?i)(?:F10_PRIME|F3Prime|F9_PLUS|TEAM_7_3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Netta 2 Pro|Netta 3\.100m|BENGAL_6|DETROIT 3|i-910)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Netta 3\.100m`),
		regexp.MustCompile(`(?i)Goly[ _-]`),
		regexp.MustCompile(`(?i)Goly[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Goly[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:GOME[_ ](?:201[678].+|C7_Note(?:_Plus)?|U9|S[17])|Fenmmy_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018X38A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018X07A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017X05A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017X82A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2016G68A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2016M25A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017M27A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017M95A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018M29A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](C7_Note(?:_Plus)?|U9|S[17])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GOME[_ ])?(Fenmmy_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexus|GoogleTV|Google Fiber|Google Pixel|Glass|CrKey[^a-z0-9]|(?:Pixel|sailfish|taimen|blueline|Chromecast(?: HD)?)(?: Build|[)])|Pixel (?:XL|C|[2-7]|[2-4] XL)|Google 2XL|PIXEL4X|G011A|AOSP on (?:bramble|HammerHead|Manta|sunfish)|Pipit|ADT-2`),
		regexp.MustCompile(`(?i)(Nexus (?:2|S|4|5X?|One))`),
		regexp.MustCompile(`(?i)(Nexus (?:6P?))`),
		regexp.MustCompile(`(?i)(Nexus (?:7|9|10))`),
		regexp.MustCompile(`(?i)(GFHD[12]00)`),
		regexp.MustCompile(`(?i)CrKey[^a-z0-9]`),
		regexp.MustCompile(`(?i)(?:Pixel|sailfish)(?: Build|[)])`),
		regexp.MustCompile(`(?i)Pixel 2 XL|taimen`),
		regexp.MustCompile(`(?i)Pixel 4a \(?5G\)?|AOSP on bramble`),
		regexp.MustCompile(`(?i)pixel ([3-7])a`),
		regexp.MustCompile(`(?i)Pixel ([67]) Pro`),
		regexp.MustCompile(`(?i)pixel ([2-7])`),
		regexp.MustCompile(`(?i)Goophone[ _]|(?:M(G492|L7[JK]2)CH|MN(4A2|8J2)ZP|MGA92ZP|MKU82ZP|MNGW2CH|MNH02CH|MNRM2CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MG492CH|MGA92ZP)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML7[JK]2CH[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MKU82ZP[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MNGW2CH[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MN4A2ZP|MNH02CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MN8J2ZP|MNRM2CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S4 MEGA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Goophone i([69])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gooweel| M5 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gooweel; (S7);`),
		regexp.MustCompile(`(?i)Gplus[ _]([ZXP]10\+?|N809|F53|S9701|FW6950|A2_Plus|S10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRADIENTE-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)GRADIENTE ([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(?:Grape[ _])?GTM-5([^;/]+) Build`),
		regexp.MustCompile(`(?i)(E101GCM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:G0[256]15D|G0245D|G0335D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G0215D|G0245D|G0335D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GO 55303)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X1_Light(?:_Lte)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1_Light(?:_Lte)?`),
		regexp.MustCompile(`(?i)Gresso[ _]|(?:REGAL R2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gresso[ _]Regal(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gretel|(?:GT6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GT6000)`),
		regexp.MustCompile(`(?i)Gretel; (A[67])`),
		regexp.MustCompile(`(?i)GroBerwert[ _]?(HD7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GR?-TB[0-9]+[a-z]*|GRUNDIG|portalmmm/2\.0 G|AFTEU(?:011|014|FF014)`),
		regexp.MustCompile(`(?i)(GR?-TB[0-9]+[a-z]*)`),
		regexp.MustCompile(`(?i)GRUNDIG ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 G([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Gtel[ _]`),
		regexp.MustCompile(`(?i)Infinity 8s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity 9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gtel[ _-]X(\d) ?plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gtel[ _-]X(\d) ?mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gtel[ _-]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(XP9800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Betacrux(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Betacrux(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H96[ _]?Max`),
		regexp.MustCompile(`(?i)(?:H96[_ ]?)?Max[ _]RK(\d{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Max X2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H96[_ ]Max[ _]V11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SpaceTab_H20)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T2000)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:H10_ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIPER MEDIA|(?:U(?:43|50|65)YQ2200GR|H32YQ2200GR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MEDIA TV (i4 Pro|i4|[46]K)`),
		regexp.MustCompile(`(?i)(U(?:43|50|65)YQ2200GR|H32YQ2200GR)`),
		regexp.MustCompile(`(?i)HKPRO,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(SMB-H8009)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)HOTREALS(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Hewlett-Packard|HP/HP|HP Chromebook|HP EliteBook 820|TouchPad/\d+\.\d+|hp-tablet|HP ?iPAQ|webOS.*P160U|HP (?:Pro )?Slate|Slate 21|HP [78]|HP 10 Plus|Compaq [7|8]|HP; [^;/)]+|cm_tenderloin`),
		regexp.MustCompile(`(?i)HP ([78][^)/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)Compaq ([78][^/;]*) Build`),
		regexp.MustCompile(`(?i)HP Slate ?(.+) Build`),
		regexp.MustCompile(`(?i)HP Slate ?([0-9]+)`),
		regexp.MustCompile(`(?i)TouchPad/(\d+\.\d+)|hp-tablet`),
		regexp.MustCompile(`(?i)HP; ([^;/)]+)`),
		regexp.MustCompile(`(?i)HP ?iPAQ ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)webOS.*(P160U)`),
		regexp.MustCompile(`(?i)HP ProBook (6560b)`),
		regexp.MustCompile(`(?i)Chromebook (11 G5|x360 11 G1 EE|13 G1|x2)`),
		regexp.MustCompile(`(?i)HTC|Sprint (?:APA|ATP)|ADR[a-z0-9]+|NexusHD2|Amaze[ _]4G(?:[);/ ]|$)|(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|\))|(Amaze[ _]4G|One ?[XELSV\+]+)(?:[);/ ]|$)|SPV E6[05]0|(One M8|One Mini 2|X525a|PG86100|PC36100|XV6975|PJ83100|2PYB2|2PS64|2PZC5|0PJA10|0PJA2|HTV33|0PM92|0PCV1|601HT|0PAJ5|HTL2[23]|HTV3[12]|2PQ93|X2-HT|EXODUS 1|ISW13HT|710C|U Ultra|2Q8L10000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2PZF1|U Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ](?:U-2u|U Play|2PZM3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]U-1[wu](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:U11 plus|(?:HTC_)?2Q4D[12]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC (?:U12\+|2Q55[13]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U(1[12]) life(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:U11 Eyes|2Q4R100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XV6975(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PG86100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PC36100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ])?(?:HTV33|601HT|2PZC100|2PZC5|U-3[uw])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_)?(?:801e|802[wdt]|PN071)`),
		regexp.MustCompile(`(?i)PJ83100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]PO582(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_?)?(?:One[ _]?Mini[ _]?2|M8MINx)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X2-HT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC 2PXH3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ISW13HT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTL22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTL23|HTV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTCButterflys901s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ])?(?:M9pw|One M9 ?PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ]M9u|0PJA2|0PJA10|HTC One M9|HTC6535LVW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)One[ _](X9|[EM]8) dual sim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire[ _]([\d\w]+) dual sim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC(?: One m7|6500LVW|PN071)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:One M8|HTC6525LVW|HTC[_ ]M8[xd]|HTC[_ ]0P6B|HTCOneM8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC ?One ?M8 ?Eye(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_)?(?:0PAJ5|M8Sx)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]E9x(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(?:One[_ ])?E9(?:pw|PLUS dual sim)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_S9u(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC6515LVW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X525a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2PQ9(?:3|10)|HTC[_ ]A9u)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2PS64|HTC6545LVW|HTC[_ ]M10h`),
		regexp.MustCompile(`(?i)(710C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)0PM92(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_)?0PCV[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC ?D160LVW(?:PP)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]D310n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]v01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)608t(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_(?:0P9O2|D610x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(0P4E[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?D620h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(?:D626ph|D200LVWPP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?(?:0P9C2|D816[xd]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?D526h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2Q8L10000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire620G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EXODUS 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC 2Q7A100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire 10 compact(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_D10i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[ _](?:10[ _]evo|M10f)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire (\d+) pro 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire (\d+) pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire 10 lifestyle(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[ _-]P715a`),
		regexp.MustCompile(`(?i)HTC[ _-]Flyer Build`),
		regexp.MustCompile(`(?i)HTC[ _-](A103) Plus`),
		regexp.MustCompile(`(?i)HTC[ _-](A103)`),
		regexp.MustCompile(`(?i)HTC[ _-]Flyer[ _\-]([\w]{1,5})`),
		regexp.MustCompile(`(?i)HTC(?:[ _-])?(?:One[ _\-]max|6600LVW|0P3P7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)USCCHTC(\d+)`),
		regexp.MustCompile(`(?i)Sprint (ATP.*) Build`),
		regexp.MustCompile(`(?i)Sprint (APA.*) Build`),
		regexp.MustCompile(`(?i)Wildfire (E2?) plus`),
		regexp.MustCompile(`(?i)HTC[ _]([^/;]+) [0-9]+(?:\.[0-9]+)+ Build`),
		regexp.MustCompile(`(?i)HTC[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)HTC[ _]([a-z0-9]+[ _\-]?(?:[a-z0-9_+\-])*)`),
		regexp.MustCompile(`(?i)(?:HTC-)?HTC(?:[-/ ])?([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)HTC;(?: )?([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Amaze[ _]4G|One ?[XELSV\+]*) Build`),
		regexp.MustCompile(`(?i)(ADR[^;/]+) Build`),
		regexp.MustCompile(`(?i)(ADR[a-z0-9]+)`),
		regexp.MustCompile(`(?i)HTV32(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HAFURY|GT20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MIX|UMAX)`),
		regexp.MustCompile(`(?i)Haier|(?:M53-52401|I6_Infinity|Titan[ _]T[135]|(?:HW-)?W(?:71[67]|757|86[07]|970)|S5 Silk|(?:HM-)?(N505|N700|G(?:152|303|353|552|70[01])?-FL|HM-(?:I559|N50[15]|I560|G553|N70[01])-FL|HR-V101|G(?:303)?-W|I(?:557)?-FL)|(?:PAD[ _](?:D71|G781|d85))|A2_Lite_NFC|A4_Lite|HL810G|Andromax C46B2H|android 8([\d.]*);(?: [\w-]+;)? E13)(?:[);/ ]|$)|Android [67](?:[\d.]*);(?: [\w-]+;)? P2(?: Build|[;)])`),
		regexp.MustCompile(`(?i) E13(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) P2(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:HM-)?(G(?:152|353|552|70[01])|G(?:303)|I(?:557))`),
		regexp.MustCompile(`(?i)(Titan[_ ]T[135]|I6_Infinity)`),
		regexp.MustCompile(`(?i)(?:HW-)?W(71[67]|757|86[07]|970)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAD[ -_](D71|G781|d85)`),
		regexp.MustCompile(`(?i)(HL810G|HR-V101|M53-52401)`),
		regexp.MustCompile(`(?i)Haier[ _\-](H[WT]-[^/;]+) Build`),
		regexp.MustCompile(`(?i)Haier[ _\-](H[WT]-[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)Haier[ _\-](sy[0-9]+)`),
		regexp.MustCompile(`(?i)Haier[ _\-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Haipai ?noble S6`),
		regexp.MustCompile(`(?i)Hamlet[ _]|XZPAD412LTE`),
		regexp.MustCompile(`(?i)(?:Hamlet[ _])?XZPAD(412W|412LTE)`),
		regexp.MustCompile(`(?i)(?:Hammer[_ ](?:Construction|Explorer[_ ](?:Plus|Pro)|FORCE|Blade_3|Blade2_PRO|Blade_5G|IRON_[23](?:[_ ]LTE)?|IRON|Explorer|ENERGY(?:_18x9|_2_2022|_2)?|Titan 2|Active2?(?:_LTE)?)|Iron[_ ]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer[_ ]Construction`),
		regexp.MustCompile(`(?i)Hammer[_ ]Explorer[_ ]Plus`),
		regexp.MustCompile(`(?i)Hammer[_ ]Explorer[_ ]Pro`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY_2_2022`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY[ _](18x9|3G|\d+)`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY`),
		regexp.MustCompile(`(?i)Hammer[_ ]FORCE`),
		regexp.MustCompile(`(?i)(?:Hammer[ _])?Iron[ _]([23])`),
		regexp.MustCompile(`(?i)Hammer[ _]Iron`),
		regexp.MustCompile(`(?i)Hammer[ _]Explorer`),
		regexp.MustCompile(`(?i)Hammer Active(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer_Active2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer_Active2_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ALGIZ_RT8|NAUTIZ_X2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NAUTIZ_X2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ALGIZ_RT8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HSG[0-9]{4})|SN97T41W|SN1AT71W\(B\)|SN70T51A|SN70T31?|T7-QC`),
		regexp.MustCompile(`(?i)(HSG[0-9]{4})`),
		regexp.MustCompile(`(?i)SN1AT71W\(B\)`),
		regexp.MustCompile(`(?i)ODROID[-]?(C2|[NU]2|XU[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HARPER[_ ])?(ABX-332|ABX-[12]10|40F660TS|24R490TS|65U660TS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HTY-\d{2}\w+-(?:S2|HC22)|HTY-32HDR06G|HTY-43F06B-VZ|HTY-24H06W-VZ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hasee ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Hasee ([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DVB-ATV100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hpad([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Helio (S60|S5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HB_X7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HTB801)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Boost(?:[ _](?:Hypa|Max|Ultra))?(?: Build|[;)])|HMR(?:5012|5450)|Crusader|(?:VHIX-)?VHIX-\w+(?:-[A-Z])?|43FSY112X[cd]|32HSY119X|39HSY111X|55USY151X|50USY151X|65USY151X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost[ _](Hypa|Max|Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMR5012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HMR5450|Crusader)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VHIX-)?VHIX-(\w+)`),
		regexp.MustCompile(`(?i)(32HSY119X|39HSY111X|55USY151X|43FSY112X[cd]|50USY151X|65USY151X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Hebe|Hera)-BD00|(?:ALH-BD00|MGZ-BD00|FIO-BD00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLV-T([a-z0-9]+)`),
		regexp.MustCompile(`(?i)HIHI-(4[01])KH-TAB-0?1`),
		regexp.MustCompile(`(?i)HIKING[_ ]|(?:HK-MH501|Fun5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIKING[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)HK-(MH501)`),
		regexp.MustCompile(`(?i) HIMAX[_ ]`),
		regexp.MustCompile(`(?i)POLYMER( X)?`),
		regexp.MustCompile(`(?i)HIMAX[_ ]PURE[_ ]3S`),
		regexp.MustCompile(`(?i)(32Y_STV-R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ELT070[46]H|ELT0802H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIGHSCREEN|(Easy[- ]Power(?:[- ]Pro)?|Pure[_ ](?:Power|F)|Power Ice(?: Max)?|Easy[_ ]([SFL]|XL)(?:_Pro)?|Razar_Pro|Power Rage(?: Evo)?|Zera-S-Power|Zera[ _][UFS]|Power[ _]?Five[ _]?(?:Pro|Evo|Max|Max(?:Lite|2))|Power(?:Four|Five)|BOOST II(?:se)?|Fest(?:XL)?(?:-Pro)?|Tasty|Boost3|Boost 3(?: Pro)? SE|Expanse|Explosion|Hercules|Alpha Rage|VergeM|Ice2|Prime [LS]|Spade|Spark 2|Alpha GT[RX]|Wallet|Thunder|Razar|COSMO DUO|Prime Mini SE| Bay|Omega Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Power Ice(?:[ ](?:Max|Evo))?|Power Rage(?: Evo)?|Zera[ _][UFS]|Alpha GT[RX]|Wallet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFivePro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFiveMaxLite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFiveMax2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Five Evo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Five Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power[_ ]?Five(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spade(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spark 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FestXL-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FestXL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fest-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fest(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) Bay(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFour(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure[_ ]Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure[ _]F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Razar_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Razar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Easy[_ ]([SLF]|XL)[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Easy[_ ]([SFL]|XL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HIGHSCREEN )?Easy[- ]Power[- ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HIGHSCREEN )?Easy-Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST IIse(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost 3 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost 3 Pro SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zera-S-Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tasty(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VergeM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WinWin(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Expanse(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hercules(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alpha Rage(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ice2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime Mini SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime ([LS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_|10DTB12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_9DTB39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10DTB12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/]+) Build|Hisense [^);/]+|HISENSE; |HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9\-]*|HNR55[01]T|E270BSA|HWCD100E|HITV300C|HITV205N|M470BS[AE]|EG98|E2281|EG680|I46D1G|HAT4KDTV|HITV10[12]C|HLTE([237]00T|229T|200M|203T|202N|21[023567][TM]|22[67]T|22[13]E|230E|103E|310[TM]|31[16]T|500T|501N|510[TM]|7[23]0T|M800)|KS(?:907|964)|U972|U601S Pro|U972_Pro|HNR320T|HiSmart [24]K ATV4|HiSmartTV A4|HLTE556N`),
		regexp.MustCompile(`(?i)HITV10[12]C`),
		regexp.MustCompile(`(?i)M470BS[AE]`),
		regexp.MustCompile(`(?i)E50s \d+GB`),
		regexp.MustCompile(`(?i)HLTE221E|E MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE200T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE210T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE215T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE213T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE311T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE216[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE316T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE226T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F8 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE217T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE227T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HNR550T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HNR551T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE310[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE510[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE500T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HLTE230E|Infinity H40 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE720T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWCD100E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HLTE300T|HLTE200M|HLTE212T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HITV300C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E260T\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U972|U601S)[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity H([56]0) ZOOM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity E30SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9\-]*|U972)`),
		regexp.MustCompile(`(?i)(HAT4KDTV|HiSmart [24]K ATV4|HiSmartTV A4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HITV205N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KS964(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense (U3) 2021(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+) Pro(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+) Plus(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^/]+)/`),
		regexp.MustCompile(`(?i)HITACHI, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(Amaze[ _](?:S2_4G|S[56] 4G|S1|S[56](?: Plus)?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HOFFMANN|Neo[_ ]A[1379]00|X-Go|X-Play|X-Pro|X_Ultra|X-Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neo[_ ](A[1379]00)`),
		regexp.MustCompile(`(?i)HOFFMANN[ _]X[-_ ](Prime|Twist|Max)`),
		regexp.MustCompile(`(?i)X[-_](Play|Go|Pro|Ultra|Max)`),
		regexp.MustCompile(`(?i)(?:Ideal (?:10S|Tab [79]|8S)|ALFA(?:10T[BX]|7LM)|ALFA[_ ](?:10R[CX]|10BS|10TM?|8T|10MB|10YC|7RS|[78]M?RC|7M|8S[TL]|8RX|8MG)|HT[ _](?:7RT|8MZ))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ideal (?:10S|Tab 9|8S))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALFA[_ ]?(10R[CX]|10YC|10BS|10T[BMX]?|7RS|[78]M?RC|7L?M|10MB|8T|8S[TL]|8RX|8MG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ideal Tab 7 Ips( 3G)?`),
		regexp.MustCompile(`(?i)HT[ _](7RT|8MZ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Homtom|(?:HT[0-9]{1,2}(?: ?Pro)?|HT3_Pro|P30 Pro|android 8([\d.]*);(?: [\w-]+;)? S17)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Homtom[_ ])?HT ?([0-9]{1,2})[ _]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Homtom[_ ])?HT ?([0-9]{1,2}?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Homtom ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:EDA5[01]K?|EDA[47]0|EDA71_G|EDA5[12]|CK65|CT[46]0|CN80|EDA61K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EDA5[01]K?|EDA[47]0|EDA5[12]|EDA61K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CK65|CT[46]0|CN80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001)|MZ104|HZ0010J?|HZ1012|YK_P30(?:_EEA)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001|MZ104)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HZ0010J?|HZ1012)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YK_P30)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Horizont[_ ])?(32LE7011D|43LE7022D|32LE7052D|65LE7053D)`),
		regexp.MustCompile(`(?i)HOSIN[ _-]`),
		regexp.MustCompile(`(?i)HOSIN[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)HOSIN[ _-]([^;/]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:HPP-(GS1|L55B)|VLE5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Venus[_ ](?:X[12]|X1[0245679]|R8 PLUS|R[236-9]|R1[028]|X16-1)|Cosmos[ _](?:V8_lite|V19_Plus|V2[0-3]|U2?|V1[359]|V[45689]|V8-2)|Pearl K[123]|Magic Q8|Magic 5 Plus|Magic (?:[89]|1[13])|Hot[_ ]6|Symbol (?:M1|X|Max|R60|Pro|S4)|Symbol|Cyber [78]|Cyber 9 Pro|Cosmos|W10 Pro|TAB R6 Pro|T5 Pro| M5i)(?:[);/ ]|$)|(?:Android 8(?:[\d.]*);(?: [\w-]+;)? M5 Plus|Android 12;(?: [\w-]+;)? W10)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Cosmos[ _]V8_lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hot[_ ]6?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus R8 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus[_ ]X16(?:-1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus[_ ](X[12]|X1[0245679]|R[236-9]|R1[028])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cyber (\d*) Pro`),
		regexp.MustCompile(`(?i)Cyber (\d*)`),
		regexp.MustCompile(`(?i)Symbol (S4|M1)`),
		regexp.MustCompile(`(?i)(W10|T5) Pro`),
		regexp.MustCompile(`(?i) W10?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) M5i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cosmos[ _](?:V19_Plus|V2[0-3]|U2?|V1[359]|V[45689])|Pearl K[123](?: Prime)?|Magic Q8|Magic 5 Plus|Magic (?:[89]|1[13])|Symbol (?:X|Max)|Cosmos|M5 Plus)(?:-2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HT-705XS|705-G Go|1001-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HT-705XS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(1001-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(705-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huadoo[ _]|(?: HG11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huadoo[ _](HG0[46]|HG11|V[34])`),
		regexp.MustCompile(`(?i) HG11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huagan[ _]`),
		regexp.MustCompile(`(?i)Huagan[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)KHATAR H-(?:10 mini|20 PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KHATAR H-10 mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KHATAR H-20 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HW-)?(?:Huawei|MediaPad T1|Ultym5|Ideos|Honor[ _]?|(?:(?:AGS|AGS2|ALE|ALP|AMN|ANA|ANE|ARE|ARS|ASK|ATH|ATU|AUM|BAC|BAH[234]?|BG2|BGO|B[ZK]K|BKL|BL[ALN]|BND|BTV|CA[GMNZ]|CH[CM]|CHE[12]?|CLT|CMR|COL|COR|CPN|CRO|CRR|CUN|DIG|DLI|DRA|DUA|DUB|DUK|EDI|ELE|EML|EVA|EVR|FDR|FIG|FLA|FRD|FRL|GEM|GRA|HDN|HLK|HMA|Hol|HRY|HWI|H[36]0|INE|JAT|JEF|JDN|JDN2|JKM|JMM|JSN|KII|KIW|KNT|KOB|KSA|LDN|LEO|LIO|LLD|LND|LON|LRA|LUA|LY[AO]|MAR|MHA|MRD|MYA|NCE|NEN|NEM|NEO|NXT|PAR|PCT|PIC|PLE|PLK|POT|PPA|PRA|RIO|RNE|RVL|SCC|SCL|SCM|SEA|SHT|SLA|SNE|SPN|STF|STK|TAG|TIT|TNY|TRT|VCE|VEN|VIE|VKY|VNS|VOG|VRD|VTR|WAS|YAL|G(?:527|620S|621|630|735)|Y(?:221|330|550|6[23]5))-(?:[A-Z]{0,2}[0-9]{1,4}[A-Z]{0,3}?)|H1711|U(?:8230|8500|8661|8665|8667|8800|8818|8860|9200|9508))(?:[);/ ]|$))|hi6210sft|PE-(UL00|TL[12]0|TL00M)|T1-(A21?[Lw]|A2[23]L|701u|823L)|G7-(?:L01|TL00)|HW-01K|JNY-(LX[12]|AL10)|OXF-AN[01]0|TAS-(A[LN]00|L29|TL00)|WLZ-(AL10|AN00)|YOK-AN[10]0|NIC-LX1A|MRX-(AN19|AL[01]9|W[0-3]9)|CDY-(?:[AT]N00|AN[29][05]|NX9[AB]|TN[29]0)|GLK-(?:[AT]L00|LX1U)|JER-(?:[AT]N20|[AT]N10)|ELS-(?:[AT]N[10]0|NX9|N[23]9|N04)|AKA-(AL10|L29)|MON-(W|AL)19|BMH-(?:TN10|AN[12]0)|AQM-([AT]L[01]0|LX1)|MOA-([AT]L[02]0|LX9N)|NTS-AL00|ART-(?:[AT]L00[xm]|L29N?|L28)|MED-(?:[AT]L00|LX[29]N?|AL20)|EBG-(?:AN[01]0|TN00|N19)|ANA-(?:[AT]N00|NX9)|BZ[AK]-W00|BZT-(W09|AL[01]0)|HDL-(AL09|W09)|HWV3[123]|HW-02L|TEL-[AT]N(?:00a?|10)|KKG-AN[07]0|MXW-[AT]N00|JKM-AL00[ab]|TAH-(?:N29|AN00)m?|C8817D|T1-821W|d-01[JKH]|d-02[HK]|KRJ-(?:W09|AN00)|HWT31|Y320-U10|Y541-U02|VAT-L19|70[14]HW|60[58]HW|NOH-(?:NX9|AN0[01]|AN50|AL[01]0)|TNNH?-AN00|LIO-(?:[TA]L00|[LN]29|AN00)|KOB2K-L09|KOB2-(?:AL00|[LW]09|L03)|AGS3-(?:[WL]09|AL0[09]|W00[DE])|DNN-LX9|NEY-NX9|LON-AL00|HLK-L41|503HW|AGR-(?:[LW]09|AL09)|PPA-LX[12]|ANG-(?:AN00|LX[12])|NOP-AN00|ALA-AN70|DVC-[AT]N[02]0|302HW|Nexus 6P|DBY-W09|WKG-(?:LX9|[AT]N00)|JSC-(?:AN00|AL50)|OCE-A[NL][015]0|NZA-AL00|BRQ-A[LN]00|BZC-(?:AL|W)00|NEN-L(?:X1|22)|KOZ-AL[04]0|NTH-(?:AN00|NX9)|MRR-W[23]9|WGR-(?:W[10]9|AN19)|TET-AN[10]0|SCMR-(?:W09|AL09)|OXP-AN00|HJC-(?:AN90|LX9)|CDL-AN50|CND-AN00|NTN-(?:LX[13]|AN20|L22)|RNA-[AT]N00|CHL-(?:A[LN]00|AL60)|ELZ-AN[012]0|NAM-(?:LX9|AL00)|JLH-AN00|JAD-(?:AL[0568]0|LX9)|AGS5-(?:L09|W09)|AGS3K-(?:W20|[WL]0[09])|AGRK-[WL]09|MT2L03|LSA-AN00|KJR-W09|TET-A[NL][05]0|TYH601M|RTE-AL00|BAL-(?:AL00|L49)|BZI-(?:AL00|W00)|BZT3-(?:AL00|W09)|BZD-(?:W00|AL00)|MLD-AL[01]0|AGM3-(?:W09|AL09)HN|ABR-(?:AL[0689]0|LX9)|GIA-AN00|LEO-DLXXE?|BZA-L00|MGI-AN00|CMA-(?:LX[123]|AN[04]0)|NEW-AN90|KRJ2-(?:W09|AN00)|BRT-(?:W09|AN09)|ANY-(?:[LN]X1|LX[23]|AN00)|JLN-(?:LX[13]|AL00)|LGE-(?:NX[19]|AN[012]0)|TNA-AN00|TFY-(?:LX[123]|AN[04]0)|DIO-AN00|BZW-AL[01]0|MOGOLIA|CM990|MGA-(?:AL[04]0|LX[39])|60[56]HW|Peppa-(?:L2[23]B|L0[23]B)|KANT-\d{3}[BCS]?|Kobe3-L09|FNE-(?:NX9|AN00)|HPB-AN00|Mate ?(?:[34]0 RS|Xs|30)|Y530|SDY-AN00|EC6108V[89]|CTR-(?:LX[123]|AL00)|VNE-(?:LX[123]|N41|AN[04]0)|HMW-W09|GLA-(?:LX[13]|AL00)|HEY-W09|GOT-(?:AL09|W[02]9)|PAL-(?:AL00|LX9)|PAN-L29|NNH-AN00|P Smart S|NCO-(?:LX[13]|AL00)|DCO-(?:AL00|LX9)|CET-(?:AL[06]0|LX9)|ADT-AN00|RMO-(?:AN00|NX[13])|RKY-(?:AN00|LX[123])|M300-L09|EVE-LX9N?|BNE-(?:LX1|AL00)|dtab01|BZT4-W19|ROD-W09|ANP-AN00|WGRR-W09|HN3-U01|Holly-U19|BLM-00|ANN-AN00|VNA-(?:LX[23]|L29)|CRT-(?:NX1|LX[123]|AN00)|AGM-W09HN|PGT-(?:AN[12]0|N19)|GLL-AL01|MNA-(?:LX9|AL00)|LNA-(?:AL00|LX9)|ALT-L29|MAO-LX9N?|Enjoy 20 SE|ANB-AN00|STG-(?:AL00|LX1)|LTK-LX3|GOA-(?:LX9|AL80)|nova 6 5G| Angela-L|DBR-W09|WOD-LX1|REP-AN00|WDY-LX1|FOA-LX9|ALI-AN00|DBY2-(?:W09|L09)|REA-NX9`),
		regexp.MustCompile(`(?i)POT-[TA]L00a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z100-UL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y320-(?:U10|T00|U05)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y330-U05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y541-U02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8818(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G527-U081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G620S-L0[13]|C8817D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G630-U251(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G7-(?:L01|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P7-L(?:10|07)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6 ?S-U06`),
		regexp.MustCompile(`(?i)G730-C00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H1711(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y221-U(?:[12]2|[0345]3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y550-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y560-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huawei g700(?:-(?:U[012]0|T0[01]))?`),
		regexp.MustCompile(`(?i)ART-[AT]L00[xm](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MED-(?:[AT]L00|AL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG-[ACT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG-(?:L0[13]|L32|L13|L2[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NCE-(AL[10]0|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-(?:TL10|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SLA-(?:AL00|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIG-(?:[AT]L[10]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TRT-AL00[A]?|TRT-TL10A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LDN-(?:AL[12]0|TL[02]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLA-AL[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-[AT]L10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRD-[TA]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DVC-[AT]N20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DVC-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PPA-AL20|Enjoy 20 SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FRL-[AT]N00`),
		regexp.MustCompile(`(?i)MLD-AL[01]0`),
		regexp.MustCompile(`(?i)U8665(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MED-LX9N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G735-L(?:03|12|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHC-U(?:0[13]|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?G621-TL00M?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KII-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLL-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-L0[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-[UT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MNA-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)LNA-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)JAD-(?:AL[0568]0|LX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ABR-(?:AL[08]0|LX9)`),
		regexp.MustCompile(`(?i)ABR-AL[69]0`),
		regexp.MustCompile(`(?i)BAL-(?:AL00|L49)`),
		regexp.MustCompile(`(?i)U8860(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COL-(?:AL[01]0|TL[01]0|L29|L10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HRY-(?:[AT]L00[A]?|LX[12]|LX1MEB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HRY-LX1T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9508(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YAL-(?:L21|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LRA-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HRY-AL00T[a]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YAL-(L41|AL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MAR-LX1H|YAL-AL50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EBG-[AT]N00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EBG-AN10|EBG-N19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CDY-(?:AN9[05]|NX9A|TN90)|Honor 30S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LRA-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MXW-[AT]N00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BMH-(?:AN[12]0|TN10)|Honor 30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?H30-(?:C00|L01M?|L02|U10|T00|T10)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hol-U19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G750-T01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?SCL-(?:AL00|CL00|TL00H?)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CHM-U01(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Honor 4c Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CHE2?-[UT]L00[HM]?|CHE1-CL[12]0|CHE2-L(?:1[12]|23)|Che1-L04|CHE-TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CUN-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CAM-(?:AL00|TL00H|TL00)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-(?:AL10|L51|UL10|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-(?:L22|TL00H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?KIW-(?:AL10|TL00H|[TC]L00|L2[1-4]|UL00)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTH-(?:NX9|AN00)`),
		regexp.MustCompile(`(?i)JLH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTN-(?:LX[13]|L22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNA-[AT]N00`),
		regexp.MustCompile(`(?i)((?:Honor_|HW-)?H60-L(?:01|02|03|04|11|12)(?:_TD)?|HW-H60-J1|MOGOLIA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-TL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PE-(UL00|TL[12]0|TL00M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?DLI-(?:AL10|L[24]2|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L21HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JMM-L22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?BLN-(?:L2[124]|AL[1-4]0|TL[01]0(?:[);/ ]|$))`),
		regexp.MustCompile(`(?i)(?:Honor[_]?|HW-)?PLK-(?:AL10|CL00|TL00|TL01H?|UL00|L01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUM-(?:AL[20]0|L33[A]?|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUM-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?(?:LND-(?:AL[34]0|L29|TL[34]0)|AUM-L41)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATH-(?:[CAU]L00|TL00H?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?DUA-(?:L22|LX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?BND-(?:AL[01]0|TL10|L2[14]|L31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FRD-(?:AL[01]0|L0[249]|L1[49]|DL00)|VAT-L19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRA-(?:AL00X|AL00|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUK-(?:L09|TL30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEN-L22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JAT-L(29|X[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JAT-L41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKK-(?:AL[10]0|L21|L22|LX2|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KSA-(LX[239]|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JSN-L(?:2[123]|42)|JSN-[TA]L00[a]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARE-(?:AL[10]0|L22(?:HN)?|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STF-(?:AL[10]0|L09S?|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOA-LX9N|Honor 9A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AKA-L29|Honor 9C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LLD-(?:AL[01]0|L[23]1|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LLD-AL[23]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUA-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLK-AL00a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLK-(?:AL10|L4[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAM-UL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Holly-U19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTS-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNY-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGE-(?:AN10|NX9)`),
		regexp.MustCompile(`(?i)PGT-(?:AN10|N19)`),
		regexp.MustCompile(`(?i)RVL-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EDI-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VKY-TL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOG-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-(?:[AT]N00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-NX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COR-(?:AL[01]0|L29|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASK-AL(00x|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMA-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KSA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NNH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNNH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHM-[CUT]L00[HM]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AKA-AL10|Honor Play 4T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OXP-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RKY-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RKY-LX[123]`),
		regexp.MustCompile(`(?i)(?:NZA-AL00?|KOZ-AL40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHL-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMA-AN40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHL-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUA-[TA]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HJC-AN90(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KOZ-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HJC-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JAT-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOA-(?:AL[02]0|TL00))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKL-(?:AL00|AL20|AL30|L09|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCT-[TA]L10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOK-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KNT-(?:AL[12]0|[TU]L10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUK-AL20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JMM-[AT]L[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKL-L04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCT-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OXF-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OXF-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?SCL-L(0[1-4]|21|32)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?LYO-L[02]1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?LYO-L02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTN-AN20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TEL-(?:AN(?:00a?|10)|TN00)|Honor X10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Honor X10 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMA-LX[123]`),
		regexp.MustCompile(`(?i)TFY-LX[123]`),
		regexp.MustCompile(`(?i)CRT-LX[123]`),
		regexp.MustCompile(`(?i)VNE-LX[123]`),
		regexp.MustCompile(`(?i)WDY-LX[123]`),
		regexp.MustCompile(`(?i)(?:KKG-AN00|Honor X10 Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DNN-LX9|Honor X10 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANY-(?:NX1)`),
		regexp.MustCompile(`(?i)ANY-(?:LX[23])`),
		regexp.MustCompile(`(?i)VNA-LX[23]`),
		regexp.MustCompile(`(?i)ALA-AN70(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IDEOS[_ ]X5[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNN-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TAH-(?:N29|AN00)m|Mate Xs)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAL-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)TET-(?:A[NL]00|AN10)`),
		regexp.MustCompile(`(?i)ALP-(?:[TA]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNE-(?:AL00|L(?:01|03|21|23))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLA-(?:A09|L[02]9|[TA]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMA-(?:[AT]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SNE-(?:AL00|LX[0-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LYA-(?:AL[01]0|L[02]9|L0C|TL00)|PAN-L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LYA-AL00P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVR-(?:[TA]L00|L29|N29|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAS-([AT]L00|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAS-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LIO-AN00P|Mate30 RS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPN-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-(?:[TA]L00|L[02]9|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-(?:N29|TN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-AN00m(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOH-(?:NX9|AN0[01]|AN50|AL[01]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOP-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mate 40 RS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OCE-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OCE-(?:A[NL]50|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DCO-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)CET-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)NXT-(?:AL10|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MHA-(?:L[02]9|[AT]L00)|M300-L09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLL-L23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LON-(?:AL00(?:-PD)?|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRR-(?:L09|UL[20]0|CL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BND-L34(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CAZ-(?:AL[01]0|TL[12]0)|CAN-L[01][1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:608HW|PRA-LX[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-L1[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PIC-(?:[AT]L00|LX9)|HWV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704HW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-(?:L0[13]|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-(?:AL00|L2[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNE-L[02]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWI-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAR-(?:[AT]L00|LX[19]|LX1M|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANE-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INE-(?:AL00|LX[12]r|LX[12]|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCE-(L22|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAR-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEA-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLK-(?:[AT]L00|LX1U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPN-TL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WLZ-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WLZ-AN00|nova 6 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JNY-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JEF-(?:[AT]N00|[AT]N20|NX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JER-(?:[AT]N10|[AT]N20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CDY-(?:[AT]N00|NX9B|[AT]N20)|CDL-AN50|CND-AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOA-(?:LX9|AL80)`),
		regexp.MustCompile(`(?i)JNY-LX2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ANG-LX[12]|Angela-(?:L2[12]B|L02B))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEN-L(?:X[13]|22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANG-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BRQ-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BRQ-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAM-(?:AL00|LX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RTE-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JLN-(?:AL00|LX[13])`),
		regexp.MustCompile(`(?i)GLA-(?:LX[13]|AL00)`),
		regexp.MustCompile(`(?i)NCO-(?:AL00|LX[13])`),
		regexp.MustCompile(`(?i)BNE-(?:LX1|AL00)`),
		regexp.MustCompile(`(?i)DIG-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WAS-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WKG-[AT]N00`),
		regexp.MustCompile(`(?i)WKG-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MGA-LX[39]`),
		regexp.MustCompile(`(?i)CTR-LX[123]`),
		regexp.MustCompile(`(?i)FIG-L(?:A1|X[123]|11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-(?:LX(?:[13]|1T|2J|1AF)|AL00|L01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-LX1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PPA-LX[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P Smart S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VTR-(?:L[02]9|AL00|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WAS-(?:L(?:X1|X1A|X2|X2J|X3|03T)|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VKY-(?:AL00|L09|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EML-(?:[TA]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ANE-(?:LX[123]|LX2J|TL00)|HWV32)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CLT-(?:AL0[01]|TL0[01]|L0J|L(?:04|[02]9))l?|HW-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ELE-L(?:04|09|29)|ELE-[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MAR-(?:LX(?:1[BM]|2B|[13]Am?|2J?|3BM)|TL00|L21B|L21MEB)|NIC-LX1A|HWV33)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VOG-(?:L(?:04|09|29)|TL00|AL10)|HW-02L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-LX4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JNY-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L29N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ELS-(?:[AT]N00|NX9|N04)|NEY-NX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELS-(?:AN10|N[23]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRA-(?:L09|[TU]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HUAWEI P8max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRA-UL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ALE-L(?:02|21|23)|ALE-[TUC]L00|503HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PRA-L(?:A1|X[12])|hi6210sft)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVA-(?:AL[10]0|L[012]9|[TCD]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-L(?:[23]1|[26]2|53|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-L52(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SLA-L(?:02|03|22|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L(?:03|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIE-(?:AL10|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-TL[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATH-UL0[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U(8230|8661|8667)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARS-([AT]L00|L22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRO-(?:L[02]2|U00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAG-L[02]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUA-(U22|L2[12]|U03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-(?:L(?:02|03|2[23])|U29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-L(?:01|03|21|23|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMN-LX[1239](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-LX5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRO-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAG-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-(?:LX2|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-L13(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUN-(?:L(?:0[123]|2[123]|33)|U29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SCC-U21|SCL-U31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-L11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-(L41|AL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-L(?:11|21|22|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRD-L(?:X1[NF]?|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-L(?:31|42)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIT-(?:AL00|L01|U02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M[ER]D-LX2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y625-U03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y635-L0[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y635-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAM-L(?:03|21|23|32)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TRT-LX[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LDN-L(?:01|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HUAWEI[ _]?)?DUB-(?:LX[13]|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LDN-(?:AL00|L21)|TRT-TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LDN-(?:LX2|TL10)|TRT-(?:L21A|L53))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-(?:LX2|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-AL00a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-AL20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PPA-LX3|Peppa-(?:L2[23]B|L0[23]B))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L28(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLA-(LX[123]|AL20|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JKM-(?:[TA]L00[ab]?|LX[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-(L2[12]|LX3)|LTK-LX3`),
		regexp.MustCompile(`(?i)FRL-L2[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)302HW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NMO-L31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CM990(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultym5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G6-L11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexus 6P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWT31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HDN-[LW]09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH4-(?:L09|AL10)`),
		regexp.MustCompile(`(?i)BAH4-W(?:29|[03]9)`),
		regexp.MustCompile(`(?i)BAH3-(?:AL00|[LW]09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH3-W59(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH3-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DB[YR]-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOT-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOT-W[02]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCMR-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCMR-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-(L09|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS5-L09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS5-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMW-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HDL-(?:W09|AL09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JDN-(?:AL00|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KRJ-AN00|Honor V6 5G`),
		regexp.MustCompile(`(?i)KJR-W09|KRJ-W09|Honor V6 Wi-Fi`),
		regexp.MustCompile(`(?i)AGS3-AL09HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W09HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEY-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MON-(W|AL)19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZA-W00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZA-L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZC-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZC-W00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZW-AL[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZT4-W19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2-80[123]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2-A01L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2-801W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-AL[01]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-W[0-3]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRR-W[23]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-AN19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WGRR?-W[10]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WGR-AN19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMR-(?:AL[01]9|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMR-W19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCM-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEM-70[1-3]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JDN2-(:?[WL]09|AL[50]0|AL50HN)|BAH2-(?:AL[01]0|L09|W[01]9))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHT-(?:AL|W)09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VRD-(?:(AL|W)09|AL10|W10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCM-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BTV-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BAH-W09|CPN-(?:L|W)09|CPN-AL00|701HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH-(?:L09|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AGS2-AL00|JDN2-(?:AL00|W09))HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS2-(?:[LW]09|W09HN|W19|L03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KOB2-(?:[LW]09|L03)|Kobe3-L09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGR-[LW]09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS-(?:L0[39]|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KOB-(?:L|W)09|BZK-[LW]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BG2-(?:U0[13]|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BGO-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BGO-DL09|PLE-70[13]L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JDN-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FDR-(A01[LW]|A03L)|60[56]HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T1-(?:A21[LW]|A2[23]L)|MediaPad T1 10 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1-701u(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T1-82(?:3L|1W)|MediaPad T1 8.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3K-W0[90]`),
		regexp.MustCompile(`(?i)AGS2-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W00[DE](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZT-(?:AL[01]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZT-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:d-01J|d-02[HK])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:dtab)?(d-01[KH]|01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO-BX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO-DLXXE?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLM-00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EC6108V(8|9)`),
		regexp.MustCompile(`(?i)KANT-350[BC]`),
		regexp.MustCompile(`(?i)(MediaPad[^/;]*) Build`),
		regexp.MustCompile(`(?i)Ideos([^;/]*) Build`),
		regexp.MustCompile(`(?i)(?:HUAWEI )?MT([0-9]+)`),
		regexp.MustCompile(`(?i)Huawei[ _\-]?([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:HW-)?Huawei(?:/1\.0/0?(?:Huawei))?[_\- /]?([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)Huawei; ([a-z0-9 \-]+)`),
		regexp.MustCompile(`(?i)Hugerock|T101_2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hugerock[_ ](T70H)`),
		regexp.MustCompile(`(?i)(AIVI-N3000RV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hurricane[ _]|(?:Flame_Plus|Glaze|Cobra|Ridge Plus|Rush Plus|DZIRE|Android 7(?:[\d.]*);(?: [\w-]+;)? Beam|Vulcan|SAGE|Iris Plus 2021|VortexPlus|Excite|Flint|Panther|Slam|Epic)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hurricane[ _]IGNITE`),
		regexp.MustCompile(`(?i)Hurricane[ _]Bolt`),
		regexp.MustCompile(`(?i)Hurricane[ _]VORTEX`),
		regexp.MustCompile(`(?i)Hurricane[ _]GIGA`),
		regexp.MustCompile(`(?i)(?:VULKANO|ST-810)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ST-810)`),
		regexp.MustCompile(`(?i)(?:PTC760|PNC550)`),
		regexp.MustCompile(`(?i)(PTC760|PNC550)`),
		regexp.MustCompile(`(?i)Hyundai|(?:Ultra (?:Active|Air|Charm|Dream|Energy|Latitude|Link|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)|Ultra_Vision_Plus|E(?:475|504|603)|G(?:24027|2552[34])K|W25042L|HP554O|Seoul (ECO|S8|MIX|5 Plus|9)|L503F Plus|HT0701L16|HT0703K16|HT0704K08|HT100(?:4LI?16|2W32|3X16|2W16)|Koral_8W2|HT0701W16|Eternity[_ ](?:G25|H6[578])|HYMI 5S Plus|7GB1|7WD1|(?:Android 9;(?: [\w-]+;)? [EL]553)|10LB1|L601F|10WB1|E601F|E503F|E465GO|H-LED(?:55GU7003|55EU1311|24BS5000|40GS5003|43FS5003|32FS5005)|H-DMP100|HT070[34]W08|Koral 7W4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultra[_ ]Vision[_ ]Plus`),
		regexp.MustCompile(`(?i)Ultra (Active|Air|Charm|Dream|Energy Lite|Energy Plus|Energy|Latitude|Link|Live II|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)`),
		regexp.MustCompile(`(?i)Seoul (\d+)`),
		regexp.MustCompile(`(?i)Eternity[_ ](G25|H6[578])`),
		regexp.MustCompile(`(?i)E(475|504|503F|553|603|601F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L(553|601F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Hyundai[_ ])?(Eternity[_ ](?:G57L?|G[56]0W?)|H7|Aero Plus)`),
		regexp.MustCompile(`(?i)(H-LED\w+|H-DMP100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HT0704W08|Koral 7W4`),
		regexp.MustCompile(`(?i)7GB1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)7WD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hyundai ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Hyundai[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:Pryme 01|ST01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COMMUNICATOR[_ ]9.7[_ ]3G`),
		regexp.MustCompile(`(?i)(?:GO5_55|BLESS_GO55|BLESSPLUS|KF4Go|KF5bless|GO4\.5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO4\.5`),
		regexp.MustCompile(`(?i)(KF4Go|KF5bless)`),
		regexp.MustCompile(`(?i)(?:IKU[_ ](?:A22|A[45]0|T[123]|X2|K3|i[34]|T[_ ]MAX)|Powerful_K55i|Curvy C50L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Powerful_K55i|Curvy C50L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ](A22|A[45]0|X2|K3|i[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ](T[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ]T[_ ]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]\w`),
		regexp.MustCompile(`(?i)IMO[ _]Q([23]) Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q([4]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]FEEL A2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S80(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S89(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S88(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S99(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S98(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S87(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S67(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S78(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Discovery II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _](Y5|Z[67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO TAB X9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KZCAR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INQ[/ ]`),
		regexp.MustCompile(`(?i)INQ/([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)INQ ([^;/]+) Build`),
		regexp.MustCompile(`(?i)INSYS|(?:HK9-4010|IH9-L614|AC7_DJ17)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VI4-103|GU4-K147)`),
		regexp.MustCompile(`(?i)IQM (?:picasso|vivaldi|newton)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM picasso(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM vivaldi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM newton(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IRA_DUO|IRAW7258)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(IRAW7258)`),
		regexp.MustCompile(`(?i)IT-(?:1101S?|1101-QUAD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IT-(1101S?)`),
		regexp.MustCompile(`(?i)IUNI[ _]`),
		regexp.MustCompile(`(?i)IUNI[ _](U3|i1|N1)`),
		regexp.MustCompile(`(?i)IconBIT|NT-(3506M|1501C|0704S|0909T|1009T|10[01]1T|1017T|3601P/3602P|3603P|3702S|3805C|3905T|3701S|0701S|0805C|0902S|370[23]M)|XDS[789]4K|Omnicast UHD|Movie Smart 4K|Movie IPTV Quad|TOUCAN (?:Smart 3D Quad|(?:NANO|Stick) 4K)|NetTAB_Space_3G`),
		regexp.MustCompile(`(?i)NT-10[01]1T`),
		regexp.MustCompile(`(?i)(?:iconBIT )?(Movie (?:Smart 4K|UNO|Play|IPTV Quad|Ultra HD 4K)|XDS[789]4K|Omnicast UHD|Stick|XDS1[01]00?|Movie [XZ])`),
		regexp.MustCompile(`(?i)(?:Impression[ _\-]?([^/;]+)|A502|I10\-LE|ImPad[ _]?(.*)|ImSmart[ _]?(.*))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A502)`),
		regexp.MustCompile(`(?i)ImSmart[ _]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)ImPad[ _]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(I10\-LE)`),
		regexp.MustCompile(`(?i)Impression[ _\-]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(?:IF(900[1237]|902[19]|903[15]|236a|195a)|M370i?|InFocus M808i?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M370i?)`),
		regexp.MustCompile(`(?i)IF(236|195)a`),
		regexp.MustCompile(`(?i)InFocus M([0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)(?:INFONE (?:XE?)|GORILLA 9 PLUS|X_RAINBOW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INFONE (XE?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Inch (?:Regulus (?:7.85|II)|Avior 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Regulus 7.85)`),
		regexp.MustCompile(`(?i)(Regulus II|Avior 3)`),
		regexp.MustCompile(`(?i)(?:Inco[ _](Aurora II|Colors|Sphere|Plain[_ ]2S?|Plain2 S|Flex(?: 2S)?|S4|Bloom(?: 2)?)|(Horizon_S|Horizon \+|MATTER)|Bloom4|eco_s|Flex-3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bloom ?4`),
		regexp.MustCompile(`(?i)(?:Inco[ _])?(Plain[_ ]2S?|Colors|Horizon_S|Horizon \+|Aurora II|Flex(?: 2S)?|S4|Bloom(?: 2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Flex-(3)`),
		regexp.MustCompile(`(?i)Inco Sphere( 3)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INFINITON[_ -]|Earth 7.0'3G|EARTH10`),
		regexp.MustCompile(`(?i)INFINITON[_ -]T5`),
		regexp.MustCompile(`(?i)Earth 7.0'3G`),
		regexp.MustCompile(`(?i)Infinix[ _-]X260`),
		regexp.MustCompile(`(?i)Infinix[ _-]X502`),
		regexp.MustCompile(`(?i)Infinix[ _-]X570`),
		regexp.MustCompile(`(?i)Infinix[ _-]X350`),
		regexp.MustCompile(`(?i)Infinix[ _-]X351`),
		regexp.MustCompile(`(?i)Infinix[ _-]X352`),
		regexp.MustCompile(`(?i)Infinix[ _-]X403`),
		regexp.MustCompile(`(?i)Infinix[ _-]X503`),
		regexp.MustCompile(`(?i)Infinix[ _-]X511`),
		regexp.MustCompile(`(?i)Infinix[ _-]X400`),
		regexp.MustCompile(`(?i)Infinix[ _-]X401`),
		regexp.MustCompile(`(?i)Infinix[ _-]X450`),
		regexp.MustCompile(`(?i)Infinix[ _-]X451`),
		regexp.MustCompile(`(?i)Infinix[ _-]X454`),
		regexp.MustCompile(`(?i)Infinix[ _-]X500`),
		regexp.MustCompile(`(?i)Infinix[ _-]X501`),
		regexp.MustCompile(`(?i)Infinix[ _-]X506`),
		regexp.MustCompile(`(?i)Infinix[ _-]X509`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6821`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X552|Zero 3)`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X(?:574|602)|Zero 4 Plus)`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X555|Zero 4)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X603`),
		regexp.MustCompile(`(?i)Infinix[ _-]X603B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X620B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X620`),
		regexp.MustCompile(`(?i)Infinix[ _-]X687B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X687`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6815B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6811B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6815`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6811`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6810`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6820`),
		regexp.MustCompile(`(?i)Infinix[ _-]X507`),
		regexp.MustCompile(`(?i)Infinix[ _-]X510`),
		regexp.MustCompile(`(?i)Infinix[ _-]X55[34]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X669`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X6831|X6833B)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6835B?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X622`),
		regexp.MustCompile(`(?i)Infinix[ _-]X521`),
		regexp.MustCompile(`(?i)Infinix[ _-]X522`),
		regexp.MustCompile(`(?i)Infinix[ _-]X557`),
		regexp.MustCompile(`(?i)Infinix[ _-]X556`),
		regexp.MustCompile(`(?i)Infinix[ _-]X559[cF]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X559`),
		regexp.MustCompile(`(?i)Infinix[ _-]X606[BC]?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X623`),
		regexp.MustCompile(`(?i)Infinix[ _-]X608`),
		regexp.MustCompile(`(?i)Infinix[ _-]X624`),
		regexp.MustCompile(`(?i)Infinix[ _-]X625`),
		regexp.MustCompile(`(?i)Infinix[ _-]X650`),
		regexp.MustCompile(`(?i)Infinix[ _-]X655F`),
		regexp.MustCompile(`(?i)Infinix[ _-]X655`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680[BCEF]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680`),
		regexp.MustCompile(`(?i)Infinix[ _-]X688`),
		regexp.MustCompile(`(?i)Infinix[ _-]X682[BC]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X689C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X689F`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X659|PR652|X658)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X573B?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6812`),
		regexp.MustCompile(`(?i)Infinix[ _-]X675`),
		regexp.MustCompile(`(?i)Infinix[ _-]X662`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6816D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6816C?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X668C?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X665[EC]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6826`),
		regexp.MustCompile(`(?i)Infinix[ _-]X666`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6825`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6827`),
		regexp.MustCompile(`(?i)Infinix[ _-]X665`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6817`),
		regexp.MustCompile(`(?i)Infinix[ _-]X612`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5010`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5515[FI]?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X609`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5516`),
		regexp.MustCompile(`(?i)Infinix[ _-]X627`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5514D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X653`),
		regexp.MustCompile(`(?i)Infinix[ _-]X657`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X6823C?|X6511G)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6511`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6512`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6517`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6515`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6516`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X626`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652`),
		regexp.MustCompile(`(?i)Infinix[ _-]X660`),
		regexp.MustCompile(`(?i)Infinix[ _-]X551`),
		regexp.MustCompile(`(?i)Infinix[ _-]X600`),
		regexp.MustCompile(`(?i)Infinix[ _-]X601`),
		regexp.MustCompile(`(?i)Infinix[ _-]X572`),
		regexp.MustCompile(`(?i)Infinix[ _-]X571`),
		regexp.MustCompile(`(?i)Infinix[ _-]X604`),
		regexp.MustCompile(`(?i)Infinix[ _-]X605`),
		regexp.MustCompile(`(?i)Infinix[ _-]X610`),
		regexp.MustCompile(`(?i)Infinix[ _-]X690`),
		regexp.MustCompile(`(?i)Infinix[ _-]X656`),
		regexp.MustCompile(`(?i)Infinix[ _-]X692`),
		regexp.MustCompile(`(?i)Infinix[ _-]X683`),
		regexp.MustCompile(`(?i)Infinix[ _-]X695`),
		regexp.MustCompile(`(?i)Infinix[ _-]X693`),
		regexp.MustCompile(`(?i)Infinix[ _-]X663C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X677`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6819`),
		regexp.MustCompile(`(?i)Infinix[ _-]X676B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X671B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X672`),
		regexp.MustCompile(`(?i)Infinix[ _-]X663D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X671B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X663`),
		regexp.MustCompile(`(?i)Infinix[ _-]X697`),
		regexp.MustCompile(`(?i)Infinix[ _-]X698`),
		regexp.MustCompile(`(?i)Infinix[ _-]X670`),
		regexp.MustCompile(`(?i)Infinix[ _-]X676C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6716`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6710`),
		regexp.MustCompile(`(?i)Infinix[ _-]X678B`),
		regexp.MustCompile(`(?i)Infinix HOT ([a-z]?[1-6])( (?:Lite|Plus|Pro))?`),
		regexp.MustCompile(`(?i)Infinix[ _-](X[78]00)`),
		regexp.MustCompile(`(?i)Infinix[ _-](X\d+)`),
		regexp.MustCompile(`(?i)Infinix[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Infinix[ _-]([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)(TVB-906X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Inhon[_ ](V6)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)intki[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)InnJoo|(?:Halo Plus|Halo X|Halo 5 3G|Halo[ _]4(?:[ _]mini[ _]LTE)?|VISION LTE|Halo2 3G|Fire 4 ?(?:Pro|Plus)?|Fire_Plus_LTE|Fire3 mini|Fire2 (?:Air|Pro|Plus) LTE|Fire2 LTE|Superb(?:_PLus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]X3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo[ _]X[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo[ _]4[ _]mini[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo ?([25]) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]Pro2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Innjoo ONE 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Innjoo[ _]2[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]([2-4])`),
		regexp.MustCompile(`(?i)Innos_?(D6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INNO([a-z0-9]+)`),
		regexp.MustCompile(`(?i)INOI|(?:A126|A161|A170_Plus|A181_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)inoiPad mini 2\+32 Wi-Fi\+3G`),
		regexp.MustCompile(`(?i)inoiPad 2\+32 Wi-Fi\+3G`),
		regexp.MustCompile(`(?i)inoiPad mini 1\+16 Wi-Fi`),
		regexp.MustCompile(`(?i)INOI (2|5) Lite (2019|2021)`),
		regexp.MustCompile(`(?i)INOI[_ ]([123])[_ ]LITE`),
		regexp.MustCompile(`(?i) (A126)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) A161(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INOI ([257]) (?:\d\+\d+ )?(2019|202[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INOI[_ ]([^);/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)NS-(P11A8100|P10A8100|P10A6100|P16AT08|P16AT10|P16AT785HD|P08A7100|P10A7100)(?:[);/ ]|$)|AFTEAMR311|AFTJMST12`),
		regexp.MustCompile(`(?i)NS-(P10A6100|P16AT10)`),
		regexp.MustCompile(`(?i)NS-(P10A8100|P10A7100)`),
		regexp.MustCompile(`(?i)Intex|(Aqua|Cloud[ _][XY][0-9]{1}|Cloud (?:Fame|Glory) 4G)|(?:CLOUD TREAD|IM0318ND|IV0318ND)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _]LIONS[ _]T1[ _]LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _]LIONS[ _]([NT]1|[23]|E3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA (A4) PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _](A4|S[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Intex[ _]IM0118ND`),
		regexp.MustCompile(`(?i)AQUA CRYSTAL\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA FulVU e5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA JEWEL 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aqua[_ ]Life[_ ]?III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]4\.0[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]4G[_ ]MINI`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]LIONS[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]PRIME[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]ZENITH`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]POWER[_ ]IV`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]YOUNG[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]TREND[_ ]LITE`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]AMAZE\+`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]Supreme\+`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]STYLE (\d)`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]Strong 5\.1\+`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]CRYSTAL`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?ELYT[_ ]DUAL[_ ]PLUS`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?ELYT[_ ]DUAL`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?ELYT[_ ](E\d+)`),
		regexp.MustCompile(`(?i)Intex[ _]IV0118ND`),
		regexp.MustCompile(`(?i)Intex[ _]IP0418ND`),
		regexp.MustCompile(`(?i)Intex[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)CLOUD TREAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cloud (?:Fame|Glory) 4G)`),
		regexp.MustCompile(`(?i)(Aqua|Cloud)[ _\.]([^/;\)]+)(?:[ _]Build|/|\))`),
		regexp.MustCompile(`(?i)Intex[ _]([a-z0-9_+\-]+)`),
		regexp.MustCompile(`(?i)(?:Diamond D[56]|Fighter|Eager|Royal R[1-8]|Android 9(?:[\d.]*);(?: [\w-]+;)? (?:MAX[89]|MAX_2))(?: Build|[;)])`),
		regexp.MustCompile(`(?i)MAX[_ ]?([89]|2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Fighter|Eager|Royal R[1-8]|Diamond D[56])`),
		regexp.MustCompile(`(?i)INVIN[ _-]|(?:IPC002|KM5PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INVIN[ _-](X[24]|KM[678])`),
		regexp.MustCompile(`(?i)(IPC002)`),
		regexp.MustCompile(`(?i)IRBIS|TZ(1(?:0[04]|42|5[01]|84|65|7[01345-89]|8[356]|9[12578])|200|49|55|72|22|7(?:0[127]|1[1-46789]|2[021567]|3[025-8]|4[257]|5[23457]|6[12]|72|7[137]|8[1]|9[147])|8(?:[34]1|32|5[3-8]|6[2-5]|7[12478]|8[1-5]|9[0127])|96[0-9])|TZ199|TZ85|TZ13|TZ(?:one|art|HIT|81L)|(SP(?:0[56]|2[01]|4[1-36]|40[12]|45[345]|49[34]|50|51[0147]|531|54[12]|55[0124]|571)|32H1YDX000BS2|43F1YDX000BS2|50U1YDX000BS2|32H1YDX000FBS2|39H1YDX000BS2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TZ(?:[0-9]+)|TZ(?:one|art|HIT|81L))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SP[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(43F1YDX000BS2|50U1YDX000BS2|32H1YDX000BS2|32H1YDX000FBS2|39H1YDX000BS2)`),
		regexp.MustCompile(`(?i)(?:Vox[_ ](?:[45]S|Alpha|POP|STEEL Plus|Energy|FORTIS|VERO)|IS2_?Plus|IS[36]Plus|IS2S|Next_P(?:_PRO)?|NEXT U|NEXT P\+|IRS002-16|X1 mini|Iris_Pad_G8020|G7060|G7100|G8060)(?:[);/ ]|$)|android 9;(?: [\w-]+;)? (?:N30)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Vox[_ ]([45])S`),
		regexp.MustCompile(`(?i)N30(?: Build|[;)])`),
		regexp.MustCompile(`(?i)VOX[_ ]FORTIS`),
		regexp.MustCompile(`(?i)VOX[_ ]VERO`),
		regexp.MustCompile(`(?i)NEXT[_ ]([PU]\+?)`),
		regexp.MustCompile(`(?i)IS([236])_?Plus`),
		regexp.MustCompile(`(?i)(?:Iris_Pad_)?(G7060|G7100|G80[26]0)`),
		regexp.MustCompile(`(?i)TPC-[A-Z0-9]+|TPCY-TX[TE][^);/ ]+`),
		regexp.MustCompile(`(?i)TPC-PA10.1M`),
		regexp.MustCompile(`(?i)TPC-(XE10D-H)`),
		regexp.MustCompile(`(?i)TPC-([A-Z0-9]+)`),
		regexp.MustCompile(`(?i)(TPCY-TX[TE][^);/ ]+)`),
		regexp.MustCompile(`(?i)JFone[ _](JS501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JKL[_ ](A28)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(JP5s?) Inmate Media Device(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(JR-J71)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JVC[;,]|AV-10NT310|AFTSO001`),
		regexp.MustCompile(`(?i)JVC[;,](32D1290)`),
		regexp.MustCompile(`(?i)JVC, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(AV-10NT310)`),
		regexp.MustCompile(`(?i)Remix (?:Pro|Mini)`),
		regexp.MustCompile(`(?i)(?:JK(?:960|[71]03) 3G|JK702|JK101|JK[17]00 v2.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JK(960|[71]03) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JK(702|[17]00 v2.0|101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jesy_(J7)|J9S_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jesy_(J7)`),
		regexp.MustCompile(`(?i)JK-?(760)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JIAYU[ _-]|(?:JY-G4[\\_]G5|(?:JY-[a-z0-9]+)|JY_G4C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JIAYU G4_G5|JY-G4[\\_]G5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JIAYU[ _-](G4[S]?|G2F|G3[S]?|S[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JY[-_]([a-z0-9]+|G4C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga[-_ ]|(?:(?:Fresh|Optim)4G|Pass(?:Plus|3G)|PicassoNote|Hotz[_ ]M1|WinPRO|Touch4G|Start(?:3G|LTE)?|IGO[ _]L[41]|Basco[ _](?:L3|L[45]00|L45[01]|XS1|S2|M1)|M500-1|Hit4G|A450|Neon|IGO_L3|JoyPRO|Fresh|GoalPlus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Optim4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hotz[_ ]M1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hit4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PassPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pass3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GoalPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Win|Joy)PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Touch4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Start3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StartLTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Start(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PicassoNote(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Iron(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IGO_L3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Basco neo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M500-1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Jinga[ _])?Basco[ _](L[13]|L[45]00|XS1|S2|L45[01]|M1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Trezor S1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JINGA_IGO_L2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JINGA[_ ])?IGO[_ ]([ML]1|L4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JINGA[_ ])?(Neon|A450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS1542QWN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS1542QWN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Revolution TnT3|Xtreme_(?:[37]|3x)|Xtreme (?:XT84|XT309|XT309 Plus|1)|Opus S3|JSPQ65|Prime (?:P3[09]0|P4442?|P30))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Revolution (TnT3)`),
		regexp.MustCompile(`(?i)Xtreme (XT84)`),
		regexp.MustCompile(`(?i)Prime (P4442?|P3[09]0|P30)`),
		regexp.MustCompile(`(?i)Xtreme (XT309) Plus`),
		regexp.MustCompile(`(?i)Xtreme (XT309)`),
		regexp.MustCompile(`(?i)Xtreme[ _]([137]|3x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy (?:HH|JD)`),
		regexp.MustCompile(`(?i)Joy[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:TB-JS101A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EZpad ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER(s)?|COSMO[_ ](L707|L808)|BLASTER|FREEDOM[ _](C10[05]|M303|X1)|Freedom`),
		regexp.MustCompile(`(?i)COSMO[_ ](L707|L808)`),
		regexp.MustCompile(`(?i)FREEDOM[ _](C10[05]|M303|X1)`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER2s`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER2`),
		regexp.MustCompile(`(?i)K-?Touch[ _][a-z0-9]+|(?:Pace 2 Lite|KT202011(?:99|88)|LDXA-2[01]22|LDOX-2130|LDOX-212[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K-?Touch[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)K-?Touch[ _]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KATV-01) PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kddi-([a-z0-9]+)|(?:INFOBAR A01|HTX21|HTL21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kddi-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)INFOBAR (A01)`),
		regexp.MustCompile(`(?i)HTX21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KINGZONE_|K1[_ ]turbo`),
		regexp.MustCompile(`(?i)KINGZONE_(N5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K1[_ ]turbo`),
		regexp.MustCompile(`(?i)knmobile[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)J?KOPO[ _-]`),
		regexp.MustCompile(`(?i)J?KOPO[ _-]?([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)J?KOPO[ _-]?([^/;)]+)`),
		regexp.MustCompile(`(?i)KREZ[_ ]`),
		regexp.MustCompile(`(?i)KREZ[_ ](SL502)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KREZ[_ ](TM100[12]S8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KRIP_|K(?:4[bm]|5[bdm]|6b|55h?|57|65|700A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KRIP_)?K(4[bm]?|5[bdm]|6b|55h?|57|65|700A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NET1100|NET_(?:LITE|TITAN|VOLT|MAX|MATRIX|K7)|android 8([\d.]*);(?: [\w-]+;)? NETWORK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NET_(LITE|TITAN|VOLT)`),
		regexp.MustCompile(`(?i)(KM-[a-z0-9]+|EV-[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KZG[_ ](Scope)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KAAN[ _](N[12]|A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KaiCloud[ ]?(7[48]4|942)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KALLEY|(?:ELEMENT (?:4 Plus|MAX|PLAY|Q)|ELEMENT_PRO_2|K-BOOK(?:8MG|73G)|SILVER_MAX|Silver Max (?:Lite|Pro)|Black[ _][GXZ]|Black_G_2|BLACK_PRO|ATV R[12]|GOLD_PRO|KBOOK7M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Black[ _]([GXZ])`),
		regexp.MustCompile(`(?i)Silver Max (Lite|Pro)`),
		regexp.MustCompile(`(?i)K-?BOOK(8MG|73G|7M)`),
		regexp.MustCompile(`(?i)ATV (R[12])`),
		regexp.MustCompile(`(?i)KALLEY,(43D1800|55D1240)`),
		regexp.MustCompile(`(?i)KJ[-_](OB0[23]|YU_?BI|SMART4K|GOCHI|ALFARK|AC0[25])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KJ[-_]OB03`),
		regexp.MustCompile(`(?i)KJ[-_]OB02`),
		regexp.MustCompile(`(?i)KJ[-_]YU_?BI`),
		regexp.MustCompile(`(?i)KJ[-_]ALFARK`),
		regexp.MustCompile(`(?i)KJ-(AC0[25])`),
		regexp.MustCompile(`(?i)(SmartVision3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Browser-)?Karbonn|K9 Kavach 4G|K9[_ ](?:Viraat|Smart)[_ ]Plus|K9 Music 4G|K9 Smart|K9 VIRAAT 4G|Aura (?:Sleek Plus|Sleek 4G|Power 4G Plus|Note Play|Note 2|Storm|Champ)|Titanium[ _](?:3D-Plex|Octane Plus|Vista 4G|Jumbo|S360|S1[059]|S35|S20[13]|S22|S[15]|S200 HD|Frames S7|MOGHUL|S9)|MACHFIVE|MACHONE|Sparkle V|Alfa A114 Quad|Quattro[ _]L(?:45|5[025])[ _](?:HD|IPS|VR)|A41 Power|A(?:[19]|4[05])[ _]Indian|S2052GB|MACH SIX VR|K-Lite F3|Titanium Vista`),
		regexp.MustCompile(`(?i)K9[_ ]Smart[_ ]Plus`),
		regexp.MustCompile(`(?i)K9 Smart(?: 1GB)?`),
		regexp.MustCompile(`(?i)A([19]|4[05])[ _]Indian`),
		regexp.MustCompile(`(?i)K9[_ ]Viraat[_ ]Plus`),
		regexp.MustCompile(`(?i)(?:karbonn)?K9 Viraat 4G`),
		regexp.MustCompile(`(?i)Titanium[ _]S([29])[ _]?Plus`),
		regexp.MustCompile(`(?i)Titanium[_ ]S(99|360|1[059]|109|35|200 HD|20[13]|22|[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Titanium Vista(?: 4G)?`),
		regexp.MustCompile(`(?i)Titanium[ _]MOGHUL`),
		regexp.MustCompile(`(?i)Titanium[ _]3D-Plex`),
		regexp.MustCompile(`(?i)Quattro[ _]L(5[05])[ _]HD`),
		regexp.MustCompile(`(?i)Quattro[ _]L(45)[ _]IPS`),
		regexp.MustCompile(`(?i)Quattro[ _]L(52)[ _]VR`),
		regexp.MustCompile(`(?i)Karbonn ([a-z0-9]+) WAP-Browser`),
		regexp.MustCompile(`(?i)WAP Browser-Karbonn ([a-z0-9]+)/`),
		regexp.MustCompile(`(?i)Karbonn_([^;/)]+)`),
		regexp.MustCompile(`(?i)Karbonn ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Karbonn ([^;/]+)/`),
		regexp.MustCompile(`(?i)Kata[ _-]`),
		regexp.MustCompile(`(?i)Kata[ _-](C3|L1|M3s|M4s?|V[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata[ _-]i5-\w`),
		regexp.MustCompile(`(?i)Kata-(T5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata-Tmini4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata Box 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kazam|(?:Trooper_X[0-9][0-9]|Tornado 348|TROOPER 4\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TROOPER 4\.0`),
		regexp.MustCompile(`(?i)Trooper_X([0-9])([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kazam[; _]([^;/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Alumini_?3_?Plus|Alumini ?[23]|KEMPLER_(?:P[13]|TV|[X9]|8_PLUS)|P1[ _]Amateur`),
		regexp.MustCompile(`(?i)Alumini ?2`),
		regexp.MustCompile(`(?i)Alumini_?3_?Plus`),
		regexp.MustCompile(`(?i)KEMPLER_P([13])`),
		regexp.MustCompile(`(?i)P1[ _]Amateur`),
		regexp.MustCompile(`(?i) (O[76]1|E61Pro|O31 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(O[76]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KENEKSI|(?:Hemera|Teta Dual|Helios)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hemera|Teta Dual|Helios)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]liberty`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]FLASH`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]SUN`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]ZETA`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]SIGMA`),
		regexp.MustCompile(`(?i)KENEKSI[ _-](Moon|Libra_Dual|Glass|Amber|Chance|Amulet|Choice|Crystal|Dream|Delta[_ ]Dual|Norma 2|Norma|Sky|Fire 2|Fire|Flame|Flora|Rock|Solo|Soul|Step|Smart|Star|Storm|Wind)`),
		regexp.MustCompile(`(?i)Three[_ ]Proofings[_ ]W([5-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (VIM2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kiano|Elegance_[45]_[015](?:_PRO)?|ELEGANCE 5.0 Lite|Elegance_4.5|Elegance 6|CORE 10.1 DUAL 3G|Intelect ?(7|8|10)|Slim ?Tab ?\d+(?:[_ ]3GR?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slim ?Tab ?(\d+)(?:[_ ]3GR?)?`),
		regexp.MustCompile(`(?i)CORE 10.1 DUAL 3G`),
		regexp.MustCompile(`(?i)Elegance_(5)_([51])_Pro`),
		regexp.MustCompile(`(?i)ELEGANCE 5.0 Lite`),
		regexp.MustCompile(`(?i)Elegance_([45])[_.]([015])`),
		regexp.MustCompile(`(?i)(Kiano)?(Intelect|Elegance) ?(7|8|10)?`),
		regexp.MustCompile(`(?i)Kiano[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kingstar[-_ ]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Kingsun[ _-]`),
		regexp.MustCompile(`(?i)Kingsun[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kingsun[ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(KST103SD)`),
		regexp.MustCompile(`(?i)KIOWA[_ ]|(?:[AS]5|X4)_CRISTAL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X4|[AS]5)_CRISTAL`),
		regexp.MustCompile(`(?i)KIVI [24]K|(?:24H600G[RU]|24FR50WU|24HK30B|32HR55GU|32H700GU|32F700WU|4[39]UP50GU|40UR50G[RU]|40U600G[RU]|50U730GR|55U600(?:G[RU]|KD)|65UP50GU|55U[PC]50G[RU]|50U600G[RU]|50UX10S|55UR50G[RU]|40FK30G|40FR5[02]BR|43U(?:800B[RU]|600KD|K35G)|50FK30G|50UK35G|32HR50GR|32F700GR|55UC30G|55U730GR|32HK30G|40FK30G|32HR50GU|43UK30G|32FR50(?:WR|BU)|32FK3[02]G|32H600KD|40U600KD|32H600GR)(?:_-Ver0[0-9])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(55UC30G|40FK30G|43UK30G|32HR50G[RU]|32HK30G|32FK32G)_-Ver0([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2}(?:[HFU]|U[CPRXKX]|[BHF][RK])\d{2,3}(?:[GW][RU]|B[UR]|KD|[BGS]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KIVI ([24]K Android TV)`),
		regexp.MustCompile(`(?i)KLIPAD_|(?:KL-V905|KL(2108NBE|[46]889|489[08]|9878A?|3669|759[01]|500|601|988)?(?:_EEA)?|7589AN|KL628_HL|KL628KO|KL4898[_ -]A50|V356B?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KLIPAD_)?(V355B?|KL600|KL-V905|V356B?|KL500|KL601)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KL[46]889|7589AN|KL759[01]|KL9878A?|KL628KO|KL3669|KL489[08]|KL988|KL2108NBE)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KL4898[_ -]A50`),
		regexp.MustCompile(`(?i)Kocaso|(?:DX765 Pro|M(?:6200|729|7[357][026][hw]?|76[01236][bw]?|83[016]|8[567]0|1050s|106[012368]w?|1070|X736(?:-kit)?|X780))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DX765 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M6200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M729(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(7[357][026])[hw]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(76[01236])[bw]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX780(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(83[016])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(8[567]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1050S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(106[012368])W?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX736(?:-kit)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kocaso[ _\-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Kocaso[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)KODAK|(?:IM5|KD50|Ektra|Smartway[_ ](?:[FT]1|[LT]2)|D55L|D6[05]LX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KD50|D55L|D6[05]LX)`),
		regexp.MustCompile(`(?i)Ektra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KODAK[_ ])?SMARTWAY[_ ]L1 PRO`),
		regexp.MustCompile(`(?i)(?:KODAK[_ ])?SMARTWAY[_ ]([FLMTX]1|[LMTX]2|T3)`),
		regexp.MustCompile(`(?i)Tablet (7|10)`),
		regexp.MustCompile(`(?i)Kogan|(?:Agora (?:8 Plus|XI|Go|Lite|4G Pro))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kogan ?(SmarterTV(?: 2K)?|TV|TVAP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Agora ([68]) ?Plus`),
		regexp.MustCompile(`(?i)Kogan[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Kogan[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Komu[_ -]`),
		regexp.MustCompile(`(?i)Komu[_ -]([^;/).]+)(?: Build|[;).])`),
		regexp.MustCompile(`(?i)Komu[_ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)KONKA[_ ]([a-z0-9]+)|(?: R[EU]1|KC516(?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)W(9[67]0)`),
		regexp.MustCompile(`(?i)( R[EU]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KONKA[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)KONROW[_ ]|(?:KTAB_1003|BIGCOOL|SOFT5|COOLFIVE|COOL-K|Just5|Link5|EASY ?(?:5|62|K55)|EASY_5_EEA|EASY55|CITY55?|Cool55|SKY_?55_EEA|android 11;(?: [\w-]+;)? SWEET5|SWEET 55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BIGCOOL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COOL-K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cool55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOFT5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COOLFIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Just5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Link5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY ?(55?|62|K55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY_5_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CITY5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CITY55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY_?55_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET ?(55?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KONROW[_ ](701X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KTAB_1003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Koobee|F2_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F2[_ ]Plus`),
		regexp.MustCompile(`(?i)Koobee[ _\-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Koobee[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(K1 Trio)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kooper-mobile-W502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KORIDY[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(KL1071Z|KL1084)`),
		regexp.MustCompile(`(?i)(?:Kraft[_ -])?KTV-(\w+)`),
		regexp.MustCompile(`(?i)Kruger[ _&]Matz|KrugerMatz[ _]|K&M|EAGLE_(?:961|1068)|FLOW ?5PLUS|FLOW 4 PLUS|Flow 9|FLOW_5|FLOW7|FLOW6(?:S|Lite)?|DRIVE9|DRIVE 8|DRIVE[_ ]6S?|MOVE8mini|MOVE9|MOVE_|LIVE_6plus|LIVE 5 PLUS|Live [89]|LIVE4_KM043[89]|LIVE 7S?|Flow 7S|KM(?:106[679]|1065G|0701(?:_1)?|0702|080[45](?:_1)?|1070)`),
		regexp.MustCompile(`(?i)MOVE[_ ]([78]|6S?)`),
		regexp.MustCompile(`(?i)DRIVE[ _]?([45689][S]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW ?([54]) ?PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW6Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW[ _]?([4-7][S]?|9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE4_(KM043[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KrugerMatz_LIVE4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)_LIVE5_(KM0450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE 5 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE_6plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE ([79])S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Live ([789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOVE9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(106[679])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EAGLE_(961|1068)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(1070)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(1065G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(701)(?:_1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(80[45])(?:_1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(702)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K&M,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)KULIAO (K10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ambition|Beyond)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai[ _\-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai[ _\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Kurio|C15100m`),
		regexp.MustCompile(`(?i)C15100m(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kurio[_ ]?(10S|7S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kurio[_ ]?Phone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kyocera|KWC-|QC-[0-9]{4}|(?:QC6035|NP501KC|302KC|503KC|602KC|705KC|901KC|C51[27]0|C5155|C5215|C67[35]0|C6522N?|C6530N|C6740N?|C6743|E6[89]10|KYL2[13]|KYV3[1-9]|KYT3[123]|KYF3[1235789]|KYF4[012]|KYX31|KYG01|KYY2[1-4]|S2151|KC-S701|S[468]-KC|S9-KC|S10-KC|KYV40U?|KYY31|KYV4[1-8]|KYV4[47]|KC-S301AE|KC-S302|X3-KC|E6560[CT]|E6782[L]?|E6790(?:TM)?|SZJ-JS20[12]|KCP01K|[47]04KC|A[012]01KC|WX10K|URBANO PROGRESSO|E7110|E6921|KY-51B|C6930|A101BM)(?:[-_][uj]2?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A101BM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S([4689]|10)-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5155(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)503KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)404KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)302KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KC-S302(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP501KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WX10K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A101KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYX31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5170(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5215(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C6522N?`),
		regexp.MustCompile(`(?i)C6740(N)?`),
		regexp.MustCompile(`(?i)E6560[CT]`),
		regexp.MustCompile(`(?i)(?:KYOCERA-)?E68[12]0`),
		regexp.MustCompile(`(?i)(?:KYOCERA-)?(?:E69[12]0|E6921)`),
		regexp.MustCompile(`(?i)KYL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYL23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY24(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KYF32|KYF41)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF35(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF3[179](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KYV48|KYF42)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KYF38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV35(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV46(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV32?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV47(?:-[uj])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV43(?:_j)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)705KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV37(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV42(?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV44(?:_u2?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT32(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV40U?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV34(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV(?:45|38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Kyocera-)?E6790(?:TM)?`),
		regexp.MustCompile(`(?i)X3-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6782(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6782L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KCP01K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KC-S301AE|KY-51B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SZJ-JS20[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A001KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A201KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URBANO PROGRESSO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kyocera-KZ-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Kyocera(?:[\-/])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KWC|QC)-?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KA-E410W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ureki_U1|Victor V1|Lamia L01|DART KZ07|REX RX|Eva_E01|Majesty (?:M5|4G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Majesty (M5|4G)`),
		regexp.MustCompile(`(?i)(?:Sapphire 8|Sapphire[76]|Mega plus[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mega plus([23])`),
		regexp.MustCompile(`(?i)Sapphire ?([678])`),
		regexp.MustCompile(`(?i)(Glam|New York|Dubai)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LCT_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:LEM1[45]|LEM12Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LEM12)Pro`),
		regexp.MustCompile(`(?i)(LEM1[45])`),
		regexp.MustCompile(`(?i)LG|Web0S; Linux/SmartTV|portalmmm/2\.0 (?:KE|KG|KP|L3)|(?:VX[0-9]+|L-0[12]D|L-07C|P713|(LM-[A-Z][0-9]{3}[A-Z]{0,3}(?:\(FGN?\)|\(G\)|\.FN|\.F(?:GN?)?)?)|LM-(X625N1|G820QM[0127])|G Watch|lucye)(?:[);/ ]|$)|NetCast|RS98[78]|RS500|VS(?:50[01]|835|876|880|98[05-8]|99[056]|(410|415|425|500|880)PP)|VS820|VS870 4G|Nexsus 5|LML(41[34]D|211B|713D|212V)L|VK810 4G|VK815|X5-LG|L-05[DE]|L-03K|L-01[LJK]|L-52A|L-[45]1A|901LG|A001LG|80[12]LG|402LG|LGT32|L-02K|L-01F|LM-V40|DM-01K|DM-02H|LMX130IM|VS810PP|VS425|VM670|VS930 4G`),
		regexp.MustCompile(`(?i)DM-(01K|02H)`),
		regexp.MustCompile(`(?i)LG-?(?:D32[0159]|AS323|LS620)`),
		regexp.MustCompile(`(?i)LG-?(D315|L31L|F370)`),
		regexp.MustCompile(`(?i)LG-D4(?:[01]5|[01]0)`),
		regexp.MustCompile(`(?i)LG-D37[35]`),
		regexp.MustCompile(`(?i)LG-D12[05]`),
		regexp.MustCompile(`(?i)LG-?(?:X132|X130g)`),
		regexp.MustCompile(`(?i)LG-?(?:D157f|D150)`),
		regexp.MustCompile(`(?i)LG-D10[057]`),
		regexp.MustCompile(`(?i)LG-X14[057]`),
		regexp.MustCompile(`(?i)LG-X13[57]`),
		regexp.MustCompile(`(?i)LG-D28[05]`),
		regexp.MustCompile(`(?i)LG-?LS675`),
		regexp.MustCompile(`(?i)LG-?LS665`),
		regexp.MustCompile(`(?i)VS980|L-01F|LG-(?:F320[LKS]|D80[012356]|LS980)`),
		regexp.MustCompile(`(?i)LG-D6(?:1[08]|2[05])`),
		regexp.MustCompile(`(?i)LG-(?:D85[012568]|AS990|F400[LKS])|LG-?LS990|(?:LG-)?(?:VS985|LGUS990|LGL24|LGD85[05]|LGV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?LS885`),
		regexp.MustCompile(`(?i)LG-D722`),
		regexp.MustCompile(`(?i)LG-(?:D72[23568]|F470[LKS]|D722J)`),
		regexp.MustCompile(`(?i)LG-D693n?|LG-D690n`),
		regexp.MustCompile(`(?i)LG-?H81[012589]|LG-?[LU]S991|LGV32|LG-F500[LSK]|VS986`),
		regexp.MustCompile(`(?i)LG-H525n?`),
		regexp.MustCompile(`(?i)LG-H22[012]`),
		regexp.MustCompile(`(?i)LG-(?:H540|H542|H630)`),
		regexp.MustCompile(`(?i)LG-H73[46]`),
		regexp.MustCompile(`(?i)LG-H8(?:20|3[01]|5[08]|6[08])|VS987|(?:LG-)?RS988|LG-F700[SKL]|LG-?(?:[LU]S992|AS992)`),
		regexp.MustCompile(`(?i)LG-H84[05]`),
		regexp.MustCompile(`(?i)VS988|LG-H87(?:[01](?:DS|[SI]|AR)?|[23])|LG-?US997|LGM-G600[SKL]|LG-[AL]S993|lucye`),
		regexp.MustCompile(`(?i)LG-?(?:L23|D95[015689]|LS995|D950G|F340[LKS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:H95[059]|F510[KLS]|LS996|AS995)`),
		regexp.MustCompile(`(?i)LG-D68[0-6]`),
		regexp.MustCompile(`(?i)LM-G820([NV]|QM[0127]|UMB)?`),
		regexp.MustCompile(`(?i)LG-F310LR?`),
		regexp.MustCompile(`(?i)901LG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-H410(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:D486|F480[LKS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?T480[KS]`),
		regexp.MustCompile(`(?i)LG-F610[KS]`),
		regexp.MustCompile(`(?i)VS501|LM-X120`),
		regexp.MustCompile(`(?i)LGMS395|LG-D393`),
		regexp.MustCompile(`(?i)LG-(?:F520[LKS]|H788)`),
		regexp.MustCompile(`(?i)(?:LG-)?H50[02]`),
		regexp.MustCompile(`(?i)LGL16(?:3BL|4VL)`),
		regexp.MustCompile(`(?i)LG-(?:X15[05]|X165g)`),
		regexp.MustCompile(`(?i)LG-D33[157]`),
		regexp.MustCompile(`(?i)LG-D29[05]`),
		regexp.MustCompile(`(?i)(?:LG-)?H343`),
		regexp.MustCompile(`(?i)(?:LG-)?H650`),
		regexp.MustCompile(`(?i)(?:LG-)?M154`),
		regexp.MustCompile(`(?i)LGM-K120[LSK]`),
		regexp.MustCompile(`(?i)LG-K120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGM-X320[SKL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-F620[KLS]`),
		regexp.MustCompile(`(?i)LG-?L18VC`),
		regexp.MustCompile(`(?i)(?:LG-)?P500H`),
		regexp.MustCompile(`(?i)(?:LG-?)?VS450PP`),
		regexp.MustCompile(`(?i)LG-(?:E97[567]|F180[KLS]|E987|LS970)|LGL01E`),
		regexp.MustCompile(`(?i)LG-?L39C`),
		regexp.MustCompile(`(?i)LG-(?:F240[KLS]|E98[69]|E98[015])`),
		regexp.MustCompile(`(?i)LG-E435f?`),
		regexp.MustCompile(`(?i)LG-E4(?:70f|40|65f)`),
		regexp.MustCompile(`(?i)LG-E4(?:67f|45)`),
		regexp.MustCompile(`(?i)LG-?(?:D180f|D175f|D170|D165)`),
		regexp.MustCompile(`(?i)LG-E4[56]0`),
		regexp.MustCompile(`(?i)LG-E61[02]`),
		regexp.MustCompile(`(?i)LG-(?:E4[17]5f|E410)`),
		regexp.MustCompile(`(?i)LG-(?:D605)`),
		regexp.MustCompile(`(?i)LG-?(?:P655H|MS659)`),
		regexp.MustCompile(`(?i)LGMS500|LG-D505`),
		regexp.MustCompile(`(?i)(L-05[DE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-L160L|LG-F160`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:P713|P71[0245]|P713TR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-P716(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?MS323`),
		regexp.MustCompile(`(?i)L-01D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-02D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:F800[SKL]?|H990|H910(?:PR)?|US996|V34|LS997)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q710(?:\(FGN\)|[\.]?FGN)`),
		regexp.MustCompile(`(?i)LG-?(?:D22[17]|D213)`),
		regexp.MustCompile(`(?i)LG-?(?:K520|F720[KLS])`),
		regexp.MustCompile(`(?i)LG-(?:K53[05])`),
		regexp.MustCompile(`(?i)LM-Q[67]10\.FG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(Q72[57][KLS]|Q610.FGN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q815[KSL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGM-X800[KL]|LG-H970`),
		regexp.MustCompile(`(?i)LM-Q925[LKS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(?:Q730N|Q620)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q520N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGV33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-03K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-01L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGLS775|LGL8(?:2V|1A)L`),
		regexp.MustCompile(`(?i)VS835(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:MS550|K55[07])`),
		regexp.MustCompile(`(?i)L-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:MS63[14]|H63[145]|F560K|LS770)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:LS777|L84VL|M430|L83BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?([TM]P450|M470F?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q710|LML713DL|LG-Q710[AP]L`),
		regexp.MustCompile(`(?i)(?:LM-Q720|LGL722DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-G710(N|VM)?|LG-G710`),
		regexp.MustCompile(`(?i)LG-H44[35]`),
		regexp.MustCompile(`(?i)LM-X410\.FG?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGL455DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LML41[34]DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?L6(?:2V|1A)L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?L5(?:2V|1A)L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?L355DL`),
		regexp.MustCompile(`(?i)LM-X210[KLS]`),
		regexp.MustCompile(`(?i)LG-(?:K580|F690[LS])`),
		regexp.MustCompile(`(?i)LG-?K600`),
		regexp.MustCompile(`(?i)LG-(?:SP320|M32[27]|US601)`),
		regexp.MustCompile(`(?i)LG-?(?:LS676|L56VL|L53BL|K200)`),
		regexp.MustCompile(`(?i)LG-?(?:K500|F650|S02)`),
		regexp.MustCompile(`(?i)LG-(?:M710|H700|US701)`),
		regexp.MustCompile(`(?i)LM-X(?:41[05]K|410S)`),
		regexp.MustCompile(`(?i)LM-X(415[LS]|410L)`),
		regexp.MustCompile(`(?i)LM-X410(?:\.FN|\(FG\))`),
		regexp.MustCompile(`(?i)LM-X(?:320|410[UP]M)|LGL322DL`),
		regexp.MustCompile(`(?i)LG-?LS740`),
		regexp.MustCompile(`(?i)LG-?LS751`),
		regexp.MustCompile(`(?i)(?:VS425|LG-?(?:K120GT|K121|M151|X230))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-K130(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:M160|L57BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-X430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:802LG|LM-X520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LM-X510[KLS]|X5-LG)`),
		regexp.MustCompile(`(?i)LGMS210|LG-M210`),
		regexp.MustCompile(`(?i)LM-X210[G]?`),
		regexp.MustCompile(`(?i)LM-X220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-X220N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-V40(?:5|9N|5EBW)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(?:V500N?|V450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:RS987|H90[01]|H96[0218]|VS990|F600[LKS]|K428)`),
		regexp.MustCompile(`(?i)LG-(?:X240|M200)`),
		regexp.MustCompile(`(?i)(?:LG-)?RS500`),
		regexp.MustCompile(`(?i)(?:LG-)?VS500`),
		regexp.MustCompile(`(?i)LM-X212\(G\)|LGUS215`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:VS995|F800K|US999|LS997|H91[058]|H990(?:DS|[NT])?)`),
		regexp.MustCompile(`(?i)(?:VS996|LG-(?:H933|H93[012]|H930RE|H932PR|[LU]S998|AS998)|LGM-V300[KLS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L-01K|LGV35|LG-H930DS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L-52A|LM-G900(?:[NV]|TM)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-V700N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A001LG|LM-V600V?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?VS410PP`),
		regexp.MustCompile(`(?i)LM-V350[N]?`),
		regexp.MustCompile(`(?i)(?:LG-)?VS415PP`),
		regexp.MustCompile(`(?i)(?:LG-)?VS425PP`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K100|LS450)`),
		regexp.MustCompile(`(?i)LG-AS110|LGUS110`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K|MS)33[02]|LG-X210`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K|MS)350`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K420(?:N)?|K425|F670[KLS]?|K430(?:DS|DSF|DSY)?|K410|MS428)`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:M250N?|M257PR)`),
		regexp.MustCompile(`(?i)(?:LG-)?M255`),
		regexp.MustCompile(`(?i)(?:LG-?)?[MT]P260`),
		regexp.MustCompile(`(?i)LM-K200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K330(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K420(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LM-K500|LGL555DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K526(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q510N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) LM-Q310N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q630N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?M700(?:N|A|DSK|AN)?|LGM-X600[SLK]|LG-M703|LG-US700`),
		regexp.MustCompile(`(?i)LGV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-M257(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K220|LS755|F750K|US610)`),
		regexp.MustCompile(`(?i)(?:LG-?)?M320`),
		regexp.MustCompile(`(?i)(?:LG-)?K371`),
		regexp.MustCompile(`(?i)(?:LG-)?M150`),
		regexp.MustCompile(`(?i)(?:LG-)?F100[SL]`),
		regexp.MustCompile(`(?i)(?:LG-)?F200(?:[KLS]|LS)`),
		regexp.MustCompile(`(?i)(?:LG-)?VM670`),
		regexp.MustCompile(`(?i)(?:LG-)?P880`),
		regexp.MustCompile(`(?i)(?:LG-)?(H340n?|H32[04])`),
		regexp.MustCompile(`(?i)(?:LG-)?H34[25]|LGMS345`),
		regexp.MustCompile(`(?i)(?:LG-)?H4(?:40|2[02])`),
		regexp.MustCompile(`(?i)(?:LG)?C660`),
		regexp.MustCompile(`(?i)LML21(?:1B|2V)L`),
		regexp.MustCompile(`(?i)LG-?L4(?:4V|3A)L`),
		regexp.MustCompile(`(?i)VS880(PP)?|LG-(?:D690|D631)`),
		regexp.MustCompile(`(?i)LG-?(?:D838|F350[LKS])`),
		regexp.MustCompile(`(?i)LG-F300[LKS]`),
		regexp.MustCompile(`(?i)LG-D38[05]`),
		regexp.MustCompile(`(?i)LG-?(?:L16C|L15G)`),
		regexp.MustCompile(`(?i)LM-F100N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-T60[05]`),
		regexp.MustCompile(`(?i)LG-?(?:(?:UK|V)410|V411|V400Y7)`),
		regexp.MustCompile(`(?i)LG-?(?:LK430|V400)`),
		regexp.MustCompile(`(?i)LG-V49[56]`),
		regexp.MustCompile(`(?i)LG-V4[89]0`),
		regexp.MustCompile(`(?i)LGT01|LG-P490L`),
		regexp.MustCompile(`(?i)LG-V50(?:0|7L)`),
		regexp.MustCompile(`(?i)LGT02|LG-?V522`),
		regexp.MustCompile(`(?i)LG-V525(?:S[13])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?[VP]755`),
		regexp.MustCompile(`(?i)LG-V52[01]`),
		regexp.MustCompile(`(?i)LG-?UK750`),
		regexp.MustCompile(`(?i)\(LGE?, WEBOS[123], (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV.+\( ?;LGE? ?;(\d{2}\w+) ?;`),
		regexp.MustCompile(`(?i)\(LGE?, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)webOS.TV`),
		regexp.MustCompile(`(?i)LGE_DLNA_SDK|NetCast`),
		regexp.MustCompile(`(?i)G Watch( R)?`),
		regexp.MustCompile(`(?i)(LM-[A-Z]{1}[0-9]{3}([A-Z]{1,3})?)`),
		regexp.MustCompile(`(?i)LGE(?: |-LG| LG-AX|-)([a-z0-9]+)`),
		regexp.MustCompile(`(?i)FBDV/LG-([a-z0-9]+);FBSV`),
		regexp.MustCompile(`(?i)LGE;([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)LG[ _\-](V90.*|Optimus[ _\-]Pad.*) Build`),
		regexp.MustCompile(`(?i)LGM-([^/;]*)( Build|[;)])`),
		regexp.MustCompile(`(?i)LG(?:/|-LG| |-)?([^/;]*) Build`),
		regexp.MustCompile(`(?i)LG(?:/|-LG| |-)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)LG; ([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 ((?:KE|KG|KP|L3)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(VX[0-9]+)`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV`),
		regexp.MustCompile(`(?i)(H11)-EEA(?:[);/]|$)`),
		regexp.MustCompile(`(?i)(APPLLP Max|APPLLP2?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[ _-](?:P[89]|P10I|NOTE 10[SM]|NOTE 30|C1[45]00|C3[1235]00|S10[ _]Lite|S10|S9_NOTE|M[56]|M5_lite)|(?:C3[67]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[- ]NOTE ([13]0[SM]?)`),
		regexp.MustCompile(`(?i)LT[ _-]C3100`),
		regexp.MustCompile(`(?i)LT[ _-]C3200`),
		regexp.MustCompile(`(?i)LT[ _-]C1400`),
		regexp.MustCompile(`(?i)LT[ _-]C3500`),
		regexp.MustCompile(`(?i)(?:LT[ _-])?C3600`),
		regexp.MustCompile(`(?i)(?:LT[ _-])?C3700`),
		regexp.MustCompile(`(?i)LT[ _-](C3300|C1500)`),
		regexp.MustCompile(`(?i)LT[ _]S10[ _]Lite`),
		regexp.MustCompile(`(?i)LT[ _]S10`),
		regexp.MustCompile(`(?i)LT[ _]P10I`),
		regexp.MustCompile(`(?i)LT[ _]P([89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[ _]M([56])[_ ]lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[ _]M([56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LYF[ _])?LS-[456][0-9]{3}|LYF/[^/]+/`),
		regexp.MustCompile(`(?i)(LYF[ _])?LS-4006`),
		regexp.MustCompile(`(?i)LS-450[58]`),
		regexp.MustCompile(`(?i)LYF/([^/]+)/`),
		regexp.MustCompile(`(?i)Land[ ]?Rover[d]?[ _-](?:X1[0-9]|Explore|T878|L15\+|V18|V[168]|X)(?:[);/ ]|$)|Polar3|Vphone[- ]X3|ST11-A5`),
		regexp.MustCompile(`(?i)Land[ ]?Rover[d]?[ _-](X1[0-9]|Explore(?: R)?|T878|L15\+|V18|V[168]|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vphone[- ]X3`),
		regexp.MustCompile(`(?i)(ST11-A5)`),
		regexp.MustCompile(`(?i)XM[123]00|S6 Build`),
		regexp.MustCompile(`(?i)XM([123])00([^/;)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)lanin (T4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LANIX-([a-z0-9]+)|Ilium[ _]|LANIX_PAD|IliumPad|X120C|(?:Alpha 950(?:XL)?|Alpha [135]V|X540)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILIUM[ _]?PAD[ _]?([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Ilium[ _](Alpha [15]s|Alpha [379]|Alpha 1T|L(?:200|6[12]0|9[0125]0|1[0124]00|1050|1120)|LT5[012]0|M[579]s|M7T|M[13579]|S(?:106|520|6[27]0)|X(?:1[12]0|2[0126]0|400|5[12]0|500B|710))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILIUM[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Alpha (9500|950(?:XL)?)`),
		regexp.MustCompile(`(?i)Alpha ([135])V`),
		regexp.MustCompile(`(?i)(X540)`),
		regexp.MustCompile(`(?i)LANIX-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Lark|Cumulus|Evolution|FreeMe|Ultimate (?:X4|7i))[ _-]|Build/Lark|Bjorn[_ ]SP-500|FreeBird 5WiFi|Impress_Noda`),
		regexp.MustCompile(`(?i)Cumulus[ _](5\.5|[56])[ _]HD`),
		regexp.MustCompile(`(?i)FreeMe X2 ([79]) (?:ver|v)?\.([23])`),
		regexp.MustCompile(`(?i)FreeMe[ _]X2[ _]([7-9])`),
		regexp.MustCompile(`(?i)FreeMe X4[ _]7[_ ]?HD`),
		regexp.MustCompile(`(?i)FreeMe X4[ _]9`),
		regexp.MustCompile(`(?i)(?:Lark[ _-])?Evolution[ _](X2 7 3G-GPS|X4[_ ]10\.1|10|X4[_ ]7[ _]IPS)`),
		regexp.MustCompile(`(?i)Ul(?:ti|it)mate (X4 10\.1 3G IPS|X4 8s 3G|7i)`),
		regexp.MustCompile(`(?i)Phablet 6\.0`),
		regexp.MustCompile(`(?i)Bjorn[_ ]SP-500`),
		regexp.MustCompile(`(?i)Cirrus[ _](4\.5|[45])`),
		regexp.MustCompile(`(?i)Lark[ _](Stratus[_ ]5)`),
		regexp.MustCompile(`(?i)Lava[ _]|LAVA(?:A1|X10)|(?:DISCOVER136|KKT QUADRA)|iris[ _]?([^/;)]+)(?: Build|[;)])|A(?:67|76) Build|X1 Selfie Build|X41 Plus Build|X1_atom_L|(?:Flair (?:[ZS]1|P8)|PixelV1|Pixel V2\+?|Z60s|Z61_2GB|A97 IPS|A97 2GB PLUS|L[EH]9920(?:[_ ]P)?|L[NEH]9910|LH9810|Ivory(?:S1|S4G)?|A76Plus|Grand2c|AH9910| A3_mini|T71_w|V23GB|R1_Lite|Atom 2X|AF9030|Z50_Pro| Z(?:[56]1|92)|Android 6(?:[\d.]*);(?: [\w-]+;)? (:?X28|P7plus)|AF9020|Alfa L|T81N(?:_UP)?|LN982[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZX409(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Flair ([ZS]1|P8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AF9030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AF9020(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AH9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LXX501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z61P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A97 IPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF6810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A97 2GB PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A76Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) A3_mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixel V2\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixel ?V([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1_atom_L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1 Selfie(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X41 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LAVA[_ ]?)?A([13]|67|76)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVA_R(1s?)`),
		regexp.MustCompile(`(?i) Z(\d{2})(?:_2GB)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z50_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMX06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMG01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG403[ _]225(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z60s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V23GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9920[ _]P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9940(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF9810(?:_2GB)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF9820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9830(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH993[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9950(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9821(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Atom 2X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfa L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X\d+)[ _]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (X28)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris88[_ ]go`),
		regexp.MustCompile(`(?i)KKT40[ ]?Power[P\+]`),
		regexp.MustCompile(`(?i)Ivory(S1|S4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T81N_UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T81N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T71_w(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris[ _]?([^/;)]+)[_ ]lite(?: Build|[);])`),
		regexp.MustCompile(`(?i)iris[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lava[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)LAVA[ _]([^/;)]+)/MIDP`),
		regexp.MustCompile(`(?i)Le ?Pan|TC970 ([^;/]+)Build`),
		regexp.MustCompile(`(?i)TC970 ([^;/]+)Build`),
		regexp.MustCompile(`(?i)Le ?Pan ?(II|S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le ?Pan ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)LeBest[_ ](L9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Letv|LeEco|Le ?X[0-9][^;/]+|Le Max|Le [12]|Le2[_ ]x527|X900 Build|(?:X[89]00\+|X52[67]|lineage_c106)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X800\+`),
		regexp.MustCompile(`(?i)X900\+`),
		regexp.MustCompile(`(?i)X50[10]`),
		regexp.MustCompile(`(?i)LE ?(X62[26]|X522)`),
		regexp.MustCompile(`(?i)(X910)`),
		regexp.MustCompile(`(?i)LEX72[057](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEX65[0137](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE(X620)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Le ?X526|Le2[_ ]x527|Le 2|X52[67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEX82[019]|Le Max 2`),
		regexp.MustCompile(`(?i)Le ?X([^;/]+) Build`),
		regexp.MustCompile(`(?i)Le ?X([^) ;/]+)`),
		regexp.MustCompile(`(?i)Le ?([12][^;/]+) Build`),
		regexp.MustCompile(`(?i)Le Max([^;/]*) Build`),
		regexp.MustCompile(`(?i)Le Max([^ ;/]*)`),
		regexp.MustCompile(`(?i)LeEco ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(Vyper|N-5[07]|N-45|LP DAISY|LP_(?:Spectrum_S2|VEYRON|PRADO|Pro1|B-50|EVORA_light)|LP_T70|LP[ _]INFINITY\+?|LP T70 Lite|INFINITY_light|Alphatel_T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LP INFINITY\+`),
		regexp.MustCompile(`(?i)(?:LP_)?(Vyper|N-5[07]|N-45|Pro1|Alphatel_T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MY)?LEAGOO[ _-]?|(?:XRover(?: C)?|Shark (5000|1|6300)|M5 EDGE|KIICAA (POWER|MIX)|Leapad[ _](?:X|7s|7Pro)|Alfa [125]|Elite [15Y]|Venture 1|Z10-E|M9 Pro|Power 5|Power[ _]2(?: Pro)?|Android 9;(?: [\w-]+;)? M1[23]|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:Z9A|T8s)|Lead 3| T5c)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[- _])?M([89])[_-]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEAGOO[- _](Z[156]|Z5c|M[58]|T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[_ ])?Lead ?([357])`),
		regexp.MustCompile(`(?i)Elite ([15Y])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Shark (1|5000|6300)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power 2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:leagoo-)?Power[ _]([25])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venture 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfa ([125])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XRover( C)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[- _])?(Z10-E|M6|M1[23]|T5c|T8s|Z9A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:My)?Leagoo[- _](E4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO_)?Leapad[ _](7s|10|X|7I)`),
		regexp.MustCompile(`(?i)LECT-TAB(1011|0711)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ledstar[_ ])?(?:Trendy 5.0|Novus_Premium_6.0)`),
		regexp.MustCompile(`(?i)Trendy 5.0`),
		regexp.MustCompile(`(?i)Ledstar_Novus_Premium_6.0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Leelbox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Leelbox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(32H540S|32H5[235]0T|5[05]U540S|55U630S|40F540S|43F5[35]0T|32H511T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RST)_(B\d{4}HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Leke[ _]Pad-([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lemhoov[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Lenco (?:[^/);]*)(?: Build|[);])|(?:TDV900)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenco ([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:LNV-)?Lenovo|IdeaTab|IdeaPad|Thinkpad|Yoga Tablet|Tab2A[0-9]-[0-9]{2}[a-z]?|ZUK[ -_]|(?:TB2-X30L|TB3-710I|TB328FU|TB128FU|YT3-X50[MFL]|K50a40|TB-(?:X103F|8504F|X304F|X704V|X704A)|A5500-H|A2107A-H|A3500-HV|A2109A|S6000|Z2 Plus|Vibe[ _](?:P1|S6i Plus|S[23567]i|C|[ZX]2|K5(?: Plus)?|V7)|P2A42|L38011|L18011|[5-8]01LV|[67]02LV|Z2131|K350t|K31-t3|TAB 2 A8-50LC|S90-A|A101LV|P70-A|VR-1541F|d-42A|lineage_A6020|EveryPad2|A2010l36|F0CU0028RK|TB132FU|TB328XU|TB138FC|PB-6505Y|TB-X505[FL]|TB-8704V|TB3[05]0[FX]U|TB-X605[FL]|L38043|TB3-X70L|TB-X605[LF]C|A7600-HV?|YT-X703F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ?G780`),
		regexp.MustCompile(`(?i)Lenovo ?A3500-FL`),
		regexp.MustCompile(`(?i)(?:Lenovo ?)?A3500-(?:H|HV|F)`),
		regexp.MustCompile(`(?i)(?:Lenovo[ _])?A5500-[HF]`),
		regexp.MustCompile(`(?i)Lenovo ?A7600|A7600-H`),
		regexp.MustCompile(`(?i)TB2-X30[FL]`),
		regexp.MustCompile(`(?i)TB-X6C6[XF]`),
		regexp.MustCompile(`(?i)YT3-X50[FLM]`),
		regexp.MustCompile(`(?i)YT-J706[XF]`),
		regexp.MustCompile(`(?i)TB3-710[IF]`),
		regexp.MustCompile(`(?i)TB-8703[XF]`),
		regexp.MustCompile(`(?i)501LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB 2 A10-70L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TB3-850[FM]|601LV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X304[FL]`),
		regexp.MustCompile(`(?i)TB-8504[XL]`),
		regexp.MustCompile(`(?i)(?:TB-X704[FVL]|70[12]LV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)801LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X103F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X704A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X605F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X705[FL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J606[LF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-Q706[FZ](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J606[FN]`),
		regexp.MustCompile(`(?i)TB-J607F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J6C6F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J616[XF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J706[LF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB132FU(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB350[FX]U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J607Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7104[IF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-8304F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7504X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X606[FXV]A?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X605[FL]C`),
		regexp.MustCompile(`(?i)(?:Lenovo )?TB12[58][FX]U`),
		regexp.MustCompile(`(?i)(?:Lenovo )?TB328[FX]U`),
		regexp.MustCompile(`(?i)(?:Lenovo )?TB-X505`),
		regexp.MustCompile(`(?i)TB-7305[IXF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7306[XF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ?B8000(-[FH])?`),
		regexp.MustCompile(`(?i)Lenovo ?B8080(-[FH])?`),
		regexp.MustCompile(`(?i)YOGA Tablet 2 Pro-1380[FL]`),
		regexp.MustCompile(`(?i)YOGA Tablet 2-1050[FL]`),
		regexp.MustCompile(`(?i)YOGA Tablet 2-830(?:[FL]|LC)`),
		regexp.MustCompile(`(?i)Lenovo ?B6000(-[FH])?`),
		regexp.MustCompile(`(?i)YT3-X90(L|F|X)`),
		regexp.MustCompile(`(?i)YT3-850[FL]`),
		regexp.MustCompile(`(?i)YT-X703[FL]`),
		regexp.MustCompile(`(?i)YT-X705[FL]`),
		regexp.MustCompile(`(?i)YB1-X90[FL]`),
		regexp.MustCompile(`(?i)S6000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ([ASB][0-9]{4})[A-Z]?\-[EHF]`),
		regexp.MustCompile(`(?i)ThinkPadTablet_(A[0-9]{3})_`),
		regexp.MustCompile(`(?i)ThinkPad ?Tablet([^;/]*) Build`),
		regexp.MustCompile(`(?i)Lenovo ?A3300-(?:GV|H)`),
		regexp.MustCompile(`(?i)TAB 2 A7-30[HGD]C`),
		regexp.MustCompile(`(?i)TB-8704[FV]`),
		regexp.MustCompile(`(?i)TB-X505[FX]`),
		regexp.MustCompile(`(?i)TB-X104[FXL]`),
		regexp.MustCompile(`(?i)Tab2A([0-9]-[0-9]{2}[a-z]?)`),
		regexp.MustCompile(`(?i)IdeaTab[ \-_]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Yoga Tablet([^;/]+) Build`),
		regexp.MustCompile(`(?i)TB-8505[FX]S`),
		regexp.MustCompile(`(?i)TB-8505[FX]`),
		regexp.MustCompile(`(?i)TB-8506[FX]`),
		regexp.MustCompile(`(?i)TB300[FX]U`),
		regexp.MustCompile(`(?i)TB-8705[FX]`),
		regexp.MustCompile(`(?i)TB-9707F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo (TB[0-9]?\-[a-z0-9\-]+) Build`),
		regexp.MustCompile(`(?i)Lenovo S60-?a`),
		regexp.MustCompile(`(?i)Lenovo K30-W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L19111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L10041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78121(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z213[12]`),
		regexp.MustCompile(`(?i)ZUK[ -_]([^/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)K10a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:k50a40|K50-t5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K(1[30]) Note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7010(?:a48)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K350t(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L38041|K5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L39051(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A7020a4[08]|L38012|K52e78)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L19041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K31-t3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A6010Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A6020a46|Vibe K5 Plus|lineage_A6020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Lenovo-)?(?:A6020(?:a40|l36)|Vibe K5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIBE C|A2020a40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIBE X2|X2-(?:X+CU|TO|AP))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X3(?:a40|c[57]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo X3 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE V7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE S6i Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE[ _]S([23567])i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L79031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L70081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)k33a48(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38043(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L3808[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P2A42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)k53a48(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K33a42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P1ma40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vibe P1 Turbo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:P1(?:a42|c72)|Vibe P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2016a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1010a20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z90a40|Z90-7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S1a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S1La40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z6 Pro|L78051)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L58041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L58091(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB2-6(?:70M|50[YM])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB1-750M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB1-770M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S90-A|P70-A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IdeaPad ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)d-42A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo X2(?:-[ER]U)?`),
		regexp.MustCompile(`(?i)LENOVO/81W8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LENOVO/81MV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LENOVO/81SS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F0CU0028RK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo TAB ?([^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Lenovo ([^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:LNV-|Lenovo-)?Lenovo[ \-_]?([a-z0-9_+\-]+)`),
		regexp.MustCompile(`(?i)(LESPH501[14]|LESPH5003B|SUPERNOVA[ _](?:Qi16|i216|Qi32|i3G96[X]?|iS3G)|PULSAR QI3G|LETAB916|Titanium T355)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPERNOVA[ _](i216|Qi16|Qi32|i3G96[X]?|iS3G)`),
		regexp.MustCompile(`(?i)PULSAR (QI3G)`),
		regexp.MustCompile(`(?i)lephone[ _]|lephoneP1|S104G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)lephone[ _](K7|K10)`),
		regexp.MustCompile(`(?i)lephone_W7_plus|lephone W7+`),
		regexp.MustCompile(`(?i)lephone(?:[ _])?([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)ANOVA A5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lexand[ _]|(?:S[BC]7 PRO HD|S5A[1-4]|S4A[1-5]|S6A1|A811|A802|LPH7_Smarty)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A(811|802)`),
		regexp.MustCompile(`(?i)(S[CB]7) PRO HD`),
		regexp.MustCompile(`(?i)Lexand[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(MFC[0-9]{3}[a-z]{2,})`),
		regexp.MustCompile(`(?i)MFC17[05]FR`),
		regexp.MustCompile(`(?i)(MFC[0-9]{3}[a-z]{2,})`),
		regexp.MustCompile(`(?i)((?:24|32)TP1HDTA1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIFEMAXX, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Lingwin[ _\-]`),
		regexp.MustCompile(`(?i)Lingwin[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Lingwin[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)LI(22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LINSAY[_ ]|(?:F10XIPSQ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F10XIPSQ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LINSAY[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Webpad[_ ]?(100[123]|7007)`),
		regexp.MustCompile(`(?i)(?:LOGIC[_ ](X4 Plus|X50|X[135]|X4M|L4T|L5D|X5[AFT]|X60G|L50T?|L57|L6[0135]|X60_PLUS)(:?[_ ]LITE2?)?|L55[ABS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ]X60_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](L65|X5|X4M)[_ ]LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](L65)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](X5)[_ ]LITE2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](X4 Plus|X50|X[13]|X4M|L4T|L5D|L6[013]|X5[AFT]|X60G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(L50T?|L55[ABS]|L57)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Logic Instrument|Fieldbook K101`),
		regexp.MustCompile(`(?i)Fieldbook F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGICOM[_ ]|(TAB950|TAB1062|E731|E812|E912|E1031|POWER BOT|La[ _]?Tab[ _]?(?:7[24]|10[57]|11[345]|12[4789]|292|Stand(?:RB)?)|(?:[BCM]|ID|VR)[ _]?BOT[ _]?(?:TAB[ _])?([0-9]+\+?)(?:PLUS)?|KT712A_4\.4|L-?IXIR[0-9]*|L_IXIR_TAB_1047HD|L-ITE|L-EGANTONE(?:-R)?|Le Fizz|L-?EMENT.+|Le[ _]?(?:Up|Connect|Omega|Hop|Hello|Lift|Pulse|Prime|Swipe|Wave|Hola|Moov[2]?|Must(?: 2)?|Starter L|Fit FR|Spark|Prime|Smooth(?: FR)?)|LeFit|logikids4)(?:[);/ ]|$|_)`),
		regexp.MustCompile(`(?i)La[ _]?Tab[ _]?(7[24]|10[57]|11[345]|127 HD|12[89]|105_P|292|Stand)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LaTabStandRB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)La[_ ]Tab[_ ]124[_ ]HD[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT712A_4.4|L-IXIR TAB 701 3G`),
		regexp.MustCompile(`(?i)L-?IXIR[ _]TAB[ _]([^);/]+)( Build|[);])`),
		regexp.MustCompile(`(?i)L-ITE[ _](400M|452|50[46] HD|506R HD|552 HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-ITE[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)L-?EMENT[ _]?(350|451|40[103]|55[013]|50[15]|500L?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-?EMENT[ _](?:TAB)[ )]?([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)L-?EMENT[ _]?(74[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB950|TAB1062|E731|E812|E912|E1031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M bot (5[14])`),
		regexp.MustCompile(`(?i)VR bot (552) Plus`),
		regexp.MustCompile(`(?i)VR bot (552)`),
		regexp.MustCompile(`(?i)((?:[BCM]|ID|VR))[ _]?BOT[ _]?TAB[ _]([0-9]+(?:PLUS|\+)?)`),
		regexp.MustCompile(`(?i)((?:[BCM]|ID|VR))[ _]?BOT[ _]?((?:TAB[ _])?([0-9]+\+?)(?:PLUS)?)`),
		regexp.MustCompile(`(?i)Le[ _]Connect`),
		regexp.MustCompile(`(?i)Le[ _]Pulse`),
		regexp.MustCompile(`(?i)Le[ _]Prime`),
		regexp.MustCompile(`(?i)Le Hola FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Hola(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LeMoov2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LeMoov(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Fit FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]?Fit`),
		regexp.MustCompile(`(?i)Le Hop(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Hello(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Smooth FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Smooth(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Must 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Must(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Starter L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Spark(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Up(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lovme[-_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lumigon[ _](T3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(L950[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEO(SR620|SC600)|INNOSR545|Lumus[_ ]Ion|AEONSR570)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO(SR620|SC600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INNO(SR545)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lumus[_ ]Ion(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AEON(SR570)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LUNA[ _](?:[VG]55|G[56]0|G9|G6E)|TG-L800S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUNA[ _]([VG]55|G[56]0|G9|G6E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TG-L800S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUXOR, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)M-HORSE|(?:Pure (?:3|2A?)|Pure ?1|Power1|Top_(?:S[78]|P9|H740|10|i7|Note8)|Top-V30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure ?([13]|2A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Top[_ -](S[78]|P9|H740|10|i7|V30)`),
		regexp.MustCompile(`(?i)(?:Eros[_ ](4G|Star|Smart|Plus|Power)|MTECH (?:ACE9|TURBO L\d+|TEZ 4G|JAZBAA)|Foto3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eros[_ ]Star`),
		regexp.MustCompile(`(?i)Eros[_ ]Smart`),
		regexp.MustCompile(`(?i)Eros[_ ]Plus`),
		regexp.MustCompile(`(?i)Eros[_ ]Power`),
		regexp.MustCompile(`(?i)TURBO L(\d+)`),
		regexp.MustCompile(`(?i)M\.T\.T\.|MTT IDEAL`),
		regexp.MustCompile(`(?i)M\.T\.T\. ?Tablet([^;/)]+)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)M\.T\.T\. ?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)M3US20W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M4[ -]SS[0-9]{4}(?:-R)?|M4_B[23]|M4_R2|R2_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SS4458-R|M4-SS4458-R`),
		regexp.MustCompile(`(?i)M4_B([23])`),
		regexp.MustCompile(`(?i)M4_R(2)`),
		regexp.MustCompile(`(?i)MAXVI[ _](?:MS401)(?:[);/ ]|$)|\w*_?MAXVI?_\w+|MS502[_ ]Orion|MS531`),
		regexp.MustCompile(`(?i)MAXVI[ _](MS401)`),
		regexp.MustCompile(`(?i)MS502[_ ]Orion`),
		regexp.MustCompile(`(?i)\w*MAXVI_(P11|K10|X[358]00)_`),
		regexp.MustCompile(`(?i)(T1270G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MBI[_ ](R7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MBOX3?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Prime_S|M300 4G|MDC M5|Nova Pro|Grand Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime_S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M300) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MDC M5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MDTV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MEEG[ _-]`),
		regexp.MustCompile(`(?i)MEEG[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)MEEG[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)MEU ([a-z0-9]+) Build`),
		regexp.MustCompile(`(?i)(Caryota [1245789]|Jazz J[13] 2018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Caryota [1245789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jazz (J[13]) 2018`),
		regexp.MustCompile(`(?i)MIWANG[_ ](M2s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M35|M20|G7106|G7108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M[0-9]{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G[0-9]{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLAB[ _-]`),
		regexp.MustCompile(`(?i)MLAB[ _-]GLOWY([78]|10)`),
		regexp.MustCompile(`(?i)MLLED[ _]`),
		regexp.MustCompile(`(?i)MLLED[ _]([^;/]+)Build`),
		regexp.MustCompile(`(?i)MLLED[ _]([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)IQ(?:0705|L550|1017|1010w?|1012N?|1019N|1025|1060M|1380|1401|1436|1452a|1453|1470|1502a|1511|155[23]|1568|1570|1805N|180[68]|1810B_M|1832|1850|1890|5017|L626|9610|181011N|A27X_E|E[12]00|EL41|G550|GW516|L30|L5[01]|M801|M1001|N700|P50|R300|S300|S801|S1001|W503|W511T|W553N?|W60[38]|W626|M960|D10S|D700|9013_4N|F 200|T800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ0705(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQD10S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1010W?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1012N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ9013_4N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1019N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1805N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ181011N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1380(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1436(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1452a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1453(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1470(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1502a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1552(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1553(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1568(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1806(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1808(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1810B_M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1832(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1850(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1890(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ5017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ9610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQM960(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQS801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQG550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQGW516(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQE100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQE200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQA27X_E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQEL41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQN700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQP50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQS300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQS1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1060M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQR300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW608(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQW603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW626(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW511T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW553N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQL626?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQD700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQT800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQF ?200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MMI, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(TAB-S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo ?(?:9[13]|81|76)|Enjoy 7 Plus`),
		regexp.MustCompile(`(?i)Primo ?(9[13]|76|81)`),
		regexp.MustCompile(`(?i)MTC[ _](968|97[82]|970|982[OT]?|1078)|(?:MTC[_ ])?SMART[ _]?(?:Race[2]?|Sprint|Run|Turbo|Surf[2]?)[ _]4G|MTC975|Smart Bit|Smart_(?:LINE|Light)|(?:MTC[ _])?SMART[ _](?:Run|Start[_ ][23])|Redbox Mini 5\(MTS\)|MTS TV|DV8235|DV8304-C|Osmartphona`),
		regexp.MustCompile(`(?i)MTC[ _]?(97[258]|970[H]?|982[OT]?|968)`),
		regexp.MustCompile(`(?i)MTC[ _](1078)`),
		regexp.MustCompile(`(?i)SMART[ _]Race[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Race2[ _]4G`),
		regexp.MustCompile(`(?i)(?:MTC_)?SMART[ _]Sprint[ _]4G`),
		regexp.MustCompile(`(?i)(?:MTC_)?SMART[ _]Start[ _]([23])`),
		regexp.MustCompile(`(?i)SMART[ _]?Run(?:[ _]4G)?`),
		regexp.MustCompile(`(?i)SMART[ _]Surf2[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Surf[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Turbo[ _]4G`),
		regexp.MustCompile(`(?i)Redbox Mini 5\(MTS\)`),
		regexp.MustCompile(`(?i)MTS TV Box (\d{3})`),
		regexp.MustCompile(`(?i)(DV8235)`),
		regexp.MustCompile(`(?i)MTN-|(?:Kafit V900|Faith29|Ka ?Chocolate)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Faith29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ka ?Chocolate(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MTN-(L860|S620)`),
		regexp.MustCompile(`(?i)MTN-([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)(MC-X7MINI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mafe_(?:M8[12]0|M825)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mafe_(M810|M825)`),
		regexp.MustCompile(`(?i)(?:N5NOVA|IRON\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IRON\+`),
		regexp.MustCompile(`(?i)(?:Magnus[ _](?:bravoZ[23]0|Infinity_?(?:G8|G11))|bravo Z40|bravo[-_]Z[12]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)bravo[ _-]?(Z[234]0|Z[12]2)`),
		regexp.MustCompile(`(?i)(?:Magnus[ _])?Infinity_?(G8|G11)`),
		regexp.MustCompile(`(?i)MAJESTIC[ _-]|CRONO ?[0-9]+|(?:TAB (?:647|411) 3G|TAB_(?:81[12]|912)_4G|TAB_911_3G|TAB-714|TAB_814|TAB (711 4G|747 3G|[56]11 3G)|URANO27|URANO 47|URANO 77LTE|PLUTO__?26N?|JACK| JOE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JACK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) JOE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URANO 77LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URANO ?([24]7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLUTO__?(26N?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB[ _](\d{3})[ _]([34])G`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]Tab([^;/]+)Build`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]Tab([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]([^;/]+)Build`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]([^);/]+)(?:(?:[);/ ]|$)|$)`),
		regexp.MustCompile(`(?i)CRONO ?([0-9]+) Build`),
		regexp.MustCompile(`(?i)CRONO ?([0-9]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)(?:Build/)?Malata[ _]?([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mango[_ ](S5|SQ7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MANN[ _]|(ZUG 3|ZUG 5S(?: Q)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MANN[ _](8S)`),
		regexp.MustCompile(`(?i)(ZUG 3|ZUG 5S(?: Q)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MSP950(1[245]|2[01])|MSP96017|MSP94501|MSP95009|MSP96002|MSP450[79]|(MID713|MID(?:06[SN]|08[S]?|12|13|14|15|701|702|703|704|705(?:DC)?|706[AS]?|707|708|709|711|712|714|717|781|801|802|901|1001|1002|1003|1004(?: 3G)?|1005|1009|1010|7802|9701|9702))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID713|MID(?:06[SN]|08[S]?|12|13|14|15|701|702|703|704|705(?:DC)?|706[AS]?|707|708|709|711|712|714|717|781|801|802|901|1001|1002|1003|1004(?: 3G)?|1005|1009|1010|7802|9701|9702))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MSP450[79]|MSP95009)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MFSTAB(?:_74G)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mara(?: Phones)?[ _](Z1?|X1|S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Marshal[_ -]?ME`),
		regexp.MustCompile(`(?i)Marshal[_ -]?ME-(700A|720|617)`),
		regexp.MustCompile(`(?i)Marshal[_ -]?ME-(34[78]|352|36[456])`),
		regexp.MustCompile(`(?i)Mascom (S750|SS289|WS517)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Massgo[ _]`),
		regexp.MustCompile(`(?i)Massgo[ _]VI2S`),
		regexp.MustCompile(`(?i)Massgo[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Masstel|(?:Juno[ _]Q[567]|Tab10Ultra|Tab(?:[78]|10)Plus|Hapi10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel[_ ]Juno[_ ]Q5Plus`),
		regexp.MustCompile(`(?i)(?:Masstel_)?Hapi ?(1[05]|30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel[_ ]N660s`),
		regexp.MustCompile(`(?i)Masstel[_ ]\((M18)\)`),
		regexp.MustCompile(`(?i)Masstel_Tab7LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab10 WiFi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel_Tab10_?4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab([78]|10)Plus`),
		regexp.MustCompile(`(?i)(?:Masstel[ _])?Tab[ _]?([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Masstel[_ ]*)?(Juno[_ ]Q[3567]|Juno_S6|[MNXB]\d+|LT52|N600S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEOQC4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MASTERTECH,([a-z0-9_ \-]+),(?:wired|wireless)|QC77QPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MASTERTECH,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(QC77QPS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Maximus 3\.0)`),
		regexp.MustCompile(`(?i)(?:7116-A5|818 3G|MATRIX GRAVITY|Matrix7116)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(7116-A5|818 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Matrix7116(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS(?:45[036]|505|507_STRONG|514)|MS457(?:PLUS)?|RS-401|Neva Rise S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS457)PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS507)_STRONG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MS(45[0367]|505|514)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RS-401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Max80 Plus)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Maximus[ _]|(Noir X|G10 max|iX Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Maximus[ _])?(Noir X|D1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G10 max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maximus_(T2)`),
		regexp.MustCompile(`(?i)Maxtron[ _-](V[327]|V1[2357]|V20|S[89]|T1|Genio|Apollo|PLUTO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxtron[ _-]PLUTO`),
		regexp.MustCompile(`(?i)Maxtron[ _-](V[327]|S[89]|V1[2357]|V20|Apollo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxtron[ _-](T1|Genio)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Astro[_ ](?:Phablet_9|55?N[_ ]LTE|55R|5 PRO|5[sTX]|[45]P|X4|5_GO_LTE|X55s?|4\.5|4|X5|8R)|Astro6|Virtue Z5|Nitro[_ ](?:4S?|55[ARCMN]|5[XRPNM]|[45] GO|4[sN] LTE|55[ _]LTE)|Gravity_(?:55?_GO|6P)|Nitro_Phablet_9s|Nitro Phablet 7N|Nitro 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[_ ](55?)N[_ ]LTE`),
		regexp.MustCompile(`(?i)Astro[_ ]X55[_ ]LTE`),
		regexp.MustCompile(`(?i)Astro[_ ](55R|X55s?|5[sTX]|4|X[45]|[45]P|8R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[_ ](4\.5)`),
		regexp.MustCompile(`(?i)Astro[_ ]X4`),
		regexp.MustCompile(`(?i)Nitro ([45]) GO`),
		regexp.MustCompile(`(?i)Nitro[ _]4s`),
		regexp.MustCompile(`(?i)Nitro[_ ]((?:55|4N)[_ ]LTE|4|55[ARCNM]|5[XRPNM]|8)`),
		regexp.MustCompile(`(?i)Gravity_(55?)_GO`),
		regexp.MustCompile(`(?i)Nitro[_ ]Phablet[_ ](9s|7N)`),
		regexp.MustCompile(`(?i)(?:Alpha[_ ]X|Maze Alpha)(?:[);/ ]|$)|(?:Android [78].+ Blade|Comet)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Alpha[_ ]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maze Alpha(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Blade|Comet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SSB-(?:500|508)|SSB408D|SSB504R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SSB-?(500|508|408D|504R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MF716\+?|M785|800P3[12]C|101P51C|X1010|M7[67]QF6|M17QF[67][_-][43]G(?:plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M785(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M17QF6-3Gplus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M17QF([67])_([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7([76])QF6`),
		regexp.MustCompile(`(?i)MF716\+`),
		regexp.MustCompile(`(?i)Mecool[ _-]|(?:KM9 ?PRO|BB2 PRO|K[I]{1,3} PRO|KI PLUS|KM9_TV_BOX|M8SPROW|M8S (?:PLUS|PRO) (?:DVB|[LW]|PLUS)|M8S (?:MAX|PRO)| KM[13569]| KD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM9 ?PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM9_TV_BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BB2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K[I]{1,3}) PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KI PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8SPROW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PLUS DVB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PLUS ([LW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO ([LW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) K([MD]\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mecool[ _-]([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:SmartPad7503G|M-SP10MXA|M-PPAB500|SmartPad970s2(?:3G)?|M[_-][MPS]P[0-9a-z]+|M-IPRO[0-9a-z]+|10edge|1AZ2[TP]| (?:7[BCD]Y|8[AD]Y|1[AB]EC|1CY|1AZ|1[DI]Y4G|1AZ2TW|1EY4G|1HY4G)(?:_eea)?|Azimut ?[23](?: Lite|Pro)?|M-WPW801| 1EY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad7503G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad970s23G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad970s2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP84[02]M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP940M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP8MXA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP7HXAH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP7MXAH?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP8HXAH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP(?:710|720|725|726|740)GOx?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP876S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8S2[AB]?3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP(101|102|860|875)S2[BW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP85S23G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1[DEHI]Y4G`),
		regexp.MustCompile(`(?i)M-MP10[45][01]S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1S2[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8[24]S4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8S4[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP9S4A3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1[02]S4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP7S4A3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1040MC?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1S4[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10HXxH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXHA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXHL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8PA3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP10PA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP10PA3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-IPRO([18][01]0)[BW](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:1AZ2[TP]|Azimut2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azimut 3 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azimut ?3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azimut 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8DY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10edge(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 1EY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-WPW801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (7[BCD]Y|8AY|1BEC|1CY|1AZ|1AZ2TW)(?:_eea)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M-MP75S23G|M-MP72[01]M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP7S2[ABDK]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP5303G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxB400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAG550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAB500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2G530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPG700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS531(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S650C?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS551U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAG4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP[ABC]G500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S500[BC]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPx(S510|G551|G51[0125]|G415)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M[_-]PP[Ax]X(470|510|555|520)U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxG(400|501|[457][PM]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS(532[LU]|470|501|5P?|7P?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxG(4[15]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPA(S520|R450|G552)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPx([XS]5\d{2}[UL])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP([0-9a-z]+)`),
		regexp.MustCompile(`(?i)Medion|(?:MD_)?LIFETAB|([SPX]10[0-9]{2}X|E10[45]1X|X5001|P851X|P850X|E691X|E10[56]0X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MD_)?LIFETAB[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(E450[46]|E5004|S5004|X5001|E5020|P5015|P500[45]|X6001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B5530)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(E10[45]1X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([SPX]10[0-9]{2}X|P851X|P850X|E691X|E10[56]0X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Medion(?: Smartphone)? ([^/;]+) Build`),
		regexp.MustCompile(`(?i)MEDION, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)MegaFon|MFLoginPh|MegLogPh|(MFLogin[34]T?|MS3B|SP-A5|SP-A20i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MFLoginPh|MegLogPh`),
		regexp.MustCompile(`(?i)MFLogin3T|MegaFon Login 3`),
		regexp.MustCompile(`(?i)MS3B|Megafon Optima`),
		regexp.MustCompile(`(?i)(SP-A5|SP-W1)`),
		regexp.MustCompile(`(?i)MegaFon V9+`),
		regexp.MustCompile(`(?i)(?:Meitu[2]?|MP1503|MP1512|MP160[235]|MP170[19]|MP171[138]|MP1801)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MP1512|Meizu M6s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1602(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP17(?:01|13)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP17(?:09|11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meitu2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meitu (Kiss|[MV]4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meizu|MZ-[A-Z]|(M04[05]|MZ-16th(?: Plus)?|MZ-16[st]|M7[12]1C|M35[1356]|M612C|M578CA|M181[36]|M1822|M681C|M6T|MX[ -]?[2345](?: Pro)?|(?:MZ-)?m[1-6] note|M621C|M1852|M57[18]C|M3[ESX]|M3 Max|M031|m1 metal|M1 E|M2|M2 E|M5s Build|PRO [567]|PRO 7-[HS]| 15 Lite| 16th|MZ-15 (?:Lite|Plus)|15 Plus|MZ-16 X| 16 X| 16T|MX6| M5c|16s Pro|Android 8(?:[\d.]*);(?: [\w-]+;)? 16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M571C`),
		regexp.MustCompile(`(?i)(?:MZ-|Meizu-)?m([1-6])[_ ]note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M1 E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2 E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M578C[A]?|M2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M681C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M621C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M711C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M721C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M6T|MX6|M3E|M3X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M3S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M3 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M5S|M612C`),
		regexp.MustCompile(`(?i)(?:MZ-)?M5c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M04[05]|MX[ -]?2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M35[1356]|MX[ -]?3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX[ -]?4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX[ -]?4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Meizu[- _])?MX[ -]?5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1813(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M1816|M8 lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8c Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO 7-[HS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO ([76]) Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO ([567])`),
		regexp.MustCompile(`(?i)M031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1852(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1822(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16th Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?15 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-15 Lite| 15 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MZ-16th| 16th(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16 X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 16(?: Build|[;)]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16s Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meizu (17|C9) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MZ-?M3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Meizu[_ ])?note([89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?Meizu[_ ]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:MZ-)?Meizu[_ ]([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)MZ-([^/;]+) Build`),
		regexp.MustCompile(`(?i)MELROSE[_ ](?:S9\+?|S9P|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE[_ ]S9\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE[_ ](S9|S9P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE_2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SlidePad ?([^;/]*) Build|SPNG?[0-9]{2,4}[a-z]{0,2}(?:[);/ ]|$)|SP704CE?|SP-NG708-3G`),
		regexp.MustCompile(`(?i)SlidePad ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)SPNG([0-9]{2,4}[a-z]{0,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-NG(708)-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP704(CE?)`),
		regexp.MustCompile(`(?i)(?:Pacific|Quest).+OculusBrowser|Standalone HMD`),
		regexp.MustCompile(`(?i)(?:Quest 2|Standalone HMD)`),
		regexp.MustCompile(`(?i)(?:MiXzo[ _])?(?:ME ?10(?:2[35]|30)|MX1037|MX1024|MX10[24]1|MX1397)([ _][34]G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiXzo[_ ]ME ?(1023|1030)(?:[_ ]([34])G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiXzo[_ ]MX1021(?:[_ ]3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MiXzo[ _])?MX(1037|1041|1024|1397)[ _]4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME ?1025`),
		regexp.MustCompile(`(?i)(?:MicroMax[ \-\_]?[a-z0-9]+|Q327)|4560MMX|P70221|(?:YU(?:5012|5040|5530)|AQ5001(?: Canvas Power)?|Android 4(?:[\d.]*);(?: [\w-]+;)? A240|Android 8(?:[\d.]*);(?: [\w-]+;)? B5Pro|N8216|N8301|IN_2b|IN_Note1|ione note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A240(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A107(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q465(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E451(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4560MMX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN_2b(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6523(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQ4502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E453(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E481(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q462(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P70221(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q(3[25]7|30[13]|326|354|338|3[03]01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q402\+`),
		regexp.MustCompile(`(?i)YU5040(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Micromax_)?(Q333|S302|Q324)`),
		regexp.MustCompile(`(?i)Q402 ?Plus`),
		regexp.MustCompile(`(?i)Micromax[_ ]HS3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax[_ ]HS2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax[_ ]HS1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q440Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax[_ ]Q353P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q452(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q421(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E313(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q413(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4251(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax C1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C2APLS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bharat[ _](\d)[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bharat[ _](\d)[ _]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bharat (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ione note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN_Note1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E7533(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B5Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?(P681|P802)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?(X291|X246|X252|X458|X312)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?(P[a-z0-9]+)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)KIN\.(One|Two)|RM-(?:1010|1031|106[57]|107[23467]|1089|109[02]|1096|1099|1109|111[348]|1127|1141|115[24]|994)|Microsoft; Lumia|Lumia (?:1530|1320|950|850|650|640|550|535|435)|Corporation/Surface|Surface Duo|Surface 3`),
		regexp.MustCompile(`(?i)KIN\.(One|Two)`),
		regexp.MustCompile(`(?i)RM-1099|Lumia 430`),
		regexp.MustCompile(`(?i)RM-1114|Lumia 435`),
		regexp.MustCompile(`(?i)RM-1031|Lumia 532`),
		regexp.MustCompile(`(?i)RM-109[02]|RM-1089|Lumia 535`),
		regexp.MustCompile(`(?i)RM-1141|Lumia 540`),
		regexp.MustCompile(`(?i)RM-1127|Lumia 550`),
		regexp.MustCompile(`(?i)RM-106[57]|RM-1096|Lumia 640 XL`),
		regexp.MustCompile(`(?i)RM-1109|RM-1113|RM-107[23467]|Lumia 640`),
		regexp.MustCompile(`(?i)RM-1154|Lumia 650`),
		regexp.MustCompile(`(?i)Lumia 950|RM-1118`),
		regexp.MustCompile(`(?i)RM-994|Lumia 1320`),
		regexp.MustCompile(`(?i)Surface Pro( [34])?`),
		regexp.MustCompile(`(?i)Microsoft; Lumia ([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:ETL101(?:GB|AL)|ETW101GT(?:_C)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ETL101(?:GB|AL)`),
		regexp.MustCompile(`(?i)NEO[- ](?:X8-H|X8|U9-H|X[57]-mini|X8H?-PLUS|X88-?I|X7-216A|X5-116A|X[68]|U1|Z64|U22-XJ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X8-H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO U22-XJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X([57])-mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-(X8H?)-PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X88-?I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X7-216A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X5-116A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X([68])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-U1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-Z64(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-U9-H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Pearl_Neo|M4CRD?|Emerald_M55CR|Mint[ _](?:VirGo|Orion))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pearl_(Neo)`),
		regexp.MustCompile(`(?i)Emerald[_ ]M55CR`),
		regexp.MustCompile(`(?i)(?:Mint[_ ])?VirGo`),
		regexp.MustCompile(`(?i)(?:Mint[_ ])?Orion`),
		regexp.MustCompile(`(?i)(?:Coolmintt(?:A[35]|M2)?|Ultramintt(?:S2)?|FRESHMINTT(?:A7|A10)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Coolmintt ?(Blaze 2|[PM]1|P3|A[35]|M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultramintt ?([SR]1|S2|Y3|[AY]5|X[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FRESHMINTT ?(A7|A10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIO(?:/)?([a-z0-9]+)|(?:MOBIX M6|Mio TouchPad 7 Quad Core)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOBIX M6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIO(?:/)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Mione[_ ]`),
		regexp.MustCompile(`(?i)Hero (\d+)`),
		regexp.MustCompile(`(?i)Mione P2\+`),
		regexp.MustCompile(`(?i)Mione_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mione[_ ]N10pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIDM[_-]|MPM[_-]|TPM4G_WT8`),
		regexp.MustCompile(`(?i)MIDM[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MPM[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MITO[- _]`),
		regexp.MustCompile(`(?i)MITO[- _]3255(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITO[- _]A37[_ ]Z1plus`),
		regexp.MustCompile(`(?i)MITO[- _](A(?:19[_ ][12]GB|37[_ ]Z1|36[_ ]W1|[0-9]+)|311)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITO[- _](T(?:[0-9]+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITSU|portalmmm/[12]\.0 M`),
		regexp.MustCompile(`(?i)MITSU/[a-z0-9.]+ \(([a-z0-9]+)\)`),
		regexp.MustCompile(`(?i)MITSU[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12]\.0 (M[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(MC32020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Mobell[ _](?:S50)|NOVA P3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobell[ _](S50)`),
		regexp.MustCompile(`(?i)(?:MobiGo2|MobiPrint 4\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MobiGo2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MobiPrint 4\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Kiona|KANUNA|Halona|Kicka[_ ][45][ _]Plus|Kicka Zoom|Kohana|Kayeta|Kosumi|KWANITA|Lonan|Hotah|Kicka 5|Kiona|Smart ?(?:[CEN]11|N12)|Sakari)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart ?([CEN]11|N12)`),
		regexp.MustCompile(`(?i)(Kiona|Kicka[_ ][45][ _]Plus|Kohana|Kayeta|Kosumi|Lonan|Halona|Hotah|Kicka 5|Kicka Zoom|Kiona|Sakari)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobicel[_ ](R1|METRO2)|ASTRO(?: Build|[;)]|$)|(?:Android 8(?:[\d.]*);(?: [\w-]+;)? (?:BEAM|ZOOM|RUBY)|FAME(?:_DS)?|CLIK|R7_[12]|HYPE(?:_X)?|DANDY(?:_ZAM)?|Matrix|VENUS_G|TRENDY PLUS|FENDY_DS|TANGO_LITE|BLINK|BERRY|BERRY[_ ]?(?:[12]|PLUS)|R1PLUS_1|ZOOM-H|REBEL|LEGEND (?:MAX|PRO_1|Pro LTE)|HERO_DS|Switch[ _]GO|SWITCH1|switch plus|PULSE_1|TRENDY 2|TRENDY_LITE|FEVER_PLUS(?:_[HJ])?|RIO_(?:SS|ZAM|RW|BN)|Clik plus|(PURE|Fendy) PLUS|Neo[ _]LTE|Titan_1|ZOOM_1|R4 LTE|NEO_1|EPIC_[12]| GLO|EPIC PRO_[12]|OREO|Cosmo LTE|Neo_Plus|Android 1[12](?:[\d.]*);(?: [\w-]+;)? FORCE|VX20|VX19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EPIC PRO_([12])`),
		regexp.MustCompile(`(?i)EPIC_([12])`),
		regexp.MustCompile(`(?i)BERRY[_ ]PLUS`),
		regexp.MustCompile(`(?i)R7_[12]`),
		regexp.MustCompile(`(?i)GLO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neo[ _]LTE`),
		regexp.MustCompile(`(?i)RIO_(SS|ZAM|RW|BN)`),
		regexp.MustCompile(`(?i)Switch[ _]GO`),
		regexp.MustCompile(`(?i)VX(19|20)`),
		regexp.MustCompile(`(?i)Mobicel_(R1)`),
		regexp.MustCompile(`(?i)FEVER_PLUS_([HJ])`),
		regexp.MustCompile(`(?i)Mobiistar|Zumbo[ _]S|(?:PRIME X MAX|X1 (?:Notch|Dual)|E1 Selfie|XQ[_ ]Dual|C1 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1 (Notch|Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E1 Selfie(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ[_ ]Dual(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mobiistar_LAI_Zumbo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zumbo[_ ]S[_ ]2017[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zumbo[_ ]S[_ ]2017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mobiistar ZUMBO S2( Dual)`),
		regexp.MustCompile(`(?i)Mobiistar_LAI_Zumbo_J_2017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobiistar_LAI_Zumbo_J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobiistar[_ ]Zumbo[_ ]J2`),
		regexp.MustCompile(`(?i)Mobiistar[_ ]Zumbo[_ ]S2`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]YUNA[ _]([1XCS])`),
		regexp.MustCompile(`(?i)mobiistar[ _](?:LAI[ _])?ZORO[ _]([235])`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]Zena`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]Z([12])?`),
		regexp.MustCompile(`(?i)mobiistar LAI 504([KC])`),
		regexp.MustCompile(`(?i)mobiistar[ _]PRIME[ _](X1|558|X[ _]Plus|X[ _]Grand) Build`),
		regexp.MustCompile(`(?i)mobiistar[ _]KOOL([ _]Lite)?`),
		regexp.MustCompile(`(?i)Mobiistar[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)GENESIS_126(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS5[50]X6|MS55X5|MS55L1|MS50L1|MS43A3000|MS45A4000|MS50A4000|MS50A4500|MS50A5000|MS50A6000|MS50B11000|MB-2900 QUATTRO|POLYS[_ ]MS45L1|Wave5)`),
		regexp.MustCompile(`(?i)POLYS[_ ]MS45L1`),
		regexp.MustCompile(`(?i)(Cynus[ _][^/;)]+)( Build|\))`),
		regexp.MustCompile(`(?i)(?:(?:MOBO[_ ]MB7005|MT7-421HD)|(?:MT7-442D|MT7-411D))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOBO[_ ])?(MB7005|MT7-421HD|MT7-442D|MT7-411D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TicWatch (C2|C2\+|Pro S|S2?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Modecom|Free(?:Way )?Tab|xino z[\d]+ x[\d]+|(?:ECHO LOLLY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)xino Z([\d]+) X([\d]+)`),
		regexp.MustCompile(`(?i)FreeTab[ _\-]?([^/;]+)? Build`),
		regexp.MustCompile(`(?i)FreeTab[ _\-]?([^);/ ]+)?`),
		regexp.MustCompile(`(?i)FreeWay Tab[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)FreeWay Tab[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)Mofut[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Mofut[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(?:momo3s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TurboPhone4G Compact 2108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOT|DROID ?(?:Build|[a-z0-9]+)|portalmmm/2.0 (?:E378i|L6|L7|v3)|XOOM [^;/]*Build|XT1941-2|XT1924-9|XT1925-10|XT1965-6|XT1970-5|XT1799-2|XT1021|XT2171-3|XT2071-4|XT2201-6|XT2175-2|XT2125-4|XT2143-1|XT2153-1|XT2201-2|XT2243-2|XT2241-1|XT2137-2|XT1710-08|XT180[3-5]|XT2335-3|XT194[23]-1|XT1929-15|(?:XT|MZ|MB|ME)[0-9]{3,4}[a-z]?(?:\(Defy\)|-0[1-5])?(?:[;]? Build|\))|lineage_osprey|ATRIX HD`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT300`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT30[35]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT31[16]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2125-4`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge \((202\d)\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2175-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2143-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2153-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT32[01]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT3(?:89|90)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT502`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT531`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT535`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT55[567]C?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT603`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT610`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT615`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT621`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT626`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT682`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT685`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT687`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?Atrix HD`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT720`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT800W`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT860`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT881`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT882`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT88[56]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT890`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT894`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT897`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT901`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT90[567]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT910S?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT91[4568]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT9(?:19|20)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT925`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT912`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT102[12]|XT830C|XT15[12]4|XT152[67])`),
		regexp.MustCompile(`(?i)Moto E \(XT2052DL\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1706`),
		regexp.MustCompile(`(?i)MotoE2\(4G-LTE\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1924-9`),
		regexp.MustCompile(`(?i)moto e\(?([0-9])\)? plus`),
		regexp.MustCompile(`(?i)Moto E([0-9]) Play`),
		regexp.MustCompile(`(?i)moto e6 \(XT2005DL\)`),
		regexp.MustCompile(`(?i)moto e5 cruise(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)moto e5 supra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E5 go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?(\di?)\)? Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?((?:[567]|22)i?)\)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?([567])s\)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E(\d+)\(?s\)?`),
		regexp.MustCompile(`(?i)Moto E(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1030`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1565`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1096`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT175[046]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT172[135]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1254`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT10(?:28|3[12349]|68|69)|lineage_osprey`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT106[34]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?g\(?(\d+)\)? 5G`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1609`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT180[1-6]|Moto G ?5S Plus|Moto G \(5S\) Plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1799-2|Moto G \(5S\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT168[57]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT167[06]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1925-10`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1965-6`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT10(?:49|5[23568]|6[04]|9[23457])|XT1093)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT156[234]|Moto X Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT157[02]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1575`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT158[01]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1080`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1585`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1650(?:-05)?`),
		regexp.MustCompile(`(?i)moto z4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto Z3 Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1635(?:-0[1-3])?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1710-(?:-0[28])?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1789-05|Moto Z2 Force(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1929-15|moto z3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT166[23]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2241-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2243-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2201-6`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1943-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1941-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1942-1|P30 Note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge plus 5G UW \(2022\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge plus \(?(202[23])\)?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge ([23]0) fusion`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge 20 lite`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge (\d+) pro`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge 5G UW \(2021\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge (\d+)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge \(2021\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one vision plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT1970-5|one vision)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one power`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one hyper`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one zoom`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one fusion\+`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one fusion`),
		regexp.MustCompile(`(?i)moto g stylus \(XT2115DL\)`),
		regexp.MustCompile(`(?i)moto g stylus \((202[12])\)`),
		regexp.MustCompile(`(?i)moto g stylus 5G \((2022)\)`),
		regexp.MustCompile(`(?i)moto g play \(XT2093DL\)`),
		regexp.MustCompile(`(?i)moto g play \(2021\)`),
		regexp.MustCompile(`(?i)moto g power \(XT2041DL\)`),
		regexp.MustCompile(`(?i)moto g power \(2021\)`),
		regexp.MustCompile(`(?i)moto g power \(2022\)`),
		regexp.MustCompile(`(?i)moto g 5G \(2022\)`),
		regexp.MustCompile(`(?i)moto g\(?40\)? fusion`),
		regexp.MustCompile(`(?i)moto g\(?60\)?s`),
		regexp.MustCompile(`(?i)moto g(\d+)\((\w)\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) \(XT1925DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) forge`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) optimo \(XT1952DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) optimo maxx\(XT1955DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) power lite`),
		regexp.MustCompile(`(?i)moto g\(([0-9]|10)\) power`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) supra`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) plus`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) play`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\)`),
		regexp.MustCompile(`(?i)moto g(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)moto e\(?([0-9]+)\)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)moto x\(?(4+)\)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)moto(?:rola)? one 5G`),
		regexp.MustCompile(`(?i)Moto MAXX|XT1225`),
		regexp.MustCompile(`(?i)Moto ([CGEXZ]) ?\(([a-z0-9]+)\)( Plus| Play)?`),
		regexp.MustCompile(`(?i)Moto ?([CGEXZ])([0-9]+)( Plus| Play)?`),
		regexp.MustCompile(`(?i)(?:Motorola-)?Moto[ _]?([CGEXZ])([ _](?:Plus|Play))?`),
		regexp.MustCompile(`(?i)Moto(?:rola)?[- _]F100`),
		regexp.MustCompile(`(?i)razr \(?(202[02])\)?`),
		regexp.MustCompile(`(?i)MOTORAZR[ _-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MOTORIZR[ _\-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Motorola[ _-]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Moto[ _-]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)MOT[O]?[_-]?([a-z0-9.]+)`),
		regexp.MustCompile(`(?i)DROID ?([a-z0-9 ]*) Build`),
		regexp.MustCompile(`(?i)DROID ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 ((?:E378i|L6|L7|V3)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(XOOM [^;/]*)Build`),
		regexp.MustCompile(`(?i)(MZ[0-9]{3})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:ME|MB|XT)[0-9]{3,4}(?:\(Defy\))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOVIC|F4502`),
		regexp.MustCompile(`(?i)MOVIC[ -]K(2)`),
		regexp.MustCompile(`(?i)MOVIC[ -]W([2345])`),
		regexp.MustCompile(`(?i)M(?:8421|9101[AB]|910[36]|841[4568]|8601)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(\d{4}[AB]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MH-T6000|MT-T800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MH-T6000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MT-T800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MPQC|MPDC)[0-9]+|PH(?:150|340|350|360|451|500|520|544|604)|(?:MID(?:7C|74C|82C|84C|801|811|701|711|170|77C|43C|102C|103C|104C|114C)|MP100i OCTA|MP(?:843|717|718|1010|7007|7008|843|888|959|969|QCG(1[01]|77)(?: 3G)?)|MGP7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:MPQC|MPDC)[0-9]+[^/;)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)MP100i OCTA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MPQCG10(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID(?:7C|74C|82C|84C|801|811|701|711|170|77C|43C|102C|103C|104C|114C)|MP(?:843|717|718|1010|7007|7008|843|888|959|969|QCG(?:11|77))|MGP7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PH(?:150|340|350|360|451|500|520|544|604))`),
		regexp.MustCompile(`(?i)MultiPOS[ _]?(X9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]|ML-TI-MS|(?:MS50[LGXM]|M7[_-]3G[_-](?:PLUS|QC_3|QUAD_CORE)|MS5\.V2|M9-3G|MS45S_A6|ML([02]1|12)-M7s[- ]?Quad-?Core| ML01-M7-SD|MS45S|MS50S|MS60[XZ]|M7SQC_Plus|MS80X|MS40[GS]|MS55M|MS70|M7_3G_A10|M7_3G|M7S_PLUS|M10A?_3G|M7-3G QUAD CORE|M7s_?Lite|M[79]_WIFI|ML-(?:SO|WI)-M9-3G|M10A-Lite|M10_4G_PRO|MS50L?_4G|MS60F(?:_PLUS)?|MS45S_A6_(?:Teen|Senior)|MLX8|ML-WI-M7_3G_PLUS|KIDPAD_LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]([EFG])[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]F[_ ]Pro[ _]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G[_ ]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]GMAX_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G[ _]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]E[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]([FEH])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MS60F_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS50[LGXSM]|MS45S_A6|MS40[GS]|MS55M|MS60F|MS70|MS60[XZ]|MS45S|MS80X|MS50L?_4G|MS5\.V2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ML-WI-)?M7[_-]3G[_-]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M([79])_WIFI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M10_4G_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7SQC_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7-3G_QC_3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7-3G[ _]QUAD[ _]CORE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML([02]1|12)-M7s[- ]?Quad-?Core(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7s_?Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML01-M7-SD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M10A-Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ML-(?:SO|WI)-)?M9-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7_3G_A10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLX8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(10A?|7)_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KIDPAD_LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML-TI-(MS\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MP01A3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyGica[_ ]`),
		regexp.MustCompile(`(?i)HDR (Quad Core|Smart TV) Box`),
		regexp.MustCompile(`(?i)ATV(19[60]0|495 Pro 16G)`),
		regexp.MustCompile(`(?i)MY MOBILE (708)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MyPhone|MyPad|MyTab)[ _][^;/)]+( Build|[);])|(?:HAMMER_)?AXE[_ ]M[_ ]LTE|Hammer[_ ](?:Axe)|Cube_LTE|myTab10II|LUNA_II|C-Smart_pix|myPhone_Fun_8|FUN_18x9|MyPhoneMY27|Prime_4_Lite|myA1[78]|myX12|Pocket_2|Prime_18x9|Prime3Lite|myG1|myA10|myA(10|[789]) DTV|myT[356] DTV|myWX1 Plus|myXI1(?:[ _](?:Plus|Pro))?|my(?:XI[3]|NX1|X[23589]|A1[12356]|29S|807)|Q_Smart_BE|Brown [12]|Q-Smart_Plus|Q-Smart_III_Plus|SmartView_(?:[78]|9_6)_(?:LTE|[34]G)|Android 6(?:[\d.]*);(?: [\w-]+;)? Pocket|Infinit 2|SmartView_9\.6_3G|A898 DUO`),
		regexp.MustCompile(`(?i)myT([356]) DTV`),
		regexp.MustCompile(`(?i)SmartView_9[_.]6_3G`),
		regexp.MustCompile(`(?i)myA([789]|10) DTV`),
		regexp.MustCompile(`(?i)Cube_LTE|Cube 16GB`),
		regexp.MustCompile(`(?i)INFINITY (LTE|3G)`),
		regexp.MustCompile(`(?i)Pocket_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pocket(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun[_ ]?(\d)[_ ]?Lite`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun[_ ]?(\d)[_ ]?LTE`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun_?([48]|18x9)`),
		regexp.MustCompile(`(?i)(?:HAMMER_)?AXE[_ ]M[_ ]LTE`),
		regexp.MustCompile(`(?i)myXI1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myXI1 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myXI([13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)my(X[23589]|NX1|A1[12356]i?|29S|G1|X12|A1[078])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myWX1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q_Smart_BE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Smart_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime_18x9(_LTE)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime3Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Brown 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)brown 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myPhone[_ ]Pocket[_ ]Pro`),
		regexp.MustCompile(`(?i)MyPhone[ _]([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)MyPad[ _]([^;/(]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)MyTab[ _]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:MyTAB[ _-](?:8 MINI Dual Core|U55GT)|U103GT1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyTAB[ _-]8 MINI Dual Core(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyTAB-U55GT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U103GT1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyWigo[ _]([^;/)]+)( Build|\))`),
		regexp.MustCompile(`(?i)MygPad[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(MOVE_S201)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (Myria[_ ][^/;]+|502M|Cozy|Easy tab 9|Grand|Compact_E2_Plus)(?: Build|[;)])|Myria_FIVE|Myria_Grand_4G|Myria_Wide_2|Myria_Wide_4G`),
		regexp.MustCompile(`(?i)(502M|Grand|Compact_E2_Plus)`),
		regexp.MustCompile(`(?i)(Cozy|Easy tab 9)`),
		regexp.MustCompile(`(?i)Myria[_ ]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(E70 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYSTERY|(MID-(?:123G|72[12]|7[01348]3G|753G|8[23]3G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MID-(123G|72[12]|7[01348]3G|753G|8[23]3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYSTERY[_ ]TV[_ ](D\d{4}[A-Z]{2}\d{2})`),
		regexp.MustCompile(`(?i)(?:NASCO (?:TANGO 7)|SNAP_PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEC[ _\-]|KGT/2\.0|portalmmm/1\.0 (?:DB|N)|(?:portalmmm|o2imode)/2.0[ ,]N|(?:PC-T[SE]\d{3}[\w]{2,3}|N-06C|N-02E|LAVIE T11 (?:11QHD1|112K1)|LAVIE Tab E (?:10|8)FHD[12]|7SD1|8HD1|LAVIE Tab (?:10FHD3|T12 12QHD1))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N-06C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEC[ _\-]|KGT/2\.0 )([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/1\.0 ((?:DB|N)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:portalmmm|o2imode)/2\.0[ ,](N[a-z0-9]+)`),
		regexp.MustCompile(`(?i)LAVIE Tab E ((?:10|8)FHD[12]|7SD1|8HD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE Tab 10FHD3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE Tab T12 12QHD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE T11 (11QHD1|112K1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE T7 (7SD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE T8 (8HD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PC-TE(\d+)`),
		regexp.MustCompile(`(?i)PC-TS(\d+)`),
		regexp.MustCompile(`(?i)(?:NEKO_(?:W_)?LT[-_](\w+)|LT-\d{2}N(?:H8020S|F7021S))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEKO_)?(?:W_)?LT[-_](\w+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MXQ|MXQ-Pro)-NEXBOX|NEXBOX-([^) ]+)`),
		regexp.MustCompile(`(?i)NEXBOX-([^) ]+)`),
		regexp.MustCompile(`(?i)NEXON (X[13]\+|X[123589])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Discovery_XT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NG3128HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NGM[_ ][a-z0-9]+|(Forward|Dynamic)[ _]?[^/;]+(?:Build|/)|Smart5Plus32GB|Android 5(?:[\d.]*);(?: [\w-]+;)? (?:P50[89]|P55[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P(50[89]|55[01])`),
		regexp.MustCompile(`(?i)(Forward|Dynamic)[ _]?([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(Forward|Dynamic)[ _]?([^/;]+)/`),
		regexp.MustCompile(`(?i)NGM ([^;/]+) Build`),
		regexp.MustCompile(`(?i)NGM_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Android 4(?:[\d.]*);(?: [\w-]+;)? (3188HD)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:NOA-)?NOA[ _]|Hummer(?:_2019_R|LE)|NextSE|Vivo 4G_r|SPRINT4G|SparkSE`),
		regexp.MustCompile(`(?i)NOA[_ ]CORE[_ ]FORTE`),
		regexp.MustCompile(`(?i)NOA[_ ]Hummer[_ ]Lite`),
		regexp.MustCompile(`(?i)NOA[_ ]HUMMER`),
		regexp.MustCompile(`(?i)NOA[_ ]MOVEse`),
		regexp.MustCompile(`(?i)NOA[_ ]NEXT`),
		regexp.MustCompile(`(?i)NOA[_ ]VISION[_ ]H3SE`),
		regexp.MustCompile(`(?i)NOA[_ ]VISION[_ ]H3`),
		regexp.MustCompile(`(?i)NOA[_ ]LOOP`),
		regexp.MustCompile(`(?i)(?:NOA-)?NOA[_ ]H4se`),
		regexp.MustCompile(`(?i)NOA[_ ]Mg12`),
		regexp.MustCompile(`(?i)NOA[_ ]H44SE`),
		regexp.MustCompile(`(?i)NOA[_ ]H10LE`),
		regexp.MustCompile(`(?i)NOA[_ ](M108K|P497)`),
		regexp.MustCompile(`(?i)(?:NOA[_ ])?Vivo 4G_r`),
		regexp.MustCompile(`(?i)NOA[_ ]([^;)/ ]+)`),
		regexp.MustCompile(`(?i)SMART_VOLT_NX5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NOGAPC (?:LIVE|PRO)|NOGAPAD ?(?:7G|10\.1GHD))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPAD ?7G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPAD ?10\.1GHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPC PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPC LIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Bonvi Note|Bonvi Prime|Bonvi Pro|Borneo_Pro|Vi_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HB-(2000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_|(?:(?:N(570[24]|500[12])L|S5701L|S6001L|[SN]5501L)|A6L-[CG]|N5502L|S6303L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_A([13]L?)`),
		regexp.MustCompile(`(?i)NUU_M([32])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_X5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NUU_)?(N5001L|A6L-[CG]|Q500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NYX[ _]|(?:GLAM|ARGON|TQ14|GO-X|orbis)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NYX[_ ]ALTER`),
		regexp.MustCompile(`(?i)NYX[ _]REX`),
		regexp.MustCompile(`(?i)(TQ14|GO-X)`),
		regexp.MustCompile(`(?i)(?:DMTAB-(?:IN08A|NV08B|NV2[04]A)|NBTY07SMKG|NBFP07PMKG|SNB02-NV7A|NABI2-NV7A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DMTAB-(?:IN08A|NV08B)`),
		regexp.MustCompile(`(?i)DMTAB-NV(2[04])A`),
		regexp.MustCompile(`(?i)android 7(?:[\d.]*);(?: [\w-]+;)? (?:F101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NAOMIPHONE Ambar|DAMMAR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAOMIPHONE Ambar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DAMMAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NX-32THS100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEXO (?:Smarty|handy|SMART DUO|Evo)|MOVIO 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP-752Go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NeoTab)[ _-]((?:S1[23]0|S125|H85|H11[05]|KID741|S9700))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _]|(?:T737PRO|T505PRO|T500 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NAVITEL[ _])?(T70[07]|T500) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _](T757)LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _](A73[0157]|A650)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T(505|737)PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RE900 Full HD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ]|(?:Vision_Tab_(?:7|10)|Pure Micro|Superme_Max|Raptor3G8GB|Predator (?:10|3G)|Platinum[_ ]?10[_ ]?3G(?:_V2|2019)?|Supreme[_ ](?:Fine(?:[_ ]Micro)?|Chief|Pure|Pro)(?:[_ ](?:Mini|Plus))?|T400 3G 2017|Spirit_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M505 LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F552|D504)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Superme_Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine_Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine_Micro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Fine[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Chief(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Pure[ _]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme Pure(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure Micro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spirit_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ]Infinity(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ](D405)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Platinum[ _]10[ _]3G(_V2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Platinum103G2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Orpheus[ _]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon_)?Predator[_ ](3G|10|7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Raptor3G8GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vision_Tab_(7|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M002[DGQK]-2|M002N|M002N-3T|M002W-2T|6M-3T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEDAPHONE[ _](V9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neffos|(TP601[ABCE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:C57|TP601[ABCE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neffos[_ ]Y50`),
		regexp.MustCompile(`(?i)Neffos[_ ]((?:[YNCXA])[0-9][A-Z]?(?: Max| Lite| Plus)?)`),
		regexp.MustCompile(`(?i)NEO, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Neolix[ _-]`),
		regexp.MustCompile(`(?i)Neolix[ _-]T7[_ ]`),
		regexp.MustCompile(`(?i)Neolix[ _-]1-C-`),
		regexp.MustCompile(`(?i)Neolix[ _-]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)NEO[ ]?(90[689])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NQT-(?:101|7)[34]GIQ|NQT-7W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NQT-101([34])GIQ`),
		regexp.MustCompile(`(?i)NQT-7([34])GIQ`),
		regexp.MustCompile(`(?i)NM-NETPAD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NIM-(450D|550O|600Q)`),
		regexp.MustCompile(`(?i)neutab ?k1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)neutab ?k1`),
		regexp.MustCompile(`(?i)NB (RunIQ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NBTB10[12])(?:[);/]|$)`),
		regexp.MustCompile(`(?i)NEWGEN\-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NLS-(?:MT90|NFT10|MT65)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Newman[ _](P308|K1|G5i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CarPad-(?:II|III)-P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Newsday[_ ](E1|A[12]|N2\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexa[ _](?:Atlas|Vega N1)`),
		regexp.MustCompile(`(?i)Nexa[ _](Vega N1)`),
		regexp.MustCompile(`(?i)Nexa[ _](Atlas)`),
		regexp.MustCompile(`(?i)S?Nexian`),
		regexp.MustCompile(`(?i)S?Nexian[ ]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)S?Nexian-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Next[0-9]|NX(?:785QC8G|M900MC|008HD8G|010HI8G|M908HC|M726|16A8116K|A8QC116|A8LTE116|16A10132S|16A11264|A116QC164|A101LTE116)`),
		regexp.MustCompile(`(?i)Next([0-9]+[^;/]+) Build`),
		regexp.MustCompile(`(?i)TAB (A40[13]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nextbit|(?:Robin)(?: Build|\))`),
		regexp.MustCompile(`(?i)(Robin)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOAIN[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)NOAIN[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)Nobby[ ](S500|X800(?: Pro)?|S300(?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Noblex|NBX-|(?:A[56]0UNS|T7A6INC|T7A6N)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:Noblex|NBX)[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Noblex|NBX)[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(A[56]0)UNS`),
		regexp.MustCompile(`(?i)(T7A6INC|T7A6N)`),
		regexp.MustCompile(`(?i)Nokia|Lumia|Maemo RX|portalmmm/2\.0 N7|portalmmm/2\.0 NK|nok[0-9]+|Symbian.*\s([a-z0-9]+)$|RX-51 N900|TA-[0-9]{4}|N(?:1374|1530|15[012])DL|ARM; 909`),
		regexp.MustCompile(`(?i)TA-10(07|23|29|35)`),
		regexp.MustCompile(`(?i)TA-10(20|28|32|38)`),
		regexp.MustCompile(`(?i)TA-10(24|27|44|53)`),
		regexp.MustCompile(`(?i)TA-10(00|03|21|25|33|39|54)`),
		regexp.MustCompile(`(?i)TA-10(04|12|52)`),
		regexp.MustCompile(`(?i)Nokia 6\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 5\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 3\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 2 V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nokia[_ ]Xplus`),
		regexp.MustCompile(`(?i)Nokia ?X2DS`),
		regexp.MustCompile(`(?i)(?: )?(Nokia500|nokiaasha500(?:dualsim)?)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia5130c(?:-2)?`),
		regexp.MustCompile(`(?i)Nokia8800e?`),
		regexp.MustCompile(`(?i)Nokia808 ?PureView`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})c(?:-)?`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})s(?:-)?`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})`),
		regexp.MustCompile(`(?i)(?: )?Nokia([235][0-9]{2})(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia([CEX]-?[0-9]{1,2}i?)-[0-9]{1,2}u?(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia;? 520T`),
		regexp.MustCompile(`(?i)RM-91[45]`),
		regexp.MustCompile(`(?i)RM-997|Nokia 526`),
		regexp.MustCompile(`(?i)RM-97[68]`),
		regexp.MustCompile(`(?i)RM-97[45]`),
		regexp.MustCompile(`(?i)NOKIA;? 710`),
		regexp.MustCompile(`(?i)Nokia;? 720T`),
		regexp.MustCompile(`(?i)RM-103[89]`),
		regexp.MustCompile(`(?i)Nokia;? 800C`),
		regexp.MustCompile(`(?i)Nokia;? 800`),
		regexp.MustCompile(`(?i)Nokia;? 900`),
		regexp.MustCompile(`(?i)(RM-82[12]|Nokia;? 920)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)(RM-89[23]|RM-910|Nokia;? 925)(?: Build|[a_);/])`),
		regexp.MustCompile(`(?i)(ARM; 909|NOKIA;? 909|NOKIA; id300)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)NOKIA;? 1520\.1`),
		regexp.MustCompile(`(?i)Nokia T([12]0|21)`),
		regexp.MustCompile(`(?i)Nokia ([A-Za-z0-9\. ]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Nokia(N[0-9]+)`),
		regexp.MustCompile(`(?i)Nokia-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NOKIA; ([a-z0-9\- ]+)`),
		regexp.MustCompile(`(?i)NOKIA[ _]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)NOKIA/([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(Lumia [a-z0-9\-]+ XL)`),
		regexp.MustCompile(`(?i)(Lumia [a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Maemo RX-51 ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NokiaInternal|Nokia-WAP-Toolkit|Nokia-MIT-Browser|Nokia Mobile|Nokia Browser|Nokia/Series`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 (N7[37]|NK[a-z0-9]+)`),
		regexp.MustCompile(`(?i)nok([0-9]+)`),
		regexp.MustCompile(`(?i)Symbian.*\s([a-z0-9]+)$`),
		regexp.MustCompile(`(?i)Nomi[ _-]|(C101010 Ultra2|i501[234]|i5032|i50[537]0|i5031|i55[13]0|i5532|C0(700(?:[02358]|2HD)|7850)|C1010[0-3]|i(?:50[0158]|450|40[01]|55[02])|i504 Dream|AB5116-01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i501[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i506(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i6030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I5070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[_ ]I4070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i4510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i4500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[_ ]i5511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i5710(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i508(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi[ _])?i(50[015]|450|40[01]|55[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i507(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi[ _]i504|i504 Dream)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _](\w+)[ _]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AB5116-01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101040`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101030`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101014`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101034`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101044`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070010`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070020`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070011`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070030`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070014L`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C0700[13]4`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070044`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080010`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080034`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080014`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C07008`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C10105`),
		regexp.MustCompile(`(?i)(?:Nomi[ _])?(C0(?:700(?:[0235]|2HD)|7850|9600)|C1010[0-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Nomi[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:Nomu[ _-](?:T18|S30mini|S10)|(?:V1600S|S10 PRO|S50_Pro)|LMCV1|Xeno V1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]T18(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]s10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]S30mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMCV1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S([15]0)[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1600S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Xeno V1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NT-TP10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nos (?:FIVE|NOVU|NEVA|Roya)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS FIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NEVA 80(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS Roya(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A063)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NS(?:[356]|500[2-68]|5511|5502)|NS 5511)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NS 5511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NS[0-9]{1,4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NWX-40F171MSY|NVX-32H219MSY|NVX-43U329MSY|NVX-39H211MSY|NWX-43F149MSYv?|NWX-24H121MSY|NWX-32H171MSY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Novey (L2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO \[Reloaded\](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TM800A620M|TM101A620M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nubia[ _]|(?:NX(?:403A|404H|406E|40[X2]|503A|50[5678]J|51[0123]J|521J|523J_V1|529Jq?|5[345]1J|5[48]9J|569[HJ]|5[67]3J|575J|59[157]J|60[1689]J|61[12679]J|62[79]J|65[19]J|6[126]9J|66[67]J|679[JS]|70[129]J|71[12]J|729J|709S|907J))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NX679[JS]`),
		regexp.MustCompile(`(?i)NX40[X2]`),
		regexp.MustCompile(`(?i)NX(403[AE]|406E|404H)`),
		regexp.MustCompile(`(?i)(NX5[12]1J|Nubia Z9 mini)`),
		regexp.MustCompile(`(?i)(NX510J|Nubia Z9 Max)`),
		regexp.MustCompile(`(?i)(?:NX549J|Nubia Z11 mini S)`),
		regexp.MustCompile(`(?i)(?:NX529Jq?|Nubia Z11 mini)`),
		regexp.MustCompile(`(?i)NX569[HJ]`),
		regexp.MustCompile(`(?i)NX6(?:08|17)J`),
		regexp.MustCompile(`(?i)Nubia[_ ]([^;)/]+)( build|[;)])`),
		regexp.MustCompile(`(?i)Nuvo[_ ](NS35|Blue ND40|Green[_ ]ND[_ ]45)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nuvo[_ ](NS35)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blue (ND40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Green[_ ]ND[_ ]45(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NVIDIA|SHIELD|Tegra(Note-P1640| Note 7)|wx_na_wf|wx_un_do`),
		regexp.MustCompile(`(?i)wx_na_wf|wx_un_do`),
		regexp.MustCompile(`(?i)(SHIELD Tablet(?: K1)?|Tegra Note 7)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)SHIELD Andr[o0]id TV`),
		regexp.MustCompile(`(?i)O\+[ _](Presto 700 LTE|FAB GO|360|8\.(?:3[178]z|[15]2|37y|3[38]|9[12378]|1[75]|6)|Air|Grande|Crunch|Ultra|Xfinit|Upsized|Venti|EVO 4G|Sonic|360[ _]ALPHA[ _]PLUS[ _]2\.0|360[ _]HD[ _]2\.0|Stream HDTV)`),
		regexp.MustCompile(`(?i)O\+[ _](Presto 700 LTE|Grande|Crunch|Ultra 2.0|Xfinit|Ultra Lite|Ultra|Sonic|Upsized|Venti 4G|EVO 4G|8\.(?:3[178]z|37y|3[38]|[15]2|9[12378]|1[75]|6))`),
		regexp.MustCompile(`(?i)O\+_AIR`),
		regexp.MustCompile(`(?i)O\+[ _]360[ _]HD[ _]2\.0`),
		regexp.MustCompile(`(?i)O\+[ _]360[ _]HD`),
		regexp.MustCompile(`(?i)O\+[ _]360[ _]ALPHA[ _]PLUS[ _]2\.0`),
		regexp.MustCompile(`(?i)O\+[ _]360 ALPHA Plus`),
		regexp.MustCompile(`(?i)O\+[ _]360 ALPHA`),
		regexp.MustCompile(`(?i)O\+[ _]360`),
		regexp.MustCompile(`(?i)O\+ Stream HDTV`),
		regexp.MustCompile(`(?i)O\+ FAB GO`),
		regexp.MustCompile(`(?i)Xda|O2[ \-]|COCOON`),
		regexp.MustCompile(`(?i)(Xda[ _][a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(COCOON)`),
		regexp.MustCompile(`(?i)O2-(X[12]i|X4)`),
		regexp.MustCompile(`(?i)O2 ([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)O2-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(TEG9300)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OINOM[_ ](V9D|V7H|V[679])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GEN-10|GT1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OKWU SIGMA|PI[_ ]Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PI[_ ]Plus`),
		regexp.MustCompile(`(?i)OLTO-(43ST20U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OMIX[ _]|(?:X600 NFC|Android 11;(?: [\w-]+;)? X400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X(\d*)`),
		regexp.MustCompile(`(?i)(ONA19TB00[327]|10000356[12]|10000520[6-9]|O8HD|100011886A|10001188[56]|100015685-[AE]|100026191|100043279|100044018G|10007148[1356]|TBBVNC10000520[78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KON_TIKI(2)?|Nova3Color|Lomonosov|Poke2Color|NovaAirC|NoteAir2P?|LIVINGSTONE2|MC_FAUST[23]|DARWIN9|MC_DARWIN[678]|MC_GAMA4|MC_Cristo4|MC_NovaPro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KON_TIKI(2)?`),
		regexp.MustCompile(`(?i)MC_FAUST([23])`),
		regexp.MustCompile(`(?i)(?:MC_)?DARWIN([6789])`),
		regexp.MustCompile(`(?i)(?:OB-)?OPPO[ _]?([a-z0-9]+)|N1T|R8001|R820[16]|A101OP|OPG0[1-4]|A00[12]OP|(?:X90[07][0679]|U70[57]T?|X909T?|R(?:10[01]1|2001|201[07]|6007|7005|7007|80[13579]|81[13579]|82[01379]|83[013]|800[067]|8015|810[679]|811[13]|820[057]|15 Neo)[KLSTW]?|N520[79]|N5117|A33[wf]|A33fw|A37fw?|PAAM00|PAAT00|PAC[TM]00|R7kf|R7plus[fmt]?|A1601|CPH[0-9]{4}|CPH19(69|79|23|1[179])|PB(A[TM]00|CT10|BT30|CM[13]0|[FD]M00)|P(E[RFHG]M\d{2}|E[GH]T\d{2}|DAM10|ADM00|AF[TM]00|ADT00|AHM00|BBM[03]0|BBT00|BDT00|BFT00|[CB]E[MT]00|CA[MT]00|C[CDG]M00|CA[MT]10|[CD]PM00|CRM00|CDT00|CD[TM]10|CHM[013]0|CKM[08]0|CLM[15]0|DEM[13]0|DHM00|D[RK][TM]00|DPT00|DB[TM]00|DCM00|[CD]NM00|DVM00|DY[TM][12]0|DNT00|EA[TM]00|CRT01|EDM00)|PFDM00|PEG[MT]10|PEM[MT][02]0|PDCT00|PDET10|PDS[TM]00|PEC[MT]30|PE[QYPEXNLU]M00|PCHT30|PCRT00|PFGM00|PF[VU]M10|A102OP|PFCM00|PFJM10|PGCM10|PECM20|PDAT10|A103OP|PCCT00|PFTM[12]0|PFFM20|OW19W[123]|OW20W1|PGJM10|PGAM10|PF[EF]M10|Reno[45] Z 5G|Reno5 Pro 5G|Reno[56] 5G|Find X[23]|Find N| R7sf| 1201|[56].*; (?:R7[gf])|OPD210[12]A?|OPD2201|PFZM10|PGIM10|A1603|A201OP|PESM10|PGBM10|PHA120|PGGM10|PHM110|PG[WX]110|PGU110|PHJ110|PCCM40|PHQ110|CHP1723|PGT110|PGEM10|RX17Neo|R15 Dream Mirror|R9 Plustm A|PGFM10|Reno5 K 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCHM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHQ110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCHT30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2083|CPH2077)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2179)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2271)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2185)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCHM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1923(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1925(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH22(?:69|75)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(CPH1837|PAD[TM]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A37f(w)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A37f(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PESM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH20(?:81|73|31|15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2137(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH18(?:0[35]|53)|PBBM30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1809|PBA[TM]00|PBBT30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH19(?:3[13]|43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEC[MT]30|PECM20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDVM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEFM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDA[TM]10|CPH2069|CPH2061)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH(?:2127|213[19])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2135(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2321(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2195|OPG02|CPH2303)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2239|CPH2241)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2273(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEM[MT][02]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2325(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A102OP|CPH2309)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH170[15]|CPH2407)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PFTM20|CPH2387`),
		regexp.MustCompile(`(?i)CPH19(?:09|1[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH190[15]|PBF[TM]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1717(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDY[TM]20|CPH2067)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH(?:2161|2099)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2219(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2263(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDY[TM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1715)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2339|CPH2385)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2495|CPH2483)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2565`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A79kt`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2473`),
		regexp.MustCompile(`(?i)PCD[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PBBT00|PBBM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDBM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1729(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1827(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PCA[TM]10|CPH193[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CPH1937|CPH1941|PCHM30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCPM00|CPH20[02]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2059(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDK[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEH[MT]00|CPH212[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PFGM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2203|CPH2333)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2197)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2365|PELM00`),
		regexp.MustCompile(`(?i)PCE[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1903(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2455|CPH2461`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X9009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH191[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH19(?:69|87)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2095`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2119)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A1601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1613(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH172[37]|CHP1723)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1725(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH18(?:[15]9|21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1825|CPH1881)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1823(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2223(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2285|F19 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2213(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X909T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R827T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X907[067](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X900[067](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PEUM00`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?Find N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGU110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2437|PGT110)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R815[TW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8015(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R821T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?U707T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?U705T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH187[15]|PAF[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PAHM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDE[TM]10|CPH2023)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2005|Find X2 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDEM30|OPG01|CPH2025|Find X2 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEDM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Find X3 Neo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEEM00|CPH2173|OPG03|Find X3 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Find X3 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2307|PFFM10`),
		regexp.MustCompile(`(?i)CPH2305|PFEM10|PFFM20`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R1011 Build`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PBC(?:M30|T10))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1955(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PCNM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PCLM50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PERM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGCM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGGM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PERM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2373`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PGJM10|CPH2337)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGIM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?N5117(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?N520[79](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R831T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R831K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:R831[SL]|1201)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A33[wf](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A33fw(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8113(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R11 Plusk?t?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R8001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R820[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1721|R11s Plust?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1719|R11st?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1835|PAC[TM]00|PAAM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH183[13]|PAAT00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PBCM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1879|PBE[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1893)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1877|PBD[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R800[07](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R810[679](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7kf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7sPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7sf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7[gf](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7Plus[mt]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7Plusf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:X9079|R9 Plustm A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1607|R9sk)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1611|R9s Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1917|PCA[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1983(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1919|PCCM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCKM00|CPH1907)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1989(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCKM80|CPH1945|CPH1951)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2043|PDCT00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2013|A002OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDCM00|A001OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCR[MT]00|CPH203[567]|CPH2009)`),
		regexp.MustCompile(`(?i)PCRT01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2113(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2125(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDP[TM]00|CPH2091)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEA[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDN[TM]00|CPH2089)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2065|Reno4 Z 5G`),
		regexp.MustCompile(`(?i)CPH2209(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2159(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2199|A10[13]OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2205(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEG[MT]00|CPH2145|Reno5 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEG[MT]10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2217(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2211|Reno5 Z 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDS[TM]00|CPH220[17]|Reno5 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDR[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1921|PCCM40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2235|PEQM00|CPH2251|Reno6 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2237(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEPM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH224[79](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PENM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PFJM10|CPH2371|CPH2363`),
		regexp.MustCompile(`(?i)CPH2353|OPG04|A201OP`),
		regexp.MustCompile(`(?i)(?:PFDM00|CPH2293)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH235[79]|PGAM10`),
		regexp.MustCompile(`(?i)CPH2481|CPH2505`),
		regexp.MustCompile(`(?i)(?:PEYM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEXM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCLM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDHM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCGM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1979|PCD[TM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A59st(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPD2102A?`),
		regexp.MustCompile(`(?i)OW19W[13]`),
		regexp.MustCompile(`(?i)N1T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R([0-9]{3,4}[KSTW]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CPH[0-9]{4})`),
		regexp.MustCompile(`(?i)(?:OB-)?OPPO[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:S60Pro|android 12;(?: [\w-]+;)? (?:C80|Pad 10))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (C80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OTTO (CR05)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OUJIA(?:2018)?[-_ ]S20`),
		regexp.MustCompile(`(?i)OUJIA[ _](S10|S8|S11|T50|S2[79]|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OYSIN[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Apex(?:[123])|CC1 PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CC1) PRO`),
		regexp.MustCompile(`(?i)Apex([123])`),
		regexp.MustCompile(`(?i)(Tab_A6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OBA_?(?:SMART_3|Conecta_Max|Conecta_4G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBA_(Conecta_(?:Max|4G))`),
		regexp.MustCompile(`(?i)OBER[_ ](Primo E8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Obi[ _-]|(?:(?:SJ1\.5|SJ2\.6|S(400|452\+|45[13]|50[127]|503\+?|520|55[01])|falcon)|SJ1-5|SJ[23]\.2| SF1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SJ(\d)[.-](\d)`),
		regexp.MustCompile(`(?i)(?:Obi_)?S400`),
		regexp.MustCompile(`(?i)(?:Obi_)?S451|falcon`),
		regexp.MustCompile(`(?i)(?:Obi_)?S452\+`),
		regexp.MustCompile(`(?i)(?:Obi_)?S453`),
		regexp.MustCompile(`(?i)(?:Obi[_ ])?(SF1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Obi_)?S501`),
		regexp.MustCompile(`(?i)(?:Obi_)?S502`),
		regexp.MustCompile(`(?i)(?:Obi_)?S503\+`),
		regexp.MustCompile(`(?i)(?:Obi_)?S503`),
		regexp.MustCompile(`(?i)(?:Obi_)?S507`),
		regexp.MustCompile(`(?i)(?:Obi_)?S520`),
		regexp.MustCompile(`(?i)(?:Obi_)?S550`),
		regexp.MustCompile(`(?i)(?:Obi_)?S551`),
		regexp.MustCompile(`(?i)(?:Obi_)?S454`),
		regexp.MustCompile(`(?i)Obi[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Obi[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:FIRE_V[78]|POMELO-MAX\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIRE_V([78])`),
		regexp.MustCompile(`(?i)POMELO-MAX\+`),
		regexp.MustCompile(`(?i)ODYS[ _-]|IEOS[_ ]([^/;]+)|NOON(?:_PRO)? Build|SPACE10_(?:PLUS|PRO)_3G|THOR_?10|TAO_X10|RAPID_?(?:10|7)_?LTE|MAVEN_?10_|CONNECT[78]|ELEMENT10_PLUS_3G|XELIO[_0-9P]|PACE_10_LTE|(?:ADM816HC|ADM8000KP|NEO6_LTE|EOS10|AEON|FALCON_10_PLUS_3G|SPACE_ONE10|FUSION|THANOS_10|MAVEN_X10_HD(?:_LTE)?|JUNIOR_8_PRO|JuniorT8Pro|(?:NOVA|PYRO)_X?7_PLUS_3G|UNO_X8|MAVEN_[GT]10(?:_pro)?|MAVEN_7_PLUS|SLADE_X55|XELIO_PRO_10_LTE|GOAL_10_PLUS_3G|NOTOSplus3G|PACE ?10|Titan_10_LTE|PEDI_PLUS_W|NoteTab_Pro|UNO_X10|NERON)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XELIO[_ ]HD10[_ ]LTE`),
		regexp.MustCompile(`(?i)XELIO[_ ](HD10|A10)`),
		regexp.MustCompile(`(?i)MAVEN_?10_PRO_PLUS_3G`),
		regexp.MustCompile(`(?i)MAVEN_?10_?PLUS`),
		regexp.MustCompile(`(?i)MAVEN_?10_?PRO`),
		regexp.MustCompile(`(?i)MAVEN_?10_?HD`),
		regexp.MustCompile(`(?i)RAPID_?7_?LTE`),
		regexp.MustCompile(`(?i)RAPID_?10_?LTE`),
		regexp.MustCompile(`(?i)THOR_?10 Build`),
		regexp.MustCompile(`(?i)PACE ?10`),
		regexp.MustCompile(`(?i)UNO[_ ]X(8|10)`),
		regexp.MustCompile(`(?i)THOR_?10_PLUS_3G`),
		regexp.MustCompile(`(?i)IEOS[_ ]QUAD[_ ]W`),
		regexp.MustCompile(`(?i)IEOS[_ ]NEXT[_ ]10`),
		regexp.MustCompile(`(?i)IEOS[_ ]QUAD[_ ]PRO`),
		regexp.MustCompile(`(?i)NEO6[_ ]LTE`),
		regexp.MustCompile(`(?i)IEOS[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:ODYS[ _-])?NOON Build`),
		regexp.MustCompile(`(?i)(?:ODYS[ _-])?NOON_PRO`),
		regexp.MustCompile(`(?i)Odys[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)AFTWI001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Okapia|Signature (?:L|Pro|Touch)`),
		regexp.MustCompile(`(?i)Signature (L|Pro|Touch)`),
		regexp.MustCompile(`(?i)Okapia X1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Okapia[_ ]Mirage(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OK-(?:LS[12]|smart11|LX[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OK-(LS[12]|LX[56])`),
		regexp.MustCompile(`(?i)Olax Prime 12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Olkya (Liger 71G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ollee008twoa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TREK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TREK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onda|(?:(?:V820w|V891[w]?|V919(?: 3G)? Air)[ _-]DualOS|(?:V919 4G Air|V989 Air|V972) Core[48]|T2101L2B1C| V10 4G|OBOOK20[_ ]PLUS|OBOOK (?:20 SE|20 DualOS|20 PLUS(?: DUALOS)?)|OBOOK10 SE|V10_4G|V919 Air CH DualOS| T9S|V116w-DualOS|V80[ _]SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?: T9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONDA[ _]MID`),
		regexp.MustCompile(`(?i)V820w[ _-]DualOS`),
		regexp.MustCompile(`(?i)V891W[ _-]DualOS`),
		regexp.MustCompile(`(?i)V891[ _-]DualOS`),
		regexp.MustCompile(`(?i)V919 3G Air[ _-]DualOS`),
		regexp.MustCompile(`(?i)V919 Air[ _-]DualOS`),
		regexp.MustCompile(`(?i)T2101L2B1C|OBOOK 20 PLUS DUALOS`),
		regexp.MustCompile(`(?i)OBOOK[_ ]?20[_ ]PLUS`),
		regexp.MustCompile(`(?i) V10 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V80[ _]SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK 20 DualOS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK 20 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK10 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V10_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([a-z0-9]+)[ _]Onda`),
		regexp.MustCompile(`(?i)Onda ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)X-music II pro|X-music (?:S|Ⅲ|III)`),
		regexp.MustCompile(`(?i)X-music (?:Ⅲ|III)`),
		regexp.MustCompile(`(?i)X-music (S)`),
		regexp.MustCompile(`(?i)OneLern(DB\d{3})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:du_)?ONEPLUS|(?:PGKM10|CPH2493|CPH244[79]|CPH240[19]|CPH24[12]3|CPH246[579]|CPH2487|CPH241[157]|CPH2419|CPH2459|CPH2399|CPH2381|A0001|A200[135]|AC200[13]|A300[03]|A3010|A5000|A600[03]|A601[03]|BE201[1235]|BE202[5689]|E100[135]|GM191[03517]|GM190[0135]|GM192[05]|HD191[0137]|HD190[01357]|HD1925|IN201[013579]|IN202[0135]|KB200[01357]|LE211[01357]|LE212[035]|GN2200|Nord N10 5G|LE210[01]|LE212[17]|DE211[78]|DN210[13]|EB210[13]|MT211[01]|IV2201|NE221[01357]|PGZ110|PGP110|PHK110|PHB110|PHP110)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:CPH244[79]|PHB110)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2487(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGKM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHK110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHP110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGP110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGZ110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC200[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2399|CPH2401)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EB210[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH(?:2381|2409)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH246[57](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE201[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DE211[78](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GN2200|CPH2459)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2469(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BE202[69]|Nord N10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DN210[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IV2201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN202[0135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KB2000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OnePlus 8 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IN201[01357]|OnePlus 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE211[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MT211[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE210[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2423(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2411(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH241[3579](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE212[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NE2210(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NE221[1357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GM191[01357]|OnePlus 7 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GM190[0135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HD190[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HD191[0137]|OnePlus 7T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HD1925|GM192[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KB200[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KB2007|OnePlus ?8TMO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A200[135]|OnePlus2`),
		regexp.MustCompile(`(?i)E100[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A3010|OnePlus3T`),
		regexp.MustCompile(`(?i)A300[03]|OnePlus3`),
		regexp.MustCompile(`(?i)A5010|OnePlus[ ]?5T`),
		regexp.MustCompile(`(?i)A5000|OnePlus5`),
		regexp.MustCompile(`(?i)A600[03]|OnePlus6`),
		regexp.MustCompile(`(?i)A601[03](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:du_)?ONEPLUS[ _]?([^;/,)(]+)(?: Build|[;,)])`),
		regexp.MustCompile(`(?i)(?:ONIX S405|AT101-1116|ONIX_8_3G_01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT101-1116)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONIX_8_3G_01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S405)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DP-CMX1|TA2C-M8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA2C-M8)`),
		regexp.MustCompile(`(?i)(DP-CMX1)`),
		regexp.MustCompile(`(?i)Opel ?Mobile|(?:OpelMobile_Smart(?:JX|X1)|Easy_Smart_2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Openbox (?:A[34](?: (?:Pro|Lite))?)|AS1_HD|AS_?4K[_-](?:CI(?:_PRO|_Lite)?(?:_PLUS)?|PLUS|2X)|AS_?4K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Openbox (A[34](?: (?:Pro|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS_?4K_CI_PRO`),
		regexp.MustCompile(`(?i)AS_?4K[_-](2X|CI)`),
		regexp.MustCompile(`(?i)AS_?4K[_-]PLUS`),
		regexp.MustCompile(`(?i)AS_?4K`),
		regexp.MustCompile(`(?i)(?:(?:Sigma|Beeta)_4_0|Active 5\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active 5\.0`),
		regexp.MustCompile(`(?i)Opsson|IUSAI`),
		regexp.MustCompile(`(?i)IUSAI[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)IUSAI[ _]([^/;\)]+)[/;\)]`),
		regexp.MustCompile(`(?i)Opsson[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:Opsson-)?Opsson[ -_]([^/;]+)/`),
		regexp.MustCompile(`(?i)Optoma[-_ ]`),
		regexp.MustCompile(`(?i)SPV[ \-]?([a-z0-9]+)|Orange[ _-]([^/;]+)( Build|\))|SC/IHD92|Nura 2|FunTab ([^/;]+) Build|Orange Mahpee|Dive 50|MouveTab7WIFI`),
		regexp.MustCompile(`(?i)FunTab ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Orange[ _-](Rise)(3[12]|5[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Orange[ _-])?Dive ?(\d+) Dual(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Orange[ _-])?Dive ?(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Orange[ _-](Daytona|Dublin|Fova|Gova|Hi 4G|Hiro|Kivo|Monte Carlo|Neva 80|Neva play|Nura|Reyo|Rise[_ ](3[034]|40|5[345])|Rono|Roya|San Francisco|Tactile internet 2|Tado|Yomi|Yumo|Zali|Mahpee|Neva leaf|Sanza touch|Viking L508|Zilo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPV[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:RC(?:2200|501|545|555|608)L|R678EL|R8L5T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(OT-DVB\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Orbsmart[_ ]`),
		regexp.MustCompile(`(?i)Orbsmart[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(LeNumero[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ORION, ([a-z0-9_ \-]+), (?:wired|wireless)|CRANE-EVB`),
		regexp.MustCompile(`(?i)ORION, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(CRANE-EVB)`),
		regexp.MustCompile(`(?i)OUKI|OK[AU][0-9]+[a-z]* Build|OKP6 Pro`),
		regexp.MustCompile(`(?i)OUKI[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)([^;/)]+) Build/OUKI`),
		regexp.MustCompile(`(?i)OUKI[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(OK[AU][0-9]+[a-z]*) Build`),
		regexp.MustCompile(`(?i)OU[Kc]ITEL|(?:Android 10;(?: [\w-]+;)? (?:C19|C22)|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:C11|U23)|Android 11(?:[\d.]*);(?: [\w-]+;)? (?:C25)|Android 12(?:[\d.]*);(?: [\w-]+;)? (?:C32)|Android 7(?:[\d.]*);(?: [\w-]+;)? (?:U1[78]|U22)|(?:C1[569]|K10000|K[46]000)(?:[ _]Pro)|K4000Pro|C1[18]_Pro|C1[0237] Pro|C2[13] Pro|C12 Plus|[UK]15 Pro|K15_Plus|U16 Max|C11_F|U7 Max|U7 Plus|U11[_ ]Plus|U20_Plus|OK6000 Plus|WP5000|WP[58] Pro|K[46]000[ _](?:Plus|Lite)|K9 Pro|Y4800|K10000|K7 Power|K[4-8]000| RT[123]| WP(?:[15-79]|1[02356789]|2[0123])|K[37]_Pro|K13_Pro|U25_Pro|OKT1|UniverseTap)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C1[0-9]|C2[13]|K10000|K[46]000|WP[258]|WP1[28]|WP20|U[12]5|K[379]|K1[35])[ _]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OUKITEL K([37])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K10000|U16|U7)[ _]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U20|K[46]000|U7|U11|OK6000|K15|C12)[_ ]?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K4000)[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K10000)[_ ]Mix(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K7 Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UniverseTap(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Oukitel-)?(Y4800|K10000|K[4-8]000|WP5000|[CU]2|U1[078]|U2[23]|C1[19]|C[23]2|C3|WP15 S|C25)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (RT[123]|OKT1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OUKITEL)? (WP\d+|C11_F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OUKITEL; ([^;]+);`),
		regexp.MustCompile(`(?i)OV-[a-z]+(?:[^;(/]*)[();/ ]|Qualcore 10(?:10|27)|Livecore7032|Vertis 5021 Aim|Vertis 4004 You|OV1027[34]G`),
		regexp.MustCompile(`(?i)OV-Vertis[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)OV(\d+)([34])G`),
		regexp.MustCompile(`(?i)(?:OV-)?Qualcore[-_ ](\d+)[-_ ]([34])G`),
		regexp.MustCompile(`(?i)(OV-[a-z]+(?:[^/();]+))(?: Build|[();])`),
		regexp.MustCompile(`(?i)(?:OWWO[ _]?(?:[1457]S|Q[78])|CARNIVAL B5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OWWO[ _]?([1457]S|Q[78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CARNIVAL B5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Oysters|T84ERI[ _]3G|T72HM(s_)?3G|T102MS_3G|T102ER3G|T72ER3G|(T74HMi|T84Bi)[_ ]4G|T74MR4G|T74RD|T84Ni[_ ][34]G|Pacific(?:[ ]?800i|E)|T104B_[34]G|IndianV|T72HA_3G|T12V? 3G|T74D_3G|T74N_3G|T74SC_3G|T74Mai_3G|T74MRi3G|T104MBi_3G|T104SCi_3G|T104ER4G|Arctic450|Atlantic(?:4G|454|[EV])|AntarcticE|Life4G|T7V 3G|Pacific(?:VS?|I?4G|454)`),
		regexp.MustCompile(`(?i)Pacific[ ]?800i`),
		regexp.MustCompile(`(?i)(?:Oysters[_ ])?Pacific(VS?|I?4G|454)`),
		regexp.MustCompile(`(?i)Atlantic(454|[EV]|4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Arctic(450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AntarcticE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Oysters ((?:Arctic|Indian|Atlantic|Pacific)[^/;]+) Build`),
		regexp.MustCompile(`(?i)(T84ERI[ _]3G|T72HM(s_)?3G|(?:(T74HMi|T84Bi)[_ ]4G)|T84Ni[_ ][34]G)`),
		regexp.MustCompile(`(?i)(T74MR|T102MS|T104B|T74SC|T74[DN]|T72HA|T102ER|T72ER|T104SCi|T104MBi|T104ER|T7V|T12V?|T74MRi)[ _]?([34]G)`),
		regexp.MustCompile(`(?i)(T74RD)`),
		regexp.MustCompile(`(?i)Oysters ([^/;]+)( Build|\))`),
		regexp.MustCompile(`(?i)OYYUT11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ozone HD|OzoneHD[ _](T2 WiFi|4K(?: TV)?|Fun)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-0[143]P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-04P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-03P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-01P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAPYRE[_ ]`),
		regexp.MustCompile(`(?i)PAPYRE[_ ]pad_7.1`),
		regexp.MustCompile(`(?i)Art-PCB-V116|Bee-PCB-V216|Clap-PCB-I316|PCB-T(?:103|715|750)|Kova[ _-]PCB-\w+|Kova_Plus_PCB_T735`),
		regexp.MustCompile(`(?i)PCB-T(715|750)`),
		regexp.MustCompile(`(?i)Kova[ _-]PCB-T730`),
		regexp.MustCompile(`(?i)PH4001|PCD[ _](?:PL5507|PH4002|PH3501|E400)`),
		regexp.MustCompile(`(?i)(?:PCD[ _])?(P[HL]\d{4}|E400)`),
		regexp.MustCompile(`(?i)PCD[ ]?50[689]|PL620(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCD[ ]?(50[689])`),
		regexp.MustCompile(`(?i)(PL620)`),
		regexp.MustCompile(`(?i)PINE ([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)PIRANHA[_ ]|(?:Ultra 4 Tab 9.0|Ultra 5 Tab White)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro II Tab 7.0`),
		regexp.MustCompile(`(?i)Ultra 4 Tab 9.0`),
		regexp.MustCompile(`(?i)(?:POCO[ _](?:X[2-5](?:_SN)?|F2 PRO|M[3245]|M5s|F[35]|F4(?: GT)?|C40|C3)|M2010J19(?:C[GI]|GC)|M2007J20C[ITG]|M2012K11AG|M2006C3MI|M2004J19PI|M2102J20S[GI]|M2103K19P[IGY]|21091116AG|21061110AG|M2104K10I|211033MI|2201117P[GI]|camellian?|2201116P[GI]|21121210G|22031116AI|22021211R[GI]|2204121(?:6U?G|9P[GI])|220333QPG|22071219C[GI]|2207117BPG|22101320[GI]|22111317P[GI]|23013PC75G|23049PCD8G|2305EPCC4G|22127PC95I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCO X2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K11AG|POCO F3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23013PC75G|POCO F5 Pro`),
		regexp.MustCompile(`(?i)23049PCD8G|POCO F5`),
		regexp.MustCompile(`(?i)M2004J19PI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2103K19P[IGY]|M3 Pro 5G|camellian?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCO M([23]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116AG|M4 Pro 5G`),
		regexp.MustCompile(`(?i)22041219P[IG]|POCO M4 5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)22071219C[IG]|POCO M5(?: Build|[;)])`),
		regexp.MustCompile(`(?i)2207117BPG|POCO M5s`),
		regexp.MustCompile(`(?i)2201117P[GI]|POCO M4 Pro`),
		regexp.MustCompile(`(?i)(?:M2010J19C[GI]|POCO M3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J20C[GT]|POCO X3 NFC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2102J20S[GI]|POCO X3 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061110AG|POCO X3 GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J20CI|POCO X3(?:_SN)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041216G|POCO X4 GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22111317P[GI]|POCO X5 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041216UG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101320[GI]|POCO X5 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201116P[GI]|POCO X4 Pro 5G`),
		regexp.MustCompile(`(?i)(?:M2104K10I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21121210G|POCO F4 GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22021211R[GI]|POCO F4`),
		regexp.MustCompile(`(?i)(?:M2006C3MI|POCO C3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:211033MI|22031116AI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:220333QPG|POCO C40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCO F2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X5 GT PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POPTEL|P9000_MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P9000_MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POPTEL K1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KING 7S?)`),
		regexp.MustCompile(`(?i)PRIME (O8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PULID[ _]|F1[01357]\+? Build`),
		regexp.MustCompile(`(?i)F(1[01357]\+?) Build`),
		regexp.MustCompile(`(?i)PULID[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)PULID[ _]([a-z0-9_]+)\)`),
		regexp.MustCompile(`(?i)(PB1009|M10[45]00|M7500|M7600-D|DAYTONA-G12|MONZA-T7|SILVERSTONE-T10|EasyNote TV11HC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PB1009|M10[45]00|M7500|M7600-D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Pre|Pixi)/(\d+)\.(\d+)|Palm|Treo|Xiino|PVG100(?:E_RU|E)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:Pre|Pixi))/(\d+\.\d+)`),
		regexp.MustCompile(`(?i)Palm(?:[ \-])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Treo([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Xiino|Palmscape`),
		regexp.MustCompile(`(?i)Panasonic|PANATV[0-9]+|Viera/|(?:P902i|P-0[28]D|FZ-B2D|FZ-[NX]1|FZ-A2A|DMC-CM1|P-01[JK]|P-0[23]E|P55 Max)(?:[);/ ]|$)|Eluga[ _]|P55 Novo 4G`),
		regexp.MustCompile(`(?i)P-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P-03E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eluga[ _]I7(?:_EE)?`),
		regexp.MustCompile(`(?i)(?:Panasonic_)?Eluga[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Panasonic_)?Eluga[ _-]([^);/]+)[;/)]`),
		regexp.MustCompile(`(?i)(DMC-CM1)`),
		regexp.MustCompile(`(?i)P-02D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FZ-[XN]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FZ-(B2D|A2A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P(\d*) NXT`),
		regexp.MustCompile(`(?i)P902i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PANATV[0-9]+|Viera/`),
		regexp.MustCompile(`(?i)(43D1200|(?:32|43)D1270|32D1280)`),
		regexp.MustCompile(`(?i)PANASONIC, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Panasonic[ _\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 (P[a-z0-9]+)`),
		regexp.MustCompile(`(?i)P-08D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Boom P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Panoramic[_ ](FQ-058/2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pantech|P[GN]-|PT-[a-z0-9]{3,}|TX[T]?[0-9]+|IM-[a-z0-9]+(?:[);/ ]|$)|ADR910L`),
		regexp.MustCompile(`(?i)Pantech[ -]?(P4100)`),
		regexp.MustCompile(`(?i)Pantech[ -]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Pantech_([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(P[GTN]-[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(TX[T]?[0-9]+) Pro`),
		regexp.MustCompile(`(?i)(TX[T]?[0-9]+)`),
		regexp.MustCompile(`(?i)(IM-[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Xplorer_2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EV1 PRO|Partner[_ ]Evolution(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Partner[_ ]Evolution`),
		regexp.MustCompile(`(?i)Pelitt[ _]`),
		regexp.MustCompile(`(?i)Pendoo|A5X MAX(?:[\.-]\w+)?\.01\.d4|(?:PNDP60L10BLK|PNDP60M7PUR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pendoo ?(T95Z|X10) PLUS`),
		regexp.MustCompile(`(?i)Pendoo ?X8PRO+`),
		regexp.MustCompile(`(?i)Pendoo[ \.]?(X9[29]|T95)`),
		regexp.MustCompile(`(?i)A5X MAX(?:[\.-]\w+)?\.01\.d4`),
		regexp.MustCompile(`(?i)(PNDP60L10BLK|PNDP60M7PUR)`),
		regexp.MustCompile(`(?i)Pentagram|Quadra|Monster X5`),
		regexp.MustCompile(`(?i)(?:PENTAGRAM[_ ])?EON[_ ]PRIX`),
		regexp.MustCompile(`(?i)Quadra 7(?: UltraSlim)?`),
		regexp.MustCompile(`(?i)Monster X5?`),
		regexp.MustCompile(`(?i)Quadra ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)Pentagram ?TAB ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)Pentagram ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)(PHICOMM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C630 \(CLUE L\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E653\(ENERGY L\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHICOMM ENERGY 3\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLUE (2S|M|C230)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHILCO |(PCS0[12]|PH350B|PTB[78]R|PTB7PAP_PTB7PAB_PTB7PAR|Hit Max|Hit P1[023]|HIT P8|HIT P10a|TP7A4|TP10A1I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hit (P1[023]|P8)`),
		regexp.MustCompile(`(?i)(PCS0[12]|PH350B|Hit Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PTB[78]R|TP7A4|TP10A1I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHILCO Android TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PTB7PAP_PTB7PAB_PTB7PAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Philips|NETTV/|2020/2021 UHD Android|10BDL4151T|Xenium S[25]66|(?:PI3210G|TPM1[79]1E|70PUH6774_96|QM152E|QM16[134]E|TLE(?:821L|722G)|AND1E|S397|W5510|S410J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(10BDL4151T)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?Xenium[ _](S[25]66|V787)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?(X818|X588)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?(S397|W5510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AND1E(?: TV)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PI3210G)`),
		regexp.MustCompile(`(?i)(TPM1[79]1E)`),
		regexp.MustCompile(`(?i)QM152E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QM16[134]E)`),
		regexp.MustCompile(`(?i)(70PUH6774)_96`),
		regexp.MustCompile(`(?i)(202[01])/(?:20)?(2[12]) (?:Philips )?UHD Android`),
		regexp.MustCompile(`(?i)(TLE821L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TLE722G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S410J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Philips, BDP([0-9]{4})`),
		regexp.MustCompile(`(?i)Philips, ([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)(NETTV/[0-9\.]{5})`),
		regexp.MustCompile(`(?i)Philips-FISIO ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Philips[ _-]?([a-z0-9\-@]+)`),
		regexp.MustCompile(`(?i)(?:PHONEMAX[_ ](?:Saturn(?:[_ ]X)?|Mars|Venus X)|Rocky 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Saturn[_ ]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Saturn(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Mars(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Venus X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rocky 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pipo[_ ]|PipoM9Pro`),
		regexp.MustCompile(`(?i)Pipo[_ ]([TP]9)`),
		regexp.MustCompile(`(?i)PIPO[_ ](X10|X9S)`),
		regexp.MustCompile(`(?i)Pico (G2 4K|Neo 3|4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pioneer|.*; R1 Build|(?:dvr700pi|XDP-300R|F9212[AB]|SDA-835TAB|SDA-80TAB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i).*; R1 Build`),
		regexp.MustCompile(`(?i)(XDP-300R)`),
		regexp.MustCompile(`(?i)(F9212[AB]|SDA-835TAB|SDA-80TAB)`),
		regexp.MustCompile(`(?i)Pioneer, ?([a-z0-9_ \-]+), ?(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Pioneer[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Pioneer[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)PIONEER COMPUTERS (DreamBook)`),
		regexp.MustCompile(`(?i)Infineum[_ ](Z4?5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixelphone S1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixus|(hiPower|Touch_7_3G|Ride[_ ][34]G|Play[ _]Three[ _]v(?:[234].0|3.1))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ride[_ ]([34])G`),
		regexp.MustCompile(`(?i)Play[ _]Three[ _]v([234].0|3.1)`),
		regexp.MustCompile(`(?i)Pixus[ _]Sprint`),
		regexp.MustCompile(`(?i)(?:Pixus_)?Touch[ _]7[ _]3G`),
		regexp.MustCompile(`(?i)Pixus[ _]hiMax`),
		regexp.MustCompile(`(?i)Pixus[ _]Blast`),
		regexp.MustCompile(`(?i)Pixus[ _]Joker`),
		regexp.MustCompile(`(?i)Pixus Blaze 10.1 3G`),
		regexp.MustCompile(`(?i)(?:Cosmo_Communicator|Gemini_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cosmo_Communicator)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Gemini_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PLT-[12]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOMO([0-9]|[ ]?mini[ ]?(?:S|3GS)?)`),
		regexp.MustCompile(`(?i)MOMO([0-9][^);/]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)PLUM[ _]|(?:Z51[89])(?:[);/]|$)`),
		regexp.MustCompile(`(?i)PS_TAB_(WB01)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Pluzz[_-](Z552|PL5[05]10|PL4010|PL501[46]|Elite_Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook[ _/]`),
		regexp.MustCompile(`(?i)A7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A10 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURFpad2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook SURFpad 3 \(([\d]+).([\d]+)["]?\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURFpad 4 ([LMS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook/(515|614|62[23467]|63[012]|64[01]|650|740|801|840|970)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POV_TV|POV_TAB|MOB-5045|TAB-P10232-3G`),
		regexp.MustCompile(`(?i)POV_TAB[_-]NAVI7[_-]3G[_-]M`),
		regexp.MustCompile(`(?i)POV_TAB-PROTAB25XXL8?`),
		regexp.MustCompile(`(?i)POV_TAB-PROTAB([a-z0-9]+)`),
		regexp.MustCompile(`(?i)POV_TAB-P?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Polar(?:_WK?)?[_ ](P32L32T2CSM|P24L51T2CSM|P40L33T2CSM|P43U51T2SCSM|P39L21T2CSM|P32L21T2SCSM|P65U51T2CSM|P42L21T2CSM|P50U51T2SCSM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PolarLine[_ ](?:W?K?[_ ])?(24PL51TC-SM|32PL1[34]TC-SM|40PL(?:52|11)TC-SM|55PU11TC-SM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Polaroid|POLPAROID|(?:PMID|MIDC)[0-9a-z]+(?:[);/ ]|$)|MID(?:1014|0714)|PRO[VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z])|(?:P(?:400[56]|4526|500[56]|502[56]|504[67]|552[56])A|P902/A900|PSPC(?:505|550|[MZL]20A0|K2[01]NA)|SIGMA 5|MIDI109PDE|MIDI156PDE|MIDB1048PHE|MIDS145PXE|MIDS747PX|MID4004JBL|MIDS185PR|PSPTD21NA|POMDTB00[56]|PSPCL30A0|PSN-H116|BDL0232PR|Mobility3G|BDL1064PR001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PSPC(505|550)`),
		regexp.MustCompile(`(?i)PRO4611(?:PR201)?`),
		regexp.MustCompile(`(?i)SIGMA 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO([VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z]))`),
		regexp.MustCompile(`(?i)POLAROID, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)MIDS185PR|POLPAROID PURE`),
		regexp.MustCompile(`(?i)(MID(?:1014|0714|S145PXE|S747PX|4004JBL|B1048PHE|I109PDE|I156PDE)|POMDTB00[56]|BDL0232PR|BDL1064PR001)`),
		regexp.MustCompile(`(?i)((?:PMID|MIDC)[0-9a-z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P902/A900)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Polestar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POLY ?PAD`),
		regexp.MustCompile(`(?i)POLY ?PAD[_ \.]([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POLY ?PAD[_\.]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)POLYTRON|W8480|W7430|PW1100S|W7550|W7531|W8570|R2401|R255B`),
		regexp.MustCompile(`(?i)POLYTRON[ _]R1500`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2402`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2403`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2406`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2407`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2452`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2457`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2501`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2507`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2509SE`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2509`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R250A`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2506`),
		regexp.MustCompile(`(?i)POLYTRON[ _-](?:R3450|W1400)`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R3500`),
		regexp.MustCompile(`(?i)POLYTRON[ _]L501`),
		regexp.MustCompile(`(?i)POLYTRON[ _]P520`),
		regexp.MustCompile(`(?i)POLYTRON[ _]P552`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G501`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G502`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G503`),
		regexp.MustCompile(`(?i)POLYTRON[_ ]?[ _]4G550`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G551`),
		regexp.MustCompile(`(?i)POLYTRON[ _]T7800`),
		regexp.MustCompile(`(?i)POLYTRON[ _]T7700`),
		regexp.MustCompile(`(?i)POMP[ _-]`),
		regexp.MustCompile(`(?i)POMP[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)POMP[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:YPY_S450|Twist 4(?: Fit|Pro)?|Twist 4G|T1085|Positivo (?:Q20|Slim)|M10 4G PRO X|UP 32|YOLO|Android 4([\d.]*);(?: [\w-]+;)? X400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Positivo (Q20|Slim)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 4 (Fit|Pro)`),
		regexp.MustCompile(`(?i)(?:T1060B|S455|Positivo (?:Twist|Ypy|Mini I)|Twist[ _](?:\(2018\)|2 (?:Fit|Pro)|Mini|Tab|Metal(?: 32GB)?|Max|XL|SE|[23SM])|KC770|G1101T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S455(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist \(2018\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Metal 32GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Metal(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist[ _]Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Fit(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist XL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Positivo )?Twist ([23SM])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Positivo )Mini I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T1060B|KC770|G1101T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Positivo Ypy (AB7F|AB10H|L1050E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Tab(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MAXI 20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AXE_II|186HS2080531|186HS1050531|186HS1050232|186FT1080231|185FT5050231|X70-2021|PREMIO[ _](?:S50|P420|P451)|Android 8(?:[\d.]*);(?: [\w-]+;)? Axe)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PREMIO[ _](S50|P420|P451)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prestigio 5500 DUO|(?:PMP|PAP|PMT|PSP|PGPS)[0-9]+[a-z0-9_]+(?:[);/ ]|$)|Muze C3|PTV50SS04X_CIS_BK|PTV32SS08Z|PTV40SS04Y_CIS_ML|PTV32SS04Z_CIS_(?:ML|BK)|SILVER POS|PAB4411`),
		regexp.MustCompile(`(?i)P[AS]P(5517|5503|550[578])DUO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAP(7500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Muze C3|PSP3504DUO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGPS7799CIS08GBPG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGPS7797(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PMT(3118|38[74]8|3[123]01|3[12]57|778[18]|4[789]91|5588|5718|5791|577[18]|4327|3768)[_ ]([34])G`),
		regexp.MustCompile(`(?i)PMT(1177|3208|3618|31[357]1|1157|1196|3[10]96|3[17]61|3407)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PMT(1107|3[456]37|3[34]27|3317|4638|4311|413[17]|411[178]|3771)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PMT(3231|37[01]8|4231|4667|38[3678]1)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PSP7546DUO([ _][A-Z]{2})?`),
		regexp.MustCompile(`(?i)PSP7610DUO([ _][A-Z]{2})?`),
		regexp.MustCompile(`(?i)PTV(\w+)_CIS_(ML|BK)`),
		regexp.MustCompile(`(?i)(PAB4411)`),
		regexp.MustCompile(`(?i)(PTV32SS08Z)`),
		regexp.MustCompile(`(?i)(PM[PT][0-9]+[a-z0-9_]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:PAP|PSP)[0-9]+[a-z0-9_]+(?: DUO)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PD\-(3127NC|3127) Build`),
		regexp.MustCompile(`(?i)PD\-3127NC Build`),
		regexp.MustCompile(`(?i)PD\-3127 Build`),
		regexp.MustCompile(`(?i)Primux|SirocoY|Omega6_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_ioxphone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxDelta6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxKappa(P50[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxKappa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_Beta2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_?Omega([57])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Omega6_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxUP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) PrimuxZonda4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_Siroco6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SirocoY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pritom_|(?:K7_A101(?:_EEA)?|Android 1[01];(?: [\w-]+;)? (?:M10_Lite|M10_(?:PLUS|Air)(?:_EEA)?|P7_EEA)|P7PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pritom[_ ]M10`),
		regexp.MustCompile(`(?i)(?:T1700Q-)?PRIXTON|(T7012Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRIXTON (C18)`),
		regexp.MustCompile(`(?i)(T701[24]Q|T1700Q)`),
		regexp.MustCompile(`(?i)PLT([^;/]+) Build|PLT(?:777[045]|9774|1074|9999)G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLT([^;/]+) Build`),
		regexp.MustCompile(`(?i)PLT(777[045]|9774|1074|9999)G`),
		regexp.MustCompile(`(?i)ProVision (S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Proline_|(?:H10882M-TN|H1088[28]M|H1010|M504)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Proline[_ ]FalconXL`),
		regexp.MustCompile(`(?i)(H10882M-TN|H1088[28]M|H1010)`),
		regexp.MustCompile(`(?i)(MPC-(?:[57]0|65|100)|MPC-110DSP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PROTRULY[ _](D[78]|V10S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Punos (10)`),
		regexp.MustCompile(`(?i)QBOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qtouch_|[ ](Q09|QS701|Q0[15]A|QS31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Qtouch[_ ])?[ ]?(Q09|QS701|Q0[15]A|Q85|QS31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QPHONE[_ ](?:10.1|9.[12]|7.1|5.[246])|QTAB10EW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QPHONE[_ ](?:10.1|9.[12]|7.1|5.[246]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TLW-100[BG]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Scepter[ _]8(?: Tablet)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Scepter[ _]8)`),
		regexp.MustCompile(`(?i)QMobile|QTab|Q-?Smart|(?:Mark [25]|E2 Noir|Noir[ _](A[18]|X1S)|LUNA PRO|NICE S|JazzX JS(?:[27]|10)(?: PRO)?|LT[57]00[ _]PRO|LT950|Infinity (?:Cinema 2|triple|santos|Prime 2)|Q Infinity|Hot 5|Hot Pro 2|VITA S|i7i 2020|i10[ _]20(?:20|19)|V2 2018|Z12 PRO|Smart HD Pro|V[67]_Metal|Rocket (?:Lite|Pro)| GLi|i6i 2020|Android 6(?:[\d.]*);(?: [\w-]+;)? (?:J5|S2 Pro|J7 PRO|M350 Pro)|Android 5(?:[\d.]*);(?: [\w-]+;)? Z9 Plus|i8i Dual|View Max Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JazzX JS(2|10)`),
		regexp.MustCompile(`(?i)Noir[ _](A[18]|X1S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A600(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(J7|S2) Pro`),
		regexp.MustCompile(`(?i)LT([57]00)[ _]PRO`),
		regexp.MustCompile(`(?i)V([67])_Metal`),
		regexp.MustCompile(`(?i)i(\d+)i 20(20|1[89])`),
		regexp.MustCompile(`(?i)i10[ _]20(20|19)`),
		regexp.MustCompile(`(?i)Mark ([25])`),
		regexp.MustCompile(`(?i)QSmart (X[124]0)`),
		regexp.MustCompile(`(?i)Q Infinity ([FCB])`),
		regexp.MustCompile(`(?i) (LT950|J5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLi Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) GLi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QMobile ENERGY (X[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QTab[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)QTab[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:QMobile|Q-?Smart)[ _-]([^;/)]+) Plus(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:QMobile|Q-?Smart)[ _-]([^;/)]+) PRO(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:QMobile|Q-?Smart)[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:QMP_K8| QMP-M1-N-IP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QMP[_-](K8|M1)`),
		regexp.MustCompile(`(?i)Qilive [0-9][^;/]*|Q(7S5[5]?IN4G|T19101|T21101|7T10INP|T19101HV|8T10IN|8S55IN4G2|8S[56]IN4G|9T9IN|9T(?:7|10)IN4G|9S55IN4G|10S5[37]IN4G|10S[56]IN4G|10S[56]IN4GR|9S5IN4G|6T7IN)`),
		regexp.MustCompile(`(?i)Q10S5IN4G[R]?`),
		regexp.MustCompile(`(?i)(QT19101HV|QT19101)`),
		regexp.MustCompile(`(?i)Qilive (1\d+[^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Qilive ([0-5][^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Qilive ([0-5]*)/`),
		regexp.MustCompile(`(?i)Qilive ([6-9][^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i) Passion[ _]P|Hynex plus|Stark K1|Hynex H[356]|Levin V[12]|Aston A[357]\+`),
		regexp.MustCompile(`(?i)Passion[ _](P[0-9]+)`),
		regexp.MustCompile(`(?i)Hynex plus( 2)?`),
		regexp.MustCompile(`(?i)Hynex (H[356])\+`),
		regexp.MustCompile(`(?i)Hynex (H[35])`),
		regexp.MustCompile(`(?i)Levin (V[12])`),
		regexp.MustCompile(`(?i)Aston A([357])\+`),
		regexp.MustCompile(`(?i)Qtek[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:Quantum (?:Fit|Five|Fly|UP|MUV (?:PRO|UP)|Go|Mini|M|V|You [2E])|GO 2|Q20|LIO\+|Q-TITANO(_007i|-H2)?|Q-Pulse70M|Q-Wave(?:101|71M))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum (Fit|Five|Go|Mini|[MV]|Fly|You [2E]|Q20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum MUV PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum MUV UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-TITANO[ _-](BOS|X|M1|007i|H[12]|AK47)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Pulse70M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Wave(101|71M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quatro (8|10|FSM1453)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Cronos|MINERVA(?:_32GB)?|X668_64GB|X626_4G|Hermes)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MINERVA(?:_32GB)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X668_64GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cronos|Hermes|X626_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RAPTOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TINKU LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TINKU LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUMO[ _]?|(?:Quest[ _]?(?:408|410|45[56]|50[679])|Vega[ _]?78[23]|Sirius[ _]?(?:1001|890))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _]?)?Vega[ _]?(78[23]|8002)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Yooda(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sirius[ _]?(1001|890)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _]?)?(Sirius 101-4G 8GB Black|Altair 701 8GB Black|Altair 71 4GB Black|Altair 700[24]|Altair 70[16]|Vega_803i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _])?Quest[ _]?(35[34]|40[268]|410|45[2568]|47[46]|50[679]|5[137]0|574|600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QW[ _-]TB-\w+`),
		regexp.MustCompile(`(?i)QW[ _-](TB-\w+)`),
		regexp.MustCompile(`(?i)R-TV BOX[ _]?(MINI\+|X99|X10 PRO|[RXS]10)`),
		regexp.MustCompile(`(?i)RCT([^;/]+) Build|RCA RLTP4028|RLTP5567|RLTP5573|RC7T3G21|RCT6B06P23|RCT6613W23P|RCT6513W87|DRP(?:29101|2091)|RCT6973W43(?:MD)?|RCT6703W12|RCT(?:6A06P22|6603W47M7|6303W87(?:DK|M)|6773W22B|6203W46L|6873W42B?M|6K03W13|6876Q22N|6A06Q22)`),
		regexp.MustCompile(`(?i)(?:RCA[ _])?(RLTP4028|RLTP5567|RLTP5573)`),
		regexp.MustCompile(`(?i)RCT6873W42M|RCT6876Q22N?|RCT6873W42BMF9E`),
		regexp.MustCompile(`(?i)RCT6973W43(?:MD)?`),
		regexp.MustCompile(`(?i)RCT6703W12|RCT6B06P23`),
		regexp.MustCompile(`(?i)RCT(?:6303W87(?:DK|M)|6K03W13)`),
		regexp.MustCompile(`(?i)(DRP29101|DRP2091)`),
		regexp.MustCompile(`(?i)RCT([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)RC([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:H1A1000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Regal (TAB 10\.1)`),
		regexp.MustCompile(`(?i)BB10;|BlackBerry|rim[0-9]+|PlayBook|STV100-[1234]|STH100-[12]|BBA100-[12]|BBB100-[1234567]|BBD100-[126]|BB[EF]100-[123456789]|BB[CGH]100-1`),
		regexp.MustCompile(`(?i)BBA100-[12]`),
		regexp.MustCompile(`(?i)BBB100-[1234567]`),
		regexp.MustCompile(`(?i)BBD100-[126]`),
		regexp.MustCompile(`(?i)BBE100-[123456789]`),
		regexp.MustCompile(`(?i)BBF100-[1234567]`),
		regexp.MustCompile(`(?i)(?:BlackBerry )?(9000|9790)`),
		regexp.MustCompile(`(?i)STV100-[1234]`),
		regexp.MustCompile(`(?i)STH100-[12]`),
		regexp.MustCompile(`(?i)BB10; ([a-z0-9\- ]+)\)`),
		regexp.MustCompile(`(?i)PlayBook.+RIM Tablet OS`),
		regexp.MustCompile(`(?i)BlackBerry(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)rim([0-9]+)`),
		regexp.MustCompile(`(?i)(8520|8530|9220|9320|9360)`),
		regexp.MustCompile(`(?i)(9800|9860)`),
		regexp.MustCompile(`(?i)FORTIUS QUAD 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ROiK ?(10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Shock ?(?:5|5\.5)|popper2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Shock ?(5\.5|5)`),
		regexp.MustCompile(`(?i)(?:ZR01|3917JR|P710|C330)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ramos ?([^/);]+)(?: Build|[);])|(?:MOS1(?:max)?|W22PRO 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ramos[ _])?(R10|R9|M7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MOS1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ramos ?([^/;]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Raspberry (Pi [0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RAVOZ[ _](Z[357] (?:Lite|Pro)|Z[3-7]|R[4789]|V[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XPOWER_P6000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Allure[_ ](?:Ultra(?:[_]Curve)?|Secure|Admire|Rise)|Opulent X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Readboy[ _-]`),
		regexp.MustCompile(`(?i)Readboy[ _-]C18Max`),
		regexp.MustCompile(`(?i)Readboy[ _-]C(\d+)Pro`),
		regexp.MustCompile(`(?i)Readboy[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Realme[ _]|(?:RMX(?:18(0[13579]|11|3[13]|2[1257]|[45]1|53|45)|19(03|4[1235]|19|9[23]|2[1579]|[01379]1|73)|20(?:[025-7]1|42|[0357]2|03|2[257]|63|7[56]|63L1|8[1356]|[2-5]0)|21(?:0[13]|1[27]|[12]1|4[24]|5[156]|6[13]|7[036]|8[0359]|9[345])|220[0125]|30(?:[3468]1|4[23]|9[23]|63|85)|31(?:15|2[125]|42|51|6[16]|71|9[1357])|32(?:0[13]|35|42|[346]1|6[0235689]|86)|33(?:[0157]0|[17]2|71|6[036]|[0186]1|57|88|9[12356])|34(?:30|78|[69]1|[67]2|7[145]|9[23])|35(?:0[1236]|1[1367]|21|[578]1|6[0123]|7[24])|36(?:1[01257]|[39]0|2[347]|8[67]|6[013])|370[0689]|37[146]0|37[47]1|3830)|(?:OPPO[ _]?)?CPH1861|RMP210[235-8]|4K Google TV Stick)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX370[68]`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?RMX3142(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1861(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX180[59]`),
		regexp.MustCompile(`(?i)RMX180[137]`),
		regexp.MustCompile(`(?i)RMX(1833|182[125])`),
		regexp.MustCompile(`(?i)RMX185[13]`),
		regexp.MustCompile(`(?i)RMX190[13]|Realme X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX199[12]`),
		regexp.MustCompile(`(?i)RMX1931|Realme X2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2176(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2121(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX1921|Realme XT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX19(1[19]|27)`),
		regexp.MustCompile(`(?i)RMX197[13]`),
		regexp.MustCompile(`(?i)RMX203[02]`),
		regexp.MustCompile(`(?i)RMX200[13]`),
		regexp.MustCompile(`(?i)RMX204[02]`),
		regexp.MustCompile(`(?i)RMX206[13](?:L1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX215[15]`),
		regexp.MustCompile(`(?i)RMX3151|Realme 8i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX349[123]`),
		regexp.MustCompile(`(?i)RMX3388|RMX3474`),
		regexp.MustCompile(`(?i)RMX339[23]`),
		regexp.MustCompile(`(?i)RMX347[12]`),
		regexp.MustCompile(`(?i)RMX36(?:30|15)`),
		regexp.MustCompile(`(?i)RMX366[01]`),
		regexp.MustCompile(`(?i)RMX368[67]`),
		regexp.MustCompile(`(?i)RMX1925(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX1811(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX194[1235](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RMX202[1207]|Realme G70 Series)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2185(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2189(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX218[03](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX219[45](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX306[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX320[13]`),
		regexp.MustCompile(`(?i)RMX326[123]`),
		regexp.MustCompile(`(?i)RMX319[13]|realme C25 Series`),
		regexp.MustCompile(`(?i)RMX319[57]`),
		regexp.MustCompile(`(?i)RMX326[589]`),
		regexp.MustCompile(`(?i)RMX350[123]`),
		regexp.MustCompile(`(?i)RMX(?:3581|3623)`),
		regexp.MustCompile(`(?i)RMX362[47]`),
		regexp.MustCompile(`(?i)RMX351[13]`),
		regexp.MustCompile(`(?i)RMX330[01]`),
		regexp.MustCompile(`(?i)RMX331[012]`),
		regexp.MustCompile(`(?i)RMX3031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX356[012](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3563(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3371(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3357(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX336[0136]`),
		regexp.MustCompile(`(?i)RMX3350(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX216[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX351[67]`),
		regexp.MustCompile(`(?i)RMX1831(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX(?:20(?:51|[2]5)|2144)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2052(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX207[56](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2072(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX(2142|2081)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX208[56]`),
		regexp.MustCompile(`(?i)RMX346[12]`),
		regexp.MustCompile(`(?i)RMX211[12]`),
		regexp.MustCompile(`(?i)RMX220[01]`),
		regexp.MustCompile(`(?i)RMX312[12]`),
		regexp.MustCompile(`(?i)RMX304[123]`),
		regexp.MustCompile(`(?i)RMX309[23]`),
		regexp.MustCompile(`(?i)RMX361[01]`),
		regexp.MustCompile(`(?i)Realme[ _]([1-9])[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP210[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP210[78]`),
		regexp.MustCompile(`(?i)RMP210[56](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Space_M10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(i-Jupiter)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Wizpad_)?Valuer_V8`),
		regexp.MustCompile(`(?i)(?:Wizpad_)?Valuer_V8`),
		regexp.MustCompile(`(?i)(?:Redway_7|redway7_pro|redway10_lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:reeder[_ ](?:3G_Tablet|A7iC|A[78]i[_ ]Quad|A8i Q2|M8 Plus|[TM]8|M10 Plus|P11SE|M7_Go)|M8_Go|M10SPlus|P12Curve|M10 Pro LTE|M10 Blue Max|P13_Blue_Plus|P13_Max_Blue|P13[_ ]Blue[_ ]Ma(?:ks|x|xL)|P13_Blue|P13 Blue 202[12]|M7Plus|A8i-Q2|M7Go_2019|M10 GO|S19 Max 64GB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)reeder[_ ](3G_Tablet|A7iC|A[78]i[_ ]Quad|A8i Q2|M8 Plus|[TM]8|M10 Plus|P11SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:reeder_)?(?:M7Go_2019|M7_Go)`),
		regexp.MustCompile(`(?i)(?:reeder_)?(M8|M10)[_ ]Go`),
		regexp.MustCompile(`(?i)P13 Blue 202([12])`),
		regexp.MustCompile(`(?i)P13 Blue MaxL? 202([012])`),
		regexp.MustCompile(`(?i)P13[_ ]Blue[_ ]Max|P13_Max_Blue`),
		regexp.MustCompile(`(?i)RelNAT[_ ](Premier)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RD(?:16Q|86E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RD(16Q|86E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Revo[_ ](?:Youplus|555)|RevoYou`),
		regexp.MustCompile(`(?i)Revo[ _]?(You|555)`),
		regexp.MustCompile(`(?i)(?:S6523(?:[ _]RU)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RKM[_ ])?MK(902II|902|80[28][^/;]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Rinno (R(?:400|505))`),
		regexp.MustCompile(`(?i)(RMD[-_](?:10(?:2[689]|30|5[089])|1121|75[017]|726|85[57]|870)|RMP-(?:450|50[56]|530|600))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMD[-_](10(?:2[689]|30|5[089])|1121|75[017]|726|85[57]|870)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP[-_](450|50[56]|530|600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RITZVIVA[_ ]S500C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIVIERA[ _]`),
		regexp.MustCompile(`(?i)RIVIERA[ _](F23|U963)`),
		regexp.MustCompile(`(?i)PHANTOM (?:PZ|RX)|RHYTHM[ _]RX|(?:STORM_S8(?: ?plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHANTOM PZ ?(2[05]|[13]5|4|18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHANTOM RX ?(298|387)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RHYTHM[ _]RX ?([15-9]0|[467]5|[12]80|150|[14]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NovaTab_R10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ROAM[_ ]CAT[ _](M8)`),
		regexp.MustCompile(`(?i)IO (?:Pro|3D|Light)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Roku(?:OS|4640X)?/(?:DVP|Pluto)?-?|QSP; Roku`),
		regexp.MustCompile(`(?i)Rombica[_ ]|(SSQ-A0500|Smart Box v[0-9]+|Smart Box (?:[ABCDXYZ]1|[GDFQ]2|[AF]3|H4))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SSQ-A0500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Rombica[_ ])?Cinema4K_v01`),
		regexp.MustCompile(`(?i)(Infinity K8|Smart Box (?:Q1|v00[3-9]|Quad|Ultra HD v002|4K V001|[ABCDXYZ]1|[AGDFQL]2|[AF]3|H4)|TV (?:Ultima|Fly)|Smart Stick Pro|TV Mercury|TV Air)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RM(D)?[-_](974R|600|550|790)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rover ([0-9]+)`),
		regexp.MustCompile(`(?i)(?:Rover[ ]?Pad|RoverPhone|(?:Air|Art|Sky) 7.85 3G|Pro_Q(?:8|10)_LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RoverPhone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro_Q(8|10)_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Rover[ ]?Pad)?sky 7.85(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Air|Art) 7.85 3G`),
		regexp.MustCompile(`(?i)RoverPad (10.4|Air S70|9.7 3G|Sky 9.7|3W A73|3W7|3WT70|3W9.4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RQ[ -](Regal R8|713S|712|768)|Bishop-RQ451)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RQ (Regal R8)`),
		regexp.MustCompile(`(?i)RQ-(713S|712|768)`),
		regexp.MustCompile(`(?i)(?:RugGear|RG(?:310|500|65[05]|702|7[13]0|850)|RG725)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RG[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FieldPad 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FieldPad 8)`),
		regexp.MustCompile(`(?i)Rhino-Quest(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rhino-Quest(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ruio[ _]|(?:M671M4|i7Plus|S5[05]06|S518)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ruio[ _](S4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ruio[ _])?(S5|i7)Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S5[05]06|S518)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Runbo|F1-TT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Runbo[ _-]?(X5-W|F1 Plus|[PF]1-TT|F1-EN|[FH]1|TT|Q5-S|X5-King|X6|Q5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RYTE U55 LTE|RT701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RYTE (U55 LTE)`),
		regexp.MustCompile(`(?i)(RT701)`),
		regexp.MustCompile(`(?i)S-TELL|(?:M630|M55[78]|P760|P750i|M555i|M580|M457|M655)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P760|P750i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S-TELL[ _])?M([0-9]{3}|555i|M580|M655)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S2TEL[ _-]`),
		regexp.MustCompile(`(?i)S2TEL-(Q8)`),
		regexp.MustCompile(`(?i)(S2[23])_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEEWO[ _](SD02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GO[35]E|5101J|GO3C(?: Plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5101J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO3C Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO3C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GO[35]E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem|StarTab|(?:Android 8(?:[\d.]*);(?: [\w-]+;)? (?:AURA (?:PLUS|ULTRA)|AURA))(?: Build|[;)])`),
		regexp.MustCompile(`(?i)StarXtrem II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarXtrem ?([3-6])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarXtrem(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail[ _]?([1-9])[ _]([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail[ _]?([1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURA PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aura ULTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT 6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT II Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarText II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarText(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarNaute II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARNAUTE ?([1-4])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarNaute(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem)[^;/]*) Build`),
		regexp.MustCompile(`(?i)SGIN_X10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BHX-UH200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Modern[ _](?:S10?|S[3679]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LYNX_LUXE|Hyper X Dragon|HYPER X BLADE(?: II)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Atractivo|SmartabS4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Atractivo)`),
		regexp.MustCompile(`(?i)SNAMI[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)SOLE[_ ]POP[_ ]S([45]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOLO[_ ](?:Aspire(?: M)?)|Inspire_U5(?:_PLUS)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOLO[_ ](Aspire(?: M)?))`),
		regexp.MustCompile(`(?i)(?:GRAVITY [34]G(?:_2019)?|GRAVITY2-4G|GRAVITY_OCTACORE|GRAVITY[ -](?:Max|SE|PRO|2-MAX|2)|SPC (?:GEN|SMART)|SPC_ALIEN(?:_STICK)?|SPC Glow9.7|Lightyear|Laika|L70_Lite|L60 Turbo|L60 Pro|FLOW 7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRAVITY ([34])G_2019`),
		regexp.MustCompile(`(?i)GRAVITY ([34])G`),
		regexp.MustCompile(`(?i)GRAVITY 2|GRAVITY2-4G`),
		regexp.MustCompile(`(?i)SPC Glow9.7`),
		regexp.MustCompile(`(?i)(L60 Turbo|L60 Pro)`),
		regexp.MustCompile(`(?i)SQOOL-V(41?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y777_Fire)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AERIAL(?: PLUS)?|BLOCK_MINI|BLOCK GO|BLOCK 3|Fractal|Joy Pro|Origins Pro|SLAY II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STG[ _](A[12] Pro|[AS]1|X[1-3]|X20|S[1-3]0|[BCP]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK[_ ]|(?:Storm 2e Pluz|Life 7S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK[_ ]Transporter[_ ]1`),
		regexp.MustCompile(`(?i)STK[_ ]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)STK[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)LEAP-S1|SH6B7CE_EU012`),
		regexp.MustCompile(`(?i)(SH6B7CE)_(EU012)`),
		regexp.MustCompile(`(?i)SUNWIND[_ ]|SUN[-_]LED\d+|(?:SKY 9 [EA]\d+ 3G|Sky (?:1262C|1123B|7143B|8244B|8421D|1430D) [43]G|SKY Kids 70 SS7238PG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY ([79]) ([EA]\d+) 3G`),
		regexp.MustCompile(`(?i)Sky (\d{4}[BCD]) ([34])G`),
		regexp.MustCompile(`(?i)SUN[-_]LED(\d+\w{1,2}\d+)`),
		regexp.MustCompile(`(?i)(?:SCHR9G[RL]|PRA(?:U8|100|557|507)|ZUR(?:722M|70016W?|700[RW]|805A))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCHR9G[RL]`),
		regexp.MustCompile(`(?i)PRA(U8|100|557|507)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZUR(70016W?|700[RW]|805A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Young (Y56|Y36\+|Y[35]5|Y51\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEON[_ ]RAY|(?:NEON_NOVA|NEON PLUS|NEON PLUS|NEON LITE|Neon Storm|SFCSTB2LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SAGEM|portalmmm/2.0 (?:SG|my)`),
		regexp.MustCompile(`(?i)SAGEM-(my[a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)SAGEM ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAGEM-([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 ((?:SG|my)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)Sagemcom_Broadband_SAS,([a-z0-9_ \-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:STS5[57]0|STS502)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(STS5[57]0)`),
		regexp.MustCompile(`(?i)(STS502)`),
		regexp.MustCompile(`(?i)SAMSUNG|FamilyHub|Maple |Gear Live|(?:SEC_)?SC-(?:001|01[EFGHKLM]|02[CGHJKLMF]|03[EFJKL]|04[EFJLG]|05[GL]|(?:4[12]|5[1-4])A|5[1-5]B|5[1-5]C|56C)|N[57]100|N5110|N9100|S(?:CH|GH|PH|EC|AM|HV|HW|M)-|SMART-TV|GT-|Galaxy|(?:portalmmm|o2imode)/2\.0 [SZ]|sam[rua]|beyond[02]q?|crownq?lte|vollo Vi86(?:[);/ ]|$)|(?:lineage_|aokp_|rr_)?(?:serranoltexx|j5y17lte|Santos103G|fortuna3g)|(?:OTV-)?SMT-E5015|ISW11SC|40[34]SC|SC(?:G1[6789]|V3[1-9]|V4[0-9]|51Aa|-56B|T21|G0[1-9]|G1[0-5]|L2[234])(?:-[uj])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OTV-)?SMT-E5015`),
		regexp.MustCompile(`(?i)Samsung, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-)?N5100`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T677(?:[ATV]|N[KL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T670(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-)?N5110`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N5120`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT|SM)-N8000`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N8010`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N8020`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P1000M?|SCH-I800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P3100B?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P311[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5100|SCH-I915`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P511[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T217T`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5200|Santos103G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5210`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5220`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6201`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6810`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P7100`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P75[01]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T321`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T905`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P600`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P60[12]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P605|P607T)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P901`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P905`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P587|P588C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P583(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P205(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T307U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T297`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T505[CN]?|T507)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T50[03](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T22[57]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T11[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X205`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T830[X]?|T837R4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T837P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T835[CN]?|T837[VTA]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T725[CN]?|T720X|T727(?:R4|[AUV])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T720(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T865N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T867(?:R4|[VU])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P615[CN]?|P61[379])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P610X?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T860X?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T866N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T111`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T116(?:BU|NU|NY)?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T2105|T212)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T210R?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T21(?:[15]|7[AS])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T230(?:NU)?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T23[15]|403SC|SM-T321`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T239|T237[PV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T232(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T312`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T311`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T315`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T33[215]|T337[AVT])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T520`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T53[15]|T537[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T536(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T320`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T325`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T525`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T530(?:NU)?|T533)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T705|T707[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:T805|T807[PV]?)|SCT21)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T813|T810)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T719[CY]?|T715(?:N0|[CY])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T71[03]|T710X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T815|T817[ATW]?|T818[ATVW]?|T819[Y]?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T820`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T82[57]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T975N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T970(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T976[BN]|T978U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T870(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T875N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T878U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T73[57]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-T736|SM-T738[UTV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T733`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X906`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X80[68]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X706`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T280`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T285`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T3[58]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P350|T3[58]5|T357[TW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T387(?:AA|R4|VK|[TPVW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T295`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T290`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P355([MY])?|T550)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P550|P555(M)?|T555)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T58[05]|P58[05])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T587[P]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T59[057]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T51(?:7P|[057])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T37[57]|T378[KLSV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T56[02]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T561`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T567V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T365(?:F0|[MY])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T395[CN]?|T397U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T390(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T575N?|T577U?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T545|T547U?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T540(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P902|P907A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-T2519`),
		regexp.MustCompile(`(?i)SM-R8[76]0`),
		regexp.MustCompile(`(?i)SM-R90[05]`),
		regexp.MustCompile(`(?i)SM-R91[05]`),
		regexp.MustCompile(`(?i)Family ?Hub`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A245`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G850(?:8S|[AFKLMSWXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A605K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A202K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5510`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5512`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B7510`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5801`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8000`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7530`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8350`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?OMNIA7`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SGH-i677`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SGH-i917`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SGH-i937`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I8150|SM-T255S)`),
		regexp.MustCompile(`(?i)SC-01H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5830`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G357(?:FZ|M)|G310HN)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8160`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G313(?:HY|M[LUY]|[FM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G316M`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G313[HU]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G316U|G318(?:H|ML))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G9100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHV-E120`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8190`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I826[02]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHW-M570S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G386W`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3589W`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8320`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I85[23]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3858`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G600S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E426S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I855[028]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G381[28]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8580`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8730`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:E500(?:HQ|YZ|[0FHM])|S978L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E700[09FHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I90(?:00|08|18|88)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9001`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9003`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9010`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9070`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I910[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?ISW11SC`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9103`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9105`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G730(?:W8|[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I919[025]|SCH-I435)|(?:lineage_|aokp_)?serranoltexx`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9515`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9295`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9300|SCH-(?:I535|I939|L710))|SC-03E`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9305|SCH-R530)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S975L|GT-I950[025]|SC-04E|SCH-(?:I545|I959|R970)|SGH-M919N?|Galaxy-S4|SHV-E300K)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9506)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHV-E330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5280`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5301`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G110[BHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5360`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6312`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G130(?:BT|HN|[EHMU])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G130BU`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6790`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6810`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6812`),
		regexp.MustCompile(`(?i)SC-04J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SC-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7275`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7500`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-S7560|SCH-I699)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7390`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7580`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I739`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-S7562|SCH-I919)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7582`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G31[36]HU|G313HZ)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7710`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G388F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G389F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G390[FWY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G398FN`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G715(?:FN|U1|[AUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G889(?:YB|[AFG])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G525[FN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G736`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8500`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8530`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8600`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5380`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7250`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5250`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5780`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7230`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:C101|C105([AL])?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:C111(M)?|C115)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G318[HM]Z`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G355(?:6D|[89HM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G350`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G360[FH]?|S820L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G361[FH]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G386F|G3518(?:_TD)?|G3586V)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3568V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G5108Q?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3815`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G80[01]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G9009D`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G900FD`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G900|G906[KLS]|S902L|S903VL|G490F)|Galaxy-S5|SCL23|SC-04F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G901F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G870[AFW]|SC-02G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G903[FMW]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G860P`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G920(?:F[DQ]|W8|[089AFIKLPRSTVX])?|SM-S906L|SM-S907VL)|SC-05G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G890A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G925[0ADFJIKLPRSTVWX]|SCV31|404SC|SC-04G|SM-G828)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G928(?:7C|N0|R4|W8|[07ACFGIKLPSTVX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G930(?:AZ|FD|R[467]|T1|V[CL]|W8|[0AFKLPRSTUVX8])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G935(?:R4|W8|[0AFKLPSTUVX])|SC-02H|SCV33|Galaxy s7 edge`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G891A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G950[08FNUW]?|SCV36|SC-02J`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G8750`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G892[AU]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G955[0AFKLNPRTUVWX]?|SCV35|SC-03J`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G960[0FNUWX]?|SCV38|SC-02K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G965[0FNUWX]|SCV39|SC-03K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:G973|G977[BNPTU])|SCV41|SC-03L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S10 Lite|G770(?:U1|F))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G975[08FUNWX]|SCV42|SC-04L)`),
		regexp.MustCompile(`(?i)(?:(?:SAMSUNG-)?SM-G970(?:U1|[08FUNWX])|beyond0q?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G980F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G981(?:U1|[0BNUVW])|SCG01|SC-51A|SC51Aa`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G780`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G781(?:U1|[0BNUVW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G988(?:U1|[0BNQUW])|SCG03`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G985F|SCG02`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G986(?:U1|[0BNUW])|SC-52A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G991V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G991(?:U1|R4|[0ABNWQU])|SCG09`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G990`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SC-51B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G998(?:U1|[0BNUWTP])|SC-52B)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G996(?:U1|[0BNWUP])|SCG10`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S901(?:U1|[0BENUW])|SC-51C|SCG13`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S908(?:U1|[0BENUW])|SCG14|SC-52C`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S906(?:U1|[0BENUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S911|SCG19)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S916`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S918`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F700(?:U1|[0FNUW])|SCV47`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F707(?:U1|[0BNUW])|SCG04`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I829`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SCH-R740|SGH-S730)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-S738`),
		regexp.MustCompile(`(?i)vollo Vi86(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G386(?:T1|T)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A716S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A015(?:DL|[TU]1|[AFGMUV])|S111DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A013[FGM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A025(?:[AFGM]|AZ)?|S124DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A037[F]?|SM-S134DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A035[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A047`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A042[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A045`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A032[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A022[GMF]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A260[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S115(?:DL)?|SM-A115V)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A146)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A145)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A225[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A226L`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A226|SC-56B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A300(?:FU|YZ|XU|XZ|[09FGHMXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A310(?:N0|[FMXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A320(?:FL|[FXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A346`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A430F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A500(?:YZ|[9LSWY])?|SM-A5OOH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A500[0FGHKM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A500(?:FU|X)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A510[08FKLMSXY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A520[FKLSWX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A525`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SC-53B|SM-A526)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A528`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A600(?:AZ|FN|GN|T1|[AFGNPTUX])|SM-A6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A605(?:[FG]N|[08FGX])|SM-A6\+`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G6200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A606[0Y]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A700(?:YD|[09FHKLSX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A710[08FKLMSXY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A720[FMSX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A750(?:GN|[CFGNX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A71(?:5[FW])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A725[FM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A736`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A716(?:U1|[0BUVT])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A(?:530F|800[0FISXY])|SCV32`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G885[FSY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A810(?:YZ|[FS])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A8s|G887[0F])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A530[MNWX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A730[FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A900[0F]`),
		regexp.MustCompile(`(?i)SM-A9\[7\]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A920[0FXN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G885[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A9 Pro|A910[0F]|G887N)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A105[FGMN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A107[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S102DL|A102[NUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A115(?:A[PZ]|U1|[AFMUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A12(?:5[AFMNUWTPV]|7[FM])|S127DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A136(?:U1|[BMWUS])|S136DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A135|SM-A137F)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A205(?:U1|YN|[FGSWU])|S205DL)|SC-02M|SCV46`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A215(?:DL|R4|U1|[UWTP])|SM-S215DL|SC-42A|SCV49|SM-A102J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A217[FMN](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A202[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A207[0FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A235`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A23[36]|SC-56C|SCG18`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A305(?:[FGY]N|GT|[FGN])|SCV43)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A307(?:FN|GN|GT|[FG])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A315[FGN](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A325`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:A326(?:BR|U1|[BUWJ])|S326DL)|SCG08)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A336`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A405(?:F[NM]|S)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A305[018](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A415F|SC-41A|SCV48)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-[AS]426`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A505(?:F[GN]|U1|YN|[FGNUWX])|S506DL|505FN)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A5070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A507FN`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A515[FUW]|S515DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A516(?:U1|[0BNUVT])|SC-54A|SCG07)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A536V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A536|SC-53C|SCG15|SM-S536DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A546)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A705(?:GM|[MYF]N|[0FUWX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A707[0F]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A805[0FNX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A908[BN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A9080`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E025F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F127G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E135F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E225F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E236`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F415F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E426B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E5260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E625`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9301I`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S120VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J100(?:FN|VPP|MU|[FGHMY])|S777C)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J105[BFHYM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J106[BFHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J120(?:ZN|[AFGHMPTW])|J05H)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J110[FGHLM]|J111[FM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J200[FGHMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J200BT`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J260AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J260([AFGMY]|T1)|S260DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J(?:210F|250[FGMNY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S367VL|S357BL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J311(?:[09]|9S)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S320VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S327VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327(?:T1|[ATW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327(?:[FP]|R4)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337R4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327VPP`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S337TL`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J3109`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J300H|J320(?:[ZF]N|R4|W8|YZ|[AFGHMNPVY]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J330(?:FN|[08FGLN])|J327(?:R[76]|U))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337(?:VPP|[AWPUV])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G400[FG]|J400[FGM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J500(?:FN|N0|[78FGHMY])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J510(?:[FGMU]N|FQ|[8FGHKLSY])?|5108|G510H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J530[GY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J530|(?:lineage_)?j5y17lte`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G570[0FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J600[FGLN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J610[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J410[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J415(?:[FG]N|[FGN])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J710FN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J7[01]0(?:FN|MN|[8FHKM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J700P`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J700(?:T1|T)|J710GN|J7109?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J730[K]|J727(?:R4|[AFSU]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J737(?:R4|T1|VPP|[APSTUV])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C710F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G610[FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G611(?:FF|MT|M)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G615F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S727VL|S737TL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J7 Pro|J730(?:GM|[FG]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J701[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J720[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S767VL|S757BL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J727[PTV]`),
		regexp.MustCompile(`(?i)SM-J7\[7\]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J810|SM-J8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SM-J9\[7\] Prime`),
		regexp.MustCompile(`(?i)SM-J9\[8\] Pro`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M015[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-[EM]045F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M013F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M017F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M025F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M022[FGM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M105[FGMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M107F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M115[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M127[FGN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M135`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M136`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M146B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:M205(?:[FGMN]|FN)|M20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M215F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M215G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M225`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M236L`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M236`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:M307(?:FN|[0F])|M30s)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M305?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M315F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M325F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M326`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M336`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M317F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M405`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M426`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M515F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M526`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M536S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M536`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M546`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M625`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W201([689])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2022`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2020`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2021`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A826`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2015`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G910S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G550(?:FY|T[12]?)|S550TL|G55[01]0|G5520)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G5528`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G600(?:FY|[0F])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G610[0KLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G611[FKLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C500[0X]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C501[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C700[0X]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C701[08FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C710[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C900[08FY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z130H`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z200[FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z300H`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z400[FY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G150(?:N[0KLS])?|G155S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G16(?:0N|[05]0?|5N))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J321AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J326AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J336AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J727AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:F900[0FUW]|F907[BN])|SCV44`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W9023`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F711|SCG12|SC-54B)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F721|SC-54C|SCG17)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F731)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F916(?:U1|[0BNQUW])|SCG05`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F926|SC-55B|SCG11)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F936|SCG16|SC-55C)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F946)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9060(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9063`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9(?:080|128)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9168`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9082`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N7000`),
		regexp.MustCompile(`(?i)(?:SC-01G|SCL24)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N935[FSLK](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:(?:GT-)?N7100|SCH-(?:I605|N719|R950)|SPH-L900|Galaxy Note 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N7105`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G710(?:2T|5[HL]|[25689KLS])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G720(?:AX|N0|[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:SAMSUNG-)?SM-(?:G530(?:[689]W|[AF]Z|BT|MU|R[47]|[AFHMPTWY])|G531[FH]|S920L)|(?:rr_)?fortuna3g)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G531(?:BT|[MY])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532MT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532[MG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N7502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N750[05LQ]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N9002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-9005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-N900(?:W8|[05689][VQ]?|[AKLPSTV])?|SCL22|SC-01F|SC-02F)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:N910|910U)|N9100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N916[KLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N915`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N920(?:R[467]|W8|[0ACFGIKLPSTVX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N9208`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G750(?:8Q|[9AFH])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I915[028]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I920[05]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-N930(?:R[467]|W8|[0AFKLPSTUVX])|SCV34)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-N950|SCV37|SC-01K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N960|SCV40|SC-01L)|crownqlte`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N975(?:U1|XU|[0CFUWX])|SM-N976[0BVNQU]|SC-01M|SCV45)|Galaxy Note 10\+`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-(?:N970(?:U1|W8|[089DFJKLSUWX])|N971N)|Galaxy Note 10`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-N770[FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N981(?:B/DS|U1|[0BNUW]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N985(?:F/DS|F))|Galaxy Note 20 Ultra`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N980(?:F/DS|F)|Galaxy Note 20)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N986(?:B/DS|U1|[0BCNUW])|SC-53A|SCG06)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W750V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G310R5`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-E2152`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(GT-(P|N8|N5)[0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?((?:SM-[TNP]|GT-P)[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)((?:SCH|SGH|SPH|SHV|SHW|GT|SM)-[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)Galaxy ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Galaxy ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG[\-][ ]?([a-z0-9]+[\-_][a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG;[ ]?([a-z0-9]+[\-_][a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG[ _/\-]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)SAMSUNG;[ ]?([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)SEC_SC-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SEC-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:portalmmm|o2imode)/2\.0 ([SZ][a-z0-9]+)`),
		regexp.MustCompile(`(?i)sam([rua][0-9]+)`),
		regexp.MustCompile(`(?i)(T3G_04|TWIFI-06)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(55SA703)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:8312D|G(60[25]|70[3568]G?|785|803)|N83(?:-2cpu)?|N91) Build`),
		regexp.MustCompile(`(?i)G(60[25]|70[3568]G?|785|803)`),
		regexp.MustCompile(`(?i)Sansui[_ ]|(?:S505024)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sansui[_ ](Switch|Play|Fun|SA4[01]|U4[56]|U3[02]|Nova)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SANTIN|(?:BiTBiZ_V58|ACTOMA ACE|DREAMPLUS03A|Candy U7 Pro|GAAMII|RS635H|HY-002 Plus|HongQi HQ1|G101-OG|HEXIN-H2-A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BiTBiZ_V58(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAAMII G1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAAMII(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEXIN-H2-A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Candy U7 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DREAMPLUS03A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GreenOrange(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLASSONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)halove(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ACTOMA ACE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)monica(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HongQi HQ1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POWER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GALAZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEWDUN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEXIN[_ -](H2-A|H3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HY-002 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G101-OG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SANTIN[ _][#]?(Dante|Candy U7|Armor(?: 2)?|YSL-Y7|ANT.W|N[13]|JS|S6|V9(?:[ _]Pro)?|Life Shine|ovvi|D|11 XS Max|SHUGUO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RS635H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Santin[ _#]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Sanyo|MobilePhone[ ;]`),
		regexp.MustCompile(`(?i)SCP-?6750`),
		regexp.MustCompile(`(?i)SCP-?6760`),
		regexp.MustCompile(`(?i)SCP-?6780`),
		regexp.MustCompile(`(?i)SANYO[ /_-]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)MobilePhone ([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i) (TB-PO1|TB-B01|TB-G01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SberBox)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Schok[ _]|FreedomTurboXL`),
		regexp.MustCompile(`(?i)(Pi 5\.5L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Seatel[ _](L2|V8[AE]|T[5-8]|R6|V[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Seeken[ _-]`),
		regexp.MustCompile(`(?i)Seeken[_ -](SG1|SJ1)`),
		regexp.MustCompile(`(?i)Seeken[_ -](ST-101)`),
		regexp.MustCompile(`(?i)Selecline[ _]|(?:S4T7IN|ST19101|S3T10IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ST19101|S4T7IN|S3T10IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Selecline 10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Selenga[ _](A[1345])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sencor|(?:ELEMENT[ _]?(?:(?:7|8|9\.7|10[ _]1)(?:[ _]?V[23])?|P[0-9]+|10.1 Q001)|10_1Q205|ELEMENT-P5501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?Element (10\.1) (Q001)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2[ _]BASIC`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT8`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT10[ _]1`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?(7Q105)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?(10)_(1Q205|1Q102)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _-]?P([0-9]+)`),
		regexp.MustCompile(`(?i)Sencor[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Sendo([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Senkatel[ _]|(?:MaximusT1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Senkatel[ _](T1009|T8002|T701[12]|T9702)`),
		regexp.MustCompile(`(?i)SENSEIT[ _]?([^;/)]+)( Build|\))`),
		regexp.MustCompile(`(?i)Senwa|(?:S\-?(?:471|7[12]5|6[01]5|915|905TL|1000|5018)|V705B|LS50F| LS50?|LS5518H|LS5718|LS5018F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?471(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?905TL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?5018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5018F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?(615|7[12]5|915)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V705B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS50F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) LS50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) LS5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5518H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Senwa[ _-]*([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:AUTOID ?(?:9N|Q[79])|CRUISE1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CRUISE1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUTOID ?(9N|Q[79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NBP-60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHARP|SBM|SH-?[0-9]+[a-z]?(?:[);/ ]|$)|AQUOS|(?:SH-T01|SH-M0[14-9]|SH-M1[1-7](?:-y)?|S[357]-SH|SH-[MZ]([12]0|01|22)|SH-[CL]02|SH-RM(?:1[1258]|02)|SH-R?M19s?|SH-R10A|[34]04SH|401SH|[45]02SH|306SH|[36]05SH|70[1246]SH|80[138]SH|90[1678]SH|50[3679]SH|SHL2[1235]|SHV4[0-8]|SHV3[1-9](?:[-_]u)?|FS80(?:1[08]|32|28|0[29])|TG-L900S|NP601SH|403SH|603SH|SHF3[1-4]|SHV4[035][-_]u|SW001SH|SHG0[1-8]|X4-SH|A002SH|DM-01[JH]|A[01]01SH|606SH|FS801[56]|d-41A|d-51C|NP80[567]SH|NP501SH|A00[34]SH|A102SH|IS05|SH-(?:S50|53A|51B|[HDA]01|01FDQ|S40P|M24)|LP-0[12]|FS8014|SBM00[35]SH|SBM103SH|A10[345]SH|lineage_ss2|LCD_xxSUFOC475A|A20[1248]SH|FS802[56]|ADS1|STTM21VAPP|NPA205SH|SHG10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)506SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)603SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)50[23]SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[34]04SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)606SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)507SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S3-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S5-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S7-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X4-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG06|A10[34]SH|SH-M20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-51C|A204SH|SHG08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M07(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A003SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) SH-S40P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-54B|SHG05|SH-R?M19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG07|SH-RM19s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A208SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-53C|SH-M24|SHG10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG03|A004SH|SH-M17|SH-53A|A105SH|SH-S50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-D01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M12(?:-y)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-H01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-[MZ]10|801SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-M13|906SH|SH-01M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG04|A102SH|SH-RM18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG02|A002SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-Z01|Aquos S2 4/64)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-02E|SH-01[GH]|SH-04H|SH-09D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-01FDQ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-?06D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHL2[1235]|SH-M01|SH-01E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(203SH|30[23]SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-L02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:605SH|SH-03J|SHV39)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:701SH|SHV41|SH-M06)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-M09|SHV42|706SH|SH-03K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)803SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:908SH|SHG01|SH-M14)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M16(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-C02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHF3[1-4])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A201SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-02J|SH-04G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-02H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)30[56]SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)402SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)403SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:509SH|SH-R10A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP601SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV40|SHV3[24])(?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)702SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aquos P6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV3[183](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8010|SH-M08|SHV43(?:-u)?|SH-01[KL]|lineage_ss2|Aquos S2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8016(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV46|SH-R?M11|901SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV44|808SH|SH-04L|SH-03G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8032|FS8015|SH-02M|SHV45(?:-U)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV48|907SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-RM12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-RM15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-51B|A101SH|SH-M22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A202SH|SH-52C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV3[57](?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TG-L900S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8026(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8002|SHV47)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SW001SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DM-01[JH])`),
		regexp.MustCompile(`(?i)NP80[56]SH`),
		regexp.MustCompile(`(?i)LP-0([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(00[35]SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(103SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM200SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-08E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(d-41A|d-51C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SH-T01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LC-(?:[0-9]{2})[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHARP-AQUOS|AQUOSBrowser`),
		regexp.MustCompile(`(?i)SHARP[ -]([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)AQUOS[ _-]TV([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(?:SHARP|SBM)([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(SH-?[0-9]+[a-z]?|IS05|ADS1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHIFT6mq?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STV[-_](40LED25S|40LED42S|32LED42S|32LED30C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHTRIH-SMARTPOS-F2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PNT-704[025])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SICO[_ ](?:PLUS|e1002|Topaz)|(?:Express3-Max|SSR3-1-51-5M|SSD-1-53-13M|Mega2(?:max)?|Express3|Diamond 2|Plus3_4G|Plus2 4G|Infinity Max|Nile X|More_3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SICO[_ ]PLUS2|Plus2 4G`),
		regexp.MustCompile(`(?i)SICO[_ ]PLUS`),
		regexp.MustCompile(`(?i)SICO[_ ]Topaz`),
		regexp.MustCompile(`(?i)SICO[_ ]e1002`),
		regexp.MustCompile(`(?i)SIEMENS|SIE-|portalmmm/2\.0 SI|(?:S55|SL45i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SIE-)?(S[56]5|S40|C45|ME45|SLIK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SIEMENS[ \-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SIE(?:MENS )?[\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:SIE-)?(SL45i)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 (SI[a-z0-9]+)`),
		regexp.MustCompile(`(?i)Sigma|(X[_-]Style[ _]?Tab[_ ]A(\d+)|X[-_ ]?treme[-_ ]?PQ[0-9]{2}|X-Style_(?:S5501|S3502)|Tab A1015)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?treme[-_ ]?PQ([0-9]{2}) Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?treme[-_ ]?PQ([0-9]{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[_-]Style[ _]?Tab[_ ]A(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab (A1015)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?Style[-_ ]S([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Silelis[ _](T-1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TangoTab|Presto[ )]|PicassoTab_[X9]|Ultimax|Valumax|S72-B|SX2W`),
		regexp.MustCompile(`(?i)TangoTab[_ ]?(\d+|X)`),
		regexp.MustCompile(`(?i)PicassoTab_(XL?|9)`),
		regexp.MustCompile(`(?i)(NP602SI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Singtech|(?:Sapphire[_ ](?:H50S|H7S?|H90)|Infinity_I(?:1|_Mix))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sapphire[_ ](H50S|H7S?|H90)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Singtech[ _](Q2|S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity_I1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity_I_Mix(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Siragon|(?:SP-(?:5[0124]50|5[34]00|61[05]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Siragon[_ ])?(SP-(?:5[0124]50|5[34]00|61[05]0))`),
		regexp.MustCompile(`(?i)(?:FINNEY U1|SOLARIN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FINNEY U1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOLARIN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SKY|Elite|Fuego)[_ ][3-7]\.[05](?:[A-Z]{1,2})?|Elite[ _](?:PHOTOPRO|5_0T|M45|[45]T|45T|GO|M5Plus|T[46]|[ABCDHP]5|5_5_Octa|Octa|[BCEFGHJPTV]55|[AB]65|N55|T10)|Platinum[_ ](?:5.0M|5\.5C|[56]\.[05]\+?|[ABCMP]4|[ACGKV]55|[ABDEFGHJKM]5|A7|A57|P9|X|UNO|VIEW2|O|4\.0|4_0Plus)|PLATINUMVIEW|SKY[ _](?:55M|Pro_III|PAD10)|SKYVISION|SKY Black| SKY[ _]Prestige|Sky Vision2|PRO_SELFIE|Premier5`),
		regexp.MustCompile(`(?i)Platinum[_ ](?:5\.0M|M5)`),
		regexp.MustCompile(`(?i)Platinum[_ ]5\.5C`),
		regexp.MustCompile(`(?i)Platinum[_ ]([56])\.([05])\+`),
		regexp.MustCompile(`(?i)Platinum[ _]4\.0`),
		regexp.MustCompile(`(?i)Platinum[_ ](P9) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Platinum[_ ]([ABCMP]4|[ACGK]55|[ABDEFGHJKM]5|A7|A57|P9|X|UNO|O|6\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Platinum[_ ]?VIEW(2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY[ _]PAD10`),
		regexp.MustCompile(`(?i)Elite_Octaplus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite_OctaXS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite Octa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite OctaMax(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite[ _](M45|Go|[45]T|T[46]|[ABCDHP]5|[ABCEFGHJPTV]55|[AB]65|45T|N55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite (T10)`),
		regexp.MustCompile(`(?i)Elite[_ ]([3-7])[\._]([05](?:[A-Z]{1,2})?\+?)`),
		regexp.MustCompile(`(?i)Fuego[_ ]([3-7]\.[05](?:[A-Z]{1,2})?\+?)`),
		regexp.MustCompile(`(?i)SKY Black ?(2)?`),
		regexp.MustCompile(`(?i)SKY 5.0Pro II`),
		regexp.MustCompile(`(?i)SKY[ _]PrestigeX`),
		regexp.MustCompile(`(?i)SKY[ _]Prestige`),
		regexp.MustCompile(`(?i)SKY[_ ]([3-7]\.[05](?:[A-Z]{1,2})?)`),
		regexp.MustCompile(`(?i)SKYSTREAM_3Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SKYLINE[_ ])?(32YST5970|50UST5970|24YST5970|40LST5970|32YST5975|43LST5975)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sky_?worth|(?:FlowBox-F1|SWTV-20AE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SWTV-20AE)`),
		regexp.MustCompile(`(?i)Sky_?worth ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Android.+(?:Safari)(?: Build|\) AppleWebKit)|SMADL[ _]`),
		regexp.MustCompile(`(?i)Android.+(?:Safari)(?: Build|\) AppleWebKit)`),
		regexp.MustCompile(`(?i)SMADL[ _]Matri([2X])`),
		regexp.MustCompile(`(?i)Smailo_(2GO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Coral 4|Slide Lite|Notrino|Smart PRIME II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Coral 4|Slide Lite|Notrino|Smart PRIME II)`),
		regexp.MustCompile(`(?i)SK5501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SK5501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMARTBOOK[ _]S`),
		regexp.MustCompile(`(?i)SMARTBOOK[ _]SB ?13`),
		regexp.MustCompile(`(?i)SMARTBOOK[ _](S9Q9|S7QS)`),
		regexp.MustCompile(`(?i)(ST1009|ST7160|ST1009X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Android 7(?:[\d.]*);(?: [\w-]+;)? M512| M520| M700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M512|M520|M700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smartfren|Androtab|Andromax|PD6D1J|AD682J|AD68[89]G|AD6B1H|AD9A1H|AD682H|AD683G`),
		regexp.MustCompile(`(?i)Andromax[ _\-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Andromax[ _\-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Smartfren[ _\-]([^/;\)]+)(?: Build|[/;\)])`),
		regexp.MustCompile(`(?i)(Androtab[^/;]+) Build`),
		regexp.MustCompile(`(?i)Smartisan[_ ]|(SM(?:70[15]|[89]01|919)|OD10[35]|YQ60[1357]|DT2002C|DE106|DT190[12]A|O[CE]106|OS103|O[CS]105)[ /;\)]`),
		regexp.MustCompile(`(?i)SM70[15]`),
		regexp.MustCompile(`(?i)YQ60[1357]`),
		regexp.MustCompile(`(?i)OD10[35]`),
		regexp.MustCompile(`(?i)OS105[ /;\)]`),
		regexp.MustCompile(`(?i)DE106[ /;\)]`),
		regexp.MustCompile(`(?i)OE106[ /;\)]`),
		regexp.MustCompile(`(?i)OC10[56][ /;\)]`),
		regexp.MustCompile(`(?i)DT2002C[ /;\)]`),
		regexp.MustCompile(`(?i)DT190[12]A[ /;\)]`),
		regexp.MustCompile(`(?i)OS103[ /;\)]`),
		regexp.MustCompile(`(?i)Smarty[_ ]`),
		regexp.MustCompile(`(?i)Mini ?(7L?)`),
		regexp.MustCompile(`(?i)(?:Smooth ?(?:5.[05]|626|6.26 (?:Lite|Max|Pro)|6.[15])|S2 Advance)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth 5.5 lite`),
		regexp.MustCompile(`(?i)Smooth (5.[05]|6.[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth626(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth 6.26 (Lite|Max|Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smotreshka Box (115NA|413NA|213a?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)soda (?:S2|[SE]1|FIRE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)soda (S2|[SE]1)`),
		regexp.MustCompile(`(?i)Softbank|J-PHONE`),
		regexp.MustCompile(`(?i)Softbank/[12]\.0/([a-z0-9]+)`),
		regexp.MustCompile(`(?i)([a-z0-9]+);Softbank;`),
		regexp.MustCompile(`(?i)J-PHONE/[0-9]\.[0-9]/([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)(SS5214G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLONE|(?:E1457|W145[02]|Sun_S5501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLONE[ _]Elite[ _]L5501`),
		regexp.MustCompile(`(?i)SOLONE[ _]SUMO[_ ]S5001`),
		regexp.MustCompile(`(?i)SOLONE[ _](SL-K40|S5002)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sonim[ -]|XP(?:[67]7|[358]8)00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP3400`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP3800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP3900(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP5800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP5700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP6700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP7700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP8800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sony(?: ?Ericsson)?|SGP|Xperia|(?:[4-9]0[12])SO|C1[569]0[45]|C2[01]0[45]|C230[45]|C530[236]|C550[23]|C6[56]0[236]|C6616|C68(?:0[26]|[34]3)|C69(?:0[236]|16|43)|D(?:200[45]|21(?:0[45]|14)|22(?:0[236]|12|43)|230[2356]|240[36]|2502|2533|510[236]|530[36]|5316|5322|5503|58[03]3|65(?:0[23]|43|63)|66[03458]3|66[14]6|6708)|E(?:20[0345]3|2006|210[45]|2115|2124|230[36]|2312|23[356]3|530[36]|53[3456]3|5506|55[356]3|56[46305][36]|58[02]3|6508|65[35]3|66[0358]3|68[358]3)|F(?:311[12356]|331[13]|321[12356]|5[13]21|5122|813[12]|833[12])|G(?:2299|312[135]|311[26]|322[136]|3212|331[123]|3412|3416|342[136]|823[12]|834[123]|8[14]4[12]|8188)|H(?:3113|3123|3133|3213|3223|3311|3321|3413|4113|4133|4213|4233|4311|4331|4413|4433|4493|8116|8166|82[1679]6|83[12]4|8416|9436|9493)|I(?:3[12]23|3213|[34]113|[34]312|4193|42[19]3|4332)|J(?:3173|3273|81[17]0|82[17]0|91[15]0|92[16]0)|(?:WT|LT|SO|ST|SK|MK)[0-9]+[a-z]+[0-9]*(?: Build|\))|X?L39H|XM50[ht]|XQ-[A-Z]{2}[0-9]{2}|W960|portalmmm/2\.0 K|S3[69]h|SOG0[1-9]|SOL2[2-6]|SOT[23]1|SOV3[1-9]|SOV4[0-3]|X10[ia]v?|E1[05][ai]v?|MT[0-9]{2}[a-z]? Build|SO-0(?:[12]C|[2-5]D|[1-4]E|[1-5]F|[1-5]G|[1-4]H|[1-4]J|[1-5]K|1M|[1-3]L)|R800[aix]|LiveWithWalkman|BRAVIA|SGP771|E3 Dual|A[012]01SO|A204SO|A[12]02SO|SO-[45]1[AB]|SO-5[1234][ABC]|A[12]03SO|A002SO|NW-(A[13]00|ZX500|Z1000)Series|NSZ-GS7|SmartWatch 3|SVP-DTV15`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E10[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E15[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(LT15[ai]?v?|SO-01C)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT18[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT11`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT15`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT27`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MK16[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST15[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST17[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-02L`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST18[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SK17[ai]?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?X10[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)M1`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?R800`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?WT19|LiveWithWalkman`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?CK13i`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?CK15[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F100i`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J105`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J108`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J10`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U10`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U100`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U1`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U5`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U8`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W100`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W150`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W960`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?WT13`),
		regexp.MustCompile(`(?i)SO-01E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ-BE[4-7]2`),
		regexp.MustCompile(`(?i)XQ-AQ[56]2`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I(?:4113|31[12]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J3173(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SO-41B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A203SO|SO-53C|SOG08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A001SO|XQ-AU42|XQ-AU51|XQ-A[TU]52|SO-41A|SOV43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A10[12]SO|SO-52B|SOG04|XQ-BT52)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ-BT44(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:XQ-CC72|XQ-CC[45]4|SOG07|SO-52C|A202SO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I(?:42[19]3|32[12]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I4193`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J(?:9110|81[17]0)|SOV40|SO-03L|802SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J9150)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG01|SO-51A|XQ-AT42|XQ-AT51|SO51Aa|XQ-AT72)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SO-51B|SOG03|XQ-BC[4567]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG06|XQ-CT72|SO-51C|A201SO|XQ-CT[45]4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT22i|Xperia P`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT25i|Xperia V`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J92[16]0`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J82[17]0|SO-01M|SOV41|901SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG02|A002SO|XQ-AS[4567]2|SO-52A)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SO-53B|A103SO|SOG05|XQ-BQ[4567]2)`),
		regexp.MustCompile(`(?i)(?:SOG09|XQ-CQ72|SO-54C|XQ-CQ[45]4|A204SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOV42|902SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J3273`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26ii`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26i|Xperia S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-02C`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-03D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26w`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT28[aih]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT29i|Xperia TX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT30a`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT30p`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST21[ia]2`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST21[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST23[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST25[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL22`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL21`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST26[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST27[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C150[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C160[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E210[45]|E2115|E2124)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E20[05]3|E2006`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C190[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C200[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C210[45]|S36h`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C230[45]|S39h`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C530[236]|Xperia SP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C550[23]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C650[236]|Xperia ZL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL25(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C66(?:0[236]|16)|SO-02E)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C68(?:0[26]|[34]3)|XL39H|SOL24)|Xperia Z Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xperia Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D200[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D21(?:0[45]|14)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D22(?:0[236]|43)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2212|E3 Dual`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E20[34]3`),
		regexp.MustCompile(`(?i)H33[12]1`),
		regexp.MustCompile(`(?i)H43[13]1`),
		regexp.MustCompile(`(?i)I43[13]2`),
		regexp.MustCompile(`(?i)XQ-AD5[12]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2302`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D230[356]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D240[36]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E230[36]|E23[35]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E2312|E2363)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E56[05][36]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E56[436]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2502`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2533`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E53[05]3|E5306`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E53[0346]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E5506|E5553`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E55[36]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D510[236]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D530[36]|D5316|XM50[ht])`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D5322`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D5503|Xperia Z1 Compact`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C69(?:0[236]|16|43)|SOL23|L39H|SO-0[12]F)|Xperia Z1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D58[03]3|SO-02G)|Xperia Z3 Compact(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP561|SOT21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D65(?:0[23]|43)|SO-03F)|Xperia Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D66[045]3|D66[14]6|SO-01G|SOL26|401SO)|Xperia Z3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D6633|D6683)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E65[35]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D6708)`),
		regexp.MustCompile(`(?i)SOV31|402SO|SO-03G`),
		regexp.MustCompile(`(?i)SGP771|SOT31|SO-05G`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E58[02]3|SO-02H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E66[05]3|SOV32|501SO|SO-01H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E66[38]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E68[58]3|SO-03H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E6833`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F311[135]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F311[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F321[135]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F321[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F833[12]|SOV34|601SO|SO-01J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:701SO|SOV36|G834[123]|SO-01K)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G8441|SO-02K`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F331[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G312[135]|G311[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G341[26]|G342[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G3426`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G322[136]|G3212`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H31[123]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H41[13]3`),
		regexp.MustCompile(`(?i)H44[19]3|H3413`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H(?:3213|3223|4213|4233)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G823[12]|SOV35|602SO|SO-03J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:G814[12]|G8188|SO-04[JK])`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:H83[12]4|H82[17]6|SOV37|SO-03K|H8296|702SO)`),
		regexp.MustCompile(`(?i)(?:H81[16]6|SOV38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:H(8416|9436|9493)|SO-01L|SOV39|801SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G331[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G3312`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-04E`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-04D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-05D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5121`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5122`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5321|SO-02J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:F8131|502SO|SOV33|SO-04H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F8132`),
		regexp.MustCompile(`(?i)(?:Sony)?(?:SGP(?:311|312|321)|(Sony)?SO-03E|Tablet Z LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP712(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP(?:511|512|521)(?:[);/ ]|$)|SO-05F`),
		regexp.MustCompile(`(?i)SGP(?:6[124]1|612)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGPT(?:12|121|122|123|13|131|132|133)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BRAVIA )(2K GB ATV3|[48]K UR[123]|4K GB ATV3|4K GB|4K VH2|4K 2015|2015|VH1|VU[12]|VU31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SVP-DTV15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NSZ-GS7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sony-BRAVIA-VH1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NW-(A[13]00|Z1000|ZX500)Series`),
		regexp.MustCompile(`(?i)SonyBDP|SonyDBV`),
		regexp.MustCompile(`(?i)(?:Sony-)?(KDL?-?[0-9a-z]+)`),
		regexp.MustCompile(`(?i)Opera TV Store.*(?:Sony-)([0-9a-z\-_]+)`),
		regexp.MustCompile(`(?i)((?:WT|SO|ST|SK|MK)[0-9]+[a-z]*[0-9]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)(MT[0-9]{2}[a-z]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)portalmmm/2.0 K([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SonyEricsson ?IS11S`),
		regexp.MustCompile(`(?i)Sony ?Ericsson?([^/;]*) Build`),
		regexp.MustCompile(`(?i)SonyEricsson([CGJKPTWZ][0-9]+[a-z]+)/`),
		regexp.MustCompile(`(?i)Sony ?Ericsson ?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)Sony Corporation/([^/;]*)\)`),
		regexp.MustCompile(`(?i)Sony (Tablet[^/;]*) Build`),
		regexp.MustCompile(`(?i)(SGP[^/;]*) Build`),
		regexp.MustCompile(`(?i)Xperia ([^/;]*Tablet[^/;]*) Build`),
		regexp.MustCompile(`(?i)Xperia ([^;/]+) \(AOSP\) Build`),
		regexp.MustCompile(`(?i)Xperia ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(XQ-[A-Z]{2}[0-9]{2})`),
		regexp.MustCompile(`(?i)Sony[ -]?([^/;]*) Build`),
		regexp.MustCompile(`(?i)Sony[ -]?([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)((?:SM-LED32M(?:11|04)S)|SM-LED40M04S)(?:_-Ver01)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOYES[ _](?:[67]S|XS|XS11)|S10-H|XS12 PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOYES[ _]([67]S|XS11|XS)`),
		regexp.MustCompile(`(?i)Spark Plus 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sparx[ _]`),
		regexp.MustCompile(`(?i)(Versity (?:9640|9553))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CARBONO_5|CUARZO_6|DIAMANTE_5|VULCANO_55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VULCANO_55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CARBONO_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUARZO_6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIAMANTE_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice|(?:Xlife[-_ ](?:\d+Q?|Victor5|M5q\+|M5 Pro|Proton5|Electro55HD))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Spice_)?Xlife[-_ ](\d+Q?|M5\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xlife-M5q\+`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(7\d{2})N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(7\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(\d{3})N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(\d{3})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Spice[-_ ]?([^/;]+)(?:/|$)`),
		regexp.MustCompile(`(?i)AQT(100|8[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:N(?:9[5678]00|8800|9000|9977)|Star[ _]N9589)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Star_)?N(9[5678]00|8800|9977|9589)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starlight|(?:My_Star_X|RIO STAR|C_Note(?:_Pro)?|Star_Mix_2|I_STAR_PLUS|star_plus_plus|star_two|I star (?:one|two))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I star two|star_two`),
		regexp.MustCompile(`(?i)(?:Starmobile (?:Play (?:Neo|Spark|GO|Click|Max)|Astra)|DIAMOND D1|UP[_ ](?:Sense|Rave|Groove|Octa|Prime|Selfie|Snap|Xtreme|XL|Max|Vision|Neo)|PLAY (?:Club|Style|Click LTE)|ENGAGE7\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starmobile PLAY GO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starmobile ASTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIAMOND D1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Starmobile )?Play (Neo|Spark|Click|Club|Style|Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UP[_ ](Sense|Rave|Groove|Octa|Prime|Selfie|Snap|Xtreme|XL|Max|Vision|Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ENGAGE7\+`),
		regexp.MustCompile(`(?i)Andromeda[ _]S(707|84[05]|850|8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart_Starwind|(?:SW-LED(?:24SG303|32SB302|42SB300|40SG300|43SG30[20]|32SG30[012]|55UG400|50UB401))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SW-LED(\d{2}[SU][BG]\d{3})`),
		regexp.MustCompile(`(?i)STX[ -]([^;/]+)|STONE EVO`),
		regexp.MustCompile(`(?i)STX[ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)STX[ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)eZee[^a-z]*Tab ?([^;/]*) Build|STOREX LinkBox`),
		regexp.MustCompile(`(?i)eZee[^a-z]*Tab ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)StrawBerry[ _]`),
		regexp.MustCompile(`(?i)StrawBerry[ _](SX|QX15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B3 (?:Maxi|Simply)|B3Pro|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:B1s|HT28|HT16))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B3 (?:Maxi|Simply)|B1s|HT28|HT16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B3Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STYLO|(?:TARISTAB[234]|Luna|CPE91|VS571|VS5502|S57_A[ZL]URE|BOLD_PLUS|INKOSI(?:_PRO)?|INKULU_PRO|Ithemba|S56 MIST|S55 Nova|S40_VISTA|S50_JADE|S50_BOLD|S64_ALPHA|S53_STARK|S40_LIFE|LIFE_2|S49[_ ](?:MONO|POISE|ECO)| [27]21|721_PRO|DQR22|MOSCOW|STEP_UP|ARCTIC|S61 JAZZ|DVK87 Orion 8 Tab)(?:[);/ ]|$)| BRAVE(?: Build|[;)])`),
		regexp.MustCompile(`(?i)STYLO[ _](F1|Viva)`),
		regexp.MustCompile(`(?i) ([27]21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STYLO[ _]S9[_ ]TOPAZ`),
		regexp.MustCompile(`(?i)SV61 VECTOR\+`),
		regexp.MustCompile(`(?i)SM61 MAGIC\+`),
		regexp.MustCompile(`(?i)S49[_ ]POISE`),
		regexp.MustCompile(`(?i)S49[_ ]MONO`),
		regexp.MustCompile(`(?i)S49[_ ]ECO`),
		regexp.MustCompile(`(?i)Stylo[_ ](521)`),
		regexp.MustCompile(`(?i)(VS571|VS5502)`),
		regexp.MustCompile(`(?i)TARISTAB([2-4])`),
		regexp.MustCompile(`(?i)SUBOR[ _]`),
		regexp.MustCompile(`(?i)SUBOR[ _](S5|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUBOR[_ ]K10PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR[ _]`),
		regexp.MustCompile(`(?i)SUGAR Y([78]) MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR S60 pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR F7 Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR[ _]([^);/]+) ?Dual(?: Build|[);])`),
		regexp.MustCompile(`(?i)SUGAR[ _]([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Cyclone [^/;]+) Build`),
		regexp.MustCompile(`(?i)SUNVAN[ _\-]`),
		regexp.MustCompile(`(?i)SUNVAN[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)SUNVAN[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(Model Y)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1s-G|T2s_LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T2s_LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1s)-G`),
		regexp.MustCompile(`(?i)(?:SS4G9 Mira|SS4G7 Sole|SS4G1 Luna|SS4G8 Nora|SS4G6 Lola|SN7014S?|SN7016|SN10016|SUNNY (?:SS01|S52D))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SS4G9 Mira|SS4G7 Sole|SS4G1 Luna|SS4G8 Nora|SS4G6 Lola)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUNNY (SS01|S52D)`),
		regexp.MustCompile(`(?i)(SN7014S?|SN7016|SN10016)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB(?:2323GMQC|1081|918QC|917QC-(?:8|16)GB)|TAB1090)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T95ZPLUS|T95[KU]PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T95[KU])PRO`),
		regexp.MustCompile(`(?i)SuperBOX_S2PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SC-[0-9]+[a-z]+|SC-2110)`),
		regexp.MustCompile(`(?i)(?:SuperTab(?:A10|K7|S7G)|K7 Kids)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SuperTab(A10|K7|S7G)`),
		regexp.MustCompile(`(?i)SUPRA|NVTAB 7.0 3G|M74C 3G`),
		regexp.MustCompile(`(?i)SUPRA[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(NVTAB 7.0 3G|M74C 3G)`),
		regexp.MustCompile(`(?i)(SN10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOLT_(5XL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUZUKI[ _]|(?:ECOPAD7|SUMOPad10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUMOPAD(8100|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SBX604)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Slate2|Swipe_(?:Elite_3M?|Strike8)|Elite_(?:Grace|VR)|EliteDual|Elite (?:Prime|Star|Note|Sense)|Konnect (?:Prime|Power|Neo 4G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Swipe_)?Elite[_ ]?(Sense|VR|3M?|Grace|Star|Prime|Note|Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slate2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Swipe[_ ]Strike8`),
		regexp.MustCompile(`(?i)swisstone (SD 5[13]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)eSmart[_ ]([EM]2|M3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RS-403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SYMPHONY[ \_]([a-z0-9]+)|(?:(?:roar[ _](?:V20|A50|V78|E80|V150))|roarV95|ZVIII?|V10[25]|V1[23]0|V128|V14[012]|V1[45]5|SYMTAB\d+| (?:i97|i7[245]|i6[58]|i30|i1[58]|i120|Z30 pro|[ZR]30|V9[246789]|V75m)|INOVA|Android 7(?:[\d.]*);(?: [\w-]+;)? P11|Android 6.*; (?:V75|i2[015])|EASY_NAV_2|G10\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)roar[ _]?(V20|A50|E80|V78|V95|V150)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z30|P7) pro`),
		regexp.MustCompile(`(?i) G10\+`),
		regexp.MustCompile(`(?i) (V141|V1[23]0|V10[25]|V128|V14[012]|i97|i7[245]|i6[58]|i30|i1[58]|i120|V1[45]5|[ZR]30|V9[246789]|V75m?|i2[015]|P11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SYMPHONY[ \_]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SYMTAB(\d+)`),
		regexp.MustCompile(`(?i)(SYX-(?:T70[04]|T10[12]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T-Mobile[ _][a-z0-9 ]+|(?:REVVLRY\+?|REVVL V\+ 5G|REVVL 2(?: PLUS)?|5062[ZW]|5007[ZW]|T790[WZ]|Telekom Puls|TMAF0[23]5G|TMRVL4G|T Phone)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5062[ZW]`),
		regexp.MustCompile(`(?i)5007[ZW]`),
		regexp.MustCompile(`(?i)T790[WZ]`),
		regexp.MustCompile(`(?i)REVVL V\+ 5G`),
		regexp.MustCompile(`(?i)REVVL 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TMAF025G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TMAF035G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Telekom Puls(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T Phone Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T Phone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T-Mobile[ _]([a-z0-9_ ]+) Build`),
		regexp.MustCompile(`(?i)T-Mobile[ _]([a-z0-9_ ]+)`),
		regexp.MustCompile(`(?i)T96mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG[ -]TAB[ -]III?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG[ -]TAB[ -](III?)`),
		regexp.MustCompile(`(?i)Ignis [89]`),
		regexp.MustCompile(`(?i)Ignis ([89])`),
		regexp.MustCompile(`(?i)TCL,|TCL[_ -][a-z0-9]+|(?:TCL[_ -][^;/]+ Build)|(?:TCLGalaG60(?:\(9108A\))?|4163D|4187[DMU]|4188[CLRSVO]|5004S|5087Z|5101A|5102[BKLMOP]|5107G|5124J|5130[JMEI]|5133A|5148A|5152D|5159[AJ]|5164D|5199I|6102[ADH]|6125[ADFH]|6127[AI]|6156[ADH]|6159[AK]|6165[AHS]|7040N|8491X|9048S|9060[GX]|9080G|9081X|9295G|9296[GQ]|A(?:50[2789]|600)DL|T(?:60[123]|701)DL|T(?:506D|671[EFGHO]|676[HJK]|766[AHJSU]|767[GHW]|770[BH]|771K|773O|774[BH]|775[BH]|776[HO]|779W|780H|781SPP|781S|781|782H|790[SY]|799[BH]|810[HS])|Percee TV|9317X1|9161G| 9061| 8182| 8167| 8095|BeyondTV\d?|T507U|T610[KE]|9132G|9166G|9137W|T430W|T431[DU]|T501[CL]|T768S)(?:_(?:RU|EEA|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TCLGalaG60(?:\(9108A\))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5004S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T430W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T501[CL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T779W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4187D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:4163D|4188S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T431[DU](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6102[AD](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5164D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6102H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T506D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T507U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T610[KE](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T774[BH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T775B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T775H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6125[ADFH]`),
		regexp.MustCompile(`(?i)6127[AI]`),
		regexp.MustCompile(`(?i)6156[ADH]`),
		regexp.MustCompile(`(?i)6159[AK]`),
		regexp.MustCompile(`(?i)5199I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A509DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A600DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5102[LO](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5152D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5133A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5102[BKMP](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5159[AJ](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5101A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5107G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5124J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5130[JEI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4187[MU](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5148A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5130M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T780H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T782H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T790Y(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T790S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TCL[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)TCL[_ -]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(7040N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A502DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A507DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A508DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T601DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T770[HB](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T766[AHJSU](?:_(?:EEA|TR|RU))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T671[HFEO](?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T768S(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6165[AHS]`),
		regexp.MustCompile(`(?i)T676[KJ]`),
		regexp.MustCompile(`(?i)(?:4188[CLRO]|T602DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T781S|T781SPP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T776[HO]`),
		regexp.MustCompile(`(?i)T767[GW](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T671G|T701DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T767H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T773O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5087Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T781(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T810[SH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T799[BH]`),
		regexp.MustCompile(`(?i)T771K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) 8095(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9048S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (?:9061|9081X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (?:8167)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (?:8182)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9060G|9161G`),
		regexp.MustCompile(`(?i)(Percee TV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BeyondTV(\d)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:43|55)S62FS|(?:43|50)P65US|U(?:43|60|65)P60|65P4USM|(?:40|49)S62|L32S6|55P610|50P8S|55S62|(?:43|50)P6US|55DP60)`),
		regexp.MustCompile(`(?i)(K(?:24|32)DLX9HS|K40DLM8FS|K40DLX9FS|K50DLX9US|K50DLJ10US|K43DLJ10US|K32DLX10HS|K32DLJ12HS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Build/TDTech|(?:NAT-TN70|TDT-MA01|AVA-PA00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TEENO[_ ](S9|A1|i12|S11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TENPLUS[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)TETC[ -](F\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIANYU ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TIANYU-KTOUCH/([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TIM_BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Metal_Tablet_10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOGO[_ ]`),
		regexp.MustCompile(`(?i)TOOGO[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(ArtiDiag800 BT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOPSHOWS[ _-](X[19])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:T1[235]|T151|T2[12])-EEA|W-?109)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T1[235]|T151|T2[12])-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)W-?109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TPS-(SC10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Magictab (?:9GX|7GE|718))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NuclearSX-SP5)`),
		regexp.MustCompile(`(?i)Amazing[ _](X[35]s|X[123567]|A5S|A3[025]|A[468]|A4S|A5[057]|P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](X[35])s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](A5S|X[123567]|A[468]|A4S|A5[057]|A3[025])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWZ[-_ ](?:TabPlay|Y6[08]|Y52|A49|A[59]5|A567|AA8|QQ[12])|TWZQQ1|(?:OX_X1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWZ[_ ]TabPlay[_ ](12[56])`),
		regexp.MustCompile(`(?i)TWZ[-_ ]?(Y6[08]|Y52|A49|A[59]5|A567|AA8|QQ[12])`),
		regexp.MustCompile(`(?i)(?:TP_1_3000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID211H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Nitro 551)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA-(?:2[_ ](?:3G|Pro)|5[05][_ ]Power|[1-4]|[1246]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TX[53] MAX|TX[69]s|TX3 Mini|TX3MINI|TX5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TX([69])s`),
		regexp.MustCompile(`(?i)TX([35]) MAX`),
		regexp.MustCompile(`(?i)TX3 Mini|TX3MINI`),
		regexp.MustCompile(`(?i)TeachTouch[_ ]`),
		regexp.MustCompile(`(?i)TeachTouch (Table)`),
		regexp.MustCompile(`(?i)TECTOY_5029Y(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tech[ _]?pad|XTAB[ _-]|(?:3G_16|Dual (?:C1081HD|C981HD)|S813G|NOTE[_ ]4CAM|M5(?:Go|Plus)|M6Plus|Android 8(?:[\d.]*);(?: [\w-]+;)? 816x?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tech ?Pad[_ ](10Y|9x|i700|10Z|7QC|10QC)`),
		regexp.MustCompile(`(?i)TechPad[_ ]3Gx`),
		regexp.MustCompile(`(?i)Android 8(?:[\d.]*);(?: [\w-]+;)? (816x?)`),
		regexp.MustCompile(`(?i)Dual (C981HD|C1081HD)`),
		regexp.MustCompile(`(?i)XTAB[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)M5(Go|Plus)`),
		regexp.MustCompile(`(?i)NOTE[ _]4CAM`),
		regexp.MustCompile(`(?i)Tech ?pad[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)TECHSMART[_ ]`),
		regexp.MustCompile(`(?i)TECHSMART[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)TechniPhone 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:UP10SI[34]6LA|UP918|UP7[67]8|UP1018|UP10_SH36LAG|Ultrapad_UP10\.S36LA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(UP10SI[34]6LA|UP918|UP778|UP768|UP1018)`),
		regexp.MustCompile(`(?i)(?:Ultrapad_)?UP10[_.](SH36LAG|S36LA)`),
		regexp.MustCompile(`(?i)Teclast|P80_G3M2|TLA00[12]|TLA016|X98 Air III|M20_4G|X98 Air II\(HG5N\)|Tbook|X80 Power\(B2N4\)|P80H\(D1C2\)|T20\(T2E1\)|(?:[TM]40 Plus|T30|P80[XH]|P20HD|P10[_ ]HD|M40|P10SE?|M30_Pro|M40SE|P8[05]|P25(?:_T)?|P[23]0S|P[34]0HD)_(?:ROW|EEA|RUS)|P20HD\(N6H5\)|T40 Plus\(M7T3\)|T40Pro|T40 PRO(?:\(T1A1\))?|T10\(E3C[56]\)|P10S\(N4H5\)|98\(M1E[45789]\)|98\(M3E3\)|X10 \(M1D3\)|M89 Pro|M40\(N9H[123]\)|P20HD\(N6H7\)|M40SE\(M5T3\)|M40(?:SE?|Pro|Air)_(?:ROW|EEA|RUS)| P80X|P30Air|P10HD_Lite|(?:T50|M40_Plus|M40 Pro|T50Pro_W)_(?:ROW|EEA)`),
		regexp.MustCompile(`(?i)Tbook[_ -]([^;/]+)(?: Build|[;)]|$)`),
		regexp.MustCompile(`(?i)T10\(E3C[56]\)`),
		regexp.MustCompile(`(?i)T20\(T2E1\)`),
		regexp.MustCompile(`(?i)X10 \(M1D3\)`),
		regexp.MustCompile(`(?i)P10S(?:\(N4H5\)|_(?:ROW|EEA))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P20HD_?(?:ROW|EEA|RUS)|P20HD\(N6H[57]\)`),
		regexp.MustCompile(`(?i)P40HD_?(?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)P10[_ ]HD_(?:ROW|EEA)`),
		regexp.MustCompile(`(?i)P80[_ ](?:ROW|EEA)|P80_G3M2`),
		regexp.MustCompile(`(?i)P30S[_ ](?:ROW|EEA)`),
		regexp.MustCompile(`(?i)P85[_ ](?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)M([43]0)[_ ]?Pro[_ ](?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)M40\(N9H[123]\)`),
		regexp.MustCompile(`(?i)M40[_ ]Plus`),
		regexp.MustCompile(`(?i)M40S[_ ](?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)T40 ?PRO`),
		regexp.MustCompile(`(?i)T40 Plus(?:_(?:ROW|EEA)|\(M7T3\))`),
		regexp.MustCompile(`(?i)P80H\(D1C2\)`),
		regexp.MustCompile(`(?i)(P80[Xh]|P30HD|T30|M40|P25(?:_T)?|P10SE|P20S|T50)[_ ](?:ROW|EEA)`),
		regexp.MustCompile(`(?i)98\(M1E[45789]\)|98\(M3E3\)`),
		regexp.MustCompile(`(?i)X80 Power\(B2N4\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X98 Air III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X98 Air II\(HG5N\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Teclast[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Tecno|Phantom[56]|Phantom6-Plus|Phantom6S|DP7C Pro-SGA1`),
		regexp.MustCompile(`(?i)Phantom([56])`),
		regexp.MustCompile(`(?i)TECNO[ _]AD8`),
		regexp.MustCompile(`(?i)TECNO[ _]AD9`),
		regexp.MustCompile(`(?i)TECNO[ _]AC8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AD10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AB7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AX8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]F4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IA5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID3k(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID5b(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID5a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN1 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]7C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P701(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DP7C Pro-SGA1|TECNO[ _]DP7CPRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P703(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P704a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]DP10A Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]P904(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]RC6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CB7[j]?`),
		regexp.MustCompile(`(?i)Tecno[- _]C9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CF7[kS]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CF8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CC7S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CC9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:CC6|KC3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD6S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD8j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:CE9h|CE7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD6j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE7j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG8h?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:Mobile )?CH9n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:Mobile )?CH6[nh]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CH7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:CH6i|CI6n?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CI8n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CI7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CK7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CK6n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CK8n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CK9n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA6S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA8S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]Camon CX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CX Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]F3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]SA2S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1[fg](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:RA8|KB2h)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB2j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BA2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB8S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB6S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]SC7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BB2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BB4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC2c?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC3?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC1s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD2[dp]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]L6502S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]W5006S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD4[ai]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD4[jh](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B(?:E7|F6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BE6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BE8[i]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BF7h?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]SA1S Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KG5[mh]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:Mobile )?BF7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KA7O?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]LB6?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KB7j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KB8?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:KC8S?|KC2j?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:KC6S?|KC1j)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]BB4k(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD6a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD7[hS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE5[jk]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:KF6(?:ks|[nhmjki])?|PR651[EH]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF7j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF6p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?KG6k?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG5[nkjq]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG7[nh]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO(?: Mobile)?[ _]KG6p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO(?: Mobile)?[ _]KG8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KH7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG5p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KH6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile[ _])?KI5[km]`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile[ _])?KI5`),
		regexp.MustCompile(`(?i)TECNO[ _]KI8`),
		regexp.MustCompile(`(?i)TECNO[ _]KI7`),
		regexp.MustCompile(`(?i)TECNO[ _]KC1h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE5S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KC1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]K9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KA9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]DP8D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](P702AS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA7 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LB7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LC6a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]LB8a?`),
		regexp.MustCompile(`(?i)TECNO[ _]LC7S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LC8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]J8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]RA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]W3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]WX3P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LD7j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE6h?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?LG6n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LH6n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LF7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LG7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LG8n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LH7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno (F2) ?LTE`),
		regexp.MustCompile(`(?i)(?:TECNO[-_])?L8Plus`),
		regexp.MustCompile(`(?i)TECNO[ _-]?(T611)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Tecno[ _-]?([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)Preo[ _]`),
		regexp.MustCompile(`(?i)Preo[ _]P([23])`),
		regexp.MustCompile(`(?i)Tele2[ _]|Tele2fon`),
		regexp.MustCompile(`(?i)Tele2fon[_ ]V6`),
		regexp.MustCompile(`(?i)Tele2[ _](Mi[dn]i)[ _]1.1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _]Midi[ _]2.0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _]((?:Maxi|Midi)(?:[_ ](?:Plus|LTE))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _](Mi[dn]i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TELEFUNKEN|Foxtrot|TEL-1013GIQA|TEL-1014GIQ|TEL-73GIQA|TEL-74GIQ|TF-SP(?:500[12]|4002)|(TF-MID(?:[78]02G|70[78]G|80[46]G|9705RG|9707G|7805G|100[57]G|1010G))| TF5X| TF6|TF500|TF501_EC|(TF-LED(?:50S04T2SU|50S25T2SU|58S06T2SU|65S75T2SU|32S39T2S|32S5[289]T2S|32S60T2S|32S7[045]T2S|40S63T2S|40S19T2S|40S41T2S|43S94T2S|43S22T2SU))|LTE_LIMA|LTE Mike|Diamond_LTE|Outdoor (?:LTE|WT4|WT4-S)|TELP-1013KBC`),
		regexp.MustCompile(`(?i)TEL-(1014GIQ|74GIQ|73GIQA(?:11)?)`),
		regexp.MustCompile(`(?i)(?:TELEFUNKEN)?(TF-SP(?:500[12]|4002)|Outdoor (?:LTE|WT4-S|WT4)|Foxtrot|TF5X|TF6)`),
		regexp.MustCompile(`(?i)(TF-MID(?:[78]02G|70[78]G|80[46]G|9705RG|9707G|7805G|100[57]G|1010G)|TF501_EC|TELP-1013KBC)`),
		regexp.MustCompile(`(?i)(TF-LED(?:50S04T2SU|50S25T2SU|58S06T2SU|65S75T2SU|32S39T2S|32S5[289]T2S|32S60T2S|32S7[045]T2S|40S63T2S|40S19T2S|40S41T2S|43S94T2S|43S22T2SU)|TF500)`),
		regexp.MustCompile(`(?i)TELEFUNKEN, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)TELEGO|Wise2_plus`),
		regexp.MustCompile(`(?i)Telego[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Telenor|(?:Infinity[_ ](?:E[2-5]|K2?|A2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Telenor[ _]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Infinity[ _](E[2-5]|K2?|A2)`),
		regexp.MustCompile(`(?i)Telit_Mobile_Terminals-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Telit[\-_]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Telma|(?:F1x4G|Feel_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TELMA F1\+4G`),
		regexp.MustCompile(`(?i)TELMA[_ ]FEEL`),
		regexp.MustCompile(`(?i)Telma[_ ](F2|Titan[_ ]4G|EGO)`),
		regexp.MustCompile(`(?i)TELO[_ ](?:TE6|M5|TE580_CO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TELO[_ ](TE6|TE580_CO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TPS3[29]0`),
		regexp.MustCompile(`(?i)TPS(3[29]0)`),
		regexp.MustCompile(`(?i)Teracube (2e|One)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hudl (?:[^/;]+)(?: Build|[;)])|W032i-C3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hudl ([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)W032i-C3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASEBOOK_3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ThL[ _-]|(?:Knight 2|THL5000|T200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)THL ?(5000)`),
		regexp.MustCompile(`(?i)(T200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Box 1 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Box 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ThL[ _-]*([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)ThL[ _-]*([^ ;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Primo(7|8)|QM73[45]-8G|QM734-2|QM736-8G\(HD\)|8950|MID1002|5014G|TEO(?:13P|10S|7RK|X10[23]|104G)|Friendly_TH101|Delight TH201|HERO10RK|SPTEO10BK16)(?:[);/ ]|$)|(?:Tlink|Every)[0-9]+|THOMSON[, ]`),
		regexp.MustCompile(`(?i)Primo(7|8)`),
		regexp.MustCompile(`(?i)QM736-8G\(HD\)`),
		regexp.MustCompile(`(?i)8950(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TEO(13P|10S|7RK|104G|X10[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(5014G|T510H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tlink([0-9]+)`),
		regexp.MustCompile(`(?i)Every([0-9]+)`),
		regexp.MustCompile(`(?i)THOMSON[ _]SEREA500`),
		regexp.MustCompile(`(?i)((?:49|55)UC6306|55UC63|32HD55|40FD54|55UD63)`),
		regexp.MustCompile(`(?i)Thuraya[ _](X5-Touch)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TiPhone ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TIVO[ ,]`),
		regexp.MustCompile(`(?i)Tibuta[_ ]`),
		regexp.MustCompile(`(?i)Tibuta[_ ]MasterPad-(E100)`),
		regexp.MustCompile(`(?i)TIS001[_-]|TIS_?001`),
		regexp.MustCompile(`(?i)TIS001[_-]S([34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIS001[_-]T2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIS_?001([ABC])?`),
		regexp.MustCompile(`(?i)(TC1050G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tmovi[ _]|(?:Infinit[ _](?:Lite[_ ]2|X[_ ]CAM)|Infinit MX(?: Pro)?|Vision_PRO|VISION ULTRA|Epix|Yeah_Go|Insignia Delta 2|Insignia_(?:Delta3|Lab))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tmovi[ _]Prime`),
		regexp.MustCompile(`(?i)Infinit[_ ]X[_ ]CAM`),
		regexp.MustCompile(`(?i)Infinit[_ ]Lite([_ ]2)?`),
		regexp.MustCompile(`(?i)Insignia_(Lab)`),
		regexp.MustCompile(`(?i)Insignia[ _]Delta[ _]?([32])`),
		regexp.MustCompile(`(?i)Tinai (K[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TiNMO[- _](A11|K3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tolino Tab ([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)TONE[ _-](e19|m1[57]|e2[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOKY (A19|W1|T8[368]|T1982)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOKY A9PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Coto[_ ]|X1013`),
		regexp.MustCompile(`(?i)TopDevice|TDTV\d{2}BS\d{2}[FHU]|TDT4518_4G`),
		regexp.MustCompile(`(?i)(?:TopDevice_)?(TDTV\d{2}BS\d{2}[FHU])`),
		regexp.MustCompile(`(?i)Toplux ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TOPSION|TP01_box(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOREX[- ](?:PS12|S18|S27|PAD 8 ?PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOREX-(PS12)`),
		regexp.MustCompile(`(?i)TOREX PAD 8 ?PRO`),
		regexp.MustCompile(`(?i)TOREX[- ](S18|S27)`),
		regexp.MustCompile(`(?i)(?:EGO[ _](?:Max[ _]S|Surf[_ ][iS]|Phab 3G|Note 4G)|DROIDZ (?:Drive\+|ATOM [SX]|Portal(?: X)?|Swivel|Smart|Trend|Force|Span|Play|Blast|Sport|Excel|Motion|Sky 3g|Rotate|Duo(?: Slim)?|Dash(?: X)?|Quad|Match TV|Beat TV|Avatar TV|Easy|Push i|Edge\+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DROIDZ (Duo(?: Slim)?|Dash(?: X)?|Push i|Edge\+|Drive\+|Portal(?: X)?)`),
		regexp.MustCompile(`(?i)DROIDZ (Swivel|Trend|Force|Span|Smart|Atom X|Blast|Sport|Quad|Beat TV|Avatar TV|Match TV|Easy|Excel|Play|Rotate|Motion)`),
		regexp.MustCompile(`(?i)EGO[ _](Max[ _]S|Surf[_ ][iS])`),
		regexp.MustCompile(`(?i)Toshiba|TSBNetTV/|portalmmm/[12].0 TS|(?:T-01C|T-0[12]D|IS04|IS11T|AT1S0|AT300SE|AFTDCT31|AT(?:7-C|10-A|10[PL]E-A|100|200|270|300|330|374|400|470|500a?|503|570|703|830)|AFTKMST12|AFTBAMR311|SATELLITE (?:C655|L50-C|Pro L300|A100))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AT(100|200|270|300|330|374|400|470|500|503|570|703|830)`),
		regexp.MustCompile(`(?i)AT10([PL])E-A`),
		regexp.MustCompile(`(?i)SATELLITE (C655|Pro L300|A100)`),
		regexp.MustCompile(`(?i)TOSHIBA, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Toshiba[ /_\-]?([a-z0-9_ \-]+) Build`),
		regexp.MustCompile(`(?i)Toshiba[ /_\-]?([a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12].0 (TS[a-z0-9 ]+)`),
		regexp.MustCompile(`(?i) (770[NG]|1100AS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOUCHMATE|(TM-(?:MID870SB|MID1050WKD|MID1020A|MID794C|MID795|MID710|MID798|MID792|MID788D|SM500N|SM410|MID1010))`),
		regexp.MustCompile(`(?i)(TM-(?:MID1020A|MID794C|MID795|MID710|MID798|MID792|MID788D|MID10[14]0))`),
		regexp.MustCompile(`(?i)(TM-(?:SM500N|SM410))`),
		regexp.MustCompile(`(?i)Touchmate ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Transpeed[_ ]|(?:TR99 MINI\+|TR99)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TR99 MINI\+`),
		regexp.MustCompile(`(?i)(?:Transpeed[_ ])?(TR99|H616|6K|X4S?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TrekStor|Surftab) ([^/;]+)(?: Build|\))|Surftab[^;\)]*(?:[;\)]|$)|ST10216-2A|ST13416-1|VT10416-[12]|TFQCOAL01232|TFMTKAW01232|PEAQ PET 100|Xintroni10.1`),
		regexp.MustCompile(`(?i)ST10216-2A|VT10416-[12]`),
		regexp.MustCompile(`(?i)TrekStor ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Surftab ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Surftab[ _]([^;\)]*)(?:[;\)]|$)`),
		regexp.MustCompile(`(?i)(TFQCOAL01232)`),
		regexp.MustCompile(`(?i)Xintroni10.1`),
		regexp.MustCompile(`(?i)(PEAQ PET 100)`),
		regexp.MustCompile(`(?i)Trevi[ _]|TAB[ _]10[ _]3G[ _]V16|TAB[ _](7|8)[ _]3G[ _]V8|TAB9 3G|MINITAB 3GV|Phablet[ _](?:4|4\.5|5|5\,3|6)[ _]?[CSQ]|REVERSE[ _]5\.5[ _]?Q`),
		regexp.MustCompile(`(?i)TAB[ _]?(7|8)[ _]3G[ _]V8`),
		regexp.MustCompile(`(?i)TAB[ _]?9[ _]3G[ _]V8`),
		regexp.MustCompile(`(?i)TAB[ _]?9[ _]3G`),
		regexp.MustCompile(`(?i)TAB[ _]10[ _]3G[ _]V16`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4[ _]?C`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4[ _]?S`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4.5[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]5[ _]?S`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]5,3[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?REVERSE[ _]5.5[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]6[ _]?S`),
		regexp.MustCompile(`(?i)Trevi[_]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(A23 Max|A75 Pro Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Passion[-_](?:1S|PRO|PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Trio V51 DT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Orion R68G|Draco AW80|Draco H3|Vega S95_(?:Meta|Pro|Telos))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) TRUE BEYOND TAB 3G|HPH07|SMART[ _](4G Adventure(?: Pro)?|MAX 4.0 PLUS|4G[ _](?:GEN C [45]\.[05]|M1 Plus|Champion|Speedy 5\.0 Plus|Speedy[_ ]5inch|P1))|Alpha 5G|SMART Champ 4\.0|TRUE SMART 7.0 Quadcore`),
		regexp.MustCompile(`(?i)Alpha 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART MAX 4.0 PLUS`),
		regexp.MustCompile(`(?i)SMART Champ 4\.0`),
		regexp.MustCompile(`(?i)SMART 4G Gen C ([45].[05])`),
		regexp.MustCompile(`(?i)SMART 4G Speedy 5.0 Plus`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]Speedy[_ ]5inch`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]Champion`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]P1 Prime`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]P1`),
		regexp.MustCompile(`(?i)SMART[ _]4G M1 Plus`),
		regexp.MustCompile(`(?i)TRUE SMART 7\.0 Quadcore`),
		regexp.MustCompile(`(?i)(SSB-508[ED])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TL554B|TC504B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail TT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Turbo[_ ]?(?:X5[_ ]?(?:Max|Black|Space|Hero)|X8|X6[ _]Z|X[ _]Ray)|Monsterpad7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX5Space(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX5Hero(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX[ _]Ray(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]?X5[ _]?Black(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X5[ _]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X6[ _]Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Monsterpad7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[-_]X|(?:TURBOX_I4G|Hive V 3G|Calltab10.1|Calltab2GB10|Calltab7inch|Turbox_S3|Fire_II_WiFi|Breeze IV|Aqua_II|RainbowIII3G|RubikII7|Rubik 10\.1 II|Rubik_10_III|QUAD-CORE A33 inet)(?:[);/ ]|$)|Mercury`),
		regexp.MustCompile(`(?i)Turbo-X_A2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo-X_e3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mercury`),
		regexp.MustCompile(`(?i)Turbo-X_pi_4G|Turbo_X_Pi 1 4G`),
		regexp.MustCompile(`(?i)Turbo-X Ice(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aqua_II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hive V 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fire_II_WiFi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Breeze IV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RubikII7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rubik 10.1 II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rubik_10_III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RainbowIII3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Calltab10.1`),
		regexp.MustCompile(`(?i)TURBO-X, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Turbo-X Tablet([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Turbo-X ([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:Turbokids[-_ ]?(TMNT|3G|S4|Princess|3GNEW)|Monsterpad 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbokids[-_ ]?3GNEW`),
		regexp.MustCompile(`(?i)Turbokids[-_ ]?(TMNT|3G|S4|Princess)`),
		regexp.MustCompile(`(?i)Turbopad[-_ ]?(72[34]|80[23]|912|101[456]|Pro)(?:NEW)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TURKCELL[_ ]`),
		regexp.MustCompile(`(?i)Turbo T50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T([124-8])0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxi Plus 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MaxiPRO5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turkcell_T_Tablet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TWOE[-_ ]E450R|F534L|F572L|E500A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWOE[-_ ](E450R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F534L|F572L|E500A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tymes[ _](V5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TT175(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Liantong)?(?:VP00[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP001`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP002`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP003`),
		regexp.MustCompile(`(?i)(USCC-[a-z0-9_\-]+)`),
		regexp.MustCompile(`(?i)UMI(?:DIGI)?[ _]|(?:A[5]_Pro|.+; A[79] Pro|S3_Pro|ROME[_ ]X|BISON|hammer_S|S2 LITE|London|Z2_PRO|C NOTE 2|A11 Pro Max|Power 3|Android 10;(?: [\w-]+;)? (?:A3[SX]|A7S)|RP0[1234]|MT01|MP0[1-68]|MP1[78]|Plus E|S2_PRO|RP05|One Pro|Diamond_X|Android [67](?:[\d.]*);(?: [\w-]+;)? Z Pro|Android 8(?:[\d.]*);(?: [\w-]+;)? A1_PRO)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MT01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(A[13579]|Z2|S3)[_ ]Pro`),
		regexp.MustCompile(`(?i)MP01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP05(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)ROME[_ ]X`),
		regexp.MustCompile(`(?i)RP05(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP02(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP03(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP04(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)UMI[_ ]SUPER`),
		regexp.MustCompile(`(?i)UMI[_ ]ZERO`),
		regexp.MustCompile(`(?i)MP02(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP08(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP03(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP04(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP06(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i) (A3[SX]|A7S)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(?:UMI_)?(London|Diamond(?:_X)?)`),
		regexp.MustCompile(`(?i)UMI(?:DIGI)?[ _]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)UNIWA[ _]|(?:W888)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNIWA[ _](X5|F40)`),
		regexp.MustCompile(`(?i)(W888)`),
		regexp.MustCompile(`(?i)UNNO[_ ]`),
		regexp.MustCompile(`(?i)UNNO[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)UOOGOU[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)UTOK (45[01]D)|(?:Dorel \d|Dorel 3S|Hello 7Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UTOK (45[01]D)`),
		regexp.MustCompile(`(?i)Dorel (\d)`),
		regexp.MustCompile(`(?i)utstar[ _-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)UTIME[ _](U6|G7|U100|[TX]1|FX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uzbekistan(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGOOS-|(?:Android 11;(?: [\w-]+;)? UT8|TOX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGOOS-UT3 ?Plus`),
		regexp.MustCompile(`(?i)UGOOS-(\w{2}\d+\w?)`),
		regexp.MustCompile(`(?i) (UT8|TOX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A101S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uhappy|UP?580|UP350|UP[35679]20`),
		regexp.MustCompile(`(?i)UP([35679]20)`),
		regexp.MustCompile(`(?i)Uhappy[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Uhappy[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone|Gemini Pro|Power Armor14|Power 3S|Power_[356]|Power_5S|S(?:10|9)_Pro|(?:Note [89]P|Note 1[23]P|Armor(?:[ _](?:[2367]|2S|X[236]|6[SE]|3WT|3W|X))?|U00[78][ _]Pro|Be[ _]X|Be[ _]Touch(?:[ _][23])?|Be[ _](?:One|Pure)(?:[ _]Lite)?|Note 14|Note (?:11P|7T)|Tiger_lite|Note_7P|Note 10P|Paris_(?:Lite|X)|Paris|P6000_Plus|Vienna|Android 11;(?: [\w-]+;)? Note 6P?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S(10|9)_Pro`),
		regexp.MustCompile(`(?i)Be[ _]Touch([ _][23])?`),
		regexp.MustCompile(`(?i)Be[ _]Pure[ _]Lite`),
		regexp.MustCompile(`(?i)Be[ _]Pure`),
		regexp.MustCompile(`(?i)Be[ _]One[ _]Lite`),
		regexp.MustCompile(`(?i)Be[ _]One`),
		regexp.MustCompile(`(?i)Be[ _]X`),
		regexp.MustCompile(`(?i)U(00[78]) Pro`),
		regexp.MustCompile(`(?i)Power Armor ?(\d+) Pro`),
		regexp.MustCompile(`(?i)Power Armor (\d+|19T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]6S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([679])E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([25])S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]3W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]3WT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _](1\d|11T) 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _](8) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([236789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor([^;/)]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Gemini Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power[_ ]([356][SL]?)`),
		regexp.MustCompile(`(?i)Note[ _]([78]P|7T|6|14)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Note ([69]|1[123]|10)P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone[_ ]Tab[_ ]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Ulefone[_ ](X|S1[ _]Pro|S[17])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Ulefone[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)VisionBook[ _]|([78]Qa_3G|7A_3G|VB_10Q_Plus|10A_LTE_eea|(?:8|10)C_LTE|10L-PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VisionBook[ _](?:10Qi|7Q[i]?|8Q[ei]?|P70|8Qi_3G)(?:[ _](?:[34]G|Plus|LTE))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(7A(?:[ _](?:[34]G)))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([78])Qa_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_10Q_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(8|10)C_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_10Q_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10A_LTE_eea(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VB_10Q_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_P50Plus_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VisionBook[ _](?:P50 LTE|P55 X2 LTE|P55 LTE(?: Pro)?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S900PROBT|S900_Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uniden[ _](C505|Prime 500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Titan(_pocket)?|Jelly-Pro|Jelly2(?:_JP)?|Atom_X?L|Ticktock(?:-S)?|Titan Slim|TANK 01|TANK2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Jelly)-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jelly2(?:_JP)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Titan|Atom_X?L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U((?:67[013]|680)C|(?:452|504)TL|683CL|69[36]CL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNIQCELL_A4(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)Uniscope[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Uniscope[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(UT10)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(EA630)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Plasma Mobile|WebTV/(\d+\.\d+)|TV Bro|(?:M10 Ultra|FO-R15|TVBOX|Smart[ _]?TV|SmartATV|M8S\+ 4K|PCBox|rk(?:3128|322x|3368)(?:[_-]box)?|H10 PLAY|Smart AIO TV|TVBOX_L|L-BOX|TVBOX-5G|mips.+(?:Opera TV|wireless|wired)|smartbox|TV BOX|I12Pro Max|(?:audi_)?ks1280x480|AT&T TV|RealtekATV|AOSP on r33a0|hx322x_box|X98_S500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WebTV/(\d+\.\d+)`),
		regexp.MustCompile(`(?i)M10 Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FO-R15|X98_S500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Smart[ _]?TV|SmartATV|PCBox|hx322x_box|rk(?:3128|322x|3368)(?:[_-]box)?|TVBOX|Smart AIO TV|TVBOX_L|L-BOX|TVBOX-5G|AT&T TV|RealtekATV|TV Bro|AOSP on r33a0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S\+ 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H10 PLAY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Opera TV|wireless|wired|smartbox|TV BOX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I12Pro Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:audi_)?ks1280x480`),
		regexp.MustCompile(`(?i)Unnecto|(?:U513|U5151|U61[1356]|U7[12]0|U-830|U90[35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNSP7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNSP7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Unonu[ _-]|(?:U4001|UT3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U4001|UT3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Unonu[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Unonu[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QOOQ|QOOQ-V[1-5]0?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QOOQ-V([1-5])0?`),
		regexp.MustCompile(`(?i)(?:DT[45]0|i6200[AS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DT[45]0|i6200[AS])`),
		regexp.MustCompile(`(?i)(Albatros C2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(32LH1210|50LU1210|55LU1210|43LU1210|24LH1211)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V[- ]hope[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:VPA051|VA-10J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VA-10J)`),
		regexp.MustCompile(`(?i)VAVA[ _](X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Camellia_II|Cactus II|Maple III|Maple-II|Cactus-Pro|LavenderII|Jasmine-II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Camellia_II|Cactus II|Maple III)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Maple|Jasmine|Lavender)-?II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VDVD[_ ](P20|IX21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEON[_ ](C8680)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VETAS[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VGOTEL|(?:Venture V(?:[278]|12)|VentureV10|Ocean[_ ][689]|Ocean9L|NEW (?:11|22|[57])|i_Smart)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venture ?V([278]|1[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ocean[_ ]?([689]|9L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEW (\d+)`),
		regexp.MustCompile(`(?i)VIDA[-_ ](?:i-?([45]01|512|450)|V401)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIDA[-_ ](?:i-?(\d+))`),
		regexp.MustCompile(`(?i)VIDA[-_ ](V401)`),
		regexp.MustCompile(`(?i)(?:vi20220819)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVIMAGE[ _]([^/;)]+)(?:_EEA)?(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:LIGHT MINI|VIWA A5\+|LIGHT PLUS|LIGHT ONE|POWER P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIWA A5\+`),
		regexp.MustCompile(`(?i)VK-VK([79]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:VK700)-MAX|VK700 Pro|T5SE|VK700[0X]|vk6050|vk6735|vk700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VK700)-MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VK700) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T5SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VK(700[0X]|6050|6735|700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOGA[ _]`),
		regexp.MustCompile(`(?i)(VK-740-BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VucaPad_(\w+)`),
		regexp.MustCompile(`(?i)ZYVV1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vankyo[_ ]|(?:QTAB1010X|S10_ROW|S[23]0_EEA|Z[14]_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vankyo[_ ]S(10|[78])`),
		regexp.MustCompile(`(?i)(S[23]0|Z[14])_EEA`),
		regexp.MustCompile(`(?i)QTAB(1010X)`),
		regexp.MustCompile(`(?i)Vargo[; _]|(?:V210101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V210101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M910A|M783K|M783K-16G|M1072R-3G|KingPad_(?:[KM]10|SA10|SA8)(?:Pro)?)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KingPad_([KM]10|SA10|SA8)(Pro)?`),
		regexp.MustCompile(`(?i)(M910A|M783K|M783K-16G|M1072R-3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vega (Q7128)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LD-65SU8815BS|LD-32SR4850BS|LD-50SU8921BS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CX-508|CX-551|Reiv 500|Creon F5|Isprit U50|Isprit-U50-LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Isprit U50|Isprit-U50-LTE`),
		regexp.MustCompile(`(?i)(CX-508|CX-551|Reiv 500|Creon F5)`),
		regexp.MustCompile(`(?i)(ACE10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VCT([a-z0-9_-]+)|CT9A03W23|CT9A06P23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCT9B06Q22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CT9A03W23|CT9A06P23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCT([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:RP-UDM0[12]A|RP-UDP05A|JO-UQM10A|UQM1[23]A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RP-UDM0[12]A|RP-UDP05A|JO-UQM10A)`),
		regexp.MustCompile(`(?i)(UQM1[23]A)`),
		regexp.MustCompile(`(?i)QTA(SUN[12]|XIA1|QZ3|QZ3KID|IR7)|QMV7[AB]|WTVIS01`),
		regexp.MustCompile(`(?i)QTAXIA1|QTAIR7`),
		regexp.MustCompile(`(?i)QMV7[AB]`),
		regexp.MustCompile(`(?i)Vernee|(?:Mars Pro|Apollo[ _](?:Lite|X)|Thor (?:E|Plus)|X2_euro|M7_EEA|T3 Pro|V2 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Apollo[ _]Lite`),
		regexp.MustCompile(`(?i)Apollo[ _]X`),
		regexp.MustCompile(`(?i)(V2|T3) Pro`),
		regexp.MustCompile(`(?i)Vernee[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Vernee[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)MotionE11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V-Pad Pop)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vertex[_ -]|(?:Luck|Luck_L1[02]0_[34]G|Lion_Dual|V709X|TAB X8|TAB X10|Tab [43]G (?:7-2|8-1|10-1)|Tab_3G_7-1|Pro_P3[01]0_4G|Lion_DC|Baccara|Eagle[ _]4G|ImpressMAX|Lion [1-3])(?:[);/ ]|$)|Impress[ _]([^;/]+)(?:Build|\))`),
		regexp.MustCompile(`(?i)(?:Vertex_)?Luck[_ ]L[_ ](5045)[_ ]([34])G`),
		regexp.MustCompile(`(?i)(Lion_Dual|Lion_DC|Baccara|Eagle[ _]4G|Luck[_ ]L1[023]0(?:[_ ][34]G)?|Luck)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Impress ?MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMPRESS ECLIPSE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro_P(3[01]0)_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Impress_Luck[_ ]?4G_NFC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lion ([1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Impress[ _][a-z]+)([34])G(?:Build|\))`),
		regexp.MustCompile(`(?i)(Impress[ _](?:[^;/]+))(?:Build|\))`),
		regexp.MustCompile(`(?i)(V709X)`),
		regexp.MustCompile(`(?i)TAB X(8|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab[ _]([43])G[ _]([78]|10)-([21])`),
		regexp.MustCompile(`(?i)Vertu[ ]?([a-z0-9]+)|(?:ASTER(?: [PT])?|CONSTELLATION X|VTL-202[12]01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASTER( [PT])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VTL-202101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VTL-202201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CONSTELLATION X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vertu[ ]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5009`),
		regexp.MustCompile(`(?i)verykool[ _]?S5001`),
		regexp.MustCompile(`(?i)verykool[ _]?S5004`),
		regexp.MustCompile(`(?i)verykool[ _]?S5007`),
		regexp.MustCompile(`(?i)verykool[ _]?s5015`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5011`),
		regexp.MustCompile(`(?i)verykool[ _]?s5019`),
		regexp.MustCompile(`(?i)verykool[ _]?S5005`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5560`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5200`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5050`),
		regexp.MustCompile(`(?i)verykool[ _]?S5030`),
		regexp.MustCompile(`(?i)verykool[ _]?s5527`),
		regexp.MustCompile(`(?i)verykool[ _]?s5526`),
		regexp.MustCompile(`(?i)verykool[ _]?S5530`),
		regexp.MustCompile(`(?i)verykool[ _]?S5525`),
		regexp.MustCompile(`(?i)verykool[ _]?S5524`),
		regexp.MustCompile(`(?i)verykool[ _]?s5516`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5550`),
		regexp.MustCompile(`(?i)verykool[ _]?s5035`),
		regexp.MustCompile(`(?i)verykool[ _]?s5034`),
		regexp.MustCompile(`(?i)verykool[ _]?s5037`),
		regexp.MustCompile(`(?i)verykool[ _]?s5036`),
		regexp.MustCompile(`(?i)verykool[ _]?s6005x`),
		regexp.MustCompile(`(?i)verykool[ _]?SL6010`),
		regexp.MustCompile(`(?i)verykool[ _]?S4006[QT]?`),
		regexp.MustCompile(`(?i)verykool[ _]?S4007`),
		regexp.MustCompile(`(?i)verykool[ _]?S4008`),
		regexp.MustCompile(`(?i)verykool[ _]?s5017|Dorado s5017`),
		regexp.MustCompile(`(?i)verykool[ _]?s4510`),
		regexp.MustCompile(`(?i)verykool[ _]?s5204`),
		regexp.MustCompile(`(?i)verykool[ _]?s5205`),
		regexp.MustCompile(`(?i)verykool[ _]?s5528Jr`),
		regexp.MustCompile(`(?i)verykool[ _]?s5528`),
		regexp.MustCompile(`(?i)verykool[ _]?s5702`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5029`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5565`),
		regexp.MustCompile(`(?i)verykool[ _]?TL8010`),
		regexp.MustCompile(`(?i)verykool[ _]?T7440`),
		regexp.MustCompile(`(?i)verykool[ _]?T7445`),
		regexp.MustCompile(`(?i)verykool[ _]?([^/;)]+)(?:[ _]SL?[0-9]{4}[QT]?)(?: Build|[);])`),
		regexp.MustCompile(`(?i)verykool[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VESTA_SMART|VESTA32LD86(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vestel[ _]|Venus[ _](GO|E[2-5]|V[1-9]|Z[1-9]0)|V_?TAB|VP74|VT97PRO|VSP145M|VSP250[GS]|VSP355[GS]|V3_5580_Dual|V TAB Z[12]`),
		regexp.MustCompile(`(?i)V_TAB_([0-9]{4}[A-Z]?)`),
		regexp.MustCompile(`(?i)V[_ ]TAB[_ ](Z[12])`),
		regexp.MustCompile(`(?i)Venus[ _]V([1-9])([ _][0-9]{4})?`),
		regexp.MustCompile(`(?i)Venus[ _]Z([1-9]0)`),
		regexp.MustCompile(`(?i)Venus[ _]GO`),
		regexp.MustCompile(`(?i)Venus[ _]E2 Plus`),
		regexp.MustCompile(`(?i)Venus[ _]E([345])`),
		regexp.MustCompile(`(?i)Vestel[ _]5530[ _]Dual`),
		regexp.MustCompile(`(?i)Vestel[ _](5000|5530)`),
		regexp.MustCompile(`(?i)(?:Zippers Tab 10i 3G)|Vexia FCS E2 CLM`),
		regexp.MustCompile(`(?i)(Zippers Tab 10i 3G)`),
		regexp.MustCompile(`(?i)ViBox[ _](V[25])[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VI10[68]|VI86)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Videocon[_ \-]|(?:VT75C|V50DC|V406018|V512930|V50(?:2430|3630|4730|5024|5430|4630|5[98]20)|Z45_(?:Dazzle|Amaze)|Z45Q Star|Z50 Nova)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Videocon[_ \-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)VT75C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V502430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V50DC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505024(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V503630(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V504730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V406018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V512930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V505430|V504630)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z45_(Dazzle|Amaze)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z45Q Star(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z50 Nova(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ViewSonic|ViewPad|ViewPhone|(?:IFP(?:98|86|[67]5)50-3|VSD[0-9]+|vsi7q_1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?V500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ViewSonic A8\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?ViewPhone ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?ViewPad[ _]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(VSD[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IFP(98|86|[67]5)50-3`),
		regexp.MustCompile(`(?i)Vinabox[-_ ]X(\d*)[-_ ](2018)`),
		regexp.MustCompile(`(?i)Vinabox[-_ ]X(\d*)[-_ ]?Plus`),
		regexp.MustCompile(`(?i)Vinabox[-_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VMP-(015-162|021-82|041-162|011-81|025-324|045-664)(?:[);/ ]|$)|VMP023\.`),
		regexp.MustCompile(`(?i)VMP023\.`),
		regexp.MustCompile(`(?i)(XA Pro) Build`),
		regexp.MustCompile(`(?i)VMP0617(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z08MK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO PRO2X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vipro Edge 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO PRO[ _-]?([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V608C|V50[15]c|VT701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(50[15]|608)C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VT701)`),
		regexp.MustCompile(`(?i)Vision ?Touch`),
		regexp.MustCompile(`(?i)(?:Prime10(?:SE|ES)|Elite(?:9QL|8QI|7QS))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime10(SE|ES)`),
		regexp.MustCompile(`(?i)Elite(9QL|8QI|7QS)`),
		regexp.MustCompile(`(?i)Vitelcom|portalmmm/[12].0 TSM`),
		regexp.MustCompile(`(?i)TSM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TSM([a-z0-9\-]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12].0 (TSM[a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(24LH1207|43LU1204)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SMART[_ ]EV[56]|EV7_Pro|EV6 ELITE|EV5 X|EV7_Play| EV7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EV7)_Pro`),
		regexp.MustCompile(`(?i)(EV6) ELITE`),
		regexp.MustCompile(`(?i)(EV7)_Play`),
		regexp.MustCompile(`(?i) EV7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART[_ ](EV[56])`),
		regexp.MustCompile(`(?i)VIVAX|(?:Fly4|Fly5[_ ]Lite|Fun[_ ]S500|Point[_ ](?:X[12]|X50[123]|X450)|PRO3|32LE77SM|40LE77SM|FUN S1|FUN_S20|TPC[-_ ](?:7121|80[56])3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly5[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Point_X([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fun[_ ]S500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUN[ _]S(10?|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[ _]Fly ?(\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[ _]Fly[ _]V(1|550)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIVAX )?(Point[ _](?:X551|X50[123]|X450))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART Point X5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[_ ]PRO[_ ]?(3|M1)`),
		regexp.MustCompile(`(?i)TPC[-_ ](7121|806)([34])G`),
		regexp.MustCompile(`(?i)(?:TABLET )?TPC[-_ ](\d+) ?([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIVAX-)?(40LE78T2S2SM|32LE77SM|40LE77SM)`),
		regexp.MustCompile(`(?i)((?:VIV-|BBG-)?vivo)|iQOO Neo \d|(?:V1730(D[AT]|GA)|V18(01A0|13B[AT])|1819|V1937|I(?:192[78]|201[28])|V(?:2006|202[2-9]|203[0-35-9]|204[0-3568]|205[02-5789]|206[015689]|2070|210[12459]|211[01]|212[0469])|V(?:2026|2031|2036|2043)_21|V1936AL|V(?:1732|1809|181[3468]|182[149]|183[1268]|1901|191[13469]|192[1-48]|193[0246]|194[15]|195[05]|196[235]|198[16]|1990|200[125]|201[12]|202[03-5]|203[146]|204[6789]|205[45679]|2066B|206[1568]|207[23]|208[05]|2099|2106|211[18]|212[135]|213[346]|214[1358]|2162)A|V1824BA|V(?:1731|1818|2020)CA|V(?:1818|1938)CT|V(?:1730|2031)EA|V(?:1732|1809|181[3468]|182[19]|183[1268]|1901|1913|1938)T|V2029_PK|V2044|V2069A|V217[12]A|I201[19]|I2126|X50 Pro\+|I220[12368]|I2127|V211[4-8]A?|V204[57]A?|V210[28]A?|I2009|I2017|I2022|V215[4678]A|V215[0-478]|V218[03568]A|V2180GA|V219[069]A|V213[012459]A?|V2023EA|V1962BA|V212[57]|V214[0-79]|V1930|V216[0289]|V2164[KP]A|V216[234568]A|V217[08]A|PA2170|V220[37]A|V220[1-9]|V221[789]A|V221[247]|V222[079]A|V222[189]|V22[34]1A|V224[234]A|V224[679]|V2266A|V2301A|V2302|V223[189]A|V223[0178]|V2253|V2254A?|V228[34]A|S7t 5G| (?:Y30g|Y20T|Y31s 5G|Y33s|Y50t|Y55s 5G)|V2166(?:BA)?|iQOO U[13]x?|NEX 3s 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PA2170(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2170A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (Y20T|Y30g)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1824[B]?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1955A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2171A|I2017)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2172A|I2022)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I192[78](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2165A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2049A|I2009)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2154A|iQOO Neo 5S`),
		regexp.MustCompile(`(?i)I2012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1922A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1916A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1914A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1981A|iQOO Neo 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1936A[L]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2055A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2118A|iQOO Neo 5 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2199A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1986A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2012A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2073A|I2011)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:I220[236]|I2127|V2220A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2126(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2208(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2023A|iQOO U1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2065A|iQOO U1x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2061A|iQOO U3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2143A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2106A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2024A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2025A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2136A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2141A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2025)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2066|V2108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2061(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2055(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2040(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo 1921(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo 1916(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1805(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1912|V1923A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1924A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1950A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEX 3s 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1821[AT]|vivo 1813)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo ONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2115A|V2141|V2157|V2150`),
		regexp.MustCompile(`(?i)V2203A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1831[AT]`),
		regexp.MustCompile(`(?i)V1832[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2121A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V211[56]`),
		regexp.MustCompile(`(?i)V220[19]`),
		regexp.MustCompile(`(?i)V22(?:31|46)`),
		regexp.MustCompile(`(?i)V1932[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1962A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2162A?`),
		regexp.MustCompile(`(?i)V2020C?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031EA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2080A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S7t 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2072A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2048A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1941A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1928A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1804(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1806(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1819(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1818(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 19(?:10|09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1907(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 19(?:20(?:_20)?|19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1933(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2022(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]1601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1611(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (1713|1612)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2166BA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1716|1850)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1723(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1727|V9Youth)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1851|V9Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo V3Max(?: [AL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X9s Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X9s(?: [AL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X5Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X20Plus UD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1721(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X20Plus(?: a)?|vivo 1720)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X21i(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X21UD(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1725|X21A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1814[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1809[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1816[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V18(38|29)[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1836[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1938CT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1938T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2001A|vivo 2004)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1937|V1937)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2005A|vivo 2006)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2011A|X50 Pro\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V20(?:46|59)A|V2045)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2085A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2047A|V2046)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2056A|V2047)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2134A|V2105)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2145A|V2114)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2133A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2104(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2144|V2183A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V218[56]A|V2145`),
		regexp.MustCompile(`(?i)V2208(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X([0-9])Plus(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1929|2015)(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1902(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V22[01]4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1906(?:_20)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2166(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2203|V222[19])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2254)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2217)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 19(?:04|40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2102(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1901(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V212[05]|V2139)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2147|V2212`),
		regexp.MustCompile(`(?i)vivo 1915(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V202[79](?:_PK)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2207|V2238)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2206(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1613(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2043_21|V2048)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V205[24]|V2070|V2101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2037(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2129(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2065(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2038(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2043(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(?:2041|2060)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2152(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2149(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2140(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V213[15](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2023(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1901[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1930A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 193[89]|V203[46]A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2160(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2099A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2066[B]?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2036(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2068A?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2228(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2057(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2109|Y33s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2146(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2166A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2205(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2247(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1934A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1965A|vivo 1935)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2023EA|Y50t)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(?:2024|203[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2054A|Y31s 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2057A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2053(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1606(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1606a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2058|V2111A|V2123A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2164A|Y55s 5G`),
		regexp.MustCompile(`(?i)vivo 1719(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1714|Y69A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2002A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1724|Y71A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1801i?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1731CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2059(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2124(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1913[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 180([38]|8i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1812(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1732[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:Y83A?|1802)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1726(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1730EA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1823|1908)(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 181[17](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1820(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1945A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2026|V2033|V2042)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V20[63]9|V2026_21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 18(16|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1818[AT]|vivo 181[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1818C[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1807(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1813[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1801A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1918|1951|Z1Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1730D[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1917(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1813B[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo Z3x|V1730GA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1921A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1911A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1990A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1963A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2142(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y75s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X710L?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X6SPlus(?: [AD])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X6S(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X([5679]|20)[ALD]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X5Pro(?: L)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y66i(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y(\d{2})[AL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay(\d)S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay(\d)[AL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)Vizio|(?:VAP430|VTAB1008|XR6[PM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VTAB1008|XR6[PM]10)`),
		regexp.MustCompile(`(?i)VIZ(?:101|070)TAB[78]11`),
		regexp.MustCompile(`(?i)VIZ070TAB(\d{3})`),
		regexp.MustCompile(`(?i)VIZ101TAB(\d{3})`),
		regexp.MustCompile(`(?i)(?:Vodacom)[ _]|(?:Kicka 5 Plus 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Vodacom)[ _](Power Tab 10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _-]|Smart ?Tab ?(?:III? ?)?(?:|4G|7|10)[);/ -]|VodafoneSmartChat|Smart Ultra 6|(?:GigaTV|VFD[ _][0-9]+|VFD[37]20|VF6[89]5|VF-(696|1397|795|895N|1497))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD 50[012]`),
		regexp.MustCompile(`(?i)VFD 51[0123]`),
		regexp.MustCompile(`(?i)VFD 52[789]`),
		regexp.MustCompile(`(?i)Vodafone[ _]875(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]975N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]785(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD 525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]890N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]985N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart ?Tab ?3G`),
		regexp.MustCompile(`(?i)Smart ?Tab ?4G`),
		regexp.MustCompile(`(?i)Smart ?Tab ?4`),
		regexp.MustCompile(`(?i)SmartTab7[);/ -]`),
		regexp.MustCompile(`(?i)SmartTab10[);/ -]`),
		regexp.MustCompile(`(?i)Smart ?Tab ?II ?7`),
		regexp.MustCompile(`(?i)Smart ?Tab ?II ?10`),
		regexp.MustCompile(`(?i)Smart ?Tab ?III ?7`),
		regexp.MustCompile(`(?i)Smart ?Tab ?III ?10`),
		regexp.MustCompile(`(?i)Vodafone TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD[ _]([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Vodafone[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)VOLT[_ ](SV451[_ ]Vision)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vonino|Epic (?:E8|P7)|Epic_(?:M8|P7)|Gyga[ _](?:X|S|QS|XS)|Jax[ _](?:QS|[SXQN]|Mini)|Magnet[ _](?:M[19]|G[135]0|W10)|Navo_QS|Navo S|Onyx_(QS|Z)|Orin_QS|Pluri[ _](?:[BCMQ]7|[CQM]8)|Sirius_QS|Volt[ _][XS]|Xavy[_ ]([GT]7|L8)|Xylo[ _][XSPQT]|Zun[ _](?:N|X[OS]?)|JAX_N|Druid_L10|iMart_Pro|MusicPAD_[HM]1`),
		regexp.MustCompile(`(?i)Zun[ _](N|X[OS]?)`),
		regexp.MustCompile(`(?i)Xylo[ _]([PSXQT])`),
		regexp.MustCompile(`(?i)Volt[ _]S_A7`),
		regexp.MustCompile(`(?i)Volt[ _]S`),
		regexp.MustCompile(`(?i)Volt[ _]X`),
		regexp.MustCompile(`(?i)Gyga[ _]QS`),
		regexp.MustCompile(`(?i)Gyga[ _]XS`),
		regexp.MustCompile(`(?i)Gyga[ _](S|X)`),
		regexp.MustCompile(`(?i)Jax[ _]QS`),
		regexp.MustCompile(`(?i)Jax[ _]S_A7`),
		regexp.MustCompile(`(?i)Jax[ _]([SQXN])`),
		regexp.MustCompile(`(?i)Jax[ _]Mini`),
		regexp.MustCompile(`(?i)Epic[_ ]([EM]8|P7)`),
		regexp.MustCompile(`(?i)Pluri[ _]([BCMQ])7`),
		regexp.MustCompile(`(?i)Pluri[ _]([CQM])8`),
		regexp.MustCompile(`(?i)Druid[_ ](L10)`),
		regexp.MustCompile(`(?i) Magnet[_ ]M10[_ ]2020`),
		regexp.MustCompile(`(?i)Magnet[ _](M[19]|G[135]0|W10)`),
		regexp.MustCompile(`(?i)Navo[_ ](Q?S)`),
		regexp.MustCompile(`(?i)Onyx_(QS|Z)`),
		regexp.MustCompile(`(?i)Xavy[_ ]([GT]7|L8)`),
		regexp.MustCompile(`(?i)MusicPAD_([HM]1)`),
		regexp.MustCompile(`(?i)(HK1 (?:Max|MINI\+?|PLUS|PRO)|KK MAX|VONTAR[ -](?:Z[58]|[VH]1|KIII|MX-4K|X[234]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VONTAR[ -](Z[58]|[VH]1|KIII|MX-4K|X[234])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KK MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 MINI\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VORAGO|(?:PAD-7-V5|PAD-7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PAD-7-V5|PAD-7)`),
		regexp.MustCompile(`(?i)(?:SXPro|S7-classic|SXPRO_classic)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VORKE (Z[157]|Z6(?: Plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VORMOR-X5-pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SYNQ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOTO[ _\-]|VT8[89]8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOTO[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)VOTO[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(VT8[89]8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Voxtel_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:VOYO[_ ](?:A15)|i8-Max|Q101-4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i8-Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Q101)-4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOYO[_ ](A15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Joy [123]\+|Joy [34]|Active 1\+|Bee 3|Active [13]|V341U|Bee Lite|Aris| Bee|Star [34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy ([123])\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy ([34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active 1\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bee 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bee(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Star (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V341U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VSUN (?:ILLUSION|RACE|V9|TOUCH)|Aqua Tough|MERCURY Tough|MARS TOUCH|MARS NOTE|MARS NOCAM|SATURN SELFIE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILLUSION(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MARS TOUCH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SATURN SELFIE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RACE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VSUN TOUCH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (81V)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VP5004A|VS5513|VS4011|VR6031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VP5004A|VR6031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS5513(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS4011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexo-TAB-7(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Nexo-TAB-7(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(F808NM|F803YM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(WUD55H7762SN|WUD55G7762S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WE (A[15]0|B3|F[12]0|E[12]|L[3469]|R[34]|V[34]|S1|X[13]|T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WIWA DREAM PLAYER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Walton|Walpad|RX7 Mini|Primo[ _](C[1234]?|D[1-689]|E[1-589]|F8s|EF[23]?|EM|F[1-79]i?|G[1-9]|GF[234]?|GH[23]?|GM|H[2-689M]|H10|H7s|N[F1]?|NX2?|R[1-68]|R[HM]2?|RX[23]?|S[1-8]|V1|X[1-4]|Z|[ZV]X)`),
		regexp.MustCompile(`(?i)Walpad[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Primo H8 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo (RM2|ZX2|NX4) mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo H8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RX7 Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo[ _]([^;/)]+)[ _]Plus(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Primo[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Walton[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Waltter NEO 10\.1`),
		regexp.MustCompile(`(?i)(?:ZC-339)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZC-339)`),
		regexp.MustCompile(`(?i)PRO 8475(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(WM1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C81W)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WELLCOM[ _\-/]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Westerndigital|WDSimpleBrowser`),
		regexp.MustCompile(`(?i)WESTPOINT[;,]`),
		regexp.MustCompile(`(?i)(TETS-4919SM)`),
		regexp.MustCompile(`(?i)Wexler|(?:ULTIMA 7 TWIST PLUS|ULTIMA 7|ULTIMA [78] TWIST|TAB10iQ3G|TAB[ _]10Q)(?:[);/ ]|$)|ZEN[ _](?:4\.[57]|5)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?ZEN[ _]4\.5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?ZEN[ _]4\.7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _\-\.])?ZEN[ _]5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZEN[ _]5\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[._-])?TAB[ _]?10Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB10iQ3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wexler[ _\-\.]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Wexler[ _\-\.]([^);/]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)(ULTIMA 7 TWIST PLUS|ULTIMA [78] TWIST|ULTIMA 7 OCTA|ULTIMA 7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AM1010V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wieppo (S6 Lite|S[658]|E1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wigor (V4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WIKO[_ -])|(?:WIKO-)?CINK_[a-z0-9_]+|(?:WIKO-)?HIGHWAY_[a-z0-9_]+|(?:WIKO-)?(?:Cink([^/;]*)|Highway([^/;]*)|Iggy|Stairway|Rainbow ?(Jam|Lite|Up)?|Darkside|Darkmoon|Darkfull|Darknight|Freddy|FEVER|Jerry[2]?|Sublim|Ozzy|JIMMY|Barry|Birdy|Bloom|Getaway|Goa|Kite|Robby|Lenny[2-9]?|Slide|Sunset[2-9]?|Sunny[2-9]?|Tommy[2-9]?|PULP(?: Fab)?|Wax|HARRY|Ridge(?: Fab)?|U FEEL(?: Prime| Lite)?|U PULSE(?: LITE)?|View2 (?:Go|Plus)|View XL|View Prime)(?: Plus)?(?: 4G)?(?: Build|$)?|W_(?:C8[06]0|K[346]00|P130|P200|C200SN)|WC300|W-(?:V7[23]0|V745|V755|V8[035]0|P[36]11|K130|K211|K3[68]0|K420|K510S?|K521|K560|K610|K630)-(?:BYT|EEA|FRA|OPE|SU[IN]|SWI|TIM|TMV|TVM|DU|T[HV]|ID)|WIM Lite|W-V851|W-V6[08]0|W-V750BN|W-V770|W-K200|W-U300|(?:U307AS|CINK PEAX 2|HIGHWAY PURE|C210AE|v3913|U614AS|V3991AN|v12fnlite|K-KOOL|p6901|U616AT|VHEM|KENNY|View Go| WIM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V770`),
		regexp.MustCompile(`(?i)(?:WIKO-)?VHEM`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U616AT`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V745`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V750`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V755-EEA`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Cink Peax 2`),
		regexp.MustCompile(`(?i)(?:Wiko-)?Cink([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?CINK_([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY PURE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY STAR`),
		regexp.MustCompile(`(?i)(?:Wiko-)?Highway([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY_([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Iggy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?FEVER`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Stairway`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge Fab 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Rainbow ([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Rainbow`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkside`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkmoon`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkfull`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darknight`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sublim`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ozzy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Barry`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Birdy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Bloom`),
		regexp.MustCompile(`(?i)(?:WIKO-)?JIMMY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Jerry2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Jerry`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Getaway`),
		regexp.MustCompile(`(?i)(?:WIKO-)?KENNY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Goa`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Freddy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Kite`),
		regexp.MustCompile(`(?i)C210AE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U307AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U316AT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)v3913(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?3 Max`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?4 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?([2-9])`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Slide`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunset2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunset`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny3 Mini`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny3`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny2`),
		regexp.MustCompile(`(?i)W-K211-(?:TH|TVM)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny`),
		regexp.MustCompile(`(?i)(?:W_K600|Tommy3|W_C200SN)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Wax`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HARRY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?WIM Lite|p6901`),
		regexp.MustCompile(`(?i)(?:WIKO-)?WIM`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp Fab 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp Fab`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Robby(2)?`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U PULSE LITE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U PULSE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL LITE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL PRIME`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View2 Go`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View XL`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View Prime`),
		regexp.MustCompile(`(?i)W_P130|View Go`),
		regexp.MustCompile(`(?i)W-V800-(TVM|TIM|EEA|OPE|DU)`),
		regexp.MustCompile(`(?i)W-K130-(?:OPE|EEA|BYT)`),
		regexp.MustCompile(`(?i)W-K510-(?:TVM|EEA|OPE|SUN|BYT|TH)|W-K510S-SWI`),
		regexp.MustCompile(`(?i)W-K560-(?:EEA|TVM)`),
		regexp.MustCompile(`(?i)W-K610-(?:SUI|FRA)`),
		regexp.MustCompile(`(?i)W-V720-(?:EEA|OPE|SUN)`),
		regexp.MustCompile(`(?i)W-P311-(?:EEA|OPE|TVM)`),
		regexp.MustCompile(`(?i)W-P611-(?:EEA|OPE)`),
		regexp.MustCompile(`(?i)W-V830-(?:EEA|OPE|ID)`),
		regexp.MustCompile(`(?i)W-V730-(?:EEA|TVM|ID|OPE)`),
		regexp.MustCompile(`(?i)W-U300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U520AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U614AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K-KOOL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wiko ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Wileyfox|(?:Swift 2|crackling)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wileyfox Spark \+`),
		regexp.MustCompile(`(?i)Wileyfox; Pro`),
		regexp.MustCompile(`(?i)Wileyfox (Spark|Swift)`),
		regexp.MustCompile(`(?i)Wileyfox ([^/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Swift 2 (X|Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Swift 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NOTE GRACE V)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wink[_ ]`),
		regexp.MustCompile(`(?i)Wink[_ ]((?:Glory|World|Share|City)(?:[_ ](?:SE|S))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wink[ _](Primo|Highway)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Winmax[ _](?:XC14|XC[46]|TX30)|PolarH4)(?:[);/ ]|$)|MAUI.+Winmax_BD45`),
		regexp.MustCompile(`(?i)Winmax[ _](XC14|XC[46])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winmax[ _](TX30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAUI.+Winmax_(BD45)`),
		regexp.MustCompile(`(?i)Winnovo|(?:T10LTE|H(?:7|10)_US)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T10LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H(7|10)_US(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winnovo[ _]?(M866|M798|VTab|750[PK]|T2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winnovo[ _](V51)`),
		regexp.MustCompile(`(?i)Winnovo[ _](K5[46]|K43)[a-z]{2}`),
		regexp.MustCompile(`(?i)Winstar S-?5`),
		regexp.MustCompile(`(?i)Winstar S-?5`),
		regexp.MustCompile(`(?i)(WISENET5|WPOS-3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WIZARPOS[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)miSmart|miTab|WIAM[ _]\#?\d+|WOLDER`),
		regexp.MustCompile(`(?i)WIAM[_ ]\#?65[_ ]lite`),
		regexp.MustCompile(`(?i)(?:WOLDER_)?WIAM[ _]\#?(\d+)`),
		regexp.MustCompile(`(?i)WOLDER[_ ](\d+)`),
		regexp.MustCompile(`(?i)miSmart[ \-_]?([^/]+) Build`),
		regexp.MustCompile(`(?i)miTab[_ ]PRO[_ ]10[_ ]plus`),
		regexp.MustCompile(`(?i)miTab[ \-_]?([^/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)AT[ _-]AS([0-9A-Z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:W55SE|W626 LITE|WS067|WS5SE|WS626)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wonu ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SP5026i-Scorpio|SP5040-Casiopea`),
		regexp.MustCompile(`(?i)TERRA[ _]PAD[ _](\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]|Nimbus 101Q`),
		regexp.MustCompile(`(?i)Nimbus ?(101Q|115|1100RX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WOXTER[ _]I-101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]([SQ]X) ?([0-9A-Z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[_ ](?:Zielo[ _])?(Q27|Z800|Z420)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)G1LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[-]?BO (V[78]|V1[01]|V[89]\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:XM-SW1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[-_]TIGI|Hope(?:[78]|10)[_ ](?:Mate|Max|Pro|Plus|LTE)|JOY(?:10|8) Mate|JOY10_LTE|Photo_P15_Lite|SHARP_2|SHARP1|V18 pro_A`),
		regexp.MustCompile(`(?i)X[_ ]TIGI[_ ]JOY7_TV`),
		regexp.MustCompile(`(?i)(?:X_TIGI_)?JOY(10|[78])[ _]Mate`),
		regexp.MustCompile(`(?i)Hope([78])[_ ](Mate|Max)`),
		regexp.MustCompile(`(?i)Hope ?8 LTE`),
		regexp.MustCompile(`(?i)Hope10[_ ]Pro`),
		regexp.MustCompile(`(?i)Hope10[_ ]Plus`),
		regexp.MustCompile(`(?i)X-TIGI[_ ]V28[_ ]LTE`),
		regexp.MustCompile(`(?i)X[-_]TIGI[_ ]V19`),
		regexp.MustCompile(`(?i)X[-_]TIGI[_ ]A1[_ ]?Plus`),
		regexp.MustCompile(`(?i)X-TIGI[_ ]Photo[_ ]P11`),
		regexp.MustCompile(`(?i)SHARP_?([12])`),
		regexp.MustCompile(`(?i)X[-_]TIGI[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)X-View|ZEN_U5\+|AMBER_KIDS|Proton_Amber_HD|Proton_Neon|PROTON_JADE_2_PRO`),
		regexp.MustCompile(`(?i)ZEN_U5\+`),
		regexp.MustCompile(`(?i)(?:X96Air_A100|X96_X6_I|X96Max_Plus_Ultra|X96MATE_PLUS|X96MINI_11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X96Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XCOM[ _](?:X520|ISMART)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XCOM[ _](X520)`),
		regexp.MustCompile(`(?i)XCOM[ _]ISMART`),
		regexp.MustCompile(`(?i)(V1277)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGIMI TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YT5760[ABL]|YT5716C?|YT7216C?|YT7260[BL]|YT9216[BC]J|YT9213AJ|YT9270)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Enia)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(XDSR785HDR_AVANT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGODY|(?:Y19\(EU\)|XGT_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGODY Y17(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y19\(EU\)`),
		regexp.MustCompile(`(?i)XGODY_X96(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(XDH-(?:0F-A1|1[78]-A1|21-A1|29-B1|2A-B1)|XD-SDD05-2101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LA2-(?:L|S[N]?)|HLA Note(?:3|1-L)|L7620DE|20190416Q|20170608S|20180322D|20190325D|20190718Q|20190417Q|20180101M|20170605Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLA Note3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLA Note1-L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LA2-(?:L|S[N]?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(20190416Q|L7620DE|20180101M|20170605Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20170608S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20180322D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190325D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190718Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190417Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi| ONC(?: Build|[;)])|MiTV-\w|MiProjA1|Mi9 Pro 5G|(?:MI [a-z0-9]+|Mi-4c|MI-One[ _]?[a-z0-9]+|MIX(?: 2S?)?|MIX 2S ART|pomelo)(?:[);/ ]|$)|HM (?:[^/;]+) (?:Build|MIUI)|(?:2014501|2014011|201481[12378]|201302[23]|2013061) Build|Redmi|POCOPHONE|(?:SHARK )?KTUS-[AH]0|(?:SHARK )?(KLE|KSR|MBU|PAR)-[AH]0|SK[RW]-[AH]0|PRS-[AH]0|POCO F1|DLT-[AH]0|MIBOX[234]([_ ]PRO)?|MiTV4[ACSX]?|AWM-A0|MI CC 9 Meitu Edition|MiBOX1S|M2006J10C|M2006C3(?:L[IGC]|LVG|MN?G|MT)|M2007J1(?:7[CGI]|SC)|M2002(?:J9[SEG]|F4LG)|HM2014819|WT88047|210611(?:8C|19(?:BI|[AD]G|AL))|M2001(?:J2G|C3K3I)|M2004J1(?:5SC|9AG)|M2004J(?:7[AB]|19)[CG]|M2012K11(?:[CGI]|A[CI])|M2011K2[CG]|M2011J18C|M2006C3[ML]II|M2003J(?:15SC|15SS|6B2G|6A1G)|M2007J3S[ICYGP]|M2007J22[CG]|M2103K19[CGYI]|M2101K(?:[79]AG|7AI|7B[GI]|6[GIRP]|7BNY|9[GCR])|M2010J19S[CGYIL]|M2102(?:K1AC|K1[CG]|J2SC)|HM NOTE 1(?:LTE|W)|MI[_ ]PLAY|XIG01|Qin 1s\+|Qin ?2(?: Pro)?|MI_(NOTE_Pro|5X|4i|(?:A2|8)_Lite)|A001XM|lancelot|XIG02|2107119DC|M2101K(?:7BL|9AI)|A101XM|M2012K10C|M2104K10AC|M19(?:01F7[1S]|10F4S|08(?:F1XE|C3JGG)|08C3J[IH]|06F9S[IH]|02F1G)|21051182[CG]|21081111RG|2109119D[GI]|21091116(?:AI|[AU]?C|i|U[GI])|220111(?:7T[LGIY]|19TI|19UY|6S[IRC]|6TG|[67]SG|7SL)|21121(?:119S[CG]|23A[CG]|119VL|210C)|2204121(?:6[CI]|6UC|9[CGI]|9NY|1AC)|220333Q(?:AG|NY|L|BI)|2107113S[IGR]|22031(?:29G|116BG|21C)|PAR-H0|M2105K81A?C|2109119BC|2202(?:1119KR|1211RC|33L2[CGI])|22011(?:2[23][CG]|211C|16TI|17S[YI])|joyeuse|galahad|hydrogen|begonia|kenzo|willow|beryllium|rosemary| MDG1|KLE-AO|Mi ?Pad \d|220612(?:18C|[23]SC)|2207(?:12(?:2MC|12AG|19AI)|33S(?:F?G|[IL])|43FI)|2208(?:7RA4DI|1212(?:U?G|C)|128(?:1AC|3[GC]))|Black Shark|MZB8298IN|2210(?:1317C|1316(?:U[PG]|UCP?|[CIG])|1(?:29SG|32[CG]))|2211(?:13(?:3[CG]|17I)|1317G)|23013RK75C|23053RN02[AY]|2209(?:5RA98C|116AG|129SC)|2212(?:0RN86[GI]|6RN91Y|ARNC4L|2RK93C|7RK46C)|2302(?:6RN54G|1RAA(?:EG|2Y)|8R(?:N4DG|A60L|NCAG))|angelican|vnd_camellia|2304(?:9RAD8C|FPN6D[GC])|2303(?:0RAC7Y|CRA44A|ERA42L)|M1906G7G|Hongmi 4A|23046RP50C|M1912G7BC|23076RN4BI|23043RP34[GI]`),
		regexp.MustCompile(`(?i)SKR-[AH]0`),
		regexp.MustCompile(`(?i)SKW-[AH]0`),
		regexp.MustCompile(`(?i)DLT-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KLE-A[0O]`),
		regexp.MustCompile(`(?i)(?:SHARK )?KSR-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KLE-H0`),
		regexp.MustCompile(`(?i)(?:SHARK )?MBU-H0`),
		regexp.MustCompile(`(?i)(?:SHARK )?MBU-A0`),
		regexp.MustCompile(`(?i)(?:SHARK )?PRS-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?PAR-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KTUS-[AH]0`),
		regexp.MustCompile(`(?i)Black Shark ([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Xiaomi_2014501|2014501 Build`),
		regexp.MustCompile(`(?i)Xiaomi_2014011|2014011 Build`),
		regexp.MustCompile(`(?i)Xiaomi_201302[23]|201302[23] Build`),
		regexp.MustCompile(`(?i)Xiaomi[_-]2014818|2014818 Build`),
		regexp.MustCompile(`(?i)Xiaomi_2014817|2014817 Build`),
		regexp.MustCompile(`(?i)Xiaomi[_-]201481[123]|201481[123] Build`),
		regexp.MustCompile(`(?i)MI[_ ]PLAY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi 9 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xiaomi_)?M1902F1[GT]`),
		regexp.MustCompile(`(?i)MI CC 9e|MI CC9e`),
		regexp.MustCompile(`(?i)MI CC ?9 Pro`),
		regexp.MustCompile(`(?i)MI CC 9(?: Meitu Edition)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xiaomi_)?(?:M2001J2E_TD-LTE|M2001J2G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xiaomi_)?(?:Mi 10 Pro|M2001J1E(?:_TD-LTE)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2011K2[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116UI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11AI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J3S[GI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J3S[CYP](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J1SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2102J2SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2002J9[EGS]|XIG01|Mi 10 Lite 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2107113S[IGR]|Xiaomi 11T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21081111RG|Xiaomi 11T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2109119DI|(?:Xiao)?mi 11 Lite (?:5G )?NE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K9[GCR]|2109119DG|Mi 11 Lite 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K9A[GI]|Mi 11 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2102K1[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2102K1AC|Mi 11 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201122[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201123[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2209116AG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22071212AG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2207122MC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22081212(?:U?G|C)|Xiaomi 12T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2206122SC|Xiaomi 12S Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2206123SC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2203121C|Xiaomi 12S Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2203129G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2112123A[CG]|Xiaomi 12X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2210132[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2210129SG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2211133[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2304FPN6D[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI[ _]8[ _]?Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 8 Explorer Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 8 ([a-z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi 9T Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Mi ?9 Pro 5G|M1908F1XE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 9 Transparent Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI ([89]) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 5s Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi_2013061|2013061 Build`),
		regexp.MustCompile(`(?i)Mi[- ]([43])c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 4W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi_4i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 4 ?LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI MAX ([23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MI MAX|hydrogen)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi[ _]A2[ _]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1906F9S[IH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2106118C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi MIX 3 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX ([23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX 2S ART(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX 2S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi Note 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCOPHONE[ _]F1|POCO F1|beryllium`),
		regexp.MustCompile(`(?i)MDG1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WT88047(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM2014819(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 2A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 1S[CW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2001C3K3I|MZB8298IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 8A (Dual|Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J7AC|M2004J15SC|Redmi 10X (?:4G|LTE))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)220333Q(?:AG|NY|L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J19[CG]|M2006C3MII|lancelot|galahad|M2004J19AG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J19I|Redmi 9 Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2010J19SI|Redmi 9 Power)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3L[GCI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3LII(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3M[GT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3LVG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2010J19S[GYL]|pomelo|Redmi 9T, Note 9 4G, 9 Power)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 9T NFC(?:_SN)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2006C3MNG|Redmi 9C NFC|angelican)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041219(?:G|NY)|Redmi 10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061119D[CG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:220333QBI|Redmi 10 Power)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)220233L2[CGI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061119A[GL]|21121119(?:SG|VL)|22011119UY|Redmi 10 2022)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041219I|Redmi 10 Prime\+ 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22011119TI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061119[BT]I|Redmi 10 Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J7BC|Redmi 10X Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22120RN86[GI]|22126RN91Y|2212ARNC4L`),
		regexp.MustCompile(`(?i)23053RN02[AY]`),
		regexp.MustCompile(`(?i)23076RN4BI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22071219AI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K20 Pro Premium Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30 Pro Zoom Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30S Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K([23]0) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1912G7BC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30i 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22021211RC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K10C|Redmi K40 Gaming)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K40 Pro\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K11C|Redmi K40 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2006J10C|Redmi K30 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Y1 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) ONC(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Redmi (\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 4 Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:220733SFG|Redmi A1\+|220743FI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)220733S[GIL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2302(?:8RN4DG|6RN54G)`),
		regexp.MustCompile(`(?i)Qin ?2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qin 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2107119DC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2109119BC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2209129SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2105K81AC|22081281AC|(?:Xiao)?mi Pad 5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21051182[CG]|(?:Xiao)?mi Pad 5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2105K81C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23046RP50C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23043RP34[GI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD ?4 ?PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI ?PAD 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22081283[GC](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIBOX3[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIBOX([234])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiBOX1S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MSSP[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MTEQ0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-AESP0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-(?:ANSP0|AYFR0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOOQ0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOSR1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOOQ1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MiTV-AXSO0|MiTV4(?:A|-ANSM0)|MiTV-MSSP0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-AXSO[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV(4[CSXI]|4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2011J18C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22061218C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM NOTE 1W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM NOTE 1TD (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)HM NOTE 1(?:LTE|S)(?:W|GLOBAL|TD)? (?:Build|MIUI)|HM NOTE 1LTE`),
		regexp.MustCompile(`(?i)Xiaomi[_ ]2015052`),
		regexp.MustCompile(`(?i)(?:M2010J19SC|M2003J15SS|Redmi Note 9 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2003J6A1G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2003J15SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K7BL|rosemary)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J22G|A001XM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J22C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:joyeuse|M2003J6B2G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note 10 Lite|M2002F4LG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note ?9 Pro Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2101K7A[GI]`),
		regexp.MustCompile(`(?i)M2103K19Y|22021119KR`),
		regexp.MustCompile(`(?i)M2101K7B(?:[GI]|NY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2103K19[GC]|Redmi Note 10 5G|vnd_camellia)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2103K19I|A101XM|Redmi Note 10T 5G`),
		regexp.MustCompile(`(?i)XIG02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K6[GIRP]|M2104K10AC|Redmi Note 10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101316[CIG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2303(?:0RAC7Y|CRA44A|ERA42L|Redmi Note 12S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101317C|23021RAA2Y|23021RAAEG|23028RA60L|22111317G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23049RAD8C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101316UC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101316UG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101316UP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22101316UCP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22111317I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21091116C|2201116T[IG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2201116SC|Redmi Note 11E Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041219C|Redmi Note 11E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041216C|Redmi Note 11T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22041216UC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2201116S[GR]|Redmi Note 11 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2201116SI|Redmi Note 11 Pro\+ 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21091116U[CG]|Redmi Note 11 Pro\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22095RA98C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21121119SC|2201117T[GILY]|Redmi Note 11 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22087RA4DI|Redmi Note 11 SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201117S[GIYL]`),
		regexp.MustCompile(`(?i)(?:22031116BG|Redmi Note 11S 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21091116(?:AI|I)|Redmi Note 11T 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1908C3J[IH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M1908C3JGG|Redmi Note 8 \(2021\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:begonia|M1906G7G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)willow(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1901F71(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1901F7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note (\d+) Pro Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note (\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi[ _]Note[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Redmi[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Mi Note 10 Pro|M1910F4S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI[ _]Note[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Qin 1s\+`),
		regexp.MustCompile(`(?i)MI[- ]One[ _]?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi[- ]One[ _]?([a-z0-9]+)?(?: Build|[);])`),
		regexp.MustCompile(`(?i)MI[ _]([^;/]*) Build`),
		regexp.MustCompile(`(?i)MI[ _]([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM Note ([^/;]+) (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)HM ([^/;]+) (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)Xiaomi[ _-]([^/;]+)(?: Build|$)`),
		regexp.MustCompile(`(?i)XI[_-]CE(?:655|U55|U[48])`),
		regexp.MustCompile(`(?i)XI[_-]CE(655|U55|U[48])`),
		regexp.MustCompile(`(?i)Xolo|(?:Q600|Q700s?|Q800|Q1000s|Q1000[ _]Opus|Q1010i|Q2000|Omega[ _]5.[05]|Era5X|Era[ _]2[VX](?:[_ ]3GB)?|era[ _]X|era_HD|era[_ ]4[GK]|Era_4?X(?:_2GB)?|BLACK-1XM|A1000s_Lite|cube 5\.0_2GB|Opus 3|era1X|era [2X]|era1Xpro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era[ _]?1X ?Pro`),
		regexp.MustCompile(`(?i)Era[_ ]?([145])X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era_4X_2GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era[ _]2V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)era[_ ](HD|4[GK]|2X?|X)`),
		regexp.MustCompile(`(?i)cube 5\.0_2GB`),
		regexp.MustCompile(`(?i)(Q600 Club|Q600|Q700s?|Q800|Q1000s Plus|Q1000s|Q1000[ _]Opus|Q1010i|Q2000|Omega[ _]5.[05]|A1000s_Lite|Opus 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xolo[ _]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Xolo[ _]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)XORO[ _]|(?:TelePAD(?:795|731|1032|10A3|7A3)|HMT(?:390Q?|400)|HST 260)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TelePAD(7|10)A3 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TelePAD(795|731|1032)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MegaPAD3204V5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMT(390Q?|400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HST 260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xshitou[_ ](P7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xtouch[ _](?:X10|A5|X)|XBot[_ ](?:Senior|Junior)|X9_16GB|XP10_Wifi)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xtouch[ _](X10|A5|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X9_16GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XBot[_ ](Senior|Junior)`),
		regexp.MustCompile(`(?i)(?:BRIO[_ ]X31|XM14G|X10MT16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BRIO[_ ]X31)`),
		regexp.MustCompile(`(?i)Xpad_(M9_3G)`),
		regexp.MustCompile(`(?i)YASIN (?:Android|2K) TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YY-\d{3}[a-z]?)`),
		regexp.MustCompile(`(?i)M20201419(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X109|(?:Y103|Q11)[-_]EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y103|Q11)[-_]EEA`),
		regexp.MustCompile(`(?i)(X109)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU Fly (\w+)`),
		regexp.MustCompile(`(?i)YUHO_|(?:Netra(?:[_ ](?:Plus|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YUHO_(O2|H2|Y[123])_PRO`),
		regexp.MustCompile(`(?i)(?:YUHO_)?(Vast2?|O[12]|Y2|Netra(?:[_ ](?:Plus|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(L211|N10|U221)-EEA(?:[);/]|$)`),
		regexp.MustCompile(`(?i)YUNDOO[ _-]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:YNDX-?(?:000SB|0007[12])|YandexModule2-00001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YNDX-?(0007[12])`),
		regexp.MustCompile(`(?i)YNDX-?000SB`),
		regexp.MustCompile(`(?i)Xenta[ \-]Tab|Luna TAB|TAB09-410|TAB10-410|TAB07-485|TAB0[78]-200|TAB08-201-3G|TAB9-200|TAB09-211|TAB10-2[01]1|TAB13-201`),
		regexp.MustCompile(`(?i)Luna TAB07-10[01]`),
		regexp.MustCompile(`(?i)Xenta-TAB07-21[01]`),
		regexp.MustCompile(`(?i)TAB10-2[01]1`),
		regexp.MustCompile(`(?i)M631Y|M685Y4|M651G_MY|YES (?:Altitude 4|MPY(?:48|54))`),
		regexp.MustCompile(`(?i)YES (Altitude 4|MPY(?:48|54))`),
		regexp.MustCompile(`(?i)yestel|(?:T5|X2)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)yestel P30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X2|T5)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Yezz|ANDY[ _]|(?: (?:4E4|5EQ)|A5EI|LIV 1S|LIV1|LIV2[_ ]?LTE|ART[12](?:_?PRO)?|MAX_1_PLUS|MAX2 PLUS|EPIC T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YEZZ[_-])?(4E4|5EQ|A4M|A5EI)`),
		regexp.MustCompile(`(?i)LIV2[_ ]?LTE`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9]\.[0-9][A-Z0-9]*)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9])([0-9][A-Z0-9]*)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9][A-Z0-9]+)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)KB2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YPAD(P70[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YD20[16]|YOTA 3[+])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YD20[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOTA 3[+](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOU-BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOU-BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Youwei[ _]`),
		regexp.MustCompile(`(?i)youwei[ _]mini5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YTONE[ _\-]`),
		regexp.MustCompile(`(?i)YTONE[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)YTONE[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(?:YU5[05]10[A]?|YU4711|AO5510|YU5050|YU501[14]|YU5551|YU Yureka Black|YU 6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5010[A]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AO5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5551(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5510[A]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU4711(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU (Yureka Black)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N101[ _]DUAL(?:[ _]CORE)?(?:[ _]?2)?(?:[ _]V11)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YS[78]pro|YS6 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YS([678]) ?pro`),
		regexp.MustCompile(`(?i)YUNO\.|ULX-55UTCS3234|ULX-32TCS226|ULX-43UTCS347|ULX-39TCS222`),
		regexp.MustCompile(`(?i)ULX-(\d{2}U?TCS\d{2,4})`),
		regexp.MustCompile(`(?i)Yusun|LA2-T`),
		regexp.MustCompile(`(?i)Yusun ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Yusun ([a-z0-9_\-\+]+)`),
		regexp.MustCompile(`(?i)YXTEL_([HU]1|U3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Odyssey[_ ](?:evo|DTV[67]|J[59]|J10|GLAZE\+?|RANGE|ACE|AEON|VICTORY|SACRED|SAGA|SWIFT|O2|ULTRA|FLAME|POPO|PERRI|TYTAN|HIGH|SOAR|ERA)|ODYSSEY[ _]?NEXT|INTENSE (?:RISE|Hype|GAME))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ODYSSEY[ _]J10[ _]Mini`),
		regexp.MustCompile(`(?i)ODYSSEY[ _](O2|J[95]|DTV[67]|J10)`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]AEON`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]ACE`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]ULTRA`),
		regexp.MustCompile(`(?i)ODYSSEY[ _]?NEXT`),
		regexp.MustCompile(`(?i)ODYSSEY[ _]PERRI`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]FLAME`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]evo`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]Victory`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]SWIFT`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]TYTAN`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]SAGA`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]SACRED`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]POPO`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]RANGE`),
		regexp.MustCompile(`(?i)Odyssey[_ ]GLAZE\+`),
		regexp.MustCompile(`(?i)Odyssey[_ ]GLAZE`),
		regexp.MustCompile(`(?i)Odyssey[_ ]HIGH`),
		regexp.MustCompile(`(?i)Odyssey[_ ]SOAR`),
		regexp.MustCompile(`(?i)Odyssey[_ ]ERA`),
		regexp.MustCompile(`(?i)ZIFRO|(?:ZT-97003G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZT-9700)3G`),
		regexp.MustCompile(`(?i)ZIK[_ ](W1027)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)ZTE|AxonPhone|([a-z0-9]+)_USA_Cricket|(?:Blade[ _](?:E01|V0820|L110|L[2357]|L7A|L8|S6|V[6789]|V8Q|V8 SE|V9 VITA|X7|A(310?|320|460|465|475|510|520|530|602|51|30|3)|V580|V Ultra|Q Lux)|N9[15]8St|N818S|N951[0579]|N91[38]0|N9101|N913[267]|N952[01]|N9560|N9810|N799D|[UV]9180|[UV]9815|Z(?:5151V|610DL|6250CC|6400C|6410S|233V|331|5031O|559DL|6621O|667T|6750M|768G|792|81[25]|818L|82[08]|83[12359]|85[125]|851M|992|(557|71[67]|798|836|861|916)BL|986DL|(232|718|828)TL|(?:233|353|558|717|799|837|862|899|917|963)VL|955A|95[678]|965|97[018]|98[1237]|986U|999|936L)|V769M|Blade Apex2|G (LTE|Lux)|Vec|Z959|V865M|Z3001S|902ZT|KIS II Max|Kis 3|K3DX-V5G|Z930L|Optus X|Blade[ _](A[357] 2019(?:-T)?|A[35] 2020-T|A7S 2020-T|A6 MAX|A0622|X9)|Z3153V|Z836F|Ctyon-A9|602ZT|MO-01[JK]|Z963U|402ZT|P545|P609|P650 Pro|dandelion|901ZT|A00[13]ZT|Z-01K|UZTE (?:GRAND V7|V808)|ZTG01|K8[37]CA|K87CC|VERGATARIO ?5(?:PLUS)?|Axon mini|KIS C341|A103ZT|Z335(?:1S|[23]CA)|Z5156CC|Z5157[VY]|B867RE|MEO Smart A80|P65[10] 2021|Z6201V|Z6252CA|Z6251V?|A2020N3|A202ZT|Z719DL|Z5158|B2017G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P651 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P650 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)7530N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9040N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2122H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A001ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A003ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A103ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A202ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTG01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T221(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0616(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3352CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3353CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[_ ]Blade[_ ]A31[_ ]Plus`),
		regexp.MustCompile(`(?i)(?:A7020(?:RU)?|Blade A7S 2020-T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6252CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7030|A71 5G`),
		regexp.MustCompile(`(?i)Z5157[VY]`),
		regexp.MustCompile(`(?i)A0722(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6201V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade 10 Vita(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6251V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE (?:2050|V1050)(?:RU)?`),
		regexp.MustCompile(`(?i)ZTE Axon 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2019G? Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:902ZT|A2020N[23] Pro|A2020N3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2020 SP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2021[LGH]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2021E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9000N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2322|A2022L`),
		regexp.MustCompile(`(?i)ZTE[ _]?9047`),
		regexp.MustCompile(`(?i)N799D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z818L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3001S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3351S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ctyon-A9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K3DX-V5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE)?N918St(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N958St(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z963U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5156CC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5158(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9130(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9132(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9136(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9137(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9180(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5151V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9517(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z559DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)402ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE[_ ])?Blade[ _]Q[ _]Lux(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T320(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9515(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9519(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9521(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9560(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[UV]9180(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[UV]9815(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[_ ]Blade[_ ](C2|V7)[_ ]Plus`),
		regexp.MustCompile(`(?i)(?:ZTE[_ ])?BA521`),
		regexp.MustCompile(`(?i)(?:ZTE_)?V829`),
		regexp.MustCompile(`(?i)V970M?|V987`),
		regexp.MustCompile(`(?i)Z959(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:[RV]880H|V965)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z95[67]`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Grand[ _]Era`),
		regexp.MustCompile(`(?i)Z331(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N818S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[_ ]V0840(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5031O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P545(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Optus X Start(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BA520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A(5[12]) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L2 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Blade[ _]L2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3 Apex(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]T610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]Blade L4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Blade L5 Plus|BLADE L0510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L7A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L(\d+)(?:RU)?`),
		regexp.MustCompile(`(?i)Blade A([357]) (20(?:19|20))`),
		regexp.MustCompile(`(?i)ZTE BV0720(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A[35] 2020-T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE C880A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A([35]1?) Lite`),
		regexp.MustCompile(`(?i)Blade (S6|A[35]1?) Plus`),
		regexp.MustCompile(`(?i)BLADE A0622(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE (?:A6 MAX|A0605)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0622(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade S6 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade S6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE A5 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]T617(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Blade_A5_2019`),
		regexp.MustCompile(`(?i)BLADE V Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V6 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V6 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade (?:V7 Lite|V0720)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0710(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V([67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BV0800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE Blade V1000|(?:ZTE_)?V1000`),
		regexp.MustCompile(`(?i)Z6750M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade X([79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T630(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade (?:V8Q|V0840)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V8 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE (?:V0850|V8 Mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0920|ZTE-V9VITA`),
		regexp.MustCompile(`(?i)Blade V(9|10) Vita(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V([89]|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Blade[ _])?(Apex2|G (LTE|Lux)|Vec)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z768G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z717[BV]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z233VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z798BL|Z799VL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z792`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z812`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z719DL`),
		regexp.MustCompile(`(?i)Z851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z836BL|Z837VL|Z836F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z861BL|Z862VL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z958|Z955A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)dandelion(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6250CC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE[-_])?Z992`),
		regexp.MustCompile(`(?i)(?:Z999|Z-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B201[56]|Axon mini`),
		regexp.MustCompile(`(?i)A2017[GU]?`),
		regexp.MustCompile(`(?i)(?:A2020(?:RU|[GU])? Pro|Axon 10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V?975|geek`),
		regexp.MustCompile(`(?i)(?:ZTE-)?G-X991`),
		regexp.MustCompile(`(?i)Z936L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MO-01[JK](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V865M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6621O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P650 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V769M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VERGATARIO 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VERGATARIO5PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE V5 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2121[LE]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B867RE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K83CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K87CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K87CC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE-K88(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE-K92(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AxonPhone ([^;/]+) Build`),
		regexp.MustCompile(`(?i)([a-z0-9]+)_USA_Cricket`),
		regexp.MustCompile(`(?i)ZTE[- ](V98|V96A|V81|V70)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ](A(\d+)C?|L111|V580|E01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V0730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V0800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE B(A601|A910|A510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE Blade (A[35]1|A7s|C370)`),
		regexp.MustCompile(`(?i)ZTE BA610T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[- ]([a-z0-9\-_ ]+) Build`),
		regexp.MustCompile(`(?i)ZTE-(?:G |G-)?([a-z0-9 _]+)`),
		regexp.MustCompile(`(?i)U?ZTE[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)ZYQ-Q88|(Q(?:2602|262[436]|638|2688|272[89]|3022|3623|TAB Tab4|328 m9|328|668)|J77|Q[._](?:Up|Boss P99|Dee R09|Good M9|Hi|Hot|Me|Mate R99|Next|TOP-X8|You))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q\.Up C5`),
		regexp.MustCompile(`(?i)Q\.Up`),
		regexp.MustCompile(`(?i)Q\.Boss P99`),
		regexp.MustCompile(`(?i)Q[._]Dee R09`),
		regexp.MustCompile(`(?i)Q\.Good M9`),
		regexp.MustCompile(`(?i)Q[._]Hi S1`),
		regexp.MustCompile(`(?i)Q[._]Hi`),
		regexp.MustCompile(`(?i)Q[._]Hot P7 3G`),
		regexp.MustCompile(`(?i)Q[._]Hot`),
		regexp.MustCompile(`(?i)Q[._]Me Phone7 3G`),
		regexp.MustCompile(`(?i)Q[._]Me Plus7`),
		regexp.MustCompile(`(?i)Q[._]Me`),
		regexp.MustCompile(`(?i)Q[._]Mate R99`),
		regexp.MustCompile(`(?i)Q[._]Next B7`),
		regexp.MustCompile(`(?i)Q[._]Next J2`),
		regexp.MustCompile(`(?i)Q[._]TOP-X8`),
		regexp.MustCompile(`(?i)Q[._]You`),
		regexp.MustCompile(`(?i)(Z3211G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZXT-10HL323S|ZXT-10FL323G-PRO)`),
		regexp.MustCompile(`(?i)ZATEC[_ ]|(?:[ ]WIND|ZPAD_1|ZPLAY1_2018|Zpower_(?:Plus|2018))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZATEC[_ ]GRAVITY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[ ]WIND(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zealot(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(THOR 4 Plus|THOR S|THOR PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)THOR (S|4 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (MC2[27]00|TC15|TC2[0156]|TC5[1267]|TC7[05]x|TC7[57]|TC700H|ET51|MC33|MC93|EC30|TC55|PS20J|VC8300)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TC15|TC2[0156]|TC5[1267]|TC7[05]x|TC7[57]|TC700H|MC33|EC30|TC55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ET51)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MC2[27]00|MC93|PS20J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VC8300)`),
		regexp.MustCompile(`(?i)ZEEKER[ _](P10|T100)`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]([^/;)]+)(?:[);/]|$)`),
		regexp.MustCompile(`(?i)(Admire[_ ][^/;]+|Cinemax[^/;)]+)(?:Build|\))|(?:AdmireGlam|M72 Smart)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SENSE\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SWADESH\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SENSE[_ ]DUO`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]CURVE[_ ]NEO`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]CURVE\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]NEO\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]DUO`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SHINE`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]INFINITY`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]Unity`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]STRONG`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]GLORY\+`),
		regexp.MustCompile(`(?i)(M72 Smart)`),
		regexp.MustCompile(`(?i)(Admire[_ ][^/;]+|Cinemax[^/;)]+)(?:Build|\))`),
		regexp.MustCompile(`(?i)Z5007|Z551[679]|Z6001`),
		regexp.MustCompile(`(?i)(?:C-723ULTRA|C-70[13] ?ULTRA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C-(\d+) ?Ultra`),
		regexp.MustCompile(`(?i)ZFINERY900(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIDOO[ _](H6 Pro|X6 Pro|X9S|Z10|X[1589]|X20 Pro|Z9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Eon45i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KidsLegacyTabPro|Zpad-X8-PRO`),
		regexp.MustCompile(`(?i)ZIOX[_ ]|(?:Astra Viva 4G|Astra (?:(?:NXT|Curve|Young) Pro|(?:Metal|Titan|Young|Curve) 4G|Star|Blaze)|Duo(?:tel|pix)[ _]\w\d{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIOX[_ ]F9[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (Viva|Titan|Young|Metal|Curve) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (Star|Blaze)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (NXT|Curve|Young) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Duo(tel|pix)[ _](\w\d{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZM(?:CK|EM|TFTV|TN)[a-z0-9]+)|ZA409`),
		regexp.MustCompile(`(?i)(ZM(?:CK|EM|TFTV|TN)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)K101_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 8(?:[\d.]*);(?: [\w-]+;)? (LitePro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LT600T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO|(?:ZOPO[_ ])?(HERO2|Flash X3|F2_Color5_5|F5_Color_M5|C2_Color_M4|ZP[0-9]{2,}[^/;]+)(?:\)| Build)`),
		regexp.MustCompile(`(?i)(?:ZOPO_C2_MOD|ZP998)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO 9xxQuad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?ZP980[+](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?ZP980(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP952(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HERO2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP951(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP955(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP950[+h]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP(?:900H?|910)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP(?:800H|810)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP500[+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP330(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F2_Color5_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F5_Color_M5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C2_Color_M4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP5(63|86)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP567(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP300[S+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP200[+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP1790(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP781(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO[_ ]ONE[_ ]([YXTP])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?(Flash X3|X1i|ZP[0-9]{2,}[^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Zuum[ _-]|Android 6.+ UNIQ(?: Build|[);])|(?:ROCKET III?|Akus (?:PRO|[ZP]1?)|AURA_Z|COVET|MAGNO(?:-S)?|ONIX(?: S)?|STEDI|STELLAR(?:[ _](?:Z|PRO|[MP]1|M2))?|GRAVITY [ZM]|AURA (?:PLUS JLO|PRO JLO|PRO|X)|COVET_PRO_LITE|RONI|Android.*; (?:GRANT|LIMIT)|Gravity Life|ULTRA Z)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AKUS ([ZP]1?)`),
		regexp.MustCompile(`(?i)AURA_Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COVET( Z)?`),
		regexp.MustCompile(`(?i)MAGNO( C1?)?`),
		regexp.MustCompile(`(?i)STELLAR ([MP]\d|Z)`),
		regexp.MustCompile(`(?i)GRAVITY ([MZ])`),
		regexp.MustCompile(`(?i)ROCKET (III?)`),
		regexp.MustCompile(`(?i)Android 6.+; UNIQ(?: Build|[);])`),
		regexp.MustCompile(`(?i)Android.+; LIMIT(?: Build|[);])`),
		regexp.MustCompile(`(?i)Zuum[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Zuum[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZYNC|(Cloud Z5|Z1000|Z18|Z99|Z99[_ ][23]G|Z99|Z900[_ ]Plus|Z909|Z930[+]|Z930)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z18| DuZ99al Core|Z99[_ ][23]G|Z99 Dual Core|Z99|Z900[_ ]Plus|Z909|Z930[+]|Z930)`),
		regexp.MustCompile(`(?i)(Z1000[^/;]+)Build`),
		regexp.MustCompile(`(?i)Cloud (Z5)`),
		regexp.MustCompile(`(?i)ZYNC Cloud[ _]([^;]+)Build`),
		regexp.MustCompile(`(?i)ZYNC[ _]([^;]+)Build`),
		regexp.MustCompile(`(?i)(Desk21T-03)`),
		regexp.MustCompile(`(?i)(AL-555|GI-626|OB[_-](?:421|728|627))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OB[_-](421|728|627)`),
		regexp.MustCompile(`(?i)Decade 53(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BO-(FRSP4|LFSPBS5|LFSP4|LFSPSL4|LFSPBS5|LFSPSL6QCI)`),
		regexp.MustCompile(`(?i)BO-(FRSP4)`),
		regexp.MustCompile(`(?i)Aquaris|bq [^/;]+ Build|BQS[-_]([0-9]{4})|(BQ(ru)?[_ -][0-9]{3,4})|BQ5059|BQ1008G|BQru_BQru-|Edison 3|Smart_TV_BQ`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5209L|5044)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:6035L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5535L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-6353L`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-(?:5070|6040L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-(?:6424L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5730L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5731L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-57[46]5L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5533G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5031G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5732L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-6430L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-6630L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-9011[G]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-8068L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(ru)?-(7082)`),
		regexp.MustCompile(`(?i)BQ-7022(G)?`),
		regexp.MustCompile(`(?i)BQ-6200L|BQ-6000L`),
		regexp.MustCompile(`(?i)BQ(?:ru|s)?-6631G`),
		regexp.MustCompile(`(?i)BQ(ru)?[ -]6015L`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5525|6030G|6010G)`),
		regexp.MustCompile(`(?i)BQ-6001L|BQ-6050`),
		regexp.MustCompile(`(?i)BQ-5707G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5702(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5700L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5591|551[89]G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5520L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5519L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5540L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5517L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5516L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5515|6868L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5515L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5512L|5528L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5511L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS[_ ]5505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5521|5594)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5508L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5507L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5504(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-6045L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4030G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5500L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5302G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5301(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5300G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(ru|S)?-(?:5211|5020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5206L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru|S)?-(?:5204|5050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5203(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5202(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5082(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5045L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5047L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:5065|5340)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5046L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-?(?:5059|5514G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BQru_)?BQ(?:ru)?-5058(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5057(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:5056|5030)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-6042l(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5055(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5054(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5052(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-6051G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-5045(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5037|5514L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5035(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5033(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5541L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5022(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5015L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5016G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5012L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5521L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5010G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5000G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5009L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-500[59](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5008L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5007L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5005L|5530L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5003L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5002G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5001L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru|S)?-5000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4702(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4701(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:4585|5011G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4583(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4560(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4555(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:4526|5004G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4516(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4515(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4501G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4077(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4072(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?[- ]402[68](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4008(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4001G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-3510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-3503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1085L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1084L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1083G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1082G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1077L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1057L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1051G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1050G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[-]?1008G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aquaris (M10 FHD|M10 4G|M8)`),
		regexp.MustCompile(`(?i)Aquaris_([AM])4.5`),
		regexp.MustCompile(`(?i)BQ(?:ru)?[_ -](?:5590|5740G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:6016L|5520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5701L|5060)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BQ-7850|BQ-700[12]G|BQ-8002G|BQ-905[12]G|BQ-9702G|BQ-7056G)`),
		regexp.MustCompile(`(?i)BQ-8006G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7062G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1081G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7802G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7008G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7064G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7050G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7000G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7040G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7038G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7005G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7098G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1045[G]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:1054L|1020L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7083G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-8077L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7083(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1056L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1022l(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1024L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7055L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1025L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Edison 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:bq )?Aquaris ([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:bq )?Aquaris`),
		regexp.MustCompile(`(?i)bq ([^/;]+) Build`),
		regexp.MustCompile(`(?i)eSTAR[_ ](?:Grand|GO\!?|Zoom Quad|Gemini|MINI[_ ]3G|BEAUTY|MOON)|(?:MERCURY HD Quad core|MID1020L|takee 1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)eSTAR (Grand|GO\!?) (HD Intel|IPS Intel|IPS|HD|Intel) Quad Core 3G`),
		regexp.MustCompile(`(?i)eSTAR (Zoom Quad|Gemini|GO)`),
		regexp.MustCompile(`(?i)eSTAR GRAND HD quad core( [34]G)?`),
		regexp.MustCompile(`(?i)eSTAR[_ ]MINI[_ ]3G`),
		regexp.MustCompile(`(?i)(MID1020L)`),
		regexp.MustCompile(`(?i)eTouch ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Smart-Ex02|Ex-Handy 10)(?: (?:ROW|RUS))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iCherry_?`),
		regexp.MustCompile(`(?i)iCherry[ _](C(?:25[1258]|21[16]|110|121|22[01379]|23[03])|X1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i-Joy|i-Call|(?:Neon[79]|Sygnus|Deox|Elektra (?:M|L|XL|XXL))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra XL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra XXL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neon([79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sygnus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Deox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i-Call ([^;/]+) Build`),
		regexp.MustCompile(`(?i)i-Joy ([^;/]+) Build`),
		regexp.MustCompile(`(?i)i-mate ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)i-mobile ?[a-z0-9]+|i-Style|IQ ?(9\.1|5\.5|5\.6A?)`),
		regexp.MustCompile(`(?i)i-mobile (i-note[^/;]*) Build`),
		regexp.MustCompile(`(?i)i-Style ?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)IQ ?(9\.1|5\.5|5\.6A?|II)`),
		regexp.MustCompile(`(?i)i-mobile (IQ[^/;]*) Build`),
		regexp.MustCompile(`(?i)i-mobile(?: )?([a-z0-9\- ]+) Build`),
		regexp.MustCompile(`(?i)i-mobile(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)iBall[ _]([^;/)]+)[ _]Build|iBall[_ ]Slide|(?:Snap[_ ]4G2|3G 1026-Q18|6351-Q400i|iT-KSA0003|iT-KSA0012|iT-KSA0066|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Brisk 4G2|Slide[_ ](?:Dazzle[_ ]3500|Skye_03)|Blaze_V4|Wondro 10|Q27 4G|Andi (?:Wink|5G Blink) 4G|Co-Mate|Nova_4G|Brace-X1|DD-1GB|Elan 4G2|Spirit_X2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Snap[_ ]4G2|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Blaze_V4|Wondro 10|Q27 4G|Brisk 4G2|Co-Mate|Nova_4G|Elan 4G2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6351-Q400i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DD-1GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slide[_ ]Dazzle[_ ]3500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1026-Q18(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Brace-X1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0066(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBall[ _]([^;/)]+)(?:[ _]Build|[;)])`),
		regexp.MustCompile(`(?i)AUXUS ([^/;]+) Build`),
		regexp.MustCompile(`(?i)AUXUS (Core[^/;]+) Build`),
		regexp.MustCompile(`(?i)AUXUS ([^/;]+) Build`),
		regexp.MustCompile(`(?i)IBRIT_|(?:SI5[12]|i5Plus|POWER_X|Z2Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IBRIT_I([57])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_POWER6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_Speed Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SI51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SI52(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POWER_X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_AF51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iData[ _](K1|50|i3AL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOTEBOOK6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:APACHE G6|iDroid Royal V5|BALR_?X7(?:_PAK)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BALR_?X7`),
		regexp.MustCompile(`(?i)iGET SMART|(?:SMART[_ ](?:L20X|G10[12]|S7[02]|G71|G81[H]?|L10[234]|W[12]0X|W101|W8X|W20[23]|L206)(?:_eea)?|Android 5(?:[\d.]*);(?: [\w-]+;)? (?:S100))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SMART[_ ])?S100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART[_ ](L20X|G10[12]|S7[02]|G71|G81[H]?|L10[234]|W[12]0X|W101|W8X|W20[23]|L206)`),
		regexp.MustCompile(`(?i)iHunt|One_ Love_|TIT?AN[_ ]P\d+|Like_(3|4U|3_Pro)|X300 Elite|S10_Tank_2019|S10 Tank PRO 2020|S60 Discovery Plus|S60_Discovery_2019|AlienXLite2020|Alien X (?:Lite|Pro)|Alien_X|(?:Titan ?P6000|S[23]0 Ultra ApeX 2021|S21 Ultra 4G 2021|Like 11 Panda Pro|Like_Hi10_2021|Like Hi5|S21 Plus 2021|Like_[78]|Cyber DOG 4G|S10 Tank 2020|(?:S100|S90_)Apex)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S10[_ ]Tank[_ ]20(19|20)`),
		regexp.MustCompile(`(?i)Tian[ _]P3000`),
		regexp.MustCompile(`(?i)Titan ?P6000`),
		regexp.MustCompile(`(?i)Like_([378])`),
		regexp.MustCompile(`(?i)S(90|100)_?Apex`),
		regexp.MustCompile(`(?i)S([23]0) Ultra ApeX 2021`),
		regexp.MustCompile(`(?i)iHunt ([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)iKoMo ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(IK-102[58]|IK-1106|IK-7108|IK-787)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:iLA[-_ ](?:Silk|X|R1)|R1 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(R1) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iLA[-_ ](Silk|X|R1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILEPO[ _](MXQ-4K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WTAB[ _]?\d{3}|(ITELL[_ ](?:K3300|K3500N?|K4700)|K3102 WIFI|FIVO (?:PLUS|Lite)|Zed Book G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WTAB[ _]?(\d{3}(?:[^;/)]*))(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(ITELL[_ ](?:K3300|K3500N?|K4700))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIVO PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIVO Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Vin 5|Vin3 S|Vin3(?: Lite)?|Messi No\.1|Messi 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vin ?(3|5)`),
		regexp.MustCompile(`(?i)Messi (No\.1|3)`),
		regexp.MustCompile(`(?i)(i5800C|i6800|Victor(?:_S)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IMARS VEGA X7|VIVI_8|MILKY_WAY_M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Revolution A8|muPAD[_ ][KT]10|muPAD104|muPADT7|muPAD 7S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Revolution A8|muPAD[_ ][KT]10)`),
		regexp.MustCompile(`(?i)muPAD[ _]?(104|T7|7S)`),
		regexp.MustCompile(`(?i)(EX1080)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ITP-XD80L)(?: Build|[);])`),
		regexp.MustCompile(`(?i)iNew|(?:V7A|V3 Plus|V3-?E|V3C|FIRE_Tab_6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3-?E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V7A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIRE_Tab_6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iNew[ -_]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:iNO SCOUT 2|SGINO6|iNO S9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iOCEAN|M6752|W180|X7[ _]?S|X8 mini`),
		regexp.MustCompile(`(?i)X7[ _]?S`),
		regexp.MustCompile(`(?i)(M6752|W180) Build`),
		regexp.MustCompile(`(?i)iOCEAN[ _\-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)iOCEAN[ _\-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)iOutdoor (X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iPEGTOP[ _](Z26)`),
		regexp.MustCompile(`(?i)(?:Kylin[ _]5.[05]S?|KYLIN(?:40|50i)|Jade[78]s|Amber[678]S?|Amber[58]S[ _]Pro|Benny10|Phonenix50S|Ruby5S|Zafiro|I9355A|Opal 4S|Perla|S[45]01A|WAVE 4.0 II|WAVE 5.0|MEGA7|SAMBA65S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kylin_5.0S`),
		regexp.MustCompile(`(?i)Kylin (5.[05])`),
		regexp.MustCompile(`(?i)Jade([78])s`),
		regexp.MustCompile(`(?i)WAVE 4.0 II`),
		regexp.MustCompile(`(?i)WAVE 5.0`),
		regexp.MustCompile(`(?i)(I9355A|S[45]01A|Perla)`),
		regexp.MustCompile(`(?i)(IFoo (?:U200|H55|S50))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Frog ?One(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PALADIN EVO)`),
		regexp.MustCompile(`(?i)iRola ([^/;]+) Build|(DX758|DX752|DX752|DX758[ _]?Pro) Build`),
		regexp.MustCompile(`(?i)DX758[ _]?Pro`),
		regexp.MustCompile(`(?i)(DX758|DX752)`),
		regexp.MustCompile(`(?i)iRola ([^/;]+) Build`),
		regexp.MustCompile(`(?i)iRULU[ _-](X11|V[34]|U2|AL101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iRULU[ _-](X11|V[34]|AL101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iRULU[ _](U2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ISWAG[ _]`),
		regexp.MustCompile(`(?i)iSWAG[_ ]ACTIV`),
		regexp.MustCompile(`(?i)iSWAG[_ ]KRONOS`),
		regexp.MustCompile(`(?i)iSWAG[_ ]Lynx`),
		regexp.MustCompile(`(?i)iSWAG[_ ]MEGA`),
		regexp.MustCompile(`(?i)iSWAG[_ ]MANTRA`),
		regexp.MustCompile(`(?i)iSWAG[_ ]NEMESIS`),
		regexp.MustCompile(`(?i)iSWAG[_ ]NEO`),
		regexp.MustCompile(`(?i)ISWAG[_ ]VIPER`),
		regexp.MustCompile(`(?i)(?:IS655|IS[35]30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(IS[35]30)`),
		regexp.MustCompile(`(?i)(IS655)`),
		regexp.MustCompile(`(?i)(I-T60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel|iNote|GP10X2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S665LN?`),
		regexp.MustCompile(`(?i)W6002E?`),
		regexp.MustCompile(`(?i)S663L[NC]`),
		regexp.MustCompile(`(?i)W5005P?`),
		regexp.MustCompile(`(?i)A509WM?`),
		regexp.MustCompile(`(?i)[LW]6503`),
		regexp.MustCompile(`(?i)L5006[CS]`),
		regexp.MustCompile(`(?i)[LW]6004`),
		regexp.MustCompile(`(?i)itel[ _]A15R`),
		regexp.MustCompile(`(?i)P662LN?`),
		regexp.MustCompile(`(?i)P682LPN?`),
		regexp.MustCompile(`(?i)iNote ([^/;]*)Build`),
		regexp.MustCompile(`(?i)iNote_([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)itel-it(1410|1512|1520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel-it1553(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S11Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel[- ](A14S?|A16 Plus|A44 Power|A23S|A52 Lite)`),
		regexp.MustCompile(`(?i)itel it170([23])`),
		regexp.MustCompile(`(?i)itel A(\d{1,2}) ?Plus`),
		regexp.MustCompile(`(?i)iTel ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)iTel[_ ]([a-z0-9\-_]*)`),
		regexp.MustCompile(`(?i)iTRUCK 7 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LAMCY (?:L3[05]0|C100|L400)|IVA S6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAMCY (L3[05]0|C100|L400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IVA S6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:733|730|766|930)TPC|769TPC(?:II)?|744TPC plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:733|730|766|930)TPC|769TPC(?:II)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Innelo_1|iV 505|Me 1\+|Me 3S|Me [2345]|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:i2_Lite|i2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) i2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Me 1\+`),
		regexp.MustCompile(`(?i)Me ([2345]S?)`),
		regexp.MustCompile(`(?i)(?:MC401_GWL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MC401)_GWL`),
		regexp.MustCompile(`(?i)(IX701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iYOU[_ ](M1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Mi7_HERO_(?:BETA|TAB))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi7[_ ]HERO[_ ]BETA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi7[_ ]HERO[_ ]TAB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M10ES11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ivvi[ _]`),
		regexp.MustCompile(`(?i)ivvi[ _](P60)[_ ](\w\d+)`),
		regexp.MustCompile(`(?i)ivvi[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)mPhone ?([68]|7 Plus|7s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _](?:C[12]|X10|X[126]|MG430|Q[145]|C[18]0C[18]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _]Q1 plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _](C[12]|X[126]|MG430|Q[145])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _](X10|C[18]0C[18]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:nJoy[_ ])?(Deimos 7|Kali_8|Turnus_8|Tityos_10|Arcas_7|Theia_10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)neocore_?`),
		regexp.MustCompile(`(?i)neocore_N1G1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)neocore E1-2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEOCORE_E2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NODROPOUT[_ ]`),
		regexp.MustCompile(`(?i)NODROPOUT[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)phoneOne[ \-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Texet|(NaviPad [^/;]*) Build|TM-(?:1046|1058|1057|1067|3000|3200R|3500|400[34]|4071|450[34]|451[30]|4377|4082R|508[34]|550[358]|5010|5017|507[4-7]|5[23]77|6003|6906|702[13]|7055HD|709[69]|9747BT|9758|9751HD|9767|5513|520[410]|507[13]|558[134]|570[23]|7859|8044|9748[ _]3G|9720|7047HD[ _]3G|9757|9740|4982|4515|4083|500[3567]|5571|3204R|5016|8043|7047HD[ _]3G|8041HD|8066|705[23]|7041|8041HD|8051|8048|974[96]|973[78]W|974[170]|9743W|9750HD|7043XD|7049|7887|7037W|702[46])|TB-(771A|711A)|X Point|X-Force[\(-]?TM-5009\)?|X-Plus[\(-]?TM-5577\)?|TM_5011|X-pad (?:AIR 8|iX 7|NAVI 7.[35]|NAVI 10|SKY 8.1|STYLE 8|STYLE 10.1|HIT|LITE 7.[12]|QUAD (?:7.2|10|7)|SHINE 8.1)(?: 3G)?`),
		regexp.MustCompile(`(?i)(NaviPad [^/;]*) Build`),
		regexp.MustCompile(`(?i)X-pad SHINE 8.1 3G`),
		regexp.MustCompile(`(?i)X-pad QUAD 7.2 3G`),
		regexp.MustCompile(`(?i)X-pad LITE (7.[12])`),
		regexp.MustCompile(`(?i)X-pad STYLE 10.1 3G`),
		regexp.MustCompile(`(?i)(X-pad (?:AIR 8|iX 7) 3G)`),
		regexp.MustCompile(`(?i)TM-7096|X-pad NAVI 7.3 3G`),
		regexp.MustCompile(`(?i)X-pad NAVI 7.5 3G`),
		regexp.MustCompile(`(?i)X-pad SKY 8.1 3G`),
		regexp.MustCompile(`(?i)TM-1046|X-pad NAVI 10 3G`),
		regexp.MustCompile(`(?i)(TM-(?:1057|1067|6906|8043|9748[_ ]3G|9740|9757(?:[_ ]3G)?|7047HD[ _]3G|9747BT|9751HD|702[13]|705[23]|7041|9720|7047HD[_ ]3G|8044|8041HD|973[78]W|9743W|974[710]|9750HD|7043XD|7037W|702[46])|TB-(?:771A|711A|8041HD))`),
		regexp.MustCompile(`(?i)(TM-(?:3000|3200R|400[34]|4083|4377|4504|451[30]|500[35]|5[23]77|5571|3204R|520[04]|5581|5505|5017|507[13-7]|5081|6003|5513))`),
		regexp.MustCompile(`(?i)TM-508(3|4)`),
		regexp.MustCompile(`(?i)TM-558(3|4)`),
		regexp.MustCompile(`(?i)TM-(5016|3500)`),
		regexp.MustCompile(`(?i)TEXET[_ ]IX-MINI`),
		regexp.MustCompile(`(?i)X-Force[\(-]?TM-5009\)?`),
		regexp.MustCompile(`(?i)X-Plus[\(-]?TM-5577\)?`),
		regexp.MustCompile(`(?i)teXet[_ ]X-medium[_ ]plus`),
		regexp.MustCompile(`(?i)Vmobile[ _]`),
		regexp.MustCompile(`(?i)Vmobile[ _](J7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vmobile XS Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OWN[ _]|(?:S4035[ _][34]G|Smart8|SMART PLUS LTE|FUN VALUE (?:4G|Lite)|FUN_VALUE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUN ([67])`),
		regexp.MustCompile(`(?i)FUN 5\(4G\)`),
		regexp.MustCompile(`(?i)(?:OWN[ _])?(S3000D|S3010|S3020D|S4010|S4025|S4035[ _][34]G)`),
		regexp.MustCompile(`(?i)FUN[_ ]VALUE(?: 4G)?`),
		regexp.MustCompile(`(?i)Smart ?(8|9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART PLUS LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FBMD/(?:Aspire E5-421G|Z5WAL|One S1003);`),
		regexp.MustCompile(`(?i)FBMD/Aspire E5-421G;`),
		regexp.MustCompile(`(?i)FBMD/Z5WAL;`),
		regexp.MustCompile(`(?i)FBMD/One S1003;`),
		regexp.MustCompile(`(?i)FBMD/(?:K50IN|K54L|T100HAN|T103HAF|UX360CAK|X550LB|X553MA|X555LN|X556UQK);`),
		regexp.MustCompile(`(?i)FBMD/K50IN;`),
		regexp.MustCompile(`(?i)FBMD/K54L;`),
		regexp.MustCompile(`(?i)FBMD/T100HAN;`),
		regexp.MustCompile(`(?i)FBMD/T103HAF;`),
		regexp.MustCompile(`(?i)FBMD/UX360CAK;`),
		regexp.MustCompile(`(?i)FBMD/X550LB;`),
		regexp.MustCompile(`(?i)FBMD/X553MA;`),
		regexp.MustCompile(`(?i)FBMD/X555LN;`),
		regexp.MustCompile(`(?i)FBMD/X556UQK;`),
		regexp.MustCompile(`(?i)FBMD/(?:Latitude E4300|Inspiron 3541|XPS 15 95[35]0);`),
		regexp.MustCompile(`(?i)FBMD/((?:Compaq|HP) |23-f364)`),
		regexp.MustCompile(`(?i)HP EliteBook (25[67]0p)`),
		regexp.MustCompile(`(?i)HP ProBook (440 G5|6[35]60b)`),
		regexp.MustCompile(`(?i)FBMD/(?:37021C5|80E5|80SM|80VR);`),
		regexp.MustCompile(`(?i)FBMD/37021C5;`),
		regexp.MustCompile(`(?i)FBMD/80E5;`),
		regexp.MustCompile(`(?i)FBMD/80SM;`),
		regexp.MustCompile(`(?i)FBMD/80VR;`),
		regexp.MustCompile(`(?i)FBMD/SCL141CTP;`),
		regexp.MustCompile(`(?i)FBMD/TH360R12.32CTW;`),
		regexp.MustCompile(`(?i)Satellite (A[25]00|C650|C855|L650|S855)`),
		regexp.MustCompile(`(?i)Satellite ([^;\)]+);`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod1[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod2[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod3[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod4[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod5[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod7[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod9[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod`),
		regexp.MustCompile(`(?i)COWON ([^;/]+) Build`),
		regexp.MustCompile(`(?i)FiiO M(1[157]|6)`),
		regexp.MustCompile(`(?i)KuGou[_ -](P5)`),
		regexp.MustCompile(`(?i)(SV-MV100)`),
		regexp.MustCompile(`(?i)Sonos/.+\((?:ZP.+)\)|Sonos;`),
		regexp.MustCompile(`(?i)\((ZPS(?:[13569]|1[1-578]|2[03])|ZP90)\)`),
		regexp.MustCompile(`(?i)Sonos;Play5;`),
		regexp.MustCompile(`(?i)Sonos;One;`),
		regexp.MustCompile(`(?i)YP-(G[SIPB]?1|G[57]0|GB70D)`),
		regexp.MustCompile(`(?i)YP-G[B]?1`),
		regexp.MustCompile(`(?i)Shanling (M6\(21\))`),
		regexp.MustCompile(`(?i)(SLTDVD102[34])`),
		regexp.MustCompile(`(?i)(DV-PTB1080)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Erisson[_ ]Shell`),
		regexp.MustCompile(`(?i)ALDINORD[;,]`),
		regexp.MustCompile(`(?i)ALDISUED[;,]`),
		regexp.MustCompile(`(?i)ALDISUED, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(LE43S5970-20|S50856)`),
		regexp.MustCompile(`(?i)ARRIS[;,]`),
		regexp.MustCompile(`(?i)Airties; ?([^);/]+)`),
		regexp.MustCompile(`(?i)Altech UEC; ?([^);/]+)`),
		regexp.MustCompile(`(?i)Blaupunkt_UMC[;,]`),
		regexp.MustCompile(`(?i)BUSH[;,]`),
		regexp.MustCompile(`(?i)CELCUS[;,]`),
		regexp.MustCompile(`(?i)Changhong; ?([^);/]+)`),
		regexp.MustCompile(`(?i)DIGIHOME[;,]`),
		regexp.MustCompile(`(?i)ELECTRONIA[;,]`),
		regexp.MustCompile(`(?i)ESSENTIELB[;,]`),
		regexp.MustCompile(`(?i)FU[;,]`),
		regexp.MustCompile(`(?i)FINLUX[;,]`),
		regexp.MustCompile(`(?i)FUEGO[;,]`),
		regexp.MustCompile(`(?i)GOGEN[;,]`),
		regexp.MustCompile(`(?i)(OWB|Grundig|Arcelik)`),
		regexp.MustCompile(`(?i)(?:HHW_)?HAIER`),
		regexp.MustCompile(`(?i)HI-LEVEL[;,]`),
		regexp.MustCompile(`(?i)Hisense|Eurofins_Digital_Testing`),
		regexp.MustCompile(`(?i)(L[A-Z]{2,3}[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,6}[0-9]?[A-Z]?)`),
		regexp.MustCompile(`(?i)(H[A-Z]?[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,4})`),
		regexp.MustCompile(`(?i)Hitachi[;,]`),
		regexp.MustCompile(`(?i)HORIZON[;,]`),
		regexp.MustCompile(`(?i)HOTEL[;,]`),
		regexp.MustCompile(`(?i)Humax|hdr1000s`),
		regexp.MustCompile(`(?i)(HD-FOX C|HD (FOX\+|NANO)|iCord (HD\+|MINI|Cable)|(CX|IR)HD-5100(C|S)|HM9503HD)`),
		regexp.MustCompile(`(?i)Humax; ([^);/]+)`),
		regexp.MustCompile(`(?i)HYUNDAI[;,]`),
		regexp.MustCompile(`(?i)(Vantage|VT-100|VT-1)`),
		regexp.MustCompile(`(?i)inverto; ([^);/]+)`),
		regexp.MustCompile(`(?i)(Volksbox Web Edition|Volksbox Essential|Volksbox II|Volksbox)`),
		regexp.MustCompile(`(?i)AFTSO001|JVC[;,]`),
		regexp.MustCompile(`(?i)KUBO[;,]`),
		regexp.MustCompile(`(?i)KALLEY[;,]`),
		regexp.MustCompile(`(?i)KEY000000(2E|2F|3B|3F)`),
		regexp.MustCompile(`(?i)(NetCast [0-9]{1}.[0-9]{1}|GLOBAL_PLAT3)`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z0-9]{3}[A-Z]{2})`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z][0-9][A-Z])`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z0-9]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}[A-Z]{2}[0-9]{4}[A-Z0-9]{1}[A-Z]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}NANO[0-9]{3}[A-Z]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}NANO[0-9]{2})`),
		regexp.MustCompile(`(?i)LGE;? ?([0-9]{2}[A-Z]{2}[0-9]{2,4}[A-Z]?)`),
		regexp.MustCompile(`(?i)LAURUS[;,]`),
		regexp.MustCompile(`(?i)Lifemaxx[;,]`),
		regexp.MustCompile(`(?i)LINSAR[;,]`),
		regexp.MustCompile(`(?i)Loewe[^$]`),
		regexp.MustCompile(`(?i)([A-Z]{2}[0-9]{3})`),
		regexp.MustCompile(`(?i)LUXOR[;,]`),
		regexp.MustCompile(`(?i)MStar[;,]`),
		regexp.MustCompile(`(?i)([24])KTV18`),
		regexp.MustCompile(`(?i)MTC[;,]`),
		regexp.MustCompile(`(?i)([24])K_Android_TV_V01`),
		regexp.MustCompile(`(?i)MTK|MediaTek;`),
		regexp.MustCompile(`(?i)(MT[0-9]{4})`),
		regexp.MustCompile(`(?i)MEDION, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)NORDMENDE[;,]`),
		regexp.MustCompile(`(?i)OK[;,]`),
		regexp.MustCompile(`(?i)PROFILO[;,]`),
		regexp.MustCompile(`(?i)VIERA (201[1-9])`),
		regexp.MustCompile(`(?i)(DIGA [A-Z]{1}[0-9]{4})`),
		regexp.MustCompile(`(?i)DIGA Webkit ([A-Z]{1}[0-9]{4})`),
		regexp.MustCompile(`(?i)SmartTV(201[89]|202[0-1])`),
		regexp.MustCompile(`(?i)Philips|NETTV/`),
		regexp.MustCompile(`(?i)Philips[,;] ?([^),;/]+)`),
		regexp.MustCompile(`(?i)NETTV/[0-9\.]{5}`),
		regexp.MustCompile(`(?i)POLAROID[;,]`),
		regexp.MustCompile(`(?i)QILIVE[;,]`),
		regexp.MustCompile(`(?i)REGAL[;,]`),
		regexp.MustCompile(`(?i)SCBC[;,]`),
		regexp.MustCompile(`(?i)SEG[;,]`),
		regexp.MustCompile(`(?i)SWTV[;,]`),
		regexp.MustCompile(`(?i)Saba[;,]`),
		regexp.MustCompile(`(?i)Salora[;,]`),
		regexp.MustCompile(`(?i)Samsung.*Smart\s*TV|Tizen.*TV|Maple_2011`),
		regexp.MustCompile(`(?i)SmartTV(201[2-9]|202[0-1]):([^);/]+)`),
		regexp.MustCompile(`(?i)SmartTV(201[2-9]|202[0-1])`),
		regexp.MustCompile(`(?i)Selevision; (?:Selevision )?([^);/]+)`),
		regexp.MustCompile(`(?i)(EMC1000i)`),
		regexp.MustCompile(`(?i)(?:UMC-)?Sharp`),
		regexp.MustCompile(`(?i)SHARP, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Sharp[,;] ?([^),;/]+)`),
		regexp.MustCompile(`(?i)(LE[0-9]{3}[A-Z]{0,3})`),
		regexp.MustCompile(`(?i)LC-([^);/]+)`),
		regexp.MustCompile(`(?i)Sky_worth;([^);/]+)`),
		regexp.MustCompile(`(?i)Smart[;,]`),
		regexp.MustCompile(`(?i)Smart; ([^);/]+)`),
		regexp.MustCompile(`(?i)([A-Z]{2}[0-9]{2}|ZAPPIX)`),
		regexp.MustCompile(`(?i)KDL-GN([56])`),
		regexp.MustCompile(`(?i)(?:BRAVIA )(2K GB ATV3|[48]K UR[123]|4K GB ATV3|4K GB|4K VH2|4K 2015|2015|VH1|VU1)(?:[);/ ]|VH1|4K VH2|$)`),
		regexp.MustCompile(`(?i)(KDL?-?[0-9]{2}[A-Z]{1}[0-9]{4}[A-Z]{1})`),
		regexp.MustCompile(`(?i)(KDL?-?[0-9]{2}[A-Z]{1}[0-9]{3}[A-Z]{1})`),
		regexp.MustCompile(`(?i)(KDL?-?[0-9]{2}[A-Z]{1,2}[0-9]{1,5})`),
		regexp.MustCompile(`(?i)TCL[^\s]`),
		regexp.MustCompile(`(?i)(32D1820|(?:39|55)D2900|32D2930|(?:32|43)S4900)`),
		regexp.MustCompile(`(?i)TDSystems[;,]`),
		regexp.MustCompile(`(?i)SmartTV(2019|2020)`),
		regexp.MustCompile(`(?i)TOKYO[;,]`),
		regexp.MustCompile(`(?i)((DigiCorder|MultyVision|Digit) (ISIO S|ISIO C|ISIO))`),
		regexp.MustCompile(`(?i)TECHNIKA[;,]`),
		regexp.MustCompile(`(?i)([A-Z]{1}-[0-9]{3})`),
		regexp.MustCompile(`(?i)Techwood[;,]`),
		regexp.MustCompile(`(?i)THOMSON[,]?|THOM`),
		regexp.MustCompile(`(?i)(TB28D19DHS-01|T28D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T32RTM5040|T32D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T43FSL5031|T43D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T40D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T49D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T55D18[SD]FS-01B)`),
		regexp.MustCompile(`(?i)(([0-9]{2}|DTV_)[A-Z]{2}[0-9]{1,3})`),
		regexp.MustCompile(`(?i)OEM, ([a-z0-9_ \-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)VOX[;,]`),
		regexp.MustCompile(`(?i)(?:Vestel.+VESTEL|VESTEL;)`),
		regexp.MustCompile(`(?i)videoweb|tv2n`),
		regexp.MustCompile(`(?i)(tv2n)`),
		regexp.MustCompile(`(?i)(videowebtv)`),
		regexp.MustCompile(`(?i)WELLINGTON[;,]`),
		regexp.MustCompile(`(?i)X-VISION[;,]`),
	}
	__dr_buf = []byte{
		0x4e, 0x69, 0x6b, 0x6f, 0x6e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6f, 0x6c, 0x70,
		0x69, 0x78, 0x20, 0x53, 0x38, 0x30, 0x30, 0x63, 0x53, 0x61, 0x6d, 0x73, 0x75, 0x6e, 0x67, 0x45,
		0x4b, 0x2d, 0x47, 0x4e, 0x31, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x58,
		0x45, 0x4b, 0x2d, 0x47, 0x43, 0x31, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43,
		0x61, 0x6d, 0x65, 0x72, 0x61, 0x45, 0x4b, 0x2d, 0x47, 0x43, 0x31, 0x31, 0x30, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20,
		0x6f, 0x6e, 0x6c, 0x79, 0x45, 0x4b, 0x2d, 0x47, 0x43, 0x32, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x24, 0x31, 0x4d, 0x41, 0x43, 0x20, 0x41,
		0x55, 0x44, 0x49, 0x4f, 0x63, 0x61, 0x72, 0x20, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x4d,
		0x61, 0x63, 0x20, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x70, 0x72, 0x6f, 0x53, 0x70, 0x72,
		0x6f, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x51, 0x74, 0x43, 0x61, 0x72,
		0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x20, 0x53, 0x54, 0x6f,
		0x70, 0x77, 0x61, 0x79, 0x73, 0x70, 0x39, 0x38, 0x35, 0x33, 0x69, 0x5f, 0x31, 0x68, 0x31, 0x30,
		0x5f, 0x76, 0x6d, 0x6d, 0x54, 0x53, 0x39, 0x41, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x63, 0x6f, 0x6e,
		0x73, 0x6f, 0x6c, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4a, 0x58,
		0x44, 0x4a, 0x58, 0x44, 0x5f, 0x53, 0x36, 0x30, 0x31, 0x57, 0x49, 0x46, 0x49, 0x53, 0x36, 0x30,
		0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x58,
		0x62, 0x6f, 0x78, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x58,
		0x58, 0x62, 0x6f, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x4f,
		0x6e, 0x65, 0x58, 0x42, 0x4f, 0x58, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x45, 0x44, 0x58, 0x62, 0x6f,
		0x78, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x33, 0x36, 0x30, 0x4e,
		0x69, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x6f, 0x24, 0x31, 0x4f, 0x55, 0x59, 0x41, 0x52, 0x65, 0x74,
		0x72, 0x6f, 0x69, 0x64, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x65, 0x67, 0x61, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x63, 0x61, 0x73, 0x74, 0x53, 0x6f,
		0x6e, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31,
		0x31, 0x30, 0x6d, 0x6f, 0x6f, 0x6e, 0x73, 0x74, 0x76, 0x32, 0x45, 0x73, 0x6d, 0x61, 0x72, 0x74,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x45, 0x35, 0x30, 0x30, 0x41, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x45, 0x34, 0x35, 0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x33, 0x36, 0x30, 0x4e,
		0x37, 0x4e, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x36,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x36, 0x4e, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4e, 0x34, 0x4e, 0x35, 0x4e, 0x34, 0x41, 0x4e, 0x35, 0x53, 0x4e, 0x34,
		0x53, 0x33, 0x47, 0x4e, 0x45, 0x54, 0x54, 0x39, 0x30, 0x30, 0x33, 0x47, 0x4f, 0x74, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x41, 0x70, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x33, 0x51, 0x51, 0x6f, 0x6f,
		0x21, 0x20, 0x50, 0x2d, 0x50, 0x61, 0x64, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x51, 0x2d, 0x50, 0x61,
		0x64, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x53, 0x75, 0x72, 0x66, 0x54, 0x53, 0x39, 0x37, 0x30, 0x38,
		0x42, 0x53, 0x75, 0x72, 0x66, 0x20, 0x54, 0x53, 0x31, 0x30, 0x30, 0x39, 0x42, 0x51, 0x6f, 0x6f,
		0x21, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x51,
		0x6f, 0x6f, 0x21, 0x20, 0x51, 0x2d, 0x42, 0x6f, 0x6f, 0x6b, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x47,
		0x6c, 0x61, 0x7a, 0x65, 0x34, 0x47, 0x6f, 0x6f, 0x64, 0x24, 0x31, 0x20, 0x33, 0x47, 0x4c, 0x69,
		0x67, 0x68, 0x74, 0x20, 0x24, 0x31, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x50,
		0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4b, 0x49, 0x44, 0x53, 0x20, 0x53, 0x34, 0x35, 0x4b, 0x69, 0x64,
		0x73, 0x20, 0x53, 0x34, 0x35, 0x34, 0x69, 0x66, 0x65, 0x35, 0x49, 0x56, 0x45, 0x54, 0x61, 0x72,
		0x7a, 0x61, 0x6e, 0x20, 0x46, 0x31, 0x37, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x77,
		0x65, 0x67, 0x75, 0x65, 0x44, 0x52, 0x45, 0x4e, 0x41, 0x44, 0x72, 0x65, 0x6e, 0x61, 0x4b, 0x61,
		0x6d, 0x62, 0x61, 0x5f, 0x32, 0x4b, 0x61, 0x6d, 0x62, 0x61, 0x20, 0x32, 0x4b, 0x61, 0x6d, 0x62,
		0x61, 0x38, 0x38, 0x34, 0x38, 0x41, 0x26, 0x4b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x32, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x32, 0x30, 0x41, 0x6c, 0x70, 0x68,
		0x61, 0x20, 0x32, 0x31, 0x41, 0x31, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x41, 0x6c, 0x70, 0x68,
		0x61, 0x41, 0x39, 0x35, 0x58, 0x41, 0x39, 0x35, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x39, 0x35, 0x58, 0x20, 0x46, 0x33, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x46, 0x33,
		0x20, 0x53, 0x6c, 0x69, 0x6d, 0x4d, 0x61, 0x78, 0x2b, 0x41, 0x39, 0x35, 0x58, 0x5f, 0x46, 0x33,
		0x41, 0x69, 0x72, 0x5f, 0x49, 0x49, 0x46, 0x33, 0x20, 0x41, 0x69, 0x72, 0x20, 0x49, 0x49, 0x41,
		0x39, 0x35, 0x58, 0x20, 0x4d, 0x41, 0x58, 0x4d, 0x61, 0x78, 0x41, 0x39, 0x35, 0x58, 0x20, 0x50,
		0x52, 0x4f, 0x50, 0x72, 0x6f, 0x41, 0x39, 0x35, 0x58, 0x20, 0x46, 0x33, 0x20, 0x41, 0x69, 0x72,
		0x46, 0x33, 0x20, 0x41, 0x69, 0x72, 0x5a, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x45, 0x45,
		0x5a, 0x4f, 0x41, 0x46, 0x46, 0x49, 0x58, 0x65, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x41, 0x71, 0x75,
		0x61, 0x72, 0x69, 0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x41, 0x71, 0x75, 0x61, 0x72,
		0x69, 0x75, 0x73, 0x41, 0x47, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x47, 0x4d, 0x47,
		0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x24, 0x31, 0x41, 0x39,
		0x48, 0x33, 0x48, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x49, 0x44, 0x41, 0x54, 0x41, 0x41, 0x44,
		0x54, 0x20, 0x31, 0x30, 0x36, 0x31, 0x41, 0x44, 0x54, 0x31, 0x30, 0x31, 0x32, 0x4c, 0x41, 0x44,
		0x54, 0x20, 0x31, 0x30, 0x31, 0x32, 0x4c, 0x45, 0x4c, 0x44, 0x45, 0x20, 0x31, 0x30, 0x41, 0x49,
		0x52, 0x4f, 0x4e, 0x41, 0x69, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x38,
		0x53, 0x41, 0x49, 0x53, 0x69, 0x72, 0x69, 0x73, 0x37, 0x30, 0x38, 0x4c, 0x41, 0x56, 0x41, 0x20,
		0x50, 0x52, 0x4f, 0x20, 0x34, 0x2e, 0x35, 0x4b, 0x69, 0x6e, 0x67, 0x63, 0x6f, 0x6d, 0x6d, 0x20,
		0x43, 0x35, 0x30, 0x30, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x58, 0x33, 0x41, 0x4c, 0x44, 0x49, 0x20, 0x4e, 0x4f, 0x52, 0x44,
		0x41, 0x4c, 0x44, 0x49, 0x20, 0x53, 0xc3, 0x9c, 0x44, 0x41, 0x4c, 0x4c, 0x49, 0x4e, 0x6d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x41, 0x4d, 0x41, 0x41, 0x4d, 0x43, 0x56,
		0x41, 0x4d, 0x47, 0x4f, 0x4f, 0x41, 0x4d, 0x33, 0x35, 0x30, 0x4a, 0x61, 0x63, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x54, 0x69, 0x67, 0x6f, 0x41, 0x4d, 0x34, 0x30, 0x32, 0x50, 0x72, 0x6f, 0x6e, 0x74,
		0x6f, 0x41, 0x4d, 0x34, 0x31, 0x30, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x41, 0x4d, 0x34, 0x35, 0x30,
		0x53, 0x77, 0x69, 0x66, 0x74, 0x41, 0x4d, 0x35, 0x30, 0x38, 0x46, 0x75, 0x65, 0x67, 0x6f, 0x41,
		0x4d, 0x35, 0x30, 0x39, 0x55, 0x6e, 0x6f, 0x41, 0x4d, 0x35, 0x31, 0x35, 0x44, 0x31, 0x41, 0x4d,
		0x35, 0x31, 0x38, 0x43, 0x31, 0x41, 0x4d, 0x35, 0x32, 0x30, 0x41, 0x4d, 0x35, 0x32, 0x33, 0x41,
		0x4d, 0x35, 0x32, 0x37, 0x47, 0x65, 0x6f, 0x41, 0x4d, 0x35, 0x33, 0x30, 0x41, 0x4d, 0x35, 0x33,
		0x35, 0x50, 0x31, 0x41, 0x4d, 0x24, 0x31, 0x41, 0x4e, 0x53, 0x55, 0x4c, 0x34, 0x30, 0x20, 0x42,
		0x75, 0x69, 0x6c, 0x64, 0x55, 0x4c, 0x34, 0x30, 0x41, 0x4e, 0x53, 0x2f, 0x4c, 0x35, 0x31, 0x4c,
		0x35, 0x31, 0x41, 0x4e, 0x58, 0x4f, 0x4e, 0x49, 0x54, 0x41, 0x4f, 0x43, 0x41, 0x4f, 0x59, 0x4f,
		0x44, 0x4b, 0x47, 0x41, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x64, 0x69,
		0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x54, 0x49, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x41, 0x52, 0x52,
		0x49, 0x53, 0x41, 0x53, 0x53, 0x45, 0x41, 0x54, 0x26, 0x54, 0x45, 0x41, 0x32, 0x31, 0x31, 0x30,
		0x30, 0x35, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x35, 0x47, 0x52, 0x61, 0x64, 0x69, 0x61,
		0x6e, 0x74, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x20, 0x4d,
		0x61, 0x78, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x35, 0x47,
		0x41, 0x78, 0x69, 0x61, 0x43, 0x61, 0x6c, 0x79, 0x70, 0x73, 0x6f, 0x43, 0x61, 0x6c, 0x79, 0x70,
		0x73, 0x6f, 0x20, 0x32, 0x43, 0x61, 0x6c, 0x79, 0x70, 0x73, 0x6f, 0x20, 0x33, 0x4d, 0x61, 0x65,
		0x73, 0x74, 0x72, 0x6f, 0x4d, 0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x4d,
		0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x61, 0x65, 0x73, 0x74,
		0x72, 0x6f, 0x20, 0x33, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x20, 0x32, 0x4d, 0x6f,
		0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e,
		0x20, 0x5a, 0x41, 0x54, 0x4d, 0x41, 0x4e, 0x41, 0x54, 0x4f, 0x4c, 0x70, 0x65, 0x72, 0x69, 0x70,
		0x68, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x5f, 0x53, 0x6c, 0x69, 0x6d, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x53, 0x6c, 0x69, 0x6d, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x55, 0x52, 0x49, 0x53, 0x41, 0x55,
		0x58, 0x41, 0x56, 0x48, 0x45, 0x78, 0x63, 0x65, 0x72, 0x20, 0x47, 0x35, 0x2e, 0x24, 0x31, 0x45,
		0x78, 0x63, 0x65, 0x72, 0x20, 0x47, 0x35, 0x45, 0x78, 0x63, 0x65, 0x72, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x45, 0x78, 0x63, 0x65, 0x72, 0x20, 0x38, 0x41, 0x58, 0x58, 0x41, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x59, 0x59, 0x41, 0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x4e,
		0x65, 0x6f, 0x6e, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x20, 0x43, 0x24, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x24, 0x31, 0x53, 0x70, 0x65, 0x65,
		0x64, 0x20, 0x58, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f,
		0x6e, 0x20, 0x24, 0x31, 0x50, 0x65, 0x61, 0x72, 0x6c, 0x20, 0x41, 0x34, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x50, 0x65, 0x61, 0x72, 0x6c, 0x20, 0x41, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x65,
		0x61, 0x72, 0x6c, 0x20, 0x41, 0x24, 0x31, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x50, 0x35, 0x35, 0x46,
		0x41, 0x53, 0x54, 0x37, 0x20, 0x33, 0x47, 0x53, 0x75, 0x72, 0x66, 0x20, 0x31, 0x30, 0x30, 0x30,
		0x4b, 0x69, 0x64, 0x7a, 0x79, 0x20, 0x37, 0x30, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74, 0x79,
		0x6c, 0x65, 0x41, 0x63, 0x65, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x75, 0x7a,
		0x7a, 0x20, 0x24, 0x31, 0x43, 0x4c, 0x45, 0x56, 0x45, 0x52, 0x20, 0x31, 0x43, 0x6c, 0x65, 0x76,
		0x65, 0x72, 0x20, 0x31, 0x55, 0x52, 0x42, 0x41, 0x4e, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x55,
		0x72, 0x62, 0x61, 0x6e, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x20,
		0x24, 0x31, 0x41, 0x63, 0x65, 0x72, 0x44, 0x41, 0x32, 0x32, 0x30, 0x48, 0x51, 0x4c, 0x44, 0x41,
		0x32, 0x34, 0x31, 0x48, 0x4c, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41, 0x41, 0x54, 0x41,
		0x42, 0x24, 0x31, 0x45, 0x41, 0x43, 0x54, 0x41, 0x42, 0x31, 0x30, 0x32, 0x31, 0x41, 0x43, 0x54,
		0x41, 0x42, 0x24, 0x31, 0x45, 0x54, 0x2d, 0x31, 0x30, 0x38, 0x2d, 0x31, 0x31, 0x41, 0x45, 0x6e,
		0x64, 0x75, 0x72, 0x6f, 0x20, 0x54, 0x31, 0x54, 0x50, 0x41, 0x36, 0x30, 0x57, 0x49, 0x63, 0x6f,
		0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x38, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x37, 0x41, 0x31, 0x2d, 0x38, 0x33, 0x30, 0x49, 0x63, 0x6f, 0x6e, 0x69,
		0x61, 0x20, 0x41, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x6c, 0x6b, 0x20,
		0x53, 0x41, 0x33, 0x2d, 0x41, 0x32, 0x30, 0x46, 0x48, 0x44, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61,
		0x20, 0x41, 0x33, 0x20, 0x46, 0x48, 0x44, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41, 0x33,
		0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x49, 0x63, 0x6f,
		0x6e, 0x69, 0x61, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20,
		0x42, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x37, 0x49,
		0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x38, 0x49, 0x63, 0x6f, 0x6e, 0x69,
		0x61, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x41, 0x31, 0x30, 0x31, 0x56, 0x61, 0x6e, 0x67,
		0x6f, 0x67, 0x68, 0x41, 0x32, 0x30, 0x30, 0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x45,
		0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x41, 0x63, 0x65, 0x72, 0x20, 0x4f, 0x6e, 0x65, 0x20,
		0x37, 0x20, 0x34, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x34, 0x47, 0x41, 0x63, 0x65, 0x72,
		0x20, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x47, 0x54, 0x2d, 0x38, 0x31,
		0x30, 0x50, 0x72, 0x65, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x38, 0x41, 0x63, 0x65, 0x72, 0x5f,
		0x6f, 0x6e, 0x65, 0x5f, 0x38, 0x5f, 0x54, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x54, 0x32,
		0x4f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x54, 0x34, 0x2d, 0x38, 0x32, 0x4c, 0x4c, 0x69, 0x71, 0x75,
		0x69, 0x64, 0x20, 0x45, 0x37, 0x30, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
		0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x45, 0x31, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71,
		0x75, 0x69, 0x64, 0x20, 0x45, 0x32, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
		0x20, 0x45, 0x33, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x53, 0x31, 0x4c, 0x69, 0x71, 0x75,
		0x69, 0x64, 0x20, 0x53, 0x32, 0x6e, 0x65, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x34,
		0x30, 0x30, 0x6e, 0x65, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x33, 0x30, 0x30, 0x6e,
		0x65, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x53, 0x32, 0x30, 0x30, 0x62, 0x65, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x45, 0x31, 0x30, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a,
		0x24, 0x31, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x31, 0x31, 0x30, 0x4c, 0x69, 0x71,
		0x75, 0x69, 0x64, 0x20, 0x5a, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
		0x20, 0x5a, 0x34, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4a, 0x61,
		0x64, 0x65, 0x20, 0x5a, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x35, 0x33, 0x30, 0x4c,
		0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x36, 0x33, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
		0x20, 0x5a, 0x36, 0x33, 0x30, 0x53, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73,
		0x74, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x20, 0x34, 0x47, 0x4c,
		0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c,
		0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4d, 0x33, 0x33, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
		0x20, 0x4d, 0x32, 0x32, 0x30, 0x41, 0x63, 0x65, 0x72, 0x54, 0x44, 0x36, 0x30, 0x30, 0x54, 0x44,
		0x36, 0x30, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4a, 0x61, 0x64, 0x65, 0x4c, 0x69,
		0x71, 0x75, 0x69, 0x64, 0x20, 0x58, 0x32, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x54, 0x72,
		0x61, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x53, 0x70, 0x69, 0x6e, 0x20, 0x24, 0x31,
		0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x41, 0x73, 0x70,
		0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x24, 0x31, 0x41, 0x63, 0x74, 0x65, 0x63, 0x6b, 0x41, 0x54, 0x37, 0x32, 0x33, 0x43,
		0x41, 0x69, 0x6b, 0x75, 0x6e, 0x20, 0x41, 0x54, 0x37, 0x32, 0x33, 0x43, 0x42, 0x4c, 0x45, 0x43,
		0x4b, 0x42, 0x6c, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x72, 0x6f, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x33, 0x47, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x41,
		0x44, 0x56, 0x41, 0x4e, 0x20, 0x4d, 0x34, 0x4d, 0x34, 0x41, 0x44, 0x56, 0x41, 0x4e, 0x20, 0x53,
		0x34, 0x30, 0x53, 0x34, 0x30, 0x69, 0x37, 0x55, 0x49, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x69,
		0x37, 0x55, 0x53, 0x35, 0x45, 0x20, 0x4e, 0x58, 0x54, 0x49, 0x24, 0x31, 0x69, 0x34, 0x55, 0x49,
		0x34, 0x55, 0x4e, 0x41, 0x53, 0x41, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x41, 0x53, 0x41, 0x47,
		0x35, 0x47, 0x35, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x53, 0x35, 0x30, 0x20, 0x34, 0x47, 0x47,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x31, 0x43, 0x20, 0x33,
		0x47, 0x45, 0x31, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6b, 0x65, 0x74, 0x73, 0x61, 0x20, 0x32,
		0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x54, 0x52, 0x37, 0x39,
		0x38, 0x39, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x53, 0x50, 0x24, 0x31, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x20, 0x50, 0x52, 0x24, 0x31, 0x48, 0x6f, 0x6c, 0x6c, 0x6f, 0x67, 0x72,
		0x61, 0x6d, 0x20, 0x48, 0x4c, 0x24, 0x31, 0x48, 0x6f, 0x6c, 0x6c, 0x6f, 0x67, 0x72, 0x61, 0x6d,
		0x20, 0x24, 0x31, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x41, 0x69, 0x72,
		0x41, 0x66, 0x72, 0x69, 0x4f, 0x6e, 0x65, 0x70, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x43, 0x79,
		0x67, 0x6e, 0x75, 0x73, 0x20, 0x58, 0x43, 0x79, 0x67, 0x6e, 0x75, 0x73, 0x47, 0x72, 0x61, 0x76,
		0x69, 0x74, 0x79, 0x20, 0x5a, 0x32, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x69, 0x6e, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x41,
		0x58, 0x31, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x41, 0x58,
		0x31, 0x20, 0x33, 0x47, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x53, 0x77, 0x6f, 0x72,
		0x64, 0x4e, 0x4f, 0x56, 0x4f, 0x31, 0x30, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x76,
		0x6f, 0x20, 0x31, 0x30, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x41, 0x58, 0x31, 0x30, 0x50, 0x52,
		0x4f, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x41, 0x58, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x75,
		0x6d, 0x79, 0x5f, 0x33, 0x47, 0x5f, 0x41, 0x58, 0x33, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x41, 0x58,
		0x33, 0x20, 0x53, 0x77, 0x6f, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x79, 0x33, 0x47, 0x54, 0x61, 0x6c,
		0x6f, 0x73, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x54, 0x61, 0x6c, 0x6f, 0x73, 0x4e,
		0x75, 0x6d, 0x79, 0x5f, 0x33, 0x47, 0x5f, 0x42, 0x57, 0x31, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33,
		0x47, 0x20, 0x54, 0x61, 0x6c, 0x6f, 0x73, 0x20, 0x32, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47,
		0x20, 0x41, 0x58, 0x39, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x41, 0x58, 0x31, 0x30,
		0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x49, 0x49, 0x20, 0x33, 0x47, 0x4e, 0x75, 0x6d, 0x79,
		0x20, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x2d, 0x49, 0x49, 0x52, 0x61, 0x69, 0x6e, 0x62,
		0x6f, 0x77, 0x20, 0x33, 0x47, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f,
		0x77, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x2d, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37,
		0x20, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x20, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x6f, 0x37, 0x46,
		0x69, 0x72, 0x65, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20, 0x46, 0x69, 0x72, 0x65, 0x4e, 0x6f,
		0x76, 0x6f, 0x20, 0x37, 0x20, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37,
		0x20, 0x45, 0x6c, 0x66, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x24,
		0x31, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x41, 0x69, 0x72, 0x69, 0x73,
		0x41, 0x49, 0x52, 0x49, 0x53, 0x54, 0x4d, 0x35, 0x30, 0x51, 0x5a, 0x41, 0x69, 0x72, 0x6e, 0x65,
		0x73, 0x73, 0x41, 0x69, 0x72, 0x70, 0x68, 0x61, 0x48, 0x61, 0x6c, 0x6f, 0x24, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x69, 0x72, 0x74, 0x65, 0x6c, 0x41, 0x69, 0x72, 0x70, 0x61, 0x64, 0x20, 0x37,
		0x2d, 0x73, 0x41, 0x69, 0x72, 0x50, 0x61, 0x64, 0x20, 0x37, 0x53, 0x41, 0x69, 0x75, 0x74, 0x6f,
		0x41, 0x69, 0x77, 0x61, 0x41, 0x57, 0x37, 0x39, 0x30, 0x5a, 0x39, 0x20, 0x50, 0x4c, 0x55, 0x53,
		0x5a, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x57, 0x35, 0x30, 0x30, 0x41, 0x57, 0x4d, 0x24,
		0x31, 0x4d, 0x33, 0x30, 0x30, 0x41, 0x6b, 0x61, 0x69, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x41,
		0x4b, 0x54, 0x42, 0x2d, 0x37, 0x30, 0x33, 0x4d, 0x5a, 0x69, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x58,
		0x24, 0x31, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x69, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x58, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x58, 0x35, 0x5f, 0x50, 0x52, 0x4f, 0x69,
		0x4c, 0x69, 0x6b, 0x65, 0x20, 0x58, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x6c, 0x6f, 0x72, 0x79,
		0x20, 0x24, 0x31, 0x45, 0x63, 0x6f, 0x20, 0x45, 0x32, 0x53, 0x69, 0x32, 0x31, 0x35, 0x37, 0x4c,
		0x47, 0x33, 0x32, 0x41, 0x6c, 0x62, 0x61, 0x41, 0x6c, 0x62, 0x61, 0x20, 0x35, 0x37, 0x35, 0x2e,
		0x37, 0x31, 0x30, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x54, 0x31, 0x30, 0x20, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x41, 0x6c, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x34, 0x30, 0x38, 0x37, 0x55, 0x31,
		0x53, 0x45, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x53, 0x74, 0x61, 0x72, 0x36, 0x30, 0x34, 0x34, 0x44, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x55, 0x70, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x31, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x31, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49,
		0x4d, 0x35, 0x30, 0x33, 0x36, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x43, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x37, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x37, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x44, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x44, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x44, 0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x22, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x35, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20,
		0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70,
		0x20, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20,
		0x33, 0x20, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f,
		0x70, 0x20, 0x33, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x35, 0x30, 0x31, 0x35, 0x44, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x34, 0x35, 0x30, 0x35, 0x31, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49,
		0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34,
		0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34,
		0x2b, 0x37, 0x30, 0x37, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x36, 0x22, 0x35, 0x30, 0x35, 0x37, 0x4d, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x4d, 0x69, 0x72, 0x61, 0x67,
		0x65, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x53,
		0x33, 0x37, 0x30, 0x34, 0x35, 0x59, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x53, 0x37, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x35, 0x30, 0x34, 0x32, 0x54, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x49, 0x64, 0x6f, 0x6c, 0x58, 0x20,
		0x36, 0x30, 0x34, 0x30, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64,
		0x6f, 0x6c, 0x20, 0x58, 0x35, 0x30, 0x32, 0x37, 0x42, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x44, 0x61, 0x77, 0x6e, 0x41, 0x37, 0x20, 0x58, 0x4c, 0x31, 0x42, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x31, 0x42, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x4f, 0x6e,
		0x79, 0x78, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x34, 0x30, 0x33, 0x34, 0x54, 0x31, 0x45, 0x35, 0x30,
		0x30, 0x32, 0x46, 0x31, 0x41, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x34, 0x30, 0x36, 0x33,
		0x46, 0x31, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x34, 0x30, 0x36, 0x35, 0x46, 0x31, 0x4c, 0x20,
		0x50, 0x72, 0x6f, 0x33, 0x4c, 0x41, 0x35, 0x37, 0x36, 0x43, 0x43, 0x4b, 0x6f, 0x72, 0x61, 0x20,
		0x41, 0x35, 0x37, 0x36, 0x43, 0x43, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x20, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x20, 0x34, 0x35, 0x30, 0x35, 0x34, 0x4e, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x20,
		0x58, 0x4c, 0x36, 0x30, 0x34, 0x32, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x20, 0x6d, 0x69, 0x6e, 0x69,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x53,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32,
		0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20,
		0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20,
		0x33, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x49, 0x64, 0x6f, 0x6c, 0x20, 0x34, 0x36, 0x30, 0x37, 0x30, 0x4b, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x34, 0x53, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x35, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x35, 0x53, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x58, 0x2b, 0x38, 0x30,
		0x33, 0x30, 0x59, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x48, 0x65, 0x72,
		0x6f, 0x20, 0x32, 0x37, 0x30, 0x35, 0x35, 0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x43, 0x37, 0x30, 0x35, 0x33, 0x44, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x58, 0x31, 0x35, 0x30, 0x36, 0x35, 0x4e, 0x54,
		0x52, 0x55, 0x41, 0x35, 0x37, 0x34, 0x42, 0x4c, 0x52, 0x61, 0x76, 0x65, 0x6e, 0x41, 0x35, 0x37,
		0x37, 0x56, 0x4c, 0x5a, 0x69, 0x70, 0x41, 0x34, 0x36, 0x36, 0x42, 0x47, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x55, 0x6e, 0x69, 0x74, 0x65, 0x35, 0x30, 0x35, 0x36, 0x49, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x41, 0x35, 0x37, 0x30, 0x42, 0x4c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x41, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x54, 0x45,
		0x41, 0x35, 0x37, 0x31, 0x56, 0x4c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x69, 0x78, 0x69, 0x20, 0x41, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54,
		0x45, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20,
		0x46, 0x69, 0x72, 0x73, 0x74, 0x41, 0x34, 0x36, 0x34, 0x42, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x47, 0x6c, 0x69, 0x74, 0x7a, 0x41,
		0x36, 0x32, 0x31, 0x42, 0x4c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x34, 0x30, 0x31, 0x34, 0x44, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x32, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x33,
		0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78,
		0x69, 0x20, 0x33, 0x20, 0x33, 0x2e, 0x35, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49,
		0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20,
		0x33, 0x20, 0x34, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69,
		0x78, 0x69, 0x20, 0x33, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x20, 0x34,
		0x47, 0x39, 0x30, 0x30, 0x32, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x37, 0x22, 0x39, 0x30, 0x30, 0x37, 0x41, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x37,
		0x22, 0x20, 0x34, 0x47, 0x31, 0x54, 0x31, 0x54, 0x20, 0x31, 0x30, 0x31, 0x54, 0x20, 0x31, 0x30,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x31, 0x54, 0x20, 0x31, 0x30, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x54, 0x45, 0x4b, 0x45, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x39, 0x30, 0x30, 0x39, 0x41, 0x31, 0x54, 0x20, 0x37, 0x39, 0x33, 0x30, 0x39, 0x58,
		0x31, 0x54, 0x20, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x31, 0x54, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x39, 0x30, 0x32, 0x32, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x38, 0x22, 0x39, 0x30, 0x31, 0x30, 0x58,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33,
		0x20, 0x31, 0x30, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69,
		0x78, 0x69, 0x20, 0x34, 0x20, 0x33, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x34, 0x22, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x34, 0x2e, 0x35,
		0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20,
		0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x35, 0x22, 0x20,
		0x33, 0x47, 0x35, 0x30, 0x34, 0x31, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x35, 0x2e, 0x35,
		0x22, 0x20, 0x33, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69,
		0x78, 0x69, 0x20, 0x34, 0x20, 0x35, 0x22, 0x20, 0x34, 0x47, 0x35, 0x30, 0x39, 0x38, 0x4f, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x54, 0x68,
		0x65, 0x61, 0x74, 0x72, 0x65, 0x41, 0x35, 0x30, 0x31, 0x44, 0x4c, 0x41, 0x35, 0x30, 0x33, 0x44,
		0x4c, 0x41, 0x31, 0x58, 0x41, 0x78, 0x65, 0x6c, 0x41, 0x33, 0x41, 0x33, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x41, 0x33, 0x20, 0x58, 0x4c, 0x39, 0x32, 0x30, 0x33, 0x41, 0x41, 0x33, 0x20, 0x37, 0x22,
		0x20, 0x33, 0x47, 0x33, 0x54, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x39, 0x30, 0x32, 0x36, 0x58, 0x41,
		0x33, 0x20, 0x31, 0x30, 0x22, 0x41, 0x35, 0x41, 0x35, 0x20, 0x4c, 0x45, 0x44, 0x35, 0x30, 0x38,
		0x35, 0x4e, 0x41, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x45, 0x44, 0x41, 0x37, 0x41, 0x33,
		0x30, 0x35, 0x30, 0x34, 0x39, 0x53, 0x41, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x35, 0x30,
		0x34, 0x39, 0x5a, 0x41, 0x33, 0x30, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x41, 0x35, 0x30,
		0x33, 0x58, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x35, 0x30, 0x34, 0x39, 0x57, 0x52, 0x65,
		0x76, 0x76, 0x6c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78,
		0x69, 0x20, 0x34, 0x20, 0x36, 0x22, 0x20, 0x33, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x36, 0x22, 0x20, 0x33, 0x47, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x36, 0x22, 0x20, 0x34, 0x47, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x37,
		0x22, 0x20, 0x33, 0x47, 0x38, 0x30, 0x36, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x39, 0x30, 0x32, 0x34, 0x4f, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x37, 0x49, 0x32, 0x31, 0x33, 0x39, 0x30, 0x30, 0x35, 0x58, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x38, 0x50, 0x33,
		0x32, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x4f, 0x50,
		0x20, 0x38, 0x50, 0x33, 0x31, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x4f, 0x50, 0x20, 0x37, 0x50, 0x33, 0x33, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x37, 0x53, 0x39, 0x30, 0x32, 0x30, 0x41,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x54, 0x72, 0x65, 0x6b, 0x20, 0x48,
		0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x47, 0x6f, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x57, 0x61, 0x76, 0x65, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x4f, 0x4e,
		0x45, 0x5f, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x5f, 0x37, 0x36, 0x38, 0x54, 0x49, 0x73, 0x6c, 0x61,
		0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x54, 0x72, 0x69, 0x62,
		0x65, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f, 0x75,
		0x63, 0x68, 0x5f, 0x35, 0x38, 0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x35, 0x38, 0x35, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x54,
		0x4f, 0x55, 0x43, 0x48, 0x5f, 0x38, 0x33, 0x38, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x38, 0x33, 0x38, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x6f, 0x6e, 0x65,
		0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x38, 0x31, 0x33, 0x64, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x31, 0x33, 0x44, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c,
		0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x38, 0x31, 0x33, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x31, 0x33, 0x4f, 0x54, 0x38, 0x37, 0x31,
		0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x37, 0x31, 0x41, 0x50,
		0x33, 0x36, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f,
		0x70, 0x20, 0x31, 0x30, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x24, 0x31,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x24, 0x31, 0x53, 0x68, 0x69, 0x6e, 0x65,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x49, 0x4d, 0x58, 0x4c, 0x54, 0x49, 0x4d, 0x20, 0x58, 0x4c,
		0x35, 0x30, 0x38, 0x35, 0x43, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x4d, 0x69, 0x78, 0x55, 0x33, 0x55,
		0x35, 0x55, 0x35, 0x20, 0x33, 0x47, 0x55, 0x35, 0x20, 0x48, 0x44, 0x34, 0x30, 0x34, 0x37, 0x47,
		0x55, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x34, 0x30, 0x34, 0x37, 0x41, 0x55, 0x35, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x34, 0x30, 0x34,
		0x34, 0x4f, 0x43, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20,
		0x32, 0x47, 0x6f, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x55, 0x35, 0x30, 0x31, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x31, 0x31, 0x43, 0x31, 0x58, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x31, 0x56, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x31,
		0x56, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x31, 0x43, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x33, 0x43, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x31, 0x53, 0x31, 0x53, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x35, 0x30, 0x33, 0x30, 0x45, 0x31, 0x53, 0x50, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x30, 0x29, 0x31, 0x53, 0x45, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x31, 0x56,
		0x31, 0x58, 0x35, 0x30, 0x35, 0x39, 0x53, 0x41, 0x76, 0x61, 0x6c, 0x6f, 0x6e, 0x20, 0x56, 0x35,
		0x56, 0x33, 0x35, 0x30, 0x32, 0x39, 0x45, 0x33, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x33,
		0x4c, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x33, 0x56, 0x33, 0x43, 0x36, 0x30, 0x32, 0x37,
		0x41, 0x33, 0x48, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x58, 0x33, 0x58, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x30, 0x29, 0x35, 0x36, 0x30, 0x36, 0x32, 0x57, 0x37, 0x33, 0x54, 0x20, 0x31, 0x30, 0x22,
		0x33, 0x54, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4a, 0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x4a,
		0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x41, 0x6c, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x20,
		0x55, 0x50, 0x42, 0x69, 0x67, 0x20, 0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x35,
		0x30, 0x34, 0x31, 0x43, 0x54, 0x45, 0x54, 0x52, 0x41, 0x41, 0x6c, 0x63, 0x6f, 0x72, 0x41, 0x6c,
		0x66, 0x61, 0x77, 0x69, 0x73, 0x65, 0x5a, 0x32, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x69,
		0x67, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x43,
		0x61, 0x6c, 0x6c, 0x5f, 0x53, 0x31, 0x5f, 0x58, 0x53, 0x31, 0x20, 0x58, 0x41, 0x6c, 0x6c, 0x43,
		0x61, 0x6c, 0x6c, 0x5f, 0x53, 0x31, 0x53, 0x31, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f,
		0x52, 0x49, 0x4f, 0x5f, 0x53, 0x52, 0x69, 0x6f, 0x20, 0x53, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c,
		0x6c, 0x5f, 0x52, 0x49, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x52, 0x69, 0x6f, 0x20, 0x50, 0x72, 0x6f,
		0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52, 0x49, 0x4f, 0x52, 0x69, 0x6f, 0x48, 0x65,
		0x61, 0x74, 0x20, 0x24, 0x31, 0x52, 0x69, 0x6f, 0x20, 0x58, 0x48, 0x6f, 0x74, 0x20, 0x24, 0x31,
		0x41, 0x6c, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x62, 0x65, 0x53, 0x6d, 0x69, 0x6c, 0x65, 0x20, 0x58,
		0x4d, 0x35, 0x58, 0x53, 0x6b, 0x50, 0x61, 0x64, 0x4d, 0x35, 0x53, 0x4d, 0x35, 0x4d, 0x35, 0x58,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x33, 0x55, 0x36, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x6c,
		0x61, 0x79, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x58, 0x20, 0x47, 0x61,
		0x6d, 0x65, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x41, 0x34, 0x59, 0x6f, 0x75, 0x41, 0x34,
		0x20, 0x59, 0x6f, 0x75, 0x41, 0x58, 0x32, 0x5f, 0x46, 0x72, 0x65, 0x6e, 0x7a, 0x79, 0x41, 0x58,
		0x32, 0x20, 0x46, 0x72, 0x65, 0x6e, 0x7a, 0x79, 0x41, 0x58, 0x35, 0x4e, 0x61, 0x6e, 0x6f, 0x51,
		0x41, 0x58, 0x35, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x51, 0x43, 0x36, 0x5f, 0x44, 0x75, 0x6f,
		0x43, 0x36, 0x20, 0x44, 0x75, 0x6f, 0x45, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x76, 0x69, 0x6e, 0x67,
		0x45, 0x24, 0x31, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x45, 0x33, 0x5f, 0x53, 0x69, 0x67, 0x6e, 0x45,
		0x33, 0x20, 0x53, 0x69, 0x67, 0x6e, 0x45, 0x34, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x45, 0x34, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4d, 0x39, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d, 0x39,
		0x20, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x34, 0x33, 0x5f, 0x45, 0x61, 0x73, 0x79,
		0x50, 0x34, 0x33, 0x20, 0x45, 0x61, 0x73, 0x79, 0x50, 0x24, 0x31, 0x20, 0x65, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x50, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x36, 0x5f, 0x70, 0x6c, 0x75,
		0x73, 0x50, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x5f, 0x51, 0x6d, 0x61, 0x78, 0x50,
		0x36, 0x20, 0x51, 0x6d, 0x61, 0x78, 0x50, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x34, 0x5f,
		0x51, 0x75, 0x61, 0x64, 0x50, 0x34, 0x20, 0x51, 0x75, 0x61, 0x64, 0x50, 0x39, 0x5f, 0x45, 0x6e,
		0x65, 0x72, 0x67, 0x79, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x32, 0x30, 0x31, 0x37, 0x50, 0x39,
		0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x37, 0x29, 0x50, 0x39, 0x5f, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x53, 0x50, 0x39,
		0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x53, 0x50, 0x24, 0x31, 0x20, 0x45, 0x6e, 0x65,
		0x72, 0x67, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x38, 0x5f, 0x45, 0x6e, 0x65, 0x72, 0x67,
		0x79, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x38, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x50,
		0x72, 0x6f, 0x50, 0x24, 0x31, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x50, 0x24, 0x31, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x50, 0x37, 0x5f, 0x53, 0x65,
		0x6f, 0x6e, 0x50, 0x37, 0x20, 0x53, 0x65, 0x6f, 0x6e, 0x50, 0x37, 0x5f, 0x58, 0x74, 0x72, 0x65,
		0x6d, 0x65, 0x50, 0x37, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x50, 0x24, 0x31, 0x20, 0x4c,
		0x69, 0x66, 0x65, 0x50, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x66, 0x65, 0x50, 0x31, 0x30, 0x20, 0x4c,
		0x69, 0x66, 0x65, 0x50, 0x31, 0x30, 0x5f, 0x4d, 0x61, 0x78, 0x50, 0x31, 0x30, 0x20, 0x4d, 0x61,
		0x78, 0x50, 0x31, 0x30, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x31, 0x30, 0x20, 0x53, 0x74,
		0x79, 0x6c, 0x65, 0x56, 0x24, 0x31, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x49, 0x20, 0x34,
		0x47, 0x56, 0x31, 0x5f, 0x56, 0x69, 0x70, 0x65, 0x72, 0x5f, 0x49, 0x56, 0x31, 0x20, 0x56, 0x69,
		0x70, 0x65, 0x72, 0x20, 0x49, 0x56, 0x34, 0x5f, 0x56, 0x69, 0x70, 0x65, 0x72, 0x5f, 0x50, 0x52,
		0x4f, 0x56, 0x34, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x24, 0x31,
		0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x56, 0x32, 0x5f, 0x56, 0x69, 0x70, 0x65, 0x72, 0x5f, 0x58,
		0x5f, 0x70, 0x6c, 0x75, 0x73, 0x56, 0x32, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x58, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x56, 0x32, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x24, 0x31, 0x58,
		0x34, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x58, 0x34, 0x20,
		0x53, 0x6f, 0x75, 0x6c, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x58, 0x37, 0x5f, 0x53, 0x6f,
		0x75, 0x6c, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x37, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20,
		0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x38, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x50, 0x72, 0x6f,
		0x58, 0x38, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x24, 0x31, 0x20, 0x53,
		0x6f, 0x75, 0x6c, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75,
		0x6c, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x58, 0x34, 0x20,
		0x53, 0x6f, 0x75, 0x6c, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58,
		0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x58, 0x24, 0x31,
		0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x58, 0x33, 0x5f, 0x53, 0x6f, 0x75,
		0x6c, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x58, 0x33, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x32,
		0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73,
		0x58, 0x32, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65,
		0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x58, 0x32, 0x5f, 0x54, 0x77, 0x69, 0x6e, 0x58,
		0x32, 0x20, 0x54, 0x77, 0x69, 0x6e, 0x41, 0x35, 0x20, 0x45, 0x61, 0x73, 0x79, 0x41, 0x24, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x35, 0x20, 0x52, 0x65, 0x61, 0x64, 0x79, 0x41, 0x35, 0x53,
		0x6d, 0x69, 0x6c, 0x65, 0x79, 0x41, 0x35, 0x20, 0x53, 0x6d, 0x69, 0x6c, 0x65, 0x79, 0x41, 0x35,
		0x5f, 0x51, 0x75, 0x61, 0x64, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5f, 0x54, 0x4d, 0x41, 0x35, 0x20,
		0x51, 0x75, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35, 0x5f, 0x51, 0x75, 0x61, 0x64,
		0x41, 0x35, 0x20, 0x51, 0x75, 0x61, 0x64, 0x41, 0x36, 0x5f, 0x44, 0x75, 0x6f, 0x41, 0x36, 0x20,
		0x44, 0x75, 0x6f, 0x41, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x32, 0x30, 0x31, 0x39,
		0x41, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41,
		0x31, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x32, 0x47, 0x42, 0x41, 0x31, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x41, 0x31, 0x30, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x31, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x41, 0x31, 0x30, 0x5f, 0x4d, 0x61, 0x78, 0x41, 0x31, 0x30, 0x20, 0x4d, 0x61,
		0x78, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x20, 0x53, 0x41, 0x4c, 0x4c, 0x56, 0x49, 0x45, 0x57,
		0x20, 0x50, 0x34, 0x69, 0x41, 0x6c, 0x6c, 0x44, 0x72, 0x6f, 0x20, 0x50, 0x34, 0x41, 0x6c, 0x6c,
		0x76, 0x69, 0x65, 0x77, 0x5f, 0x50, 0x32, 0x41, 0x6c, 0x6c, 0x44, 0x72, 0x6f, 0x56, 0x69, 0x76,
		0x61, 0x20, 0x24, 0x31, 0x56, 0x69, 0x76, 0x61, 0x5f, 0x48, 0x6f, 0x6d, 0x65, 0x56, 0x69, 0x76,
		0x61, 0x20, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x43, 0x69, 0x74,
		0x79, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x69, 0x74, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c,
		0x6c, 0x76, 0x69, 0x65, 0x77, 0x43, 0x69, 0x74, 0x79, 0x43, 0x69, 0x74, 0x79, 0x41, 0x6c, 0x6c,
		0x76, 0x69, 0x65, 0x77, 0x41, 0x58, 0x32, 0x46, 0x72, 0x65, 0x6e, 0x7a, 0x79, 0x41, 0x6c, 0x6c,
		0x76, 0x69, 0x65, 0x77, 0x32, 0x53, 0x70, 0x65, 0x65, 0x64, 0x44, 0x75, 0x6f, 0x41, 0x6c, 0x6c,
		0x64, 0x72, 0x6f, 0x20, 0x32, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x41,
		0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x33, 0x53, 0x70, 0x65, 0x65, 0x64, 0x51, 0x75, 0x61, 0x64,
		0x41, 0x6c, 0x6c, 0x64, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x56, 0x69, 0x76, 0x61, 0x20, 0x48, 0x31, 0x30, 0x30, 0x33, 0x20, 0x4c, 0x54,
		0x45, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x48, 0x31, 0x30, 0x30, 0x33, 0x5f, 0x4c, 0x54,
		0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x69, 0x76, 0x61, 0x20, 0x48, 0x31, 0x30, 0x30, 0x33, 0x20,
		0x4c, 0x54, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x76, 0x61, 0x5f, 0x31, 0x30, 0x30, 0x33,
		0x47, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x76, 0x61, 0x20, 0x31, 0x30, 0x30, 0x33, 0x47,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x31, 0x30, 0x30, 0x34, 0x5f, 0x4c, 0x54, 0x45, 0x56, 0x69,
		0x76, 0x61, 0x20, 0x48, 0x31, 0x30, 0x30, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x76, 0x61,
		0x20, 0x48, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x49, 0x53,
		0x70, 0x65, 0x65, 0x64, 0x41, 0x4c, 0x4c, 0x56, 0x49, 0x45, 0x57, 0x53, 0x50, 0x45, 0x45, 0x44,
		0x41, 0x58, 0x34, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x58, 0x34,
		0x4e, 0x61, 0x6e, 0x6f, 0x41, 0x58, 0x34, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x41, 0x4c, 0x4c, 0x56,
		0x49, 0x45, 0x57, 0x5f, 0x54, 0x58, 0x31, 0x5f, 0x51, 0x75, 0x61, 0x73, 0x61, 0x72, 0x54, 0x58,
		0x31, 0x20, 0x51, 0x75, 0x61, 0x73, 0x61, 0x72, 0x41, 0x58, 0x24, 0x31, 0x41, 0x6c, 0x6c, 0x77,
		0x69, 0x6e, 0x6e, 0x65, 0x72, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x41,
		0x36, 0x34, 0x20, 0x70, 0x33, 0x41, 0x36, 0x34, 0x20, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f,
		0x52, 0x45, 0x20, 0x70, 0x33, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x41,
		0x33, 0x33, 0x20, 0x79, 0x33, 0x41, 0x33, 0x33, 0x20, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f,
		0x52, 0x45, 0x20, 0x79, 0x33, 0x5a, 0x59, 0x2d, 0x30, 0x37, 0x42, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x4f, 0x63, 0x74, 0x61, 0x2d, 0x54, 0x38, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x4f, 0x63, 0x74,
		0x61, 0x20, 0x54, 0x38, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33,
		0x20, 0x4b, 0x32, 0x30, 0x30, 0x31, 0x6f, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45,
		0x20, 0x54, 0x33, 0x20, 0x4b, 0x32, 0x30, 0x30, 0x31, 0x4f, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43,
		0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x4b, 0x24, 0x31, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43,
		0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x50, 0x24, 0x31, 0x4f, 0x43, 0x54, 0x41, 0x2d, 0x43,
		0x4f, 0x52, 0x45, 0x20, 0x54, 0x38, 0x4f, 0x43, 0x54, 0x4f, 0x50, 0x55, 0x53, 0x2d, 0x43, 0x4f,
		0x52, 0x45, 0x20, 0x54, 0x38, 0x51, 0x75, 0x61, 0x64, 0x43, 0x6f, 0x72, 0x65, 0x2d, 0x52, 0x31,
		0x36, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x52, 0x31, 0x36, 0x41, 0x6c,
		0x70, 0x73, 0x41, 0x6c, 0x74, 0x69, 0x63, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x41, 0x46,
		0x54, 0x41, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x28,
		0x47, 0x65, 0x6e, 0x20, 0x31, 0x29, 0x41, 0x46, 0x54, 0x52, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54,
		0x56, 0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x41, 0x46,
		0x54, 0x4e, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33,
		0x29, 0x41, 0x46, 0x54, 0x54, 0x49, 0x34, 0x33, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20,
		0x34, 0x2d, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x41,
		0x46, 0x54, 0x42, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20,
		0x31, 0x29, 0x41, 0x46, 0x54, 0x53, 0x53, 0x53, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20,
		0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x41, 0x46, 0x54,
		0x53, 0x53, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x31, 0x29, 0x41, 0x46, 0x54, 0x54,
		0x49, 0x46, 0x46, 0x34, 0x33, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x4f, 0x6d, 0x6e,
		0x69, 0x20, 0x51, 0x4c, 0x45, 0x44, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54,
		0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x41, 0x46, 0x54, 0x4b, 0x41, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x20,
		0x4d, 0x61, 0x78, 0x46, 0x69, 0x72, 0x65, 0x20, 0x37, 0x22, 0x46, 0x69, 0x72, 0x65, 0x20, 0x37,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x2e, 0x39, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69,
		0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x2e, 0x39,
		0x22, 0x20, 0x34, 0x47, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x48, 0x44, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65,
		0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58,
		0x20, 0x37, 0x22, 0x20, 0x34, 0x47, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b,
		0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38,
		0x2e, 0x39, 0x22, 0x20, 0x34, 0x47, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x36, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x37, 0x46, 0x69, 0x72, 0x65, 0x20, 0x37, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x32, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x37, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x35, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x32, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x36, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e,
		0x39, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39, 0x20, 0x34, 0x47,
		0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48,
		0x44, 0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x53, 0x44, 0x34, 0x39, 0x33, 0x30, 0x55, 0x52, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65,
		0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x73, 0x70, 0x65, 0x61,
		0x6b, 0x65, 0x72, 0x45, 0x63, 0x68, 0x6f, 0x45, 0x63, 0x68, 0x6f, 0x20, 0x53, 0x68, 0x6f, 0x77,
		0x20, 0x38, 0x41, 0x6c, 0x65, 0x78, 0x61, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79,
		0x65, 0x72, 0x41, 0x6c, 0x65, 0x78, 0x61, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x6f, 0x41, 0x6d, 0x69,
		0x6e, 0x6f, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x37, 0x78, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x20, 0x37,
		0x78, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x37, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x20, 0x37, 0x41, 0x6d,
		0x6f, 0x69, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x37, 0x41,
		0x38, 0x36, 0x32, 0x57, 0x43, 0x4c, 0x45, 0x56, 0x45, 0x52, 0x20, 0x4a, 0x4f, 0x59, 0x20, 0x53,
		0x34, 0x30, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20, 0x4a, 0x6f, 0x79, 0x20, 0x53, 0x34, 0x30,
		0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20, 0x24, 0x31, 0x41, 0x6e, 0x64, 0x6f, 0x77, 0x6c, 0x41,
		0x6e, 0x67, 0x65, 0x6c, 0x63, 0x61, 0x72, 0x65, 0x46, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41,
		0x6e, 0x6b, 0x65, 0x72, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x20, 0x53, 0x6f, 0x75, 0x6e, 0x64,
		0x62, 0x61, 0x72, 0x41, 0x6e, 0x72, 0x79, 0x41, 0x6f, 0x63, 0x6f, 0x73, 0x41, 0x6f, 0x72, 0x6f,
		0x41, 0x6f, 0x73, 0x6f, 0x6e, 0x52, 0x31, 0x30, 0x24, 0x31, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x53, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x37, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x53, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x41, 0x70, 0x70,
		0x6c, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x6f, 0x64, 0x41, 0x69, 0x72, 0x50, 0x6c, 0x61, 0x79,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x31, 0x2c, 0x31, 0x77, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x31,
		0x2c, 0x32, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x32, 0x2c, 0x36, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
		0x20, 0x31, 0x20, 0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x32, 0x2c, 0x37, 0x57,
		0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x31, 0x20, 0x34, 0x32,
		0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x32, 0x2c, 0x33, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x32, 0x20, 0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x32, 0x2c, 0x34, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65,
		0x73, 0x20, 0x32, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65,
		0x72, 0x69, 0x65, 0x73, 0x20, 0x33, 0x20, 0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x33, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x20, 0x53, 0x45, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x53, 0x45, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65,
		0x72, 0x69, 0x65, 0x73, 0x20, 0x24, 0x31, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x24, 0x31, 0x20, 0x34, 0x34, 0x6d, 0x6d,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x37, 0x20, 0x34,
		0x31, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20,
		0x37, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x63, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30,
		0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30,
		0x2d, 0x32, 0x30, 0x31, 0x32, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36,
		0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29,
		0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x69,
		0x4d, 0x61, 0x63, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x38, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29,
		0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x69,
		0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29,
		0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x69,
		0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29,
		0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x69,
		0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x2d,
		0x32, 0x30, 0x31, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x32, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x34, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x35, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x37, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x30, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x2d, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61,
		0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30,
		0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x32,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x31, 0x32, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x28, 0x32, 0x30, 0x30,
		0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61,
		0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69,
		0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x34,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x2d, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x2d, 0x32, 0x30, 0x31, 0x33, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x32, 0x2d, 0x32, 0x30, 0x31, 0x33, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31,
		0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x2d, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x38, 0x2d, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x36, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x36, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x30, 0x29, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x63, 0x69, 0x6e, 0x74, 0x6f, 0x73,
		0x68, 0x20, 0x47, 0x35, 0x20, 0x28, 0x32, 0x30, 0x30, 0x33, 0x29, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x4d, 0x61, 0x63, 0x69, 0x6e, 0x74, 0x6f, 0x73, 0x68, 0x20, 0x47, 0x35, 0x20, 0x28, 0x32,
		0x30, 0x30, 0x34, 0x2d, 0x32, 0x30, 0x30, 0x35, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x47, 0x35,
		0x20, 0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x47, 0x34, 0x20, 0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x47, 0x34, 0x20, 0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x69, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x47, 0x34, 0x20, 0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x33, 0x47, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x34, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x69, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x35, 0x43, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x53, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x36, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x73, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x53, 0x45, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x38, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x53, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x58, 0x52, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x53, 0x45, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x31, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x31, 0x32, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61,
		0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x45, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x34, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x34, 0x20, 0x50, 0x72,
		0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d,
		0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x34, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x31, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x35,
		0x69, 0x50, 0x61, 0x64, 0x69, 0x50, 0x61, 0x64, 0x20, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x33, 0x69, 0x50, 0x61, 0x64, 0x20, 0x34, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x35, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x20,
		0x31, 0x32, 0x2e, 0x39, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e,
		0x35, 0x69, 0x50, 0x61, 0x64, 0x20, 0x36, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x37, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32,
		0x20, 0x31, 0x31, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x31,
		0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x33, 0x20, 0x31, 0x31, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x20,
		0x31, 0x32, 0x2e, 0x39, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x20,
		0x31, 0x31, 0x2e, 0x30, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x31,
		0x32, 0x2e, 0x39, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x35, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x33, 0x69, 0x50, 0x61, 0x64, 0x20, 0x38, 0x20, 0x31,
		0x30, 0x2e, 0x32, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x39, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x39, 0x20, 0x31, 0x30, 0x2e, 0x32,
		0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x31, 0x32, 0x2e, 0x39,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x35,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x35, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x34, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x34, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x36, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x36, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x32, 0x41, 0x70, 0x70,
		0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x33, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20,
		0x34, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x41, 0x70, 0x70, 0x6c,
		0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x41, 0x70,
		0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x69, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x69, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x75, 0x73, 0x41, 0x71,
		0x75, 0x61, 0x72, 0x69, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x2c, 0x20, 0x53, 0x74, 0x64, 0x2c,
		0x20, 0x45, 0x6c, 0x74, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x20, 0x53,
		0x74, 0x64, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x43,
		0x4d, 0x50, 0x20, 0x24, 0x31, 0x41, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x20, 0x35, 0x35, 0x20, 0x64,
		0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x35, 0x35, 0x20,
		0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x35, 0x30,
		0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x34, 0x47, 0x34, 0x30, 0x43, 0x20,
		0x54, 0x49, 0x76, 0x32, 0x34, 0x30, 0x63, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d,
		0x20, 0x76, 0x32, 0x34, 0x35, 0x42, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x34,
		0x35, 0x62, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x41, 0x43, 0x34, 0x35, 0x42,
		0x48, 0x45, 0x34, 0x35, 0x62, 0x20, 0x48, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x34, 0x35, 0x20, 0x4e,
		0x65, 0x6f, 0x6e, 0x58, 0x36, 0x37, 0x20, 0x35, 0x47, 0x31, 0x30, 0x31, 0x42, 0x20, 0x48, 0x65,
		0x6c, 0x69, 0x75, 0x6d, 0x20, 0x34, 0x47, 0x54, 0x39, 0x36, 0x20, 0x57, 0x49, 0x46, 0x49, 0x54,
		0x39, 0x36, 0x20, 0x57, 0x69, 0x46, 0x69, 0x35, 0x30, 0x42, 0x20, 0x48, 0x65, 0x6c, 0x69, 0x75,
		0x6d, 0x20, 0x34, 0x47, 0x38, 0x30, 0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x31, 0x30, 0x31,
		0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x20, 0x34, 0x47, 0x37, 0x30, 0x20, 0x41, 0x63, 0x63,
		0x65, 0x73, 0x73, 0x20, 0x33, 0x47, 0x41, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x20, 0x41, 0x63, 0x63,
		0x65, 0x73, 0x73, 0x20, 0x31, 0x30, 0x31, 0x20, 0x33, 0x47, 0x20, 0x56, 0x32, 0x31, 0x30, 0x31,
		0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x20, 0x33, 0x47, 0x20, 0x56, 0x32, 0x41, 0x43, 0x31,
		0x30, 0x31, 0x50, 0x4c, 0x33, 0x47, 0x56, 0x32, 0x31, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x61, 0x74,
		0x69, 0x6e, 0x75, 0x6d, 0x20, 0x33, 0x47, 0x20, 0x56, 0x32, 0x31, 0x30, 0x31, 0x73, 0x20, 0x4f,
		0x78, 0x79, 0x67, 0x65, 0x6e, 0x20, 0x41, 0x72, 0x64, 0x6f, 0x69, 0x7a, 0x31, 0x30, 0x31, 0x73,
		0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x54, 0x24, 0x31, 0x20, 0x34, 0x47, 0x43, 0x6f, 0x72,
		0x65, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x41, 0x72, 0x63,
		0x68, 0x6f, 0x73, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x67, 0x20, 0x76, 0x34, 0x43, 0x6f,
		0x72, 0x65, 0x20, 0x31, 0x30, 0x31, 0x20, 0x33, 0x47, 0x20, 0x56, 0x34, 0x43, 0x6f, 0x72, 0x65,
		0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x37, 0x53, 0x65, 0x6e,
		0x73, 0x65, 0x20, 0x31, 0x30, 0x31, 0x20, 0x58, 0x41, 0x72, 0x69, 0x61, 0x6e, 0x20, 0x53, 0x70,
		0x61, 0x63, 0x65, 0x31, 0x30, 0x30, 0x20, 0x53, 0x54, 0x31, 0x30, 0x30, 0x34, 0x50, 0x47, 0x31,
		0x30, 0x30, 0x38, 0x30, 0x20, 0x53, 0x53, 0x38, 0x30, 0x30, 0x33, 0x50, 0x47, 0x38, 0x30, 0x37,
		0x31, 0x20, 0x53, 0x54, 0x37, 0x30, 0x30, 0x32, 0x50, 0x47, 0x37, 0x31, 0x37, 0x30, 0x20, 0x53,
		0x54, 0x37, 0x30, 0x30, 0x31, 0x52, 0x57, 0x37, 0x30, 0x41, 0x72, 0x6b, 0x42, 0x65, 0x6e, 0x65,
		0x66, 0x69, 0x74, 0x20, 0x24, 0x31, 0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x50, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x24, 0x31, 0x45,
		0x64, 0x67, 0x65, 0x20, 0x24, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x57, 0x69, 0x7a,
		0x61, 0x72, 0x64, 0x20, 0x24, 0x31, 0x45, 0x6c, 0x66, 0x20, 0x53, 0x38, 0x55, 0x6b, 0x6f, 0x7a,
		0x69, 0x20, 0x55, 0x24, 0x31, 0x48, 0x65, 0x72, 0x63, 0x6c, 0x73, 0x20, 0x4c, 0x39, 0x32, 0x35,
		0x41, 0x72, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x72, 0x6e, 0x6f, 0x76, 0x61, 0x41, 0x52,
		0x43, 0x48, 0x4d, 0x39, 0x30, 0x31, 0x4d, 0x39, 0x30, 0x31, 0x41, 0x4e, 0x37, 0x43, 0x47, 0x32,
		0x37, 0x63, 0x20, 0x47, 0x32, 0x37, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x37, 0x47, 0x33, 0x37, 0x20,
		0x47, 0x33, 0x41, 0x4e, 0x37, 0x49, 0x47, 0x33, 0x37, 0x69, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37,
		0x42, 0x47, 0x33, 0x37, 0x62, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x43, 0x47, 0x33, 0x37, 0x63,
		0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x44, 0x47, 0x33, 0x2d, 0x43, 0x50, 0x43, 0x68, 0x69, 0x6c,
		0x64, 0x70, 0x61, 0x64, 0x41, 0x4e, 0x37, 0x44, 0x47, 0x33, 0x37, 0x64, 0x20, 0x47, 0x33, 0x41,
		0x4e, 0x37, 0x46, 0x47, 0x33, 0x37, 0x66, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x48, 0x47, 0x33,
		0x37, 0x68, 0x20, 0x47, 0x33, 0x41, 0x38, 0x30, 0x4b, 0x53, 0x43, 0x38, 0x41, 0x4e, 0x38, 0x47,
		0x32, 0x38, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x38, 0x47, 0x33, 0x38, 0x20, 0x47, 0x33, 0x41, 0x4e,
		0x38, 0x42, 0x47, 0x33, 0x38, 0x62, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x38, 0x43, 0x47, 0x33, 0x38,
		0x63, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x39, 0x47, 0x32, 0x49, 0x39, 0x69, 0x20, 0x47, 0x32, 0x41,
		0x4e, 0x39, 0x47, 0x32, 0x39, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x39, 0x47, 0x33, 0x39, 0x20, 0x47,
		0x33, 0x31, 0x30, 0x20, 0x47, 0x32, 0x41, 0x31, 0x30, 0x31, 0x42, 0x31, 0x30, 0x31, 0x30, 0x62,
		0x20, 0x47, 0x32, 0x31, 0x30, 0x62, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x31, 0x30, 0x43, 0x47, 0x33,
		0x31, 0x30, 0x63, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x31, 0x30, 0x44, 0x47, 0x33, 0x31, 0x30, 0x64,
		0x20, 0x47, 0x33, 0x41, 0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x39, 0x30, 0x47, 0x33, 0x39, 0x30,
		0x20, 0x47, 0x33, 0x41, 0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x39, 0x30, 0x20, 0x47, 0x34, 0x39,
		0x30, 0x20, 0x47, 0x34, 0x41, 0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x39, 0x37, 0x47, 0x34, 0x39,
		0x37, 0x20, 0x47, 0x34, 0x41, 0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x31, 0x30, 0x31, 0x20, 0x47,
		0x34, 0x31, 0x30, 0x31, 0x20, 0x47, 0x34, 0x41, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x41, 0x72,
		0x74, 0x65, 0x6c, 0x47, 0x61, 0x70, 0x20, 0x59, 0x6f, 0x20, 0x51, 0x55, 0x31, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x55, 0x33, 0x20, 0x34, 0x47, 0x55, 0x24, 0x31, 0x41, 0x6c, 0x6c, 0x6f, 0x4b, 0x6f,
		0x6d, 0x69, 0x20, 0x33, 0x51, 0x32, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x32, 0x31, 0x41, 0x72,
		0x74, 0x69, 0x7a, 0x6c, 0x65, 0x65, 0x41, 0x54, 0x4c, 0x2d, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x39, 0x41, 0x73, 0x61, 0x6e, 0x6f, 0x24, 0x31, 0x24, 0x32, 0x20, 0x24, 0x31, 0x2e,
		0x30, 0x22, 0x41, 0x73, 0x61, 0x6e, 0x7a, 0x6f, 0x53, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x73, 0x6b, 0x37, 0x39, 0x31, 0x53, 0x50, 0x20, 0x33, 0x47, 0x41, 0x73, 0x70, 0x65, 0x72, 0x61,
		0x57, 0x72, 0x65, 0x6e, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x32, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
		0x61, 0x6e, 0x74, 0x41, 0x73, 0x70, 0x65, 0x72, 0x41, 0x67, 0x69, 0x6f, 0x43, 0x6c, 0x75, 0x62,
		0x41, 0x53, 0x2d, 0x36, 0x30, 0x31, 0x4c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x61, 0x78,
		0x20, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x75, 0x72, 0x66, 0x55, 0x6e, 0x61, 0x6d, 0x69,
		0x50, 0x72, 0x69, 0x6d, 0x61, 0x53, 0x68, 0x6f, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53,
		0x68, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x69, 0x64, 0x52, 0x69, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x78,
		0x20, 0x52, 0x69, 0x74, 0x6d, 0x41, 0x53, 0x2d, 0x35, 0x34, 0x31, 0x32, 0x20, 0x4d, 0x61, 0x78,
		0x41, 0x50, 0x2d, 0x37, 0x32, 0x31, 0x4e, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x50, 0x2d,
		0x39, 0x34, 0x31, 0x43, 0x65, 0x74, 0x75, 0x73, 0x41, 0x50, 0x2d, 0x31, 0x30, 0x36, 0x20, 0x46,
		0x6f, 0x72, 0x63, 0x65, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x41, 0x73, 0x75, 0x73, 0x58, 0x50, 0x61,
		0x64, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x65, 0x65, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x31, 0x37, 0x31, 0x5a, 0x39, 0x30, 0x36, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x4d, 0x45, 0x31, 0x37, 0x32, 0x56, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64,
		0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x48, 0x44, 0x20, 0x31, 0x30, 0x4d,
		0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x48, 0x44, 0x20, 0x31, 0x30, 0x20, 0x4c,
		0x54, 0x45, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x31, 0x30, 0x5a, 0x31, 0x30, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x5a, 0x31, 0x30,
		0x31, 0x58, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x65, 0x4d,
		0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x31, 0x30, 0x20, 0x4d, 0x45, 0x31, 0x30, 0x33, 0x4b, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x48, 0x44, 0x20, 0x37, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38,
		0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x39, 0x4d, 0x65, 0x4d, 0x4f,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x48, 0x44, 0x20, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53,
		0x49, 0x4d, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x54, 0x72, 0x61,
		0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x37,
		0x30, 0x31, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x54, 0x46, 0x31, 0x30, 0x33, 0x43, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
		0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x31, 0x30, 0x33, 0x43, 0x47,
		0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x54, 0x46, 0x33, 0x30, 0x30, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65,
		0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x33, 0x30, 0x33, 0x4b, 0x54, 0x72, 0x61, 0x6e,
		0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x54, 0x72, 0x69,
		0x6f, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x20, 0x53, 0x4c, 0x31, 0x30, 0x31, 0x45, 0x65, 0x65,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x20, 0x53, 0x4c, 0x31, 0x30,
		0x31, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x43, 0x20, 0x37, 0x2e, 0x30, 0x50, 0x30, 0x30,
		0x38, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x5a, 0x38,
		0x50, 0x30, 0x30, 0x31, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x5a, 0x31, 0x30, 0x5a, 0x65,
		0x6e, 0x50, 0x61, 0x64, 0x20, 0x5a, 0x38, 0x73, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x37,
		0x2e, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x5a, 0x65, 0x6e, 0x50,
		0x61, 0x64, 0x20, 0x53, 0x20, 0x38, 0x2e, 0x30, 0x50, 0x30, 0x32, 0x37, 0x5a, 0x65, 0x6e, 0x50,
		0x61, 0x64, 0x20, 0x33, 0x53, 0x20, 0x31, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x33,
		0x53, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x33,
		0x20, 0x38, 0x2e, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x41, 0x53, 0x55,
		0x53, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x50, 0x31, 0x38, 0x30, 0x31, 0x2d, 0x54,
		0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x69, 0x4f, 0x20,
		0x50, 0x31, 0x38, 0x30, 0x31, 0x20, 0x31, 0x38, 0x2e, 0x34, 0x22, 0x41, 0x53, 0x55, 0x53, 0x20,
		0x54, 0x41, 0x42, 0x20, 0x41, 0x38, 0x54, 0x41, 0x42, 0x20, 0x41, 0x38, 0x46, 0x6f, 0x6e, 0x65,
		0x70, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x36, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x37, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61,
		0x64, 0x20, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x46, 0x6f, 0x6e, 0x65,
		0x70, 0x61, 0x64, 0x20, 0x38, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78,
		0x20, 0x53, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x50, 0x61,
		0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x58, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x54, 0x30, 0x30, 0x38, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x45, 0x50, 0x61, 0x64,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x54, 0x30, 0x30, 0x34, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x41, 0x52, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x38, 0x5a, 0x65, 0x6e, 0x46,
		0x6f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x39, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x56, 0x5a, 0x65, 0x6e, 0x46,
		0x6f, 0x6e, 0x65, 0x20, 0x56, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x43, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4d,
		0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x4d, 0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4d,
		0x32, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x32, 0x45, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x76, 0x65,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x20, 0x4c, 0x31, 0x47,
		0x35, 0x35, 0x33, 0x4b, 0x4c, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x4c, 0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x61,
		0x73, 0x65, 0x72, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x5a, 0x65, 0x6e, 0x46,
		0x6f, 0x6e, 0x65, 0x20, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35,
		0x5a, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x36, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x4d, 0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x32, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x47, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x47, 0x6f, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x20, 0x54, 0x56, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x20, 0x35, 0x30, 0x30,
		0x30, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73,
		0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50,
		0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x20, 0x33, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x33, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x33, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x33, 0x20, 0x44, 0x65, 0x6c, 0x75, 0x78, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x50,
		0x72, 0x6f, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x53, 0x65, 0x6c, 0x66,
		0x69, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x52, 0x4f,
		0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x35, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x52,
		0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x44, 0x52, 0x4f, 0x47, 0x20, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x5a, 0x4e, 0x32, 0x32, 0x30, 0x49, 0x43, 0x5a, 0x65, 0x6e,
		0x20, 0x41, 0x69, 0x4f, 0x20, 0x5a, 0x4e, 0x32, 0x32, 0x30, 0x49, 0x43, 0x54, 0x69, 0x6e, 0x6b,
		0x65, 0x72, 0x20, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x24, 0x31, 0x5a, 0x65, 0x6e, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x24, 0x31, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20,
		0x24, 0x31, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x6c, 0x69,
		0x70, 0x20, 0x24, 0x31, 0x41, 0x74, 0x68, 0x65, 0x73, 0x69, 0x41, 0x74, 0x6d, 0x61, 0x63, 0x61,
		0x20, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x6b, 0x41, 0x54, 0x4d, 0x41, 0x43,
		0x41, 0x5f, 0x41, 0x74, 0x6f, 0x6d, 0x41, 0x74, 0x74, 0x69, 0x6c, 0x61, 0x41, 0x74, 0x76, 0x69,
		0x6f, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x76, 0x6f, 0x78, 0x43, 0x44, 0x4d, 0x2d, 0x24, 0x31, 0x41,
		0x75, 0x74, 0x61, 0x6e, 0x41, 0x76, 0x61, 0x79, 0x61, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65,
		0x20, 0x4b, 0x31, 0x37, 0x35, 0x41, 0x76, 0x65, 0x6e, 0x7a, 0x6f, 0x4d, 0x6f, 0x62, 0x20, 0x34,
		0x20, 0x34, 0x47, 0x4d, 0x6f, 0x62, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x41,
		0x76, 0x76, 0x69, 0x6f, 0x43, 0x48, 0x49, 0x56, 0x41, 0x53, 0x5f, 0x35, 0x35, 0x43, 0x68, 0x69,
		0x76, 0x61, 0x73, 0x20, 0x35, 0x35, 0x4d, 0x69, 0x6e, 0x74, 0x5f, 0x4d, 0x33, 0x35, 0x33, 0x4d,
		0x69, 0x6e, 0x74, 0x20, 0x4d, 0x33, 0x35, 0x33, 0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x69, 0x61,
		0x5f, 0x32, 0x30, 0x31, 0x38, 0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x69, 0x61, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x50, 0x41, 0x44, 0x41, 0x77, 0x6f, 0x77, 0x41, 0x78, 0x69, 0x6f, 0x6f,
		0x50, 0x69, 0x63, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x50, 0x49, 0x43, 0x4f,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x4d, 0x32, 0x50, 0x69, 0x63, 0x6f, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x4d, 0x32, 0x20, 0x4d, 0x50, 0x69, 0x63, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31,
		0x20, 0x33, 0x47, 0x41, 0x78, 0x78, 0x69, 0x6f, 0x6e, 0x41, 0x54, 0x41, 0x42, 0x2d, 0x24, 0x31,
		0x41, 0x7a, 0x75, 0x6d, 0x69, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x6b, 0x61, 0x6e,
		0x65, 0x41, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x50, 0x45, 0x45, 0x44, 0x35, 0x35, 0x53,
		0x70, 0x65, 0x65, 0x64, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x41, 0x35, 0x30, 0x5f, 0x53, 0x74, 0x79,
		0x6c, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35, 0x30, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x52, 0x4f, 0x20, 0x41, 0x35, 0x35, 0x20, 0x51, 0x4c, 0x54,
		0x35, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x49, 0x52, 0x45, 0x49, 0x20, 0x41, 0x35, 0x51,
		0x20, 0x50, 0x4c, 0x55, 0x53, 0x4b, 0x69, 0x72, 0x65, 0x69, 0x20, 0x41, 0x35, 0x51, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x62, 0x75, 0x20, 0x41, 0x35, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x42,
		0x41, 0x46, 0x46, 0x24, 0x31, 0x59, 0x20, 0x46, 0x48, 0x44, 0x24, 0x31, 0x59, 0x20, 0x24, 0x32,
		0x42, 0x41, 0x52, 0x54, 0x45, 0x43, 0x50, 0x69, 0x78, 0x61, 0x76, 0x69, 0x50, 0x69, 0x78, 0x61,
		0x76, 0x69, 0x20, 0x24, 0x31, 0x42, 0x41, 0x53, 0x45, 0x42, 0x42, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x50, 0x69,
		0x6f, 0x6e, 0x65, 0x65, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x53, 0x37, 0x30, 0x30, 0x42, 0x46,
		0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x20, 0x54, 0x51, 0x30, 0x36, 0x30, 0x58, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x54, 0x51,
		0x38, 0x36, 0x33, 0x51, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20,
		0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x49, 0x37, 0x30, 0x30, 0x41, 0x4a, 0x54,
		0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67,
		0x20, 0x49, 0x37, 0x38, 0x35, 0x41, 0x50, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x58, 0x38, 0x30, 0x30, 0x42, 0x4a, 0x54, 0x65,
		0x63, 0x68, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20,
		0x49, 0x31, 0x30, 0x31, 0x42, 0x49, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x20, 0x4b, 0x61, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x54, 0x51, 0x37,
		0x36, 0x33, 0x49, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x24, 0x31, 0x22, 0x20, 0x33, 0x47,
		0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x47, 0x20,
		0x58, 0x35, 0x39, 0x35, 0x42, 0x54, 0x42, 0x42, 0x4b, 0x24, 0x31, 0x4c, 0x45, 0x58, 0x2d, 0x24,
		0x32, 0x2f, 0x24, 0x33, 0x24, 0x31, 0x4c, 0x45, 0x58, 0x2d, 0x37, 0x32, 0x38, 0x39, 0x2f, 0x54,
		0x53, 0x32, 0x43, 0x24, 0x31, 0x4c, 0x45, 0x58, 0x2d, 0x24, 0x32, 0x42, 0x44, 0x46, 0x4d, 0x31,
		0x30, 0x37, 0x5a, 0x4c, 0x38, 0x30, 0x42, 0x4b, 0x39, 0x36, 0x30, 0x4e, 0x20, 0x4d, 0x54, 0x24,
		0x31, 0x42, 0x44, 0x51, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x31, 0x39, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x42, 0x31, 0x39, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x79, 0x42, 0x44, 0x73,
		0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x44, 0x53, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42,
		0x47, 0x48, 0x59, 0x24, 0x31, 0x59, 0x37, 0x31, 0x30, 0x20, 0x4b, 0x49, 0x44, 0x53, 0x59, 0x37,
		0x31, 0x30, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x4a, 0x4f, 0x59, 0x20, 0x58, 0x32, 0x4a, 0x6f, 0x79,
		0x20, 0x58, 0x32, 0x42, 0x49, 0x48, 0x45, 0x45, 0x42, 0x4c, 0x49, 0x53, 0x53, 0x42, 0x4d, 0x41,
		0x58, 0x4d, 0x61, 0x78, 0x50, 0x61, 0x64, 0x20, 0x49, 0x31, 0x30, 0x20, 0x24, 0x31, 0x4d, 0x61,
		0x78, 0x50, 0x61, 0x64, 0x20, 0x49, 0x31, 0x31, 0x42, 0x4d, 0x58, 0x43, 0x42, 0x52, 0x41, 0x56,
		0x45, 0x42, 0x52, 0x4f, 0x52, 0x42, 0x53, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x52, 0x75,
		0x6e, 0x65, 0x20, 0x24, 0x31, 0x42, 0x61, 0x63, 0x6b, 0x63, 0x65, 0x6c, 0x6c, 0x42, 0x61, 0x72,
		0x6e, 0x65, 0x73, 0x20, 0x26, 0x20, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x6f, 0x6b, 0x20,
		0x24, 0x31, 0x42, 0x65, 0x61, 0x66, 0x6f, 0x6e, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x24, 0x31, 0x42, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x65,
		0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x61, 0x62, 0x45,
		0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x46, 0x61, 0x73, 0x74, 0x20, 0x32, 0x46, 0x61, 0x73, 0x74, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x38, 0x20, 0x41, 0x32, 0x33, 0x39, 0x73, 0x42, 0x65, 0x65, 0x62, 0x6f,
		0x78, 0x20, 0x24, 0x31, 0x42, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x47, 0x54, 0x31, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x47, 0x54, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x47, 0x54, 0x20,
		0x4b, 0x69, 0x6e, 0x67, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x54, 0x20, 0x4b, 0x69, 0x6e, 0x67, 0x52,
		0x36, 0x38, 0x20, 0x49, 0x49, 0x42, 0x65, 0x65, 0x74, 0x65, 0x6c, 0x42, 0x65, 0x69, 0x73, 0x74,
		0x61, 0x42, 0x65, 0x6c, 0x6c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x50, 0x20, 0x31, 0x30, 0x30,
		0x20, 0x58, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x65, 0x6e, 0x51, 0x42, 0x65, 0x6e, 0x51, 0x2d,
		0x53, 0x69, 0x65, 0x6d, 0x65, 0x6e, 0x73, 0x42, 0x65, 0x6e, 0x57, 0x65, 0x65, 0x57, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x42, 0x65, 0x6e, 0x63, 0x6f, 0x41, 0x45, 0x39, 0x39, 0x35, 0x30, 0x56, 0x36,
		0x30, 0x41, 0x45, 0x39, 0x30, 0x31, 0x30, 0x56, 0x38, 0x30, 0x41, 0x48, 0x39, 0x31, 0x31, 0x30,
		0x59, 0x31, 0x31, 0x42, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x65, 0x42, 0x65, 0x6e, 0x7a, 0x6f, 0x47,
		0x2d, 0x50, 0x41, 0x44, 0x4c, 0x49, 0x54, 0x45, 0x47, 0x50, 0x61, 0x64, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x42, 0x65, 0x79, 0x6f, 0x6e, 0x64, 0x53, 0x75, 0x72, 0x76, 0x65, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x75, 0x72, 0x76, 0x65, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x6d, 0x65, 0x39,
		0x48, 0x6f, 0x6d, 0x65, 0x20, 0x39, 0x42, 0x65, 0x7a, 0x6b, 0x61, 0x6d, 0x42, 0x69, 0x67, 0x62,
		0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x2d, 0x4f, 0x6e, 0x65, 0x42, 0x69, 0x6c,
		0x69, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x69, 0x6c, 0x69, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x70, 0x74, 0x75,
		0x72, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x69, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x69, 0x6f,
		0x52, 0x75, 0x67, 0x67, 0x65, 0x64, 0x42, 0x69, 0x6f, 0x57, 0x6f, 0x6c, 0x66, 0x20, 0x38, 0x2d,
		0x46, 0x33, 0x30, 0x52, 0x75, 0x67, 0x67, 0x62, 0x6f, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x42, 0x69, 0x72, 0x64, 0x42, 0x69, 0x74, 0x65, 0x6c, 0x42, 0x20, 0x50, 0x72, 0x6f, 0x42,
		0x69, 0x74, 0x6d, 0x6f, 0x72, 0x65, 0x24, 0x31, 0x20, 0x24, 0x32, 0x43, 0x20, 0x33, 0x47, 0x54,
		0x61, 0x62, 0x31, 0x30, 0x31, 0x31, 0x51, 0x20, 0x49, 0x49, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54,
		0x61, 0x62, 0x20, 0x24, 0x31, 0x42, 0x69, 0x74, 0x74, 0x69, 0x75, 0x6d, 0x54, 0x6f, 0x75, 0x67,
		0x68, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x32, 0x42, 0x6b, 0x61, 0x76, 0x42, 0x70,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x42, 0x65, 0x61,
		0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x46, 0x6f, 0x78, 0x42, 0x4d, 0x4d, 0x34, 0x34, 0x33,
		0x44, 0x42, 0x37, 0x20, 0x46, 0x6f, 0x78, 0x2b, 0x42, 0x38, 0x20, 0x46, 0x6f, 0x78, 0x42, 0x38,
		0x20, 0x46, 0x6f, 0x78, 0x2b, 0x42, 0x4d, 0x4d, 0x34, 0x34, 0x31, 0x57, 0x42, 0x38, 0x4d, 0x42,
		0x4d, 0x4d, 0x34, 0x34, 0x32, 0x44, 0x42, 0x37, 0x42, 0x4d, 0x4d, 0x35, 0x33, 0x31, 0x44, 0x42,
		0x36, 0x42, 0x4d, 0x4d, 0x35, 0x33, 0x31, 0x41, 0x42, 0x35, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31,
		0x41, 0x42, 0x35, 0x2b, 0x42, 0x34, 0x42, 0x4d, 0x4d, 0x34, 0x34, 0x31, 0x44, 0x42, 0x34, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31, 0x42, 0x42, 0x34, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x4e, 0x46, 0x43, 0x42, 0x4d, 0x4d, 0x35, 0x33, 0x31, 0x42, 0x42, 0x34, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x42, 0x4d, 0x4d, 0x35, 0x34,
		0x32, 0x44, 0x42, 0x33, 0x2b, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31, 0x44, 0x42, 0x33, 0x42, 0x4d,
		0x4d, 0x35, 0x34, 0x31, 0x57, 0x42, 0x37, 0x52, 0x20, 0x46, 0x6f, 0x78, 0x42, 0x4d, 0x4d, 0x20,
		0x35, 0x33, 0x32, 0x20, 0x53, 0x42, 0x4d, 0x4d, 0x20, 0x35, 0x33, 0x32, 0x53, 0x42, 0x4d, 0x4d,
		0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x70, 0x63, 0x73, 0x24, 0x31, 0x2d, 0x42, 0x4c,
		0x42, 0x6c, 0x61, 0x63, 0x6b, 0x76, 0x69, 0x65, 0x77, 0x41, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x41, 0x24, 0x31, 0x41, 0x38, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x38, 0x30, 0x53, 0x41, 0x33, 0x30,
		0x2d, 0x52, 0x55, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x56, 0x39, 0x30, 0x30, 0x30,
		0x50, 0x72, 0x6f, 0x2d, 0x46, 0x42, 0x56, 0x39, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4f, 0x4c, 0x49, 0x44, 0x5f, 0x34, 0x47, 0x31, 0x53, 0x6f,
		0x6c, 0x69, 0x64, 0x2d, 0x34, 0x20, 0x47, 0x31, 0x53, 0x4f, 0x4c, 0x49, 0x44, 0x20, 0x34, 0x20,
		0x47, 0x32, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x2d, 0x34, 0x20, 0x47, 0x32, 0x54, 0x61, 0x62, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x31, 0x31, 0x20, 0x53, 0x45, 0x4f,
		0x6d, 0x65, 0x67, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x75, 0x70, 0x75, 0x6e, 0x6b,
		0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x24, 0x31, 0x43, 0x44, 0x69,
		0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x41, 0x31, 0x30, 0x2e, 0x33, 0x30, 0x32, 0x44,
		0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x31, 0x30, 0x30, 0x31, 0x41, 0x44, 0x69,
		0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x31, 0x30, 0x30, 0x31, 0x53, 0x6f, 0x75, 0x6e,
		0x64, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x32, 0x45, 0x6e, 0x64, 0x65, 0x61, 0x76, 0x6f,
		0x75, 0x72, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x41,
		0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x73, 0x5f, 0x41, 0x31, 0x30, 0x5f, 0x47, 0x34, 0x30, 0x33,
		0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x73, 0x20, 0x41, 0x31, 0x30, 0x2e, 0x47, 0x34, 0x30,
		0x33, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x73, 0x20, 0x24, 0x31, 0x53, 0x4c, 0x70, 0x6c,
		0x75, 0x73, 0x30, 0x32, 0x53, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x30, 0x32, 0x42, 0x50,
		0x20, 0x24, 0x31, 0x53, 0x4d, 0x20, 0x30, 0x32, 0x20, 0x32, 0x30, 0x31, 0x39, 0x53, 0x4d, 0x20,
		0x30, 0x32, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x42, 0x2d, 0x53, 0x54, 0x52, 0x45, 0x41,
		0x4d, 0x42, 0x6f, 0x78, 0x20, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x45, 0x20, 0x24, 0x31,
		0x42, 0x4c, 0x2d, 0x39, 0x31, 0x39, 0x38, 0x34, 0x35, 0x42, 0x45, 0x20, 0x63, 0x6c, 0x65, 0x76,
		0x65, 0x72, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x42, 0x6c, 0x6c, 0x6f, 0x63, 0x42, 0x6c, 0x6f, 0x77,
		0x4c, 0x61, 0x73, 0x65, 0x72, 0x54, 0x41, 0x42, 0x31, 0x30, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x54, 0x61, 0x62, 0x37, 0x5f, 0x33, 0x47, 0x5f, 0x56, 0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x33, 0x47, 0x20, 0x56, 0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x54, 0x41,
		0x42, 0x37, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x47, 0x42, 0x6c,
		0x75, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x36, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x58, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x58, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x74,
		0x75, 0x64, 0x69, 0x6f, 0x20, 0x58, 0x31, 0x30, 0x20, 0x32, 0x30, 0x32, 0x32, 0x53, 0x74, 0x75,
		0x64, 0x69, 0x6f, 0x20, 0x58, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x53, 0x74,
		0x75, 0x64, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x35, 0x2e,
		0x30, 0x20, 0x4b, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x45,
		0x20, 0x4c, 0x54, 0x45, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69,
		0x65, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x4f, 0x4e, 0x45, 0x53,
		0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x4f, 0x6e, 0x65, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20,
		0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x45, 0x6e, 0x65,
		0x72, 0x67, 0x79, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65,
		0x20, 0x24, 0x31, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x45,
		0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x4e, 0x65, 0x6f,
		0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x45,
		0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x44, 0x49, 0x41, 0x4d, 0x4f, 0x4e, 0x44, 0x45, 0x6e, 0x65,
		0x72, 0x67, 0x79, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x44, 0x49, 0x41, 0x4d, 0x4f,
		0x4e, 0x44, 0x20, 0x4d, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x4d, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20,
		0x58, 0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67,
		0x79, 0x20, 0x58, 0x20, 0x32, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x58, 0x20, 0x50, 0x4c,
		0x55, 0x53, 0x20, 0x32, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x32, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53,
		0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x49, 0x46,
		0x45, 0x20, 0x58, 0x4c, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x58, 0x4c, 0x44, 0x61, 0x73, 0x68, 0x20,
		0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x44, 0x41, 0x53, 0x48, 0x20, 0x58,
		0x20, 0x50, 0x4c, 0x55, 0x53, 0x44, 0x61, 0x73, 0x68, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x44, 0x61, 0x73, 0x68, 0x20, 0x34, 0x2e, 0x35, 0x44, 0x61, 0x73, 0x68, 0x20, 0x58, 0x4c, 0x50,
		0x75, 0x72, 0x65, 0x20, 0x24, 0x31, 0x50, 0x55, 0x52, 0x45, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x50,
		0x75, 0x72, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x6f, 0x6c, 0x64, 0x20, 0x24, 0x31, 0x4c,
		0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4c,
		0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x4f,
		0x4e, 0x45, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x58,
		0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x49,
		0x46, 0x45, 0x20, 0x58, 0x38, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x58, 0x38, 0x4c, 0x49, 0x46, 0x45,
		0x20, 0x4d, 0x41, 0x52, 0x4b, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x61, 0x72, 0x6b, 0x4e, 0x45,
		0x4f, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4e, 0x65, 0x6f, 0x20, 0x58, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4e, 0x65, 0x6f, 0x20, 0x24, 0x31, 0x47, 0x35, 0x30, 0x20, 0x4d, 0x65, 0x67, 0x61,
		0x47, 0x35, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x35, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x47, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x39, 0x31, 0x20, 0x50, 0x52, 0x4f, 0x47, 0x39,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x48,
		0x44, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x61, 0x6e,
		0x64, 0x20, 0x58, 0x4c, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x32,
		0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x24, 0x31, 0x47, 0x72, 0x61, 0x6e,
		0x64, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47,
		0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x33, 0x42, 0x31, 0x31, 0x30, 0x44, 0x4c, 0x56, 0x69, 0x65,
		0x77, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x42, 0x31, 0x34, 0x30,
		0x44, 0x4c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x56, 0x49, 0x45, 0x57, 0x20, 0x31, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x31, 0x52, 0x31, 0x20, 0x48, 0x44, 0x52, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x52,
		0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x24, 0x31, 0x20, 0x28, 0x32, 0x30, 0x24, 0x32,
		0x29, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x24, 0x31, 0x2e,
		0x30, 0x22, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x72,
		0x6f, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x56, 0x49, 0x56, 0x4f,
		0x20, 0x41, 0x49, 0x52, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x4c, 0x54, 0x45, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x37,
		0x43, 0x24, 0x31, 0x4c, 0x20, 0x28, 0x32, 0x30, 0x24, 0x32, 0x29, 0x43, 0x35, 0x4c, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x43, 0x35, 0x4c, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x24, 0x31, 0x4c, 0x56, 0x69,
		0x76, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x35, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x32, 0x30, 0x31, 0x39, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x56, 0x69, 0x76,
		0x6f, 0x20, 0x47, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x4d, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x4d, 0x24, 0x31, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x24, 0x31,
		0x4c, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x38, 0x4c, 0x20, 0x28, 0x24, 0x31, 0x29, 0x53, 0x74, 0x75,
		0x64, 0x69, 0x6f, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x49, 0x49, 0x44, 0x61, 0x73, 0x68, 0x20,
		0x24, 0x31, 0x42, 0x6c, 0x75, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74,
		0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x42,
		0x6c, 0x75, 0x62, 0x6f, 0x6f, 0x4d, 0x61, 0x79, 0x61, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4d,
		0x61, 0x79, 0x61, 0x58, 0x66, 0x69, 0x72, 0x65, 0x32, 0x58, 0x66, 0x69, 0x72, 0x65, 0x20, 0x32,
		0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x34, 0x47, 0x58, 0x66, 0x69, 0x72, 0x65, 0x44,
		0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x38, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x61, 0x53,
		0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x53, 0x38, 0x61, 0x53, 0x38, 0x61, 0x44, 0x24, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x44, 0x36, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x6b, 0x79, 0x42, 0x53, 0x53,
		0x24, 0x31, 0x42, 0x6c, 0x75, 0x65, 0x62, 0x69, 0x72, 0x64, 0x42, 0x6c, 0x75, 0x65, 0x64, 0x6f,
		0x74, 0x42, 0x6c, 0x75, 0x65, 0x67, 0x6f, 0x6f, 0x64, 0x42, 0x4c, 0x55, 0x45, 0x47, 0x4f, 0x4f,
		0x44, 0x56, 0x36, 0x42, 0x6c, 0x75, 0x65, 0x77, 0x61, 0x76, 0x65, 0x33, 0x33, 0x47, 0x54, 0x20,
		0x48, 0x44, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x20, 0x48, 0x44, 0x2b, 0x57, 0x56, 0x38, 0x52,
		0x2d, 0x4d, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x20, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x72,
		0x73, 0x68, 0x6d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x56, 0x38, 0x2d, 0x4d, 0x57, 0x61, 0x76,
		0x65, 0x20, 0x38, 0x57, 0x56, 0x38, 0x2d, 0x4c, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x20, 0x52,
		0x65, 0x64, 0x20, 0x4e, 0x6f, 0x75, 0x67, 0x61, 0x74, 0x42, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x41, 0x58, 0x37, 0x4f, 0x4f, 0x41, 0x58, 0x37, 0x30, 0x30, 0x46, 0x55, 0x4e, 0x20, 0x34, 0x20,
		0x32, 0x30, 0x31, 0x38, 0x46, 0x75, 0x6e, 0x20, 0x34, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x42, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x36, 0x30, 0x42, 0x4c, 0x36, 0x30, 0x4d,
		0x5f, 0x4d, 0x56, 0x30, 0x35, 0x42, 0x4c, 0x36, 0x30, 0x4d, 0x42, 0x35, 0x30, 0x50, 0x72, 0x6f,
		0x42, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42,
		0x4c, 0x24, 0x31, 0x42, 0x4c, 0x35, 0x31, 0x42, 0x4c, 0x35, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x42,
		0x6f, 0x62, 0x61, 0x72, 0x72, 0x79, 0x4b, 0x31, 0x30, 0x20, 0x53, 0x45, 0x42, 0x6f, 0x6c, 0x76,
		0x61, 0x42, 0x2d, 0x54, 0x41, 0x42, 0x31, 0x30, 0x32, 0x31, 0x42, 0x6f, 0x6f, 0x6b, 0x65, 0x65,
		0x6e, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x61, 0x50, 0x6c, 0x61, 0x79,
		0x53, 0x74, 0x72, 0x69, 0x6b, 0x61, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x42, 0x6f, 0x77, 0x61, 0x79,
		0x42, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x31, 0x66, 0x2d, 0x70, 0x6c, 0x75,
		0x73, 0x73, 0x4c, 0x31, 0x66, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x63,
		0x6f, 0x64, 0x65, 0x20, 0x42, 0x36, 0x53, 0x42, 0x36, 0x53, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x74,
		0x42, 0x72, 0x61, 0x76, 0x69, 0x73, 0x41, 0x35, 0x30, 0x31, 0x20, 0x42, 0x52, 0x49, 0x47, 0x48,
		0x54, 0x41, 0x35, 0x30, 0x31, 0x20, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x54, 0x72, 0x61, 0x63,
		0x65, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63,
		0x6f, 0x76, 0x65, 0x72, 0x79, 0x54, 0x61, 0x75, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x54, 0x72, 0x65,
		0x6e, 0x64, 0x42, 0x35, 0x30, 0x31, 0x45, 0x61, 0x73, 0x79, 0x4e, 0x31, 0x2d, 0x35, 0x37, 0x30,
		0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x35, 0x35, 0x34, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x53,
		0x35, 0x30, 0x30, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x41, 0x35, 0x30, 0x35, 0x20,
		0x4a, 0x4f, 0x59, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35, 0x30, 0x35, 0x20, 0x4a, 0x6f, 0x79,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35, 0x35, 0x32, 0x20, 0x4a, 0x4f, 0x59, 0x20, 0x4d, 0x61,
		0x78, 0x41, 0x35, 0x35, 0x32, 0x20, 0x4a, 0x6f, 0x79, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x74, 0x6c,
		0x61, 0x73, 0x20, 0x41, 0x35, 0x35, 0x31, 0x41, 0x35, 0x35, 0x31, 0x20, 0x41, 0x74, 0x6c, 0x61,
		0x73, 0x41, 0x35, 0x30, 0x33, 0x20, 0x4a, 0x6f, 0x79, 0x41, 0x35, 0x30, 0x34, 0x20, 0x54, 0x72,
		0x61, 0x63, 0x65, 0x41, 0x35, 0x31, 0x32, 0x20, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x20,
		0x50, 0x72, 0x6f, 0x41, 0x35, 0x31, 0x31, 0x20, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x41,
		0x35, 0x31, 0x30, 0x5f, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x5f, 0x34, 0x47, 0x41, 0x35, 0x31, 0x30,
		0x20, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x20, 0x34, 0x47, 0x41, 0x35, 0x30, 0x39, 0x5f, 0x4a, 0x65,
		0x61, 0x6e, 0x73, 0x41, 0x35, 0x30, 0x39, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x42, 0x52, 0x41,
		0x56, 0x49, 0x53, 0x20, 0x4e, 0x45, 0x4f, 0x41, 0x34, 0x30, 0x31, 0x20, 0x4e, 0x65, 0x6f, 0x4e,
		0x31, 0x5f, 0x35, 0x35, 0x30, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x72, 0x4e, 0x31, 0x2d,
		0x35, 0x35, 0x30, 0x20, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x72, 0x4e, 0x31, 0x5f, 0x35, 0x35,
		0x31, 0x20, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x4e, 0x31, 0x2d, 0x35, 0x35, 0x31, 0x20, 0x47, 0x6c,
		0x6f, 0x73, 0x73, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4f, 0x4d, 0x45, 0x47, 0x41, 0x4f,
		0x6d, 0x65, 0x67, 0x61, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x42, 0x49, 0x5a, 0x42, 0x69,
		0x7a, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x53, 0x6c, 0x69, 0x6d, 0x20, 0x33, 0x47, 0x4e, 0x50,
		0x20, 0x31, 0x30, 0x34, 0x20, 0x33, 0x47, 0x4e, 0x50, 0x31, 0x30, 0x34, 0x20, 0x33, 0x47, 0x42,
		0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4e, 0x50, 0x20, 0x31, 0x30, 0x33, 0x4e, 0x50, 0x31, 0x30,
		0x33, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4e, 0x50, 0x20, 0x38, 0x34, 0x34, 0x4e, 0x50,
		0x38, 0x34, 0x34, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x42, 0x72, 0x69,
		0x67, 0x6d, 0x74, 0x6f, 0x6e, 0x42, 0x54, 0x50, 0x43, 0x2d, 0x42, 0x54, 0x50, 0x43, 0x2d, 0x31,
		0x30, 0x32, 0x32, 0x51, 0x43, 0x33, 0x47, 0x2d, 0x54, 0x56, 0x42, 0x72, 0x6f, 0x6e, 0x64, 0x69,
		0x43, 0x45, 0x4e, 0x54, 0x55, 0x52, 0x49, 0x4f, 0x4e, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x41, 0x44,
		0x49, 0x41, 0x54, 0x4f, 0x52, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x4f, 0x52, 0x59, 0x20, 0x24, 0x31,
		0x4c, 0x55, 0x58, 0x55, 0x52, 0x59, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x64, 0x6e, 0x69, 0x67, 0x68,
		0x74, 0x20, 0x53, 0x6b, 0x79, 0x53, 0x45, 0x4e, 0x53, 0x55, 0x45, 0x4c, 0x4c, 0x45, 0x20, 0x24,
		0x31, 0x56, 0x49, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x20, 0x24, 0x31, 0x41, 0x4d, 0x49, 0x43, 0x4f,
		0x5f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x34, 0x47, 0x41, 0x6d,
		0x69, 0x63, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34,
		0x47, 0x41, 0x4d, 0x49, 0x43, 0x4f, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x50, 0x48, 0x4f, 0x4e,
		0x45, 0x20, 0x58, 0x4c, 0x41, 0x6d, 0x69, 0x63, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x4c, 0x53, 0x55, 0x52, 0x46, 0x49, 0x4e, 0x47, 0x20, 0x54,
		0x41, 0x42, 0x20, 0x24, 0x31, 0x42, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x67, 0x75, 0x6d, 0x42, 0x75,
		0x6e, 0x64, 0x79, 0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x24, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x42, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x42,
		0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x75, 0x73,
		0x68, 0x42, 0x75, 0x73, 0x68, 0x31, 0x30, 0x4e, 0x6f, 0x75, 0x31, 0x30, 0x4e, 0x6f, 0x75, 0x53,
		0x70, 0x69, 0x72, 0x61, 0x20, 0x42, 0x31, 0x20, 0x24, 0x31, 0x22, 0x24, 0x31, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x42, 0x55, 0x53, 0x48, 0x20, 0x53, 0x70, 0x69, 0x72, 0x61, 0x20, 0x42, 0x32,
		0x20, 0x35, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x70, 0x69,
		0x72, 0x61, 0x20, 0x42, 0x32, 0x20, 0x35, 0x22, 0x42, 0x75, 0x7a, 0x7a, 0x54, 0x56, 0x43, 0x35,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x6e, 0x6f, 0x61, 0x20, 0x58, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4e, 0x6f, 0x61, 0x20, 0x58, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6e, 0x6f, 0x61,
		0x5f, 0x47, 0x31, 0x4e, 0x6f, 0x61, 0x20, 0x47, 0x31, 0x6e, 0x6f, 0x61, 0x58, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x4e, 0x6f, 0x61, 0x20, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x4f, 0x41,
		0x54, 0x41, 0x42, 0x4e, 0x6f, 0x61, 0x20, 0x54, 0x61, 0x62, 0x43, 0x41, 0x47, 0x49, 0x43, 0x41,
		0x47, 0x49, 0x2d, 0x43, 0x41, 0x47, 0x49, 0x2d, 0x4f, 0x4d, 0x45, 0x47, 0x41, 0x43, 0x47, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x24, 0x31, 0x4f, 0x6d,
		0x65, 0x67, 0x61, 0x20, 0x36, 0x45, 0x4f, 0x4e, 0x20, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x50,
		0x72, 0x6f, 0x45, 0x4f, 0x4e, 0x20, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x47, 0x6f, 0x6c, 0x64,
		0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x43, 0x47, 0x56, 0x43, 0x4b, 0x4b, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x4d, 0x41, 0x58, 0x42, 0x6c, 0x75,
		0x65, 0x53, 0x31, 0x30, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x53, 0x31, 0x30, 0x43, 0x4f, 0x52, 0x4e,
		0x46, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x38, 0x20, 0x33, 0x47, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x52, 0x24, 0x31, 0x30, 0x54, 0x72, 0x6f, 0x6e, 0x69, 0x6b, 0x20, 0x24, 0x31, 0x58, 0x24, 0x31,
		0x43, 0x4f, 0x59, 0x4f, 0x54, 0x45, 0x31, 0x30, 0x39, 0x30, 0x20, 0x44, 0x56, 0x52, 0x20, 0x4d,
		0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x55, 0x42, 0x4f, 0x54, 0x50,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x68,
		0x65, 0x65, 0x74, 0x61, 0x68, 0x24, 0x31, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x20, 0x32,
		0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x20, 0x32, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57,
		0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x44, 0x49, 0x4e, 0x4f, 0x53, 0x41, 0x55, 0x52, 0x44,
		0x69, 0x6e, 0x6f, 0x73, 0x61, 0x75, 0x72, 0x4b, 0x49, 0x4e, 0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x20,
		0x50, 0x4f, 0x57, 0x45, 0x52, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x4b, 0x49, 0x4e, 0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x4d, 0x49, 0x4e,
		0x49, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b,
		0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x24, 0x31, 0x4b, 0x49, 0x4e, 0x47, 0x4b,
		0x4f, 0x4e, 0x47, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e,
		0x67, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x49, 0x4e, 0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x4b,
		0x49, 0x4e, 0x47, 0x20, 0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x43, 0x53, 0x4b, 0x69, 0x6e, 0x67, 0x20,
		0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x43, 0x53, 0x4b, 0x49, 0x4e, 0x47, 0x20, 0x4b, 0x4f, 0x4e, 0x47,
		0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x51, 0x55, 0x45, 0x53, 0x54, 0x20, 0x4c,
		0x49, 0x54, 0x45, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x55, 0x45,
		0x53, 0x54, 0x51, 0x75, 0x65, 0x73, 0x74, 0x5a, 0x4f, 0x52, 0x52, 0x4f, 0x20, 0x30, 0x30, 0x31,
		0x5a, 0x6f, 0x72, 0x72, 0x6f, 0x20, 0x30, 0x30, 0x31, 0x4d, 0x61, 0x6e, 0x69, 0x74, 0x6f, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x4d, 0x61, 0x78, 0x20, 0x24, 0x31, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x4f, 0x54, 0x45,
		0x20, 0x37, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x32, 0x30, 0x20,
		0x50, 0x52, 0x4f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x24, 0x31, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x53, 0x43, 0x55, 0x42, 0x4f, 0x54,
		0x5f, 0x4e, 0x4f, 0x56, 0x41, 0x4e, 0x6f, 0x76, 0x61, 0x43, 0x55, 0x42, 0x4f, 0x54, 0x5f, 0x50,
		0x4f, 0x57, 0x45, 0x52, 0x43, 0x55, 0x42, 0x4f, 0x54, 0x5f, 0x58, 0x31, 0x38, 0x5f, 0x50, 0x6c,
		0x75, 0x73, 0x58, 0x31, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x56, 0x54, 0x45, 0x43, 0x61,
		0x6d, 0x66, 0x6f, 0x6e, 0x65, 0x46, 0x75, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x20, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x43, 0x61, 0x6e, 0x61, 0x6c, 0x20, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x4f,
		0x6e, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x67, 0x75, 0x72, 0x6f, 0x43, 0x61,
		0x70, 0x69, 0x74, 0x65, 0x6c, 0x43, 0x61, 0x70, 0x74, 0x69, 0x76, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x24, 0x31, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x43,
		0x61, 0x72, 0x62, 0x6f, 0x6e, 0x20, 0x31, 0x20, 0x4d, 0x61, 0x72, 0x6b, 0x20, 0x49, 0x49, 0x4f,
		0x6e, 0x65, 0x20, 0x4d, 0x61, 0x72, 0x6b, 0x20, 0x49, 0x49, 0x43, 0x61, 0x72, 0x72, 0x65, 0x66,
		0x6f, 0x75, 0x72, 0x43, 0x54, 0x38, 0x32, 0x30, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x4e, 0x65, 0x6f, 0x32, 0x43, 0x54, 0x24, 0x31, 0x43, 0x61, 0x73,
		0x69, 0x6f, 0x47, 0x27, 0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x61, 0x76, 0x69, 0x6e, 0x65, 0x47,
		0x27, 0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x47, 0x27,
		0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x20, 0x34, 0x47,
		0x20, 0x4c, 0x54, 0x45, 0x43, 0x61, 0x73, 0x70, 0x65, 0x72, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31, 0x43, 0x41, 0x53, 0x50, 0x45,
		0x52, 0x5f, 0x56, 0x49, 0x41, 0x5f, 0x45, 0x31, 0x63, 0x56, 0x49, 0x41, 0x20, 0x45, 0x31, 0x43,
		0x4c, 0x31, 0x30, 0x20, 0x34, 0x2e, 0x35, 0x47, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31, 0x20, 0x33,
		0x47, 0x43, 0x61, 0x74, 0x42, 0x31, 0x35, 0x51, 0x43, 0x41, 0x54, 0x20, 0x42, 0x33, 0x35, 0x42,
		0x33, 0x35, 0x53, 0x36, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x53,
		0x6f, 0x6c, 0x69, 0x64, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x42, 0x61, 0x73, 0x65, 0x20, 0x35, 0x2e,
		0x30, 0x22, 0x43, 0x41, 0x56, 0x49, 0x4f, 0x4e, 0x5f, 0x31, 0x30, 0x5f, 0x33, 0x47, 0x52, 0x51,
		0x42, 0x61, 0x73, 0x65, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x52, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x31, 0x22, 0x20, 0x51, 0x75, 0x61, 0x64, 0x42, 0x61,
		0x73, 0x65, 0x20, 0x37, 0x2e, 0x32, 0x22, 0x20, 0x51, 0x75, 0x61, 0x64, 0x43, 0x61, 0x76, 0x69,
		0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x31, 0x30, 0x42, 0x61, 0x73, 0x65, 0x20, 0x31,
		0x30, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x51, 0x75, 0x61,
		0x64, 0x42, 0x61, 0x73, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x20, 0x53,
		0x69, 0x6c, 0x76, 0x65, 0x72, 0x43, 0x65, 0x69, 0x62, 0x61, 0x6c, 0x41, 0x43, 0x52, 0x55, 0x58,
		0xc3, 0x81, 0x63, 0x72, 0x75, 0x78, 0x42, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x52, 0x49, 0x58, 0x42,
		0x65, 0x6c, 0x6c, 0x61, 0x74, 0x72, 0x69, 0x78, 0x42, 0x45, 0x54, 0x45, 0x4c, 0x47, 0x45, 0x55,
		0x53, 0x45, 0x42, 0x65, 0x74, 0x65, 0x6c, 0x67, 0x65, 0x75, 0x73, 0x65, 0x4b, 0x69, 0x6c, 0x2d,
		0x38, 0x32, 0x57, 0x46, 0x44, 0x43, 0x4b, 0x69, 0x6c, 0x61, 0x6e, 0x64, 0x20, 0x54, 0x38, 0x43,
		0x65, 0x6c, 0x63, 0x75, 0x73, 0x43, 0x65, 0x6c, 0x6b, 0x6f, 0x6e, 0x34, 0x47, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x38, 0x4d, 0x69, 0x6c, 0x6c, 0x65, 0x6e, 0x6e, 0x69, 0x61, 0x20, 0x48, 0x65, 0x72,
		0x6f, 0x32, 0x47, 0x42, 0x53, 0x74, 0x61, 0x72, 0x32, 0x47, 0x42, 0x20, 0x53, 0x74, 0x61, 0x72,
		0x32, 0x47, 0x42, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x32, 0x47, 0x42, 0x20, 0x58, 0x70, 0x72,
		0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x51, 0x20, 0x32, 0x51, 0x34, 0x47, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x55, 0x6e, 0x69, 0x51, 0x43, 0x65, 0x6c, 0x6c, 0x2d, 0x43, 0x53, 0x75, 0x6d, 0x6d, 0x69,
		0x74, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x43, 0x45, 0x4c, 0x4c, 0x43, 0x5f, 0x45, 0x76,
		0x6f, 0x6c, 0x76, 0x65, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x41, 0x6c,
		0x6c, 0x75, 0x72, 0x65, 0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x32, 0x50, 0x6c, 0x75, 0x73,
		0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x48,
		0x49, 0x43, 0x5f, 0x58, 0x31, 0x43, 0x68, 0x69, 0x63, 0x20, 0x58, 0x31, 0x43, 0x65, 0x6c, 0x6c,
		0x61, 0x63, 0x6f, 0x6d, 0x53, 0x36, 0x32, 0x53, 0x35, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58,
		0x35, 0x30, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x75, 0x74, 0x69,
		0x6f, 0x6e, 0x43, 0x6f, 0x73, 0x6d, 0x61, 0x73, 0x20, 0x24, 0x31, 0x43, 0x6f, 0x73, 0x6d, 0x61,
		0x73, 0x50, 0x41, 0x44, 0x55, 0x41, 0x50, 0x61, 0x64, 0x75, 0x61, 0x43, 0x65, 0x6e, 0x74, 0x72,
		0x69, 0x63, 0x50, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x33, 0x47, 0x31, 0x4c, 0x31, 0x43,
		0x68, 0x61, 0x69, 0x6e, 0x77, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x68, 0x6f, 0x6e, 0x67,
		0x48, 0x4f, 0x4e, 0x20, 0x48, 0x30, 0x31, 0x48, 0x4f, 0x4e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x48, 0x30, 0x31, 0x47, 0x48, 0x4f, 0x4e, 0x47, 0x56, 0x31, 0x32, 0x56, 0x31, 0x32, 0x43, 0x68,
		0x65, 0x72, 0x72, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x20, 0x24, 0x31, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x5f, 0x48, 0x44, 0x5f, 0x4d,
		0x41, 0x58, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x4c,
		0x41, 0x52, 0x45, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x46, 0x6c,
		0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4a, 0x24, 0x31, 0x73,
		0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x46, 0x6c,
		0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x65, 0x6c, 0x75, 0x78, 0x65, 0x46, 0x6c, 0x61,
		0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x72, 0x65,
		0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x58, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c,
		0x61, 0x72, 0x65, 0x20, 0x4a, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x72, 0x65,
		0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x41, 0x35, 0x46,
		0x6c, 0x61, 0x72, 0x65, 0x20, 0x58, 0x20, 0x56, 0x24, 0x31, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20,
		0x58, 0x4c, 0x20, 0x32, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x5f, 0x4a, 0x32, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x46, 0x6c,
		0x61, 0x72, 0x65, 0x20, 0x4a, 0x32, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x46, 0x6c, 0x61,
		0x72, 0x65, 0x20, 0x53, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x6c, 0x61,
		0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x53, 0x35,
		0x4c, 0x69, 0x74, 0x65, 0x44, 0x54, 0x56, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x35, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x20, 0x44, 0x54, 0x56, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x32,
		0x20, 0x44, 0x54, 0x56, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x79, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x53, 0x33, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x58, 0x4c, 0x20, 0x32, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x48,
		0x44, 0x20, 0x24, 0x31, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x5f, 0x48, 0x44, 0x5f, 0x44, 0x75, 0x6f,
		0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x48, 0x44, 0x20, 0x44, 0x75, 0x6f, 0x4f, 0x6d, 0x65, 0x67,
		0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x4f, 0x6d, 0x65,
		0x67, 0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x32, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x58, 0x53, 0x70, 0x69,
		0x6e, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x5f, 0x54, 0x77,
		0x6f, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x54, 0x77, 0x6f, 0x44, 0x65, 0x73, 0x69, 0x72,
		0x65, 0x20, 0x52, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65,
		0x20, 0x52, 0x36, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x52,
		0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x52, 0x36, 0x44,
		0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x45, 0x79, 0x65, 0x43, 0x4f, 0x53, 0x4d, 0x4f, 0x53, 0x20,
		0x54, 0x48, 0x52, 0x45, 0x45, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x20, 0x33, 0x52, 0x65, 0x76,
		0x65, 0x6c, 0x20, 0x33, 0x47, 0x52, 0x61, 0x64, 0x61, 0x72, 0x20, 0x44, 0x65, 0x6c, 0x75, 0x78,
		0x65, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x52, 0x61, 0x64, 0x61,
		0x72, 0x20, 0x44, 0x65, 0x6c, 0x75, 0x78, 0x65, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69,
		0x6f, 0x6e, 0x5f, 0x53, 0x32, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69,
		0x6f, 0x6e, 0x20, 0x53, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69,
		0x6f, 0x6e, 0x20, 0x53, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x54, 0x56, 0x53, 0x75,
		0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x6c,
		0x61, 0x72, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x56, 0x24, 0x31, 0x46,
		0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x75, 0x72, 0x61, 0x20, 0x33, 0x73, 0x46, 0x75, 0x73,
		0x69, 0x6f, 0x6e, 0x20, 0x41, 0x75, 0x72, 0x61, 0x20, 0x33, 0x53, 0x4d, 0x41, 0x49, 0x41, 0x20,
		0x50, 0x41, 0x44, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61, 0x69, 0x61, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x68, 0x69, 0x63, 0x6f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x42, 0x6f, 0x6d, 0x62, 0x6f, 0x41, 0x6c, 0x74, 0x6f, 0x20,
		0x42, 0x6f, 0x6d, 0x62, 0x6f, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69,
		0x63, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x41, 0x56, 0x41,
		0x4e, 0x43, 0x45, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x41, 0x76, 0x61, 0x6e, 0x63,
		0x65, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x45, 0x73,
		0x74, 0x72, 0x65, 0x6c, 0x6c, 0x61, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x45, 0x73, 0x74, 0x72, 0x65,
		0x6c, 0x6c, 0x61, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x4a, 0x55, 0x45, 0x47, 0x4f, 0x41, 0x6c, 0x74,
		0x6f, 0x20, 0x4a, 0x75, 0x65, 0x67, 0x6f, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x53, 0x55, 0x42, 0x49,
		0x52, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x53, 0x75, 0x62, 0x69, 0x72, 0x41, 0x6c, 0x74, 0x6f, 0x20,
		0x24, 0x31, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x24, 0x31, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x4e, 0x55,
		0x42, 0x45, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x4e, 0x75, 0x62, 0x65, 0x4f, 0x4a, 0x4f, 0x53, 0x20,
		0x43, 0x41, 0x4d, 0x42, 0x49, 0x4f, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x43, 0x61, 0x6d, 0x62, 0x69,
		0x6f, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x4f, 0x52, 0x4f, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x4f, 0x72,
		0x6f, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x4c, 0x55, 0x4e, 0x41, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x4c,
		0x75, 0x6e, 0x61, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x43, 0x49, 0x45, 0x4c, 0x4f, 0x4f, 0x6a, 0x6f,
		0x73, 0x20, 0x43, 0x69, 0x65, 0x6c, 0x6f, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x50, 0x4c, 0x55, 0x53,
		0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x56, 0x49,
		0x56, 0x49, 0x52, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x56, 0x69, 0x76, 0x69, 0x72, 0x4f, 0x4a, 0x4f,
		0x53, 0x20, 0x44, 0x4f, 0x53, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x44,
		0x4f, 0x53, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x44, 0x4f, 0x53, 0x4f,
		0x6a, 0x6f, 0x73, 0x20, 0x44, 0x4f, 0x53, 0x46, 0x55, 0x45, 0x47, 0x4f, 0x20, 0x4d, 0x41, 0x58,
		0x46, 0x75, 0x65, 0x67, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x68, 0x69, 0x6c, 0x69, 0x47, 0x72,
		0x65, 0x65, 0x6e, 0x45, 0x2d, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x24, 0x31, 0x43, 0x68, 0x69,
		0x6e, 0x61, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x36, 0x35, 0x31, 0x43, 0x59, 0x43,
		0x4d, 0x43, 0x43, 0x2d, 0x4d, 0x38, 0x36, 0x30, 0x4e, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x36,
		0x35, 0x33, 0x41, 0x33, 0x73, 0x4d, 0x37, 0x36, 0x32, 0x47, 0x43, 0x68, 0x69, 0x6e, 0x61, 0x20,
		0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x54, 0x59, 0x48, 0x36, 0x32, 0x32, 0x4d, 0x4d, 0x61,
		0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x31, 0x31, 0x20, 0x35, 0x47, 0x54, 0x59, 0x48, 0x36, 0x31,
		0x31, 0x4d, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x31, 0x30, 0x20, 0x53, 0x45, 0x20,
		0x35, 0x47, 0x54, 0x59, 0x48, 0x36, 0x31, 0x32, 0x4d, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67,
		0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x54, 0x59, 0x48, 0x32, 0x31, 0x31, 0x55, 0x54, 0x69, 0x61,
		0x6e, 0x79, 0x69, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x54, 0x59,
		0x48, 0x32, 0x30, 0x31, 0x48, 0x54, 0x69, 0x61, 0x6e, 0x79, 0x69, 0x20, 0x4f, 0x6e, 0x65, 0x43,
		0x68, 0x75, 0x77, 0x69, 0x48, 0x69, 0x38, 0x24, 0x31, 0x20, 0x51, 0x75, 0x61, 0x64, 0x24, 0x31,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x24, 0x31, 0x20, 0x24, 0x32, 0x48, 0x69, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x48, 0x69, 0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x58, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x58, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x48, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x61,
		0x78, 0x48, 0x69, 0x24, 0x31, 0x20, 0x41, 0x69, 0x72, 0x48, 0x69, 0x38, 0x20, 0x53, 0x45, 0x48,
		0x69, 0x31, 0x30, 0x20, 0x58, 0x50, 0x72, 0x6f, 0x48, 0x69, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x56, 0x69, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x31, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x56, 0x69, 0x31, 0x30, 0x53, 0x75, 0x72, 0x50, 0x61, 0x64, 0x48, 0x69, 0x42, 0x6f, 0x78,
		0x20, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x43, 0x69,
		0x74, 0x79, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6c, 0x61, 0x72, 0x65, 0x73, 0x74, 0x61, 0x41, 0x69,
		0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x43, 0x6c, 0x61, 0x72, 0x6d, 0x69, 0x6e,
		0x42, 0x38, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x38, 0x50,
		0x6c, 0x75, 0x73, 0x42, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x35, 0x50, 0x72, 0x6f, 0x42,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x43,
		0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x6e, 0x69, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64,
		0x20, 0x28, 0x24, 0x31, 0x29, 0x4d, 0x46, 0x43, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x43, 0x6c, 0x65,
		0x6d, 0x70, 0x61, 0x64, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x46, 0x43, 0x5f, 0x38,
		0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x38, 0x43, 0x4c, 0x45, 0x4d, 0x50, 0x41, 0x44,
		0x5f, 0x37, 0x5f, 0x53, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x37, 0x53, 0x43, 0x6c,
		0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x24, 0x31, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73,
		0x5f, 0x43, 0x35, 0x5f, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73,
		0x20, 0x43, 0x35, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f,
		0x6e, 0x65, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x42, 0x6f, 0x6f, 0x73,
		0x74, 0x20, 0x24, 0x31, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x42, 0x6f, 0x6f, 0x73, 0x74,
		0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x53, 0x6e, 0x61, 0x70, 0x54, 0x68, 0x72, 0x69, 0x6c,
		0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x31, 0x36, 0x47, 0x42, 0x54, 0x68, 0x72, 0x69, 0x6c,
		0x6c, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x41, 0x63,
		0x63, 0x65, 0x73, 0x73, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54,
		0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x48, 0x44, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x43, 0x45, 0x78, 0x63, 0x69, 0x74,
		0x65, 0x20, 0x43, 0x4e, 0x42, 0x41, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x65,
		0x78, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64,
		0x70, 0x61, 0x64, 0x2b, 0x56, 0x54, 0x24, 0x31, 0x2b, 0x56, 0x54, 0x51, 0x24, 0x31, 0x43, 0x6c,
		0x6f, 0x75, 0x74, 0x48, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x2e, 0x31, 0x58, 0x34, 0x31, 0x37, 0x20,
		0x41, 0x6d, 0x61, 0x7a, 0x65, 0x58, 0x34, 0x31, 0x38, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x58, 0x34,
		0x32, 0x31, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x58, 0x34, 0x32, 0x32, 0x20, 0x45, 0x78, 0x6f, 0x74,
		0x69, 0x63, 0x58, 0x34, 0x32, 0x35, 0x20, 0x53, 0x68, 0x61, 0x76, 0x69, 0x74, 0x58, 0x34, 0x32,
		0x38, 0x20, 0x41, 0x73, 0x74, 0x75, 0x74, 0x65, 0x43, 0x6e, 0x4d, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x43, 0x6f, 0x62, 0x61, 0x6c, 0x74, 0x53, 0x4d, 0x24, 0x31,
		0x54, 0x24, 0x31, 0x20, 0x33, 0x47, 0x54, 0x24, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x43, 0x6f,
		0x62, 0x79, 0x20, 0x4b, 0x79, 0x72, 0x6f, 0x73, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x50, 0x72,
		0x69, 0x64, 0x65, 0x20, 0x31, 0x41, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x37, 0x53, 0x50, 0x72,
		0x69, 0x64, 0x65, 0x20, 0x31, 0x45, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x35, 0x43, 0x50, 0x72,
		0x69, 0x64, 0x65, 0x20, 0x35, 0x58, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x31, 0x58, 0x43, 0x6f,
		0x6d, 0x54, 0x72, 0x61, 0x64, 0x65, 0x20, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x45, 0x76, 0x6f, 0x20,
		0x35, 0x2e, 0x30, 0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x4f, 0x43, 0x54, 0x41, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x36, 0x2e, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x36, 0x2e, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x24, 0x31, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x5f, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x5f, 0x37, 0x38, 0x35, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x54, 0x54, 0x48, 0x37, 0x48, 0x37,
		0x54, 0x54, 0x4c, 0x37, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x37, 0x54, 0x65, 0x73, 0x6c,
		0x61, 0x5f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x4c, 0x37, 0x5f, 0x33, 0x47, 0x4c, 0x37,
		0x20, 0x33, 0x47, 0x54, 0x54, 0x4c, 0x37, 0x31, 0x33, 0x47, 0x4c, 0x37, 0x2e, 0x31, 0x20, 0x33,
		0x47, 0x54, 0x54, 0x4c, 0x38, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x38, 0x54, 0x45, 0x53,
		0x4c, 0x41, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x54, 0x5f, 0x4d, 0x37, 0x4d, 0x37, 0x54, 0x65,
		0x73, 0x6c, 0x61, 0x5f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x4d, 0x38, 0x4d, 0x38, 0x54,
		0x45, 0x53, 0x4c, 0x41, 0x20, 0x58, 0x54, 0x35, 0x35, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42,
		0x6f, 0x78, 0x20, 0x58, 0x54, 0x35, 0x35, 0x30, 0x43, 0x6f, 0x6d, 0x69, 0x6f, 0x47, 0x54, 0x31,
		0x30, 0x30, 0x43, 0x54, 0x37, 0x30, 0x31, 0x57, 0x43, 0x54, 0x37, 0x30, 0x31, 0x47, 0x20, 0x50,
		0x4c, 0x55, 0x53, 0x43, 0x54, 0x37, 0x30, 0x31, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x6f,
		0x6d, 0x70, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x43, 0x6f, 0x6e, 0x43, 0x6f, 0x72,
		0x64, 0x65, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x43, 0x6f, 0x6e, 0x63,
		0x65, 0x70, 0x74, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x31, 0x30, 0x46,
		0x6c, 0x79, 0x66, 0x69, 0x78, 0x20, 0x36, 0x43, 0x2d, 0x37, 0x32, 0x31, 0x46, 0x6c, 0x79, 0x66,
		0x69, 0x78, 0x20, 0x51, 0x50, 0x6c, 0x75, 0x73, 0x2d, 0x24, 0x31, 0x20, 0x24, 0x32, 0x44, 0x72,
		0x65, 0x61, 0x6d, 0x5f, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x43, 0x2d, 0x37, 0x35,
		0x34, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x43,
		0x2d, 0x37, 0x35, 0x34, 0x43, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x52, 0x41, 0x4e, 0x47,
		0x45, 0x5f, 0x48, 0x53, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x48, 0x53, 0x43, 0x6f, 0x6e, 0x64,
		0x6f, 0x72, 0x43, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x50, 0x48, 0x53, 0x2d, 0x36, 0x30, 0x31,
		0x43, 0x38, 0x43, 0x34, 0x2b, 0x20, 0x4e, 0x6f, 0x69, 0x72, 0x43, 0x37, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x34, 0x43, 0x32, 0x43, 0x35, 0x43, 0x38, 0x53,
		0x43, 0x37, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x39, 0x43, 0x36, 0x2b, 0x43, 0x36,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x39, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x47, 0x32, 0x53, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x34, 0x53, 0x50,
		0x34, 0x31, 0x33, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x54, 0x31, 0x50, 0x4b, 0x54, 0x34,
		0x31, 0x31, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x32, 0x50, 0x48, 0x51, 0x35, 0x31,
		0x39, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x34, 0x53, 0x50, 0x48, 0x51, 0x35, 0x32,
		0x30, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x35, 0x50, 0x48, 0x51, 0x35, 0x32, 0x35,
		0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x36, 0x50, 0x48, 0x51, 0x35, 0x32, 0x36, 0x47,
		0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x6d,
		0x65, 0x20, 0x50, 0x37, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x34, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x35, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x36,
		0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x61, 0x34, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x20, 0x41, 0x34, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x65,
		0x35, 0x20, 0x70, 0x72, 0x6f, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x35, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x49, 0x24, 0x31, 0x47, 0x72, 0x69, 0x66, 0x66,
		0x65, 0x20, 0x47, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20,
		0x54, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x54, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x54, 0x24, 0x31, 0x50,
		0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x34, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x4c, 0x54, 0x45, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x38, 0x41, 0x6c, 0x6c, 0x75, 0x72,
		0x65, 0x20, 0x41, 0x35, 0x35, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x31, 0x30, 0x30,
		0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x35, 0x35, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x41,
		0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x31, 0x30, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50,
		0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x75,
		0x72, 0x65, 0x20, 0x41, 0x38, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x38, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x35, 0x35, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x48, 0x31, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20,
		0x4c, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x33, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x24, 0x31, 0x50, 0x6c, 0x75, 0x6d,
		0x65, 0x20, 0x50, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x4e, 0x2d, 0x24, 0x31, 0x43, 0x6f,
		0x6e, 0x6e, 0x65, 0x63, 0x74, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x20, 0x36, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x78, 0x53, 0x45, 0x4e, 0x5f, 0x31,
		0x30, 0x35, 0x35, 0x5f, 0x41, 0x52, 0x4d, 0x53, 0x65, 0x72, 0x65, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x31, 0x30, 0x35, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x43, 0x6f, 0x6e, 0x71, 0x75, 0x65,
		0x73, 0x74, 0x53, 0x24, 0x31, 0x43, 0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x46, 0x32,
		0x46, 0x32, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x78, 0x6f, 0x43, 0x58, 0x2d, 0x31, 0x30, 0x34, 0x35,
		0x20, 0x33, 0x47, 0x47, 0x58, 0x2d, 0x31, 0x30, 0x33, 0x35, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x47, 0x54, 0x31, 0x31, 0x36, 0x30, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x42, 0x31, 0x30, 0x35, 0x20, 0x33, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42,
		0x31, 0x30, 0x38, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54, 0x31, 0x30,
		0x37, 0x20, 0x33, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54, 0x31, 0x30, 0x39, 0x20,
		0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54, 0x37, 0x31, 0x35, 0x20, 0x33, 0x47,
		0x20, 0x37, 0x2e, 0x30, 0x22, 0x4b, 0x54, 0x39, 0x39, 0x35, 0x20, 0x33, 0x47, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x4b, 0x54, 0x31, 0x31, 0x30, 0x30, 0x47, 0x54, 0x43, 0x6f, 0x6f, 0x6c, 0x70,
		0x61, 0x64, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x43, 0x6f, 0x6f,
		0x6c, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x43, 0x37, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x37, 0x4e, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x45, 0x56, 0x56, 0x4c,
		0x50, 0x4c, 0x55, 0x53, 0x20, 0x43, 0x33, 0x37, 0x30, 0x31, 0x41, 0x52, 0x45, 0x56, 0x56, 0x4c,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x50, 0x33, 0x36, 0x36, 0x37, 0x41, 0x54, 0x54, 0x61, 0x73,
		0x6b, 0x65, 0x72, 0x38, 0x31, 0x39, 0x30, 0x51, 0x31, 0x38, 0x32, 0x35, 0x2d, 0x45, 0x30, 0x4e,
		0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x35, 0x43, 0x42, 0x65, 0x6c, 0x6c, 0x61, 0x7a, 0x61,
		0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x53, 0x4c, 0x65,
		0x67, 0x61, 0x63, 0x79, 0x20, 0x53, 0x20, 0x53, 0x52, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20,
		0x42, 0x72, 0x69, 0x73, 0x61, 0x53, 0x75, 0x76, 0x61, 0x4e, 0x32, 0x4d, 0x43, 0x6f, 0x6f, 0x6c,
		0x20, 0x31, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x53, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x53, 0x31, 0x43,
		0x6f, 0x6f, 0x6c, 0x20, 0x35, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x33, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x39, 0x43, 0x6f, 0x6f, 0x6c,
		0x20, 0x39, 0x53, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x32, 0x30, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x32,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x32, 0x36, 0x41, 0x72, 0x69, 0x73, 0x65, 0x31, 0x30, 0x41, 0x45,
		0x35, 0x30, 0x31, 0x4d, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x45, 0x35, 0x30, 0x32, 0x4d, 0x6f, 0x64,
		0x65, 0x6e, 0x61, 0x20, 0x32, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x36, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x43, 0x6f,
		0x73, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x4d, 0x79, 0x5f,
		0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x54, 0x61, 0x62, 0x4d, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x54, 0x61, 0x62, 0x43, 0x6f, 0x76, 0x69, 0x61, 0x43, 0x72, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x74,
		0x57, 0x49, 0x4e, 0x47, 0x20, 0x35, 0x57, 0x69, 0x6e, 0x67, 0x20, 0x35, 0x57, 0x49, 0x4e, 0x47,
		0x39, 0x57, 0x69, 0x6e, 0x67, 0x20, 0x39, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x24, 0x31, 0x43,
		0x72, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x4c, 0x31, 0x30, 0x31, 0x41, 0x45, 0x44, 0x65, 0x62,
		0x75, 0x74, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x45, 0x43, 0x32, 0x31, 0x31, 0x30, 0x30, 0x31,
		0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x35, 0x47, 0x55, 0x33, 0x30, 0x34, 0x41, 0x43, 0x49, 0x63,
		0x6f, 0x6e, 0x55, 0x33, 0x32, 0x35, 0x41, 0x43, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x32, 0x45, 0x43,
		0x32, 0x31, 0x31, 0x30, 0x30, 0x32, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x33, 0x57, 0x54, 0x43, 0x4b,
		0x54, 0x30, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x34, 0x56, 0x33, 0x35, 0x30, 0x43, 0x49, 0x6e,
		0x66, 0x6c, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x45, 0x43, 0x32, 0x31, 0x31, 0x30, 0x30, 0x34, 0x49,
		0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x65, 0x20, 0x35, 0x47, 0x55, 0x37, 0x30, 0x35, 0x41, 0x43,
		0x4f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x43, 0x31, 0x30, 0x30, 0x32, 0x4f, 0x76, 0x61,
		0x74, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x45, 0x43, 0x32, 0x31, 0x31, 0x30, 0x30, 0x33, 0x53, 0x70,
		0x6c, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x53, 0x4c, 0x31, 0x30, 0x30, 0x45, 0x41, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x72, 0x69, 0x75, 0x73, 0x20, 0x4d, 0x65,
		0x61, 0x43, 0x72, 0x6f, 0x6e, 0x79, 0x37, 0x30, 0x32, 0x31, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x63,
		0x61, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x58, 0x24, 0x31, 0x43, 0x6f, 0x72, 0x65, 0x2d, 0x24,
		0x31, 0x20, 0x47, 0x6f, 0x43, 0x6f, 0x72, 0x65, 0x2d, 0x24, 0x31, 0x4f, 0x44, 0x59, 0x53, 0x53,
		0x45, 0x59, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x44, 0x59, 0x53, 0x53, 0x45, 0x59, 0x2b, 0x4f,
		0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x53, 0x31, 0x4f, 0x44, 0x59, 0x53, 0x53, 0x45, 0x59,
		0x20, 0x53, 0x31, 0x54, 0x72, 0x65, 0x6b, 0x6b, 0x65, 0x72, 0x2d, 0x24, 0x31, 0x20, 0x43, 0x6f,
		0x72, 0x65, 0x54, 0x72, 0x65, 0x6b, 0x6b, 0x65, 0x72, 0x2d, 0x24, 0x31, 0x43, 0x6f, 0x72, 0x65,
		0x2d, 0x54, 0x24, 0x31, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x42, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d,
		0x42, 0x39, 0x30, 0x32, 0x42, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x20, 0x42, 0x39, 0x30, 0x32,
		0x43, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x71, 0x53, 0x4e, 0x4f, 0x4f, 0x4b, 0x2d, 0x58, 0x31, 0x30,
		0x53, 0x6e, 0x6f, 0x6f, 0x6b, 0x20, 0x58, 0x31, 0x30, 0x43, 0x75, 0x62, 0x65, 0x54, 0x61, 0x6c,
		0x6b, 0x20, 0x38, 0x58, 0x55, 0x32, 0x35, 0x47, 0x54, 0x55, 0x33, 0x30, 0x47, 0x54, 0x32, 0x55,
		0x32, 0x37, 0x47, 0x54, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x38, 0x55, 0x35, 0x35, 0x47, 0x54, 0x5f,
		0x43, 0x38, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x37, 0x39, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x37, 0x58,
		0x55, 0x33, 0x31, 0x47, 0x54, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x31, 0x30, 0x54, 0x38, 0x20, 0x55,
		0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x55, 0x35, 0x35, 0x47, 0x54, 0x54, 0x31, 0x30, 0x20,
		0x50, 0x4c, 0x55, 0x53, 0x54, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x36, 0x35, 0x47,
		0x54, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x39, 0x58, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x38, 0x20,
		0x41, 0x69, 0x72, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x38, 0x20, 0x33, 0x47, 0x69, 0x57, 0x6f,
		0x72, 0x6b, 0x20, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x69, 0x57, 0x6f,
		0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x69, 0x57,
		0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x46, 0x6c, 0x61, 0x67, 0x73,
		0x68, 0x69, 0x70, 0x54, 0x39, 0x37, 0x30, 0x20, 0x34, 0x47, 0x43, 0x77, 0x6f, 0x77, 0x64, 0x65,
		0x66, 0x75, 0x43, 0x37, 0x30, 0x57, 0x43, 0x79, 0x72, 0x75, 0x73, 0x43, 0x4d, 0x31, 0x37, 0x58,
		0x41, 0x43, 0x53, 0x24, 0x31, 0x20, 0x58, 0x41, 0x44, 0x2d, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x2d,
		0x54, 0x65, 0x63, 0x68, 0x44, 0x54, 0x30, 0x37, 0x2d, 0x54, 0x41, 0x42, 0x34, 0x47, 0x44, 0x54,
		0x30, 0x37, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x47, 0x44, 0x41, 0x53, 0x53, 0x44, 0x45, 0x41,
		0x4c, 0x44, 0x49, 0x47, 0x44, 0x45, 0x58, 0x50, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31,
		0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x45, 0x53, 0x32, 0x35, 0x30, 0x20, 0x52, 0x61, 0x67, 0x65,
		0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x4c, 0x20, 0x34, 0x2e, 0x37, 0x22, 0x49, 0x78, 0x69,
		0x6f, 0x6e, 0x20, 0x45, 0x53, 0x32, 0x20, 0x35, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x45, 0x53,
		0x32, 0x20, 0x35, 0x22, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x31, 0x35, 0x30, 0x20, 0x53,
		0x74, 0x6f, 0x72, 0x6d, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x34, 0x34, 0x35, 0x20, 0x4f,
		0x6e, 0x79, 0x78, 0x20, 0x32, 0x34, 0x2e, 0x35, 0x22, 0x20, 0x41, 0x4c, 0x32, 0x35, 0x30, 0x35,
		0x2e, 0x30, 0x22, 0x20, 0x41, 0x4c, 0x33, 0x35, 0x30, 0x35, 0x2e, 0x34, 0x35, 0x22, 0x20, 0x41,
		0x53, 0x31, 0x35, 0x35, 0x35, 0x2e, 0x38, 0x35, 0x22, 0x20, 0x41, 0x53, 0x32, 0x36, 0x30, 0x36,
		0x2e, 0x32, 0x32, 0x22, 0x20, 0x41, 0x53, 0x33, 0x36, 0x30, 0x55, 0x72, 0x73, 0x75, 0x73, 0x20,
		0x39, 0x45, 0x56, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x47, 0x55, 0x72, 0x73, 0x75, 0x73,
		0x20, 0x39, 0x45, 0x56, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x47, 0x55, 0x72, 0x73, 0x75,
		0x73, 0x20, 0x24, 0x31, 0x24, 0x31, 0x20, 0x28, 0x24, 0x32, 0x29, 0x53, 0x65, 0x6e, 0x69, 0x6f,
		0x72, 0x4c, 0x61, 0x72, 0x75, 0x73, 0x5f, 0x54, 0x56, 0x31, 0x46, 0x72, 0x65, 0x79, 0x61, 0x41,
		0x74, 0x6c, 0x61, 0x73, 0x44, 0x45, 0x59, 0x49, 0x44, 0x46, 0x4a, 0x41, 0x47, 0x55, 0x41, 0x52,
		0x2d, 0x30, 0x31, 0x4a, 0x61, 0x67, 0x75, 0x61, 0x72, 0x20, 0x30, 0x31, 0x53, 0x61, 0x74, 0x75,
		0x72, 0x6e, 0x20, 0x24, 0x31, 0x54, 0x49, 0x47, 0x45, 0x52, 0x2d, 0x30, 0x31, 0x54, 0x69, 0x67,
		0x65, 0x72, 0x20, 0x30, 0x31, 0x50, 0x55, 0x4d, 0x41, 0x2d, 0x30, 0x31, 0x50, 0x75, 0x6d, 0x61,
		0x20, 0x30, 0x31, 0x44, 0x47, 0x54, 0x45, 0x43, 0x44, 0x47, 0x31, 0x30, 0x31, 0x54, 0x42, 0x49,
		0x50, 0x53, 0x44, 0x49, 0x47, 0x49, 0x43, 0x4f, 0x4d, 0x44, 0x54, 0x6f, 0x6b, 0x44, 0x49, 0x47,
		0x49, 0x46, 0x4f, 0x52, 0x53, 0x44, 0x49, 0x4a, 0x49, 0x54, 0x53, 0x55, 0x44, 0x49, 0x4a, 0x49,
		0x54, 0x53, 0x55, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x41, 0x31, 0x31, 0x73, 0x44, 0x49,
		0x4d, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x20, 0x44, 0x49, 0x4e, 0x47, 0x44, 0x49, 0x53, 0x48, 0x57,
		0x54, 0x43, 0x45, 0x4c, 0x45, 0x52, 0x4f, 0x35, 0x47, 0x43, 0x65, 0x6c, 0x65, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x44, 0x49, 0x58, 0x4f, 0x4e, 0x48, 0x4b, 0x37, 0x2d, 0x33, 0x35, 0x30, 0x32, 0x53,
		0x6f, 0x6c, 0x69, 0x73, 0x44, 0x4e, 0x36, 0x30, 0x31, 0x35, 0x41, 0x73, 0x74, 0x72, 0x75, 0x6d,
		0x54, 0x53, 0x2d, 0x24, 0x31, 0x2d, 0x31, 0x54, 0x53, 0x5f, 0x4d, 0x31, 0x30, 0x33, 0x41, 0x54,
		0x53, 0x2d, 0x4d, 0x31, 0x30, 0x33, 0x41, 0x58, 0x4b, 0x31, 0x20, 0x33, 0x47, 0x44, 0x4c, 0x59,
		0x5a, 0x55, 0x20, 0x44, 0x53, 0x35, 0x33, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x20, 0x48,
		0x38, 0x44, 0x4c, 0x5f, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x5f, 0x53, 0x65, 0x6c, 0x66,
		0x69, 0x65, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x44, 0x4c, 0x5f, 0x33, 0x39, 0x31, 0x30, 0x69, 0x50,
		0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x44, 0x4e, 0x53, 0x53, 0x34, 0x30,
		0x30, 0x33, 0x41, 0x69, 0x72, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x44, 0x4f, 0x52, 0x4c, 0x41,
		0x4e, 0x44, 0x44, 0x50, 0x41, 0x44, 0x50, 0x41, 0x5f, 0x5a, 0x45, 0x54, 0x41, 0x5a, 0x65, 0x74,
		0x61, 0x44, 0x52, 0x41, 0x47, 0x4f, 0x4e, 0x44, 0x53, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
		0x44, 0x53, 0x49, 0x43, 0x44, 0x55, 0x4e, 0x4e, 0x53, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x44, 0x61, 0x65, 0x77, 0x6f, 0x6f, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x20, 0x37, 0x50,
		0x44, 0x61, 0x6e, 0x65, 0x77, 0x4b, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x24, 0x31, 0x47,
		0x45, 0x4f, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5f, 0x41, 0x35, 0x47, 0x65, 0x6f, 0x64, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x41, 0x35, 0x44, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x44, 0x53, 0x6c,
		0x69, 0x64, 0x65, 0x20, 0x24, 0x31, 0x44, 0x61, 0x6e, 0x67, 0x63, 0x61, 0x70, 0x48, 0x44, 0x44,
		0x38, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x61, 0x6e, 0x79, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72,
		0x20, 0x34, 0x47, 0x58, 0x58, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x20, 0x34, 0x47, 0x44,
		0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31,
		0x44, 0x61, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x69, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x67, 0x44, 0x41,
		0x54, 0x41, 0x4e, 0x47, 0x44, 0x61, 0x74, 0x61, 0x77, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x63, 0x6b,
		0x65, 0x74, 0x20, 0x53, 0x75, 0x72, 0x66, 0x65, 0x72, 0x20, 0x33, 0x47, 0x35, 0x44, 0x57, 0x2d,
		0x55, 0x42, 0x54, 0x37, 0x57, 0x55, 0x62, 0x69, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x37, 0x57,
		0x44, 0x61, 0x74, 0x73, 0x75, 0x6e, 0x44, 0x41, 0x54, 0x53, 0x55, 0x4e, 0x44, 0x41, 0x54, 0x53,
		0x55, 0x4e, 0x5f, 0x44, 0x35, 0x35, 0x30, 0x30, 0x44, 0x35, 0x35, 0x30, 0x30, 0x44, 0x61, 0x74,
		0x73, 0x75, 0x6e, 0x5f, 0x44, 0x35, 0x30, 0x30, 0x31, 0x44, 0x35, 0x30, 0x30, 0x31, 0x44, 0x61,
		0x7a, 0x65, 0x6e, 0x64, 0x61, 0x7a, 0x65, 0x6e, 0x36, 0x41, 0x44, 0x62, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x44, 0x42, 0x38, 0x50, 0x4c, 0x55, 0x53, 0x44, 0x42, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x44, 0x62, 0x74, 0x65, 0x6c, 0x44, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x53, 0x2d, 0x43, 0x52, 0x31,
		0x43, 0x79, 0x70, 0x68, 0x65, 0x72, 0x44, 0x53, 0x2d, 0x43, 0x4c, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x43, 0x79, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x53, 0x2d, 0x42,
		0x44, 0x31, 0x42, 0x6f, 0x6c, 0x64, 0x44, 0x65, 0x57, 0x61, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x6c,
		0x58, 0x43, 0x44, 0x33, 0x35, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x20, 0x24, 0x31, 0x56, 0x65, 0x6e,
		0x75, 0x65, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x6f, 0x73, 0x74, 0x72,
		0x6f, 0x20, 0x24, 0x31, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x24,
		0x31, 0x44, 0x65, 0x6e, 0x61, 0x6c, 0x69, 0x45, 0x2d, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x44,
		0x65, 0x6e, 0x76, 0x65, 0x72, 0x54, 0x41, 0x51, 0x2d, 0x24, 0x31, 0x53, 0x44, 0x51, 0x2d, 0x24,
		0x31, 0x44, 0x65, 0x73, 0x61, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x44, 0x69, 0x63, 0x61,
		0x6d, 0x44, 0x69, 0x67, 0x69, 0x44, 0x69, 0x67, 0x69, 0x63, 0x65, 0x6c, 0x44, 0x4c, 0x33, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x44, 0x4c, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50,
		0x72, 0x6f, 0x44, 0x4c, 0x33, 0x44, 0x4c, 0x24, 0x31, 0x44, 0x4c, 0x38, 0x31, 0x30, 0x44, 0x69,
		0x67, 0x69, 0x64, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x44, 0x69, 0x67, 0x69, 0x68, 0x6f, 0x6d, 0x65,
		0x44, 0x69, 0x67, 0x69, 0x6c, 0x61, 0x6e, 0x64, 0x44, 0x4c, 0x31, 0x30, 0x30, 0x38, 0x4d, 0x44,
		0x69, 0x67, 0x69, 0x74, 0x34, 0x47, 0x50, 0x6c, 0x61, 0x79, 0x31, 0x44, 0x69, 0x67, 0x6d, 0x61,
		0x48, 0x49, 0x54, 0x20, 0x33, 0x47, 0x69, 0x44, 0x78, 0x35, 0x48, 0x54, 0x35, 0x30, 0x33, 0x35,
		0x50, 0x47, 0x48, 0x49, 0x54, 0x20, 0x51, 0x35, 0x30, 0x30, 0x20, 0x33, 0x47, 0x48, 0x54, 0x34,
		0x30, 0x33, 0x39, 0x50, 0x47, 0x48, 0x49, 0x54, 0x20, 0x51, 0x34, 0x30, 0x31, 0x20, 0x33, 0x47,
		0x56, 0x53, 0x35, 0x30, 0x33, 0x37, 0x50, 0x4c, 0x56, 0x4f, 0x58, 0x20, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x34, 0x47, 0x50, 0x53, 0x36, 0x30, 0x34, 0x4d, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x36, 0x2e,
		0x30, 0x4c, 0x54, 0x34, 0x30, 0x34, 0x39, 0x50, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x41, 0x74,
		0x6f, 0x6d, 0x20, 0x33, 0x47, 0x4c, 0x54, 0x35, 0x30, 0x34, 0x38, 0x4d, 0x47, 0x4c, 0x69, 0x6e,
		0x78, 0x20, 0x4a, 0x6f, 0x79, 0x20, 0x33, 0x47, 0x4c, 0x54, 0x35, 0x30, 0x35, 0x32, 0x4d, 0x4c,
		0x4c, 0x69, 0x6e, 0x78, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x34, 0x47, 0x4c, 0x54, 0x34, 0x30,
		0x34, 0x37, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x41, 0x6c, 0x66, 0x61, 0x20, 0x33, 0x47,
		0x4c, 0x53, 0x34, 0x30, 0x35, 0x30, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x58, 0x31, 0x20,
		0x33, 0x47, 0x4c, 0x53, 0x34, 0x30, 0x35, 0x31, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x58,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x4c, 0x54, 0x34, 0x30, 0x35, 0x34, 0x4d, 0x47,
		0x4c, 0x69, 0x6e, 0x78, 0x20, 0x41, 0x72, 0x67, 0x6f, 0x20, 0x33, 0x47, 0x4c, 0x53, 0x35, 0x30,
		0x34, 0x31, 0x50, 0x4c, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x54, 0x72, 0x69, 0x78, 0x20, 0x34, 0x47,
		0x4c, 0x53, 0x35, 0x30, 0x34, 0x30, 0x50, 0x4c, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x52, 0x61, 0x67,
		0x65, 0x20, 0x34, 0x47, 0x4c, 0x53, 0x35, 0x30, 0x35, 0x33, 0x4d, 0x4c, 0x4c, 0x69, 0x6e, 0x78,
		0x20, 0x50, 0x61, 0x79, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x24, 0x31, 0x20, 0x33,
		0x47, 0x50, 0x54, 0x34, 0x35, 0x32, 0x45, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x34, 0x2e, 0x35, 0x43,
		0x49, 0x54, 0x49, 0x20, 0x41, 0x54, 0x4c, 0x20, 0x34, 0x47, 0x20, 0x43, 0x53, 0x35, 0x30, 0x32,
		0x39, 0x4d, 0x4c, 0x43, 0x49, 0x54, 0x49, 0x20, 0x41, 0x54, 0x4c, 0x20, 0x34, 0x47, 0x54, 0x53,
		0x37, 0x38, 0x35, 0x34, 0x4d, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x38, 0x2e, 0x31, 0x22, 0x20,
		0x33, 0x47, 0x52, 0x53, 0x31, 0x32, 0x34, 0x39, 0x50, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x38,
		0x30, 0x30, 0x46, 0x20, 0x34, 0x47, 0x50, 0x53, 0x31, 0x30, 0x34, 0x33, 0x4d, 0x47, 0x50, 0x6c,
		0x61, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x33, 0x22, 0x20, 0x33, 0x47, 0x54, 0x53, 0x31, 0x30,
		0x31, 0x32, 0x45, 0x20, 0x33, 0x47, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x33, 0x47, 0x69, 0x44, 0x78, 0x38, 0x4d, 0x56, 0x4d, 0x39, 0x30, 0x38, 0x48, 0x43,
		0x5a, 0x69, 0x44, 0x78, 0x39, 0x48, 0x49, 0x54, 0x20, 0x34, 0x47, 0x20, 0x48, 0x54, 0x37, 0x30,
		0x37, 0x34, 0x4d, 0x4c, 0x48, 0x49, 0x54, 0x20, 0x34, 0x47, 0x49, 0x44, 0x73, 0x44, 0x20, 0x31,
		0x30, 0x20, 0x33, 0x47, 0x43, 0x49, 0x54, 0x49, 0x20, 0x24, 0x31, 0x57, 0x53, 0x31, 0x32, 0x36,
		0x32, 0x52, 0x57, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x31, 0x32, 0x31, 0x30, 0x42, 0x69, 0x44, 0x78,
		0x44, 0x38, 0x20, 0x33, 0x47, 0x44, 0x2d, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x32, 0x20, 0x38, 0x4e,
		0x53, 0x36, 0x39, 0x30, 0x32, 0x51, 0x4c, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x61, 0x20, 0x37,
		0x2e, 0x32, 0x20, 0x34, 0x47, 0x4e, 0x53, 0x39, 0x37, 0x39, 0x37, 0x4d, 0x47, 0x50, 0x6c, 0x61,
		0x74, 0x69, 0x6e, 0x61, 0x20, 0x37, 0x2e, 0x32, 0x20, 0x33, 0x47, 0x54, 0x54, 0x31, 0x30, 0x30,
		0x34, 0x50, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20,
		0x33, 0x47, 0x54, 0x54, 0x31, 0x30, 0x30, 0x32, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61,
		0x20, 0x44, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x37, 0x30, 0x32,
		0x35, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e, 0x35, 0x22, 0x20, 0x33,
		0x47, 0x54, 0x54, 0x37, 0x30, 0x32, 0x36, 0x4d, 0x57, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20,
		0x37, 0x2e, 0x36, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x37, 0x30, 0x32, 0x30, 0x4d, 0x47, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e, 0x33, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x37,
		0x30, 0x32, 0x34, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e, 0x34, 0x22,
		0x20, 0x33, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x69, 0x44, 0x24, 0x31,
		0x51, 0x24, 0x32, 0x20, 0x33, 0x47, 0x69, 0x44, 0x24, 0x31, 0x51, 0x24, 0x32, 0x54, 0x53, 0x37,
		0x32, 0x30, 0x33, 0x52, 0x57, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x4b, 0x69, 0x64, 0x73,
		0x20, 0x37, 0x54, 0x54, 0x37, 0x30, 0x30, 0x30, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x33, 0x47, 0x38, 0x34, 0x30, 0x32, 0x44, 0x20, 0x34,
		0x47, 0x31, 0x34, 0x30, 0x32, 0x44, 0x20, 0x34, 0x47, 0x20, 0x57, 0x53, 0x31, 0x32, 0x35, 0x30,
		0x50, 0x4c, 0x31, 0x34, 0x30, 0x32, 0x44, 0x20, 0x34, 0x47, 0x52, 0x53, 0x31, 0x32, 0x36, 0x37,
		0x50, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x34, 0x38, 0x30, 0x45, 0x20, 0x34, 0x47, 0x44, 0x69,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x24, 0x31, 0x56, 0x52, 0x20,
		0x4c, 0x34, 0x32, 0x44, 0x4d, 0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31, 0x44, 0x69, 0x6e, 0x61, 0x78,
		0x44, 0x58, 0x20, 0x54, 0x41, 0x20, 0x24, 0x31, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x54, 0x6f,
		0x79, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x4f, 0x59, 0x20, 0x53, 0x54, 0x4f, 0x52, 0x59,
		0x44, 0x69, 0x74, 0x65, 0x63, 0x6d, 0x61, 0x44, 0x69, 0x76, 0x61, 0x44, 0x69, 0x76, 0x65, 0x72,
		0x4d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x65, 0x64, 0x42, 0x6f, 0x78, 0x20, 0x33, 0x44, 0x69, 0x76,
		0x69, 0x73, 0x61, 0x74, 0x58, 0x2d, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x61, 0x20, 0x54, 0x2d, 0x49, 0x49, 0x44, 0x6f, 0x43, 0x6f, 0x4d, 0x6f, 0x44, 0x6f, 0x66, 0x66,
		0x6c, 0x65, 0x72, 0x44, 0x6f, 0x6c, 0x61, 0x6d, 0x65, 0x65, 0x44, 0x6f, 0x6d, 0x2e, 0x72, 0x75,
		0x44, 0x6f, 0x6f, 0x67, 0x65, 0x65, 0x56, 0x20, 0x4d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x65, 0x6e,
		0x63, 0x69, 0x61, 0x32, 0x20, 0x59, 0x31, 0x30, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x61,
		0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x32, 0x20, 0x59, 0x31, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x32, 0x20, 0x59, 0x31, 0x30, 0x30, 0x4c, 0x65,
		0x6f, 0x20, 0x24, 0x31, 0x49, 0x72, 0x6f, 0x6e, 0x20, 0x42, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31,
		0x58, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c,
		0x31, 0x32, 0x30, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x42, 0x4c, 0x31, 0x32, 0x30, 0x30, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x44, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x35, 0x35, 0x30,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x4c, 0x31, 0x32, 0x30, 0x30, 0x30, 0x53, 0x24, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x53, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x24, 0x31, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x53, 0x39, 0x36, 0x47, 0x54, 0x53, 0x39, 0x36, 0x20, 0x47, 0x54, 0x4b,
		0x49, 0x53, 0x53, 0x4d, 0x45, 0x2d, 0x44, 0x47, 0x35, 0x38, 0x30, 0x4b, 0x69, 0x73, 0x73, 0x6d,
		0x65, 0x20, 0x44, 0x47, 0x35, 0x38, 0x30, 0x48, 0x69, 0x74, 0x6d, 0x61, 0x6e, 0x5f, 0x44, 0x47,
		0x38, 0x35, 0x30, 0x48, 0x69, 0x74, 0x6d, 0x61, 0x6e, 0x20, 0x44, 0x47, 0x35, 0x38, 0x30, 0x58,
		0x39, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x78, 0x35, 0x5f, 0x64, 0x6f, 0x6f, 0x67, 0x65, 0x65, 0x58,
		0x35, 0x54, 0x35, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58,
		0x35, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x6d, 0x61, 0x78, 0x5f, 0x53,
		0x58, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x53, 0x53, 0x68, 0x6f, 0x6f, 0x74, 0x20, 0x24, 0x31,
		0x49, 0x62, 0x69, 0x7a, 0x61, 0x5f, 0x46, 0x32, 0x49, 0x62, 0x69, 0x7a, 0x61, 0x20, 0x46, 0x32,
		0x59, 0x36, 0x5f, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x59, 0x36,
		0x20, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x59, 0x36, 0x5f, 0x50,
		0x69, 0x61, 0x6e, 0x6f, 0x59, 0x36, 0x20, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x59, 0x36, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x33, 0x44, 0x59, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x59, 0x37, 0x50, 0x6c, 0x75,
		0x73, 0x59, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x36, 0x70, 0x72, 0x6f, 0x54, 0x36, 0x20,
		0x50, 0x72, 0x6f, 0x44, 0x47, 0x35, 0x35, 0x30, 0x44, 0x47, 0x35, 0x35, 0x30, 0x20, 0x44, 0x61,
		0x67, 0x67, 0x65, 0x72, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x46,
		0x31, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x46, 0x31, 0x59, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x69, 0x78, 0x20, 0x32, 0x44, 0x6f, 0x6f, 0x70, 0x72,
		0x6f, 0x50, 0x33, 0x44, 0x6f, 0x6f, 0x76, 0x58, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d,
		0x61, 0x78, 0x58, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x6f, 0x70, 0x6f, 0x64, 0x44, 0x6f,
		0x70, 0x70, 0x69, 0x6f, 0x44, 0x6f, 0x70, 0x70, 0x69, 0x6f, 0x20, 0x44, 0x50, 0x33, 0x35, 0x35,
		0x44, 0x6f, 0x72, 0x6f, 0x38, 0x30, 0x35, 0x30, 0x38, 0x30, 0x38, 0x30, 0x44, 0x72, 0x61, 0x67,
		0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4d, 0x41, 0x58, 0x20, 0x31, 0x30, 0x4d, 0x61,
		0x78, 0x20, 0x31, 0x30, 0x54, 0x31, 0x32, 0x4d, 0x4e, 0x6f, 0x74, 0x65, 0x70, 0x61, 0x64, 0x20,
		0x24, 0x31, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x44, 0x72, 0x65, 0x61, 0x6d,
		0x54, 0x61, 0x62, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73,
		0x20, 0x35, 0x44, 0x72, 0x6f, 0x78, 0x69, 0x6f, 0x44, 0x74, 0x61, 0x63, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x24, 0x31, 0x44, 0x75, 0x6e, 0x65, 0x20, 0x48, 0x44, 0x53, 0x6f, 0x6c, 0x6f, 0x20,
		0x34, 0x6b, 0x44, 0x75, 0x72, 0x61, 0x62, 0x6f, 0x6f, 0x6b, 0x44, 0x75, 0x75, 0x62, 0x65, 0x65,
		0x45, 0x2d, 0x42, 0x6f, 0x64, 0x61, 0x52, 0x65, 0x76, 0x6f, 0x20, 0x52, 0x37, 0x37, 0x20, 0x47,
		0x50, 0x53, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x20, 0x24, 0x31, 0x45, 0x2d, 0x43, 0x65,
		0x72, 0x6f, 0x73, 0x52, 0x65, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76,
		0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x48, 0x44, 0x45, 0x2d, 0x74, 0x65, 0x6c, 0x69,
		0x24, 0x31, 0x4e, 0x24, 0x31, 0x43, 0x75, 0x72, 0x69, 0x6f, 0x73, 0x69, 0x74, 0x79, 0x20, 0x4f,
		0x39, 0x51, 0x34, 0x45, 0x42, 0x45, 0x4e, 0x45, 0x42, 0x45, 0x53, 0x54, 0x45, 0x43, 0x4f, 0x4e,
		0x45, 0x43, 0x4f, 0x4f, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x75, 0x72, 0x6f, 0x72, 0x61, 0x45, 0x43, 0x53, 0x54, 0x41, 0x31, 0x30, 0x43, 0x41, 0x33, 0x54,
		0x4d, 0x31, 0x30, 0x35, 0x41, 0x54, 0x4d, 0x31, 0x30, 0x35, 0x45, 0x45, 0x52, 0x6f, 0x63, 0x6b,
		0x45, 0x46, 0x54, 0x45, 0x47, 0x4c, 0x45, 0x47, 0x4c, 0x31, 0x31, 0x51, 0x46, 0x36, 0x31, 0x31,
		0x51, 0x46, 0x36, 0x45, 0x4b, 0x49, 0x4e, 0x4f, 0x58, 0x45, 0x38, 0x5f, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x45, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x45, 0x4b, 0x4f, 0x45, 0x4b, 0x4f, 0x20,
		0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x32, 0x4b, 0x32, 0x4b, 0x20,
		0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x53, 0x74, 0x61, 0x72, 0x20, 0x24,
		0x31, 0x20, 0x24, 0x32, 0x45, 0x4b, 0x54, 0x45, 0x4b, 0x2d, 0x24, 0x31, 0x45, 0x4c, 0x41, 0x52,
		0x49, 0x4b, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x47, 0x45, 0x4e, 0x41, 0x43,
		0x4f, 0x4d, 0x45, 0x4e, 0x49, 0x45, 0x45, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x56, 0x50, 0x41,
		0x44, 0x45, 0x56, 0x42, 0x6f, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x57, 0x49, 0x53, 0x4f,
		0x43, 0x54, 0x41, 0x20, 0x54, 0x37, 0x32, 0x30, 0x51, 0x4f, 0x63, 0x74, 0x61, 0x20, 0x54, 0x37,
		0x32, 0x30, 0x51, 0x4f, 0x43, 0x54, 0x41, 0x2d, 0x54, 0x37, 0x30, 0x30, 0x4d, 0x2d, 0x54, 0x32,
		0x4f, 0x63, 0x74, 0x61, 0x20, 0x54, 0x37, 0x30, 0x30, 0x4d, 0x20, 0x54, 0x32, 0x45, 0x58, 0x43,
		0x45, 0x45, 0x44, 0x45, 0x58, 0x4f, 0x45, 0x59, 0x55, 0x45, 0x61, 0x67, 0x6c, 0x65, 0x45, 0x61,
		0x73, 0x79, 0x70, 0x69, 0x78, 0x45, 0x61, 0x73, 0x79, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x45,
		0x63, 0x68, 0x6f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x43, 0x48, 0x4f, 0x5f,
		0x48, 0x4f, 0x52, 0x49, 0x5a, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x48, 0x4f, 0x52, 0x49,
		0x5a, 0x4f, 0x4e, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20,
		0x24, 0x31, 0x47, 0x45, 0x43, 0x48, 0x4f, 0x5f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x34, 0x47,
		0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x34, 0x47, 0x45, 0x69, 0x6e, 0x73, 0x74, 0x65, 0x69, 0x6e,
		0x45, 0x6b, 0x73, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x58, 0x34, 0x55, 0x50,
		0x6c, 0x75, 0x73, 0x58, 0x34, 0x55, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x63, 0x73,
		0x6f, 0x6e, 0x4d, 0x65, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4f, 0x6e, 0x65, 0x45, 0x6c, 0x65,
		0x63, 0x74, 0x72, 0x6f, 0x6e, 0x65, 0x75, 0x6d, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x61, 0x24, 0x31,
		0x22, 0x20, 0x46, 0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x54, 0x56, 0x35, 0x35, 0x22, 0x20, 0x55, 0x48, 0x44, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65, 0x64,
		0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x24, 0x31, 0x22,
		0x20, 0x55, 0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54,
		0x56, 0x24, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x54, 0x56, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x46, 0x54, 0x52, 0x53,
		0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x45, 0x6c, 0x65, 0x6e, 0x62, 0x65, 0x72, 0x67, 0x45, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e,
		0x65, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x56, 0x6f, 0x77, 0x6e, 0x65, 0x79, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x56, 0x6f, 0x77, 0x6e, 0x65, 0x79, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x30, 0x32, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x30,
		0x31, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6f, 0x6c, 0x64, 0x69, 0x65,
		0x72, 0x41, 0x36, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x55,
		0x33, 0x48, 0x50, 0x58, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x75, 0x6e, 0x61, 0x20,
		0x24, 0x31, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x45, 0x6c,
		0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x45, 0x6c, 0x74, 0x65, 0x78, 0x4e,
		0x56, 0x2d, 0x24, 0x31, 0x2d, 0x57, 0x61, 0x63, 0x4e, 0x56, 0x2d, 0x35, 0x30, 0x31, 0x4e, 0x56,
		0x2d, 0x24, 0x31, 0x2d, 0x57, 0x42, 0x45, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x45, 0x6d, 0x70, 0x6f,
		0x72, 0x69, 0x61, 0x53, 0x33, 0x6d, 0x69, 0x6e, 0x69, 0x53, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x45, 0x6e, 0x65, 0x72, 0x67, 0x69, 0x7a, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x24, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x24, 0x31, 0x20, 0x4c,
		0x54, 0x45, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x34, 0x30, 0x30, 0x53, 0x45, 0x4e, 0x45,
		0x52, 0x47, 0x59, 0x34, 0x30, 0x30, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x34, 0x30, 0x30,
		0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x53, 0x24, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
		0x20, 0x24, 0x31, 0x48, 0x61, 0x72, 0x64, 0x20, 0x43, 0x61, 0x73, 0x65, 0x20, 0x24, 0x31, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x53, 0x69, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x20, 0x45, 0x4e, 0x45, 0x52,
		0x47, 0x59, 0x20, 0x69, 0x31, 0x30, 0x20, 0x44, 0x55, 0x41, 0x4c, 0x69, 0x31, 0x30, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x45, 0x6e, 0x67, 0x65, 0x6c, 0x45, 0x6e, 0x6f, 0x74, 0x45, 0x6e, 0x74, 0x69,
		0x74, 0x79, 0x45, 0x4e, 0x54, 0x31, 0x31, 0x51, 0x46, 0x31, 0x32, 0x45, 0x6e, 0x76, 0x69, 0x7a,
		0x65, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x20, 0x44, 0x53, 0x48, 0x31, 0x38,
		0x45, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x45, 0x50, 0x31, 0x39, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x45,
		0x50, 0x31, 0x39, 0x20, 0x53, 0x74, 0x61, 0x72, 0x45, 0x50, 0x31, 0x39, 0x45, 0x70, 0x69, 0x63,
		0x45, 0x70, 0x69, 0x6b, 0x20, 0x4f, 0x6e, 0x65, 0x4b, 0x35, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4c, 0x65, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x53, 0x35, 0x35, 0x30, 0x4b, 0x35,
		0x30, 0x31, 0x4c, 0x65, 0x6f, 0x4b, 0x35, 0x30, 0x30, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x4b, 0x35, 0x30, 0x32, 0x4b, 0x35, 0x30, 0x33, 0x54, 0x4c, 0x65, 0x6f, 0x20,
		0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b, 0x35, 0x30, 0x33, 0x53, 0x4c, 0x65, 0x6f, 0x20, 0x50, 0x72,
		0x6f, 0x4b, 0x35, 0x30, 0x33, 0x48, 0x44, 0x4c, 0x65, 0x6f, 0x20, 0x48, 0x44, 0x4b, 0x35, 0x30,
		0x33, 0x4c, 0x65, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x35, 0x30, 0x34, 0x54, 0x69, 0x74, 0x61,
		0x6e, 0x20, 0x33, 0x47, 0x58, 0x35, 0x30, 0x37, 0x54, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x49,
		0x49, 0x4b, 0x35, 0x31, 0x30, 0x42, 0x6f, 0x6c, 0x74, 0x4b, 0x35, 0x31, 0x31, 0x42, 0x6f, 0x6c,
		0x74, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x35, 0x33, 0x34, 0x48, 0x61, 0x64, 0x61, 0x4b, 0x35, 0x33,
		0x35, 0x48, 0x61, 0x64, 0x61, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b, 0x35, 0x34, 0x35, 0x52,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4b, 0x35, 0x33, 0x36, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x4b, 0x35,
		0x34, 0x30, 0x45, 0x78, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x75, 0x72, 0x58, 0x34, 0x30, 0x30, 0x50,
		0x65, 0x62, 0x62, 0x6c, 0x65, 0x20, 0x58, 0x34, 0x30, 0x30, 0x4b, 0x35, 0x37, 0x33, 0x50, 0x61,
		0x6e, 0x74, 0x68, 0x65, 0x72, 0x4b, 0x36, 0x30, 0x30, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72,
		0x4b, 0x36, 0x30, 0x31, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x20, 0x4f, 0x6e, 0x65, 0x4b,
		0x34, 0x30, 0x36, 0x50, 0x65, 0x62, 0x62, 0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x34,
		0x30, 0x35, 0x50, 0x65, 0x62, 0x62, 0x6c, 0x65, 0x20, 0x49, 0x49, 0x54, 0x37, 0x30, 0x30, 0x50,
		0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x45, 0x70, 0x73, 0x6f, 0x6e, 0x48, 0x41, 0x31, 0x34, 0x41,
		0x20, 0x4c, 0x43, 0x44, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x71,
		0x75, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x78, 0x69, 0x73, 0x45, 0x72, 0x67, 0x6f, 0x46, 0x35, 0x30,
		0x31, 0x5f, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x46, 0x35, 0x30, 0x31, 0x20, 0x4d, 0x61, 0x67, 0x69,
		0x63, 0x42, 0x35, 0x30, 0x32, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x35, 0x30, 0x33, 0x2d,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x41, 0x35, 0x30, 0x33, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x61, 0x42, 0x35, 0x30, 0x36, 0x20, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x56, 0x35, 0x35, 0x30, 0x20,
		0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x35, 0x30, 0x34, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x42,
		0x35, 0x30, 0x35, 0x5f, 0x55, 0x6e, 0x69, 0x74, 0x5f, 0x34, 0x47, 0x42, 0x35, 0x30, 0x35, 0x20,
		0x55, 0x6e, 0x69, 0x74, 0x20, 0x34, 0x47, 0x56, 0x35, 0x35, 0x31, 0x20, 0x41, 0x75, 0x72, 0x61,
		0x56, 0x35, 0x34, 0x30, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x56, 0x35, 0x34, 0x30, 0x20, 0x4c,
		0x65, 0x76, 0x65, 0x6c, 0x56, 0x35, 0x37, 0x30, 0x5f, 0x42, 0x49, 0x47, 0x5f, 0x42, 0x45, 0x4e,
		0x56, 0x35, 0x37, 0x30, 0x20, 0x42, 0x69, 0x67, 0x20, 0x42, 0x65, 0x6e, 0x45, 0x72, 0x67, 0x6f,
		0x20, 0x46, 0x35, 0x30, 0x32, 0x46, 0x35, 0x30, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e,
		0x75, 0x6d, 0x41, 0x35, 0x30, 0x30, 0x20, 0x42, 0x65, 0x73, 0x74, 0x41, 0x35, 0x35, 0x30, 0x20,
		0x4d, 0x61, 0x78, 0x78, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x42, 0x34, 0x30, 0x30, 0x41, 0x35,
		0x30, 0x32, 0x20, 0x41, 0x75, 0x72, 0x75, 0x6d, 0x41, 0x35, 0x35, 0x31, 0x20, 0x53, 0x6b, 0x79,
		0x20, 0x34, 0x47, 0x41, 0x35, 0x35, 0x33, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x35, 0x35,
		0x35, 0x20, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x41, 0x35, 0x35, 0x36, 0x46, 0x35,
		0x30, 0x30, 0x46, 0x35, 0x30, 0x31, 0x42, 0x35, 0x30, 0x30, 0x20, 0x46, 0x69, 0x72, 0x73, 0x74,
		0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x46, 0x35, 0x30, 0x30, 0x47, 0x6f, 0x54, 0x61, 0x62, 0x20,
		0x47, 0x42, 0x54, 0x39, 0x47, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x47, 0x74, 0x69, 0x38, 0x47, 0x6f,
		0x54, 0x61, 0x62, 0x20, 0x47, 0x54, 0x69, 0x38, 0x54, 0x61, 0x62, 0x20, 0x43, 0x72, 0x79, 0x73,
		0x74, 0x61, 0x6c, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x61, 0x62, 0x20, 0x48, 0x65, 0x72, 0x6f,
		0x20, 0x49, 0x49, 0x45, 0x52, 0x47, 0x4f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x78,
		0x20, 0x53, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x78, 0x20, 0x53, 0x58, 0x45, 0x72,
		0x69, 0x63, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x33, 0x38, 0x30, 0x45, 0x72, 0x69, 0x63, 0x79, 0x45,
		0x72, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50,
		0x48, 0x2d, 0x31, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x65, 0x6c, 0x62, 0x48, 0x45, 0x59,
		0x6f, 0x75, 0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x45, 0x59, 0x6f, 0x75, 0x20,
		0x24, 0x31, 0x57, 0x6f, 0x6f, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x45, 0x74, 0x6f, 0x6e, 0x45, 0x74,
		0x75, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x75, 0x72, 0x6f, 0x63, 0x61, 0x73, 0x65, 0x45, 0x55, 0x54,
		0x42, 0x5f, 0x37, 0x35, 0x38, 0x47, 0x5f, 0x54, 0x41, 0x42, 0x49, 0x5f, 0x41, 0x72, 0x67, 0x6f,
		0x73, 0x5f, 0x4b, 0x49, 0x44, 0x53, 0x54, 0x41, 0x42, 0x49, 0x20, 0x41, 0x72, 0x67, 0x6f, 0x73,
		0x20, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x37, 0x35, 0x38, 0x47, 0x45, 0x75, 0x72, 0x6f, 0x73, 0x74,
		0x61, 0x72, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x24, 0x31, 0x45, 0x54, 0x37, 0x30, 0x30, 0x32, 0x43,
		0x2d, 0x48, 0x31, 0x32, 0x65, 0x50, 0x61, 0x64, 0x20, 0x34, 0x53, 0x45, 0x76, 0x65, 0x72, 0x63,
		0x6f, 0x73, 0x73, 0x41, 0x37, 0x35, 0x41, 0x20, 0x53, 0x74, 0x61, 0x72, 0x24, 0x31, 0x20, 0x4d,
		0x61, 0x78, 0x55, 0x35, 0x30, 0x41, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x35, 0x30, 0x20, 0x53,
		0x74, 0x61, 0x72, 0x4d, 0x35, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x55, 0x36, 0x20, 0x50, 0x52, 0x49,
		0x4d, 0x45, 0x55, 0x36, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x72, 0x65, 0x73,
		0x74, 0x45, 0x76, 0x65, 0x72, 0x50, 0x61, 0x64, 0x20, 0x44, 0x43, 0x2d, 0x24, 0x31, 0x45, 0x76,
		0x65, 0x72, 0x65, 0x78, 0x46, 0x69, 0x6e, 0x65, 0x20, 0x37, 0x42, 0x45, 0x76, 0x65, 0x72, 0x74,
		0x65, 0x6b, 0x45, 0x76, 0x65, 0x72, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x24, 0x31, 0x20, 0x4e,
		0x61, 0x6e, 0x6f, 0x4d, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x76, 0x65, 0x72, 0x4d, 0x69,
		0x72, 0x61, 0x63, 0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x34, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x45, 0x76, 0x65, 0x72, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x34, 0x47, 0x45, 0x76,
		0x65, 0x72, 0x24, 0x31, 0x20, 0x49, 0x49, 0x45, 0x76, 0x6f, 0x6c, 0x69, 0x6f, 0x4d, 0x34, 0x4d,
		0x41, 0x47, 0x49, 0x43, 0x4d, 0x34, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x45, 0x76, 0x6f, 0x6c,
		0x69, 0x6f, 0x5f, 0x4d, 0x35, 0x50, 0x72, 0x6f, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x76,
		0x6f, 0x6c, 0x76, 0x65, 0x6f, 0x45, 0x56, 0x4f, 0x4c, 0x56, 0x45, 0x4f, 0x20, 0x4d, 0x75, 0x6c,
		0x74, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x34, 0x4d, 0x75,
		0x6c, 0x74, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x34, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x24, 0x31, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20,
		0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x51, 0x34, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x51, 0x34,
		0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x44, 0x32, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x47,
		0x24, 0x31, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x51, 0x24,
		0x31, 0x24, 0x32, 0x45, 0x76, 0x6f, 0x6f, 0x45, 0x76, 0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x50, 0x6c, 0x61, 0x79, 0x70, 0x61, 0x64, 0x20, 0x33, 0x47, 0x20, 0x47, 0x4f, 0x4f, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x20, 0x47, 0x6f, 0x6f, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x20, 0x32, 0x47, 0x6f, 0x6f, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x52, 0x4f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x50, 0x41, 0x44, 0x5f, 0x50, 0x52,
		0x4f, 0x5f, 0x58, 0x4c, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x58, 0x4c, 0x50, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x54, 0x61, 0x62,
		0x20, 0x58, 0x4c, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x58, 0x4c, 0x33, 0x47, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x58, 0x4c, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x58, 0x4c, 0x45, 0x78, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x20, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x58, 0x20, 0x24, 0x31, 0x69, 0x45, 0x78, 0x6d, 0x61, 0x72,
		0x74, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x20, 0x37,
		0x2e, 0x34, 0x20, 0x33, 0x47, 0x53, 0x63, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x33, 0x47, 0x49, 0x6d,
		0x70, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x41, 0x63, 0x74, 0x69,
		0x76, 0x65, 0x44, 0x20, 0x38, 0x2e, 0x32, 0x20, 0x33, 0x47, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61,
		0x54, 0x56, 0x20, 0x33, 0x47, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x6c, 0x6c, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x49, 0x49, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
		0x65, 0x72, 0x20, 0x24, 0x31, 0x53, 0x75, 0x72, 0x66, 0x65, 0x72, 0x20, 0x24, 0x31, 0x53, 0x75,
		0x72, 0x66, 0x65, 0x72, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x73, 0x51, 0x75, 0x61, 0x64, 0x20,
		0x24, 0x31, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x20, 0x24, 0x31, 0x57, 0x69, 0x6e, 0x6e,
		0x65, 0x72, 0x20, 0x24, 0x31, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x67,
		0x6f, 0x50, 0x75, 0x6c, 0x73, 0x61, 0x72, 0x54, 0x6f, 0x72, 0x6e, 0x61, 0x64, 0x6f, 0x20, 0x33,
		0x47, 0x46, 0x72, 0x65, 0x73, 0x68, 0x4a, 0x6f, 0x79, 0x54, 0x56, 0x46, 0x69, 0x6e, 0x4c, 0x61,
		0x67, 0x6f, 0x6f, 0x6e, 0x41, 0x33, 0x35, 0x30, 0x54, 0x56, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52,
		0x69, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x78, 0x74,
		0x72, 0x65, 0x6d, 0x52, 0x6f, 0x63, 0x6b, 0x20, 0x58, 0x24, 0x31, 0x2b, 0x52, 0x4f, 0x43, 0x4b,
		0x5f, 0x58, 0x31, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x20, 0x58, 0x31, 0x31, 0x45, 0x7a, 0x69, 0x6f,
		0x45, 0x7a, 0x7a, 0x65, 0x45, 0x5a, 0x24, 0x31, 0x46, 0x2b, 0x46, 0x31, 0x35, 0x30, 0x42, 0x32,
		0x30, 0x32, 0x31, 0x46, 0x32, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5a, 0x38, 0x50, 0x4c,
		0x55, 0x53, 0x5a, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x38, 0x5f, 0x52, 0x4f, 0x4b, 0x52,
		0x69, 0x38, 0x20, 0x52, 0x6f, 0x6b, 0x72, 0x5a, 0x38, 0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5a,
		0x38, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x38, 0x30, 0x73, 0x5f, 0x70, 0x6c, 0x75,
		0x73, 0x46, 0x38, 0x30, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x38, 0x30, 0x20, 0x50, 0x49,
		0x41, 0x42, 0x45, 0x4c, 0x4c, 0x41, 0x46, 0x38, 0x30, 0x20, 0x50, 0x69, 0x61, 0x62, 0x65, 0x6c,
		0x6c, 0x61, 0x43, 0x38, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x43, 0x38, 0x20, 0x46, 0x69, 0x6e,
		0x67, 0x65, 0x72, 0x46, 0x45, 0x4f, 0x4e, 0x41, 0x4c, 0x46, 0x46, 0x46, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x4c, 0x69, 0x66, 0x65, 0x54, 0x41, 0x42, 0x2d, 0x31, 0x30, 0x41, 0x34, 0x46, 0x49,
		0x4c, 0x49, 0x58, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x4d, 0x20, 0x46, 0x58, 0x34, 0x34, 0x32,
		0x33, 0x46, 0x49, 0x53, 0x45, 0x46, 0x69, 0x73, 0x65, 0x5f, 0x4d, 0x33, 0x32, 0x34, 0x33, 0x33,
		0x20, 0x33, 0x47, 0x46, 0x4c, 0x59, 0x43, 0x41, 0x54, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x6d,
		0x20, 0x24, 0x31, 0x55, 0x6e, 0x69, 0x63, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x46, 0x4d, 0x54, 0x31,
		0x36, 0x4d, 0x34, 0x48, 0x49, 0x31, 0x30, 0x35, 0x30, 0x32, 0x34, 0x4e, 0x65, 0x74, 0x73, 0x75,
		0x72, 0x66, 0x65, 0x72, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
		0x33, 0x20, 0x42, 0x30, 0x31, 0x46, 0x4d, 0x54, 0x2d, 0x4e, 0x4d, 0x37, 0x30, 0x35, 0x38, 0x2d,
		0x30, 0x32, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x31, 0x37, 0x36, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30,
		0x35, 0x33, 0x31, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x31, 0x37, 0x36, 0x48, 0x53, 0x31, 0x30,
		0x35, 0x30, 0x32, 0x33, 0x32, 0x42, 0x35, 0x32, 0x31, 0x37, 0x35, 0x57, 0x54, 0x31, 0x30, 0x35,
		0x30, 0x32, 0x33, 0x31, 0x31, 0x37, 0x35, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x32, 0x33, 0x31,
		0x54, 0x6f, 0x6d, 0x63, 0x61, 0x74, 0x31, 0x37, 0x35, 0x46, 0x54, 0x31, 0x30, 0x35, 0x30, 0x32,
		0x34, 0x31, 0x56, 0x69, 0x70, 0x65, 0x72, 0x46, 0x4e, 0x42, 0x53, 0x50, 0x35, 0x30, 0x34, 0x35,
		0x56, 0x43, 0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x41, 0x31, 0x43, 0x6f, 0x6e, 0x65, 0x58,
		0x69, 0x73, 0x20, 0x41, 0x32, 0x43, 0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x58, 0x31, 0x43,
		0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x58, 0x32, 0x46, 0x4e, 0x46, 0x69, 0x46, 0x69, 0x76,
		0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x24, 0x31, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x24,
		0x31, 0x69, 0x66, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x33, 0x69, 0x46, 0x69, 0x76, 0x65,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x41, 0x69, 0x72,
		0x69, 0x66, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x69, 0x46, 0x69, 0x76, 0x65,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x46, 0x4f, 0x4f, 0x44, 0x4f, 0x46, 0x4f, 0x52, 0x4d, 0x45,
		0x46, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x46, 0x4f, 0x53, 0x53, 0x69, 0x42, 0x4f, 0x54, 0x46,
		0x31, 0x30, 0x31, 0x46, 0x50, 0x54, 0x46, 0x61, 0x52, 0x61, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x46,
		0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x54, 0x56, 0x50,
		0x6f, 0x72, 0x74, 0x61, 0x6c, 0x20, 0x54, 0x56, 0x46, 0x61, 0x63, 0x65, 0x74, 0x65, 0x6c, 0x51,
		0x33, 0x51, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x61, 0x63, 0x69, 0x6d, 0x65, 0x46, 0x6c, 0x65,
		0x65, 0x74, 0x20, 0x37, 0x46, 0x61, 0x69, 0x72, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x46, 0x61, 0x6d,
		0x6f, 0x63, 0x6f, 0x46, 0x61, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x64, 0x20, 0x35, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x52, 0x65, 0x64, 0x20, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x35, 0x50, 0x6c, 0x75, 0x73, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46,
		0x61, 0x6d, 0x6f, 0x75, 0x73, 0x20, 0x35, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x46, 0x61, 0x6e,
		0x74, 0x65, 0x63, 0x4d, 0x33, 0x30, 0x30, 0x48, 0x46, 0x61, 0x72, 0x45, 0x61, 0x73, 0x54, 0x6f,
		0x6e, 0x65, 0x46, 0x61, 0x72, 0x61, 0x73, 0x73, 0x6f, 0x6f, 0x46, 0x65, 0x6e, 0x67, 0x78, 0x69,
		0x61, 0x6e, 0x67, 0x46, 0x65, 0x72, 0x6f, 0x46, 0x65, 0x72, 0x6f, 0x5f, 0x59, 0x31, 0x59, 0x31,
		0x52, 0x6f, 0x79, 0x61, 0x6c, 0x65, 0x20, 0x59, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x6f,
		0x79, 0x61, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x46, 0x45, 0x52, 0x4f, 0x20, 0x50, 0x41, 0x43, 0x45,
		0x50, 0x61, 0x63, 0x65, 0x41, 0x34, 0x30, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32,
		0x30, 0x31, 0x39, 0x41, 0x34, 0x30, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x41, 0x34, 0x30, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x69,
		0x47, 0x4f, 0x41, 0x54, 0x52, 0x49, 0x55, 0x4d, 0x20, 0x49, 0x49, 0x20, 0x46, 0x35, 0x35, 0x4c,
		0x32, 0x41, 0x74, 0x72, 0x69, 0x75, 0x6d, 0x20, 0x49, 0x49, 0x54, 0x52, 0x49, 0x4f, 0x20, 0x46,
		0x34, 0x30, 0x4c, 0x54, 0x54, 0x72, 0x69, 0x6f, 0x20, 0x46, 0x34, 0x30, 0x4c, 0x54, 0x45, 0x50,
		0x49, 0x43, 0x20, 0x46, 0x35, 0x30, 0x47, 0x45, 0x70, 0x69, 0x63, 0x20, 0x46, 0x35, 0x30, 0x47,
		0x55, 0x4c, 0x54, 0x52, 0x41, 0x20, 0x4d, 0x35, 0x30, 0x47, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4d,
		0x34, 0x30, 0x35, 0x42, 0x5f, 0x38, 0x47, 0x42, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x49,
		0x49, 0x20, 0x38, 0x47, 0x42, 0x4d, 0x34, 0x30, 0x35, 0x42, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65,
		0x20, 0x49, 0x49, 0x56, 0x49, 0x52, 0x54, 0x55, 0x45, 0x33, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65,
		0x20, 0x49, 0x49, 0x49, 0x43, 0x45, 0x4e, 0x54, 0x52, 0x49, 0x43, 0x20, 0x53, 0x35, 0x30, 0x47,
		0x43, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x20, 0x53, 0x35, 0x30, 0x47, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x4a, 0x38, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x4a, 0x38, 0x4f, 0x72, 0x62, 0x69, 0x74,
		0x5f, 0x6c, 0x6c, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x20, 0x49, 0x49, 0x46, 0x34, 0x30, 0x47, 0x32,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x46, 0x34, 0x30, 0x47, 0x32,
		0x46, 0x69, 0x47, 0x69, 0x4e, 0x6f, 0x70, 0x61, 0x6c, 0x50, 0x34, 0x30, 0x20, 0x4d, 0x61, 0x78,
		0x50, 0x34, 0x30, 0x48, 0x6f, 0x6c, 0x61, 0x24, 0x31, 0x74, 0x77, 0x6f, 0x46, 0x6a, 0x4e, 0x6f,
		0x74, 0x65, 0x5f, 0x31, 0x43, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x43, 0x4e, 0x6f, 0x74, 0x65,
		0x5f, 0x35, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46,
		0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x46, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x46,
		0x69, 0x6e, 0x6c, 0x75, 0x78, 0x46, 0x69, 0x72, 0x65, 0x46, 0x6c, 0x79, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x75,
		0x72, 0x69, 0x69, 0x20, 0x56, 0x69, 0x76, 0x69, 0x64, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x49,
		0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x52, 0x61, 0x7a, 0x6f,
		0x72, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x52, 0x61, 0x7a, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x44, 0x65, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x75,
		0x72, 0x69, 0x69, 0x20, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x75,
		0x72, 0x69, 0x69, 0x20, 0x46, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x41, 0x6d,
		0x75, 0x73, 0x65, 0x20, 0x34, 0x47, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x44, 0x72, 0x65, 0x61,
		0x6d, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x38, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x44, 0x72, 0x65,
		0x61, 0x6d, 0x20, 0x4f, 0x6e, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x41, 0x6d, 0x75, 0x73, 0x65, 0x20, 0x33, 0x47, 0x41,
		0x75, 0x72, 0x69, 0x69, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x72, 0x69, 0x69,
		0x20, 0x4d, 0x61, 0x67, 0x6e, 0x75, 0x6d, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x56, 0x69, 0x76,
		0x69, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x56, 0x69, 0x76, 0x69,
		0x64, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x78,
		0x43, 0x69, 0x74, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
		0x20, 0x24, 0x31, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x74, 0x65, 0x6e,
		0x73, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20,
		0x58, 0x54, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20,
		0x34, 0x47, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20,
		0x32, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x53, 0x77, 0x65, 0x65, 0x74, 0x53, 0x77, 0x65, 0x65,
		0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x34, 0x47,
		0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x20, 0x34, 0x47, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73,
		0x65, 0x20, 0x24, 0x31, 0x46, 0x6c, 0x75, 0x6f, 0x53, 0x35, 0x35, 0x34, 0x30, 0x32, 0x30, 0x4c,
		0x46, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x79, 0x50,
		0x61, 0x6e, 0x6f, 0x72, 0x61, 0x6d, 0x61, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x6c, 0x69, 0x6d, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x30, 0x30, 0x30, 0x50, 0x68, 0x6f,
		0x74, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x41, 0x63, 0x65, 0x4c, 0x69,
		0x66, 0x65, 0x20, 0x4a, 0x65, 0x74, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x53, 0x6b, 0x79, 0x4c, 0x69,
		0x66, 0x65, 0x20, 0x47, 0x65, 0x6f, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x5a, 0x65, 0x6e, 0x4c, 0x69,
		0x66, 0x65, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x42, 0x75, 0x7a, 0x7a,
		0x4c, 0x69, 0x66, 0x65, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x20, 0x34, 0x47, 0x46,
		0x53, 0x35, 0x30, 0x36, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x33, 0x46, 0x53, 0x34, 0x30,
		0x33, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x75, 0x73, 0x20, 0x31, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73,
		0x20, 0x36, 0x46, 0x53, 0x35, 0x31, 0x31, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x37, 0x46,
		0x53, 0x35, 0x30, 0x39, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x39, 0x46, 0x53, 0x34, 0x30,
		0x36, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x35, 0x46, 0x53, 0x34, 0x30, 0x34, 0x53,
		0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x33, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x32,
		0x46, 0x53, 0x34, 0x30, 0x37, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x36, 0x46, 0x53,
		0x34, 0x30, 0x31, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x31, 0x46, 0x53, 0x34, 0x30,
		0x32, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53, 0x35, 0x30, 0x31, 0x4e,
		0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x33, 0x46, 0x53, 0x35, 0x30, 0x32, 0x43, 0x69, 0x72, 0x72,
		0x75, 0x73, 0x20, 0x31, 0x46, 0x53, 0x35, 0x30, 0x37, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20,
		0x34, 0x46, 0x53, 0x35, 0x30, 0x35, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x37, 0x46, 0x53,
		0x35, 0x35, 0x31, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x34, 0x46, 0x53, 0x35, 0x31, 0x34,
		0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x38, 0x46, 0x53, 0x35, 0x35, 0x33, 0x43, 0x69, 0x72,
		0x72, 0x75, 0x73, 0x20, 0x39, 0x46, 0x53, 0x35, 0x35, 0x34, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x46, 0x48, 0x44, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x33, 0x46, 0x53, 0x35, 0x31, 0x37, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20,
		0x31, 0x31, 0x46, 0x53, 0x35, 0x31, 0x36, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x32,
		0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x33, 0x46, 0x53, 0x35, 0x32, 0x30, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x20, 0x31, 0x46, 0x53, 0x35, 0x32, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x31, 0x46, 0x53, 0x35, 0x32, 0x32, 0x43, 0x69, 0x72, 0x72,
		0x75, 0x73, 0x20, 0x31, 0x34, 0x46, 0x53, 0x35, 0x32, 0x33, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73,
		0x20, 0x31, 0x36, 0x46, 0x53, 0x35, 0x32, 0x34, 0x4b, 0x6e, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74,
		0x46, 0x53, 0x35, 0x32, 0x36, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x32, 0x46, 0x53, 0x35, 0x32, 0x37, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x37, 0x46,
		0x53, 0x35, 0x32, 0x38, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46,
		0x53, 0x35, 0x32, 0x39, 0xd0, 0xa1, 0x68, 0x61, 0x6d, 0x70, 0x46, 0x53, 0x35, 0x33, 0x30, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x58, 0x58, 0x4c, 0x46, 0x53, 0x34,
		0x35, 0x34, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x38, 0x46, 0x53, 0x34, 0x35, 0x32, 0x4e,
		0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53, 0x35, 0x31, 0x32, 0x4e, 0x69, 0x6d, 0x62,
		0x75, 0x73, 0x20, 0x31, 0x30, 0x46, 0x53, 0x35, 0x31, 0x30, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73,
		0x20, 0x31, 0x32, 0x46, 0x53, 0x34, 0x35, 0x31, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31,
		0x46, 0x53, 0x34, 0x30, 0x35, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x34, 0x46, 0x53,
		0x34, 0x30, 0x38, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x38, 0x46, 0x53, 0x34, 0x30,
		0x39, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x39, 0x46, 0x53, 0x34, 0x35, 0x35, 0x4e,
		0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x31, 0x46, 0x53, 0x34, 0x35, 0x36, 0x4e, 0x69, 0x6d,
		0x62, 0x75, 0x73, 0x20, 0x31, 0x34, 0x46, 0x53, 0x34, 0x35, 0x37, 0x4e, 0x69, 0x6d, 0x62, 0x75,
		0x73, 0x20, 0x31, 0x35, 0x46, 0x53, 0x34, 0x35, 0x39, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20,
		0x31, 0x36, 0x46, 0x53, 0x34, 0x35, 0x38, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x37,
		0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4a, 0x61, 0x7a, 0x7a, 0x57, 0x68, 0x69, 0x7a, 0x7a,
		0x50, 0x72, 0x69, 0x64, 0x65, 0x46, 0x69, 0x72, 0x65, 0x62, 0x69, 0x72, 0x64, 0x4d, 0x61, 0x72,
		0x61, 0x74, 0x68, 0x6f, 0x6e, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x45, 0x76, 0x6f, 0x6b, 0x65, 0x47,
		0x6c, 0x6f, 0x72, 0x79, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x31, 0x45, 0x72,
		0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x33, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f,
		0x20, 0x34, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x35, 0x45, 0x72, 0x61, 0x20,
		0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x36, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x39,
		0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x45, 0x6e, 0x65, 0x72, 0x67,
		0x79, 0x45, 0x72, 0x61, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x32, 0x52, 0x61, 0x64,
		0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x4d, 0x69,
		0x72, 0x61, 0x63, 0x6c, 0x65, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x32, 0x47, 0x65,
		0x6e, 0x69, 0x75, 0x73, 0x45, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x31, 0x45, 0x72,
		0x61, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x32, 0x45, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65,
		0x20, 0x34, 0x43, 0x68, 0x69, 0x63, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x48, 0x6f, 0x72,
		0x69, 0x7a, 0x6f, 0x6e, 0x20, 0x32, 0x56, 0x69, 0x73, 0x74, 0x61, 0x45, 0x67, 0x6f, 0x20, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x45, 0x76, 0x6f, 0x20, 0x54, 0x65, 0x63, 0x68, 0x20,
		0x31, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x33, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78,
		0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x32, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20,
		0x32, 0x43, 0x6f, 0x72, 0x61, 0x6c, 0x45, 0x76, 0x6f, 0x20, 0x43, 0x68, 0x69, 0x63, 0x20, 0x33,
		0x45, 0x76, 0x6f, 0x20, 0x54, 0x65, 0x63, 0x68, 0x20, 0x33, 0x45, 0x72, 0x61, 0x20, 0x53, 0x74,
		0x79, 0x6c, 0x65, 0x20, 0x33, 0x45, 0x72, 0x61, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x34,
		0x45, 0x76, 0x6f, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x35, 0x54, 0x6f, 0x72, 0x6e,
		0x61, 0x64, 0x6f, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x49, 0x51, 0x24, 0x31, 0x46, 0x6c, 0x79, 0x6c,
		0x69, 0x66, 0x65, 0x20, 0x24, 0x31, 0x46, 0x6f, 0x6e, 0x64, 0x69, 0x46, 0x6f, 0x6e, 0x6f, 0x73,
		0x4f, 0x33, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x65, 0x72, 0x53, 0x20, 0x54, 0x75, 0x72, 0x62,
		0x6f, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x6f, 0x72, 0x73, 0x74, 0x61, 0x72, 0x41, 0x6d, 0x6f, 0x73,
		0x74, 0x61, 0x20, 0x33, 0x47, 0x35, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x73, 0x46, 0x6f, 0x75, 0x72,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x31, 0x38, 0x35, 0x20, 0x53, 0x6b, 0x79, 0x20,
		0x32, 0x53, 0x31, 0x38, 0x36, 0x5f, 0x53, 0x6b, 0x79, 0x5f, 0x33, 0x53, 0x31, 0x38, 0x36, 0x20,
		0x53, 0x6b, 0x79, 0x20, 0x33, 0x53, 0x36, 0x31, 0x20, 0x45, 0x63, 0x6f, 0x20, 0x32, 0x53, 0x36,
		0x32, 0x5f, 0x45, 0x63, 0x6f, 0x5f, 0x33, 0x53, 0x36, 0x32, 0x20, 0x45, 0x63, 0x6f, 0x20, 0x33,
		0x53, 0x37, 0x31, 0x30, 0x20, 0x52, 0x75, 0x62, 0x79, 0x46, 0x6f, 0x75, 0x72, 0x65, 0x6c, 0x45,
		0x61, 0x73, 0x79, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x24, 0x31, 0x46, 0x6f, 0x78,
		0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x6e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x20, 0x4d, 0x24, 0x31, 0x46,
		0x6f, 0x78, 0x78, 0x44, 0x46, 0x72, 0x65, 0x65, 0x74, 0x65, 0x6c, 0x46, 0x54, 0x4a, 0x31, 0x35,
		0x32, 0x43, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61, 0x69, 0x20, 0x4d, 0x69, 0x79, 0x61, 0x62, 0x69,
		0x52, 0x65, 0x69, 0x20, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
		0x20, 0x35, 0x43, 0x72, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x57, 0x61, 0x76, 0x65, 0x46, 0x54,
		0x4a, 0x31, 0x36, 0x31, 0x41, 0x4d, 0x75, 0x73, 0x61, 0x73, 0x68, 0x69, 0x46, 0x54, 0x45, 0x31,
		0x37, 0x31, 0x41, 0x49, 0x63, 0x65, 0x20, 0x33, 0x49, 0x63, 0x65, 0x20, 0x32, 0x46, 0x54, 0x45,
		0x31, 0x36, 0x31, 0x47, 0x49, 0x63, 0x65, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x54,
		0x4a, 0x31, 0x36, 0x32, 0x45, 0x52, 0x61, 0x69, 0x6a, 0x69, 0x6e, 0x46, 0x54, 0x31, 0x34, 0x31,
		0x42, 0x4e, 0x69, 0x63, 0x6f, 0x58, 0x4d, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x32, 0x46,
		0x54, 0x4a, 0x31, 0x35, 0x32, 0x41, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x33, 0x50, 0x72,
		0x69, 0x6f, 0x72, 0x69, 0x20, 0x34, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x42, 0x50, 0x72, 0x69,
		0x6f, 0x72, 0x69, 0x20, 0x33, 0x53, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32,
		0x44, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61, 0x69, 0x20, 0x4b, 0x69, 0x77, 0x61, 0x6d, 0x69, 0x46,
		0x54, 0x4a, 0x31, 0x36, 0x32, 0x42, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61, 0x69, 0x20, 0x4b, 0x69,
		0x77, 0x61, 0x6d, 0x69, 0x20, 0x32, 0x46, 0x54, 0x4a, 0x31, 0x36, 0x31, 0x42, 0x53, 0x61, 0x6d,
		0x75, 0x72, 0x61, 0x69, 0x20, 0x52, 0x65, 0x69, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x45, 0x4b,
		0x61, 0x74, 0x61, 0x6e, 0x61, 0x20, 0x31, 0x53, 0x41, 0x4b, 0x55, 0x52, 0x41, 0x5f, 0x46, 0x54,
		0x45, 0x31, 0x53, 0x61, 0x6b, 0x75, 0x72, 0x61, 0x20, 0x46, 0x54, 0x45, 0x31, 0x46, 0x55, 0x4e,
		0x20, 0x50, 0x4c, 0x55, 0x53, 0x46, 0x75, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x72, 0x75,
		0x6e, 0x73, 0x69, 0x46, 0x75, 0x6a, 0x69, 0x74, 0x73, 0x75, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x35, 0x47, 0x20, 0x46, 0x2d, 0x35, 0x31, 0x41, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x31, 0x46, 0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x24, 0x31, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x4c, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58,
		0x20, 0x46, 0x2d, 0x30, 0x31, 0x4a, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20,
		0x46, 0x2d, 0x30, 0x31, 0x4b, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x46, 0x69, 0x74, 0x20,
		0x46, 0x2d, 0x30, 0x31, 0x48, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x58, 0x20, 0x46, 0x2d,
		0x30, 0x32, 0x45, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30,
		0x32, 0x47, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x45, 0x46, 0x20, 0x46, 0x4a, 0x4c, 0x32,
		0x31, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x5a, 0x20, 0x46, 0x4a, 0x4c, 0x32, 0x32, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x32, 0x48, 0x41, 0x72,
		0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x39, 0x20, 0x46, 0x2d, 0x35, 0x32, 0x41, 0x41, 0x72,
		0x72, 0x6f, 0x77, 0x73, 0x20, 0x4b, 0x69, 0x73, 0x73, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x44, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4b, 0x69, 0x73, 0x73, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x45,
		0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x46, 0x2d,
		0x30, 0x33, 0x46, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x53, 0x56, 0x20, 0x46, 0x2d, 0x30,
		0x33, 0x48, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4a, 0x20, 0x39, 0x30, 0x31, 0x46, 0x4a,
		0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x56, 0x20, 0x46, 0x2d, 0x30, 0x34, 0x45, 0x41, 0x72,
		0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x34, 0x47, 0x41, 0x72, 0x72,
		0x6f, 0x77, 0x73, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x46, 0x2d, 0x30, 0x35, 0x44, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x35, 0x46, 0x41, 0x72,
		0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x35, 0x4a, 0x41, 0x72, 0x72,
		0x6f, 0x77, 0x73, 0x20, 0x4b, 0x2d, 0x74, 0x61, 0x69, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0x42, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x34, 0x4b, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42,
		0x65, 0x20, 0x33, 0x20, 0x46, 0x2d, 0x30, 0x32, 0x4c, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0x42, 0x65, 0x20, 0x34, 0x20, 0x46, 0x2d, 0x34, 0x31, 0x41, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x42, 0x65, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x46, 0x2d, 0x34, 0x31, 0x42,
		0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x36, 0x45, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0xce, 0xbc, 0x20, 0x46, 0x2d, 0x30, 0x37, 0x44, 0x41, 0x72,
		0x72, 0x6f, 0x77, 0x73, 0x20, 0x57, 0x65, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x55, 0x20,
		0x38, 0x30, 0x31, 0x46, 0x4a, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x37, 0x45, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x38, 0x44, 0x41, 0x4e, 0x54, 0x45, 0x50,
		0x52, 0x49, 0x4d, 0x41, 0x20, 0x46, 0x2d, 0x30, 0x39, 0x44, 0x52, 0x61, 0x6b, 0x75, 0x2d, 0x52,
		0x61, 0x6b, 0x75, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50,
		0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x46, 0x2d, 0x30, 0x39, 0x45, 0x52, 0x61, 0x6b, 0x75,
		0x2d, 0x52, 0x61, 0x6b, 0x75, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x46, 0x2d, 0x35, 0x32, 0x42, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x58, 0x20, 0x46,
		0x2d, 0x31, 0x30, 0x44, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4d, 0x65, 0x20, 0x46, 0x2d,
		0x31, 0x31, 0x44, 0x46, 0x2d, 0x31, 0x32, 0x43, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4d,
		0x30, 0x33, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x52, 0x4d, 0x30, 0x32, 0x41, 0x72, 0x72,
		0x6f, 0x77, 0x73, 0x20, 0x42, 0x5a, 0x30, 0x32, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x52,
		0x58, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4d, 0x30, 0x34, 0x20, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x75, 0x6d, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4d, 0x24, 0x31, 0x41, 0x72, 0x72,
		0x6f, 0x77, 0x73, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x46, 0x41, 0x52, 0x54, 0x4d, 0x39,
		0x33, 0x33, 0x4b, 0x5a, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x54, 0x61, 0x62, 0x20, 0x4d,
		0x35, 0x30, 0x34, 0x2f, 0x48, 0x41, 0x34, 0x53, 0x74, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x63,
		0x46, 0x75, 0x6e, 0x61, 0x69, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x35, 0x24, 0x31, 0x76, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x76, 0x32, 0x46, 0x31, 0x30, 0x34, 0x45, 0x56, 0x49, 0x49,
		0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x30, 0x34, 0x45, 0x56, 0x49, 0x49, 0x46, 0x75, 0x74, 0x75,
		0x72, 0x65, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f,
		0x6c, 0x6f, 0x67, 0x79, 0x46, 0x78, 0x74, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x31, 0x20, 0x58, 0x47,
		0x2d, 0x54, 0x69, 0x44, 0x45, 0x53, 0x68, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x37, 0x53, 0x68, 0x69,
		0x6e, 0x69, 0x6e, 0x67, 0x20, 0x37, 0x47, 0x2d, 0x54, 0x69, 0x44, 0x45, 0x20, 0x56, 0x36, 0x45,
		0x58, 0x54, 0x52, 0x45, 0x4d, 0x45, 0x20, 0x58, 0x39, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65,
		0x20, 0x58, 0x39, 0x20, 0x45, 0x58, 0x31, 0x30, 0x45, 0x58, 0x31, 0x30, 0x47, 0x2d, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x20, 0x24, 0x31, 0x53, 0x74, 0x65, 0x6c,
		0x6c, 0x61, 0x47, 0x45, 0x4f, 0x46, 0x4f, 0x58, 0x4d, 0x49, 0x44, 0x24, 0x31, 0x47, 0x45, 0x4f,
		0x5a, 0x4f, 0x4e, 0x47, 0x46, 0x69, 0x76, 0x65, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
		0x74, 0x20, 0x47, 0x6f, 0x6c, 0x64, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65,
		0x6e, 0x74, 0x20, 0x47, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69,
		0x64, 0x65, 0x6e, 0x74, 0x20, 0x47, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x31, 0x50, 0x72, 0x65,
		0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x58, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x50,
		0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69,
		0x64, 0x65, 0x6e, 0x74, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x20, 0x24, 0x31, 0x50,
		0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x47, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x47, 0x31, 0x30, 0x20, 0x46, 0x61,
		0x73, 0x68, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x47,
		0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x54, 0x61, 0x6e, 0x67,
		0x6f, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x6b, 0x47, 0x50, 0x61, 0x64, 0x24,
		0x31, 0x47, 0x49, 0x52, 0x41, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x41, 0x42, 0x35, 0x47, 0x4c, 0x4f,
		0x4e, 0x59, 0x58, 0x51, 0x75, 0x61, 0x72, 0x74, 0x7a, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x58, 0x47,
		0x4c, 0x58, 0x20, 0x41, 0x53, 0x41, 0x41, 0x73, 0x61, 0x4d, 0x61, 0x61, 0x64, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x61, 0x61, 0x64, 0x47, 0x4f, 0x43, 0x4c, 0x45, 0x56, 0x45, 0x52, 0x51, 0x55,
		0x41, 0x4e, 0x54, 0x55, 0x4d, 0x20, 0x24, 0x31, 0x49, 0x4e, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x41,
		0x20, 0x24, 0x31, 0x54, 0x51, 0x37, 0x30, 0x30, 0x4e, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d,
		0x20, 0x37, 0x30, 0x30, 0x4e, 0x4f, 0x52, 0x49, 0x4f, 0x4e, 0x37, 0x6f, 0x4c, 0x4f, 0x52, 0x49,
		0x4f, 0x4e, 0x20, 0x37, 0x30, 0x4c, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x20, 0x37, 0x30,
		0x30, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x5f, 0x31, 0x30, 0x31, 0x30, 0x5f, 0x4c, 0x69,
		0x74, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x31, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x32, 0x20, 0x24, 0x31, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31,
		0x20, 0x24, 0x32, 0x20, 0x52, 0x75, 0x67, 0x67, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75,
		0x6d, 0x20, 0x24, 0x31, 0x20, 0x52, 0x75, 0x67, 0x67, 0x65, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x51,
		0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x5f, 0x49, 0x49, 0x5f, 0x35, 0x30, 0x30, 0x5f,
		0x4e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x32, 0x20, 0x35, 0x30, 0x30, 0x20, 0x4e,
		0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51,
		0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x4e, 0x45, 0x54, 0x42,
		0x4f, 0x4f, 0x4b, 0x20, 0x52, 0x31, 0x30, 0x33, 0x4e, 0x65, 0x74, 0x62, 0x6f, 0x6f, 0x6b, 0x20,
		0x52, 0x31, 0x30, 0x33, 0x54, 0x65, 0x72, 0x72, 0x61, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x62, 0x72,
		0x61, 0x20, 0x39, 0x37, 0x47, 0x4f, 0x4f, 0x44, 0x54, 0x45, 0x4c, 0x47, 0x31, 0x30, 0x5f, 0x45,
		0x45, 0x41, 0x47, 0x31, 0x30, 0x43, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x35, 0x30, 0x47, 0x54, 0x4d,
		0x45, 0x44, 0x49, 0x41, 0x47, 0x61, 0x6c, 0x61, 0x63, 0x74, 0x69, 0x63, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x49, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x49,
		0x20, 0x69, 0x54, 0x56, 0x39, 0x31, 0x32, 0x69, 0x54, 0x56, 0x39, 0x31, 0x32, 0x47, 0x49, 0x20,
		0x55, 0x4e, 0x49, 0x32, 0x55, 0x6e, 0x69, 0x20, 0x32, 0x47, 0x49, 0x20, 0x46, 0x6c, 0x79, 0x20,
		0x54, 0x32, 0x46, 0x6c, 0x79, 0x20, 0x54, 0x32, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x47, 0x61, 0x72,
		0x6d, 0x69, 0x6e, 0x2d, 0x41, 0x73, 0x75, 0x73, 0x47, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x66, 0x6f,
		0x6e, 0x65, 0x20, 0x24, 0x31, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x47, 0x57, 0x41, 0x54,
		0x38, 0x2d, 0x31, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x38, 0x22, 0x47, 0x61, 0x7a, 0x65,
		0x72, 0x47, 0x61, 0x7a, 0x65, 0x72, 0x5f, 0x54, 0x56, 0x47, 0x65, 0x61, 0x6e, 0x65, 0x65, 0x47,
		0x65, 0x61, 0x6e, 0x74, 0x47, 0x65, 0x61, 0x72, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47,
		0x65, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x47, 0x4d, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x33, 0x30, 0x30,
		0x47, 0x4d, 0x20, 0x31, 0x30, 0x47, 0x33, 0x31, 0x30, 0x47, 0x4d, 0x20, 0x32, 0x31, 0x47, 0x35,
		0x31, 0x30, 0x47, 0x4d, 0x20, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x33, 0x31, 0x32,
		0x47, 0x4d, 0x20, 0x32, 0x32, 0x47, 0x35, 0x31, 0x32, 0x47, 0x4d, 0x20, 0x32, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x47, 0x37, 0x30, 0x30, 0x47, 0x4d, 0x20, 0x32, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x47, 0x33, 0x30, 0x31, 0x47, 0x4d, 0x20, 0x32, 0x30, 0x47, 0x35, 0x30, 0x31, 0x47, 0x4d, 0x20,
		0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4d, 0x20, 0x24, 0x31, 0x44, 0x47, 0x4d, 0x20, 0x36,
		0x47, 0x4d, 0x20, 0x24, 0x31, 0x47, 0x4d, 0x38, 0x20, 0x67, 0x6f, 0x47, 0x4d, 0x20, 0x38, 0x20,
		0x47, 0x6f, 0x47, 0x30, 0x30, 0x38, 0x47, 0x4d, 0x20, 0x39, 0x20, 0x47, 0x6f, 0x47, 0x4d, 0x20,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4d, 0x20, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x69,
		0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x24, 0x31, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
		0x65, 0x72, 0x79, 0x20, 0x49, 0x49, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x4d, 0x20, 0x44, 0x69,
		0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x49, 0x49, 0x47, 0x4d, 0x20, 0x44, 0x69, 0x73,
		0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x74, 0x61, 0x62, 0x20, 0x38, 0x44, 0x69, 0x73, 0x63,
		0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x38, 0x34, 0x47, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x20, 0x34, 0x47, 0x34, 0x47, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x47, 0x65, 0x6f, 0x74,
		0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x47, 0x65, 0x6f, 0x74, 0x65,
		0x78, 0x47, 0x66, 0x6f, 0x6e, 0x65, 0x47, 0x68, 0x69, 0x61, 0x53, 0x76, 0x65, 0x67, 0x6c, 0x69,
		0x6f, 0x20, 0x24, 0x31, 0x51, 0x53, 0x37, 0x30, 0x32, 0x47, 0x48, 0x49, 0x41, 0x5f, 0x5a, 0x45,
		0x55, 0x53, 0x5f, 0x33, 0x47, 0x5a, 0x65, 0x75, 0x73, 0x20, 0x33, 0x47, 0x56, 0x45, 0x43, 0x54,
		0x4f, 0x52, 0x5f, 0x53, 0x4c, 0x49, 0x4d, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x53, 0x6c,
		0x69, 0x6d, 0x47, 0x48, 0x49, 0x41, 0x5f, 0x41, 0x58, 0x49, 0x53, 0x37, 0x50, 0x41, 0x78, 0x69,
		0x73, 0x20, 0x37, 0x50, 0x41, 0x58, 0x49, 0x53, 0x37, 0x5f, 0x53, 0x4c, 0x49, 0x4d, 0x41, 0x78,
		0x69, 0x73, 0x20, 0x37, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x41, 0x58, 0x49, 0x53, 0x37, 0x5f, 0x4c,
		0x45, 0x44, 0x41, 0x78, 0x69, 0x73, 0x20, 0x37, 0x20, 0x4c, 0x45, 0x44, 0x47, 0x48, 0x49, 0x41,
		0x5f, 0x41, 0x58, 0x49, 0x53, 0x37, 0x5f, 0x33, 0x47, 0x41, 0x78, 0x69, 0x73, 0x20, 0x37, 0x20,
		0x33, 0x47, 0x47, 0x48, 0x49, 0x41, 0x5f, 0x41, 0x58, 0x49, 0x53, 0x37, 0x41, 0x78, 0x69, 0x73,
		0x20, 0x37, 0x41, 0x37, 0x5f, 0x57, 0x46, 0x41, 0x37, 0x20, 0x57, 0x69, 0x46, 0x69, 0x56, 0x65,
		0x63, 0x74, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x54, 0x41, 0x37, 0x57, 0x46,
		0x41, 0x37, 0x20, 0x52, 0x4f, 0x4a, 0x41, 0x47, 0x54, 0x41, 0x37, 0x50, 0x4c, 0x55, 0x53, 0x41,
		0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x52, 0x45, 0x4f, 0x5f, 0x54, 0x41, 0x42, 0x38, 0x47,
		0x54, 0x52, 0x45, 0x4f, 0x20, 0x54, 0x41, 0x42, 0x38, 0x47, 0x47, 0x54, 0x20, 0x4b, 0x49, 0x44,
		0x53, 0x20, 0x37, 0x47, 0x54, 0x56, 0x52, 0x31, 0x30, 0x53, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x47, 0x54, 0x41, 0x42, 0x50,
		0x4e, 0x44, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x50, 0x61, 0x6e, 0x64, 0x61, 0x56, 0x45, 0x4e, 0x55,
		0x53, 0x37, 0x56, 0x45, 0x4e, 0x55, 0x53, 0x20, 0x37, 0x47, 0x68, 0x6f, 0x6e, 0x67, 0x47, 0x68,
		0x6f, 0x73, 0x74, 0x47, 0x30, 0x33, 0x47, 0x69, 0x67, 0x61, 0x62, 0x79, 0x74, 0x65, 0x52, 0x6f,
		0x6d, 0x61, 0x20, 0x52, 0x32, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x6f, 0x6d, 0x61,
		0x20, 0x52, 0x32, 0x53, 0x69, 0x6d, 0x62, 0x61, 0x20, 0x53, 0x58, 0x31, 0x47, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x53, 0x69, 0x6d, 0x62, 0x61, 0x20, 0x53, 0x58, 0x31, 0x47, 0x69, 0x67, 0x61,
		0x73, 0x65, 0x74, 0x47, 0x69, 0x67, 0x61, 0x73, 0x65, 0x74, 0x20, 0x51, 0x56, 0x24, 0x31, 0x47,
		0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x53, 0x24, 0x31, 0x47, 0x53, 0x35, 0x37, 0x2d,
		0x36, 0x4d, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x53, 0x35, 0x35, 0x2d, 0x36, 0x4d, 0x45, 0x45,
		0x39, 0x34, 0x30, 0x2d, 0x32, 0x37, 0x39, 0x35, 0x2d, 0x30, 0x30, 0x47, 0x53, 0x34, 0x47, 0x53,
		0x35, 0x33, 0x2d, 0x36, 0x4d, 0x45, 0x20, 0x50, 0x75, 0x72, 0x65, 0x47, 0x69, 0x6e, 0x69, 0x57,
		0x24, 0x31, 0x53, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x57, 0x31, 0x37, 0x57, 0x30, 0x38, 0x53,
		0x35, 0x47, 0x69, 0x6e, 0x7a, 0x7a, 0x75, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61,
		0x74, 0x65, 0x47, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x47, 0x4e, 0x50, 0x32, 0x31, 0x4d, 0x30, 0x32,
		0x4d, 0x31, 0x32, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4e, 0x38, 0x31, 0x30,
		0x47, 0x4e, 0x38, 0x30, 0x30, 0x33, 0x4c, 0x4d, 0x36, 0x4c, 0x57, 0x42, 0x4c, 0x37, 0x35, 0x31,
		0x39, 0x53, 0x36, 0x73, 0x57, 0x42, 0x4c, 0x37, 0x33, 0x36, 0x31, 0x4d, 0x36, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x32, 0x30, 0x31, 0x39, 0x30, 0x36, 0x31,
		0x39, 0x47, 0x4b, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x32, 0x30, 0x31, 0x39, 0x30, 0x34, 0x31, 0x38,
		0x51, 0x4b, 0x36, 0x47, 0x4e, 0x38, 0x30, 0x30, 0x33, 0x4d, 0x36, 0x47, 0x41, 0x55, 0x30, 0x38,
		0x32, 0x30, 0x4b, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4e, 0x53, 0x32, 0x31, 0x36, 0x31, 0x42,
		0x4d, 0x31, 0x38, 0x47, 0x4e, 0x24, 0x31, 0x4d, 0x37, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d,
		0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x31,
		0x31, 0x50, 0x35, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x35, 0x20, 0x6c, 0x69, 0x74, 0x65, 0x20,
		0x43, 0x44, 0x4d, 0x41, 0x4d, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x43, 0x44, 0x4d, 0x41,
		0x50, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x38, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x36, 0x20, 0x4d,
		0x69, 0x72, 0x72, 0x6f, 0x72, 0x47, 0x4c, 0x59, 0x31, 0x36, 0x32, 0x30, 0x4d, 0x35, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x46, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x31, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x46, 0x31, 0x30, 0x33, 0x24, 0x31, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x44, 0x31, 0x47,
		0x6c, 0x6f, 0x62, 0x65, 0x78, 0x58, 0x38, 0x47, 0x55, 0x36, 0x30, 0x31, 0x32, 0x42, 0x47, 0x6c,
		0x6f, 0x66, 0x69, 0x69, 0x73, 0x68, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x55, 0x47, 0x6f, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47, 0x4f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x47, 0x4f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x6f, 0x20,
		0x4f, 0x6e, 0x79, 0x78, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x4f, 0x20, 0x4f, 0x6e, 0x79, 0x78,
		0x20, 0x48, 0x44, 0x47, 0x6f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x48, 0x44, 0x47, 0x4f, 0x20,
		0x4f, 0x6e, 0x79, 0x78, 0x47, 0x6f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x47, 0x6f, 0x24, 0x31, 0x47,
		0x6f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x48, 0x31, 0x2d, 0x43, 0x2d, 0x41, 0x4c, 0x41, 0x44, 0x45,
		0x4e, 0x47, 0x57, 0x35, 0x47, 0x6f, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x46, 0x31,
		0x30, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x46, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x46, 0x33, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x46, 0x33, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x46,
		0x39, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x37, 0x5f, 0x33, 0x47, 0x54,
		0x65, 0x61, 0x6d, 0x20, 0x37, 0x2e, 0x30, 0x20, 0x33, 0x47, 0x47, 0x6f, 0x6c, 0x64, 0x4d, 0x61,
		0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x74, 0x61, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x69,
		0x2d, 0x39, 0x31, 0x30, 0x4e, 0x65, 0x74, 0x74, 0x61, 0x20, 0x33, 0x42, 0x45, 0x4e, 0x47, 0x41,
		0x4c, 0x5f, 0x36, 0x42, 0x65, 0x6e, 0x67, 0x61, 0x6c, 0x20, 0x36, 0x44, 0x45, 0x54, 0x52, 0x4f,
		0x49, 0x54, 0x20, 0x33, 0x44, 0x65, 0x74, 0x72, 0x6f, 0x69, 0x74, 0x20, 0x33, 0x47, 0x6f, 0x6c,
		0x79, 0x47, 0x6f, 0x6d, 0x65, 0x43, 0x37, 0x32, 0x43, 0x37, 0x31, 0x43, 0x35, 0x31, 0x4b, 0x31,
		0x55, 0x31, 0x55, 0x37, 0x55, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x55, 0x39, 0x47, 0x6f, 0x6f,
		0x67, 0x6c, 0x65, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e,
		0x65, 0x78, 0x75, 0x73, 0x41, 0x4f, 0x53, 0x50, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x61, 0x6d, 0x6d,
		0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x35, 0x41, 0x4f, 0x53,
		0x50, 0x20, 0x6f, 0x6e, 0x20, 0x4d, 0x61, 0x6e, 0x74, 0x61, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20,
		0x31, 0x30, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x69, 0x62,
		0x65, 0x72, 0x20, 0x24, 0x31, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43,
		0x68, 0x72, 0x6f, 0x6d, 0x65, 0x63, 0x61, 0x73, 0x74, 0x20, 0x48, 0x44, 0x43, 0x68, 0x72, 0x6f,
		0x6d, 0x65, 0x63, 0x61, 0x73, 0x74, 0x20, 0x48, 0x44, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29,
		0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x63, 0x61, 0x73, 0x74, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54, 0x56, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x69,
		0x78, 0x65, 0x6c, 0x20, 0x58, 0x4c, 0x62, 0x6c, 0x75, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x69,
		0x78, 0x65, 0x6c, 0x20, 0x33, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x33, 0x20, 0x58, 0x4c, 0x50,
		0x69, 0x78, 0x65, 0x6c, 0x20, 0x32, 0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x33,
		0x61, 0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x20, 0x58, 0x4c, 0x50, 0x49,
		0x58, 0x45, 0x4c, 0x34, 0x58, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x20, 0x58, 0x41, 0x4f,
		0x53, 0x50, 0x20, 0x6f, 0x6e, 0x20, 0x73, 0x75, 0x6e, 0x66, 0x69, 0x73, 0x68, 0x50, 0x69, 0x78,
		0x65, 0x6c, 0x20, 0x34, 0x61, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x61, 0x20, 0x28, 0x35,
		0x47, 0x29, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x24, 0x31, 0x61, 0x47, 0x30, 0x31, 0x31, 0x41,
		0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x32, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x20, 0x32, 0x58,
		0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x69, 0x78,
		0x65, 0x6c, 0x20, 0x24, 0x31, 0x50, 0x69, 0x70, 0x69, 0x74, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20,
		0x43, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x6f, 0x50, 0x69, 0x78,
		0x65, 0x6c, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x44, 0x54, 0x2d, 0x32, 0x4e, 0x65, 0x78, 0x75, 0x73,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x49,
		0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x36, 0x49, 0x36, 0x53, 0x49, 0x36, 0x53, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x49, 0x37, 0x49, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x34, 0x20, 0x4d,
		0x65, 0x67, 0x61, 0x47, 0x6f, 0x6f, 0x77, 0x65, 0x65, 0x6c, 0x47, 0x70, 0x6c, 0x75, 0x73, 0x47,
		0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x65, 0x47, 0x52, 0x41, 0x44, 0x49, 0x45, 0x4e, 0x54,
		0x45, 0x47, 0x72, 0x61, 0x70, 0x65, 0x47, 0x54, 0x4d, 0x2d, 0x35, 0x24, 0x31, 0x47, 0x72, 0x65,
		0x61, 0x74, 0x20, 0x41, 0x73, 0x69, 0x61, 0x47, 0x72, 0x65, 0x65, 0x47, 0x30, 0x35, 0x31, 0x35,
		0x44, 0x54, 0x6f, 0x73, 0x6f, 0x74, 0x20, 0x35, 0x47, 0x47, 0x30, 0x36, 0x31, 0x35, 0x44, 0x54,
		0x6f, 0x73, 0x6f, 0x74, 0x20, 0x37, 0x47, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x4f, 0x72, 0x61,
		0x6e, 0x67, 0x65, 0x47, 0x4f, 0x20, 0x35, 0x35, 0x33, 0x30, 0x33, 0x43, 0x35, 0x20, 0x47, 0x4f,
		0x47, 0x72, 0x65, 0x65, 0x6e, 0x74, 0x65, 0x6c, 0x58, 0x31, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74,
		0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x52, 0x45, 0x47, 0x41, 0x4c, 0x20,
		0x52, 0x32, 0x52, 0x65, 0x67, 0x61, 0x6c, 0x20, 0x52, 0x32, 0x52, 0x65, 0x67, 0x61, 0x6c, 0x47,
		0x72, 0x65, 0x74, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x42, 0x65, 0x72, 0x77, 0x65, 0x72, 0x74, 0x47,
		0x72, 0x75, 0x6e, 0x64, 0x69, 0x67, 0x47, 0x24, 0x31, 0x41, 0x46, 0x54, 0x45, 0x55, 0x30, 0x31,
		0x34, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x37, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x41, 0x46, 0x54, 0x45, 0x55, 0x46, 0x46, 0x30, 0x31, 0x34, 0x4f, 0x4c, 0x45,
		0x44, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x46, 0x54, 0x45, 0x55,
		0x30, 0x31, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x36, 0x20, 0x48, 0x44, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x47, 0x74, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
		0x79, 0x20, 0x38, 0x73, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x39, 0x58, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x75,
		0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x48, 0x31, 0x33, 0x33, 0x42, 0x65, 0x74, 0x61, 0x63, 0x72,
		0x75, 0x78, 0x48, 0x39, 0x36, 0x4d, 0x61, 0x78, 0x20, 0x52, 0x4b, 0x24, 0x31, 0x4d, 0x61, 0x78,
		0x20, 0x58, 0x32, 0x4d, 0x61, 0x78, 0x20, 0x56, 0x31, 0x31, 0x48, 0x41, 0x4f, 0x51, 0x49, 0x4e,
		0x48, 0x41, 0x4f, 0x56, 0x4d, 0x48, 0x44, 0x43, 0x48, 0x31, 0x30, 0x5f, 0x4f, 0x4e, 0x45, 0x48,
		0x31, 0x30, 0x20, 0x4f, 0x6e, 0x65, 0x48, 0x45, 0x52, 0x4f, 0x53, 0x50, 0x2d, 0x30, 0x30, 0x31,
		0x48, 0x49, 0x50, 0x45, 0x52, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x20, 0x53, 0x54, 0x49, 0x43, 0x4b,
		0x20, 0x34, 0x4b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34,
		0x4b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x20, 0x54, 0x56, 0x20, 0x24, 0x31, 0x48, 0x4b, 0x50, 0x72,
		0x6f, 0x48, 0x4c, 0x4c, 0x4f, 0x48, 0x4f, 0x54, 0x52, 0x45, 0x41, 0x4c, 0x53, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x50, 0x43, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48, 0x50, 0x48, 0x50,
		0x20, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x36, 0x20, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x20, 0x54,
		0x61, 0x62, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x36, 0x20, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x54,
		0x61, 0x62, 0x48, 0x50, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x53, 0x6c, 0x61, 0x74, 0x65,
		0x20, 0x32, 0x31, 0x63, 0x6d, 0x5f, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x6f, 0x69, 0x6e,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x43,
		0x6f, 0x6d, 0x70, 0x61, 0x71, 0x20, 0x24, 0x31, 0x48, 0x50, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x53,
		0x6c, 0x61, 0x74, 0x65, 0x20, 0x38, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20,
		0x38, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x69, 0x50, 0x41, 0x51, 0x20, 0x24, 0x31,
		0x56, 0x65, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x48, 0x50,
		0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x38, 0x32, 0x30, 0x20, 0x47,
		0x32, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x38, 0x32, 0x30, 0x20, 0x47,
		0x32, 0x5a, 0x32, 0x34, 0x30, 0x20, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x57, 0x6f, 0x72, 0x6b,
		0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x54, 0x43, 0x55, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x55, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55,
		0x31, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x55,
		0x31, 0x31, 0x20, 0x45, 0x79, 0x65, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x69, 0x6f, 0x45, 0x76, 0x6f,
		0x20, 0x33, 0x47, 0x45, 0x76, 0x6f, 0x20, 0x34, 0x47, 0x55, 0x31, 0x31, 0x4f, 0x6e, 0x65, 0x4f,
		0x6e, 0x65, 0x20, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4f, 0x6e, 0x65, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x32, 0x4f, 0x6e, 0x65, 0x20,
		0x58, 0x31, 0x30, 0x4a, 0x4a, 0x20, 0x4f, 0x6e, 0x65, 0x4a, 0x20, 0x42, 0x75, 0x74, 0x74, 0x65,
		0x72, 0x66, 0x6c, 0x79, 0x42, 0x75, 0x74, 0x74, 0x65, 0x72, 0x66, 0x6c, 0x79, 0x20, 0x53, 0x4f,
		0x6e, 0x65, 0x20, 0x4d, 0x39, 0x5f, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x43, 0x61, 0x6d, 0x65,
		0x72, 0x61, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x45, 0x64,
		0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39, 0x4f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x20, 0x53, 0x49, 0x4d, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x37, 0x4f, 0x6e, 0x65,
		0x20, 0x4d, 0x38, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x38, 0x20, 0x45, 0x79, 0x65, 0x4f, 0x6e, 0x65,
		0x20, 0x45, 0x38, 0x4f, 0x6e, 0x65, 0x20, 0x45, 0x39, 0x4f, 0x6e, 0x65, 0x20, 0x45, 0x39, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x39, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x65,
		0x6d, 0x69, 0x78, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x2b, 0x4f, 0x6e, 0x65, 0x20, 0x41, 0x39, 0x41,
		0x44, 0x52, 0x36, 0x33, 0x30, 0x30, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x49, 0x6e, 0x63, 0x72,
		0x65, 0x64, 0x69, 0x62, 0x6c, 0x65, 0x48, 0x54, 0x43, 0x36, 0x34, 0x33, 0x35, 0x4c, 0x56, 0x57,
		0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x44, 0x4e, 0x41, 0x41, 0x44, 0x52, 0x36, 0x34, 0x30, 0x30,
		0x4c, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6c, 0x74, 0x41, 0x44, 0x52, 0x36,
		0x34, 0x31, 0x30, 0x4c, 0x52, 0x41, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x49, 0x6e, 0x63, 0x72,
		0x65, 0x64, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x33, 0x53, 0x50, 0x56, 0x20, 0x45, 0x36, 0x30, 0x30,
		0x53, 0x50, 0x56, 0x20, 0x45, 0x36, 0x35, 0x30, 0x56, 0x6f, 0x78, 0x32, 0x50, 0x59, 0x42, 0x32,
		0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20,
		0x36, 0x32, 0x36, 0x53, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x35, 0x31, 0x30, 0x44, 0x65,
		0x73, 0x69, 0x72, 0x65, 0x20, 0x35, 0x33, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x33,
		0x31, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x33, 0x32, 0x30, 0x44, 0x65, 0x73, 0x69,
		0x72, 0x65, 0x20, 0x36, 0x30, 0x38, 0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x31,
		0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x30, 0x31, 0x44, 0x65, 0x73, 0x69, 0x72,
		0x65, 0x20, 0x36, 0x32, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x32, 0x36, 0x44,
		0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x38, 0x31, 0x36, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20,
		0x35, 0x32, 0x36, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x39, 0x73, 0x44, 0x65, 0x73,
		0x69, 0x72, 0x65, 0x20, 0x36, 0x32, 0x30, 0x47, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49,
		0x4d, 0x45, 0x78, 0x6f, 0x64, 0x75, 0x73, 0x20, 0x31, 0x55, 0x31, 0x39, 0x65, 0x44, 0x65, 0x73,
		0x69, 0x72, 0x65, 0x20, 0x31, 0x30, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x44, 0x65,
		0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x30, 0x20, 0x45, 0x76,
		0x6f, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x65,
		0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x53, 0x74, 0x79,
		0x6c, 0x65, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x48, 0x44, 0x32, 0x48, 0x44, 0x32, 0x50, 0x37, 0x31,
		0x35, 0x61, 0x46, 0x6c, 0x79, 0x65, 0x72, 0x46, 0x6c, 0x79, 0x65, 0x72, 0x20, 0x24, 0x31, 0x4f,
		0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x24, 0x31, 0x20, 0x28, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74,
		0x29, 0x57, 0x69, 0x6c, 0x64, 0x66, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x48, 0x61, 0x66, 0x75, 0x72, 0x79, 0x47, 0x54, 0x32, 0x30, 0x48, 0x61, 0x69, 0x65, 0x72,
		0x41, 0x32, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x4e, 0x46, 0x43, 0x41, 0x6c, 0x70, 0x68, 0x61,
		0x20, 0x41, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4e, 0x46, 0x43, 0x41, 0x34, 0x5f, 0x4c,
		0x69, 0x74, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x41, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x48, 0x4d, 0x2d, 0x4e, 0x35, 0x30, 0x35, 0x2d, 0x46, 0x4c, 0x49, 0x38, 0x53, 0x35, 0x20, 0x53,
		0x69, 0x6c, 0x6b, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x45, 0x31, 0x33, 0x48,
		0x4d, 0x2d, 0x4e, 0x37, 0x30, 0x30, 0x2d, 0x46, 0x4c, 0x48, 0x4d, 0x2d, 0x4e, 0x37, 0x30, 0x31,
		0x2d, 0x46, 0x4c, 0x48, 0x4d, 0x2d, 0x4e, 0x35, 0x30, 0x31, 0x2d, 0x46, 0x4c, 0x4c, 0x35, 0x36,
		0x48, 0x4d, 0x2d, 0x49, 0x35, 0x35, 0x39, 0x2d, 0x46, 0x4c, 0x4c, 0x35, 0x35, 0x73, 0x48, 0x4d,
		0x2d, 0x49, 0x35, 0x36, 0x30, 0x2d, 0x46, 0x4c, 0x47, 0x37, 0x73, 0x48, 0x4d, 0x2d, 0x47, 0x35,
		0x35, 0x33, 0x2d, 0x46, 0x4c, 0x47, 0x35, 0x31, 0x50, 0x32, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d,
		0x61, 0x78, 0x20, 0x43, 0x34, 0x36, 0x42, 0x32, 0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61,
		0x78, 0x20, 0x45, 0x43, 0x68, 0x61, 0x69, 0x65, 0x72, 0x41, 0x54, 0x56, 0x6e, 0x69, 0x70, 0x70,
		0x6f, 0x72, 0x69, 0x68, 0x61, 0x69, 0x65, 0x72, 0x41, 0x54, 0x56, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x54, 0x56, 0x68, 0x61, 0x69, 0x65, 0x72, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x44, 0x56, 0x42, 0x32, 0x4b, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x44, 0x56, 0x42, 0x32, 0x4b, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x46, 0x46, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x61, 0x69, 0x70,
		0x61, 0x69, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x53, 0x36, 0x48, 0x61, 0x6d, 0x6c, 0x65, 0x74,
		0x5a, 0x65, 0x6c, 0x69, 0x67, 0x20, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x48, 0x61, 0x6d, 0x6d,
		0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78,
		0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x78, 0x70, 0x6c, 0x6f,
		0x72, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x32, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x20, 0x32, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x32, 0x46, 0x6f, 0x72, 0x63, 0x65,
		0x49, 0x72, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x49, 0x72, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6c, 0x6f,
		0x72, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20,
		0x32, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x61, 0x6d,
		0x6d, 0x65, 0x72, 0x5f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x5f, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x35, 0x47, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x32, 0x5f, 0x50, 0x52, 0x4f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x5f, 0x33, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x33, 0x48, 0x61, 0x6e, 0x64, 0x68, 0x65, 0x6c, 0x64, 0x48, 0x61, 0x6e,
		0x6e, 0x53, 0x70, 0x72, 0x65, 0x65, 0x53, 0x4e, 0x31, 0x41, 0x54, 0x37, 0x31, 0x57, 0x28, 0x42,
		0x29, 0x53, 0x4e, 0x37, 0x30, 0x54, 0x33, 0x31, 0x53, 0x4e, 0x37, 0x30, 0x54, 0x33, 0x53, 0x4e,
		0x37, 0x30, 0x54, 0x35, 0x31, 0x41, 0x53, 0x4e, 0x39, 0x37, 0x54, 0x34, 0x31, 0x57, 0x54, 0x37,
		0x2d, 0x51, 0x43, 0x53, 0x4e, 0x41, 0x54, 0x37, 0x31, 0x42, 0x55, 0x45, 0x48, 0x61, 0x72, 0x64,
		0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x4f, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x20, 0x24, 0x31, 0x48,
		0x61, 0x72, 0x70, 0x65, 0x72, 0x48, 0x61, 0x72, 0x74, 0x65, 0x6e, 0x73, 0x48, 0x61, 0x73, 0x65,
		0x65, 0x48, 0x61, 0x74, 0x68, 0x77, 0x61, 0x79, 0x48, 0x65, 0x61, 0x64, 0x57, 0x6f, 0x6c, 0x66,
		0x48, 0x50, 0x61, 0x64, 0x24, 0x31, 0x48, 0x65, 0x6c, 0x69, 0x6f, 0x48, 0x65, 0x78, 0x61, 0x42,
		0x79, 0x74, 0x65, 0x58, 0x37, 0x48, 0x65, 0x7a, 0x69, 0x72, 0x65, 0x48, 0x69, 0x42, 0x6f, 0x6f,
		0x73, 0x74, 0x20, 0x24, 0x31, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x47, 0x6f, 0x56, 0x48, 0x49,
		0x58, 0x2d, 0x34, 0x30, 0x46, 0x31, 0x35, 0x32, 0x4d, 0x53, 0x59, 0x62, 0x56, 0x48, 0x49, 0x58,
		0x2d, 0x34, 0x30, 0x46, 0x31, 0x35, 0x32, 0x4d, 0x53, 0x59, 0x56, 0x48, 0x49, 0x58, 0x2d, 0x24,
		0x31, 0x48, 0x69, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x46, 0x49, 0x4f, 0x2d, 0x42, 0x44, 0x30, 0x30,
		0x39, 0x20, 0x53, 0x45, 0x48, 0x65, 0x62, 0x65, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x39, 0x20, 0x50,
		0x72, 0x6f, 0x48, 0x65, 0x72, 0x61, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x39, 0x41, 0x4c, 0x48, 0x2d,
		0x42, 0x44, 0x30, 0x30, 0x4d, 0x47, 0x5a, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x48, 0x69, 0x2d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x48, 0x4c, 0x56, 0x2d, 0x54, 0x24,
		0x31, 0x48, 0x69, 0x48, 0x69, 0x48, 0x49, 0x48, 0x49, 0x2d, 0x24, 0x31, 0x4b, 0x48, 0x2d, 0x54,
		0x41, 0x42, 0x2d, 0x30, 0x31, 0x48, 0x69, 0x4b, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6e, 0x35, 0x46,
		0x75, 0x6e, 0x20, 0x35, 0x48, 0x69, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72,
		0x24, 0x31, 0x50, 0x75, 0x72, 0x65, 0x20, 0x33, 0x53, 0x48, 0x69, 0x62, 0x65, 0x72, 0x67, 0x48,
		0x69, 0x67, 0x68, 0x20, 0x51, 0x48, 0x69, 0x67, 0x68, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x45, 0x76, 0x6f, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x53, 0x70, 0x61, 0x64, 0x65, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x32, 0x46, 0x65, 0x73, 0x74, 0x20, 0x58, 0x4c, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x65, 0x73,
		0x74, 0x20, 0x58, 0x4c, 0x46, 0x65, 0x73, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x65, 0x73, 0x74,
		0x42, 0x61, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x6f, 0x75, 0x72, 0x50, 0x75, 0x72,
		0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x75, 0x72, 0x65, 0x20, 0x46, 0x52, 0x61, 0x7a,
		0x61, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x61, 0x7a, 0x61, 0x72, 0x45, 0x61, 0x73, 0x79, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x61, 0x73, 0x79, 0x20, 0x24, 0x31, 0x45, 0x61, 0x73,
		0x79, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x61, 0x73, 0x79, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f,
		0x6f, 0x73, 0x74, 0x20, 0x32, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x32, 0x20, 0x53, 0x45, 0x42,
		0x6f, 0x6f, 0x73, 0x74, 0x20, 0x33, 0x20, 0x53, 0x45, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x45, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x33, 0x5a, 0x65,
		0x72, 0x61, 0x20, 0x53, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x61, 0x73, 0x74, 0x79, 0x56,
		0x65, 0x72, 0x67, 0x65, 0x20, 0x4d, 0x57, 0x69, 0x6e, 0x57, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x61,
		0x6e, 0x73, 0x65, 0x48, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x65, 0x73, 0x54, 0x68, 0x75, 0x6e, 0x64,
		0x65, 0x72, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x52, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x45, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x24,
		0x31, 0x43, 0x4f, 0x53, 0x4d, 0x4f, 0x20, 0x44, 0x55, 0x4f, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20,
		0x44, 0x75, 0x6f, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x51, 0x48, 0x69, 0x70, 0x73, 0x74, 0x72,
		0x65, 0x65, 0x74, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x48, 0x69, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x45,
		0x32, 0x37, 0x30, 0x42, 0x53, 0x41, 0x53, 0x65, 0x72, 0x6f, 0x20, 0x37, 0x45, 0x32, 0x32, 0x53,
		0x65, 0x72, 0x6f, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x32, 0x32, 0x38, 0x31, 0x53, 0x65,
		0x72, 0x6f, 0x20, 0x38, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x30, 0x32, 0x4e, 0x48, 0x4c, 0x54, 0x45,
		0x32, 0x30, 0x33, 0x54, 0x41, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x43, 0x43, 0x48, 0x4c, 0x54,
		0x45, 0x37, 0x30, 0x30, 0x54, 0x41, 0x36, 0x48, 0x4c, 0x54, 0x45, 0x37, 0x33, 0x30, 0x54, 0x41,
		0x36, 0x4c, 0x48, 0x4e, 0x52, 0x33, 0x32, 0x30, 0x54, 0x48, 0x4c, 0x54, 0x45, 0x35, 0x35, 0x36,
		0x4e, 0x4d, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x30, 0x32, 0x31, 0x4d, 0x35,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x45, 0x35, 0x30,
		0x73, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x20, 0x4d, 0x41, 0x58, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x20, 0x4d,
		0x61, 0x78, 0x48, 0x4c, 0x54, 0x45, 0x35, 0x30, 0x31, 0x4e, 0x56, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4b, 0x53, 0x39, 0x30, 0x37, 0x56, 0x33, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x32, 0x33, 0x45, 0x48,
		0x33, 0x30, 0x49, 0x34, 0x36, 0x44, 0x31, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x66, 0x72, 0x65,
		0x6e, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x52, 0x45, 0x47, 0x36, 0x38,
		0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x6d, 0x61, 0x78, 0x20, 0x5a, 0x45, 0x47, 0x39, 0x38, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x66, 0x72,
		0x65, 0x6e, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x55, 0x32, 0x46, 0x32,
		0x36, 0x46, 0x32, 0x38, 0x46, 0x32, 0x39, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67,
		0x20, 0x34, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x34, 0x20, 0x50, 0x72,
		0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x35, 0x4b, 0x69, 0x6e, 0x67,
		0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x36, 0x46, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x33,
		0x30, 0x53, 0x46, 0x34, 0x30, 0x46, 0x35, 0x30, 0x46, 0x35, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x48, 0x31, 0x38, 0x48, 0x32, 0x30, 0x48, 0x4c, 0x54, 0x45, 0x31, 0x30, 0x33, 0x45, 0x45, 0x32,
		0x30, 0x48, 0x69, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x45, 0x35, 0x30, 0x20, 0x31, 0x32, 0x38,
		0x47, 0x45, 0x35, 0x30, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x32, 0x39, 0x54, 0x52, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x48, 0x31, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x48, 0x34,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x4c, 0x54, 0x45, 0x4d, 0x38, 0x30, 0x30, 0x58, 0x69,
		0x61, 0x6f, 0x68, 0x61, 0x69, 0x74, 0x75, 0x6e, 0x20, 0x32, 0x55, 0x33, 0x30, 0x55, 0x34, 0x30,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x45, 0x39, 0x4e, 0x61, 0x6e, 0x61, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x20, 0x48, 0x24, 0x31, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x33, 0x30, 0x20, 0x53, 0x45, 0x70, 0x6f, 0x72, 0x74, 0x61,
		0x62, 0x6c, 0x65, 0x20, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x55, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x55, 0x33,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x48, 0x69, 0x74, 0x61, 0x63, 0x68, 0x69, 0x48, 0x69,
		0x74, 0x65, 0x63, 0x68, 0x48, 0x6f, 0x66, 0x66, 0x6d, 0x61, 0x6e, 0x6e, 0x58, 0x20, 0x24, 0x31,
		0x48, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x63, 0x68, 0x41, 0x4c, 0x46, 0x41, 0x20, 0x24, 0x31, 0x49,
		0x64, 0x65, 0x61, 0x6c, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x49, 0x50, 0x53, 0x24, 0x31,
		0x48, 0x54, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x6d, 0x74, 0x6f, 0x6d, 0x50, 0x33, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x53, 0x31, 0x37, 0x53, 0x31, 0x37, 0x48, 0x54, 0x24, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x54, 0x24, 0x31, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x77, 0x65, 0x6c, 0x6c, 0x53, 0x63,
		0x61, 0x6e, 0x50, 0x61, 0x6c, 0x20, 0x24, 0x31, 0x45, 0x44, 0x41, 0x37, 0x31, 0x53, 0x63, 0x61,
		0x6e, 0x50, 0x61, 0x6c, 0x20, 0x45, 0x44, 0x41, 0x37, 0x31, 0x44, 0x6f, 0x6c, 0x70, 0x68, 0x69,
		0x6e, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x6f, 0x7a, 0x6f, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e,
		0x74, 0x48, 0x6f, 0x73, 0x69, 0x6e, 0x48, 0x6f, 0x74, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72,
		0x48, 0x50, 0x50, 0x2d, 0x47, 0x53, 0x31, 0x56, 0x4c, 0x45, 0x35, 0x50, 0x6f, 0x62, 0x6c, 0x61,
		0x6e, 0x6f, 0x48, 0x50, 0x50, 0x2d, 0x4c, 0x35, 0x35, 0x42, 0x53, 0x65, 0x72, 0x72, 0x61, 0x6e,
		0x6f, 0x48, 0x6f, 0x74, 0x77, 0x61, 0x76, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x20, 0x56, 0x38,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x20, 0x36, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20,
		0x52, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x58, 0x31, 0x36,
		0x43, 0x79, 0x62, 0x65, 0x72, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x79, 0x62, 0x65,
		0x72, 0x20, 0x24, 0x31, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x24, 0x31, 0x57, 0x31, 0x30,
		0x4d, 0x35, 0x69, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x52, 0x36, 0x30, 0x54, 0x41, 0x42,
		0x20, 0x52, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x52, 0x36, 0x20, 0x52, 0x72,
		0x6f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x79, 0x6d, 0x62, 0x6f,
		0x6c, 0x48, 0x6f, 0x77, 0x48, 0x54, 0x2d, 0x31, 0x30, 0x30, 0x31, 0x47, 0x20, 0x47, 0x6f, 0x20,
		0x4b, 0x69, 0x64, 0x73, 0x48, 0x54, 0x2d, 0x24, 0x31, 0x48, 0x75, 0x61, 0x64, 0x6f, 0x6f, 0x48,
		0x47, 0x31, 0x31, 0x48, 0x75, 0x61, 0x67, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x76, 0x69, 0x4b, 0x48,
		0x41, 0x54, 0x41, 0x52, 0x20, 0x48, 0x2d, 0x31, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x48,
		0x41, 0x54, 0x41, 0x52, 0x20, 0x48, 0x2d, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x75, 0x61,
		0x77, 0x65, 0x69, 0x43, 0x52, 0x54, 0x2d, 0x4e, 0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x39, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x45, 0x41, 0x2d, 0x4e, 0x58, 0x39, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x39, 0x30, 0x52, 0x45, 0x50, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x39, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x4e, 0x45, 0x2d, 0x41, 0x4e,
		0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x30, 0x46, 0x4e, 0x45, 0x2d, 0x4e, 0x58,
		0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x30, 0x20, 0x35, 0x47, 0x53, 0x44, 0x59, 0x2d,
		0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x41, 0x4e, 0x50, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x4e, 0x42, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x38, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x46, 0x6c, 0x61, 0x74, 0x41, 0x4e, 0x4e,
		0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x30, 0x20, 0x35, 0x47,
		0x48, 0x50, 0x42, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x39, 0x53, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x44, 0x31,
		0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x44, 0x33, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20,
		0x59, 0x35, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x33, 0x32, 0x30, 0x41,
		0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x33, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64,
		0x20, 0x59, 0x35, 0x43, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x33, 0x30, 0x30, 0x41,
		0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x35, 0x32, 0x37, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64,
		0x20, 0x47, 0x36, 0x32, 0x30, 0x53, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x36, 0x33,
		0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x37, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64,
		0x20, 0x50, 0x37, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x36, 0x41, 0x73, 0x63, 0x65,
		0x6e, 0x64, 0x20, 0x47, 0x37, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x31,
		0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x58, 0x54, 0x32, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64,
		0x20, 0x59, 0x32, 0x32, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x35, 0x30,
		0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x36, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e,
		0x64, 0x20, 0x47, 0x37, 0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x45, 0x6e,
		0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x31, 0x30, 0x45, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x53, 0x45, 0x6e, 0x6a,
		0x6f, 0x79, 0x20, 0x35, 0x53, 0x4d, 0x47, 0x41, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x45, 0x6e, 0x6a,
		0x6f, 0x79, 0x20, 0x35, 0x30, 0x4d, 0x47, 0x41, 0x2d, 0x41, 0x4c, 0x34, 0x30, 0x45, 0x6e, 0x6a,
		0x6f, 0x79, 0x20, 0x36, 0x30, 0x43, 0x54, 0x52, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x45, 0x6e, 0x6a,
		0x6f, 0x79, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x54, 0x47, 0x2d, 0x41, 0x4c, 0x30,
		0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x36, 0x30, 0x58, 0x47, 0x52, 0x33, 0x45, 0x6e, 0x6a,
		0x6f, 0x79, 0x20, 0x36, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x36, 0x53, 0x45, 0x6e, 0x6a, 0x6f,
		0x79, 0x20, 0x37, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x53, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x38, 0x45, 0x6e,
		0x6a, 0x6f, 0x79, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20,
		0x38, 0x65, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x39, 0x65, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20,
		0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x5a, 0x20, 0x35, 0x47,
		0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20, 0x53, 0x45, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x32, 0x30, 0x65, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x59, 0x36, 0x70, 0x47,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x47, 0x36, 0x32, 0x31, 0x47, 0x52, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x52,
		0x35, 0x47, 0x52, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x58, 0x38, 0x47, 0x38,
		0x47, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x36,
		0x30, 0x50, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x35, 0x30, 0x50, 0x35, 0x30, 0x45, 0x50,
		0x35, 0x30, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x49, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x32, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30,
		0x49, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x32, 0x30, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x53, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x33, 0x30, 0x49, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x33, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x43, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x58, 0x48, 0x4e, 0x33, 0x2d, 0x55, 0x30, 0x31, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x41, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x34, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x43, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x34, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35,
		0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x43, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53,
		0x49, 0x4d, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x35, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x53, 0x45,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4c, 0x53, 0x41, 0x2d,
		0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x30, 0x47, 0x49, 0x41, 0x2d,
		0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x30, 0x20, 0x53, 0x45, 0x20,
		0x35, 0x47, 0x54, 0x4e, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x41, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x36, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x43, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x37, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x41, 0x20, 0x50, 0x72, 0x6f,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x69,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x58,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x38, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x53, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x58, 0x20,
		0x4d, 0x61, 0x78, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x39, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x69, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x39, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x58, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x39, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x48, 0x6f, 0x6c, 0x6c, 0x79, 0x20, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x48, 0x6f, 0x6c,
		0x6c, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x32, 0x45, 0x4c, 0x5a, 0x2d, 0x41, 0x4e,
		0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x33, 0x45,
		0x4c, 0x5a, 0x2d, 0x41, 0x4e, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x4c, 0x5a, 0x2d, 0x41, 0x4e, 0x32, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x2b, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x34, 0x20,
		0x50, 0x72, 0x6f, 0x4c, 0x47, 0x45, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x34, 0x4c, 0x47, 0x45, 0x2d, 0x41, 0x4e, 0x32, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x34, 0x20, 0x50, 0x72,
		0x6f, 0x2b, 0x41, 0x4e, 0x59, 0x2d, 0x4c, 0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x4d, 0x4f, 0x2d, 0x4e,
		0x58, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4d, 0x47, 0x49, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x54, 0x2d, 0x41, 0x4e,
		0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x20,
		0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x34, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x34,
		0x30, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x34, 0x30, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x4e, 0x45, 0x2d, 0x41, 0x4e,
		0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x30, 0x56,
		0x4e, 0x45, 0x2d, 0x41, 0x4e, 0x34, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x36, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33,
		0x45, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x34, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20,
		0x34, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x54, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x37, 0x61, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x54, 0x4e, 0x45, 0x57, 0x2d, 0x41, 0x4e, 0x39, 0x30, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x20, 0x56, 0x69, 0x74, 0x61,
		0x6c, 0x69, 0x74, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35,
		0x54, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20,
		0x36, 0x54, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x32, 0x30, 0x20, 0x53, 0x45, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x37, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x20, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x32, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38,
		0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x39, 0x41, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x56, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x32, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x34, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56,
		0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56,
		0x39, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69, 0x65, 0x77,
		0x20, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x30,
		0x56, 0x4e, 0x41, 0x2d, 0x4c, 0x32, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69, 0x65,
		0x77, 0x20, 0x33, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x59, 0x36, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x59, 0x36, 0x20, 0x49, 0x49, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74,
		0x59, 0x36, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x32,
		0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x58, 0x37, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x58, 0x38, 0x61, 0x56, 0x4e, 0x45, 0x2d, 0x4e, 0x34, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x58, 0x38, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x36, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x58, 0x36, 0x61, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x20,
		0x4d, 0x61, 0x78, 0x4b, 0x4b, 0x47, 0x2d, 0x41, 0x4e, 0x37, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x58, 0x33, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x4e, 0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x33, 0x30, 0x54, 0x46, 0x59, 0x2d, 0x41, 0x4e, 0x30,
		0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x33, 0x30, 0x69, 0x54, 0x46, 0x59, 0x2d, 0x41,
		0x4e, 0x34, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x54,
		0x20, 0x50, 0x72, 0x6f, 0x44, 0x49, 0x4f, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x58, 0x34, 0x30, 0x69, 0x41, 0x44, 0x54, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x58, 0x34, 0x30, 0x20, 0x47, 0x54, 0x52, 0x4d, 0x4f, 0x2d, 0x41, 0x4e,
		0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x34, 0x30, 0x52, 0x4d, 0x4f, 0x2d, 0x4e,
		0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x39, 0x61, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x58, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58,
		0x39, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x39, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x58, 0x35, 0x43, 0x52, 0x54, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x58, 0x35, 0x30, 0x69, 0x41, 0x4c, 0x49, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x58, 0x35, 0x30, 0x57, 0x4f, 0x44, 0x2d, 0x4c, 0x58, 0x31, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x58, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x56, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58,
		0x32, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58, 0x33, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58,
		0x35, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x69,
		0x6d, 0x61, 0x6e, 0x67, 0x20, 0x35, 0x52, 0x49, 0x4f, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4d, 0x61,
		0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x34, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x38,
		0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x39, 0x54, 0x59, 0x48, 0x36, 0x30, 0x31, 0x4d,
		0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x39, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65,
		0x20, 0x58, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x53, 0x20, 0x32, 0x54, 0x41, 0x48, 0x2d,
		0x41, 0x4e, 0x30, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x41, 0x4c, 0x54, 0x2d, 0x4c, 0x32,
		0x39, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x33, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x32, 0x54,
		0x45, 0x54, 0x2d, 0x41, 0x4e, 0x35, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x32, 0x20, 0x35,
		0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x31, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74,
		0x65, 0x20, 0x32, 0x30, 0x20, 0x52, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x58,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x35,
		0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x52, 0x53, 0x20, 0x50, 0x6f, 0x72, 0x73,
		0x63, 0x68, 0x65, 0x20, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d,
		0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x52, 0x53, 0x4d,
		0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x45, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x35, 0x30,
		0x43, 0x45, 0x54, 0x2d, 0x41, 0x4c, 0x36, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x35, 0x30, 0x45,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x38, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x39, 0x4d, 0x61, 0x74, 0x65,
		0x20, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x52, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x52, 0x53, 0x20,
		0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65, 0x20, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x53, 0x45, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x32, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x32, 0x49, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x53, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x33, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33, 0x69, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x34, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x34, 0x65, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x35, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x35, 0x69, 0x59, 0x41, 0x4c, 0x2d, 0x4c, 0x36, 0x31, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35,
		0x54, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x36, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x36, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x36, 0x20, 0x53, 0x45, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37,
		0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x4d, 0x41, 0x4f, 0x2d, 0x4c, 0x58, 0x39, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x31, 0x31, 0x69, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x46, 0x4f, 0x41, 0x2d, 0x4c, 0x58, 0x39, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x31, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x37, 0x69, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x38, 0x69, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x35, 0x47, 0x4a, 0x53, 0x43, 0x2d, 0x41,
		0x4e, 0x30, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x4a,
		0x53, 0x43, 0x2d, 0x41, 0x4c, 0x35, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x53, 0x45,
		0x20, 0x34, 0x47, 0x43, 0x48, 0x4c, 0x2d, 0x41, 0x4c, 0x36, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x38, 0x20, 0x53, 0x45, 0x20, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x39, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x39, 0x20, 0x53, 0x45,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x31, 0x30, 0x20, 0x34, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x30, 0x20, 0x53, 0x45, 0x4d,
		0x41, 0x4f, 0x2d, 0x4c, 0x58, 0x39, 0x4e, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x36, 0x30, 0x45, 0x56,
		0x45, 0x2d, 0x4c, 0x58, 0x39, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x36, 0x31, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x59, 0x37, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x39, 0x30, 0x53, 0x54, 0x47,
		0x2d, 0x4c, 0x58, 0x31, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x39, 0x31, 0x50, 0x20, 0x73, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x50,
		0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x50, 0x20, 0x73,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x5a, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x50,
		0x31, 0x30, 0x50, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x31, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x50, 0x31, 0x30, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x50, 0x32, 0x30, 0x50,
		0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x33,
		0x30, 0x50, 0x33, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x50, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x45, 0x50, 0x34, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x45, 0x20, 0x4e, 0x46, 0x43, 0x50, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x38, 0x50, 0x38,
		0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x50, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x50, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x37, 0x29, 0x50, 0x39, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x39, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x50, 0x39, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x39, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x47, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x58, 0x59,
		0x20, 0x4d, 0x61, 0x78, 0x59, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x33, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x33, 0x49, 0x49, 0x59, 0x35, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x37, 0x29, 0x59, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x35, 0x20, 0x6c, 0x69, 0x74, 0x65, 0x59, 0x35, 0x70, 0x59,
		0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x35, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x35, 0x49, 0x49, 0x59, 0x36, 0x59, 0x36, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59,
		0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x59, 0x36, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x59, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x59, 0x36, 0x32, 0x35, 0x59, 0x36, 0x33, 0x35, 0x59, 0x36, 0x33, 0x35, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x59, 0x36, 0x49, 0x49, 0x59, 0x37, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x37,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x59,
		0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x39, 0x59, 0x37, 0x61, 0x59, 0x37, 0x70, 0x59, 0x38, 0x70, 0x59, 0x39, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x59, 0x39, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x39, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x39, 0x61, 0x53,
		0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x53, 0x47, 0x54, 0x33, 0x45, 0x76, 0x6f, 0x6c, 0x75, 0x63,
		0x69, 0x6f, 0x6e, 0x20, 0x33, 0x55, 0x6c, 0x74, 0x79, 0x6d, 0x20, 0x35, 0x41, 0x73, 0x63, 0x65,
		0x6e, 0x64, 0x20, 0x47, 0x36, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x36, 0x50, 0x51, 0x75, 0x61,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x30, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30,
		0x2e, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d,
		0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x4d, 0x61, 0x74, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61,
		0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x4d, 0x61,
		0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x4d, 0x61, 0x74, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61,
		0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x4d, 0x61, 0x74,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64,
		0x20, 0x54, 0x31, 0x30, 0x73, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61,
		0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x53, 0x45, 0x44, 0x42, 0x59, 0x32, 0x2d, 0x57,
		0x30, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x57, 0x69, 0x46, 0x69, 0x44, 0x42, 0x59, 0x32, 0x2d, 0x4c, 0x30, 0x39,
		0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x41, 0x69,
		0x72, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x53,
		0x45, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x61,
		0x70, 0x65, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x33, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38,
		0x2e, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x32, 0x52, 0x4f, 0x44,
		0x2d, 0x57, 0x30, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x38,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b,
		0x52, 0x4a, 0x32, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x56, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x52,
		0x4a, 0x32, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x56, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x42, 0x52, 0x54, 0x2d,
		0x57, 0x30, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x42, 0x52, 0x54, 0x2d,
		0x41, 0x4e, 0x30, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x22, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x36, 0x20, 0x31, 0x30, 0x2e,
		0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x4f, 0x42, 0x32, 0x2d, 0x57, 0x30, 0x39, 0x48,
		0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x37, 0x20, 0x38, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x4f, 0x42, 0x32, 0x4b, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x61,
		0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x54, 0x38, 0x20, 0x38, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x4b,
		0x4f, 0x42, 0x32, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x58, 0x37, 0x20, 0x38, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x47, 0x52,
		0x2d, 0x57, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x58, 0x36, 0x41, 0x47, 0x4d, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x41, 0x47, 0x52, 0x2d, 0x41, 0x4c, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x36, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x20, 0x31,
		0x32, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64,
		0x20, 0x43, 0x35, 0x20, 0x38, 0x43, 0x33, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x43, 0x33, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x43, 0x33, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x43, 0x33, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x30, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x43, 0x35, 0x20, 0x38, 0x22, 0x20, 0x4c,
		0x54, 0x45, 0x43, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x36, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x32, 0x2e, 0x36, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20,
		0x31, 0x30, 0x2e, 0x38, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64,
		0x20, 0x4d, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x58, 0x32, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20,
		0x38, 0x2e, 0x34, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x36, 0x20, 0x38,
		0x2e, 0x34, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x36, 0x20, 0x31, 0x30,
		0x2e, 0x38, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64,
		0x20, 0x4d, 0x33, 0x20, 0x38, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x30, 0x42, 0x54, 0x56, 0x2d, 0x44, 0x4c, 0x30, 0x39,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x35, 0x41, 0x47, 0x4d, 0x33, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x4e,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47, 0x4d, 0x33, 0x2d, 0x41, 0x4c, 0x30, 0x39, 0x48,
		0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x35, 0x20, 0x31, 0x30,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x33, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x54, 0x33, 0x20, 0x38, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x54, 0x33, 0x20, 0x37, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20,
		0x37, 0x2e, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x37,
		0x2e, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54,
		0x32, 0x20, 0x38, 0x2e, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x54, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x20, 0x37, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x54, 0x31, 0x20, 0x38, 0x41, 0x47, 0x53, 0x33, 0x4b, 0x2d, 0x57, 0x32, 0x30, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x53, 0x45, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31,
		0x30, 0x73, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47, 0x53,
		0x33, 0x4b, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54,
		0x31, 0x30, 0x73, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x47, 0x52,
		0x4b, 0x2d, 0x57, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31,
		0x30, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47, 0x52, 0x4b, 0x2d,
		0x4c, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x20,
		0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x4f, 0x4e, 0x2d, 0x41, 0x4c, 0x31, 0x39, 0x42,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35, 0x20, 0x38, 0x22, 0x42, 0x5a,
		0x49, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x43, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42,
		0x5a, 0x49, 0x2d, 0x57, 0x30, 0x30, 0x43, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x42, 0x5a, 0x54, 0x33, 0x2d, 0x57, 0x30, 0x39, 0x42, 0x5a, 0x54, 0x33,
		0x2d, 0x41, 0x4c, 0x30, 0x30, 0x43, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x42, 0x5a, 0x44,
		0x2d, 0x57, 0x30, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x33, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x42, 0x5a, 0x44, 0x2d, 0x41, 0x4c, 0x30,
		0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x33, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x44, 0x20, 0x54, 0x61, 0x62, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x64, 0x74,
		0x61, 0x62, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x32, 0x20,
		0x53, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x4c, 0x4c, 0x2d, 0x41, 0x4c, 0x30, 0x31, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x42, 0x4c,
		0x4d, 0x2d, 0x30, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
		0x45, 0x43, 0x36, 0x31, 0x30, 0x38, 0x56, 0x24, 0x31, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x36,
		0x39, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x20, 0x36, 0x35, 0x22, 0x4b, 0x41, 0x4e,
		0x54, 0x2d, 0x33, 0x35, 0x39, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x20, 0x35, 0x35,
		0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20,
		0x35, 0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x35, 0x30, 0x53, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x36, 0x30, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x36, 0x35,
		0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x36, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53,
		0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20, 0x36, 0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d,
		0x33, 0x37, 0x30, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
		0x20, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x37, 0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33,
		0x37, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53,
		0x20, 0x37, 0x35, 0x22, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x24, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e,
		0x64, 0x20, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x48, 0x75, 0x67, 0x65, 0x72, 0x6f, 0x63,
		0x6b, 0x54, 0x31, 0x30, 0x31, 0x5f, 0x32, 0x30, 0x32, 0x31, 0x54, 0x31, 0x30, 0x31, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x48, 0x75, 0x6d, 0x61, 0x78, 0x48, 0x75, 0x72, 0x72, 0x69, 0x63,
		0x61, 0x6e, 0x65, 0x49, 0x67, 0x6e, 0x69, 0x74, 0x65, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x47,
		0x69, 0x67, 0x61, 0x47, 0x6c, 0x61, 0x7a, 0x65, 0x43, 0x6f, 0x62, 0x72, 0x61, 0x44, 0x5a, 0x49,
		0x52, 0x45, 0x44, 0x7a, 0x69, 0x72, 0x65, 0x53, 0x41, 0x47, 0x45, 0x53, 0x61, 0x67, 0x65, 0x42,
		0x65, 0x61, 0x6d, 0x53, 0x6c, 0x61, 0x6d, 0x56, 0x75, 0x6c, 0x63, 0x61, 0x6e, 0x46, 0x6c, 0x61,
		0x6d, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x52, 0x69, 0x64, 0x67, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x75, 0x73, 0x68, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x49, 0x72, 0x69, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x30,
		0x32, 0x31, 0x49, 0x72, 0x69, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x72, 0x74,
		0x65, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x69,
		0x6e, 0x74, 0x48, 0x75, 0x73, 0x6b, 0x65, 0x65, 0x56, 0x55, 0x4c, 0x4b, 0x41, 0x4e, 0x4f, 0x56,
		0x75, 0x6c, 0x6b, 0x61, 0x6e, 0x6f, 0x48, 0x79, 0x6b, 0x6b, 0x65, 0x72, 0x48, 0x79, 0x6b, 0x6b,
		0x65, 0x72, 0x5f, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x31, 0x30, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x31,
		0x30, 0x48, 0x79, 0x74, 0x65, 0x72, 0x61, 0x48, 0x79, 0x75, 0x6e, 0x64, 0x61, 0x69, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x53, 0x38, 0x53,
		0x65, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x49, 0x58, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69,
		0x78, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x45, 0x43, 0x4f, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20,
		0x45, 0x63, 0x6f, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x65, 0x6f, 0x75, 0x6c, 0x20, 0x24, 0x31, 0x47, 0x32, 0x35, 0x35, 0x32, 0x33, 0x4b, 0x45, 0x74,
		0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x47, 0x32, 0x33, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69,
		0x74, 0x79, 0x20, 0x24, 0x31, 0x47, 0x32, 0x35, 0x35, 0x32, 0x34, 0x4b, 0x45, 0x74, 0x65, 0x72,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x47, 0x32, 0x34, 0x47, 0x32, 0x34, 0x30, 0x32, 0x37, 0x4b, 0x45,
		0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x47, 0x32, 0x37, 0x57, 0x32, 0x35, 0x30, 0x34,
		0x32, 0x4c, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x57, 0x34, 0x32, 0x48, 0x50,
		0x35, 0x35, 0x34, 0x4f, 0x4c, 0x35, 0x30, 0x33, 0x46, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x59,
		0x4d, 0x49, 0x20, 0x35, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x79, 0x6d, 0x69, 0x20, 0x35,
		0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x34, 0x36, 0x35, 0x47, 0x4f, 0x45, 0x34, 0x36, 0x35,
		0x20, 0x47, 0x6f, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x20, 0x52, 0x4f, 0x43, 0x4b, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x20, 0x52, 0x6f, 0x63, 0x6b, 0x4c, 0x24, 0x31, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20,
		0x37, 0x57, 0x34, 0x48, 0x54, 0x30, 0x37, 0x30, 0x31, 0x4c, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61,
		0x6c, 0x20, 0x37, 0x58, 0x4c, 0x48, 0x54, 0x30, 0x37, 0x30, 0x31, 0x57, 0x31, 0x36, 0x4b, 0x6f,
		0x72, 0x61, 0x6c, 0x20, 0x37, 0x57, 0x34, 0x58, 0x48, 0x54, 0x30, 0x37, 0x30, 0x33, 0x57, 0x30,
		0x38, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x57, 0x33, 0x31, 0x30, 0x4c, 0x42, 0x31, 0x4b,
		0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x4c, 0x42, 0x31, 0x48, 0x54, 0x31, 0x30, 0x30, 0x34,
		0x4c, 0x49, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x58, 0x4c, 0x4b, 0x6f,
		0x72, 0x61, 0x6c, 0x5f, 0x38, 0x57, 0x32, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x38, 0x57, 0x32,
		0x48, 0x54, 0x31, 0x30, 0x30, 0x34, 0x4c, 0x31, 0x36, 0x48, 0x54, 0x31, 0x30, 0x30, 0x33, 0x58,
		0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x58, 0x48, 0x54, 0x31, 0x30, 0x30,
		0x32, 0x57, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x57, 0x48, 0x54, 0x30,
		0x37, 0x30, 0x33, 0x4b, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x4d, 0x33, 0x58,
		0x48, 0x54, 0x30, 0x37, 0x30, 0x34, 0x4b, 0x30, 0x38, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37,
		0x4d, 0x34, 0x31, 0x30, 0x57, 0x42, 0x31, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x57,
		0x42, 0x31, 0x48, 0x54, 0x31, 0x30, 0x30, 0x32, 0x57, 0x33, 0x32, 0x4b, 0x6f, 0x72, 0x61, 0x6c,
		0x20, 0x31, 0x30, 0x58, 0x33, 0x20, 0x57, 0x69, 0x46, 0x69, 0x48, 0x79, 0x54, 0x61, 0x62, 0x20,
		0x37, 0x47, 0x42, 0x31, 0x48, 0x79, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x37,
		0x57, 0x44, 0x31, 0x48, 0x79, 0x76, 0x65, 0x50, 0x72, 0x79, 0x6d, 0x65, 0x20, 0x30, 0x31, 0x53,
		0x54, 0x30, 0x31, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x53, 0x54, 0x30, 0x31, 0x49, 0x2d, 0x49,
		0x4e, 0x4e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x39,
		0x2e, 0x37, 0x22, 0x20, 0x33, 0x47, 0x49, 0x4b, 0x49, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x47, 0x4f, 0x35, 0x5f, 0x35, 0x35, 0x47, 0x6f, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x47, 0x6f, 0x20,
		0x34, 0x2e, 0x35, 0x22, 0x42, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x47, 0x4f, 0x35, 0x35, 0x42, 0x6c,
		0x65, 0x73, 0x73, 0x20, 0x47, 0x6f, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x42, 0x4c, 0x45, 0x53, 0x53,
		0x50, 0x4c, 0x55, 0x53, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x4b,
		0x55, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x54, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x4d, 0x4f,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x51, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x32, 0x53, 0x32, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x41,
		0x32, 0x53, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x38, 0x30, 0x20, 0x48, 0x65,
		0x72, 0x6f, 0x53, 0x38, 0x39, 0x20, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x38, 0x38,
		0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x39, 0x39, 0x20, 0x4f, 0x63,
		0x65, 0x61, 0x6e, 0x53, 0x39, 0x38, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53,
		0x38, 0x37, 0x20, 0x52, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x53, 0x36, 0x37, 0x20, 0x42, 0x6c, 0x61,
		0x73, 0x74, 0x53, 0x37, 0x38, 0x20, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x51, 0x38, 0x20, 0x43, 0x6c,
		0x61, 0x72, 0x69, 0x74, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x49,
		0x49, 0x51, 0x54, 0x61, 0x62, 0x20, 0x58, 0x39, 0x49, 0x4e, 0x43, 0x41, 0x52, 0x49, 0x4e, 0x51,
		0x49, 0x4e, 0x53, 0x59, 0x53, 0x48, 0x4b, 0x39, 0x2d, 0x34, 0x30, 0x31, 0x30, 0x41, 0x43, 0x37,
		0x5f, 0x44, 0x4a, 0x31, 0x37, 0x41, 0x43, 0x37, 0x2d, 0x44, 0x4a, 0x31, 0x37, 0x49, 0x48, 0x39,
		0x2d, 0x4c, 0x36, 0x31, 0x34, 0x4d, 0x58, 0x20, 0x49, 0x48, 0x39, 0x2d, 0x4c, 0x36, 0x31, 0x34,
		0x49, 0x51, 0x4d, 0x56, 0x69, 0x76, 0x61, 0x6c, 0x64, 0x69, 0x4e, 0x65, 0x77, 0x74, 0x6f, 0x6e,
		0x49, 0x52, 0x41, 0x49, 0x52, 0x41, 0x5f, 0x44, 0x55, 0x4f, 0x44, 0x75, 0x6f, 0x20, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x49, 0x54, 0x49, 0x54, 0x2d, 0x31, 0x31, 0x30, 0x31, 0x2d, 0x51, 0x55,
		0x41, 0x44, 0x31, 0x31, 0x30, 0x31, 0x20, 0x51, 0x75, 0x61, 0x64, 0x49, 0x55, 0x4e, 0x49, 0x49,
		0x63, 0x6f, 0x6e, 0x42, 0x49, 0x54, 0x4e, 0x54, 0x2d, 0x33, 0x35, 0x30, 0x36, 0x4d, 0x4e, 0x65,
		0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x20, 0x51, 0x75, 0x61,
		0x64, 0x20, 0x46, 0x48, 0x44, 0x4e, 0x54, 0x2d, 0x30, 0x37, 0x30, 0x34, 0x53, 0x4e, 0x65, 0x74,
		0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x4c, 0x45, 0x4e, 0x54, 0x2d, 0x30, 0x39, 0x30,
		0x39, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x49, 0x5a,
		0x4e, 0x54, 0x2d, 0x31, 0x30, 0x30, 0x39, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54,
		0x68, 0x6f, 0x72, 0x20, 0x71, 0x75, 0x61, 0x64, 0x20, 0x49, 0x49, 0x4e, 0x65, 0x74, 0x54, 0x41,
		0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x4c, 0x45, 0x4e, 0x54, 0x2d, 0x31, 0x30, 0x31, 0x37,
		0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x33, 0x47, 0x20,
		0x71, 0x75, 0x61, 0x64, 0x4e, 0x54, 0x2d, 0x33, 0x36, 0x30, 0x31, 0x50, 0x2f, 0x33, 0x36, 0x30,
		0x32, 0x50, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20,
		0x33, 0x47, 0x4e, 0x54, 0x2d, 0x33, 0x36, 0x30, 0x33, 0x50, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42,
		0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x33, 0x47, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x4e,
		0x54, 0x2d, 0x33, 0x37, 0x30, 0x32, 0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b,
		0x79, 0x20, 0x48, 0x44, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x33, 0x38, 0x30, 0x35, 0x43, 0x4e,
		0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x61, 0x74, 0x20, 0x33, 0x47, 0x20, 0x71, 0x75,
		0x61, 0x64, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x31, 0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42,
		0x20, 0x53, 0x6b, 0x79, 0x20, 0x33, 0x47, 0x20, 0x64, 0x75, 0x6f, 0x4e, 0x54, 0x2d, 0x33, 0x39,
		0x30, 0x35, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x5a,
		0x58, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x30, 0x37, 0x30, 0x31, 0x53, 0x4e, 0x65, 0x74, 0x54,
		0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x6e, 0x65, 0x74, 0x4e, 0x54, 0x2d, 0x30, 0x38, 0x30,
		0x35, 0x43, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x61, 0x74, 0x20, 0x4d, 0x58,
		0x4e, 0x54, 0x2d, 0x30, 0x39, 0x30, 0x32, 0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53,
		0x70, 0x61, 0x63, 0x65, 0x20, 0x71, 0x75, 0x61, 0x64, 0x20, 0x52, 0x58, 0x4e, 0x65, 0x74, 0x54,
		0x41, 0x42, 0x5f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x33, 0x47, 0x4e, 0x65, 0x74, 0x54, 0x41,
		0x42, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30,
		0x32, 0x4d, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x20,
		0x33, 0x47, 0x20, 0x64, 0x75, 0x6f, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x33, 0x4d, 0x4e, 0x65,
		0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x20, 0x33, 0x47, 0x54, 0x4d,
		0x41, 0x54, 0x52, 0x49, 0x58, 0x20, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x4e, 0x65, 0x74, 0x54, 0x41,
		0x42, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x54,
		0x2d, 0x31, 0x35, 0x30, 0x31, 0x43, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x20, 0x31,
		0x30, 0x30, 0x54, 0x4f, 0x55, 0x43, 0x41, 0x4e, 0x20, 0x4e, 0x41, 0x4e, 0x4f, 0x20, 0x34, 0x4b,
		0x54, 0x6f, 0x75, 0x63, 0x61, 0x6e, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x34, 0x4b, 0x54, 0x4f,
		0x55, 0x43, 0x41, 0x4e, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x44, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x54, 0x6f, 0x75, 0x63, 0x61, 0x6e, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33,
		0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x54, 0x4f, 0x55, 0x43, 0x41, 0x4e, 0x20, 0x53, 0x74, 0x69,
		0x63, 0x6b, 0x20, 0x34, 0x4b, 0x54, 0x6f, 0x75, 0x63, 0x61, 0x6e, 0x20, 0x53, 0x74, 0x69, 0x63,
		0x6b, 0x20, 0x34, 0x4b, 0x49, 0x6d, 0x6f, 0x73, 0x65, 0x42, 0x41, 0x4d, 0x2d, 0x49, 0x49, 0x49,
		0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x24, 0x31, 0x49, 0x6d, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x46, 0x6f, 0x63,
		0x75, 0x73, 0x49, 0x46, 0x39, 0x30, 0x30, 0x31, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x35, 0x49,
		0x46, 0x39, 0x30, 0x30, 0x37, 0x49, 0x46, 0x39, 0x30, 0x32, 0x31, 0x54, 0x75, 0x72, 0x62, 0x6f,
		0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x46, 0x39, 0x30, 0x33, 0x35, 0x41, 0x32, 0x49,
		0x46, 0x39, 0x30, 0x30, 0x32, 0x4d, 0x35, 0x73, 0x49, 0x46, 0x39, 0x30, 0x30, 0x33, 0x4d, 0x36,
		0x73, 0x49, 0x46, 0x39, 0x30, 0x33, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x49,
		0x46, 0x39, 0x30, 0x32, 0x39, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x42, 0x69, 0x67, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49, 0x46, 0x24, 0x31, 0x61, 0x4d, 0x24,
		0x31, 0x49, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x47, 0x4f, 0x52, 0x49, 0x4c, 0x4c, 0x41, 0x20, 0x39,
		0x20, 0x50, 0x4c, 0x55, 0x53, 0x47, 0x6f, 0x72, 0x69, 0x6c, 0x6c, 0x61, 0x20, 0x39, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x58, 0x5f, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x58, 0x20, 0x52, 0x61,
		0x69, 0x6e, 0x62, 0x6f, 0x77, 0x49, 0x6e, 0x63, 0x68, 0x24, 0x31, 0x22, 0x49, 0x6e, 0x63, 0x6f,
		0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x20, 0x34, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x32, 0x20, 0x53, 0x50,
		0x6c, 0x61, 0x69, 0x6e, 0x20, 0x32, 0x53, 0x4d, 0x41, 0x54, 0x54, 0x45, 0x52, 0x4d, 0x61, 0x74,
		0x74, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x5f, 0x73, 0x45, 0x63, 0x6f, 0x20, 0x53, 0x46, 0x6c, 0x65,
		0x78, 0x20, 0x24, 0x31, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x6f, 0x6e, 0x54, 0x35, 0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x37, 0x22, 0x20,
		0x33, 0x47, 0x45, 0x41, 0x52, 0x54, 0x48, 0x31, 0x30, 0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x78, 0x42, 0x75,
		0x7a, 0x7a, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x4d, 0x61, 0x72, 0x76, 0x65, 0x6c, 0x53, 0x75,
		0x72, 0x66, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x75, 0x72, 0x66, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x33, 0x47, 0x53, 0x75, 0x72, 0x66, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x32, 0x53, 0x75, 0x72, 0x66, 0x20, 0x53, 0x70, 0x69, 0x63, 0x65, 0x53, 0x75, 0x72, 0x66, 0x20,
		0x42, 0x72, 0x61, 0x76, 0x6f, 0x53, 0x75, 0x72, 0x66, 0x20, 0x4e, 0x6f, 0x69, 0x72, 0x52, 0x61,
		0x63, 0x65, 0x52, 0x61, 0x63, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x61, 0x63, 0x65, 0x20,
		0x42, 0x6f, 0x6c, 0x74, 0x52, 0x61, 0x63, 0x65, 0x20, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x51, 0x52,
		0x61, 0x63, 0x65, 0x20, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x32, 0x52, 0x61, 0x63, 0x65, 0x20, 0x45,
		0x61, 0x67, 0x6c, 0x65, 0x52, 0x61, 0x63, 0x65, 0x20, 0x4a, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f,
		0x5a, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x5a, 0x65, 0x72,
		0x6f, 0x20, 0x33, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65,
		0x72, 0x6f, 0x20, 0x34, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x36, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x36,
		0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x38, 0x69, 0x5a, 0x65, 0x72, 0x6f, 0x20,
		0x38, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x58, 0x5a, 0x65,
		0x72, 0x6f, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x58, 0x20, 0x4e,
		0x65, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x48, 0x6f, 0x74, 0x48,
		0x6f, 0x74, 0x20, 0x32, 0x48, 0x6f, 0x74, 0x20, 0x33, 0x48, 0x6f, 0x74, 0x20, 0x33, 0x30, 0x69,
		0x48, 0x6f, 0x74, 0x20, 0x33, 0x30, 0x48, 0x6f, 0x74, 0x20, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x48, 0x6f, 0x74, 0x20, 0x53, 0x33, 0x58, 0x48, 0x6f, 0x74, 0x20, 0x53, 0x48, 0x6f, 0x74,
		0x20, 0x53, 0x32, 0x48, 0x6f, 0x74, 0x20, 0x34, 0x48, 0x6f, 0x74, 0x20, 0x34, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x6f, 0x74, 0x20, 0x35, 0x48, 0x6f, 0x74, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x48, 0x6f, 0x74, 0x20, 0x36, 0x58, 0x48, 0x6f, 0x74, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x6f, 0x74, 0x20, 0x37, 0x48, 0x6f, 0x74, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74,
		0x20, 0x38, 0x48, 0x6f, 0x74, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x39,
		0x48, 0x6f, 0x74, 0x20, 0x39, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x48, 0x6f, 0x74,
		0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x48, 0x6f,
		0x74, 0x20, 0x31, 0x30, 0x54, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x78, 0x20, 0x58, 0x36, 0x38, 0x39, 0x44, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x73, 0x20,
		0x4e, 0x46, 0x43, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x78, 0x20, 0x58, 0x36, 0x38, 0x39, 0x48,
		0x6f, 0x74, 0x20, 0x31, 0x30, 0x73, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x69, 0x48, 0x6f, 0x74,
		0x20, 0x53, 0x33, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x31, 0x53, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x31,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x32, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x4e, 0x46, 0x43, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x32, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x32,
		0x30, 0x69, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x30, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x30, 0x20, 0x35,
		0x47, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x74, 0x20,
		0x32, 0x30, 0x53, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x32, 0x69, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x32,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x48, 0x44, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x32, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x36, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x36, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x37, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x37, 0x20, 0x48, 0x44, 0x53, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x34, 0x48, 0x6f, 0x74,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x34, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x35, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x69,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x30, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32,
		0x69, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x69,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32,
		0x20, 0x56, 0x49, 0x50, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x4e, 0x46, 0x43, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x53, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x30, 0x69, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x56, 0x49, 0x50, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x24, 0x31, 0x24, 0x32, 0x49, 0x6e, 0x66,
		0x6f, 0x4b, 0x69, 0x74, 0x49, 0x6e, 0x68, 0x6f, 0x6e, 0x49, 0x6e, 0x6b, 0x74, 0x69, 0x49, 0x6e,
		0x6e, 0x4a, 0x6f, 0x6f, 0x58, 0x33, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45,
		0x58, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x34,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x34, 0x48,
		0x61, 0x6c, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x4f, 0x6e,
		0x65, 0x20, 0x33, 0x47, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x20, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5f,
		0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45,
		0x46, 0x69, 0x72, 0x65, 0x32, 0x20, 0x41, 0x69, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x32, 0x20, 0x41, 0x69, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x20, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x33, 0x20, 0x6d,
		0x69, 0x6e, 0x69, 0x46, 0x69, 0x72, 0x65, 0x20, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x69, 0x72, 0x65, 0x20, 0x34, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x46, 0x69, 0x72, 0x65, 0x20, 0x34, 0x53, 0x75, 0x70, 0x65, 0x72, 0x62, 0x5f,
		0x50, 0x4c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x42, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x75, 0x70, 0x65, 0x72, 0x62, 0x53, 0x75, 0x70, 0x65, 0x72, 0x42, 0x56, 0x49, 0x53, 0x49, 0x4f,
		0x4e, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x54, 0x45, 0x49,
		0x6e, 0x6e, 0x6f, 0x73, 0x49, 0x6e, 0x6e, 0x6f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x4e,
		0x4e, 0x4f, 0x24, 0x31, 0x49, 0x6e, 0x6f, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x32, 0x2b, 0x33, 0x32, 0x50, 0x61, 0x64, 0x20, 0x32, 0x2b, 0x33, 0x32, 0x50, 0x61, 0x64,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x31, 0x2b, 0x31, 0x36, 0x20, 0x57, 0x69, 0x46, 0x69, 0x49,
		0x4e, 0x4f, 0x49, 0x20, 0x65, 0x61, 0x73, 0x79, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x45, 0x61, 0x73,
		0x79, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28,
		0x24, 0x32, 0x29, 0x41, 0x31, 0x37, 0x30, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x37, 0x32, 0x41,
		0x31, 0x38, 0x31, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x31, 0x38, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x41, 0x36, 0x32, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x61, 0x4e, 0x53, 0x2d, 0x50,
		0x31, 0x31, 0x41, 0x38, 0x31, 0x30, 0x30, 0x31, 0x31, 0x2e, 0x36, 0x22, 0x46, 0x6c, 0x65, 0x78,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4e, 0x53, 0x2d, 0x50, 0x31, 0x36, 0x41, 0x54, 0x30, 0x38,
		0x46, 0x6c, 0x65, 0x78, 0x20, 0x38, 0x22, 0x4e, 0x53, 0x2d, 0x50, 0x30, 0x38, 0x41, 0x37, 0x31,
		0x30, 0x30, 0x38, 0x22, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4e, 0x53, 0x2d, 0x50, 0x31, 0x36, 0x41,
		0x54, 0x37, 0x38, 0x35, 0x48, 0x44, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x41, 0x46, 0x54, 0x45, 0x41, 0x4d, 0x52, 0x33, 0x31, 0x31,
		0x48, 0x44, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x41, 0x46, 0x54, 0x4a, 0x4d, 0x53, 0x54,
		0x31, 0x32, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x49, 0x6e, 0x74, 0x65, 0x6c,
		0x4e, 0x55, 0x43, 0x31, 0x30, 0x69, 0x33, 0x46, 0x4e, 0x48, 0x4e, 0x55, 0x43, 0x20, 0x31, 0x30,
		0x49, 0x6e, 0x74, 0x65, 0x78, 0x49, 0x4d, 0x30, 0x33, 0x31, 0x38, 0x4e, 0x44, 0x41, 0x71, 0x75,
		0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x33, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69,
		0x6f, 0x6e, 0x73, 0x20, 0x54, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x61, 0x20,
		0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x20,
		0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x54, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75,
		0x61, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71,
		0x75, 0x61, 0x20, 0x46, 0x75, 0x6c, 0x76, 0x75, 0x20, 0x45, 0x35, 0x41, 0x71, 0x75, 0x61, 0x20,
		0x4a, 0x65, 0x77, 0x65, 0x6c, 0x20, 0x32, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65,
		0x20, 0x49, 0x49, 0x49, 0x41, 0x71, 0x75, 0x61, 0x20, 0x34, 0x2e, 0x30, 0x20, 0x34, 0x47, 0x41,
		0x71, 0x75, 0x61, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x47, 0x41, 0x71, 0x75, 0x61, 0x20,
		0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x34, 0x47, 0x41, 0x71, 0x75, 0x61, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x34, 0x47, 0x41, 0x71, 0x75, 0x61, 0x20, 0x5a, 0x65, 0x6e, 0x69, 0x74, 0x68,
		0x41, 0x71, 0x75, 0x61, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x49, 0x56, 0x41, 0x71, 0x75,
		0x61, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x34, 0x47, 0x41, 0x71, 0x75, 0x61, 0x20, 0x54,
		0x72, 0x65, 0x6e, 0x64, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x61, 0x20, 0x41, 0x6d,
		0x61, 0x7a, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x53, 0x75, 0x70,
		0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x53, 0x74,
		0x79, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x20, 0x53, 0x74, 0x72, 0x6f, 0x6e,
		0x67, 0x20, 0x35, 0x2e, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x43,
		0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x45, 0x6c, 0x79, 0x74, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x79, 0x74, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x45, 0x6c, 0x79,
		0x74, 0x20, 0x24, 0x31, 0x49, 0x56, 0x30, 0x33, 0x31, 0x38, 0x4e, 0x44, 0x49, 0x6e, 0x64, 0x69,
		0x65, 0x20, 0x31, 0x31, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x36, 0x49, 0x6e, 0x66, 0x69, 0x65,
		0x20, 0x37, 0x37, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x20, 0x54, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e,
		0x76, 0x65, 0x6e, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x6e, 0x4b, 0x4d, 0x35, 0x50, 0x52, 0x4f, 0x4b,
		0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x72, 0x62, 0x69, 0x73, 0x49, 0x72, 0x69, 0x73, 0x56,
		0x6f, 0x78, 0x20, 0x24, 0x31, 0x53, 0x4e, 0x33, 0x30, 0x56, 0x6f, 0x78, 0x20, 0x46, 0x6f, 0x72,
		0x74, 0x69, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x56, 0x65, 0x72, 0x6f, 0x56, 0x4f, 0x58, 0x20, 0x41,
		0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x41, 0x6c, 0x70,
		0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x4f, 0x58, 0x20, 0x53, 0x54, 0x45, 0x45, 0x4c,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x53, 0x74, 0x65, 0x65, 0x6c, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x56, 0x4f, 0x58, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x56, 0x6f, 0x78, 0x20,
		0x41, 0x6c, 0x70, 0x68, 0x61, 0x56, 0x4f, 0x58, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x56,
		0x6f, 0x78, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x56, 0x4f, 0x58, 0x20, 0x50, 0x4f, 0x50,
		0x20, 0x70, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x4f, 0x58, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x6f, 0x78, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x5f, 0x50, 0x5f, 0x50, 0x52,
		0x4f, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x50, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x20,
		0x24, 0x31, 0x49, 0x53, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x52, 0x53, 0x30, 0x30,
		0x32, 0x2d, 0x31, 0x36, 0x49, 0x2d, 0x53, 0x36, 0x49, 0x53, 0x32, 0x53, 0x58, 0x31, 0x20, 0x6d,
		0x69, 0x6e, 0x69, 0x58, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4a, 0x41, 0x59, 0x2d, 0x54, 0x65,
		0x63, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x50, 0x43, 0x20, 0x50, 0x41, 0x31, 0x30,
		0x2e, 0x31, 0x4d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x50, 0x43, 0x20, 0x24, 0x31, 0x4a,
		0x46, 0x6f, 0x6e, 0x65, 0x4a, 0x4b, 0x4c, 0x4a, 0x50, 0x61, 0x79, 0x4a, 0x52, 0x45, 0x4e, 0x4a,
		0x56, 0x43, 0x41, 0x46, 0x54, 0x53, 0x4f, 0x30, 0x30, 0x31, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54,
		0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4a, 0x65, 0x64, 0x69, 0x52,
		0x65, 0x6d, 0x69, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x6d, 0x69, 0x78, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x4a, 0x65, 0x6b, 0x61, 0x4a, 0x4b, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x4a, 0x4b,
		0x20, 0x24, 0x31, 0x4a, 0x65, 0x73, 0x79, 0x4a, 0x39, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x39,
		0x73, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x69, 0x61, 0x6b, 0x65, 0x4a, 0x4b, 0x2d, 0x24, 0x31, 0x4a,
		0x69, 0x61, 0x79, 0x75, 0x47, 0x34, 0x2f, 0x47, 0x35, 0x4a, 0x59, 0x2d, 0x24, 0x31, 0x4a, 0x69,
		0x6e, 0x67, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x20, 0x34, 0x47, 0x46, 0x72, 0x65, 0x73, 0x68,
		0x20, 0x34, 0x47, 0x48, 0x6f, 0x74, 0x7a, 0x20, 0x4d, 0x31, 0x48, 0x69, 0x74, 0x20, 0x34, 0x47,
		0x50, 0x61, 0x73, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x73, 0x73, 0x20, 0x33, 0x47,
		0x47, 0x6f, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x34,
		0x47, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x33, 0x47, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x4c,
		0x54, 0x45, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x49, 0x47, 0x4f, 0x20, 0x4c, 0x33, 0x42, 0x61, 0x73, 0x63, 0x6f, 0x20, 0x4e,
		0x65, 0x6f, 0x42, 0x61, 0x73, 0x63, 0x6f, 0x20, 0x4d, 0x35, 0x30, 0x30, 0x20, 0x33, 0x47, 0x42,
		0x61, 0x73, 0x63, 0x6f, 0x20, 0x24, 0x31, 0x54, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x20, 0x53, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x47, 0x4f, 0x20, 0x4c, 0x32, 0x49, 0x47, 0x4f, 0x20, 0x24,
		0x31, 0x4a, 0x69, 0x6f, 0x4a, 0x69, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4e, 0x65, 0x78,
		0x74, 0x4a, 0x69, 0x76, 0x69, 0x52, 0x65, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20,
		0x24, 0x31, 0x4f, 0x70, 0x75, 0x73, 0x20, 0x53, 0x33, 0x4a, 0x53, 0x50, 0x51, 0x36, 0x35, 0x4a,
		0x53, 0x50, 0x20, 0x51, 0x36, 0x35, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x4b, 0x6c, 0x69,
		0x63, 0x6b, 0x20, 0x24, 0x31, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x56, 0x69, 0x65, 0x77,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x74, 0x72, 0x65,
		0x6d, 0x65, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x24, 0x31, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65,
		0x20, 0x24, 0x31, 0x4a, 0x6f, 0x6c, 0x6c, 0x61, 0x4a, 0x6f, 0x79, 0x4a, 0x6f, 0x79, 0x53, 0x75,
		0x72, 0x66, 0x4a, 0x53, 0x31, 0x30, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x45, 0x5a, 0x70, 0x61,
		0x64, 0x20, 0x24, 0x31, 0x4a, 0x75, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x20, 0x53, 0x79, 0x73, 0x74,
		0x65, 0x6d, 0x73, 0x4a, 0x75, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x43, 0x65, 0x64, 0x61,
		0x72, 0x23, 0x43, 0x54, 0x38, 0x43, 0x54, 0x38, 0x4a, 0x75, 0x73, 0x74, 0x35, 0x43, 0x6f, 0x73,
		0x6d, 0x6f, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d, 0x20, 0x24, 0x31, 0x46,
		0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d, 0x53, 0x70, 0x61, 0x63, 0x65, 0x72, 0x20, 0x32, 0x53, 0x53,
		0x70, 0x61, 0x63, 0x65, 0x72, 0x20, 0x32, 0x4a, 0x55, 0x53, 0x54, 0x35, 0x53, 0x50, 0x41, 0x43,
		0x45, 0x52, 0x53, 0x70, 0x61, 0x63, 0x65, 0x72, 0x42, 0x4c, 0x41, 0x53, 0x54, 0x45, 0x52, 0x20,
		0x32, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20, 0x32, 0x42, 0x4c, 0x41, 0x53, 0x54, 0x45,
		0x52, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x2d, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x41,
		0x56, 0x54, 0x45, 0x43, 0x48, 0x5f, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x59, 0x5f, 0x46, 0x32, 0x4e,
		0x61, 0x76, 0x74, 0x65, 0x63, 0x68, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x79, 0x20, 0x46, 0x32,
		0x4b, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4b, 0x54, 0x32, 0x30, 0x32, 0x30, 0x31, 0x31, 0x39,
		0x39, 0x4b, 0x54, 0x32, 0x30, 0x32, 0x30, 0x31, 0x31, 0x38, 0x38, 0x54, 0x31, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x44, 0x4f, 0x58, 0x2d, 0x32, 0x31, 0x33, 0x30, 0x69,
		0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x44, 0x4f, 0x58, 0x2d, 0x32,
		0x31, 0x32, 0x33, 0x58, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x44, 0x4f, 0x58, 0x2d, 0x32,
		0x31, 0x32, 0x31, 0x4d, 0x54, 0x34, 0x30, 0x4c, 0x44, 0x58, 0x41, 0x2d, 0x32, 0x30, 0x32, 0x32,
		0x58, 0x32, 0x37, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x44, 0x58, 0x41, 0x2d, 0x32, 0x31, 0x32,
		0x32, 0x58, 0x32, 0x37, 0x53, 0x50, 0x61, 0x63, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4b, 0x41, 0x54, 0x56, 0x31, 0x4b, 0x44, 0x44, 0x49, 0x69, 0x69, 0x64, 0x61, 0x20, 0x49, 0x6e,
		0x66, 0x6f, 0x42, 0x61, 0x72, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x72, 0x20,
		0x41, 0x30, 0x32, 0x4b, 0x49, 0x4e, 0x47, 0x5a, 0x4f, 0x4e, 0x45, 0x4b, 0x31, 0x20, 0x54, 0x75,
		0x72, 0x62, 0x6f, 0x4b, 0x4e, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4b, 0x4f, 0x50, 0x4f,
		0x4b, 0x52, 0x45, 0x5a, 0x4b, 0x52, 0x49, 0x50, 0x4b, 0x24, 0x31, 0x4b, 0x52, 0x4f, 0x4e, 0x4f,
		0x4e, 0x45, 0x54, 0x31, 0x31, 0x30, 0x30, 0x4e, 0x45, 0x54, 0x20, 0x31, 0x31, 0x30, 0x30, 0x4e,
		0x45, 0x54, 0x20, 0x24, 0x31, 0x4e, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x4e,
		0x65, 0x74, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x4e, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x58,
		0x4e, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x45, 0x54, 0x5f, 0x4b, 0x37, 0x4e, 0x65, 0x74,
		0x20, 0x4b, 0x37, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
		0x6b, 0x4b, 0x54, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x4b, 0x5a, 0x47, 0x4b, 0x61, 0x61, 0x6e, 0x4b,
		0x61, 0x69, 0x6f, 0x6d, 0x79, 0x4b, 0x61, 0x69, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x20, 0x24, 0x31,
		0x4b, 0x61, 0x6c, 0x6c, 0x65, 0x79, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x47, 0x5f, 0x32, 0x42,
		0x6c, 0x61, 0x63, 0x6b, 0x20, 0x47, 0x20, 0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x24, 0x31,
		0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x50, 0x52, 0x4f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x20, 0x4d, 0x41, 0x58, 0x45, 0x6c, 0x65, 0x6d, 0x65,
		0x6e, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x49, 0x4c, 0x56, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x58,
		0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x24, 0x31, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x20, 0x50,
		0x4c, 0x41, 0x59, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x45,
		0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x20, 0x51, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20,
		0x51, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x32, 0x45, 0x6c,
		0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x47, 0x4f, 0x4c, 0x44, 0x5f,
		0x50, 0x52, 0x4f, 0x47, 0x6f, 0x6c, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x2d, 0x42, 0x4f, 0x4f,
		0x4b, 0x24, 0x31, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x24, 0x31,
		0x4b, 0x61, 0x6e, 0x6a, 0x69, 0x43, 0x61, 0x74, 0x61, 0x20, 0x37, 0x4b, 0x4a, 0x2d, 0x47, 0x4f,
		0x43, 0x48, 0x49, 0x47, 0x6f, 0x63, 0x68, 0x69, 0x41, 0x69, 0x6c, 0x75, 0x20, 0x4d, 0x61, 0x78,
		0x59, 0x75, 0x62, 0x69, 0x20, 0x33, 0x47, 0x41, 0x6c, 0x66, 0x61, 0x4b, 0x4a, 0x2d, 0x24, 0x31,
		0x4b, 0x4a, 0x2d, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x34, 0x4b, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x34, 0x4b, 0x4b, 0x61, 0x70, 0x73, 0x79, 0x73, 0x4b, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x6e, 0x4b,
		0x39, 0x20, 0x4b, 0x61, 0x76, 0x61, 0x63, 0x68, 0x20, 0x34, 0x47, 0x4b, 0x39, 0x20, 0x4d, 0x75,
		0x73, 0x69, 0x63, 0x20, 0x34, 0x47, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x45,
		0x63, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x45, 0x63, 0x6f, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x4b, 0x39,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x4b, 0x39, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x4b, 0x39, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x59, 0x75, 0x76, 0x61, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x41, 0x34, 0x30,
		0x20, 0x49, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x24, 0x31, 0x20,
		0x49, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x4b, 0x39, 0x20, 0x56, 0x69, 0x72, 0x61, 0x61, 0x74, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x61, 0x20, 0x53, 0x6c, 0x65, 0x65, 0x6b, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x61, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x34, 0x47,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x41, 0x75, 0x72, 0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x41, 0x75,
		0x72, 0x61, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x41, 0x75, 0x72, 0x61, 0x20, 0x43, 0x68, 0x61,
		0x6d, 0x70, 0x41, 0x75, 0x72, 0x61, 0x20, 0x53, 0x6c, 0x65, 0x65, 0x6b, 0x20, 0x34, 0x47, 0x41,
		0x6c, 0x66, 0x61, 0x20, 0x41, 0x31, 0x31, 0x34, 0x20, 0x51, 0x75, 0x61, 0x64, 0x4b, 0x39, 0x20,
		0x56, 0x69, 0x72, 0x61, 0x61, 0x74, 0x20, 0x34, 0x47, 0x4d, 0x41, 0x43, 0x48, 0x46, 0x49, 0x56,
		0x45, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x46, 0x69, 0x76, 0x65, 0x4d, 0x41, 0x43, 0x48, 0x4f, 0x4e,
		0x45, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d, 0x61,
		0x63, 0x68, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x41, 0x43, 0x48, 0x4f,
		0x4e, 0x45, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d, 0x61, 0x63, 0x68, 0x20,
		0x4f, 0x6e, 0x65, 0x4d, 0x41, 0x43, 0x48, 0x20, 0x53, 0x49, 0x58, 0x20, 0x56, 0x52, 0x54, 0x69,
		0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x53, 0x69, 0x78, 0x20,
		0x56, 0x52, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x53, 0x24, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x53, 0x24, 0x31, 0x54,
		0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x20, 0x34, 0x47,
		0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x32,
		0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x54, 0x69,
		0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d, 0x6f, 0x67, 0x68, 0x75, 0x6c, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x53, 0x37, 0x54,
		0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x6e, 0x65, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x33, 0x44, 0x20, 0x50,
		0x6c, 0x65, 0x78, 0x53, 0x32, 0x30, 0x35, 0x32, 0x47, 0x42, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69,
		0x75, 0x6d, 0x20, 0x53, 0x32, 0x35, 0x30, 0x20, 0x32, 0x47, 0x42, 0x4b, 0x2d, 0x6c, 0x69, 0x74,
		0x65, 0x20, 0x46, 0x33, 0x4b, 0x2d, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x46, 0x33, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x6c, 0x65, 0x20, 0x56, 0x41, 0x34, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x51,
		0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x48, 0x44, 0x51, 0x75, 0x61,
		0x74, 0x74, 0x72, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x49, 0x50, 0x53, 0x51, 0x75, 0x61, 0x74,
		0x74, 0x72, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x56, 0x52, 0x4b, 0x61, 0x74, 0x61, 0x49, 0x35,
		0x54, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x42, 0x6f, 0x78, 0x20, 0x32, 0x4b, 0x61, 0x7a,
		0x61, 0x6d, 0x54, 0x6f, 0x72, 0x6e, 0x61, 0x64, 0x6f, 0x20, 0x33, 0x34, 0x38, 0x54, 0x68, 0x75,
		0x6e, 0x64, 0x65, 0x72, 0x20, 0x34, 0x35, 0x30, 0x57, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x65, 0x72,
		0x20, 0x58, 0x34, 0x2e, 0x30, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x20, 0x58, 0x24, 0x31,
		0x2e, 0x24, 0x32, 0x4b, 0x61, 0x7a, 0x75, 0x6e, 0x61, 0x4b, 0x41, 0x5a, 0x2d, 0x4e, 0x32, 0x30,
		0x65, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x4d, 0x59, 0x46, 0x4c, 0x49, 0x58, 0x4b, 0x65, 0x6d, 0x70,
		0x6c, 0x65, 0x72, 0x20, 0x26, 0x20, 0x53, 0x74, 0x72, 0x61, 0x75, 0x73, 0x73, 0x41, 0x6c, 0x75,
		0x6d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x41, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x69, 0x33, 0x41, 0x6c, 0x75, 0x6d,
		0x69, 0x6e, 0x69, 0x20, 0x33, 0x50, 0x24, 0x31, 0x50, 0x31, 0x20, 0x41, 0x6d, 0x61, 0x74, 0x65,
		0x75, 0x72, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x54, 0x56, 0x54, 0x56, 0x4b, 0x45,
		0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x58, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x38,
		0x5f, 0x50, 0x4c, 0x55, 0x53, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x45, 0x4d, 0x50, 0x4c,
		0x45, 0x52, 0x5f, 0x39, 0x4b, 0x65, 0x6e, 0x62, 0x6f, 0x45, 0x36, 0x31, 0x50, 0x72, 0x6f, 0x45,
		0x36, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x33, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x65,
		0x6e, 0x65, 0x6b, 0x73, 0x69, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x74, 0x79, 0x53, 0x75, 0x6e, 0x53,
		0x69, 0x67, 0x6d, 0x61, 0x4b, 0x65, 0x6e, 0x78, 0x69, 0x6e, 0x64, 0x61, 0x54, 0x68, 0x72, 0x65,
		0x65, 0x20, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x69, 0x6e, 0x67, 0x73, 0x20, 0x57, 0x24, 0x31, 0x4b,
		0x68, 0x61, 0x64, 0x61, 0x73, 0x4b, 0x69, 0x61, 0x6e, 0x6f, 0x53, 0x6c, 0x69, 0x6d, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x24, 0x31, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x20, 0x44,
		0x55, 0x41, 0x4c, 0x20, 0x33, 0x47, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x24,
		0x31, 0x2e, 0x24, 0x32, 0x22, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63,
		0x65, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x67, 0x61,
		0x6e, 0x63, 0x65, 0x20, 0x36, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x36, 0x20,
		0x35, 0x2e, 0x38, 0x35, 0x22, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x24, 0x31,
		0x2e, 0x24, 0x32, 0x22, 0x24, 0x32, 0x20, 0x24, 0x33, 0x4b, 0x69, 0x6e, 0x67, 0x62, 0x6f, 0x78,
		0x4b, 0x69, 0x6e, 0x67, 0x73, 0x74, 0x61, 0x72, 0x4b, 0x69, 0x6e, 0x67, 0x73, 0x75, 0x6e, 0x4b,
		0x69, 0x6e, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x4b, 0x69, 0x6f, 0x77, 0x61, 0x24, 0x31, 0x20, 0x43,
		0x72, 0x69, 0x73, 0x74, 0x61, 0x6c, 0x53, 0x35, 0x20, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x53, 0x35,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4b, 0x69, 0x76, 0x69, 0x24, 0x31, 0x20, 0x76, 0x24, 0x32,
		0x4b, 0x6c, 0x69, 0x70, 0x61, 0x64, 0x4b, 0x4c, 0x36, 0x32, 0x38, 0x5f, 0x48, 0x4c, 0x4b, 0x4c,
		0x36, 0x32, 0x38, 0x48, 0x4c, 0x4b, 0x4c, 0x34, 0x38, 0x39, 0x38, 0x2d, 0x41, 0x35, 0x30, 0x4b,
		0x6f, 0x63, 0x61, 0x73, 0x6f, 0x44, 0x58, 0x37, 0x36, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x36,
		0x32, 0x30, 0x30, 0x4d, 0x37, 0x32, 0x39, 0x4d, 0x58, 0x37, 0x38, 0x30, 0x4d, 0x38, 0x35, 0x31,
		0x4d, 0x31, 0x30, 0x35, 0x30, 0x73, 0x4d, 0x31, 0x30, 0x37, 0x30, 0x4d, 0x58, 0x37, 0x33, 0x36,
		0x4b, 0x6f, 0x64, 0x61, 0x6b, 0x49, 0x4d, 0x35, 0x53, 0x65, 0x72, 0x65, 0x6e, 0x20, 0x24, 0x31,
		0x45, 0x6b, 0x74, 0x72, 0x61, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x77, 0x61, 0x79, 0x20, 0x4c, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x77, 0x61, 0x79, 0x20, 0x24, 0x31, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x4b, 0x6f, 0x67, 0x61, 0x6e, 0x41, 0x67, 0x6f,
		0x72, 0x61, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x67, 0x6f, 0x72, 0x61, 0x20,
		0x58, 0x49, 0x41, 0x67, 0x6f, 0x72, 0x61, 0x20, 0x31, 0x31, 0x41, 0x67, 0x6f, 0x72, 0x61, 0x20,
		0x47, 0x6f, 0x41, 0x67, 0x6f, 0x72, 0x61, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x67,
		0x6f, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4b, 0x6f, 0x6d, 0x75, 0x4b, 0x6f, 0x6e, 0x6b,
		0x61, 0x4b, 0x43, 0x35, 0x31, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69,
		0x78, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x43, 0x35, 0x31, 0x36, 0x45, 0x35, 0x36, 0x36, 0x30, 0x53,
		0x56, 0x69, 0x76, 0x61, 0x20, 0x35, 0x36, 0x36, 0x30, 0x73, 0x57, 0x38, 0x33, 0x30, 0x54, 0x61,
		0x6e, 0x67, 0x6f, 0x20, 0x38, 0x33, 0x30, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x20, 0x24, 0x31,
		0x57, 0x39, 0x39, 0x30, 0x54, 0x75, 0x78, 0x65, 0x64, 0x6f, 0x20, 0x39, 0x39, 0x30, 0x4b, 0x6f,
		0x6e, 0x72, 0x6f, 0x77, 0x42, 0x69, 0x67, 0x43, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6f, 0x6c, 0x2d,
		0x4b, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x35, 0x35, 0x53, 0x6f, 0x66, 0x74, 0x20, 0x35, 0x43, 0x6f,
		0x6f, 0x6c, 0x20, 0x46, 0x69, 0x76, 0x65, 0x4a, 0x75, 0x73, 0x74, 0x20, 0x35, 0x4c, 0x69, 0x6e,
		0x6b, 0x20, 0x35, 0x45, 0x61, 0x73, 0x79, 0x20, 0x35, 0x43, 0x69, 0x74, 0x79, 0x20, 0x35, 0x43,
		0x69, 0x74, 0x79, 0x20, 0x35, 0x35, 0x53, 0x6b, 0x79, 0x20, 0x35, 0x35, 0x53, 0x77, 0x65, 0x65,
		0x74, 0x20, 0x24, 0x31, 0x4b, 0x2d, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x30, 0x33, 0x4b, 0x6f,
		0x6f, 0x62, 0x65, 0x65, 0x46, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x6f, 0x6f, 0x6c, 0x6e,
		0x65, 0x65, 0x4b, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x57,
		0x35, 0x30, 0x32, 0x4b, 0x6f, 0x72, 0x69, 0x64, 0x79, 0x4b, 0x6f, 0x73, 0x6c, 0x61, 0x6d, 0x4b,
		0x72, 0x61, 0x66, 0x74, 0x4b, 0x54, 0x56, 0x2d, 0x24, 0x31, 0x4b, 0x72, 0xc3, 0xbc, 0x67, 0x65,
		0x72, 0x26, 0x4d, 0x61, 0x74, 0x7a, 0x4d, 0x4f, 0x56, 0x45, 0x38, 0x6d, 0x69, 0x6e, 0x69, 0x4d,
		0x4f, 0x56, 0x45, 0x20, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x36,
		0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45, 0x20, 0x36, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x4d, 0x4f, 0x56, 0x45, 0x20, 0x24, 0x31, 0x44, 0x52, 0x49, 0x56, 0x45, 0x20, 0x34, 0x20, 0x6d,
		0x69, 0x6e, 0x69, 0x20, 0x4c, 0x54, 0x45, 0x44, 0x52, 0x49, 0x56, 0x45, 0x20, 0x24, 0x31, 0x46,
		0x4c, 0x4f, 0x57, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x4c, 0x4f, 0x57, 0x20,
		0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x4c, 0x4f, 0x57, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x56,
		0x45, 0x20, 0x34, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x34, 0x4c, 0x49, 0x56, 0x45,
		0x20, 0x35, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4c, 0x49, 0x56, 0x45, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x49, 0x56, 0x45, 0x20,
		0x24, 0x31, 0x53, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x24, 0x31, 0x4d, 0x4f, 0x56, 0x45, 0x20, 0x39,
		0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x45, 0x41,
		0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x31,
		0x30, 0x2e, 0x35, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x37, 0x2e, 0x31,
		0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x45, 0x41,
		0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4b, 0x75, 0x6c, 0x69, 0x61,
		0x6f, 0x4b, 0x75, 0x6c, 0x74, 0x4b, 0x75, 0x6d, 0x61, 0x69, 0x4b, 0x75, 0x72, 0x69, 0x6f, 0x54,
		0x61, 0x62, 0x20, 0x32, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x43, 0x31, 0x34, 0x35, 0x30, 0x30,
		0x4b, 0x79, 0x6f, 0x63, 0x65, 0x72, 0x61, 0x4d, 0x69, 0x6c, 0x61, 0x6e, 0x6f, 0x42, 0x61, 0x6c,
		0x6d, 0x75, 0x64, 0x61, 0x20, 0x24, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x24, 0x31, 0x52, 0x69,
		0x73, 0x65, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x47, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x45,
		0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x43, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x4a, 0x44, 0x69,
		0x67, 0x6e, 0x6f, 0x20, 0x54, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x58, 0x53, 0x32, 0x44, 0x69,
		0x67, 0x6e, 0x6f, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x32, 0x44,
		0x69, 0x67, 0x6e, 0x6f, 0x20, 0x52, 0x61, 0x66, 0x72, 0x65, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20,
		0x42, 0x58, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x42, 0x58, 0x20, 0x32, 0x4d, 0x69, 0x72, 0x61,
		0x69, 0x65, 0x20, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x62, 0x61, 0x72, 0x20, 0x58, 0x56, 0x48, 0x79,
		0x64, 0x72, 0x6f, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x45, 0x44, 0x47, 0x45, 0x48, 0x79, 0x64,
		0x72, 0x6f, 0x20, 0x58, 0x54, 0x52, 0x4d, 0x43, 0x36, 0x37, 0x33, 0x30, 0x48, 0x79, 0x64, 0x72,
		0x6f, 0x20, 0x49, 0x43, 0x4f, 0x4e, 0x43, 0x36, 0x37, 0x35, 0x30, 0x48, 0x79, 0x64, 0x72, 0x6f,
		0x20, 0x45, 0x4c, 0x49, 0x54, 0x45, 0x43, 0x36, 0x35, 0x33, 0x30, 0x4e, 0x48, 0x79, 0x64, 0x72,
		0x6f, 0x20, 0x4c, 0x49, 0x46, 0x45, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x57, 0x41, 0x56, 0x45,
		0x43, 0x36, 0x37, 0x34, 0x33, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x52, 0x65, 0x61, 0x63, 0x68,
		0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72,
		0x63, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x32, 0x45, 0x37, 0x31, 0x31, 0x30, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f,
		0x72, 0x63, 0x65, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x43, 0x36, 0x39, 0x33,
		0x30, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x35, 0x47, 0x4b, 0x43, 0x2d,
		0x53, 0x37, 0x30, 0x31, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x4b, 0x59, 0x47, 0x30, 0x31, 0x54,
		0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x35, 0x47, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x53, 0x4d,
		0x69, 0x72, 0x61, 0x69, 0x65, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x31, 0x45,
		0x61, 0x73, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x24, 0x31, 0x4d, 0x61, 0x72, 0x76, 0x65, 0x72, 0x61, 0x4d, 0x61, 0x6d, 0x6f, 0x72, 0x69,
		0x6e, 0x6f, 0x20, 0x35, 0x47, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x61, 0x20, 0x34, 0x47, 0x47, 0x72,
		0x61, 0x74, 0x69, 0x6e, 0x61, 0x20, 0x24, 0x31, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x58,
		0x30, 0x31, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x20, 0x24, 0x31, 0x54, 0x6f, 0x72, 0x71, 0x75,
		0x65, 0x20, 0x47, 0x30, 0x32, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x33, 0x54,
		0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x34, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x42, 0x61,
		0x73, 0x69, 0x6f, 0x20, 0x34, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x20, 0x33, 0x4b, 0x61, 0x6e, 0x74,
		0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x51, 0x58, 0x51, 0x75,
		0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x51, 0x5a, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x51, 0x5a, 0x31, 0x30, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x51, 0x5a,
		0x38, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x30, 0x31, 0x52, 0x61, 0x66, 0x72, 0x65,
		0x49, 0x6e, 0x66, 0x6f, 0x62, 0x61, 0x72, 0x20, 0x41, 0x30, 0x33, 0x55, 0x72, 0x62, 0x61, 0x6e,
		0x6f, 0x20, 0x4c, 0x30, 0x31, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x4c, 0x30, 0x32, 0x55,
		0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x4c, 0x30, 0x33, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20,
		0x56, 0x30, 0x31, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x56, 0x30, 0x32, 0x55, 0x72, 0x62,
		0x61, 0x6e, 0x6f, 0x20, 0x56, 0x30, 0x33, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65,
		0x20, 0x58, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x33, 0x42, 0x72, 0x69, 0x67, 0x61, 0x64, 0x69,
		0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x53, 0x63, 0x6f, 0x75, 0x74, 0x4c, 0x75, 0x63, 0x65, 0x4b,
		0x61, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f, 0x20, 0x32, 0x4b, 0x61, 0x74,
		0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f, 0x20, 0x32, 0x2b, 0x55, 0x72, 0x62, 0x61,
		0x6e, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x47, 0x7a, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x79, 0x70, 0x65, 0x2d, 0x58, 0x58, 0x53, 0x32, 0x31, 0x35, 0x31, 0x43, 0x6f,
		0x61, 0x73, 0x74, 0x4b, 0x5a, 0x20, 0x24, 0x31, 0x24, 0x31, 0x2d, 0x24, 0x32, 0x4b, 0x79, 0x6f,
		0x77, 0x6f, 0x6e, 0x4b, 0x7a, 0x65, 0x6e, 0x55, 0x72, 0x65, 0x6b, 0x69, 0x5f, 0x55, 0x31, 0x55,
		0x72, 0x65, 0x6b, 0x69, 0x20, 0x55, 0x31, 0x45, 0x76, 0x61, 0x5f, 0x45, 0x30, 0x31, 0x45, 0x76,
		0x61, 0x20, 0x45, 0x30, 0x31, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x56, 0x31, 0x52, 0x45,
		0x58, 0x20, 0x52, 0x58, 0x52, 0x65, 0x78, 0x20, 0x52, 0x58, 0x4c, 0x61, 0x6d, 0x69, 0x61, 0x20,
		0x4c, 0x30, 0x31, 0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x79, 0x20, 0x24, 0x31, 0x44, 0x41, 0x52,
		0x54, 0x20, 0x4b, 0x5a, 0x30, 0x37, 0x44, 0x61, 0x72, 0x74, 0x20, 0x4b, 0x5a, 0x30, 0x37, 0x4c,
		0x2d, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31,
		0x53, 0x61, 0x70, 0x70, 0x68, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x49, 0x51, 0x4c,
		0x43, 0x54, 0x4c, 0x45, 0x4d, 0x46, 0x4f, 0x4c, 0x47, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x44, 0x4d, 0x2d, 0x24, 0x31, 0x4c, 0x37, 0x30, 0x46,
		0x37, 0x30, 0x4c, 0x39, 0x30, 0x4c, 0x38, 0x30, 0x4c, 0x47, 0x2d, 0x44, 0x33, 0x34, 0x30, 0x46,
		0x38, 0x4c, 0x37, 0x30, 0x20, 0x54, 0x72, 0x69, 0x4c, 0x33, 0x30, 0x4c, 0x47, 0x2d, 0x44, 0x31,
		0x36, 0x30, 0x4c, 0x34, 0x30, 0x4c, 0x34, 0x35, 0x4c, 0x33, 0x35, 0x4c, 0x32, 0x30, 0x4c, 0x36,
		0x30, 0x4c, 0x36, 0x30, 0x69, 0x4c, 0x36, 0x35, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30, 0x41,
		0x50, 0x4d, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x34, 0x4c, 0x47, 0x2d, 0x50, 0x35,
		0x30, 0x35, 0x52, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30, 0x56, 0x50, 0x50, 0x5a, 0x6f, 0x6e,
		0x65, 0x20, 0x34, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x32, 0x30, 0x50, 0x4d, 0x54, 0x72, 0x69, 0x62,
		0x75, 0x74, 0x65, 0x20, 0x45, 0x6d, 0x70, 0x69, 0x72, 0x65, 0x4c, 0x47, 0x2d, 0x53, 0x50, 0x32,
		0x30, 0x30, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x44, 0x79, 0x6e, 0x61, 0x73, 0x74,
		0x79, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x35, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74,
		0x65, 0x20, 0x32, 0x4c, 0x47, 0x2d, 0x46, 0x35, 0x37, 0x30, 0x42, 0x61, 0x6e, 0x64, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x56, 0x53, 0x39, 0x33, 0x30, 0x20, 0x34, 0x47, 0x53, 0x70, 0x65, 0x63, 0x74,
		0x72, 0x75, 0x6d, 0x20, 0x49, 0x49, 0x20, 0x34, 0x47, 0x47, 0x32, 0x47, 0x32, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x47, 0x33, 0x47, 0x33, 0x20, 0x56, 0x69, 0x67, 0x6f, 0x72, 0x4c, 0x47, 0x2d, 0x46,
		0x34, 0x31, 0x30, 0x53, 0x47, 0x33, 0x20, 0x41, 0x47, 0x33, 0x53, 0x47, 0x33, 0x20, 0x42, 0x65,
		0x61, 0x74, 0x47, 0x33, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4c, 0x47, 0x2d, 0x46, 0x34,
		0x36, 0x30, 0x47, 0x33, 0x20, 0x43, 0x61, 0x74, 0x2e, 0x20, 0x36, 0x4c, 0x47, 0x2d, 0x44, 0x37,
		0x32, 0x34, 0x47, 0x33, 0x73, 0x47, 0x34, 0x47, 0x34, 0x63, 0x47, 0x34, 0x20, 0x53, 0x74, 0x79,
		0x6c, 0x75, 0x73, 0x47, 0x34, 0x73, 0x4c, 0x47, 0x2d, 0x48, 0x37, 0x33, 0x35, 0x47, 0x34, 0x20,
		0x42, 0x65, 0x61, 0x74, 0x4c, 0x47, 0x2d, 0x48, 0x37, 0x33, 0x31, 0x47, 0x34, 0x20, 0x56, 0x69,
		0x67, 0x6f, 0x72, 0x47, 0x35, 0x20, 0x53, 0x45, 0x47, 0x36, 0x4c, 0x4d, 0x2d, 0x51, 0x38, 0x35,
		0x30, 0x47, 0x37, 0x20, 0x46, 0x69, 0x74, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x31, 0x30, 0x47, 0x37,
		0x20, 0x4f, 0x6e, 0x65, 0x47, 0x20, 0x46, 0x6c, 0x65, 0x78, 0x47, 0x20, 0x46, 0x6c, 0x65, 0x78,
		0x20, 0x32, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x47, 0x2d, 0x46,
		0x34, 0x33, 0x30, 0x4c, 0x47, 0x78, 0x32, 0x47, 0x78, 0x4c, 0x4d, 0x2d, 0x47, 0x38, 0x35, 0x30,
		0x47, 0x38, 0x58, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d, 0x47, 0x38, 0x31, 0x30,
		0x47, 0x38, 0x53, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x57, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x48, 0x34, 0x31, 0x30, 0x57, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x57, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x47, 0x57,
		0x69, 0x6e, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4a, 0x61, 0x7a, 0x7a, 0x4b, 0x32,
		0x30, 0x46, 0x36, 0x30, 0x41, 0x4b, 0x41, 0x4c, 0x4d, 0x2d, 0x4b, 0x39, 0x32, 0x30, 0x4b, 0x39,
		0x32, 0x4c, 0x47, 0x4c, 0x34, 0x31, 0x43, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x20,
		0x32, 0x4c, 0x47, 0x4c, 0x53, 0x36, 0x36, 0x30, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4d,
		0x61, 0x67, 0x6e, 0x61, 0x4c, 0x47, 0x4c, 0x36, 0x33, 0x42, 0x4c, 0x46, 0x69, 0x65, 0x73, 0x74,
		0x61, 0x46, 0x69, 0x65, 0x73, 0x74, 0x61, 0x20, 0x32, 0x42, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x32,
		0x4c, 0x20, 0x42, 0x65, 0x6c, 0x6c, 0x6f, 0x4c, 0x20, 0x46, 0x69, 0x6e, 0x6f, 0x52, 0x69, 0x73,
		0x69, 0x6f, 0x52, 0x69, 0x73, 0x69, 0x6f, 0x20, 0x32, 0x58, 0x33, 0x30, 0x30, 0x53, 0x70, 0x72,
		0x65, 0x65, 0x4c, 0x47, 0x4d, 0x2d, 0x58, 0x34, 0x30, 0x31, 0x53, 0x58, 0x35, 0x30, 0x30, 0x4c,
		0x47, 0x4d, 0x2d, 0x58, 0x31, 0x30, 0x30, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x46, 0x6f,
		0x6c, 0x64, 0x65, 0x72, 0x20, 0x58, 0x31, 0x30, 0x30, 0x53, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43,
		0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4f, 0x6e,
		0x65, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x20,
		0x32, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x47, 0x4c, 0x47, 0x2d, 0x46, 0x32, 0x32,
		0x30, 0x4b, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x47, 0x4b, 0x4f, 0x70, 0x74, 0x69,
		0x6d, 0x75, 0x73, 0x20, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x49, 0x49, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x75, 0x73, 0x20, 0x4c, 0x33, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20,
		0x4c, 0x34, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x34, 0x20,
		0x49, 0x49, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c,
		0x34, 0x30, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x35, 0x20, 0x49, 0x49, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
		0x20, 0x4c, 0x31, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x39,
		0x20, 0x49, 0x49, 0x4c, 0x47, 0x2d, 0x50, 0x38, 0x37, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x46, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x46, 0x33, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x46, 0x36, 0x4c, 0x47, 0x2d, 0x55, 0x53, 0x37, 0x38, 0x30,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x46, 0x37, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x69, 0x74, 0x20, 0x24, 0x31, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c,
		0x54, 0x45, 0x20, 0x32, 0x4c, 0x47, 0x2d, 0x46, 0x32, 0x36, 0x30, 0x53, 0x4f, 0x70, 0x74, 0x69,
		0x6d, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x33, 0x4c, 0x47, 0x2d, 0x46, 0x31, 0x32, 0x30,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x54, 0x61, 0x67, 0x4c,
		0x47, 0x2d, 0x50, 0x37, 0x30, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37, 0x20, 0x49, 0x49, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37, 0x30, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x4c, 0x2d, 0x30, 0x31, 0x44, 0x50, 0x52, 0x41, 0x44, 0x41,
		0x20, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x2d, 0x30, 0x32, 0x44, 0x4c, 0x2d, 0x30, 0x37,
		0x43, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x20,
		0x4c, 0x2d, 0x30, 0x37, 0x43, 0x56, 0x32, 0x30, 0x51, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x35, 0x30, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x79, 0x4c,
		0x47, 0x2d, 0x4c, 0x53, 0x38, 0x34, 0x30, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x34, 0x47, 0x20,
		0x4c, 0x54, 0x45, 0x38, 0x30, 0x31, 0x4c, 0x47, 0x51, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73,
		0x4c, 0x47, 0x2d, 0x4d, 0x34, 0x30, 0x30, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x53,
		0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x51, 0x37, 0x51, 0x37, 0x2b, 0x51, 0x38, 0x2b, 0x51, 0x38, 0x51, 0x39,
		0x51, 0x37, 0x30, 0x51, 0x35, 0x32, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x50, 0x58, 0x4c, 0x47, 0x2d, 0x4d, 0x53, 0x38, 0x37, 0x30, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74,
		0x20, 0x34, 0x47, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x32, 0x53,
		0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32, 0x20, 0x56, 0x53,
		0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x65,
		0x20, 0x33, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x33,
		0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x79, 0x6c,
		0x6f, 0x20, 0x34, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x35, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20,
		0x36, 0x47, 0x37, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x47, 0x2d, 0x4d, 0x31, 0x35, 0x33,
		0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30, 0x43, 0x4d,
		0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x20, 0x32, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x20,
		0x32, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x72, 0x65, 0x6d, 0x69,
		0x65, 0x72, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x4d, 0x2d, 0x58, 0x35, 0x32,
		0x35, 0x51, 0x36, 0x30, 0x4c, 0x4d, 0x2d, 0x4b, 0x33, 0x31, 0x35, 0x49, 0x4d, 0x57, 0x33, 0x31,
		0x4b, 0x33, 0x31, 0x4c, 0x47, 0x4c, 0x34, 0x32, 0x33, 0x44, 0x4c, 0x53, 0x6f, 0x6c, 0x6f, 0x20,
		0x4c, 0x54, 0x45, 0x4c, 0x47, 0x2d, 0x46, 0x38, 0x32, 0x30, 0x4c, 0x55, 0x58, 0x32, 0x58, 0x20,
		0x43, 0x61, 0x6d, 0x58, 0x20, 0x4d, 0x61, 0x63, 0x68, 0x58, 0x20, 0x43, 0x68, 0x61, 0x72, 0x67,
		0x65, 0x58, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x47, 0x2d, 0x46, 0x37, 0x34, 0x30, 0x4c,
		0x58, 0x20, 0x53, 0x6b, 0x69, 0x6e, 0x58, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x58, 0x20,
		0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x4d, 0x2d, 0x58, 0x35, 0x31, 0x30, 0x57, 0x4d,
		0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x33, 0x58, 0x34, 0x58, 0x34, 0x2b, 0x4b, 0x31,
		0x31, 0x4b, 0x33, 0x30, 0x4c, 0x4d, 0x58, 0x31, 0x33, 0x30, 0x49, 0x4d, 0x4c, 0x4d, 0x2d, 0x4b,
		0x33, 0x31, 0x30, 0x49, 0x4d, 0x57, 0x31, 0x31, 0x4c, 0x4d, 0x2d, 0x58, 0x36, 0x30, 0x30, 0x49,
		0x4d, 0x57, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x34, 0x30, 0x5a,
		0x4d, 0x57, 0x57, 0x33, 0x30, 0x4c, 0x4d, 0x2d, 0x4b, 0x36, 0x31, 0x30, 0x49, 0x4d, 0x57, 0x34,
		0x31, 0x4c, 0x47, 0x2d, 0x48, 0x35, 0x32, 0x32, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x34, 0x47, 0x4c, 0x47, 0x4c, 0x35, 0x38, 0x56, 0x4c, 0x52, 0x61, 0x62, 0x65,
		0x6c, 0x20, 0x32, 0x4c, 0x47, 0x2d, 0x58, 0x31, 0x39, 0x30, 0x52, 0x61, 0x79, 0x56, 0x6f, 0x6c,
		0x74, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x49, 0x49, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x31, 0x30, 0x4c,
		0x47, 0x4d, 0x2d, 0x4b, 0x31, 0x32, 0x31, 0x4c, 0x47, 0x4d, 0x2d, 0x58, 0x34, 0x30, 0x31, 0x4c,
		0x58, 0x34, 0x30, 0x31, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x32, 0x30, 0x4e, 0x58, 0x34, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x4b, 0x34, 0x4b, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x34, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x32, 0x30, 0x4b, 0x34, 0x30,
		0x4b, 0x34, 0x30, 0x53, 0x4c, 0x4d, 0x2d, 0x4b, 0x34, 0x31, 0x30, 0x4b, 0x34, 0x31, 0x53, 0x4c,
		0x47, 0x2d, 0x58, 0x32, 0x32, 0x30, 0x4b, 0x35, 0x4c, 0x4d, 0x2d, 0x58, 0x35, 0x34, 0x30, 0x4b,
		0x35, 0x30, 0x53, 0x4b, 0x35, 0x30, 0x34, 0x30, 0x32, 0x4c, 0x47, 0x53, 0x70, 0x72, 0x61, 0x79,
		0x4c, 0x2d, 0x30, 0x32, 0x4b, 0x4a, 0x6f, 0x4a, 0x6f, 0x4c, 0x4d, 0x2d, 0x58, 0x36, 0x32, 0x35,
		0x4e, 0x31, 0x58, 0x36, 0x4c, 0x4d, 0x2d, 0x58, 0x36, 0x32, 0x35, 0x4e, 0x58, 0x36, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x41, 0x72, 0x69, 0x73, 0x74,
		0x6f, 0x20, 0x32, 0x41, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x20, 0x33, 0x58, 0x32, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x56, 0x34, 0x30, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x56, 0x35, 0x30,
		0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d, 0x56, 0x35, 0x31, 0x30, 0x4e, 0x56, 0x35,
		0x30, 0x53, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x32, 0x30, 0x4e,
		0x51, 0x39, 0x32, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x32, 0x37, 0x4c, 0x51, 0x39, 0x20, 0x4f, 0x6e,
		0x65, 0x56, 0x31, 0x30, 0x4b, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4c, 0x4d, 0x2d,
		0x58, 0x32, 0x32, 0x30, 0x51, 0x4d, 0x41, 0x4b, 0x38, 0x73, 0x4b, 0x38, 0x20, 0x34, 0x47, 0x4b,
		0x38, 0x20, 0x56, 0x4b, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x56, 0x33, 0x30, 0x56,
		0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x65,
		0x6c, 0x76, 0x65, 0x74, 0x20, 0x35, 0x47, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x4c, 0x4d, 0x2d, 0x47, 0x39, 0x31, 0x30, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74,
		0x20, 0x34, 0x47, 0x56, 0x36, 0x30, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x20, 0x35, 0x47, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x5a, 0x6f, 0x6e, 0x65, 0x56, 0x33, 0x35, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x5a, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x4f, 0x70, 0x74, 0x69,
		0x6d, 0x75, 0x73, 0x20, 0x5a, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x4b, 0x33, 0x4b, 0x33, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x4b, 0x37, 0x4b, 0x38, 0x56, 0x53, 0x35, 0x30, 0x30, 0x50, 0x50,
		0x4b, 0x31, 0x30, 0x4b, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4b, 0x32, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x32, 0x32, 0x4b, 0x33, 0x33, 0x4b, 0x34, 0x32, 0x4b, 0x35,
		0x31, 0x4b, 0x35, 0x31, 0x53, 0x4b, 0x35, 0x32, 0x4b, 0x35, 0x36, 0x4b, 0x35, 0x36, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x51, 0x35, 0x31, 0x51, 0x33, 0x31, 0x51, 0x36, 0x31, 0x51, 0x36, 0x4c, 0x4d,
		0x2d, 0x58, 0x34, 0x34, 0x30, 0x69, 0x74, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x48, 0x61,
		0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x20, 0x34, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x58, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x32, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x33,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x56, 0x75, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x56, 0x75, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x56,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x34, 0x58, 0x20, 0x48, 0x44, 0x4c, 0x65, 0x6f,
		0x6e, 0x4c, 0x65, 0x6f, 0x6e, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x70, 0x69, 0x72,
		0x69, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x47, 0x4c,
		0x31, 0x35, 0x38, 0x56, 0x4c, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x20, 0x33, 0x52, 0x65, 0x62, 0x65,
		0x6c, 0x20, 0x34, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x56, 0x53, 0x38, 0x37, 0x36, 0x4c, 0x75, 0x63,
		0x69, 0x64, 0x20, 0x33, 0x47, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x4c, 0x47, 0x2d, 0x48, 0x37,
		0x34, 0x30, 0x47, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x20, 0x32, 0x56, 0x53, 0x38, 0x32, 0x30,
		0x4c, 0x61, 0x6e, 0x63, 0x65, 0x74, 0x56, 0x53, 0x38, 0x37, 0x30, 0x20, 0x34, 0x47, 0x4c, 0x75,
		0x63, 0x69, 0x64, 0x20, 0x32, 0x56, 0x53, 0x38, 0x31, 0x30, 0x50, 0x50, 0x54, 0x72, 0x61, 0x6e,
		0x73, 0x70, 0x79, 0x72, 0x65, 0x4c, 0x47, 0x2d, 0x46, 0x35, 0x38, 0x30, 0x4c, 0x47, 0x65, 0x6e,
		0x74, 0x6c, 0x65, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x56, 0x75, 0x20, 0x33, 0x4c, 0x47,
		0x2d, 0x46, 0x4c, 0x34, 0x30, 0x4c, 0x30, 0x37, 0x30, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4c,
		0x47, 0x2d, 0x46, 0x34, 0x34, 0x30, 0x4c, 0x49, 0x63, 0x65, 0x20, 0x43, 0x72, 0x65, 0x61, 0x6d,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4c, 0x38, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4c, 0x47,
		0x2d, 0x44, 0x33, 0x37, 0x30, 0x4c, 0x38, 0x30, 0x20, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x59,
		0x32, 0x35, 0x57, 0x49, 0x4e, 0x47, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x35, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x46, 0x48, 0x44, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x47, 0x2d, 0x56, 0x35, 0x33, 0x33, 0x47, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x49, 0x56, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46,
		0x20, 0x37, 0x2e, 0x30, 0x22, 0x4c, 0x47, 0x4c, 0x4b, 0x34, 0x33, 0x30, 0x47, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x46, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4c, 0x47, 0x2d, 0x4c, 0x4b, 0x34, 0x36, 0x30,
		0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22,
		0x20, 0x4c, 0x54, 0x45, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x33, 0x4c, 0x47, 0x2d,
		0x56, 0x37, 0x30, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x4c, 0x47,
		0x2d, 0x56, 0x34, 0x39, 0x37, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x4c, 0x47, 0x2d, 0x56, 0x39, 0x33, 0x35, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49,
		0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x4c, 0x47, 0x2d, 0x56, 0x39, 0x34, 0x30, 0x47, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x20, 0x46, 0x48, 0x44, 0x47, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x49, 0x20, 0x38, 0x2e, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x49, 0x49, 0x49, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x46, 0x48, 0x44, 0x47, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x49, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x46, 0x48, 0x44,
		0x20, 0x4c, 0x54, 0x45, 0x4c, 0x47, 0x2d, 0x50, 0x35, 0x33, 0x30, 0x4c, 0x47, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x49, 0x56, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x46, 0x48, 0x44, 0x20, 0x4c, 0x54,
		0x45, 0x56, 0x4b, 0x38, 0x31, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x33, 0x20,
		0x4c, 0x54, 0x45, 0x56, 0x4b, 0x38, 0x31, 0x35, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x20,
		0x38, 0x2e, 0x33, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4c,
		0x47, 0x2d, 0x56, 0x39, 0x33, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x4c, 0x47, 0x2d, 0x56, 0x35, 0x33, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x58, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x58, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4c, 0x47, 0x54, 0x33, 0x32, 0x51,
		0x75, 0x61, 0x20, 0x54, 0x61, 0x64, 0x20, 0x50, 0x5a, 0x4c, 0x47, 0x54, 0x33, 0x31, 0x51, 0x75,
		0x61, 0x20, 0x54, 0x61, 0x64, 0x20, 0x50, 0x58, 0x57, 0x65, 0x62, 0x4f, 0x53, 0x20, 0x54, 0x56,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x42, 0x50, 0x37, 0x34, 0x30, 0x42, 0x50, 0x37, 0x34, 0x30,
		0x34, 0x37, 0x4c, 0x41, 0x37, 0x39, 0x30, 0x57, 0x2d, 0x5a, 0x41, 0x4e, 0x65, 0x74, 0x43, 0x61,
		0x73, 0x74, 0x4c, 0x47, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x55, 0x72, 0x62, 0x61, 0x6e,
		0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x65, 0x47, 0x20, 0x57,
		0x61, 0x74, 0x63, 0x68, 0x24, 0x31, 0x4c, 0x4e, 0x4d, 0x42, 0x42, 0x53, 0x4c, 0x4f, 0x4b, 0x4d,
		0x41, 0x54, 0x4c, 0x50, 0x58, 0x2d, 0x47, 0x4c, 0x50, 0x58, 0x2d, 0x47, 0x20, 0x42, 0x4f, 0x58,
		0x4c, 0x50, 0x58, 0x2d, 0x47, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6f, 0x78,
		0x20, 0x4d, 0x61, 0x78, 0x4c, 0x54, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4c, 0x54, 0x5f,
		0x53, 0x39, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x53, 0x39, 0x50, 0x37,
		0x73, 0x53, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x31, 0x30, 0x50, 0x31, 0x30, 0x69,
		0x4d, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x59, 0x46, 0x4c, 0x53, 0x2d, 0x34, 0x30,
		0x30, 0x34, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x32, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x31,
		0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x32, 0x31, 0x45, 0x61,
		0x72, 0x74, 0x68, 0x20, 0x32, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x35, 0x57, 0x61, 0x74, 0x65,
		0x72, 0x20, 0x46, 0x31, 0x4c, 0x53, 0x2d, 0x34, 0x35, 0x30, 0x33, 0x46, 0x6c, 0x61, 0x6d, 0x65,
		0x20, 0x4c, 0x53, 0x2d, 0x34, 0x35, 0x30, 0x33, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x31, 0x46,
		0x6c, 0x61, 0x6d, 0x65, 0x20, 0x33, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x33, 0x46, 0x6c, 0x61,
		0x6d, 0x65, 0x20, 0x34, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x32, 0x46, 0x6c, 0x61, 0x6d, 0x65,
		0x20, 0x35, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x35, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x36,
		0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x37, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x38, 0x46, 0x6c,
		0x61, 0x6d, 0x65, 0x20, 0x37, 0x53, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x38, 0x4c, 0x53, 0x2d,
		0x35, 0x30, 0x30, 0x32, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30,
		0x30, 0x35, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x34, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x36,
		0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x36, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x38, 0x57, 0x61,
		0x74, 0x65, 0x72, 0x20, 0x32, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x39, 0x57, 0x69, 0x6e, 0x64,
		0x20, 0x36, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x33, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x4c,
		0x53, 0x2d, 0x35, 0x30, 0x31, 0x34, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x34, 0x4c, 0x53, 0x2d, 0x35,
		0x30, 0x31, 0x30, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x35,
		0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x38, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x36, 0x57, 0x69,
		0x6e, 0x64, 0x20, 0x37, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x34, 0x57, 0x61, 0x74, 0x65, 0x72,
		0x20, 0x37, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x37, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x37,
		0x53, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x37, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x31,
		0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x38, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x34, 0x53, 0x4c, 0x53,
		0x2d, 0x35, 0x30, 0x32, 0x30, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x30, 0x4c, 0x53, 0x2d,
		0x35, 0x32, 0x30, 0x31, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x46, 0x31, 0x53, 0x4c, 0x53, 0x2d,
		0x35, 0x35, 0x30, 0x32, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x33, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30,
		0x33, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x33, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x36, 0x57,
		0x61, 0x74, 0x65, 0x72, 0x20, 0x39, 0x4c, 0x53, 0x2d, 0x36, 0x30, 0x30, 0x31, 0x57, 0x69, 0x6e,
		0x64, 0x20, 0x32, 0x4c, 0x61, 0x6e, 0x64, 0x20, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x56, 0x70, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x58, 0x33, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x33, 0x49, 0x6f, 0x75, 0x74,
		0x64, 0x6f, 0x6f, 0x72, 0x20, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x20, 0x33, 0x4c, 0x61, 0x6e, 0x64,
		0x76, 0x6f, 0x53, 0x36, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x36, 0x58, 0x4d, 0x24, 0x31,
		0x30, 0x30, 0x24, 0x32, 0x4c, 0x61, 0x6e, 0x69, 0x6e, 0x4c, 0x61, 0x6e, 0x69, 0x78, 0x49, 0x4c,
		0x49, 0x55, 0x4d, 0x5f, 0x50, 0x41, 0x44, 0x5f, 0x52, 0x58, 0x31, 0x30, 0x76, 0x35, 0x49, 0x6c,
		0x69, 0x75, 0x6d, 0x20, 0x50, 0x61, 0x64, 0x20, 0x52, 0x58, 0x31, 0x30, 0x20, 0x56, 0x35, 0x4c,
		0x41, 0x4e, 0x49, 0x58, 0x5f, 0x50, 0x41, 0x44, 0x5f, 0x45, 0x37, 0x49, 0x6c, 0x69, 0x75, 0x6d,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x45, 0x37, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x24, 0x31, 0x58, 0x31, 0x32, 0x30, 0x43, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x58, 0x31,
		0x32, 0x30, 0x43, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x49, 0x6c, 0x69, 0x75, 0x6d,
		0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x24, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x24,
		0x31, 0x56, 0x4c, 0x61, 0x72, 0x6b, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31,
		0x20, 0x48, 0x44, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x32, 0x20, 0x24, 0x31, 0x20,
		0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x32, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65,
		0x20, 0x58, 0x34, 0x20, 0x37, 0x20, 0x33, 0x47, 0x20, 0x48, 0x44, 0x46, 0x72, 0x65, 0x65, 0x4d,
		0x65, 0x20, 0x58, 0x34, 0x20, 0x37, 0x48, 0x44, 0x20, 0x33, 0x47, 0x46, 0x72, 0x65, 0x65, 0x4d,
		0x65, 0x20, 0x58, 0x32, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34,
		0x20, 0x37, 0x48, 0x44, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20, 0x39, 0x46,
		0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20, 0x37, 0x46, 0x72, 0x65, 0x65, 0x42, 0x69,
		0x72, 0x64, 0x20, 0x35, 0x57, 0x69, 0x46, 0x69, 0x46, 0x72, 0x65, 0x65, 0x42, 0x69, 0x72, 0x64,
		0x20, 0x35, 0x20, 0x57, 0x69, 0x46, 0x69, 0x45, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
		0x20, 0x24, 0x31, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x50, 0x48,
		0x41, 0x42, 0x4c, 0x45, 0x54, 0x20, 0x37, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x37,
		0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x36, 0x2e, 0x30, 0x42, 0x6a, 0x6f, 0x72, 0x6e,
		0x20, 0x53, 0x50, 0x2d, 0x35, 0x30, 0x30, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x24, 0x31,
		0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x4e, 0x6f, 0x64, 0x61, 0x49, 0x6d, 0x70, 0x72,
		0x65, 0x73, 0x73, 0x20, 0x4e, 0x6f, 0x64, 0x61, 0x4c, 0x61, 0x76, 0x61, 0x42, 0x6c, 0x61, 0x7a,
		0x65, 0x20, 0x32, 0x46, 0x6c, 0x61, 0x69, 0x72, 0x20, 0x24, 0x31, 0x42, 0x65, 0x6e, 0x63, 0x6f,
		0x20, 0x59, 0x33, 0x30, 0x42, 0x65, 0x6e, 0x63, 0x6f, 0x20, 0x59, 0x35, 0x30, 0x42, 0x65, 0x6e,
		0x63, 0x6f, 0x20, 0x59, 0x34, 0x30, 0x41, 0x67, 0x6e, 0x69, 0x20, 0x35, 0x47, 0x5a, 0x36, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x39, 0x37, 0x20, 0x49, 0x50, 0x53, 0x52, 0x35, 0x73, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x41, 0x39, 0x37, 0x20, 0x32, 0x47, 0x42, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x37, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x69,
		0x78, 0x65, 0x6c, 0x20, 0x56, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x69, 0x78, 0x65, 0x6c,
		0x20, 0x56, 0x24, 0x31, 0x58, 0x31, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x4c, 0x49, 0x72, 0x69,
		0x73, 0x20, 0x58, 0x31, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x58, 0x34, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x52, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x41, 0x20, 0x5a, 0x33, 0x20, 0x55, 0x50,
		0x5a, 0x33, 0x5a, 0x24, 0x31, 0x5a, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x36, 0x5a, 0x32,
		0x4c, 0x5a, 0x47, 0x34, 0x30, 0x32, 0x20, 0x4f, 0x4d, 0x5a, 0x32, 0x31, 0x5a, 0x36, 0x30, 0x73,
		0x56, 0x32, 0x56, 0x37, 0x56, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x5a, 0x35, 0x33, 0x5a,
		0x35, 0x32, 0x5a, 0x36, 0x32, 0x5a, 0x37, 0x31, 0x5a, 0x39, 0x33, 0x49, 0x72, 0x69, 0x73, 0x20,
		0x36, 0x36, 0x49, 0x72, 0x69, 0x73, 0x20, 0x35, 0x32, 0x49, 0x72, 0x69, 0x73, 0x20, 0x35, 0x34,
		0x49, 0x72, 0x69, 0x73, 0x20, 0x35, 0x39, 0x49, 0x72, 0x69, 0x73, 0x20, 0x34, 0x36, 0x49, 0x72,
		0x69, 0x73, 0x20, 0x34, 0x35, 0x43, 0x49, 0x72, 0x69, 0x73, 0x20, 0x34, 0x35, 0x49, 0x72, 0x69,
		0x73, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x32, 0x58, 0x49, 0x72, 0x69, 0x73, 0x20, 0x41, 0x6c,
		0x66, 0x61, 0x20, 0x4c, 0x5a, 0x34, 0x31, 0x56, 0x38, 0x56, 0x2b, 0x36, 0x47, 0x72, 0x61, 0x6e,
		0x64, 0x32, 0x63, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x32, 0x43, 0x52, 0x31, 0x5f, 0x4c, 0x69,
		0x74, 0x65, 0x52, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x45, 0x39, 0x38, 0x32, 0x30, 0x52,
		0x35, 0x4c, 0x45, 0x39, 0x38, 0x31, 0x30, 0x52, 0x33, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x37,
		0x70, 0x6c, 0x75, 0x73, 0x49, 0x72, 0x69, 0x73, 0x20, 0x38, 0x38, 0x20, 0x47, 0x6f, 0x44, 0x49,
		0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x31, 0x33, 0x36, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
		0x72, 0x20, 0x31, 0x33, 0x36, 0x4b, 0x4b, 0x54, 0x20, 0x51, 0x55, 0x41, 0x44, 0x52, 0x41, 0x4b,
		0x4b, 0x54, 0x20, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x4b, 0x4b, 0x54, 0x34, 0x30, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x76, 0x6f, 0x72, 0x79, 0x20, 0x24,
		0x31, 0x54, 0x38, 0x31, 0x4e, 0x20, 0x55, 0x70, 0x54, 0x38, 0x31, 0x4e, 0x54, 0x37, 0x31, 0x49,
		0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x49, 0x72, 0x69, 0x73, 0x20,
		0x24, 0x31, 0x4c, 0x65, 0x20, 0x50, 0x61, 0x6e, 0x54, 0x43, 0x38, 0x30, 0x32, 0x41, 0x4c, 0x65,
		0x20, 0x50, 0x61, 0x6e, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x43, 0x39, 0x37, 0x30, 0x20, 0x24,
		0x31, 0x4c, 0x65, 0x20, 0x50, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x42, 0x65, 0x73, 0x74,
		0x4c, 0x65, 0x45, 0x63, 0x6f, 0x4c, 0x65, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x78,
		0x20, 0x58, 0x39, 0x30, 0x30, 0x2b, 0x4c, 0x65, 0x20, 0x31, 0x53, 0x4c, 0x65, 0x20, 0x33, 0x53,
		0x20, 0x24, 0x31, 0x58, 0x39, 0x30, 0x30, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x65, 0x20,
		0x58, 0x39, 0x30, 0x30, 0x4c, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x4c, 0x65, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x33, 0x20, 0x41, 0x49, 0x4c, 0x65, 0x20, 0x32, 0x20, 0x24, 0x31, 0x4c, 0x65,
		0x20, 0x32, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x31, 0x30, 0x36, 0x4c, 0x65,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x58, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x24,
		0x31, 0x4c, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x24, 0x31, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x20,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x2d, 0x34, 0x35, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e,
		0x2d, 0x34, 0x35, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x56, 0x79, 0x70, 0x65, 0x72, 0x20, 0x50,
		0x52, 0x4f, 0x56, 0x79, 0x70, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x50, 0x20, 0x44, 0x41,
		0x49, 0x53, 0x59, 0x44, 0x61, 0x69, 0x73, 0x79, 0x4c, 0x50, 0x5f, 0x56, 0x45, 0x59, 0x52, 0x4f,
		0x4e, 0x56, 0x65, 0x79, 0x72, 0x6f, 0x6e, 0x4c, 0x50, 0x5f, 0x50, 0x52, 0x41, 0x44, 0x4f, 0x50,
		0x72, 0x61, 0x64, 0x6f, 0x4c, 0x50, 0x5f, 0x42, 0x2d, 0x35, 0x30, 0x42, 0x35, 0x30, 0x4c, 0x50,
		0x5f, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x5f, 0x53, 0x32, 0x53, 0x70, 0x65, 0x63,
		0x74, 0x72, 0x75, 0x6d, 0x20, 0x53, 0x32, 0x49, 0x4e, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x59, 0x5f,
		0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x4c, 0x69,
		0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4c, 0x50, 0x5f, 0x49, 0x4e, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x59, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x4c, 0x50, 0x5f, 0x45, 0x56, 0x4f, 0x52, 0x41, 0x5f, 0x6c, 0x69, 0x67, 0x68,
		0x74, 0x45, 0x76, 0x6f, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x50, 0x20, 0x54,
		0x37, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x37, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c,
		0x50, 0x5f, 0x54, 0x37, 0x30, 0x54, 0x37, 0x30, 0x4c, 0x65, 0x61, 0x67, 0x6f, 0x6f, 0x4d, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x35, 0x20, 0x45, 0x44, 0x47, 0x45, 0x4d, 0x35, 0x20, 0x45,
		0x64, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4b, 0x49, 0x49, 0x43, 0x41, 0x41,
		0x20, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x4b, 0x49, 0x43, 0x43, 0x41, 0x41, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x4b, 0x49, 0x49, 0x43, 0x41, 0x41, 0x20, 0x4d, 0x49, 0x58, 0x4b, 0x49, 0x43, 0x43,
		0x41, 0x41, 0x20, 0x4d, 0x69, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x53, 0x68,
		0x61, 0x72, 0x6b, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x24, 0x31, 0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65,
		0x20, 0x31, 0x41, 0x6c, 0x66, 0x61, 0x20, 0x24, 0x31, 0x58, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x24,
		0x31, 0x4c, 0x65, 0x61, 0x70, 0x61, 0x64, 0x20, 0x37, 0x50, 0x72, 0x6f, 0x4c, 0x65, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24,
		0x31, 0x4c, 0x65, 0x63, 0x74, 0x72, 0x75, 0x73, 0x4c, 0x45, 0x43, 0x54, 0x2d, 0x54, 0x41, 0x42,
		0x24, 0x31, 0x4c, 0x65, 0x64, 0x73, 0x74, 0x61, 0x72, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20,
		0x35, 0x2e, 0x30, 0x4e, 0x6f, 0x76, 0x75, 0x73, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d,
		0x20, 0x36, 0x2e, 0x30, 0x22, 0x4c, 0x65, 0x65, 0x6c, 0x62, 0x6f, 0x78, 0x4c, 0x65, 0x66, 0x66,
		0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x4c, 0x65, 0x6b, 0x65, 0x50, 0x61, 0x64, 0x2d, 0x24, 0x31,
		0x4c, 0x65, 0x6d, 0x68, 0x6f, 0x6f, 0x76, 0x4c, 0x65, 0x6e, 0x63, 0x6f, 0x4c, 0x45, 0x4e, 0x43,
		0x4f, 0x20, 0x44, 0x69, 0x76, 0x65, 0x72, 0x73, 0x6f, 0x2d, 0x37, 0x30, 0x30, 0x44, 0x69, 0x76,
		0x65, 0x72, 0x73, 0x6f, 0x20, 0x37, 0x30, 0x30, 0x54, 0x44, 0x56, 0x39, 0x30, 0x30, 0x4c, 0x65,
		0x6e, 0x6f, 0x76, 0x6f, 0x47, 0x37, 0x38, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20,
		0x41, 0x37, 0x2d, 0x34, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x2d,
		0x35, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30, 0x49,
		0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x31, 0x30, 0x2d, 0x37, 0x30, 0x41, 0x32, 0x31,
		0x30, 0x37, 0x41, 0x2d, 0x48, 0x41, 0x32, 0x31, 0x30, 0x37, 0x41, 0x32, 0x31, 0x30, 0x39, 0x41,
		0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x32, 0x31, 0x30, 0x39, 0x41, 0x54, 0x61,
		0x62, 0x20, 0x32, 0x20, 0x41, 0x31, 0x30, 0x2d, 0x33, 0x30, 0x54, 0x61, 0x62, 0x20, 0x4b, 0x31,
		0x30, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x59, 0x6f, 0x67, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x31, 0x31, 0x59, 0x54, 0x2d, 0x4b, 0x36, 0x30, 0x36, 0x46, 0x59, 0x6f,
		0x67, 0x61, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x42, 0x33, 0x2d, 0x37, 0x33,
		0x30, 0x58, 0x54, 0x41, 0x42, 0x33, 0x20, 0x37, 0x54, 0x41, 0x42, 0x33, 0x20, 0x37, 0x20, 0x45,
		0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x42, 0x2d, 0x37, 0x37, 0x30, 0x33, 0x58,
		0x54, 0x41, 0x42, 0x33, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x42, 0x33, 0x2d, 0x58,
		0x37, 0x30, 0x4c, 0x54, 0x41, 0x42, 0x33, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54,
		0x42, 0x33, 0x2d, 0x58, 0x37, 0x30, 0x46, 0x54, 0x41, 0x42, 0x33, 0x20, 0x31, 0x30, 0x20, 0x42,
		0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x41, 0x42, 0x33, 0x20, 0x38, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x54, 0x42, 0x2d, 0x38, 0x58, 0x30, 0x34, 0x46, 0x54, 0x41, 0x42, 0x34, 0x20, 0x38,
		0x20, 0x52, 0x45, 0x4c, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30, 0x4c,
		0x43, 0x54, 0x41, 0x42, 0x32, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30, 0x4c, 0x43, 0x54, 0x41, 0x42,
		0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x31, 0x30, 0x54,
		0x41, 0x42, 0x33, 0x20, 0x38, 0x54, 0x41, 0x42, 0x33, 0x20, 0x38, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x54, 0x41, 0x42, 0x34, 0x20, 0x31, 0x30, 0x54, 0x41, 0x42, 0x34, 0x20, 0x38, 0x54, 0x42, 0x2d,
		0x38, 0x37, 0x30, 0x34, 0x58, 0x54, 0x41, 0x42, 0x34, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x54, 0x41, 0x42, 0x34, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x41, 0x42, 0x35,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x41, 0x42, 0x31, 0x30, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30,
		0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x30, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x31, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x4b, 0x31, 0x31,
		0x54, 0x61, 0x62, 0x20, 0x51, 0x54, 0x20, 0x4b, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x51, 0x54, 0x20, 0x4b, 0x31, 0x31, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x54, 0x61, 0x62, 0x20,
		0x50, 0x31, 0x31, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4b,
		0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x54, 0x61, 0x62, 0x20, 0x45, 0x37, 0x54,
		0x61, 0x62, 0x20, 0x45, 0x38, 0x54, 0x42, 0x2d, 0x37, 0x33, 0x30, 0x34, 0x54, 0x61, 0x62, 0x20,
		0x37, 0x20, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x50, 0x42, 0x2d, 0x36, 0x35, 0x30, 0x35, 0x54, 0x61, 0x62, 0x20, 0x56, 0x37, 0x41, 0x31, 0x30,
		0x31, 0x4c, 0x56, 0x54, 0x61, 0x62, 0x20, 0x36, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20,
		0x46, 0x48, 0x44, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20,
		0x46, 0x48, 0x44, 0x20, 0x52, 0x65, 0x6c, 0x54, 0x42, 0x2d, 0x58, 0x36, 0x30, 0x35, 0x54, 0x61,
		0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x4c, 0x65, 0x6e, 0x6f, 0x76, 0x6f, 0x20,
		0x54, 0x42, 0x2d, 0x58, 0x33, 0x30, 0x36, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x48,
		0x44, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x47,
		0x65, 0x6e, 0x20, 0x33, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x28, 0x47, 0x65,
		0x6e, 0x20, 0x33, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x37, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x37,
		0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x31, 0x30, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x2e, 0x33, 0x22, 0x59, 0x6f,
		0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x32, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x38,
		0x59, 0x6f, 0x67, 0x61, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x59, 0x54, 0x33, 0x2d, 0x38, 0x35, 0x30, 0x4d, 0x59, 0x6f,
		0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x31, 0x30, 0x59, 0x6f, 0x67, 0x61, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x42, 0x6f, 0x6f,
		0x6b, 0x54, 0x42, 0x2d, 0x4a, 0x37, 0x31, 0x36, 0x46, 0x58, 0x69, 0x61, 0x6f, 0x58, 0x69, 0x6e,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x54, 0x42, 0x31, 0x33, 0x38, 0x46, 0x43, 0x58, 0x69, 0x61, 0x6f,
		0x78, 0x69, 0x6e, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x45, 0x76, 0x65, 0x72, 0x79, 0x50, 0x61, 0x64, 0x32, 0x59,
		0x61, 0x6d, 0x61, 0x64, 0x61, 0x20, 0x45, 0x76, 0x65, 0x72, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x32, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x30, 0x30, 0x30, 0x49, 0x64,
		0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x64,
		0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x50,
		0x61, 0x64, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x24, 0x31, 0x54, 0x41, 0x42, 0x20, 0x32,
		0x20, 0x41, 0x37, 0x2d, 0x33, 0x30, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x37, 0x54, 0x42,
		0x2d, 0x38, 0x35, 0x30, 0x34, 0x46, 0x54, 0x41, 0x42, 0x20, 0x34, 0x20, 0x38, 0x54, 0x61, 0x62,
		0x20, 0x34, 0x20, 0x38, 0x22, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x42, 0x2d, 0x58, 0x33, 0x30,
		0x34, 0x58, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x42, 0x2d,
		0x58, 0x33, 0x30, 0x34, 0x46, 0x45, 0x31, 0x30, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x24,
		0x31, 0x59, 0x42, 0x2d, 0x51, 0x35, 0x30, 0x31, 0x46, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x41, 0x31,
		0x32, 0x59, 0x54, 0x2d, 0x58, 0x37, 0x30, 0x35, 0x58, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x4d, 0x38, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x20, 0x28,
		0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x20, 0x28, 0x47, 0x65,
		0x6e, 0x20, 0x34, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x20, 0x46, 0x48, 0x44, 0x4c, 0x65,
		0x67, 0x69, 0x6f, 0x6e, 0x20, 0x59, 0x37, 0x30, 0x30, 0x4c, 0x37, 0x31, 0x30, 0x36, 0x31, 0x4c,
		0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x59, 0x39, 0x30, 0x4c, 0x37, 0x31, 0x30, 0x39, 0x31, 0x4c,
		0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x59, 0x37, 0x30, 0x53, 0x36, 0x30, 0x41, 0x35, 0x73, 0x41,
		0x38, 0x5a, 0x32, 0x31, 0x35, 0x31, 0x5a, 0x55, 0x4b, 0x20, 0x45, 0x64, 0x67, 0x65, 0x5a, 0x55,
		0x4b, 0x20, 0x5a, 0x32, 0x5a, 0x32, 0x31, 0x32, 0x31, 0x5a, 0x55, 0x4b, 0x20, 0x5a, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x5a, 0x55, 0x4b, 0x20, 0x24, 0x31, 0x4b, 0x33, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x4b, 0x24, 0x31, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x34, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b,
		0x35, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4b, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x31, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4b, 0x35, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x36, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x41, 0x36, 0x30, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x62, 0x65, 0x20,
		0x4b, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x62, 0x65, 0x20, 0x4b, 0x35, 0x56, 0x69,
		0x62, 0x65, 0x20, 0x5a, 0x32, 0x56, 0x69, 0x62, 0x65, 0x20, 0x43, 0x56, 0x69, 0x62, 0x65, 0x20,
		0x58, 0x32, 0x56, 0x69, 0x62, 0x65, 0x20, 0x58, 0x33, 0x56, 0x69, 0x62, 0x65, 0x20, 0x58, 0x33,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x62, 0x65, 0x20, 0x56, 0x37, 0x56, 0x69, 0x62, 0x65,
		0x20, 0x53, 0x36, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x24,
		0x31, 0x69, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x65, 0x67, 0x69,
		0x6f, 0x6e, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x39, 0x4b, 0x35, 0x53, 0x4b, 0x36, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x36, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x69, 0x62, 0x65,
		0x20, 0x50, 0x31, 0x6d, 0x56, 0x69, 0x62, 0x65, 0x20, 0x50, 0x31, 0x20, 0x54, 0x75, 0x72, 0x62,
		0x6f, 0x56, 0x69, 0x62, 0x65, 0x20, 0x50, 0x31, 0x56, 0x69, 0x62, 0x65, 0x20, 0x42, 0x41, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x68, 0x6f, 0x74, 0x56, 0x69, 0x62,
		0x65, 0x20, 0x53, 0x31, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x5a, 0x35, 0x73, 0x5a, 0x35, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x36, 0x20, 0x50, 0x72,
		0x6f, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x47, 0x54, 0x5a, 0x36, 0x20, 0x59, 0x6f, 0x75,
		0x74, 0x68, 0x53, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x47, 0x54, 0x50, 0x68, 0x61, 0x62, 0x20,
		0x32, 0x50, 0x68, 0x61, 0x62, 0x50, 0x68, 0x61, 0x62, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x64,
		0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x64, 0x74, 0x61, 0x62, 0x20, 0x43, 0x6f, 0x6d,
		0x70, 0x61, 0x63, 0x74, 0x20, 0x34, 0x32, 0x41, 0x58, 0x54, 0x32, 0x30, 0x38, 0x31, 0x2d, 0x34,
		0x4b, 0x31, 0x32, 0x41, 0x32, 0x30, 0x31, 0x30, 0x6c, 0x33, 0x36, 0x41, 0x32, 0x30, 0x31, 0x30,
		0x4c, 0x65, 0x6e, 0x6f, 0x76, 0x6f, 0x20, 0x4b, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x31,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x52, 0x2d, 0x31, 0x35, 0x34, 0x31, 0x46, 0x4d, 0x69, 0x72,
		0x61, 0x67, 0x65, 0x20, 0x53, 0x6f, 0x6c, 0x6f, 0x49, 0x64, 0x65, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x53, 0x31, 0x34, 0x35, 0x2d, 0x31, 0x35, 0x49, 0x49, 0x4c, 0x49, 0x64, 0x65, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x53, 0x31, 0x34, 0x35, 0x2d, 0x31, 0x35, 0x49, 0x57, 0x4c, 0x46, 0x6c, 0x65, 0x78,
		0x20, 0x31, 0x34, 0x41, 0x50, 0x49, 0x20, 0x38, 0x31, 0x53, 0x53, 0x49, 0x64, 0x65, 0x61, 0x43,
		0x65, 0x6e, 0x74, 0x72, 0x65, 0x20, 0x35, 0x32, 0x30, 0x53, 0x2d, 0x32, 0x33, 0x49, 0x4b, 0x55,
		0x4c, 0x65, 0x6f, 0x74, 0x65, 0x63, 0x4c, 0x45, 0x53, 0x50, 0x48, 0x35, 0x30, 0x31, 0x31, 0x41,
		0x72, 0x67, 0x6f, 0x6e, 0x20, 0x65, 0x32, 0x35, 0x30, 0x4c, 0x45, 0x53, 0x50, 0x48, 0x35, 0x30,
		0x30, 0x33, 0x42, 0x41, 0x72, 0x67, 0x6f, 0x6e, 0x20, 0x41, 0x32, 0x35, 0x30, 0x42, 0x4c, 0x45,
		0x53, 0x50, 0x48, 0x35, 0x30, 0x31, 0x34, 0x4b, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6e, 0x20, 0x4b,
		0x31, 0x35, 0x30, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x54, 0x33, 0x35, 0x35,
		0x53, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x61, 0x20, 0x24, 0x31, 0x50, 0x75, 0x6c, 0x73,
		0x61, 0x72, 0x20, 0x24, 0x31, 0x4c, 0x45, 0x54, 0x41, 0x42, 0x39, 0x31, 0x36, 0x4c, 0x2d, 0x50,
		0x61, 0x64, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x53, 0x4c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x53, 0x31, 0x30, 0x34, 0x47, 0x57, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x65, 0x73, 0x69,
		0x61, 0x41, 0x6e, 0x6f, 0x76, 0x61, 0x20, 0x41, 0x35, 0x4c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x53,
		0x34, 0x41, 0x31, 0x56, 0x65, 0x67, 0x61, 0x53, 0x34, 0x41, 0x32, 0x49, 0x72, 0x69, 0x64, 0x61,
		0x53, 0x34, 0x41, 0x33, 0x50, 0x61, 0x6c, 0x6c, 0x61, 0x64, 0x61, 0x53, 0x34, 0x41, 0x35, 0x4f,
		0x78, 0x79, 0x67, 0x65, 0x6e, 0x53, 0x34, 0x41, 0x34, 0x20, 0x4e, 0x45, 0x4f, 0x4e, 0x53, 0x34,
		0x41, 0x34, 0x20, 0x4e, 0x65, 0x6f, 0x6e, 0x53, 0x35, 0x41, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x69,
		0x73, 0x74, 0x6f, 0x53, 0x35, 0x41, 0x32, 0x4f, 0x76, 0x65, 0x72, 0x6f, 0x6e, 0x53, 0x35, 0x41,
		0x33, 0x43, 0x61, 0x70, 0x65, 0x6c, 0x6c, 0x61, 0x53, 0x35, 0x41, 0x34, 0x41, 0x72, 0x67, 0x6f,
		0x6e, 0x53, 0x36, 0x41, 0x31, 0x41, 0x6e, 0x74, 0x61, 0x72, 0x65, 0x73, 0x24, 0x31, 0x20, 0x50,
		0x52, 0x4f, 0x20, 0x48, 0x44, 0x4c, 0x50, 0x48, 0x37, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79,
		0x4c, 0x50, 0x48, 0x37, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x78, 0x69, 0x62,
		0x6f, 0x6f, 0x6b, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x31, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x58, 0x4c, 0x4d, 0x46, 0x43, 0x30,
		0x34, 0x35, 0x46, 0x52, 0x54, 0x61, 0x62, 0x54, 0x61, 0x62, 0x4d, 0x46, 0x43, 0x31, 0x36, 0x33,
		0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20,
		0x33, 0x4d, 0x46, 0x43, 0x31, 0x34, 0x32, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x4b, 0x69, 0x64, 0x73, 0x4d, 0x46, 0x43, 0x32, 0x35, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x4d, 0x46, 0x43, 0x32, 0x37, 0x30, 0x46,
		0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4d, 0x46, 0x43, 0x32, 0x38, 0x30,
		0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20,
		0x32, 0x4d, 0x46, 0x43, 0x31, 0x35, 0x36, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x4f, 0x6e, 0x65, 0x4d, 0x46, 0x43, 0x31, 0x35, 0x35, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x46, 0x43, 0x31, 0x35, 0x37, 0x46, 0x52,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20, 0x32, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x46, 0x43, 0x33, 0x37,
		0x35, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x32, 0x4d, 0x46, 0x43, 0x31, 0x36, 0x32, 0x46, 0x52, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x46, 0x43, 0x31, 0x38, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x4d, 0x46, 0x43, 0x31,
		0x38, 0x31, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e,
		0x63, 0x65, 0x64, 0x20, 0x32, 0x4d, 0x46, 0x43, 0x35, 0x30, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x58, 0x4c, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x30, 0x42, 0x42, 0x46, 0x52,
		0x42, 0x61, 0x72, 0x62, 0x69, 0x65, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x46, 0x43,
		0x31, 0x39, 0x35, 0x44, 0x43, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x44, 0x69,
		0x73, 0x6e, 0x65, 0x79, 0x20, 0x43, 0x61, 0x72, 0x73, 0x20, 0x48, 0x44, 0x4d, 0x46, 0x43, 0x31,
		0x39, 0x35, 0x46, 0x55, 0x46, 0x52, 0x46, 0x75, 0x72, 0x62, 0x79, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x35, 0x44, 0x50, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x65,
		0x73, 0x73, 0x65, 0x20, 0x48, 0x44, 0x4d, 0x46, 0x43, 0x31, 0x34, 0x30, 0x46, 0x52, 0x4c, 0x61,
		0x70, 0x54, 0x61, 0x62, 0x4d, 0x46, 0x43, 0x31, 0x34, 0x31, 0x46, 0x52, 0x4c, 0x61, 0x70, 0x54,
		0x61, 0x62, 0x20, 0x32, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x74, 0x6f, 0x6e, 0x4c, 0x69, 0x66, 0x65,
		0x6d, 0x61, 0x78, 0x78, 0x4c, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x65, 0x5a, 0x32, 0x50, 0x4c,
		0x55, 0x53, 0x4c, 0x69, 0x6e, 0x67, 0x77, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6e, 0x65, 0x78, 0x4c,
		0x69, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x6e, 0x73, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x6f, 0x57,
		0x65, 0x62, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x58, 0x36, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x4c, 0x6f,
		0x67, 0x69, 0x63, 0x20, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69,
		0x65, 0x6c, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x31, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x62,
		0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x31, 0x42, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x62, 0x6f, 0x6f, 0x6b,
		0x20, 0x4b, 0x31, 0x30, 0x31, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x6f, 0x6d, 0x4c, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x74, 0x61, 0x6e,
		0x64, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x32, 0x34, 0x20, 0x48, 0x44, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x4f, 0x4d, 0x5f, 0x4c, 0x41, 0x5f, 0x54, 0x41,
		0x42, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x37, 0x31, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x4c, 0x69, 0x6e, 0x6b, 0x20, 0x37, 0x31, 0x6c, 0x6f, 0x67, 0x69, 0x6b, 0x69, 0x64, 0x73, 0x34,
		0x4c, 0x6f, 0x67, 0x69, 0x6b, 0x69, 0x64, 0x73, 0x20, 0x34, 0x4c, 0x2d, 0x69, 0x78, 0x69, 0x72,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x30, 0x31, 0x20, 0x33, 0x47, 0x4c, 0x5f, 0x49, 0x58, 0x49,
		0x52, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x31, 0x30, 0x34, 0x37, 0x48, 0x44, 0x4c, 0x2d, 0x69, 0x78,
		0x69, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x34, 0x37, 0x20, 0x48, 0x44, 0x4c, 0x49,
		0x58, 0x49, 0x52, 0x31, 0x30, 0x34, 0x31, 0x4c, 0x2d, 0x69, 0x78, 0x69, 0x72, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x31, 0x30, 0x34, 0x31, 0x4c, 0x2d, 0x69, 0x78, 0x69, 0x72, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x4c, 0x2d, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x2d, 0x69, 0x74, 0x65,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x2d, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x24,
		0x31, 0x4c, 0x2d, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x50,
		0x4f, 0x57, 0x45, 0x52, 0x20, 0x42, 0x4f, 0x54, 0x4d, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x24, 0x31,
		0x56, 0x52, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x52,
		0x20, 0x42, 0x4f, 0x54, 0x20, 0x24, 0x31, 0x24, 0x31, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x24, 0x32, 0x24, 0x31, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x24, 0x32, 0x4c, 0x65, 0x20,
		0x4c, 0x69, 0x66, 0x74, 0x4c, 0x65, 0x20, 0x57, 0x61, 0x76, 0x65, 0x4c, 0x65, 0x20, 0x53, 0x77,
		0x69, 0x70, 0x65, 0x4c, 0x65, 0x20, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x4c, 0x65, 0x20, 0x43, 0x6f,
		0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4c, 0x65, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x4c, 0x65, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x20, 0x48, 0x6f, 0x6c, 0x61, 0x20, 0x46, 0x52, 0x4c,
		0x65, 0x20, 0x48, 0x6f, 0x6c, 0x61, 0x4c, 0x65, 0x20, 0x4d, 0x6f, 0x6f, 0x76, 0x20, 0x32, 0x4c,
		0x65, 0x20, 0x4d, 0x6f, 0x6f, 0x76, 0x4c, 0x65, 0x20, 0x46, 0x69, 0x74, 0x20, 0x46, 0x52, 0x4c,
		0x65, 0x20, 0x46, 0x69, 0x74, 0x4c, 0x65, 0x20, 0x46, 0x69, 0x7a, 0x7a, 0x4c, 0x65, 0x20, 0x48,
		0x6f, 0x70, 0x4c, 0x65, 0x20, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x4c, 0x65, 0x20, 0x53, 0x6d, 0x6f,
		0x6f, 0x74, 0x68, 0x20, 0x46, 0x52, 0x4c, 0x65, 0x20, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x4c,
		0x65, 0x20, 0x4d, 0x75, 0x73, 0x74, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x4d, 0x75, 0x73, 0x74, 0x4c,
		0x65, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x20, 0x4c, 0x4c, 0x65, 0x20, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x4c, 0x2d, 0x45, 0x47, 0x41, 0x4e, 0x54, 0x4f, 0x4e, 0x45, 0x2d, 0x52, 0x4c,
		0x2d, 0x45, 0x67, 0x61, 0x6e, 0x74, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x4c, 0x2d, 0x45, 0x47,
		0x41, 0x4e, 0x54, 0x4f, 0x4e, 0x45, 0x4c, 0x2d, 0x45, 0x67, 0x61, 0x6e, 0x74, 0x20, 0x4f, 0x6e,
		0x65, 0x4c, 0x65, 0x20, 0x55, 0x70, 0x4c, 0x6f, 0x76, 0x6d, 0x65, 0x4c, 0x75, 0x6d, 0x69, 0x67,
		0x6f, 0x6e, 0x4c, 0x75, 0x6d, 0x69, 0x74, 0x65, 0x6c, 0x4c, 0x75, 0x6d, 0x75, 0x73, 0x49, 0x4e,
		0x4e, 0x4f, 0x20, 0x24, 0x31, 0x49, 0x6f, 0x6e, 0x41, 0x45, 0x4f, 0x4e, 0x20, 0x24, 0x31, 0x4c,
		0x75, 0x6e, 0x61, 0x4c, 0x75, 0x78, 0x6f, 0x72, 0x4d, 0x2d, 0x48, 0x6f, 0x72, 0x73, 0x65, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x31, 0x54, 0x6f, 0x70, 0x20,
		0x24, 0x31, 0x54, 0x4f, 0x50, 0x5f, 0x4e, 0x6f, 0x74, 0x65, 0x38, 0x54, 0x6f, 0x70, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x38, 0x4d, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x45, 0x52, 0x4f, 0x53, 0x20,
		0x34, 0x47, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x34, 0x47, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x53, 0x74,
		0x61, 0x72, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x45, 0x72, 0x6f, 0x73,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x41,
		0x43, 0x45, 0x39, 0x41, 0x63, 0x65, 0x20, 0x39, 0x4a, 0x41, 0x5a, 0x42, 0x41, 0x41, 0x54, 0x45,
		0x5a, 0x20, 0x34, 0x47, 0x46, 0x6f, 0x74, 0x6f, 0x33, 0x46, 0x6f, 0x74, 0x6f, 0x20, 0x33, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x4d, 0x2e, 0x54, 0x2e, 0x54, 0x2e, 0x4d, 0x54,
		0x54, 0x20, 0x49, 0x44, 0x45, 0x41, 0x4c, 0x49, 0x64, 0x65, 0x61, 0x6c, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x24, 0x31, 0x4d, 0x33, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x33, 0x55,
		0x53, 0x32, 0x30, 0x57, 0x55, 0x53, 0x32, 0x30, 0x20, 0x57, 0x4d, 0x34, 0x74, 0x65, 0x6c, 0x53,
		0x53, 0x31, 0x30, 0x35, 0x30, 0x53, 0x53, 0x31, 0x30, 0x36, 0x30, 0x4c, 0x69, 0x76, 0x65, 0x53,
		0x53, 0x31, 0x30, 0x37, 0x30, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x53, 0x31, 0x30, 0x38, 0x30,
		0x4d, 0x61, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x53, 0x53, 0x31, 0x30, 0x39, 0x30, 0x4d, 0x61, 0x78,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x53, 0x34, 0x30, 0x32, 0x30, 0x50, 0x6c, 0x61, 0x79,
		0x53, 0x53, 0x34, 0x30, 0x34, 0x30, 0x49, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x53,
		0x34, 0x30, 0x34, 0x35, 0x53, 0x53, 0x34, 0x33, 0x34, 0x35, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x53, 0x53, 0x34, 0x33, 0x35, 0x30, 0x53, 0x6f, 0x75, 0x6c, 0x53, 0x53, 0x34,
		0x34, 0x34, 0x35, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53,
		0x53, 0x34, 0x34, 0x35, 0x30, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x53, 0x34, 0x34, 0x35, 0x31,
		0x42, 0x65, 0x6c, 0x69, 0x65, 0x76, 0x65, 0x53, 0x53, 0x34, 0x34, 0x35, 0x32, 0x44, 0x72, 0x65,
		0x61, 0x6d, 0x53, 0x53, 0x34, 0x34, 0x35, 0x33, 0x2d, 0x52, 0x52, 0x31, 0x20, 0x46, 0x65, 0x65,
		0x6c, 0x52, 0x32, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x53, 0x34, 0x34, 0x35, 0x33, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
		0x53, 0x53, 0x34, 0x34, 0x35, 0x35, 0x53, 0x53, 0x34, 0x34, 0x35, 0x36, 0x45, 0x76, 0x6f, 0x6c,
		0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x53, 0x34, 0x34, 0x35, 0x37, 0x2d, 0x52, 0x45, 0x76, 0x65,
		0x72, 0x53, 0x53, 0x34, 0x34, 0x35, 0x37, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x46,
		0x65, 0x65, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x53, 0x34, 0x34, 0x35, 0x38, 0x41, 0x74,
		0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x24, 0x31, 0x4d, 0x41, 0x58, 0x56, 0x49, 0x4d, 0x53,
		0x35, 0x33, 0x31, 0x4d, 0x53, 0x35, 0x33, 0x31, 0x20, 0x56, 0x65, 0x67, 0x61, 0x4d, 0x53, 0x35,
		0x30, 0x32, 0x20, 0x4f, 0x72, 0x69, 0x6f, 0x6e, 0x4d, 0x41, 0x58, 0x58, 0x4d, 0x42, 0x49, 0x4d,
		0x42, 0x4f, 0x58, 0x4d, 0x44, 0x43, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x53, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x72, 0x61, 0x6e, 0x64,
		0x20, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x20, 0x34, 0x47, 0x4d, 0x44, 0x54, 0x56, 0x4d, 0x45, 0x45,
		0x47, 0x4d, 0x45, 0x55, 0x4d, 0x49, 0x56, 0x4f, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x49, 0x57, 0x41, 0x4e, 0x47, 0x4d, 0x49, 0x58, 0x43,
		0x4d, 0x4c, 0x41, 0x42, 0x47, 0x6c, 0x6f, 0x77, 0x79, 0x20, 0x24, 0x31, 0x4d, 0x4c, 0x4c, 0x45,
		0x44, 0x4d, 0x4c, 0x53, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x54, 0x77, 0x69, 0x73, 0x74,
		0x4e, 0x6f, 0x74, 0x63, 0x68, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x63, 0x68, 0x20,
		0x53, 0x65, 0x6e, 0x73, 0x65, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x69, 0x51, 0x54,
		0x61, 0x62, 0x20, 0x42, 0x72, 0x61, 0x76, 0x65, 0x20, 0x33, 0x47, 0x69, 0x51, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x41, 0x6c, 0x75, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x34, 0x47, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x49, 0x64, 0x65, 0x61, 0x6c,
		0x20, 0x38, 0x2e, 0x30, 0x22, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x43, 0x61, 0x72, 0x65, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x42, 0x72, 0x61, 0x69, 0x6e, 0x20, 0x33, 0x47, 0x69, 0x51, 0x54, 0x61,
		0x6c, 0x6b, 0x20, 0x56, 0x65, 0x72, 0x73, 0x65, 0x20, 0x34, 0x47, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
		0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x47, 0x54, 0x4f, 0x50, 0x2d, 0x53, 0x20, 0x34, 0x47,
		0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x4f,
		0x6e, 0x79, 0x78, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x69,
		0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x53, 0x70, 0x69, 0x63, 0x79, 0x69, 0x51, 0x54, 0x61, 0x6c,
		0x6b, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x34, 0x47, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20,
		0x33, 0x20, 0x34, 0x47, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61,
		0x6c, 0x6b, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x34, 0x47, 0x69,
		0x51, 0x54, 0x61, 0x62, 0x20, 0x52, 0x6f, 0x73, 0x65, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x4d,
		0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x4e, 0x6f, 0x76, 0x65, 0x6c,
		0x20, 0x33, 0x47, 0x4a, 0x65, 0x74, 0x20, 0x33, 0x47, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x20,
		0x34, 0x47, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x35, 0x2e, 0x32, 0x20, 0x34, 0x47,
		0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x41, 0x75, 0x72, 0x61, 0x53, 0x6c, 0x69, 0x63, 0x65,
		0x20, 0x34, 0x47, 0x41, 0x6e, 0x67, 0x65, 0x6c, 0x20, 0x33, 0x47, 0x41, 0x6e, 0x67, 0x65, 0x6c,
		0x20, 0x33, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x20,
		0x34, 0x47, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x34, 0x47, 0x46, 0x35, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x20, 0x34, 0x47, 0x4d, 0x58, 0x20, 0x34, 0x47, 0x4d, 0x58, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x46, 0x61, 0x62, 0x20, 0x34, 0x47, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x20,
		0x34, 0x47, 0x4d, 0x6f, 0x72, 0x65, 0x20, 0x34, 0x47, 0x57, 0x61, 0x76, 0x65, 0x20, 0x34, 0x47,
		0x42, 0x72, 0x61, 0x63, 0x65, 0x20, 0x32, 0x30, 0x31, 0x38, 0x20, 0x34, 0x47, 0x4c, 0x65, 0x76,
		0x65, 0x6c, 0x20, 0x34, 0x47, 0x52, 0x75, 0x62, 0x79, 0x20, 0x34, 0x47, 0x44, 0x58, 0x20, 0x34,
		0x47, 0x56, 0x69, 0x73, 0x74, 0x61, 0x20, 0x34, 0x47, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x53,
		0x20, 0x34, 0x47, 0x52, 0x33, 0x20, 0x34, 0x47, 0x50, 0x68, 0x61, 0x62, 0x20, 0x36, 0x2e, 0x30,
		0x22, 0x44, 0x36, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x61, 0x6c, 0x41, 0x6c, 0x75,
		0x20, 0x35, 0x2e, 0x35, 0x22, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x47, 0x46, 0x6c, 0x61, 0x6d, 0x65,
		0x20, 0x34, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20,
		0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34, 0x47, 0x54, 0x38,
		0x20, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34, 0x47, 0x69,
		0x51, 0x46, 0x32, 0x30, 0x30, 0x4d, 0x4d, 0x49, 0x4d, 0x4f, 0x56, 0x49, 0x53, 0x55, 0x4e, 0x4d,
		0x53, 0x49, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x54, 0x43, 0x4f, 0x73, 0x6d,
		0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x61, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x61,
		0x63, 0x65, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x61, 0x63, 0x65, 0x20,
		0x32, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74,
		0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x24,
		0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x42, 0x69, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x75, 0x6e, 0x20, 0x34, 0x47,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x75, 0x72, 0x66, 0x20, 0x32, 0x20, 0x34, 0x47, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x75, 0x72, 0x66, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x34, 0x47, 0x52, 0x65, 0x64, 0x62, 0x6f, 0x78,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x35, 0x53, 0x42, 0x2d, 0x24, 0x31, 0x44, 0x56, 0x38, 0x33,
		0x30, 0x34, 0x2d, 0x43, 0x53, 0x75, 0x70, 0x65, 0x72, 0x57, 0x61, 0x76, 0x65, 0x20, 0x44, 0x56,
		0x38, 0x33, 0x30, 0x34, 0x2d, 0x43, 0x4d, 0x54, 0x4e, 0x46, 0x61, 0x69, 0x74, 0x68, 0x20, 0x32,
		0x39, 0x4b, 0x61, 0x20, 0x43, 0x68, 0x6f, 0x63, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x66,
		0x69, 0x74, 0x20, 0x56, 0x39, 0x30, 0x30, 0x4b, 0x61, 0x46, 0x69, 0x74, 0x20, 0x56, 0x39, 0x30,
		0x30, 0x53, 0x6d, 0x40, 0x72, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x24, 0x31, 0x4d, 0x54,
		0x4e, 0x2d, 0x38, 0x39, 0x37, 0x38, 0x50, 0x53, 0x74, 0x65, 0x70, 0x70, 0x61, 0x4d, 0x54, 0x4e,
		0x2d, 0x24, 0x31, 0x4d, 0x59, 0x46, 0x4f, 0x4e, 0x4d, 0x59, 0x50, 0x41, 0x44, 0x37, 0x73, 0x4d,
		0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x73, 0x4d, 0x61, 0x63, 0x6f, 0x6f, 0x78, 0x4d, 0x43,
		0x2d, 0x58, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x61, 0x66, 0x65, 0x4d, 0x61, 0x66, 0x65,
		0x5f, 0x4d, 0x38, 0x32, 0x30, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x4d, 0x38, 0x32, 0x30, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x73, 0x65, 0x65, 0x4e, 0x35, 0x4e, 0x4f, 0x56, 0x41, 0x4e, 0x35, 0x20,
		0x4e, 0x6f, 0x76, 0x61, 0x49, 0x72, 0x6f, 0x6e, 0x2b, 0x4d, 0x61, 0x67, 0x6e, 0x75, 0x73, 0x42,
		0x72, 0x61, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x24, 0x31, 0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x69, 0x63, 0x4a, 0x61, 0x63, 0x6b, 0x4a, 0x6f,
		0x65, 0x55, 0x72, 0x61, 0x6e, 0x6f, 0x20, 0x37, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x72, 0x61,
		0x6e, 0x6f, 0x20, 0x24, 0x31, 0x50, 0x6c, 0x75, 0x74, 0x6f, 0x20, 0x24, 0x31, 0x54, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x54, 0x41, 0x42, 0x2d, 0x37, 0x31, 0x34, 0x54, 0x61,
		0x62, 0x20, 0x37, 0x31, 0x34, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x41, 0x42, 0x5f, 0x38, 0x31,
		0x34, 0x54, 0x61, 0x62, 0x20, 0x38, 0x31, 0x34, 0x54, 0x61, 0x62, 0x24, 0x31, 0x43, 0x72, 0x6f,
		0x6e, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x6c, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x67, 0x6f,
		0x4d, 0x61, 0x6e, 0x6e, 0x4d, 0x61, 0x6e, 0x74, 0x61, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6d,
		0x65, 0x64, 0x69, 0x61, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x31, 0x32, 0x54, 0x69, 0x74, 0x61,
		0x6e, 0x6f, 0x20, 0x31, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x31, 0x34, 0x54, 0x69, 0x74, 0x61,
		0x6e, 0x6f, 0x20, 0x33, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x31, 0x35, 0x4d, 0x65, 0x7a, 0x6f,
		0x20, 0x32, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x32, 0x30, 0x52, 0x6f, 0x63, 0x6b, 0x79, 0x20,
		0x32, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x32, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x79, 0x20, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x4d, 0x53, 0x50, 0x39, 0x36, 0x30, 0x31, 0x37, 0x46, 0x6f, 0x72, 0x74,
		0x6f, 0x20, 0x32, 0x4d, 0x53, 0x50, 0x39, 0x36, 0x30, 0x30, 0x32, 0x46, 0x6f, 0x72, 0x74, 0x6f,
		0x20, 0x31, 0x4d, 0x53, 0x50, 0x39, 0x34, 0x35, 0x30, 0x31, 0x45, 0x61, 0x73, 0x79, 0x20, 0x53,
		0x65, 0x6c, 0x66, 0x69, 0x65, 0x4d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x72, 0x61, 0x4d,
		0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x4d, 0x45, 0x2d, 0x24, 0x31, 0x4d, 0x61, 0x73, 0x63, 0x6f,
		0x6d, 0x4d, 0x61, 0x73, 0x73, 0x67, 0x6f, 0x56, 0x69, 0x32, 0x20, 0x53, 0x4d, 0x61, 0x73, 0x73,
		0x74, 0x65, 0x6c, 0x4a, 0x75, 0x6e, 0x6f, 0x20, 0x51, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48,
		0x61, 0x70, 0x69, 0x20, 0x24, 0x31, 0x4e, 0x36, 0x36, 0x30, 0x53, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x20, 0x4c, 0x54, 0x45, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54,
		0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x34, 0x47, 0x54, 0x61, 0x62, 0x31, 0x30, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x54, 0x61,
		0x62, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2d,
		0x47, 0x47, 0x50, 0x61, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x51, 0x43, 0x20, 0x34, 0x47, 0x4d,
		0x61, 0x73, 0x74, 0x65, 0x72, 0x74, 0x65, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x6f, 0x20, 0x54,
		0x6f, 0x6f, 0x6c, 0x73, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58,
		0x20, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x37,
		0x31, 0x31, 0x36, 0x20, 0x41, 0x35, 0x4d, 0x61, 0x78, 0x63, 0x6f, 0x6d, 0x24, 0x31, 0x20, 0x53,
		0x74, 0x72, 0x6f, 0x6e, 0x67, 0x4d, 0x53, 0x24, 0x31, 0x52, 0x53, 0x2d, 0x34, 0x30, 0x31, 0x4e,
		0x65, 0x76, 0x61, 0x20, 0x52, 0x69, 0x73, 0x65, 0x20, 0x53, 0x31, 0x4d, 0x61, 0x78, 0x66, 0x6f,
		0x6e, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x47, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78,
		0x69, 0x58, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x78, 0x74, 0x72, 0x6f, 0x6e, 0x50,
		0x6c, 0x75, 0x74, 0x6f, 0x4d, 0x61, 0x78, 0x77, 0x65, 0x73, 0x74, 0x41, 0x73, 0x74, 0x72, 0x6f,
		0x20, 0x24, 0x31, 0x4e, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x58, 0x35,
		0x35, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x5f, 0x35, 0x5f, 0x47, 0x4f, 0x5f,
		0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x47, 0x6f, 0x20, 0x4c, 0x54,
		0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x73, 0x74, 0x72,
		0x6f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x41,
		0x73, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x22, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x5a,
		0x35, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x58, 0x34, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x24,
		0x31, 0x20, 0x47, 0x4f, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x34, 0x73, 0x20, 0x4c, 0x54, 0x45,
		0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x34, 0x73, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31,
		0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x20, 0x47, 0x4f, 0x47, 0x72, 0x61,
		0x76, 0x69, 0x74, 0x79, 0x5f, 0x36, 0x50, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x36,
		0x50, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x36, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x36, 0x4e, 0x69,
		0x74, 0x72, 0x6f, 0x20, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x41, 0x73,
		0x74, 0x72, 0x6f, 0x5f, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x39, 0x41, 0x73, 0x74,
		0x72, 0x6f, 0x20, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x39, 0x4d, 0x61, 0x7a, 0x65,
		0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x58, 0x4d, 0x61, 0x7a, 0x65, 0x20, 0x53, 0x70, 0x65, 0x65,
		0x64, 0x53, 0x53, 0x42, 0x2d, 0x24, 0x31, 0x4d, 0x65, 0x63, 0x65, 0x72, 0x58, 0x70, 0x72, 0x65,
		0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x37, 0x38,
		0x35, 0x58, 0x31, 0x30, 0x31, 0x30, 0x4d, 0x31, 0x37, 0x51, 0x46, 0x36, 0x20, 0x33, 0x47, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4d, 0x31, 0x37, 0x51, 0x46, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x38,
		0x30, 0x30, 0x50, 0x33, 0x31, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x38, 0x30, 0x30, 0x50, 0x33, 0x31, 0x43, 0x38, 0x30,
		0x30, 0x50, 0x33, 0x32, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x38, 0x30, 0x30, 0x50, 0x33, 0x32, 0x43, 0x31, 0x30, 0x31,
		0x50, 0x35, 0x31, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x6c, 0x69, 0x66, 0x65, 0x20, 0x31, 0x30, 0x31, 0x50, 0x35, 0x31, 0x43, 0x58, 0x70, 0x72, 0x65,
		0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x37, 0x24,
		0x31, 0x51, 0x46, 0x36, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x37, 0x31, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x46,
		0x37, 0x31, 0x36, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c,
		0x69, 0x66, 0x65, 0x20, 0x4d, 0x37, 0x31, 0x36, 0x4d, 0x65, 0x63, 0x6f, 0x6f, 0x6c, 0x4b, 0x4d,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x4d, 0x39, 0x20, 0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x42,
		0x42, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x38, 0x53,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x57, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44,
		0x56, 0x42, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x4d, 0x38, 0x53,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x38, 0x53, 0x20, 0x4d, 0x61,
		0x78, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x63, 0x6f, 0x6d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61,
		0x64, 0x20, 0x37, 0x35, 0x30, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x39, 0x37, 0x30, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x39, 0x37, 0x30, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61,
		0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x58, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x58, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x48, 0x58, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x58, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x48, 0x58, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x20, 0x47, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x24, 0x31, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38,
		0x37, 0x35, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x4d, 0x2d, 0x53, 0x50, 0x31, 0x41, 0x47, 0x4f,
		0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x47, 0x6f,
		0x20, 0x33, 0x47, 0x4d, 0x2d, 0x53, 0x50, 0x37, 0x78, 0x47, 0x4f, 0x33, 0x47, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x69, 0x50, 0x72, 0x6f,
		0x20, 0x33, 0x47, 0x31, 0x41, 0x45, 0x43, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x31, 0x30, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x69, 0x79, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x32, 0x20, 0x33,
		0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x53,
		0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x53,
		0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x2e, 0x37,
		0x22, 0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x34, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20, 0x53, 0x34, 0x20,
		0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x58, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4d, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4d, 0x58, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x48,
		0x44, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x48, 0x44, 0x20, 0x69, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x20, 0x33, 0x47, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x41, 0x7a,
		0x69, 0x6d, 0x75, 0x74, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x20, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x20, 0x33, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x41, 0x7a, 0x69, 0x6d,
		0x75, 0x74, 0x20, 0x33, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x69, 0x79, 0x6f,
		0x20, 0x38, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x45,
		0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x45, 0x59, 0x57,
		0x69, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x57, 0x38, 0x30, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x32, 0x20, 0x33,
		0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75,
		0x6f, 0x20, 0x42, 0x34, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44,
		0x75, 0x6f, 0x20, 0x47, 0x35, 0x35, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x44, 0x75, 0x6f, 0x20, 0x42, 0x35, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64,
		0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x35, 0x33, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61,
		0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x37, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x33, 0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x35, 0x30, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x36, 0x35, 0x30, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x35, 0x31, 0x55, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x34, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x35, 0x30, 0x30, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x30, 0x30,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x24, 0x31, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x58, 0x24, 0x31, 0x55,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x24, 0x31,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x24, 0x31,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x65, 0x64, 0x69, 0x6f,
		0x6e, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x24, 0x31, 0x4d, 0x65, 0x67, 0x61, 0x46, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x2b, 0x4d,
		0x46, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x34, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x20, 0x34, 0x20, 0x4c,
		0x54, 0x45, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x20, 0x33, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x53,
		0x50, 0x2d, 0x41, 0x32, 0x30, 0x69, 0x4d, 0x69, 0x6e, 0x74, 0x56, 0x39, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4d, 0x65, 0x69, 0x74, 0x75, 0x54, 0x38, 0x54, 0x38, 0x73, 0x54, 0x39, 0x4d, 0x38, 0x73,
		0x32, 0x4d, 0x65, 0x69, 0x7a, 0x75, 0x4d, 0x32, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x24, 0x31,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x31, 0x45, 0x4d, 0x32, 0x45, 0x4d, 0x32, 0x4d, 0x33, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x35, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x36, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x4d, 0x33, 0x73, 0x4d, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x35, 0x63, 0x4d, 0x58,
		0x32, 0x4d, 0x58, 0x33, 0x4d, 0x58, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x58, 0x34, 0x4d, 0x58,
		0x35, 0x6d, 0x31, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x4d, 0x31, 0x20, 0x4d, 0x65, 0x74, 0x61,
		0x6c, 0x4d, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x38, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x50,
		0x52, 0x4f, 0x20, 0x37, 0x50, 0x52, 0x4f, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x52, 0x4f, 0x20, 0x24, 0x31, 0x4d, 0x58, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x31, 0x36, 0x54, 0x31, 0x36, 0x74, 0x68, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x31, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x31, 0x36, 0x74, 0x68, 0x31,
		0x36, 0x58, 0x31, 0x36, 0x31, 0x36, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x33, 0x4d, 0x65, 0x6c,
		0x72, 0x6f, 0x73, 0x65, 0x53, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x30, 0x31, 0x39, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x20, 0x33, 0x2e, 0x34, 0x22, 0x4d,
		0x65, 0x6d, 0x75, 0x70, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x53,
		0x6c, 0x69, 0x64, 0x65, 0x50, 0x61, 0x64, 0x20, 0x4e, 0x47, 0x24, 0x31, 0x53, 0x6c, 0x69, 0x64,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x4e, 0x47, 0x24, 0x31, 0x20, 0x33, 0x47, 0x53, 0x6c, 0x69, 0x64,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x37, 0x30, 0x34, 0x24, 0x31, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x61,
		0x63, 0x69, 0x66, 0x69, 0x63, 0x47, 0x6f, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x32, 0x4d, 0x69,
		0x58, 0x7a, 0x6f, 0x4d, 0x45, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x4d, 0x58, 0x31, 0x30, 0x32,
		0x31, 0x20, 0x33, 0x47, 0x4d, 0x58, 0x24, 0x31, 0x20, 0x34, 0x47, 0x4d, 0x45, 0x31, 0x30, 0x32,
		0x35, 0x20, 0x33, 0x47, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x4d, 0x61, 0x78, 0x41, 0x51, 0x35, 0x30,
		0x30, 0x31, 0x20, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43,
		0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x51, 0x35, 0x30, 0x30,
		0x31, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x4a, 0x75, 0x69, 0x63, 0x65, 0x20, 0x32, 0x43,
		0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x44, 0x6f, 0x6f, 0x64, 0x6c, 0x65, 0x20, 0x32, 0x43, 0x61,
		0x6e, 0x76, 0x61, 0x73, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x34, 0x43, 0x61, 0x6e, 0x76, 0x61,
		0x73, 0x20, 0x4a, 0x75, 0x69, 0x63, 0x65, 0x20, 0x34, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20,
		0x50, 0x75, 0x6c, 0x73, 0x65, 0x34, 0x35, 0x36, 0x30, 0x4d, 0x4d, 0x58, 0x49, 0x4e, 0x20, 0x32,
		0x42, 0x49, 0x4e, 0x20, 0x31, 0x42, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x41, 0x31, 0x43,
		0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x45, 0x76, 0x6f, 0x6b, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x43,
		0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x35, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x35, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x54, 0x61, 0x62, 0x42, 0x6f,
		0x6c, 0x74, 0x20, 0x51, 0x24, 0x31, 0x51, 0x34, 0x31, 0x37, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
		0x20, 0x4d, 0x65, 0x67, 0x61, 0x51, 0x33, 0x35, 0x30, 0x52, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
		0x20, 0x4d, 0x61, 0x67, 0x6e, 0x75, 0x73, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x34,
		0x38, 0x30, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x32,
		0x51, 0x33, 0x38, 0x30, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x51, 0x33, 0x35, 0x31, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x33, 0x35, 0x30, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
		0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x33, 0x34,
		0x39, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x34,
		0x42, 0x6f, 0x6c, 0x74, 0x20, 0x50, 0x61, 0x63, 0x65, 0x51, 0x34, 0x30, 0x39, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x34, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x51, 0x34, 0x31, 0x35,
		0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x50, 0x61, 0x63, 0x65, 0x51, 0x33, 0x34, 0x30, 0x53,
		0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x32, 0x59, 0x55, 0x20, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61,
		0x20, 0x59, 0x55, 0x35, 0x30, 0x34, 0x30, 0x59, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x55, 0x20, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x53,
		0x20, 0x59, 0x55, 0x35, 0x35, 0x33, 0x30, 0x51, 0x34, 0x32, 0x34, 0x42, 0x6f, 0x6c, 0x74, 0x20,
		0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x51, 0x34, 0x31, 0x30, 0x31, 0x42, 0x6f, 0x6c, 0x74, 0x20,
		0x57, 0x61, 0x72, 0x72, 0x69, 0x6f, 0x72, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x33,
		0x35, 0x32, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x34,
		0x42, 0x6f, 0x6c, 0x74, 0x20, 0x24, 0x31, 0x51, 0x33, 0x30, 0x36, 0x42, 0x6f, 0x6c, 0x74, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x33, 0x47, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74, 0x20, 0x32,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x34, 0x32, 0x36, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20,
		0x4d, 0x65, 0x67, 0x61, 0x20, 0x32, 0x4e, 0x38, 0x32, 0x31, 0x36, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x20, 0x4e, 0x31, 0x31, 0x4e, 0x38, 0x33, 0x30, 0x31, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x4e, 0x31, 0x32, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6e, 0x76, 0x61,
		0x73, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
		0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x34,
		0x34, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x33, 0x35, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x20, 0x32, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x76, 0x61,
		0x73, 0x20, 0x4d, 0x61, 0x67, 0x6e, 0x75, 0x73, 0x20, 0x48, 0x44, 0x43, 0x61, 0x6e, 0x76, 0x61,
		0x73, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x32, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
		0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x56, 0x64, 0x65, 0x6f, 0x20, 0x34, 0x43, 0x61, 0x6e,
		0x76, 0x61, 0x73, 0x20, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x43, 0x61, 0x6e, 0x76,
		0x61, 0x73, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74, 0x20, 0x24, 0x31, 0x69, 0x4f, 0x6e,
		0x65, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x4e, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x49,
		0x4e, 0x20, 0x31, 0x62, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x4b, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x34, 0x33, 0x30,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x34, 0x33, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35,
		0x33, 0x32, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x33, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x33, 0x35, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x35, 0x34, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x35, 0x30, 0x52,
		0x4d, 0x2d, 0x31, 0x30, 0x31, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x38, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x58, 0x4c, 0x20, 0x4c, 0x54, 0x45, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x58, 0x4c, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x36, 0x34, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49,
		0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36,
		0x35, 0x30, 0x52, 0x4d, 0x2d, 0x31, 0x31, 0x35, 0x32, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36,
		0x35, 0x30, 0x20, 0x53, 0x53, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x35, 0x30, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x20, 0x58, 0x4c, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20,
		0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x20, 0x58, 0x4c, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49,
		0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x31, 0x33, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x31, 0x35, 0x33, 0x30, 0x53, 0x75,
		0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x33, 0x53, 0x75, 0x72, 0x66,
		0x61, 0x63, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65,
		0x20, 0x44, 0x75, 0x6f, 0x20, 0x32, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x44, 0x75,
		0x6f, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x33, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x24, 0x31, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x68, 0x45, 0x54, 0x57, 0x31, 0x30,
		0x31, 0x47, 0x54, 0x45, 0x2d, 0x54, 0x61, 0x62, 0x20, 0x57, 0x69, 0x46, 0x69, 0x45, 0x2d, 0x54,
		0x61, 0x62, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x69, 0x6e, 0x69, 0x78, 0x4e, 0x45, 0x4f, 0x20, 0x58,
		0x38, 0x48, 0x4e, 0x45, 0x4f, 0x20, 0x55, 0x32, 0x32, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x24, 0x31,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x45, 0x4f, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4e, 0x45, 0x4f, 0x20, 0x58, 0x38, 0x38, 0x69, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x37, 0x4e, 0x45,
		0x4f, 0x20, 0x58, 0x35, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x24, 0x31, 0x4e, 0x45, 0x4f, 0x20, 0x55,
		0x31, 0x4e, 0x45, 0x4f, 0x20, 0x5a, 0x36, 0x34, 0x4e, 0x45, 0x4f, 0x20, 0x55, 0x39, 0x48, 0x50,
		0x65, 0x61, 0x72, 0x6c, 0x20, 0x24, 0x31, 0x45, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x64, 0x4d, 0x34,
		0x43, 0x52, 0x43, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x56, 0x69, 0x72, 0x47, 0x6f, 0x4f, 0x72, 0x69,
		0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x43, 0x6f, 0x6f, 0x6c, 0x4d, 0x69, 0x6e, 0x74, 0x74,
		0x20, 0x24, 0x31, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x20, 0x24, 0x31,
		0x46, 0x72, 0x65, 0x73, 0x68, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x6f,
		0x4d, 0x6f, 0x62, 0x69, 0x78, 0x20, 0x4d, 0x36, 0x4d, 0x69, 0x6f, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6f, 0x6e, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x24, 0x31,
		0x4d, 0x69, 0x6f, 0x6e, 0x65, 0x20, 0x49, 0x49, 0x49, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x33, 0x50,
		0x32, 0x2b, 0x4d, 0x69, 0x6f, 0x6e, 0x65, 0x5f, 0x50, 0x55, 0x42, 0x47, 0x5f, 0x31, 0x50, 0x55,
		0x42, 0x47, 0x20, 0x31, 0x4e, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x72, 0x61, 0x79,
		0x54, 0x50, 0x4d, 0x34, 0x47, 0x5f, 0x57, 0x54, 0x38, 0x54, 0x50, 0x4d, 0x34, 0x47, 0x20, 0x57,
		0x54, 0x38, 0x4d, 0x49, 0x44, 0x4d, 0x20, 0x24, 0x31, 0x4d, 0x50, 0x4d, 0x20, 0x24, 0x31, 0x4d,
		0x69, 0x74, 0x6f, 0x33, 0x32, 0x35, 0x35, 0x41, 0x33, 0x37, 0x20, 0x5a, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x69, 0x74, 0x73, 0x75, 0x62, 0x69, 0x73, 0x68, 0x69, 0x4d, 0x69, 0x74, 0x73,
		0x75, 0x69, 0x4d, 0x6f, 0x62, 0x65, 0x6c, 0x6c, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x50, 0x33, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x50, 0x33, 0x4d, 0x6f, 0x62, 0x69, 0x49, 0x6f, 0x54, 0x4d, 0x6f, 0x62,
		0x69, 0x47, 0x6f, 0x20, 0x32, 0x4d, 0x6f, 0x62, 0x69, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x62, 0x69, 0x57, 0x69, 0x72, 0x65, 0x4b, 0x41, 0x4e,
		0x55, 0x4e, 0x41, 0x4b, 0x61, 0x6e, 0x75, 0x6e, 0x61, 0x4b, 0x57, 0x41, 0x4e, 0x49, 0x54, 0x41,
		0x4b, 0x77, 0x61, 0x6e, 0x69, 0x74, 0x61, 0x4d, 0x6f, 0x62, 0x69, 0x63, 0x65, 0x6c, 0x45, 0x70,
		0x69, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4c, 0x45, 0x47, 0x45, 0x4e, 0x44, 0x20,
		0x4d, 0x41, 0x58, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x45, 0x47,
		0x45, 0x4e, 0x44, 0x20, 0x50, 0x52, 0x4f, 0x5f, 0x31, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x4c, 0x54, 0x45, 0x42, 0x4c, 0x49, 0x4e, 0x4b, 0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x4f, 0x52,
		0x43, 0x45, 0x45, 0x70, 0x69, 0x63, 0x20, 0x24, 0x31, 0x42, 0x45, 0x52, 0x52, 0x59, 0x31, 0x42,
		0x65, 0x72, 0x72, 0x79, 0x20, 0x31, 0x42, 0x45, 0x52, 0x52, 0x59, 0x20, 0x50, 0x52, 0x4f, 0x42,
		0x65, 0x72, 0x72, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x45, 0x52, 0x52, 0x59, 0x20, 0x32, 0x42,
		0x65, 0x72, 0x72, 0x79, 0x20, 0x32, 0x54, 0x52, 0x45, 0x4e, 0x44, 0x59, 0x20, 0x32, 0x54, 0x72,
		0x65, 0x6e, 0x64, 0x79, 0x20, 0x32, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x42, 0x45, 0x52, 0x52, 0x59, 0x42, 0x65, 0x72, 0x72, 0x79, 0x54, 0x52, 0x45, 0x4e, 0x44, 0x59,
		0x20, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x54, 0x52, 0x45, 0x4e, 0x44, 0x59, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x54, 0x72, 0x65, 0x6e, 0x64,
		0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x59, 0x50, 0x45,
		0x5f, 0x58, 0x48, 0x79, 0x70, 0x65, 0x20, 0x58, 0x48, 0x59, 0x50, 0x45, 0x48, 0x79, 0x70, 0x65,
		0x44, 0x41, 0x4e, 0x44, 0x59, 0x5f, 0x5a, 0x41, 0x4d, 0x44, 0x61, 0x6e, 0x64, 0x79, 0x20, 0x5a,
		0x61, 0x6d, 0x44, 0x41, 0x4e, 0x44, 0x59, 0x44, 0x61, 0x6e, 0x64, 0x79, 0x4d, 0x45, 0x54, 0x52,
		0x4f, 0x32, 0x4d, 0x65, 0x74, 0x72, 0x6f, 0x20, 0x32, 0x41, 0x53, 0x54, 0x52, 0x4f, 0x56, 0x45,
		0x4e, 0x55, 0x53, 0x5f, 0x47, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x47, 0x6f, 0x54, 0x41, 0x4e,
		0x47, 0x4f, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x46, 0x45, 0x4e, 0x44, 0x59, 0x5f, 0x44, 0x53, 0x46, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x44,
		0x53, 0x52, 0x45, 0x42, 0x45, 0x4c, 0x52, 0x55, 0x42, 0x59, 0x52, 0x75, 0x62, 0x79, 0x52, 0x37,
		0x4f, 0x52, 0x45, 0x4f, 0x4f, 0x72, 0x65, 0x6f, 0x47, 0x4c, 0x4f, 0x54, 0x69, 0x74, 0x61, 0x6e,
		0x5f, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x31, 0x5a, 0x4f, 0x4f, 0x4d, 0x5f, 0x31, 0x5a,
		0x6f, 0x6f, 0x6d, 0x20, 0x31, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x44, 0x53, 0x48, 0x65, 0x72, 0x6f,
		0x20, 0x44, 0x53, 0x46, 0x41, 0x4d, 0x45, 0x5f, 0x44, 0x53, 0x46, 0x61, 0x6d, 0x65, 0x20, 0x44,
		0x53, 0x46, 0x41, 0x4d, 0x45, 0x46, 0x61, 0x6d, 0x65, 0x42, 0x45, 0x41, 0x4d, 0x43, 0x6f, 0x73,
		0x6d, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4e, 0x65, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4e, 0x45, 0x4f,
		0x5f, 0x31, 0x4e, 0x65, 0x6f, 0x4e, 0x65, 0x6f, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x65, 0x6f,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x73, 0x77, 0x69, 0x74, 0x63,
		0x68, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x47, 0x6f, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
		0x31, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x31, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x31, 0x52,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x6c, 0x69, 0x6b, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x43,
		0x6c, 0x69, 0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x4c, 0x49, 0x4b, 0x43, 0x6c, 0x69, 0x6b,
		0x56, 0x58, 0x24, 0x31, 0x50, 0x55, 0x4c, 0x53, 0x45, 0x5f, 0x31, 0x50, 0x75, 0x6c, 0x73, 0x65,
		0x20, 0x31, 0x50, 0x55, 0x52, 0x45, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x50, 0x75, 0x72, 0x65, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x46, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x46, 0x65,
		0x6e, 0x64, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x4f, 0x4f, 0x4d, 0x2d, 0x48, 0x5a, 0x6f,
		0x6f, 0x6d, 0x20, 0x48, 0x5a, 0x4f, 0x4f, 0x4d, 0x5a, 0x6f, 0x6f, 0x6d, 0x46, 0x65, 0x76, 0x65,
		0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x46, 0x45, 0x56, 0x45, 0x52, 0x5f, 0x50,
		0x4c, 0x55, 0x53, 0x46, 0x65, 0x76, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x62,
		0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x58, 0x31, 0x20, 0x24, 0x31, 0x45, 0x31, 0x20, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x58, 0x51, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x5a, 0x75, 0x6d, 0x62, 0x6f,
		0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x53, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f,
		0x20, 0x53, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x53,
		0x32, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x4a, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x37, 0x29, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x4a, 0x4c, 0x61,
		0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x4a, 0x32, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73,
		0x74, 0x61, 0x72, 0x20, 0x5a, 0x55, 0x4d, 0x42, 0x4f, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5a,
		0x75, 0x6d, 0x62, 0x6f, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x75,
		0x6e, 0x61, 0x20, 0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x4c,
		0x41, 0x49, 0x20, 0x59, 0x75, 0x6b, 0x69, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x75, 0x6b, 0x69, 0x4c,
		0x61, 0x69, 0x20, 0x5a, 0x6f, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x65,
		0x6e, 0x61, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74,
		0x61, 0x72, 0x5f, 0x5a, 0x4f, 0x52, 0x4f, 0x5f, 0x34, 0x47, 0x5a, 0x6f, 0x72, 0x6f, 0x20, 0x34,
		0x47, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x74, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x4c, 0x41, 0x49, 0x20, 0x35, 0x31, 0x32, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x4c, 0x61,
		0x69, 0x20, 0x35, 0x31, 0x32, 0x4c, 0x61, 0x69, 0x20, 0x35, 0x30, 0x34, 0x24, 0x31, 0x6d, 0x6f,
		0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x4c, 0x41, 0x49, 0x20, 0x59, 0x4c, 0x61, 0x69,
		0x20, 0x59, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x50, 0x52, 0x49, 0x4d,
		0x45, 0x20, 0x58, 0x20, 0x32, 0x30, 0x31, 0x37, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x58, 0x43,
		0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x20, 0x58, 0x20, 0x4d, 0x41,
		0x58, 0x20, 0x32, 0x30, 0x31, 0x38, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x58, 0x20, 0x4d, 0x61,
		0x78, 0x4b, 0x6f, 0x6f, 0x6c, 0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72,
		0x20, 0x4b, 0x41, 0x54, 0x20, 0x34, 0x35, 0x32, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4b, 0x61,
		0x74, 0x20, 0x34, 0x35, 0x32, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x4c,
		0x41, 0x49, 0x5f, 0x59, 0x4f, 0x4c, 0x4c, 0x4f, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x61,
		0x69, 0x20, 0x59, 0x6f, 0x6c, 0x6c, 0x6f, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x4b, 0x69,
		0x6e, 0x67, 0x64, 0x6f, 0x6d, 0x47, 0xc3, 0xa9, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x20, 0x31, 0x32,
		0x36, 0x4d, 0x6f, 0x62, 0x69, 0x6f, 0x6c, 0x61, 0x4d, 0x53, 0x35, 0x30, 0x58, 0x36, 0x41, 0x74,
		0x6d, 0x6f, 0x73, 0x20, 0x49, 0x49, 0x50, 0x6f, 0x6c, 0x79, 0x73, 0x20, 0x4d, 0x53, 0x34, 0x35,
		0x4c, 0x31, 0x4d, 0x53, 0x35, 0x35, 0x58, 0x36, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x49, 0x49, 0x4d, 0x53, 0x35, 0x35, 0x58, 0x35, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x53, 0x35, 0x35, 0x4c, 0x31, 0x47, 0x41, 0x49, 0x41, 0x4d, 0x53, 0x35,
		0x30, 0x4c, 0x31, 0x49, 0x6e, 0x74, 0x69, 0x4d, 0x42, 0x2d, 0x32, 0x39, 0x30, 0x30, 0x20, 0x51,
		0x55, 0x41, 0x54, 0x54, 0x52, 0x4f, 0x4d, 0x42, 0x2d, 0x32, 0x39, 0x30, 0x30, 0x20, 0x51, 0x75,
		0x61, 0x74, 0x74, 0x72, 0x6f, 0x4d, 0x53, 0x34, 0x33, 0x41, 0x33, 0x30, 0x30, 0x30, 0x4d, 0x53,
		0x34, 0x35, 0x41, 0x34, 0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x34, 0x35, 0x4d, 0x53, 0x35,
		0x30, 0x41, 0x34, 0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30, 0x4d, 0x53, 0x35, 0x30,
		0x41, 0x34, 0x35, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30, 0x20, 0x45, 0x6c, 0x65, 0x67,
		0x61, 0x6e, 0x63, 0x65, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x35, 0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e,
		0x20, 0x35, 0x30, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x38, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x36,
		0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x31,
		0x36, 0x4d, 0x53, 0x35, 0x30, 0x42, 0x31, 0x31, 0x30, 0x30, 0x30, 0x57, 0x61, 0x76, 0x65, 0x35,
		0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x4d, 0x6f, 0x62, 0x69, 0x73, 0x74, 0x65, 0x6c, 0x4d, 0x6f,
		0x62, 0x6f, 0x4d, 0x6f, 0x62, 0x76, 0x6f, 0x69, 0x54, 0x69, 0x63, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x24, 0x31, 0x4d, 0x6f, 0x64, 0x65, 0x63, 0x6f, 0x6d, 0x58, 0x69, 0x6e, 0x6f, 0x20, 0x5a,
		0x24, 0x31, 0x20, 0x58, 0x24, 0x32, 0x45, 0x43, 0x48, 0x4f, 0x20, 0x4c, 0x4f, 0x4c, 0x4c, 0x59,
		0x45, 0x63, 0x68, 0x6f, 0x20, 0x4c, 0x6f, 0x6c, 0x6c, 0x79, 0x46, 0x72, 0x65, 0x65, 0x54, 0x61,
		0x62, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x57, 0x61, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x24, 0x31, 0x4d, 0x6f, 0x66, 0x75, 0x74, 0x4d, 0x6f, 0x73, 0x69, 0x6d, 0x6f, 0x73, 0x69, 0x6d,
		0x6f, 0x6d, 0x6f, 0x33, 0x73, 0x6d, 0x6f, 0x6d, 0x6f, 0x33, 0x53, 0x4d, 0x6f, 0x74, 0x69, 0x76,
		0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x4d, 0x4f, 0x54, 0x2d, 0x56, 0x33, 0x36, 0x30,
		0x56, 0x33, 0x36, 0x30, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x74, 0x61, 0x62, 0x20, 0x67, 0x37, 0x30,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x47, 0x37, 0x30, 0x53, 0x70, 0x69, 0x63,
		0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x45, 0x46, 0x69, 0x72,
		0x65, 0x45, 0x64, 0x67, 0x65, 0x20, 0x53, 0x45, 0x64, 0x67, 0x65, 0x20, 0x28, 0x24, 0x31, 0x29,
		0x45, 0x64, 0x67, 0x65, 0x20, 0x53, 0x33, 0x30, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61,
		0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x75, 0x6c, 0x74, 0x72, 0x61, 0x45, 0x64,
		0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x6d, 0x6f, 0x74, 0x6f, 0x72,
		0x6f, 0x6c, 0x61, 0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x6e, 0x65, 0x6f, 0x45,
		0x64, 0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x4e, 0x65, 0x6f, 0x45, 0x64, 0x67, 0x65, 0x20, 0x32,
		0x30, 0x45, 0x64, 0x67, 0x65, 0x20, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x65, 0x66, 0x79, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x6f, 0x74, 0x6f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x51, 0x75, 0x65,
		0x6e, 0x63, 0x68, 0x46, 0x69, 0x72, 0x65, 0x20, 0x58, 0x54, 0x44, 0x65, 0x66, 0x79, 0x44, 0x65,
		0x66, 0x79, 0x20, 0x58, 0x54, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x61, 0x6c, 0x44, 0x72, 0x6f, 0x69,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x6c, 0x75, 0x78, 0x65, 0x50, 0x72, 0x69,
		0x6d, 0x75, 0x73, 0x49, 0x72, 0x6f, 0x6e, 0x52, 0x6f, 0x63, 0x6b, 0x41, 0x74, 0x72, 0x69, 0x78,
		0x4d, 0x6f, 0x74, 0x6f, 0x6c, 0x75, 0x78, 0x65, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x2d, 0x53, 0x49,
		0x4d, 0x41, 0x74, 0x72, 0x69, 0x78, 0x20, 0x54, 0x56, 0x41, 0x74, 0x72, 0x69, 0x78, 0x20, 0x48,
		0x44, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x47, 0x6c, 0x61, 0x6d, 0x4d, 0x69,
		0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69,
		0x66, 0x79, 0x20, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x54, 0x38, 0x38, 0x32, 0x44, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x56, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20,
		0x52, 0x41, 0x5a, 0x52, 0x20, 0x69, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x34, 0x50, 0x68, 0x6f,
		0x74, 0x6f, 0x6e, 0x20, 0x51, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x66, 0x79, 0x20, 0x4d,
		0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x4d, 0x44, 0x72, 0x6f, 0x69,
		0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52,
		0x20, 0x44, 0x31, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x44, 0x33,
		0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x48, 0x44, 0x44, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x6d, 0x6f, 0x74, 0x6f,
		0x20, 0x67, 0x35, 0x32, 0x6a, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x32,
		0x6a, 0x20, 0x35, 0x47, 0x58, 0x54, 0x32, 0x33, 0x33, 0x35, 0x2d, 0x33, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x35, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x33, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x32, 0x20, 0x28, 0x34, 0x47, 0x2d,
		0x4c, 0x54, 0x45, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x45, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45,
		0x36, 0x20, 0x28, 0x58, 0x54, 0x32, 0x30, 0x30, 0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x45, 0x35, 0x20, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45,
		0x35, 0x20, 0x53, 0x75, 0x70, 0x72, 0x61, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x35, 0x20, 0x47,
		0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x73,
		0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20,
		0x4d, 0x61, 0x78, 0x78, 0x20, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x32, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x43, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x43, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20,
		0x54, 0x75, 0x72, 0x62, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x47, 0x34, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35,
		0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x73, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x35, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x36, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x37, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x58, 0x54, 0x32, 0x31, 0x33, 0x37, 0x2d, 0x32, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x35, 0x30, 0x58, 0x54, 0x32, 0x31, 0x37, 0x31, 0x2d, 0x33, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x35, 0x31, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20, 0x50, 0x75, 0x72, 0x65, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65,
		0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x44, 0x72, 0x6f, 0x69, 0x64,
		0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x5a, 0x34, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x33, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x5a, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x32, 0x20,
		0x46, 0x6f, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x33, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x4d, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x53, 0x33, 0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x33, 0x30, 0x50, 0x33,
		0x30, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x50, 0x33, 0x30, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x45, 0x64,
		0x67, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x32, 0x29, 0x45, 0x64, 0x67, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x24,
		0x31, 0x29, 0x45, 0x64, 0x67, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x54, 0x32, 0x32, 0x30,
		0x31, 0x2d, 0x32, 0x45, 0x64, 0x67, 0x65, 0x20, 0x58, 0x33, 0x30, 0x45, 0x64, 0x67, 0x65, 0x20,
		0x24, 0x31, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x67, 0x65, 0x20, 0x32, 0x30,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x45, 0x64, 0x67, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x45, 0x64, 0x67, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x45, 0x64, 0x67, 0x65,
		0x4f, 0x6e, 0x65, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f,
		0x6e, 0x65, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x4f, 0x6e, 0x65, 0x20, 0x48, 0x79, 0x70, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x20, 0x5a,
		0x6f, 0x6f, 0x6d, 0x4f, 0x6e, 0x65, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x74, 0x6f,
		0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
		0x6e, 0x65, 0x20, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c,
		0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x4f, 0x6e, 0x65, 0x20, 0x4d,
		0x61, 0x63, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65,
		0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x20, 0x61, 0x63, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47,
		0x20, 0x55, 0x57, 0x20, 0x41, 0x63, 0x65, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20,
		0x6f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20,
		0x55, 0x57, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x35,
		0x47, 0x20, 0x61, 0x63, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x41, 0x63, 0x65, 0x6d,
		0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x76, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20,
		0x28, 0x58, 0x54, 0x32, 0x31, 0x31, 0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x24, 0x31, 0x29, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x20, 0x28, 0x24, 0x31,
		0x29, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x73, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35,
		0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35,
		0x47, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x73, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x58, 0x54, 0x32, 0x30, 0x39, 0x33, 0x44, 0x4c,
		0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x32, 0x29, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x70, 0x6f, 0x77, 0x65,
		0x72, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x70, 0x72, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x20, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x70, 0x75, 0x72, 0x65,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x75, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x6f, 0x20,
		0x67, 0x20, 0x66, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x46, 0x61, 0x73,
		0x74, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x35, 0x47, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x35, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x47, 0x20, 0x35, 0x47, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x6d, 0x6f, 0x74,
		0x6f, 0x20, 0x67, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x35, 0x47, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x47, 0x34, 0x30, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x36, 0x30, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x24,
		0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x28, 0x58, 0x54, 0x31, 0x39, 0x32,
		0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x46, 0x6f, 0x72,
		0x67, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x6f, 0x20, 0x28, 0x58, 0x54, 0x31, 0x39, 0x35, 0x32, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x24, 0x31, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x78,
		0x20, 0x28, 0x58, 0x54, 0x31, 0x39, 0x35, 0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x24, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x24, 0x31, 0x20, 0x53, 0x75, 0x70, 0x72, 0x61, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x58, 0x24, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x4d,
		0x61, 0x78, 0x78, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x24, 0x31, 0x24, 0x32, 0x24, 0x33, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x24, 0x31, 0x24, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x69, 0x58, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x33, 0x36, 0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x41, 0x43, 0x54, 0x56,
		0x58, 0x54, 0x32, 0x30, 0x37, 0x31, 0x2d, 0x34, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x35, 0x47, 0x52,
		0x41, 0x5a, 0x52, 0x20, 0x28, 0x24, 0x31, 0x29, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x24, 0x31, 0x52,
		0x49, 0x5a, 0x52, 0x20, 0x24, 0x31, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x20, 0x24, 0x31, 0x4d, 0x6f,
		0x76, 0x69, 0x63, 0x46, 0x34, 0x35, 0x30, 0x32, 0x4d, 0x6f, 0x76, 0x69, 0x74, 0x65, 0x6c, 0x4d,
		0x6f, 0x78, 0x65, 0x65, 0x32, 0x31, 0x36, 0x30, 0x4d, 0x54, 0x2d, 0x54, 0x38, 0x30, 0x30, 0x4d,
		0x70, 0x6d, 0x61, 0x6e, 0x4d, 0x50, 0x31, 0x30, 0x30, 0x69, 0x20, 0x4f, 0x43, 0x54, 0x41, 0x4d,
		0x50, 0x51, 0x43, 0x47, 0x31, 0x30, 0x20, 0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x4f,
		0x53, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6c, 0x61, 0x73, 0x65, 0x72, 0x46, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x32, 0x47, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x47, 0x45,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x53, 0x36, 0x30, 0x46, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d,
		0x53, 0x34, 0x35, 0x53, 0x5f, 0x41, 0x36, 0x5f, 0x53, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x4d, 0x53,
		0x34, 0x35, 0x53, 0x20, 0x41, 0x36, 0x20, 0x53, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x4d, 0x53, 0x34,
		0x35, 0x53, 0x5f, 0x41, 0x36, 0x5f, 0x54, 0x65, 0x65, 0x6e, 0x4d, 0x53, 0x34, 0x35, 0x53, 0x20,
		0x41, 0x36, 0x20, 0x54, 0x65, 0x65, 0x6e, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4d, 0x37, 0x53, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x37, 0x53, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4d, 0x24, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x37, 0x53, 0x51, 0x43, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x20,
		0x33, 0x47, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x4d, 0x37,
		0x20, 0x33, 0x47, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x4c, 0x24,
		0x31, 0x2d, 0x4d, 0x37, 0x73, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d,
		0x37, 0x73, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x4c, 0x30, 0x31, 0x2d, 0x4d, 0x37, 0x20, 0x53,
		0x44, 0x4d, 0x31, 0x30, 0x41, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x39, 0x20, 0x33, 0x47, 0x4d,
		0x37, 0x20, 0x33, 0x47, 0x20, 0x41, 0x31, 0x30, 0x58, 0x38, 0x20, 0x34, 0x47, 0x4d, 0x24, 0x31,
		0x20, 0x33, 0x47, 0x4b, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x77,
		0x61, 0x6c, 0x69, 0x6d, 0x75, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x79, 0x47, 0x69, 0x63, 0x61, 0x48,
		0x44, 0x52, 0x20, 0x24, 0x31, 0x20, 0x42, 0x6f, 0x78, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f,
		0x72, 0x65, 0x20, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x74, 0x76, 0x20, 0x62, 0x6f, 0x78, 0x51,
		0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x54,
		0x56, 0x20, 0x42, 0x6f, 0x78, 0x41, 0x54, 0x56, 0x24, 0x31, 0x4d, 0x79, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6d, 0x79, 0x54, 0x61, 0x62, 0x5f, 0x31,
		0x30, 0x49, 0x49, 0x49, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x49,
		0x6d, 0x79, 0x54, 0x61, 0x62, 0x31, 0x30, 0x49, 0x49, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x20, 0x31,
		0x30, 0x20, 0x49, 0x49, 0x6d, 0x79, 0x54, 0x24, 0x31, 0x20, 0x44, 0x54, 0x56, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x5f, 0x37, 0x5f, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x56, 0x69, 0x65, 0x77, 0x20, 0x37, 0x22, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56,
		0x69, 0x65, 0x77, 0x5f, 0x38, 0x5f, 0x4c, 0x54, 0x45, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x38, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x33, 0x47, 0x6d, 0x79, 0x41, 0x24, 0x31, 0x20,
		0x44, 0x54, 0x56, 0x41, 0x38, 0x39, 0x38, 0x20, 0x44, 0x55, 0x4f, 0x41, 0x38, 0x39, 0x38, 0x20,
		0x44, 0x75, 0x6f, 0x43, 0x75, 0x62, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x20, 0x32, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x34, 0x5f, 0x4c, 0x69, 0x74, 0x65,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43, 0x2d, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x5f, 0x70, 0x69, 0x78, 0x43, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50,
		0x69, 0x78, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x32, 0x46, 0x55, 0x4e, 0x20, 0x24, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x55, 0x4e, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x46,
		0x55, 0x4e, 0x20, 0x24, 0x31, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x58, 0x45, 0x20,
		0x50, 0x72, 0x6f, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x78, 0x65, 0x20, 0x50, 0x72,
		0x6f, 0x6d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x41, 0x58, 0x45, 0x20, 0x33, 0x47, 0x48,
		0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x78, 0x65, 0x20, 0x33, 0x47, 0x48, 0x61, 0x6d, 0x6d,
		0x65, 0x72, 0x20, 0x41, 0x78, 0x65, 0x20, 0x4d, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x79, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x4d, 0x59, 0x32, 0x37, 0x6d, 0x79, 0x32, 0x37, 0x4d, 0x59, 0x38, 0x30, 0x37,
		0x6d, 0x79, 0x58, 0x31, 0x6d, 0x79, 0x58, 0x49, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6d, 0x79,
		0x58, 0x49, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x6d, 0x79, 0x58, 0x49, 0x24, 0x31, 0x6d, 0x79, 0x24,
		0x31, 0x6d, 0x79, 0x57, 0x58, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x2d, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x42, 0x45, 0x51, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x31, 0x38, 0x78, 0x39, 0x24, 0x31, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x72, 0x6f, 0x77, 0x6e, 0x20, 0x31,
		0x42, 0x72, 0x6f, 0x77, 0x6e, 0x20, 0x32, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x50, 0x72,
		0x6f, 0x51, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x49, 0x49, 0x49, 0x5f, 0x50, 0x6c, 0x75,
		0x73, 0x51, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x49, 0x49, 0x49, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4c, 0x55, 0x4e, 0x41, 0x5f, 0x49, 0x49, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x49, 0x49, 0x4d,
		0x79, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4d,
		0x79, 0x54, 0x61, 0x62, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x4d, 0x79, 0x57, 0x69, 0x67, 0x6f, 0x4d, 0x79, 0x57, 0x69, 0x67, 0x6f,
		0x20, 0x43, 0x69, 0x74, 0x79, 0x33, 0x43, 0x69, 0x74, 0x79, 0x20, 0x33, 0x45, 0x78, 0x63, 0x69,
		0x74, 0x65, 0x20, 0x47, 0x49, 0x49, 0x49, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x47, 0x33,
		0x4d, 0x79, 0x67, 0x50, 0x61, 0x64, 0x4d, 0x79, 0x6d, 0x61, 0x67, 0x61, 0x4d, 0x79, 0x72, 0x69,
		0x61, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x46, 0x49, 0x56, 0x45, 0x46, 0x69, 0x76, 0x65, 0x4d,
		0x79, 0x72, 0x69, 0x61, 0x5f, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x34, 0x47, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x34, 0x47, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x57, 0x69, 0x64, 0x65, 0x5f,
		0x34, 0x47, 0x57, 0x69, 0x64, 0x65, 0x20, 0x34, 0x47, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x57,
		0x69, 0x64, 0x65, 0x5f, 0x32, 0x57, 0x69, 0x64, 0x65, 0x20, 0x32, 0x4d, 0x79, 0x72, 0x6f, 0x73,
		0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x4d, 0x49, 0x44, 0x2d, 0x24, 0x31, 0x4e, 0x41, 0x53,
		0x43, 0x4f, 0x54, 0x41, 0x4e, 0x47, 0x4f, 0x20, 0x37, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x37,
		0x53, 0x4e, 0x41, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x53, 0x6e, 0x61, 0x70, 0x20, 0x50, 0x72, 0x6f,
		0x4e, 0x45, 0x43, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x20, 0x41, 0x6d, 0x61, 0x64, 0x61, 0x6e,
		0x61, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x20, 0x55, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x45, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x54, 0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29,
		0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x54, 0x31, 0x32, 0x20, 0x51, 0x48,
		0x44, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x54, 0x31, 0x31, 0x20, 0x24,
		0x31, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x54, 0x37, 0x20, 0x24, 0x31,
		0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x54, 0x38, 0x20, 0x24, 0x31, 0x4c,
		0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x54, 0x45, 0x24, 0x31, 0x4c,
		0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x54, 0x53, 0x24, 0x31, 0x4e,
		0x45, 0x4b, 0x4f, 0x4c, 0x54, 0x2d, 0x24, 0x31, 0x4e, 0x45, 0x58, 0x42, 0x4f, 0x58, 0x4d, 0x58,
		0x51, 0x2d, 0x50, 0x72, 0x6f, 0x2d, 0x4e, 0x45, 0x58, 0x42, 0x4f, 0x58, 0x4d, 0x58, 0x51, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x58, 0x51, 0x2d, 0x4e, 0x45, 0x58, 0x42, 0x4f, 0x58, 0x4d, 0x58, 0x51,
		0x4e, 0x45, 0x58, 0x4f, 0x4e, 0x4e, 0x45, 0x58, 0x54, 0x4e, 0x47, 0x20, 0x4f, 0x70, 0x74, 0x69,
		0x63, 0x73, 0x4e, 0x47, 0x4d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x35, 0x50, 0x6c, 0x75, 0x73, 0x33,
		0x32, 0x47, 0x42, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59,
		0x6f, 0x75, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x50, 0x24, 0x31, 0x44, 0x79, 0x6e, 0x61,
		0x6d, 0x69, 0x63, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x4c, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
		0x20, 0x4a, 0x75, 0x6d, 0x70, 0x20, 0x4c, 0x4e, 0x47, 0x70, 0x6f, 0x6e, 0x4e, 0x49, 0x4e, 0x45,
		0x54, 0x45, 0x43, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x20, 0x47, 0x33,
		0x4e, 0x4f, 0x41, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x46, 0x6f, 0x72, 0x74, 0x65, 0x48, 0x75, 0x6d,
		0x6d, 0x65, 0x72, 0x4c, 0x45, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x4c, 0x45, 0x48, 0x75,
		0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x5f, 0x52, 0x48, 0x75, 0x6d, 0x6d, 0x65,
		0x72, 0x20, 0x52, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x20,
		0x53, 0x45, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x45, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x53, 0x45, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x48, 0x33, 0x53, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x20, 0x48, 0x33, 0x4c, 0x6f, 0x6f, 0x70, 0x48, 0x34, 0x53, 0x45, 0x4d, 0x47, 0x31, 0x32, 0x48,
		0x34, 0x34, 0x53, 0x45, 0x48, 0x31, 0x30, 0x4c, 0x45, 0x53, 0x50, 0x52, 0x49, 0x4e, 0x54, 0x34,
		0x47, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x53, 0x45, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x53, 0x45,
		0x56, 0x69, 0x76, 0x6f, 0x20, 0x34, 0x47, 0x4e, 0x4f, 0x42, 0x55, 0x58, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x4e, 0x58, 0x35, 0x4e, 0x4f, 0x47, 0x41, 0x4e, 0x4f,
		0x47, 0x41, 0x50, 0x41, 0x44, 0x20, 0x37, 0x47, 0x4e, 0x4f, 0x47, 0x41, 0x50, 0x41, 0x44, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x47, 0x48, 0x44, 0x50, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x50,
		0x43, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x4e, 0x4f, 0x56, 0x4f, 0x4e, 0x54, 0x54, 0x20, 0x57, 0x65,
		0x73, 0x74, 0x48, 0x69, 0x6b, 0x61, 0x72, 0x69, 0x42, 0x6f, 0x78, 0x2b, 0x20, 0x24, 0x31, 0x4e,
		0x55, 0x55, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x35, 0x37, 0x30, 0x34, 0x4c, 0x53,
		0x36, 0x30, 0x30, 0x31, 0x4c, 0x53, 0x35, 0x35, 0x30, 0x31, 0x4c, 0x4d, 0x31, 0x39, 0x4e, 0x35,
		0x37, 0x30, 0x32, 0x4c, 0x4e, 0x35, 0x35, 0x30, 0x31, 0x4c, 0x41, 0x35, 0x4c, 0x4e, 0x35, 0x30,
		0x30, 0x32, 0x4c, 0x41, 0x37, 0x4c, 0x53, 0x36, 0x33, 0x30, 0x33, 0x4c, 0x41, 0x39, 0x4c, 0x4e,
		0x35, 0x35, 0x30, 0x32, 0x4c, 0x41, 0x31, 0x30, 0x4c, 0x53, 0x35, 0x37, 0x30, 0x31, 0x4c, 0x4d,
		0x34, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x59, 0x58, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x4e, 0x59, 0x58, 0x5f, 0x41, 0x31, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x4e, 0x59, 0x58, 0x5f, 0x42,
		0x6c, 0x69, 0x6e, 0x6b, 0x4e, 0x59, 0x58, 0x5f, 0x45, 0x47, 0x4f, 0x45, 0x67, 0x6f, 0x4e, 0x59,
		0x58, 0x5f, 0x46, 0x45, 0x4e, 0x49, 0x58, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x4e, 0x59, 0x58, 0x5f,
		0x46, 0x4c, 0x59, 0x5f, 0x49, 0x49, 0x46, 0x6c, 0x79, 0x20, 0x49, 0x49, 0x4e, 0x59, 0x58, 0x5f,
		0x46, 0x4c, 0x59, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x46, 0x6c, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c, 0x59, 0x4e, 0x59, 0x58, 0x5f, 0x48, 0x49, 0x54, 0x48, 0x69,
		0x74, 0x4e, 0x59, 0x58, 0x5f, 0x4a, 0x41, 0x4b, 0x4a, 0x61, 0x6b, 0x4e, 0x59, 0x58, 0x5f, 0x4a,
		0x4f, 0x49, 0x4e, 0x4a, 0x6f, 0x69, 0x6e, 0x4e, 0x59, 0x58, 0x5f, 0x4e, 0x4f, 0x42, 0x41, 0x5f,
		0x49, 0x49, 0x4e, 0x6f, 0x62, 0x61, 0x20, 0x49, 0x49, 0x4e, 0x59, 0x58, 0x5f, 0x4e, 0x4f, 0x42,
		0x41, 0x4e, 0x6f, 0x62, 0x61, 0x4e, 0x59, 0x58, 0x5f, 0x4f, 0x52, 0x42, 0x49, 0x53, 0x4f, 0x72,
		0x62, 0x69, 0x73, 0x52, 0x65, 0x78, 0x4e, 0x59, 0x58, 0x5f, 0x53, 0x48, 0x41, 0x44, 0x45, 0x53,
		0x68, 0x61, 0x64, 0x65, 0x4e, 0x59, 0x58, 0x5f, 0x53, 0x4b, 0x59, 0x53, 0x6b, 0x79, 0x4e, 0x59,
		0x58, 0x5f, 0x53, 0x50, 0x41, 0x52, 0x4b, 0x4e, 0x59, 0x58, 0x5f, 0x56, 0x4f, 0x58, 0x4e, 0x59,
		0x58, 0x5f, 0x5a, 0x45, 0x55, 0x5a, 0x5f, 0x48, 0x44, 0x5a, 0x65, 0x75, 0x73, 0x20, 0x48, 0x44,
		0x47, 0x4c, 0x41, 0x4d, 0x41, 0x52, 0x47, 0x4f, 0x4e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x4e, 0x61,
		0x62, 0x69, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x54, 0x61, 0x62, 0x20, 0x48, 0x44, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x42, 0x69, 0x67, 0x20, 0x54, 0x61, 0x62, 0x20, 0x48, 0x44, 0x20, 0x24, 0x31,
		0x2e, 0x30, 0x22, 0x4e, 0x42, 0x54, 0x59, 0x30, 0x37, 0x53, 0x4d, 0x4b, 0x47, 0x42, 0x61, 0x72,
		0x62, 0x69, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4e, 0x42, 0x46, 0x50,
		0x30, 0x37, 0x50, 0x4d, 0x4b, 0x47, 0x46, 0x69, 0x73, 0x68, 0x65, 0x72, 0x20, 0x50, 0x72, 0x69,
		0x63, 0x65, 0x20, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x37, 0x2e, 0x30, 0x22, 0x53, 0x4e, 0x42, 0x30, 0x32, 0x2d, 0x4e, 0x56, 0x37, 0x41, 0x32, 0x53,
		0x20, 0x54, 0x61, 0x62, 0x4e, 0x41, 0x42, 0x49, 0x32, 0x2d, 0x4e, 0x56, 0x37, 0x41, 0x32, 0x20,
		0x54, 0x61, 0x62, 0x4e, 0x61, 0x6e, 0x68, 0x6f, 0x4e, 0x61, 0x6f, 0x6d, 0x69, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x41, 0x6d, 0x62, 0x61, 0x72, 0x44, 0x61, 0x6d, 0x6d, 0x61, 0x72, 0x4e, 0x61,
		0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x76, 0x52, 0x6f, 0x61, 0x64, 0x4e, 0x65, 0x78,
		0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x68, 0x61, 0x6e,
		0x64, 0x79, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x48, 0x61, 0x6e, 0x64, 0x79, 0x4e, 0x45, 0x58, 0x4f,
		0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x44, 0x55, 0x4f, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x44, 0x75, 0x6f, 0x4e, 0x45, 0x58, 0x4f, 0x20, 0x45, 0x56, 0x4f,
		0x4e, 0x65, 0x78, 0x6f, 0x20, 0x45, 0x76, 0x6f, 0x4d, 0x4f, 0x56, 0x49, 0x4f, 0x20, 0x32, 0x4d,
		0x6f, 0x76, 0x69, 0x6f, 0x20, 0x32, 0x4e, 0x61, 0x76, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x50, 0x2d,
		0x37, 0x35, 0x32, 0x47, 0x6f, 0x4e, 0x50, 0x2d, 0x37, 0x35, 0x32, 0x20, 0x47, 0x6f, 0x4e, 0x61,
		0x76, 0x69, 0x74, 0x65, 0x63, 0x68, 0x4e, 0x61, 0x76, 0x69, 0x74, 0x65, 0x6c, 0x24, 0x31, 0x20,
		0x4c, 0x54, 0x45, 0x54, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x45, 0x39, 0x30, 0x30, 0x20,
		0x46, 0x75, 0x6c, 0x6c, 0x20, 0x48, 0x44, 0x4e, 0x61, 0x76, 0x6f, 0x6e, 0x4d, 0x69, 0x7a, 0x75,
		0x20, 0x4d, 0x35, 0x30, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x69, 0x7a, 0x75, 0x20, 0x24, 0x31,
		0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x75, 0x70, 0x72, 0x65,
		0x6d, 0x65, 0x20, 0x46, 0x69, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x72,
		0x65, 0x6d, 0x65, 0x20, 0x46, 0x69, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x75,
		0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x46, 0x69, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x46, 0x69, 0x6e, 0x65, 0x53, 0x75, 0x70, 0x72, 0x65,
		0x6d, 0x65, 0x20, 0x43, 0x68, 0x69, 0x65, 0x66, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20,
		0x50, 0x75, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65,
		0x20, 0x50, 0x75, 0x72, 0x65, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x75, 0x72, 0x65, 0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x34, 0x30, 0x30, 0x20, 0x33, 0x47, 0x20, 0x32, 0x30, 0x31,
		0x37, 0x54, 0x34, 0x30, 0x30, 0x20, 0x33, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x50,
		0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47,
		0x24, 0x31, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x33, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4f, 0x72, 0x70, 0x68, 0x65, 0x75,
		0x73, 0x20, 0x33, 0x47, 0x50, 0x72, 0x65, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x52,
		0x61, 0x70, 0x74, 0x6f, 0x72, 0x20, 0x33, 0x47, 0x20, 0x38, 0x47, 0x42, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4e, 0x65, 0x63, 0x6e, 0x6f, 0x74, 0x4e,
		0x65, 0x64, 0x61, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x65, 0x66, 0x66, 0x6f, 0x73, 0x43, 0x35,
		0x4c, 0x59, 0x35, 0x30, 0x4e, 0x65, 0x66, 0x66, 0x6f, 0x73, 0x20, 0x58, 0x32, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x58, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x6f, 0x6c, 0x69, 0x78, 0x54,
		0x37, 0x4e, 0x65, 0x6f, 0x6d, 0x69, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x49, 0x51, 0x54, 0x61, 0x62,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x24, 0x31, 0x47, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22,
		0x20, 0x24, 0x31, 0x47, 0x4e, 0x51, 0x54, 0x2d, 0x37, 0x57, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x4e, 0x65, 0x74, 0x67, 0x65, 0x61, 0x72, 0x47, 0x54, 0x56, 0x31,
		0x30, 0x30, 0x4e, 0x65, 0x6f, 0x54, 0x56, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4e, 0x65, 0x74,
		0x6d, 0x61, 0x6b, 0x4e, 0x65, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x4e, 0x65, 0x75, 0x49, 0x6d,
		0x61, 0x67, 0x65, 0x4e, 0x49, 0x4d, 0x2d, 0x4e, 0x65, 0x75, 0x54, 0x61, 0x62, 0x4e, 0x65, 0x77,
		0x20, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x65, 0x77, 0x20, 0x42, 0x72, 0x69, 0x64,
		0x67, 0x65, 0x4e, 0x65, 0x77, 0x67, 0x65, 0x6e, 0x4e, 0x65, 0x77, 0x6c, 0x61, 0x6e, 0x64, 0x4e,
		0x4c, 0x53, 0x2d, 0x4d, 0x54, 0x39, 0x30, 0x4d, 0x54, 0x39, 0x30, 0x20, 0x4f, 0x72, 0x63, 0x61,
		0x4e, 0x4c, 0x53, 0x2d, 0x4d, 0x54, 0x36, 0x35, 0x4d, 0x54, 0x36, 0x35, 0x20, 0x42, 0x65, 0x6c,
		0x75, 0x67, 0x61, 0x20, 0x49, 0x56, 0x4e, 0x4c, 0x53, 0x2d, 0x4e, 0x46, 0x54, 0x31, 0x30, 0x4e,
		0x46, 0x54, 0x31, 0x30, 0x20, 0x50, 0x69, 0x6c, 0x6f, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65,
		0x77, 0x6d, 0x61, 0x6e, 0x4e, 0x65, 0x77, 0x73, 0x4d, 0x79, 0x4e, 0x65, 0x77, 0x73, 0x64, 0x61,
		0x79, 0x4e, 0x65, 0x78, 0x61, 0x4e, 0x65, 0x78, 0x69, 0x61, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x42,
		0x6f, 0x6f, 0x6b, 0x4e, 0x58, 0x30, 0x30, 0x38, 0x48, 0x44, 0x38, 0x47, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x75, 0x6d, 0x20, 0x38, 0x20, 0x48, 0x44, 0x4e, 0x58, 0x41, 0x38, 0x51, 0x43, 0x31, 0x31,
		0x36, 0x41, 0x72, 0x65, 0x73, 0x20, 0x38, 0x4e, 0x58, 0x41, 0x38, 0x4c, 0x54, 0x45, 0x31, 0x31,
		0x36, 0x41, 0x72, 0x65, 0x73, 0x20, 0x38, 0x4c, 0x4e, 0x58, 0x31, 0x36, 0x41, 0x38, 0x31, 0x31,
		0x36, 0x4b, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x38, 0x4e, 0x58, 0x31, 0x36, 0x41, 0x31, 0x30,
		0x31, 0x33, 0x32, 0x53, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x31, 0x30, 0x4e, 0x58, 0x31, 0x36,
		0x41, 0x31, 0x31, 0x32, 0x36, 0x34, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x31, 0x31, 0x4e, 0x45,
		0x58, 0x54, 0x31, 0x30, 0x31, 0x35, 0x42, 0x41, 0x50, 0x41, 0x72, 0x65, 0x73, 0x20, 0x31, 0x30,
		0x4e, 0x58, 0x41, 0x31, 0x30, 0x31, 0x4c, 0x54, 0x45, 0x31, 0x31, 0x36, 0x41, 0x72, 0x65, 0x73,
		0x20, 0x31, 0x30, 0x4c, 0x4e, 0x58, 0x41, 0x31, 0x31, 0x36, 0x51, 0x43, 0x31, 0x36, 0x34, 0x41,
		0x72, 0x65, 0x73, 0x20, 0x31, 0x31, 0x4e, 0x58, 0x4d, 0x39, 0x30, 0x38, 0x48, 0x43, 0x50, 0x72,
		0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x39, 0x4e, 0x58, 0x30, 0x31, 0x30, 0x48, 0x49, 0x38, 0x47,
		0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x20, 0x48, 0x69, 0x4e, 0x58, 0x37,
		0x38, 0x35, 0x51, 0x43, 0x38, 0x47, 0x4e, 0x58, 0x4d, 0x39, 0x30, 0x30, 0x4d, 0x43, 0x38, 0x20,
		0x48, 0x44, 0x4e, 0x58, 0x4d, 0x37, 0x32, 0x36, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20,
		0x37, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x61, 0x62, 0x4e, 0x65, 0x78, 0x74, 0x62, 0x69, 0x74, 0x4e,
		0x6f, 0x61, 0x69, 0x6e, 0x4e, 0x4f, 0x41, 0x49, 0x4e, 0x4e, 0x6f, 0x62, 0x62, 0x79, 0x4e, 0x6f,
		0x62, 0x6c, 0x65, 0x78, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x36, 0x54, 0x41, 0x2d, 0x31, 0x30, 0x34,
		0x31, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x38, 0x20, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x63, 0x6f,
		0x38, 0x20, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x63, 0x6f, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x37,
		0x20, 0x70, 0x6c, 0x75, 0x73, 0x37, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x36, 0x2e, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x35, 0x2e, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x2e, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x20, 0x56, 0x20, 0x54, 0x65, 0x6c, 0x6c, 0x61, 0x4e, 0x6f,
		0x6b, 0x69, 0x61, 0x20, 0x38, 0x20, 0x56, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x38, 0x56, 0x20,
		0x35, 0x47, 0x20, 0x55, 0x57, 0x58, 0x2b, 0x4e, 0x31, 0x35, 0x32, 0x44, 0x4c, 0x43, 0x31, 0x30,
		0x30, 0x4e, 0x31, 0x35, 0x31, 0x44, 0x4c, 0x43, 0x32, 0x30, 0x30, 0x4e, 0x31, 0x35, 0x30, 0x44,
		0x4c, 0x47, 0x31, 0x30, 0x30, 0x4e, 0x31, 0x33, 0x37, 0x34, 0x44, 0x4c, 0x47, 0x33, 0x30, 0x30,
		0x20, 0x35, 0x47, 0x4e, 0x31, 0x35, 0x33, 0x30, 0x44, 0x4c, 0x47, 0x34, 0x30, 0x30, 0x20, 0x35,
		0x47, 0x58, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x52, 0x58, 0x2d, 0x35, 0x31, 0x20, 0x4e, 0x39,
		0x30, 0x30, 0x4e, 0x39, 0x30, 0x30, 0x41, 0x73, 0x68, 0x61, 0x20, 0x35, 0x30, 0x30, 0x35, 0x31,
		0x33, 0x30, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4e, 0x6f,
		0x6b, 0x69, 0x61, 0x35, 0x32, 0x33, 0x30, 0x4e, 0x75, 0x72, 0x6f, 0x6e, 0x4e, 0x6f, 0x6b, 0x69,
		0x61, 0x35, 0x32, 0x33, 0x33, 0x35, 0x32, 0x33, 0x33, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x35, 0x38,
		0x30, 0x30, 0x64, 0x2d, 0x31, 0x35, 0x38, 0x30, 0x30, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73,
		0x4d, 0x75, 0x73, 0x69, 0x63, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x36, 0x32, 0x31, 0x30, 0x4e, 0x61,
		0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72,
		0x53, 0x61, 0x70, 0x70, 0x68, 0x69, 0x72, 0x65, 0x20, 0x41, 0x72, 0x74, 0x65, 0x4e, 0x4f, 0x4b,
		0x49, 0x41, 0x2d, 0x52, 0x48, 0x2d, 0x31, 0x37, 0x32, 0x32, 0x38, 0x30, 0x4e, 0x4f, 0x4b, 0x49,
		0x41, 0x2d, 0x52, 0x48, 0x2d, 0x32, 0x37, 0x36, 0x32, 0x32, 0x35, 0x4e, 0x4f, 0x4b, 0x49, 0x41,
		0x2d, 0x52, 0x48, 0x2d, 0x33, 0x34, 0x36, 0x35, 0x38, 0x35, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d,
		0x52, 0x48, 0x2d, 0x34, 0x38, 0x33, 0x31, 0x30, 0x35, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d, 0x52,
		0x4d, 0x2d, 0x31, 0x31, 0x33, 0x32, 0x30, 0x35, 0x38, 0x30, 0x38, 0x20, 0x50, 0x75, 0x72, 0x65,
		0x56, 0x69, 0x65, 0x77, 0x24, 0x31, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x24, 0x31,
		0x20, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x41, 0x73, 0x68, 0x61, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x35, 0x32, 0x30, 0x54, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x32, 0x30,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x32, 0x36, 0x52, 0x4d, 0x2d, 0x38, 0x34, 0x36, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33,
		0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x35, 0x52, 0x4d, 0x2d, 0x31, 0x30, 0x32,
		0x37, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x36, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x37, 0x31, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x32, 0x30, 0x54, 0x52, 0x4d, 0x2d,
		0x38, 0x38, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69,
		0x61, 0x20, 0x37, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x33, 0x35, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x38, 0x30, 0x30, 0x43, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x30,
		0x30, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x38, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x38, 0x32, 0x30, 0x52, 0x4d, 0x2d, 0x39, 0x38, 0x34, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38,
		0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x30, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x39, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x32, 0x35, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x39, 0x32, 0x39, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e,
		0x52, 0x4d, 0x2d, 0x31, 0x30, 0x34, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x33, 0x30,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x31, 0x30, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x31, 0x35, 0x32, 0x30, 0x2e, 0x31, 0x54, 0x24, 0x31, 0x4d, 0x61, 0x65, 0x6d, 0x6f, 0x20, 0x52,
		0x58, 0x2d, 0x33, 0x34, 0x4e, 0x38, 0x30, 0x30, 0x4e, 0x6f, 0x6d, 0x69, 0x45, 0x76, 0x6f, 0x20,
		0x4d, 0x32, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x33, 0x45, 0x76, 0x6f,
		0x20, 0x4d, 0x31, 0x69, 0x35, 0x30, 0x36, 0x20, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x69, 0x35, 0x37,
		0x33, 0x30, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x2d,
		0x58, 0x49, 0x72, 0x6f, 0x6e, 0x2d, 0x58, 0x49, 0x72, 0x6f, 0x6e, 0x2d, 0x58, 0x31, 0x49, 0x72,
		0x6f, 0x6e, 0x2d, 0x4d, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x34, 0x45, 0x76, 0x6f, 0x20, 0x58, 0x32,
		0x45, 0x76, 0x6f, 0x20, 0x58, 0x45, 0x76, 0x6f, 0x20, 0x58, 0x31, 0x45, 0x76, 0x6f, 0x20, 0x5a,
		0x42, 0x65, 0x61, 0x74, 0x20, 0x4d, 0x42, 0x65, 0x61, 0x74, 0x20, 0x4d, 0x31, 0x53, 0x70, 0x61,
		0x63, 0x65, 0x20, 0x58, 0x32, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x53, 0x70, 0x61, 0x63,
		0x65, 0x20, 0x58, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x20, 0x58, 0x31, 0x4a, 0x75, 0x6d, 0x70, 0x43, 0x31, 0x30, 0x31, 0x30, 0x31,
		0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x32, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x32, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x33, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x33, 0x47, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x20, 0x33, 0x47, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34,
		0x20, 0x4c, 0x54, 0x45, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x4c, 0x54, 0x45, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x50, 0x72,
		0x6f, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x32, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x33, 0x20,
		0x4c, 0x54, 0x45, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x33, 0x20, 0x33, 0x47, 0x43, 0x6f, 0x72,
		0x73, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x33, 0x47, 0x43, 0x6f, 0x72,
		0x73, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x34, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x33, 0x20, 0x33,
		0x47, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x32, 0x20, 0x33, 0x47, 0x4c, 0x69, 0x62, 0x72, 0x61,
		0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x34, 0x20, 0x33, 0x47,
		0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x6d, 0x75, 0x54,
		0x31, 0x38, 0x53, 0x33, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x33, 0x30, 0x4e, 0x6f, 0x6f,
		0x6e, 0x74, 0x65, 0x63, 0x4e, 0x6f, 0x6f, 0x6e, 0x74, 0x65, 0x63, 0x20, 0x4e, 0x6f, 0x72, 0x74,
		0x68, 0x54, 0x65, 0x63, 0x68, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30,
		0x2e, 0x30, 0x22, 0x4e, 0x6f, 0x73, 0x4e, 0x6f, 0x76, 0x75, 0x20, 0x49, 0x49, 0x49, 0x4e, 0x6f,
		0x76, 0x75, 0x20, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x75, 0x4e, 0x65, 0x76, 0x61, 0x20, 0x38, 0x30,
		0x52, 0x6f, 0x79, 0x61, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x20, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x4e, 0x6f, 0x75, 0x73, 0x4e, 0x53, 0x35, 0x35, 0x31, 0x31, 0x4e, 0x6f, 0x76, 0x65, 0x78,
		0x4e, 0x6f, 0x76, 0x65, 0x79, 0x4e, 0x75, 0x41, 0x6e, 0x73, 0x4e, 0x45, 0x4f, 0x20, 0x52, 0x65,
		0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x4e, 0x75, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75,
		0x62, 0x69, 0x61, 0x4e, 0x58, 0x37, 0x31, 0x31, 0x4a, 0x5a, 0x35, 0x30, 0x4e, 0x58, 0x37, 0x31,
		0x32, 0x4a, 0x5a, 0x35, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x58, 0x36, 0x36, 0x37,
		0x4a, 0x5a, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x30, 0x31, 0x4a, 0x5a, 0x34,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x30, 0x32, 0x4a, 0x5a, 0x34, 0x30, 0x73, 0x20,
		0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x30, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x32, 0x39, 0x4a, 0x52, 0x65,
		0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37,
		0x30, 0x39, 0x53, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x37, 0x53, 0x20,
		0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x37, 0x4e, 0x58,
		0x36, 0x36, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x36, 0x4e,
		0x58, 0x36, 0x36, 0x36, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x36,
		0x52, 0x4e, 0x58, 0x36, 0x31, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63,
		0x20, 0x4d, 0x61, 0x72, 0x73, 0x4e, 0x58, 0x36, 0x32, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x20, 0x33, 0x5a, 0x35, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x5a, 0x35, 0x53,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35, 0x30, 0x33, 0x41, 0x5a, 0x35, 0x53, 0x4e, 0x58,
		0x35, 0x30, 0x36, 0x4a, 0x5a, 0x37, 0x4e, 0x58, 0x35, 0x30, 0x37, 0x4a, 0x5a, 0x37, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35, 0x30, 0x35, 0x4a, 0x5a, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x4e,
		0x58, 0x35, 0x30, 0x38, 0x4a, 0x5a, 0x39, 0x5a, 0x39, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x5a, 0x39,
		0x20, 0x4d, 0x61, 0x78, 0x4e, 0x58, 0x35, 0x31, 0x32, 0x4a, 0x5a, 0x39, 0x20, 0x4d, 0x61, 0x78,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x4e, 0x58, 0x35, 0x33, 0x31, 0x4a, 0x5a, 0x31, 0x31, 0x4e, 0x58,
		0x35, 0x32, 0x33, 0x4a, 0x5f, 0x56, 0x31, 0x5a, 0x31, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x31,
		0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x5a, 0x31, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x4e, 0x58, 0x36, 0x30, 0x36, 0x4a, 0x5a, 0x31, 0x38, 0x4e, 0x58, 0x36, 0x31, 0x36, 0x4a, 0x5a,
		0x31, 0x38, 0x53, 0x4e, 0x58, 0x36, 0x31, 0x31, 0x4a, 0x5a, 0x31, 0x38, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x4e, 0x58, 0x35, 0x35, 0x31, 0x4a, 0x4e, 0x58, 0x35, 0x36, 0x33, 0x4a, 0x5a, 0x31, 0x37,
		0x5a, 0x31, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35, 0x38, 0x39, 0x4a, 0x5a, 0x31,
		0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x4e, 0x58, 0x35, 0x39, 0x31, 0x4a, 0x5a, 0x31,
		0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x58, 0x35, 0x39, 0x35, 0x4a, 0x5a, 0x31, 0x37, 0x53,
		0x4e, 0x58, 0x36, 0x31, 0x32, 0x4a, 0x56, 0x31, 0x38, 0x4e, 0x58, 0x36, 0x32, 0x37, 0x4a, 0x5a,
		0x32, 0x30, 0x4e, 0x58, 0x35, 0x31, 0x33, 0x4a, 0x4d, 0x79, 0x20, 0x50, 0x72, 0x61, 0x67, 0x75,
		0x65, 0x4e, 0x58, 0x36, 0x30, 0x31, 0x4a, 0x4e, 0x58, 0x36, 0x30, 0x39, 0x4a, 0x52, 0x65, 0x64,
		0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4e, 0x58, 0x36, 0x35, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x47, 0x4e, 0x58, 0x36, 0x35, 0x31, 0x4a, 0x4e, 0x58,
		0x35, 0x37, 0x33, 0x4a, 0x4d, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x58, 0x39, 0x30, 0x37,
		0x4a, 0x4d, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4e, 0x58, 0x35, 0x34, 0x31, 0x4a, 0x4e, 0x31,
		0x4e, 0x58, 0x35, 0x39, 0x37, 0x4a, 0x4e, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x58, 0x35,
		0x37, 0x35, 0x4a, 0x4e, 0x32, 0x4e, 0x33, 0x4e, 0x75, 0x62, 0x69, 0x61, 0x20, 0x38, 0x30, 0x31,
		0x31, 0x4e, 0x38, 0x30, 0x4e, 0x75, 0x76, 0x6f, 0x4e, 0x44, 0x34, 0x35, 0x4e, 0x76, 0x69, 0x64,
		0x69, 0x61, 0x54, 0x65, 0x67, 0x72, 0x61, 0x4e, 0x6f, 0x74, 0x65, 0x2d, 0x50, 0x31, 0x36, 0x34,
		0x30, 0x54, 0x65, 0x67, 0x72, 0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x31, 0x36, 0x34,
		0x30, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x48,
		0x49, 0x45, 0x4c, 0x44, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x4e,
		0x56, 0x49, 0x44, 0x49, 0x41, 0x5f, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x50, 0x52, 0x4f,
		0x5f, 0x32, 0x30, 0x31, 0x39, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x54, 0x56, 0x20, 0x50,
		0x72, 0x6f, 0x4e, 0x56, 0x49, 0x44, 0x49, 0x41, 0x20, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x53,
		0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x54, 0x56, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x53, 0x48,
		0x49, 0x45, 0x4c, 0x44, 0x20, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x2b, 0x41,
		0x69, 0x72, 0x33, 0x36, 0x30, 0x20, 0x48, 0x44, 0x20, 0x32, 0x2e, 0x30, 0x33, 0x36, 0x30, 0x20,
		0x48, 0x44, 0x33, 0x36, 0x30, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x32, 0x2e, 0x30, 0x33, 0x36, 0x30, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x33, 0x36, 0x30, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61,
		0x6d, 0x20, 0x48, 0x44, 0x54, 0x56, 0x46, 0x61, 0x62, 0x20, 0x47, 0x6f, 0x4f, 0x32, 0x4f, 0x41,
		0x53, 0x59, 0x53, 0x4f, 0x49, 0x4e, 0x4f, 0x4d, 0x4f, 0x4b, 0x53, 0x49, 0x4f, 0x4b, 0x57, 0x55,
		0x53, 0x49, 0x47, 0x4d, 0x41, 0x50, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x4c, 0x54, 0x4f,
		0x4f, 0x4d, 0x49, 0x58, 0x58, 0x36, 0x30, 0x30, 0x20, 0x4e, 0x46, 0x43, 0x4f, 0x4e, 0x4e, 0x4f,
		0x4e, 0x59, 0x58, 0x20, 0x42, 0x4f, 0x4f, 0x58, 0x4e, 0x6f, 0x76, 0x61, 0x41, 0x69, 0x72, 0x43,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x4d, 0x43, 0x5f, 0x4e, 0x6f, 0x76,
		0x61, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x69, 0x72, 0x32, 0x50, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x41, 0x69, 0x72, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65,
		0x41, 0x69, 0x72, 0x32, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x41, 0x69, 0x72, 0x20, 0x32, 0x4e, 0x6f,
		0x76, 0x61, 0x33, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33, 0x20, 0x43,
		0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x6f, 0x6b, 0x65, 0x32, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x6f,
		0x6b, 0x65, 0x20, 0x32, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4b, 0x6f, 0x6e, 0x20, 0x54, 0x69,
		0x6b, 0x69, 0x20, 0x24, 0x31, 0x4c, 0x6f, 0x6d, 0x6f, 0x6e, 0x6f, 0x73, 0x6f, 0x76, 0x46, 0x61,
		0x75, 0x73, 0x74, 0x20, 0x24, 0x31, 0x44, 0x61, 0x72, 0x77, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x4d,
		0x43, 0x5f, 0x47, 0x41, 0x4d, 0x41, 0x34, 0x47, 0x61, 0x6d, 0x61, 0x20, 0x34, 0x4d, 0x43, 0x5f,
		0x43, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x34, 0x4d, 0x6f, 0x6e, 0x74, 0x65, 0x20, 0x43, 0x72, 0x69,
		0x73, 0x74, 0x6f, 0x20, 0x34, 0x4c, 0x49, 0x56, 0x49, 0x4e, 0x47, 0x53, 0x54, 0x4f, 0x4e, 0x45,
		0x32, 0x4c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x20, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x4f,
		0x50, 0x50, 0x4f, 0x41, 0x31, 0x31, 0x41, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x31, 0x31, 0x78,
		0x41, 0x31, 0x32, 0x41, 0x31, 0x35, 0x73, 0x41, 0x31, 0x36, 0x73, 0x43, 0x50, 0x48, 0x32, 0x34,
		0x32, 0x31, 0x41, 0x31, 0x36, 0x65, 0x43, 0x50, 0x48, 0x32, 0x33, 0x34, 0x39, 0x41, 0x31, 0x36,
		0x6b, 0x43, 0x50, 0x48, 0x32, 0x34, 0x37, 0x37, 0x41, 0x31, 0x37, 0x43, 0x50, 0x48, 0x32, 0x34,
		0x37, 0x31, 0x41, 0x31, 0x37, 0x6b, 0x41, 0x31, 0x35, 0x41, 0x31, 0x6b, 0x41, 0x31, 0x31, 0x6b,
		0x41, 0x31, 0x73, 0x41, 0x31, 0x36, 0x41, 0x33, 0x37, 0x66, 0x24, 0x31, 0x41, 0x33, 0x37, 0x66,
		0x41, 0x33, 0x39, 0x41, 0x33, 0x36, 0x41, 0x33, 0x31, 0x41, 0x33, 0x33, 0x41, 0x35, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x35, 0x33, 0x20, 0x35, 0x47, 0x41, 0x33, 0x32, 0x41, 0x33,
		0x35, 0x41, 0x35, 0x32, 0x41, 0x35, 0x33, 0x41, 0x35, 0x33, 0x73, 0x41, 0x35, 0x33, 0x73, 0x20,
		0x35, 0x47, 0x41, 0x35, 0x34, 0x20, 0x35, 0x47, 0x41, 0x35, 0x34, 0x41, 0x35, 0x34, 0x73, 0x41,
		0x35, 0x35, 0x20, 0x35, 0x47, 0x41, 0x35, 0x35, 0x41, 0x35, 0x35, 0x73, 0x20, 0x35, 0x47, 0x50,
		0x46, 0x56, 0x4d, 0x31, 0x30, 0x41, 0x35, 0x36, 0x20, 0x35, 0x47, 0x41, 0x35, 0x37, 0x41, 0x35,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x50, 0x48, 0x4a, 0x31, 0x31, 0x30, 0x41, 0x35,
		0x38, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x35, 0x37, 0x37, 0x41, 0x35, 0x38, 0x50, 0x46,
		0x54, 0x4d, 0x31, 0x30, 0x41, 0x39, 0x37, 0x50, 0x48, 0x41, 0x31, 0x32, 0x30, 0x41, 0x39, 0x36,
		0x41, 0x35, 0x53, 0x41, 0x37, 0x31, 0x41, 0x37, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x41, 0x37, 0x33, 0x20, 0x35, 0x47, 0x41, 0x37, 0x34, 0x41, 0x37, 0x34, 0x20, 0x35, 0x47, 0x41,
		0x37, 0x32, 0x6e, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x33, 0x37, 0x35, 0x41, 0x37, 0x36,
		0x41, 0x37, 0x37, 0x41, 0x37, 0x37, 0x20, 0x35, 0x47, 0x41, 0x37, 0x38, 0x20, 0x35, 0x47, 0x41,
		0x37, 0x38, 0x41, 0x37, 0x39, 0x41, 0x37, 0x37, 0x73, 0x41, 0x37, 0x6e, 0x41, 0x37, 0x78, 0x41,
		0x38, 0x33, 0x41, 0x38, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x41, 0x39, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x39, 0x31, 0x41, 0x39, 0x32, 0x41, 0x39, 0x32, 0x73, 0x41,
		0x39, 0x33, 0x41, 0x39, 0x33, 0x73, 0x50, 0x46, 0x55, 0x4d, 0x31, 0x30, 0x41, 0x39, 0x36, 0x20,
		0x35, 0x47, 0x41, 0x39, 0x34, 0x41, 0x39, 0x35, 0x41, 0x39, 0x78, 0x41, 0x58, 0x35, 0x41, 0x58,
		0x35, 0x73, 0x41, 0x58, 0x37, 0x43, 0x50, 0x48, 0x32, 0x33, 0x34, 0x31, 0x46, 0x32, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x46, 0x32, 0x31, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x43, 0x50, 0x48, 0x32, 0x35, 0x32, 0x37, 0x46, 0x32, 0x33, 0x20, 0x35, 0x47, 0x46,
		0x31, 0x31, 0x46, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x37, 0x46, 0x31, 0x37, 0x20,
		0x50, 0x72, 0x6f, 0x46, 0x31, 0x73, 0x46, 0x33, 0x46, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46,
		0x35, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x46, 0x37, 0x46, 0x39, 0x46, 0x39, 0x20, 0x50, 0x72,
		0x6f, 0x46, 0x31, 0x39, 0x73, 0x46, 0x31, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x46, 0x69,
		0x6e, 0x64, 0x20, 0x35, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x37, 0x46,
		0x69, 0x6e, 0x64, 0x20, 0x37, 0x61, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4e, 0x20, 0x35, 0x47, 0x46,
		0x69, 0x6e, 0x64, 0x20, 0x4e, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4e, 0x32, 0x46, 0x69, 0x6e, 0x64,
		0x20, 0x4e, 0x32, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x43, 0x6c, 0x6f,
		0x76, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x47, 0x75, 0x69, 0x74, 0x61, 0x72, 0x46, 0x69,
		0x6e, 0x64, 0x20, 0x4d, 0x65, 0x6c, 0x6f, 0x64, 0x79, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4d, 0x75,
		0x73, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x57, 0x61, 0x79, 0x20, 0x53, 0x55, 0x6c, 0x69, 0x6b,
		0x65, 0x20, 0x32, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x20,
		0x4c, 0x61, 0x6d, 0x62, 0x6f, 0x72, 0x67, 0x68, 0x69, 0x6e, 0x69, 0x46, 0x69, 0x6e, 0x64, 0x20,
		0x58, 0x32, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x69,
		0x6e, 0x64, 0x20, 0x58, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x33,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x20, 0x4e, 0x65, 0x6f, 0x46, 0x69, 0x6e, 0x64, 0x20,
		0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x35, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x45, 0x4d, 0x31, 0x30, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58,
		0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x46, 0x4d, 0x31, 0x30, 0x46, 0x69, 0x6e, 0x64, 0x20,
		0x58, 0x36, 0x4a, 0x6f, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x37, 0x78, 0x4b, 0x39, 0x78,
		0x4b, 0x31, 0x30, 0x78, 0x4b, 0x39, 0x73, 0x4b, 0x31, 0x30, 0x20, 0x35, 0x47, 0x4b, 0x31, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4e, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x65,
		0x6f, 0x20, 0x33, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x4e, 0x65, 0x6f,
		0x20, 0x37, 0x73, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x52, 0x31, 0x31, 0x52, 0x31, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x52, 0x31, 0x4b, 0x52, 0x31, 0x78, 0x52, 0x31, 0x31, 0x73, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x52, 0x31, 0x31, 0x73, 0x52, 0x31, 0x35, 0x52, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x52, 0x31, 0x35, 0x78, 0x52, 0x31, 0x37, 0x52, 0x58, 0x31, 0x37, 0x4e, 0x65, 0x6f, 0x52, 0x58,
		0x31, 0x37, 0x20, 0x4e, 0x65, 0x6f, 0x52, 0x31, 0x35, 0x20, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20,
		0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x31, 0x35, 0x20, 0x4e, 0x65, 0x6f, 0x52, 0x31, 0x37,
		0x20, 0x4e, 0x65, 0x6f, 0x52, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x31, 0x4c, 0x52, 0x31,
		0x53, 0x52, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x37, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x52, 0x37, 0x73, 0x52, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x37, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x46, 0x52, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x39, 0x73, 0x52, 0x39, 0x73,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x6e, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x41, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x58, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x50, 0x43, 0x43, 0x54,
		0x30, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x58, 0x43, 0x50, 0x48, 0x32, 0x35, 0x33,
		0x31, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x32, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x32, 0x46, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x32, 0x5a, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x33, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x41, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x33, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34,
		0x20, 0x34, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x34, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47,
		0x20, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x34, 0x5a, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x46, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x35, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x41, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x4b, 0x52, 0x65, 0x6e, 0x6f, 0x35, 0x20, 0x4b, 0x20, 0x35,
		0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x4b, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x35, 0x46, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x5a, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x47, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x36, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20, 0x5a, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x43, 0x50, 0x48, 0x32,
		0x33, 0x34, 0x33, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x5a, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37,
		0x41, 0x50, 0x46, 0x43, 0x4d, 0x30, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x20, 0x53, 0x45,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x38,
		0x20, 0x50, 0x72, 0x6f, 0x50, 0x46, 0x5a, 0x4d, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x38,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x43, 0x50, 0x48, 0x32, 0x34, 0x35, 0x37, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x38, 0x20, 0x5a, 0x50, 0x47, 0x42, 0x4d, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x38,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x38, 0x54, 0x50, 0x48, 0x4d, 0x31, 0x31, 0x30, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x39, 0x50, 0x47, 0x57, 0x31, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x2b, 0x50, 0x47, 0x58, 0x31, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x39,
		0x20, 0x50, 0x72, 0x6f, 0x4b, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4b, 0x39, 0x20,
		0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x41, 0x63, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x41,
		0x63, 0x65, 0x20, 0x32, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x4b, 0x33, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x5a, 0x41, 0x35, 0x39, 0x73, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x4f, 0x50, 0x44, 0x32,
		0x32, 0x30, 0x31, 0x50, 0x61, 0x64, 0x20, 0x32, 0x4f, 0x50, 0x44, 0x32, 0x31, 0x30, 0x31, 0x50,
		0x61, 0x64, 0x20, 0x57, 0x69, 0x46, 0x69, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x36, 0x6d,
		0x6d, 0x4f, 0x57, 0x31, 0x39, 0x57, 0x32, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x31, 0x6d,
		0x6d, 0x4f, 0x57, 0x32, 0x30, 0x57, 0x31, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x32, 0x20, 0x34,
		0x36, 0x6d, 0x6d, 0x4e, 0x31, 0x54, 0x4f, 0x53, 0x43, 0x41, 0x4c, 0x53, 0x36, 0x30, 0x50, 0x72,
		0x6f, 0x53, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x4f, 0x54,
		0x54, 0x4f, 0x4f, 0x55, 0x4a, 0x49, 0x41, 0x32, 0x30, 0x31, 0x38, 0x2d, 0x53, 0x31, 0x30, 0x4d,
		0x41, 0x58, 0x53, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x32, 0x30, 0x53, 0x32, 0x37, 0x20,
		0x50, 0x4c, 0x55, 0x53, 0x53, 0x32, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x59, 0x53, 0x49,
		0x4e, 0x4f, 0x61, 0x6c, 0x65, 0x41, 0x70, 0x65, 0x78, 0x20, 0x24, 0x31, 0x4f, 0x61, 0x6e, 0x67,
		0x63, 0x63, 0x4f, 0x62, 0x61, 0x62, 0x6f, 0x78, 0x4f, 0x42, 0x41, 0x53, 0x4d, 0x41, 0x52, 0x54,
		0x5f, 0x33, 0x4f, 0x62, 0x65, 0x72, 0x4f, 0x62, 0x69, 0x53, 0x4a, 0x24, 0x31, 0x2e, 0x24, 0x32,
		0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x63, 0x6f, 0x6e, 0x50, 0x79, 0x74,
		0x68, 0x6f, 0x6e, 0x46, 0x6f, 0x78, 0x57, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x65, 0x4c,
		0x65, 0x6f, 0x70, 0x61, 0x72, 0x64, 0x42, 0x6f, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6f,
		0x61, 0x50, 0x65, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x4f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x43,
		0x72, 0x61, 0x6e, 0x65, 0x48, 0x6f, 0x72, 0x6e, 0x62, 0x69, 0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x69,
		0x67, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x64, 0x6f, 0x74, 0x70, 0x61, 0x64, 0x44, 0x72, 0x61, 0x67,
		0x6f, 0x6e, 0x20, 0x46, 0x72, 0x75, 0x69, 0x74, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x56, 0x24,
		0x31, 0x50, 0x6f, 0x6d, 0x65, 0x6c, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x2b, 0x4f, 0x64, 0x79, 0x73,
		0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x48, 0x44, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x58, 0x65,
		0x6c, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x50, 0x48, 0x4f, 0x4e, 0x45,
		0x54, 0x41, 0x42, 0x33, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74,
		0x61, 0x62, 0x20, 0x33, 0x54, 0x48, 0x41, 0x4e, 0x4f, 0x53, 0x5f, 0x31, 0x30, 0x54, 0x68, 0x61,
		0x6e, 0x6f, 0x73, 0x20, 0x31, 0x30, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x4e, 0x45, 0x58, 0x54,
		0x5f, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f,
		0x20, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47,
		0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x37,
		0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x61,
		0x62, 0x20, 0x37, 0x20, 0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30, 0x45, 0x58, 0x54,
		0x52, 0x45, 0x4d, 0x45, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x58, 0x74, 0x72,
		0x65, 0x6d, 0x65, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f,
		0x33, 0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x5f, 0x50, 0x4c, 0x55,
		0x53, 0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x31, 0x30, 0x5f,
		0x48, 0x44, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x58, 0x45, 0x4c,
		0x49, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45, 0x58, 0x65, 0x6c,
		0x69, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x4c, 0x45,
		0x4d, 0x45, 0x4e, 0x54, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x45, 0x6c,
		0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47,
		0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x38, 0x50, 0x4c, 0x55, 0x53, 0x43, 0x6f, 0x6e, 0x6e,
		0x65, 0x63, 0x74, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43,
		0x54, 0x37, 0x50, 0x52, 0x4f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x41, 0x56, 0x45, 0x4e, 0x5f, 0x58, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x5f, 0x4c,
		0x54, 0x45, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x20, 0x48, 0x44, 0x20, 0x4c,
		0x54, 0x45, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x5f, 0x54, 0x31, 0x30, 0x5f, 0x70, 0x72, 0x6f, 0x4d,
		0x61, 0x76, 0x65, 0x6e, 0x20, 0x54, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x41, 0x56, 0x45,
		0x4e, 0x5f, 0x58, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x58, 0x31,
		0x30, 0x20, 0x48, 0x44, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x4d, 0x41, 0x56, 0x45,
		0x4e, 0x5f, 0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x37, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x52, 0x61, 0x70, 0x69, 0x64, 0x20, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x52,
		0x61, 0x70, 0x69, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x41, 0x4f, 0x5f, 0x58,
		0x31, 0x30, 0x54, 0x61, 0x6f, 0x20, 0x58, 0x31, 0x30, 0x53, 0x50, 0x41, 0x43, 0x45, 0x31, 0x30,
		0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x31, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x4f, 0x4e,
		0x45, 0x31, 0x30, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x53,
		0x50, 0x41, 0x43, 0x45, 0x31, 0x30, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x33, 0x47, 0x53, 0x70, 0x61,
		0x63, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x54, 0x68, 0x6f, 0x72,
		0x20, 0x31, 0x30, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x54, 0x38, 0x50, 0x72, 0x6f, 0x4a, 0x75,
		0x6e, 0x69, 0x6f, 0x72, 0x20, 0x54, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x55, 0x4e, 0x49, 0x4f,
		0x52, 0x5f, 0x38, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x38, 0x20,
		0x50, 0x72, 0x6f, 0x41, 0x44, 0x4d, 0x38, 0x31, 0x36, 0x48, 0x43, 0x4e, 0x65, 0x6f, 0x20, 0x58,
		0x45, 0x4f, 0x53, 0x31, 0x30, 0x45, 0x4f, 0x53, 0x20, 0x31, 0x30, 0x50, 0x41, 0x43, 0x45, 0x5f,
		0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x56, 0x32, 0x50, 0x61, 0x63, 0x65, 0x20, 0x31, 0x30,
		0x20, 0x4c, 0x54, 0x45, 0x20, 0x56, 0x32, 0x50, 0x61, 0x63, 0x65, 0x20, 0x31, 0x30, 0x41, 0x45,
		0x4f, 0x4e, 0x41, 0x65, 0x6f, 0x6e, 0x46, 0x41, 0x4c, 0x43, 0x4f, 0x4e, 0x5f, 0x31, 0x30, 0x5f,
		0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x20, 0x31, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x46, 0x55, 0x53, 0x49, 0x4f, 0x4e, 0x46, 0x75,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x37, 0x55, 0x6e, 0x6f, 0x20, 0x58, 0x24, 0x31, 0x41, 0x44, 0x4d,
		0x38, 0x30, 0x30, 0x30, 0x4b, 0x50, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x54, 0x69, 0x74, 0x61, 0x6e,
		0x5f, 0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x31, 0x30, 0x20,
		0x4c, 0x54, 0x45, 0x50, 0x59, 0x52, 0x4f, 0x5f, 0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33,
		0x47, 0x50, 0x79, 0x72, 0x6f, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4e,
		0x4f, 0x56, 0x41, 0x5f, 0x58, 0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x58, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4f, 0x44, 0x59,
		0x53, 0x5f, 0x4e, 0x4f, 0x56, 0x41, 0x5f, 0x58, 0x37, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x58, 0x37,
		0x54, 0x68, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4e,
		0x4f, 0x54, 0x4f, 0x53, 0x70, 0x6c, 0x75, 0x73, 0x33, 0x47, 0x4e, 0x6f, 0x74, 0x6f, 0x73, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4d, 0x41, 0x56, 0x45, 0x4e, 0x5f, 0x47, 0x31, 0x30,
		0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x47, 0x31, 0x30, 0x50, 0x45, 0x44, 0x49, 0x5f, 0x50, 0x4c,
		0x55, 0x53, 0x5f, 0x57, 0x50, 0x65, 0x64, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x57, 0x4e,
		0x6f, 0x74, 0x65, 0x54, 0x61, 0x62, 0x5f, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4f, 0x41, 0x4c, 0x5f, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55,
		0x53, 0x5f, 0x33, 0x47, 0x47, 0x6f, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x33, 0x47, 0x49, 0x65, 0x6f, 0x73, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x57, 0x49, 0x65,
		0x6f, 0x73, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x31, 0x30, 0x49, 0x65, 0x6f, 0x73, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x45, 0x52, 0x4f, 0x4e, 0x4e, 0x65, 0x72, 0x6f,
		0x6e, 0x4e, 0x65, 0x6f, 0x20, 0x36, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x44, 0x45, 0x5f,
		0x58, 0x35, 0x35, 0x53, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x35, 0x35, 0x49, 0x65, 0x6f, 0x73,
		0x20, 0x24, 0x31, 0x4e, 0x6f, 0x6f, 0x6e, 0x4e, 0x6f, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x4f,
		0x6b, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4f, 0x6b, 0x61, 0x70, 0x69, 0x61,
		0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x24, 0x31, 0x58, 0x31, 0x4d, 0x69,
		0x72, 0x61, 0x67, 0x65, 0x4f, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x4b, 0x2d, 0x73, 0x6d, 0x61, 0x72,
		0x74, 0x31, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x31, 0x31, 0x4f, 0x6c, 0x61, 0x78, 0x4f,
		0x6c, 0x61, 0x78, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x31, 0x32, 0x4f, 0x6c, 0x6b, 0x79,
		0x61, 0x4f, 0x6c, 0x6c, 0x65, 0x65, 0x30, 0x30, 0x38, 0x20, 0x54, 0x77, 0x6f, 0x41, 0x4f, 0x6c,
		0x79, 0x6d, 0x70, 0x69, 0x61, 0x54, 0x72, 0x65, 0x6b, 0x4f, 0x6e, 0x64, 0x61, 0x54, 0x39, 0x20,
		0x53, 0x4d, 0x49, 0x44, 0x56, 0x38, 0x32, 0x30, 0x57, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f,
		0x53, 0x56, 0x38, 0x39, 0x31, 0x57, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x38,
		0x39, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x33,
		0x47, 0x20, 0x41, 0x69, 0x72, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x31, 0x31,
		0x36, 0x77, 0x2d, 0x44, 0x75, 0x61, 0x6c, 0x4f, 0x53, 0x56, 0x31, 0x31, 0x36, 0x77, 0x20, 0x33,
		0x47, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x41, 0x69,
		0x72, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x41, 0x69,
		0x72, 0x20, 0x43, 0x48, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x43, 0x48, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39,
		0x31, 0x39, 0x20, 0x34, 0x47, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x38, 0x56,
		0x39, 0x31, 0x39, 0x20, 0x34, 0x47, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20,
		0x38, 0x56, 0x39, 0x37, 0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x34, 0x56, 0x39, 0x31, 0x39, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x20, 0x34, 0x56, 0x39, 0x38, 0x39, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x38, 0x56, 0x39, 0x38, 0x39, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x20, 0x38, 0x4f, 0x4e, 0x44, 0x41, 0x20, 0x56, 0x39, 0x38, 0x39, 0x56, 0x39, 0x38, 0x39,
		0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x38, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x32, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x6f, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x31, 0x30, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x20, 0x34, 0x47, 0x56, 0x38, 0x30, 0x20, 0x53, 0x45, 0x6f, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x32, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x6f, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x32, 0x30, 0x20, 0x53, 0x45, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x53,
		0x45, 0x56, 0x31, 0x30, 0x20, 0x34, 0x47, 0x4f, 0x6e, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x58,
		0x2d, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x49, 0x49, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x2d, 0x4d,
		0x75, 0x73, 0x69, 0x63, 0x20, 0x49, 0x49, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x2d, 0x4d, 0x75, 0x73,
		0x69, 0x63, 0x20, 0x49, 0x49, 0x49, 0x58, 0x2d, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x24, 0x31,
		0x4f, 0x6e, 0x65, 0x4c, 0x65, 0x72, 0x6e, 0x4f, 0x6e, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x31,
		0x31, 0x31, 0x52, 0x20, 0x35, 0x47, 0x41, 0x63, 0x65, 0x20, 0x32, 0x41, 0x63, 0x65, 0x20, 0x32,
		0x56, 0x41, 0x63, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x63, 0x65, 0x20, 0x52, 0x61, 0x63, 0x69,
		0x6e, 0x67, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x35,
		0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x32, 0x54, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20,
		0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43, 0x50,
		0x48, 0x32, 0x34, 0x39, 0x33, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x33, 0x20, 0x35, 0x47, 0x4e, 0x6f,
		0x72, 0x64, 0x20, 0x4e, 0x31, 0x30, 0x30, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x32, 0x30, 0x30,
		0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x32, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f,
		0x72, 0x64, 0x20, 0x4e, 0x32, 0x30, 0x20, 0x53, 0x45, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31,
		0x30, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64,
		0x20, 0x4e, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x32, 0x20,
		0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x32, 0x38, 0x20, 0x50, 0x72, 0x6f,
		0x38, 0x54, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x38, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x39,
		0x52, 0x54, 0x20, 0x35, 0x47, 0x39, 0x52, 0x31, 0x30, 0x52, 0x31, 0x30, 0x52, 0x20, 0x35, 0x47,
		0x31, 0x30, 0x54, 0x20, 0x35, 0x47, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x45, 0x78, 0x74,
		0x72, 0x65, 0x6d, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x37, 0x20, 0x50, 0x72,
		0x6f, 0x37, 0x54, 0x37, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x37, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x38, 0x54, 0x2b, 0x20, 0x35, 0x47, 0x33, 0x54, 0x35, 0x54, 0x36, 0x54, 0x4f, 0x6e,
		0x69, 0x78, 0x38, 0x22, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x33, 0x47, 0x4f, 0x6e,
		0x6b, 0x79, 0x6f, 0x4f, 0x6f, 0x6b, 0x65, 0x65, 0x4f, 0x6f, 0x6b, 0x65, 0x65, 0x4f, 0x6e, 0x65,
		0x4f, 0x70, 0x65, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x45, 0x61, 0x73, 0x79, 0x5f, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x5f, 0x32, 0x45, 0x61, 0x73, 0x79, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x32, 0x4f, 0x70, 0x65, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x4a, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4a, 0x58, 0x4f, 0x70, 0x65, 0x6c, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x31, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x58, 0x31, 0x20, 0x34, 0x47, 0x4f, 0x70, 0x65, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58,
		0x36, 0x4f, 0x70, 0x65, 0x6e, 0x62, 0x6f, 0x78, 0x41, 0x53, 0x5f, 0x34, 0x4b, 0x5f, 0x43, 0x49,
		0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x43,
		0x49, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x53, 0x5f, 0x34, 0x4b, 0x5f,
		0x43, 0x49, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x43, 0x49, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x43, 0x49, 0x20, 0x50, 0x72, 0x6f,
		0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x24, 0x31, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x53, 0x31, 0x5f, 0x48, 0x44, 0x41, 0x53, 0x31, 0x20, 0x48, 0x44, 0x41, 0x53,
		0x20, 0x34, 0x4b, 0x4f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x5f, 0x34,
		0x5f, 0x30, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x20, 0x34, 0x2e, 0x30, 0x42, 0x65, 0x65, 0x74, 0x61,
		0x5f, 0x34, 0x5f, 0x30, 0x42, 0x65, 0x65, 0x74, 0x61, 0x20, 0x34, 0x2e, 0x30, 0x41, 0x63, 0x74,
		0x69, 0x76, 0x65, 0x20, 0x35, 0x2e, 0x30, 0x4f, 0x70, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x75, 0x73,
		0x61, 0x69, 0x20, 0x24, 0x31, 0x4f, 0x70, 0x74, 0x6f, 0x6d, 0x61, 0x4f, 0x70, 0x74, 0x6f, 0x6d,
		0x61, 0x2d, 0x55, 0x48, 0x44, 0x55, 0x48, 0x44, 0x35, 0x35, 0x4f, 0x72, 0x61, 0x6e, 0x67, 0x65,
		0x53, 0x43, 0x2f, 0x49, 0x48, 0x44, 0x39, 0x32, 0x4c, 0x69, 0x76, 0x65, 0x62, 0x6f, 0x78, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x4e, 0x6f, 0x6c, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x6f, 0x6c,
		0x61, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4e, 0x6f, 0x6c, 0x61, 0x20, 0x66, 0x75, 0x6e, 0x4e, 0x6f,
		0x6c, 0x61, 0x20, 0x46, 0x75, 0x6e, 0x4e, 0x65, 0x76, 0x61, 0x20, 0x7a, 0x65, 0x6e, 0x4e, 0x65,
		0x76, 0x61, 0x20, 0x5a, 0x65, 0x6e, 0x4e, 0x65, 0x76, 0x61, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74,
		0x4e, 0x65, 0x76, 0x61, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x72, 0x61, 0x20, 0x32,
		0x53, 0x65, 0x67, 0x6f, 0x46, 0x75, 0x6e, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4f, 0x72, 0x61,
		0x6e, 0x67, 0x65, 0x20, 0x4d, 0x6f, 0x75, 0x76, 0x65, 0x20, 0x32, 0x4d, 0x6f, 0x75, 0x76, 0x65,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x4d, 0x6f, 0x75, 0x76, 0x65, 0x54, 0x61, 0x62, 0x37,
		0x57, 0x49, 0x46, 0x49, 0x4d, 0x6f, 0x75, 0x76, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x6f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x54, 0x61, 0x62, 0x5f, 0x37,
		0x5f, 0x34, 0x47, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x34, 0x47, 0x44, 0x69, 0x76, 0x65, 0x20,
		0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x44, 0x69, 0x76, 0x65, 0x20, 0x24, 0x31, 0x53, 0x50,
		0x56, 0x20, 0x24, 0x31, 0x4f, 0x72, 0x62, 0x69, 0x63, 0x52, 0x36, 0x37, 0x38, 0x45, 0x4c, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x47, 0x52, 0x43, 0x35, 0x30, 0x31, 0x4c, 0x53, 0x6c, 0x69,
		0x6d, 0x52, 0x43, 0x35, 0x34, 0x35, 0x4c, 0x4d, 0x61, 0x75, 0x69, 0x52, 0x43, 0x35, 0x35, 0x35,
		0x4c, 0x57, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x43, 0x32, 0x32, 0x30, 0x30, 0x4c, 0x4a, 0x6f,
		0x75, 0x72, 0x6e, 0x65, 0x79, 0x20, 0x56, 0x52, 0x43, 0x36, 0x30, 0x38, 0x4c, 0x52, 0x38, 0x4c,
		0x35, 0x54, 0x54, 0x61, 0x62, 0x38, 0x20, 0x35, 0x47, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x61, 0x4f,
		0x72, 0x62, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x69, 0x73, 0x73, 0x69, 0x6d, 0x6f,
		0x43, 0x52, 0x41, 0x4e, 0x45, 0x2d, 0x45, 0x56, 0x42, 0x4f, 0x75, 0x6b, 0x69, 0x4f, 0x4b, 0x50,
		0x36, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x75, 0x6b, 0x69, 0x74, 0x65, 0x6c, 0x57, 0x50, 0x32, 0x31,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x78, 0x4b, 0x37, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x55, 0x38, 0x20, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x20,
		0x54, 0x61, 0x70, 0x4f, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x78, 0x4f, 0x56, 0x2d, 0x56, 0x31, 0x30,
		0x56, 0x65, 0x72, 0x74, 0x69, 0x73, 0x20, 0x59, 0x61, 0x72, 0x64, 0x56, 0x65, 0x72, 0x74, 0x69,
		0x73, 0x20, 0x35, 0x30, 0x32, 0x31, 0x20, 0x41, 0x69, 0x6d, 0x56, 0x65, 0x72, 0x74, 0x69, 0x73,
		0x20, 0x34, 0x30, 0x30, 0x34, 0x20, 0x59, 0x6f, 0x75, 0x56, 0x65, 0x72, 0x74, 0x69, 0x73, 0x20,
		0x24, 0x31, 0x4c, 0x69, 0x76, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x37, 0x30, 0x33, 0x32, 0x4c, 0x69,
		0x76, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x37, 0x30, 0x33, 0x32, 0x51, 0x75, 0x61, 0x6c, 0x63,
		0x6f, 0x72, 0x65, 0x20, 0x31, 0x30, 0x31, 0x30, 0x51, 0x75, 0x61, 0x6c, 0x63, 0x6f, 0x72, 0x65,
		0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x4f, 0x76, 0x76, 0x69, 0x4a, 0x75, 0x6d, 0x62, 0x6f,
		0x20, 0x58, 0x31, 0x4f, 0x77, 0x77, 0x6f, 0x43, 0x61, 0x72, 0x6e, 0x69, 0x76, 0x61, 0x6c, 0x20,
		0x42, 0x35, 0x4f, 0x79, 0x73, 0x74, 0x65, 0x72, 0x73, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63,
		0x20, 0x38, 0x30, 0x30, 0x69, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x50, 0x61, 0x63,
		0x69, 0x66, 0x69, 0x63, 0x20, 0x45, 0x49, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x56, 0x49, 0x6e, 0x64,
		0x69, 0x61, 0x6e, 0x20, 0x56, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x24, 0x31, 0x41,
		0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x20, 0x24, 0x31, 0x41, 0x72, 0x63, 0x74, 0x69, 0x63,
		0x20, 0x24, 0x31, 0x41, 0x6e, 0x74, 0x61, 0x72, 0x63, 0x74, 0x69, 0x63, 0x20, 0x45, 0x4c, 0x69,
		0x66, 0x65, 0x20, 0x34, 0x47, 0x54, 0x37, 0x34, 0x4d, 0x61, 0x69, 0x5f, 0x33, 0x47, 0x54, 0x37,
		0x34, 0x4d, 0x41, 0x69, 0x20, 0x33, 0x47, 0x4f, 0x79, 0x79, 0x75, 0x54, 0x31, 0x31, 0x20, 0x33,
		0x47, 0x4f, 0x7a, 0x6f, 0x6e, 0x65, 0x48, 0x44, 0x50, 0x2d, 0x55, 0x50, 0x4d, 0x6f, 0x64, 0x65,
		0x20, 0x31, 0x20, 0x52, 0x52, 0x4d, 0x6f, 0x64, 0x65, 0x20, 0x31, 0x20, 0x52, 0x53, 0x4d, 0x6f,
		0x64, 0x65, 0x20, 0x31, 0x20, 0x4d, 0x44, 0x2d, 0x30, 0x31, 0x50, 0x50, 0x41, 0x50, 0x59, 0x52,
		0x45, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x31, 0x22, 0x50, 0x43, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x51, 0x55, 0x49, 0x43, 0x4b, 0x54, 0x41, 0x42, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x51, 0x75,
		0x69, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x43, 0x42, 0x4f, 0x58,
		0x41, 0x72, 0x74, 0x2d, 0x50, 0x43, 0x42, 0x2d, 0x56, 0x31, 0x31, 0x36, 0x41, 0x72, 0x74, 0x42,
		0x65, 0x65, 0x2d, 0x50, 0x43, 0x42, 0x2d, 0x56, 0x32, 0x31, 0x36, 0x42, 0x65, 0x65, 0x43, 0x6c,
		0x61, 0x70, 0x2d, 0x50, 0x43, 0x42, 0x2d, 0x49, 0x33, 0x31, 0x36, 0x43, 0x6c, 0x61, 0x70, 0x50,
		0x43, 0x42, 0x2d, 0x54, 0x31, 0x30, 0x33, 0x43, 0x75, 0x72, 0x69, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4b, 0x6f, 0x76, 0x61, 0x20, 0x54, 0x37, 0x33, 0x30, 0x4b, 0x6f, 0x76, 0x61, 0x5f, 0x50, 0x6c,
		0x75, 0x73, 0x5f, 0x50, 0x43, 0x42, 0x5f, 0x54, 0x37, 0x33, 0x35, 0x4b, 0x6f, 0x76, 0x61, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x54, 0x37, 0x33, 0x35, 0x50, 0x43, 0x44, 0x50, 0x43, 0x44, 0x20,
		0x41, 0x72, 0x67, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x61, 0x50, 0x49, 0x4e, 0x45, 0x50, 0x49, 0x52,
		0x41, 0x4e, 0x48, 0x41, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x34, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x20, 0x54, 0x61, 0x62, 0x20, 0x57, 0x68, 0x69,
		0x74, 0x65, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x50, 0x4f, 0x43, 0x4f, 0x46, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x34, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x34, 0x20, 0x35, 0x47, 0x4d, 0x34, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x32, 0x30, 0x31, 0x30, 0x4a, 0x31, 0x39, 0x47, 0x43, 0x4d, 0x33, 0x20, 0x53, 0x45, 0x58,
		0x33, 0x20, 0x4e, 0x46, 0x43, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x33, 0x20, 0x47, 0x54,
		0x58, 0x34, 0x20, 0x47, 0x54, 0x58, 0x35, 0x20, 0x35, 0x47, 0x58, 0x34, 0x20, 0x47, 0x54, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x58, 0x34, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x46, 0x33, 0x20, 0x47, 0x54, 0x46, 0x34, 0x20, 0x47, 0x54, 0x46,
		0x34, 0x43, 0x33, 0x43, 0x33, 0x31, 0x43, 0x34, 0x30, 0x32, 0x33, 0x30, 0x35, 0x45, 0x50, 0x43,
		0x43, 0x34, 0x47, 0x32, 0x32, 0x31, 0x32, 0x37, 0x50, 0x43, 0x39, 0x35, 0x49, 0x43, 0x35, 0x35,
		0x46, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x20, 0x47, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x50,
		0x4f, 0x50, 0x54, 0x45, 0x4c, 0x50, 0x39, 0x30, 0x30, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x50,
		0x54, 0x56, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x50, 0x55, 0x4c, 0x49, 0x44, 0x46, 0x24, 0x31, 0x50,
		0x61, 0x63, 0x6b, 0x61, 0x72, 0x64, 0x20, 0x42, 0x65, 0x6c, 0x6c, 0x44, 0x41, 0x59, 0x54, 0x4f,
		0x4e, 0x41, 0x2d, 0x47, 0x31, 0x32, 0x44, 0x61, 0x79, 0x74, 0x6f, 0x6e, 0x61, 0x20, 0x47, 0x31,
		0x32, 0x4d, 0x4f, 0x4e, 0x5a, 0x41, 0x2d, 0x54, 0x37, 0x4d, 0x6f, 0x6e, 0x7a, 0x61, 0x20, 0x54,
		0x37, 0x53, 0x49, 0x4c, 0x56, 0x45, 0x52, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x2d, 0x54, 0x31, 0x30,
		0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x20, 0x54, 0x31, 0x30, 0x45,
		0x61, 0x73, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x54, 0x56, 0x31, 0x31, 0x48, 0x43, 0x50, 0x61,
		0x6c, 0x61, 0x64, 0x69, 0x6e, 0x50, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x20, 0x54, 0x56, 0x54,
		0x56, 0x20, 0x42, 0x6f, 0x78, 0x50, 0x61, 0x6c, 0x6d, 0x54, 0x72, 0x65, 0x6f, 0x20, 0x24, 0x31,
		0x54, 0x75, 0x6e, 0x67, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x56, 0x47, 0x31, 0x30, 0x30, 0x50, 0x65,
		0x70, 0x69, 0x74, 0x6f, 0x50, 0x61, 0x6e, 0x61, 0x63, 0x6f, 0x6d, 0x54, 0x2d, 0x69, 0x37, 0x30,
		0x38, 0x44, 0x50, 0x61, 0x6e, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x50, 0x2d, 0x73, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x62, 0x6f,
		0x6f, 0x6b, 0x20, 0x24, 0x31, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x50, 0x45, 0x6c, 0x75, 0x67,
		0x61, 0x20, 0x58, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x49, 0x37, 0x45, 0x6c, 0x75, 0x67, 0x61,
		0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x78, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x78,
		0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x2d, 0x30, 0x32, 0x44, 0x54, 0x6f, 0x75, 0x67,
		0x68, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x61, 0x64, 0x20,
		0x46, 0x5a, 0x2d, 0x24, 0x31, 0x50, 0x35, 0x35, 0x20, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x34, 0x47,
		0x50, 0x35, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x24, 0x31, 0x20, 0x4e, 0x58, 0x54, 0x50, 0x39,
		0x30, 0x32, 0x69, 0x50, 0x61, 0x6e, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x20, 0x4d, 0x49, 0x4c,
		0x20, 0x44, 0x4c, 0x4e, 0x41, 0x56, 0x69, 0x65, 0x72, 0x61, 0x20, 0x43, 0x61, 0x73, 0x74, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x4c, 0x69, 0x76,
		0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x50, 0x61, 0x6e, 0x6f, 0x50, 0x61, 0x6e, 0x6f, 0x72,
		0x61, 0x6d, 0x69, 0x63, 0x50, 0x61, 0x6e, 0x74, 0x65, 0x63, 0x68, 0x41, 0x44, 0x52, 0x39, 0x31,
		0x30, 0x4c, 0x53, 0x74, 0x61, 0x72, 0x20, 0x51, 0x49, 0x4d, 0x2d, 0x41, 0x38, 0x36, 0x30, 0x56,
		0x65, 0x67, 0x61, 0x20, 0x4e, 0x6f, 0x20, 0x36, 0x49, 0x4d, 0x2d, 0x41, 0x38, 0x35, 0x30, 0x56,
		0x65, 0x67, 0x61, 0x20, 0x52, 0x33, 0x49, 0x4d, 0x2d, 0x41, 0x38, 0x37, 0x30, 0x4b, 0x56, 0x65,
		0x67, 0x61, 0x20, 0x49, 0x72, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x72, 0x6f, 0x74, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x45, 0x56, 0x31, 0x20, 0x50, 0x52, 0x4f, 0x45, 0x56, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x65, 0x6c, 0x69, 0x74, 0x74, 0x50, 0x65, 0x6c, 0x69, 0x74, 0x74, 0x20, 0x54, 0x31, 0x20,
		0x4d, 0x41, 0x58, 0x54, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x6c, 0x69, 0x74, 0x74, 0x20,
		0x54, 0x31, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x65,
		0x6e, 0x64, 0x6f, 0x6f, 0x58, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x70, 0x65, 0x6e, 0x64, 0x6f,
		0x6f, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x69, 0x6e, 0x69, 0x58, 0x31, 0x31, 0x20, 0x50, 0x52,
		0x4f, 0x41, 0x35, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x72, 0x61,
		0x6d, 0x45, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x69, 0x78, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20,
		0x37, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x6c, 0x69, 0x6d, 0x4d, 0x6f, 0x6e, 0x73, 0x74,
		0x65, 0x72, 0x20, 0x58, 0x35, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x24, 0x31, 0x50, 0x65,
		0x72, 0x66, 0x65, 0x6f, 0x50, 0x65, 0x72, 0x66, 0x65, 0x6f, 0x5f, 0x50, 0x46, 0x5f, 0x41, 0x34,
		0x35, 0x35, 0x31, 0x43, 0x48, 0x52, 0x4f, 0x4e, 0x4f, 0x50, 0x65, 0x72, 0x66, 0x65, 0x6f, 0x5f,
		0x50, 0x46, 0x5f, 0x41, 0x34, 0x35, 0x35, 0x32, 0x52, 0x41, 0x54, 0x45, 0x50, 0x65, 0x72, 0x66,
		0x65, 0x6f, 0x5f, 0x50, 0x46, 0x5f, 0x41, 0x34, 0x35, 0x35, 0x33, 0x4d, 0x41, 0x54, 0x52, 0x49,
		0x58, 0x50, 0x68, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x43, 0x6c, 0x75, 0x65, 0x20, 0x4c, 0x45, 0x6e,
		0x65, 0x72, 0x67, 0x79, 0x20, 0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x33, 0x2b, 0x43,
		0x6c, 0x75, 0x65, 0x20, 0x24, 0x31, 0x50, 0x68, 0x69, 0x6c, 0x63, 0x6f, 0x48, 0x49, 0x54, 0x20,
		0x50, 0x31, 0x30, 0x61, 0x48, 0x69, 0x74, 0x20, 0x50, 0x31, 0x30, 0x61, 0x48, 0x69, 0x74, 0x20,
		0x24, 0x31, 0x50, 0x54, 0x42, 0x37, 0x50, 0x41, 0x50, 0x68, 0x69, 0x6c, 0x69, 0x70, 0x73, 0x58,
		0x65, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x24, 0x31, 0x2f, 0x39, 0x36, 0x20, 0x34, 0x4b,
		0x20, 0x55, 0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x55, 0x48, 0x44,
		0x20, 0x28, 0x24, 0x31, 0x2d, 0x32, 0x30, 0x24, 0x32, 0x29, 0x24, 0x31, 0x20, 0x34, 0x47, 0x20,
		0x4c, 0x54, 0x45, 0x4d, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x75, 0x2d, 0x72, 0x61, 0x79,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x28, 0x42, 0x44, 0x50, 0x24, 0x31, 0x29, 0x4e,
		0x65, 0x74, 0x54, 0x56, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x55, 0x48, 0x44, 0x20, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54,
		0x56, 0x20, 0x55, 0x48, 0x44, 0x46, 0x69, 0x73, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x6d, 0x61, 0x78, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x58, 0x53, 0x61, 0x74,
		0x75, 0x72, 0x6e, 0x4d, 0x61, 0x72, 0x73, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x58, 0x50, 0x69,
		0x50, 0x4f, 0x50, 0x69, 0x70, 0x6f, 0x4d, 0x39, 0x50, 0x72, 0x6f, 0x50, 0x69, 0x63, 0x6f, 0x50,
		0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x52, 0x31, 0x64, 0x76, 0x72, 0x37, 0x30, 0x30, 0x70, 0x69,
		0x44, 0x56, 0x52, 0x37, 0x30, 0x30, 0x50, 0x49, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x42, 0x44, 0x50,
		0x2d, 0x31, 0x36, 0x30, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70,
		0x75, 0x74, 0x65, 0x72, 0x73, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x61, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x65, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x50, 0x69, 0x78, 0x75, 0x73, 0x52, 0x69, 0x64, 0x65, 0x20, 0x24, 0x31, 0x47, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x54, 0x68, 0x72, 0x65, 0x65, 0x20, 0x76, 0x24, 0x31, 0x50, 0x6c, 0x61, 0x79, 0x20,
		0x54, 0x77, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x46, 0x69, 0x76, 0x65, 0x68, 0x69, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x37,
		0x20, 0x33, 0x47, 0x48, 0x69, 0x4d, 0x61, 0x78, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x42, 0x6c, 0x61,
		0x73, 0x74, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4a, 0x6f, 0x6b, 0x65, 0x72, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33,
		0x47, 0x52, 0x61, 0x7a, 0x65, 0x50, 0x69, 0x78, 0x75, 0x73, 0x5f, 0x4a, 0x65, 0x74, 0x4a, 0x65,
		0x74, 0x70, 0x69, 0x78, 0x75, 0x73, 0x20, 0x68, 0x69, 0x74, 0x20, 0x32, 0x48, 0x69, 0x74, 0x20,
		0x32, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72,
		0x73, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x47, 0x50, 0x6c, 0x61, 0x74, 0x6f, 0x6f,
		0x6e, 0x50, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x4d, 0x4f, 0x4d, 0x4f, 0x6d, 0x69, 0x6e, 0x69, 0x53,
		0x4d, 0x4f, 0x4d, 0x4f, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x6d, 0x6f, 0x6d, 0x6f, 0x20,
		0x6d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x47, 0x53, 0x4d, 0x4f, 0x4d, 0x4f, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x33, 0x47, 0x53, 0x4d, 0x4f, 0x4d, 0x4f, 0x20, 0x24, 0x31, 0x50, 0x6c, 0x75, 0x6d,
		0x5a, 0x34, 0x30, 0x35, 0x47, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x33, 0x5a, 0x34, 0x30, 0x37, 0x41,
		0x78, 0x65, 0x20, 0x34, 0x5a, 0x35, 0x31, 0x36, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73, 0x5a,
		0x35, 0x31, 0x38, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73, 0x20, 0x32, 0x5a, 0x35, 0x31, 0x39,
		0x47, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x35, 0x5a, 0x38, 0x31, 0x31, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x61, 0x78, 0x20, 0x31, 0x31, 0x5a, 0x37, 0x30, 0x39, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x78,
		0x20, 0x37, 0x5a, 0x37, 0x31, 0x32, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x78, 0x20, 0x31, 0x32,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x6c, 0x75, 0x7a, 0x7a, 0x50, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x31, 0x30, 0x20, 0x33, 0x47, 0x41, 0x31,
		0x30, 0x53, 0x55, 0x52, 0x46, 0x70, 0x61, 0x64, 0x20, 0x32, 0x53, 0x55, 0x52, 0x46, 0x70, 0x61,
		0x64, 0x20, 0x33, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x22, 0x53, 0x55, 0x52, 0x46, 0x70, 0x61,
		0x64, 0x20, 0x34, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x50, 0x4d, 0x38, 0x30, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x56,
		0x69, 0x65, 0x77, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x56, 0x2d, 0x48, 0x44, 0x4d, 0x49, 0x2d, 0x4b,
		0x42, 0x2d, 0x30, 0x31, 0x48, 0x44, 0x4d, 0x49, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54,
		0x56, 0x20, 0x44, 0x6f, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x56, 0x2d, 0x48,
		0x44, 0x4d, 0x49, 0x2d, 0x32, 0x30, 0x30, 0x42, 0x54, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x43,
		0x20, 0x48, 0x44, 0x4d, 0x49, 0x20, 0x44, 0x6f, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x4f, 0x42, 0x2d,
		0x35, 0x30, 0x34, 0x35, 0x4d, 0x6f, 0x62, 0x69, 0x69, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x35, 0x30, 0x34, 0x35, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x35, 0x30, 0x36,
		0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35, 0x30, 0x36, 0x20, 0x4e, 0x61, 0x76, 0x69, 0x4f, 0x4e, 0x59,
		0x58, 0x20, 0x35, 0x30, 0x37, 0x20, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41,
		0x42, 0x2d, 0x50, 0x35, 0x32, 0x37, 0x53, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35, 0x32, 0x37, 0x53,
		0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x35, 0x34, 0x37, 0x4f, 0x4e, 0x59, 0x58,
		0x20, 0x35, 0x34, 0x37, 0x20, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42,
		0x2d, 0x50, 0x52, 0x4f, 0x54, 0x41, 0x42, 0x32, 0x36, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20,
		0x32, 0x36, 0x20, 0x58, 0x58, 0x4c, 0x20, 0x49, 0x50, 0x53, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62,
		0x20, 0x32, 0x35, 0x58, 0x58, 0x4c, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x4c,
		0x31, 0x30, 0x31, 0x35, 0x4d, 0x6f, 0x62, 0x69, 0x69, 0x20, 0x31, 0x30, 0x31, 0x35, 0x54, 0x41,
		0x42, 0x2d, 0x50, 0x31, 0x30, 0x32, 0x33, 0x32, 0x2d, 0x33, 0x47, 0x54, 0x61, 0x62, 0x20, 0x50,
		0x31, 0x30, 0x32, 0x33, 0x32, 0x20, 0x33, 0x47, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x4d, 0x6f, 0x62, 0x69, 0x69, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x50, 0x6f,
		0x6c, 0x61, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x6f, 0x69, 0x64, 0x50,
		0x34, 0x30, 0x30, 0x35, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x43, 0x34, 0x50, 0x35, 0x30,
		0x30, 0x35, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x43, 0x35, 0x50, 0x34, 0x30, 0x30, 0x36,
		0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x44, 0x34, 0x50, 0x53, 0x50, 0x54, 0x44, 0x32, 0x31,
		0x4e, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x44, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x34, 0x35, 0x32, 0x36, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x45, 0x50, 0x53, 0x50, 0x43,
		0x4c, 0x33, 0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x43, 0x36, 0x50, 0x35, 0x30,
		0x30, 0x36, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x50, 0x35, 0x35, 0x32, 0x36, 0x41,
		0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x53, 0x50, 0x43,
		0x4b, 0x32, 0x30, 0x4e, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x32, 0x50, 0x53, 0x50,
		0x43, 0x4b, 0x32, 0x31, 0x4e, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x35, 0x30, 0x32, 0x36, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4c,
		0x50, 0x53, 0x50, 0x43, 0x4c, 0x32, 0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4c,
		0x32, 0x50, 0x53, 0x50, 0x43, 0x4d, 0x32, 0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20,
		0x4d, 0x32, 0x50, 0x35, 0x30, 0x34, 0x36, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x50, 0x35,
		0x73, 0x50, 0x35, 0x35, 0x32, 0x35, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x51, 0x35, 0x73,
		0x50, 0x35, 0x30, 0x34, 0x37, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x5a, 0x50, 0x53, 0x50,
		0x43, 0x5a, 0x32, 0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x5a, 0x32, 0x50, 0x35,
		0x30, 0x32, 0x35, 0x41, 0x4c, 0x35, 0x73, 0x50, 0x72, 0x6f, 0x34, 0x36, 0x31, 0x31, 0x50, 0x52,
		0x4f, 0x35, 0x30, 0x32, 0x33, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x35, 0x50, 0x52,
		0x4f, 0x56, 0x34, 0x30, 0x30, 0x41, 0x67, 0x61, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x56, 0x33, 0x35,
		0x30, 0x50, 0x72, 0x6f, 0x56, 0x33, 0x35, 0x30, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x20, 0x35, 0x50,
		0x72, 0x6f, 0x24, 0x31, 0x50, 0x53, 0x50, 0x54, 0x33, 0x35, 0x30, 0x54, 0x75, 0x72, 0x62, 0x6f,
		0x20, 0x33, 0x35, 0x30, 0x20, 0x47, 0x72, 0x69, 0x73, 0x50, 0x53, 0x4e, 0x2d, 0x48, 0x31, 0x31,
		0x36, 0x53, 0x6e, 0x61, 0x70, 0x50, 0x75, 0x72, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x33, 0x47, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74,
		0x79, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x50, 0x6f, 0x6c, 0x65, 0x73, 0x74,
		0x61, 0x72, 0x50, 0x6f, 0x6c, 0x79, 0x50, 0x61, 0x64, 0x50, 0x6f, 0x6c, 0x79, 0x74, 0x72, 0x6f,
		0x6e, 0x52, 0x32, 0x35, 0x30, 0x38, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x51, 0x2d, 0x46,
		0x69, 0x76, 0x65, 0x52, 0x32, 0x34, 0x30, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x32,
		0x58, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x52, 0x32, 0x34, 0x30, 0x32, 0x52, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x20, 0x52, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x52, 0x32, 0x52,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x52, 0x33, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x53,
		0x31, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x53, 0x32, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74,
		0x20, 0x54, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x33, 0x52, 0x6f, 0x63, 0x6b,
		0x65, 0x74, 0x20, 0x54, 0x36, 0x20, 0x53, 0x45, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54,
		0x36, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x37, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74,
		0x20, 0x54, 0x34, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x4a, 0x65, 0x74, 0x7a, 0x52, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x20, 0x4a, 0x65, 0x74, 0x7a, 0x20, 0x35, 0x2e, 0x30, 0x34, 0x47, 0x34,
		0x35, 0x30, 0x5a, 0x61, 0x70, 0x20, 0x35, 0x57, 0x36, 0x35, 0x30, 0x30, 0x51, 0x75, 0x61, 0x64,
		0x72, 0x61, 0x20, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x57, 0x37, 0x34, 0x35, 0x32, 0x51, 0x75,
		0x61, 0x64, 0x72, 0x61, 0x20, 0x53, 0x32, 0x57, 0x37, 0x35, 0x35, 0x30, 0x51, 0x75, 0x61, 0x64,
		0x72, 0x61, 0x20, 0x56, 0x35, 0x57, 0x38, 0x35, 0x37, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61,
		0x20, 0x56, 0x37, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x4c, 0x35, 0x30, 0x31, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x20, 0x37, 0x53, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x20, 0x50, 0x72,
		0x6f, 0x34, 0x47, 0x35, 0x30, 0x30, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x43, 0x6c, 0x65, 0x6f,
		0x57, 0x38, 0x34, 0x38, 0x30, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x34, 0x20, 0x57,
		0x38, 0x34, 0x38, 0x30, 0x57, 0x37, 0x35, 0x33, 0x31, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x20,
		0x56, 0x57, 0x37, 0x34, 0x33, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x57, 0x37, 0x34, 0x33, 0x30, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x50, 0x6f, 0x73,
		0x68, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5a, 0x61, 0x70, 0x20,
		0x36, 0x20, 0x46, 0x6c, 0x61, 0x7a, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x50, 0x6f, 0x73, 0x68, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50,
		0x57, 0x31, 0x31, 0x30, 0x30, 0x53, 0x51, 0x32, 0x33, 0x35, 0x32, 0x52, 0x32, 0x35, 0x35, 0x42,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x54, 0x38, 0x43, 0x6f, 0x73, 0x6d, 0x69, 0x63, 0x61, 0x20,
		0x54, 0x37, 0x38, 0x30, 0x30, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x50, 0x61, 0x64, 0x50,
		0x6f, 0x6d, 0x70, 0x50, 0x6f, 0x70, 0x70, 0x6f, 0x78, 0x50, 0x6f, 0x70, 0x70, 0x6f, 0x78, 0x20,
		0x50, 0x33, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65,
		0x20, 0x52, 0x65, 0x61, 0x72, 0x20, 0x53, 0x65, 0x61, 0x74, 0x20, 0x45, 0x6e, 0x74, 0x65, 0x72,
		0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f,
		0x59, 0x50, 0x59, 0x5f, 0x53, 0x34, 0x35, 0x30, 0x59, 0x50, 0x59, 0x20, 0x53, 0x34, 0x35, 0x30,
		0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x34, 0x20, 0x24, 0x31, 0x59, 0x4f, 0x4c, 0x4f, 0x54, 0x77,
		0x69, 0x73, 0x74, 0x20, 0x34, 0x20, 0x46, 0x69, 0x74, 0x55, 0x50, 0x20, 0x33, 0x32, 0x54, 0x77,
		0x69, 0x73, 0x74, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x34,
		0x47, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x34, 0x54, 0x31, 0x30, 0x38, 0x35, 0x4d, 0x31, 0x30,
		0x20, 0x34, 0x47, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x58, 0x4d, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x58, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x20, 0x42, 0x47,
		0x48, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x38, 0x29, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x33,
		0x32, 0x47, 0x42, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x54, 0x77,
		0x69, 0x73, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x32, 0x20, 0x46, 0x69, 0x74, 0x54, 0x77, 0x69, 0x73,
		0x74, 0x20, 0x32, 0x20, 0x47, 0x6f, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x58, 0x4c, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x53,
		0x45, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x49, 0x59,
		0x70, 0x79, 0x20, 0x24, 0x31, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x54, 0x61, 0x62, 0x4d, 0x41,
		0x58, 0x49, 0x20, 0x32, 0x30, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x32, 0x30, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x6f, 0x31, 0x38, 0x36, 0x48, 0x53, 0x32, 0x30, 0x38, 0x30, 0x35, 0x33, 0x31, 0x41, 0x58,
		0x45, 0x5f, 0x49, 0x49, 0x41, 0x78, 0x65, 0x20, 0x49, 0x49, 0x20, 0x41, 0x78, 0x65, 0x41, 0x78,
		0x65, 0x31, 0x38, 0x36, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x35, 0x33, 0x31, 0x50, 0x35, 0x34,
		0x31, 0x31, 0x38, 0x35, 0x46, 0x54, 0x35, 0x30, 0x35, 0x30, 0x32, 0x33, 0x31, 0x50, 0x35, 0x31,
		0x31, 0x31, 0x38, 0x36, 0x46, 0x54, 0x31, 0x30, 0x38, 0x30, 0x32, 0x33, 0x31, 0x50, 0x35, 0x37,
		0x31, 0x31, 0x38, 0x36, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x32, 0x33, 0x32, 0x50, 0x36, 0x33,
		0x30, 0x58, 0x37, 0x30, 0x2d, 0x32, 0x30, 0x32, 0x31, 0x58, 0x37, 0x30, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x69, 0x6f, 0x50, 0x72, 0x65, 0x73,
		0x74, 0x69, 0x67, 0x69, 0x6f, 0x20, 0x35, 0x35, 0x30, 0x30, 0x20, 0x44, 0x55, 0x4f, 0x4d, 0x75,
		0x6c, 0x74, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x35, 0x30, 0x30, 0x20, 0x44, 0x75,
		0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44,
		0x75, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x50,
		0x53, 0x50, 0x35, 0x35, 0x35, 0x31, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x53,
		0x35, 0x50, 0x53, 0x50, 0x37, 0x35, 0x39, 0x30, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65,
		0x20, 0x56, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x35, 0x31, 0x44, 0x55,
		0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x53, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50,
		0x35, 0x34, 0x37, 0x30, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x58, 0x35, 0x50,
		0x53, 0x50, 0x35, 0x35, 0x33, 0x30, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x5a,
		0x35, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33, 0x33, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65,
		0x20, 0x5a, 0x33, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x35, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61,
		0x63, 0x65, 0x20, 0x50, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x35, 0x32, 0x44, 0x55, 0x4f, 0x47,
		0x72, 0x61, 0x63, 0x65, 0x20, 0x52, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35,
		0x30, 0x36, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x51, 0x35, 0x50, 0x53, 0x50,
		0x35, 0x35, 0x31, 0x31, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x35, 0x20,
		0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x30, 0x31, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61,
		0x63, 0x65, 0x20, 0x52, 0x37, 0x50, 0x53, 0x50, 0x37, 0x35, 0x37, 0x30, 0x44, 0x55, 0x4f, 0x47,
		0x72, 0x61, 0x63, 0x65, 0x20, 0x50, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35,
		0x37, 0x32, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x42, 0x37, 0x50, 0x53, 0x50,
		0x33, 0x35, 0x35, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x48, 0x33, 0x50, 0x53,
		0x50, 0x35, 0x35, 0x32, 0x33, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x48, 0x35, 0x20,
		0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x35, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a,
		0x65, 0x20, 0x4d, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x34, 0x39, 0x35, 0x44,
		0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x56, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50,
		0x33, 0x35, 0x33, 0x34, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x4b, 0x33, 0x20, 0x4c,
		0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x33, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65,
		0x20, 0x44, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x32, 0x30, 0x44, 0x55,
		0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x42, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x38, 0x44,
		0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x58, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50,
		0x35, 0x35, 0x35, 0x33, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x46, 0x35, 0x20, 0x4c,
		0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x30, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65,
		0x20, 0x41, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x34, 0x35, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a,
		0x65, 0x20, 0x45, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x31, 0x32, 0x44,
		0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x45, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50,
		0x33, 0x35, 0x31, 0x31, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x47, 0x33, 0x20, 0x4c,
		0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x32, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65,
		0x20, 0x47, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x35, 0x30, 0x44, 0x55,
		0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x47, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37,
		0x35, 0x31, 0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x43, 0x37, 0x20, 0x4c, 0x54,
		0x45, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x43, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x32, 0x44,
		0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x42, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33, 0x32,
		0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x46, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x37,
		0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x4a, 0x33, 0x50, 0x53, 0x50, 0x35, 0x35,
		0x32, 0x34, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x4a, 0x35, 0x50, 0x53, 0x50, 0x37,
		0x35, 0x31, 0x31, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x42, 0x37, 0x50, 0x53, 0x50,
		0x33, 0x35, 0x31, 0x34, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x55, 0x33, 0x50, 0x53,
		0x50, 0x33, 0x35, 0x31, 0x33, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x56, 0x33, 0x50,
		0x53, 0x50, 0x33, 0x34, 0x31, 0x36, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x59, 0x41,
		0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x30, 0x36, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20,
		0x59, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x32, 0x33, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65,
		0x20, 0x52, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x37, 0x31, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a,
		0x65, 0x20, 0x51, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x30, 0x44,
		0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x47, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33, 0x37,
		0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x4e, 0x56, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35,
		0x32, 0x38, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x50, 0x58, 0x33, 0x50, 0x53, 0x50,
		0x33, 0x35, 0x32, 0x37, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x4e, 0x4b, 0x33, 0x50,
		0x53, 0x50, 0x33, 0x34, 0x36, 0x38, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x4f, 0x4b,
		0x33, 0x53, 0x49, 0x4c, 0x56, 0x45, 0x52, 0x20, 0x50, 0x4f, 0x53, 0x53, 0x69, 0x6c, 0x76, 0x65,
		0x72, 0x20, 0x50, 0x4f, 0x53, 0x50, 0x4d, 0x54, 0x33, 0x32, 0x37, 0x37, 0x5f, 0x33, 0x47, 0x4d,
		0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64, 0x20, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x54, 0x34, 0x33, 0x33, 0x37, 0x5f, 0x33, 0x47,
		0x53, 0x65, 0x65, 0x64, 0x20, 0x41, 0x37, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x54, 0x33, 0x39, 0x39,
		0x37, 0x5f, 0x57, 0x5f, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4b, 0x69, 0x64, 0x73, 0x50, 0x4d,
		0x54, 0x33, 0x31, 0x30, 0x33, 0x5f, 0x57, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4b, 0x69, 0x64, 0x73,
		0x20, 0x4d, 0x61, 0x78, 0x50, 0x4d, 0x54, 0x33, 0x31, 0x30, 0x34, 0x5f, 0x57, 0x69, 0x5f, 0x44,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x55, 0x70, 0x50, 0x4d, 0x54, 0x34,
		0x35, 0x31, 0x31, 0x5f, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4b, 0x69, 0x64, 0x73, 0x20,
		0x50, 0x72, 0x6f, 0x50, 0x4d, 0x54, 0x34, 0x32, 0x30, 0x38, 0x4e, 0x6f, 0x64, 0x65, 0x20, 0x41,
		0x38, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x54, 0x34, 0x37, 0x37, 0x31, 0x52, 0x6f, 0x6f, 0x74, 0x20,
		0x41, 0x31, 0x30, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x50, 0x37, 0x30, 0x37, 0x30, 0x43, 0x33, 0x47,
		0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64, 0x20, 0x34, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f,
		0x6e, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x47, 0x65, 0x6f, 0x20, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x72, 0x20, 0x33, 0x47, 0x65, 0x6f, 0x20, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x72, 0x20, 0x32, 0x47, 0x72, 0x61, 0x63,
		0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x50, 0x4d, 0x54, 0x33, 0x32, 0x38, 0x37, 0x5f,
		0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64, 0x20, 0x52, 0x61, 0x6e, 0x67, 0x65,
		0x72, 0x20, 0x38, 0x2e, 0x30, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x54, 0x34, 0x32, 0x33, 0x38, 0x5f,
		0x34, 0x47, 0x51, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x57, 0x69, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x57, 0x69, 0x7a, 0x65, 0x20,
		0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32,
		0x47, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x54, 0x56, 0x24, 0x31,
		0x43, 0x49, 0x53, 0x24, 0x32, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
		0x20, 0x24, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x70, 0x61, 0x64, 0x50, 0x44, 0x2d, 0x33, 0x31,
		0x32, 0x37, 0x4e, 0x43, 0x50, 0x44, 0x2d, 0x33, 0x31, 0x32, 0x37, 0x50, 0x72, 0x69, 0x6d, 0x75,
		0x78, 0x49, 0x4f, 0x58, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x20,
		0x36, 0x4b, 0x61, 0x70, 0x70, 0x61, 0x20, 0x24, 0x31, 0x4b, 0x61, 0x70, 0x70, 0x61, 0x42, 0x65,
		0x74, 0x61, 0x20, 0x32, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x36, 0x20, 0x34, 0x47, 0x55, 0x50,
		0x5a, 0x6f, 0x6e, 0x64, 0x61, 0x20, 0x34, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x6f, 0x20, 0x36, 0x53,
		0x69, 0x72, 0x6f, 0x63, 0x6f, 0x20, 0x59, 0x50, 0x72, 0x69, 0x74, 0x6f, 0x6d, 0x4d, 0x31, 0x30,
		0x5f, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4b, 0x37, 0x5f,
		0x41, 0x31, 0x30, 0x31, 0x4b, 0x37, 0x20, 0x41, 0x31, 0x30, 0x31, 0x4d, 0x31, 0x30, 0x5f, 0x41,
		0x69, 0x72, 0x4d, 0x31, 0x30, 0x20, 0x41, 0x69, 0x72, 0x4d, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55,
		0x53, 0x4d, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x37, 0x5f, 0x45, 0x45, 0x41, 0x50,
		0x37, 0x50, 0x37, 0x50, 0x52, 0x4f, 0x54, 0x72, 0x6f, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x50, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x50, 0x72, 0x69, 0x78, 0x74, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x53, 0x63,
		0x61, 0x6e, 0x50, 0x4c, 0x54, 0x24, 0x31, 0x50, 0x4c, 0x54, 0x24, 0x31, 0x47, 0x50, 0x72, 0x6f,
		0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x61, 0x6c,
		0x63, 0x6f, 0x6e, 0x20, 0x58, 0x4c, 0x4d, 0x35, 0x30, 0x34, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e,
		0x20, 0x58, 0x50, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x72, 0x75, 0x6c,
		0x79, 0x50, 0x75, 0x6e, 0x6f, 0x73, 0x50, 0x75, 0x72, 0x69, 0x73, 0x6d, 0x4c, 0x69, 0x62, 0x72,
		0x65, 0x6d, 0x20, 0x35, 0x51, 0x2d, 0x42, 0x6f, 0x78, 0x51, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x51, 0x2e, 0x42, 0x65, 0x6c, 0x6c, 0x51, 0x54, 0x41, 0x42, 0x31, 0x30, 0x45, 0x57, 0x51, 0x46,
		0x58, 0x51, 0x4c, 0x69, 0x6e, 0x6b, 0x51, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4a, 0x61, 0x7a,
		0x7a, 0x58, 0x20, 0x4a, 0x53, 0x37, 0x20, 0x50, 0x52, 0x4f, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x58,
		0x20, 0x4a, 0x53, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x58, 0x20, 0x4a,
		0x53, 0x24, 0x31, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x41, 0x31, 0x20, 0x6c, 0x69, 0x74, 0x65, 0x4e,
		0x6f, 0x69, 0x72, 0x20, 0x41, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x69, 0x72, 0x20,
		0x24, 0x31, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x41, 0x36, 0x30, 0x30, 0x5a, 0x31, 0x32, 0x20, 0x50,
		0x52, 0x4f, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x5a, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x32,
		0x20, 0x4e, 0x6f, 0x69, 0x72, 0x48, 0x6f, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x4e, 0x6f,
		0x69, 0x72, 0x20, 0x4c, 0x54, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x20,
		0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x20,
		0x49, 0x49, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x58, 0x37, 0x30,
		0x30, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x58,
		0x37, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x33, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4c,
		0x55, 0x4e, 0x41, 0x20, 0x50, 0x52, 0x4f, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x56,
		0x49, 0x54, 0x41, 0x20, 0x53, 0x56, 0x69, 0x74, 0x61, 0x20, 0x53, 0x4e, 0x49, 0x43, 0x45, 0x20,
		0x53, 0x4e, 0x69, 0x63, 0x65, 0x20, 0x53, 0x56, 0x24, 0x31, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c,
		0x69, 0x24, 0x31, 0x69, 0x20, 0x28, 0x32, 0x30, 0x24, 0x32, 0x29, 0x69, 0x31, 0x30, 0x20, 0x28,
		0x32, 0x30, 0x24, 0x31, 0x29, 0x69, 0x36, 0x69, 0x20, 0x32, 0x30, 0x32, 0x30, 0x69, 0x36, 0x69,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x69, 0x38, 0x69, 0x20, 0x50, 0x52, 0x4f, 0x69, 0x38,
		0x69, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x38, 0x69, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x51, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x20, 0x49, 0x38, 0x69, 0x69, 0x38, 0x69, 0x69, 0x36, 0x20, 0x4d, 0x65,
		0x74, 0x61, 0x6c, 0x20, 0x4f, 0x4e, 0x45, 0x69, 0x36, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20,
		0x4f, 0x6e, 0x65, 0x69, 0x36, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x32, 0x30, 0x31, 0x37,
		0x69, 0x36, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x48, 0x44, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x6f, 0x63, 0x6b, 0x65,
		0x74, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4d, 0x61, 0x72, 0x6b, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x20, 0x32, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
		0x20, 0x74, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x54, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x73,
		0x61, 0x6e, 0x74, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x53, 0x61,
		0x6e, 0x74, 0x6f, 0x73, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50,
		0x52, 0x4f, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f,
		0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x47, 0x4c,
		0x69, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x4c, 0x69, 0x56, 0x32, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x38, 0x29, 0x24, 0x31, 0x20, 0x54, 0x61, 0x62, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x79, 0x51, 0x54, 0x45, 0x43, 0x48, 0x51, 0x4d, 0x50, 0x20, 0x24, 0x31, 0x51, 0x69, 0x6c,
		0x69, 0x76, 0x65, 0x51, 0x37, 0x53, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x37, 0x20, 0x35, 0x2e,
		0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x37, 0x53, 0x35, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x37,
		0x20, 0x35, 0x2e, 0x35, 0x22, 0x20, 0x34, 0x47, 0x51, 0x38, 0x53, 0x35, 0x35, 0x49, 0x4e, 0x34,
		0x47, 0x32, 0x51, 0x38, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x20, 0x34, 0x47, 0x51, 0x38, 0x53, 0x36,
		0x49, 0x4e, 0x34, 0x47, 0x51, 0x38, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x38,
		0x53, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x50, 0x51, 0x38, 0x20, 0x35, 0x2e, 0x31, 0x22, 0x20, 0x34,
		0x47, 0x51, 0x39, 0x53, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x35, 0x2e, 0x30, 0x22,
		0x20, 0x34, 0x47, 0x51, 0x39, 0x53, 0x35, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x35,
		0x2e, 0x35, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x53, 0x35, 0x33, 0x49, 0x4e, 0x34, 0x47,
		0x51, 0x31, 0x30, 0x20, 0x35, 0x2e, 0x33, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x53, 0x35,
		0x37, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x31, 0x30, 0x20, 0x35, 0x2e, 0x37, 0x22, 0x20, 0x34, 0x47,
		0x51, 0x31, 0x30, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x53, 0x36,
		0x49, 0x4e, 0x34, 0x47, 0x51, 0x31, 0x30, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51,
		0x36, 0x54, 0x37, 0x49, 0x4e, 0x51, 0x37, 0x54, 0x31, 0x30, 0x49, 0x4e, 0x50, 0x51, 0x37, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x51, 0x38, 0x54, 0x31, 0x30, 0x49, 0x4e, 0x51, 0x38, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x51, 0x39, 0x54, 0x37, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x39, 0x54, 0x39, 0x49, 0x4e, 0x51, 0x39, 0x20, 0x39,
		0x2e, 0x30, 0x22, 0x51, 0x39, 0x54, 0x31, 0x30, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x20, 0x34, 0x47, 0x51, 0x54, 0x32, 0x31, 0x31, 0x30, 0x31, 0x51, 0x31,
		0x2d, 0x32, 0x31, 0x39, 0x37, 0x52, 0x2d, 0x32, 0x39, 0x37, 0x52, 0x32, 0x51, 0x6e, 0x65, 0x74,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x24,
		0x31, 0x48, 0x79, 0x6e, 0x65, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x24, 0x31, 0x53, 0x74, 0x61,
		0x72, 0x6b, 0x20, 0x4b, 0x31, 0x48, 0x79, 0x6e, 0x65, 0x78, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x48, 0x79, 0x6e, 0x65, 0x78, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x76, 0x69, 0x6e, 0x20,
		0x24, 0x31, 0x41, 0x73, 0x74, 0x6f, 0x6e, 0x20, 0x41, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x51, 0x74, 0x65, 0x6b, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x4c, 0x69, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x47, 0x6f, 0x20, 0x32, 0x4d, 0x55, 0x56, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x55,
		0x56, 0x20, 0x55, 0x70, 0x55, 0x70, 0x51, 0x2d, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x6f, 0x20, 0x24,
		0x31, 0x51, 0x2d, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x37, 0x30, 0x4d, 0x51, 0x2d, 0x57, 0x61,
		0x76, 0x65, 0x20, 0x24, 0x31, 0x51, 0x75, 0x61, 0x74, 0x72, 0x6f, 0x51, 0x75, 0x62, 0x6f, 0x4d,
		0x69, 0x6e, 0x65, 0x72, 0x76, 0x61, 0x58, 0x36, 0x36, 0x38, 0x51, 0x75, 0x65, 0x63, 0x68, 0x75,
		0x61, 0x51, 0x75, 0x65, 0x63, 0x68, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35,
		0x52, 0x41, 0x50, 0x54, 0x4f, 0x52, 0x52, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x69, 0x70,
		0x75, 0x73, 0x54, 0x69, 0x6e, 0x6b, 0x75, 0x51, 0x75, 0x6d, 0x6f, 0x56, 0x65, 0x67, 0x61, 0x20,
		0x24, 0x31, 0x59, 0x6f, 0x6f, 0x64, 0x61, 0x53, 0x69, 0x72, 0x69, 0x75, 0x73, 0x20, 0x24, 0x31,
		0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x24, 0x31, 0x51, 0x77, 0x61, 0x72, 0x65, 0x54, 0x42, 0x2d,
		0x39, 0x37, 0x31, 0x38, 0x51, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x54, 0x42, 0x2d, 0x31, 0x33, 0x38,
		0x30, 0x51, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x54, 0x42, 0x2d, 0x31, 0x33, 0x31, 0x37, 0x51, 0x50,
		0x72, 0x6f, 0x20, 0x33, 0x54, 0x42, 0x2d, 0x31, 0x35, 0x31, 0x37, 0x44, 0x54, 0x61, 0x62, 0x62,
		0x79, 0x52, 0x2d, 0x54, 0x56, 0x42, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x52, 0x43, 0x41, 0x20, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x43, 0x54, 0x36, 0x35, 0x31, 0x33, 0x57, 0x38, 0x37,
		0x47, 0x61, 0x6c, 0x69, 0x6c, 0x65, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x2e, 0x35,
		0x22, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x72, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x56, 0x6f, 0x79,
		0x61, 0x67, 0x65, 0x72, 0x20, 0x49, 0x49, 0x49, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x52, 0x43, 0x54,
		0x36, 0x37, 0x37, 0x33, 0x57, 0x32, 0x32, 0x42, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x72, 0x20,
		0x49, 0x49, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x20, 0x31, 0x30, 0x2e,
		0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x32, 0x30, 0x33, 0x57, 0x34, 0x36, 0x4c, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x30, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x49, 0x49, 0x52, 0x43,
		0x54, 0x36, 0x41, 0x30, 0x36, 0x50, 0x32, 0x32, 0x45, 0x6e, 0x64, 0x65, 0x61, 0x76, 0x6f, 0x72,
		0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x48, 0x44, 0x56, 0x69, 0x6b, 0x69, 0x6e, 0x67, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x36, 0x30, 0x33,
		0x57, 0x34, 0x37, 0x4d, 0x37, 0x56, 0x69, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x49, 0x49, 0x20, 0x31,
		0x30, 0x2e, 0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x36, 0x31, 0x33, 0x57, 0x32, 0x33, 0x50, 0x44,
		0x65, 0x6c, 0x74, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31, 0x2e, 0x36, 0x22, 0x52, 0x43,
		0x54, 0x24, 0x31, 0x52, 0x43, 0x24, 0x31, 0x52, 0x45, 0x44, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x67,
		0x65, 0x6e, 0x20, 0x4f, 0x6e, 0x65, 0x52, 0x45, 0x47, 0x41, 0x4c, 0x52, 0x49, 0x4d, 0x42, 0x6c,
		0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x44, 0x54, 0x45, 0x4b, 0x36, 0x30, 0x4b,
		0x45, 0x59, 0x6f, 0x6e, 0x65, 0x42, 0x42, 0x43, 0x31, 0x30, 0x30, 0x2d, 0x31, 0x4d, 0x6f, 0x74,
		0x69, 0x6f, 0x6e, 0x4b, 0x45, 0x59, 0x32, 0x20, 0x4c, 0x45, 0x4b, 0x45, 0x59, 0x32, 0x42, 0x42,
		0x46, 0x31, 0x30, 0x30, 0x2d, 0x38, 0x4b, 0x45, 0x59, 0x32, 0x20, 0x53, 0x69, 0x6c, 0x76, 0x65,
		0x72, 0x42, 0x42, 0x46, 0x31, 0x30, 0x30, 0x2d, 0x39, 0x4b, 0x45, 0x59, 0x32, 0x20, 0x42, 0x6c,
		0x61, 0x63, 0x6b, 0x42, 0x42, 0x47, 0x31, 0x30, 0x30, 0x2d, 0x31, 0x42, 0x42, 0x48, 0x31, 0x30,
		0x30, 0x2d, 0x31, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x20, 0x58, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x50, 0x72, 0x69, 0x76, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42,
		0x65, 0x72, 0x72, 0x79, 0x20, 0x44, 0x54, 0x45, 0x4b, 0x35, 0x30, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72,
		0x72, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x6f, 0x6f, 0x6b, 0x39, 0x33, 0x30, 0x30, 0x43,
		0x75, 0x72, 0x76, 0x65, 0x20, 0x33, 0x47, 0x20, 0x39, 0x33, 0x30, 0x30, 0x43, 0x75, 0x72, 0x76,
		0x65, 0x20, 0x24, 0x31, 0x39, 0x36, 0x33, 0x30, 0x54, 0x6f, 0x75, 0x72, 0x20, 0x39, 0x36, 0x33,
		0x30, 0x39, 0x37, 0x32, 0x30, 0x54, 0x6f, 0x72, 0x63, 0x68, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61,
		0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x52, 0x4f, 0x41, 0x44, 0x4d, 0x41, 0x58, 0x46, 0x6f,
		0x72, 0x74, 0x69, 0x75, 0x73, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x37, 0x52, 0x4f, 0x69, 0x4b,
		0x52, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x63, 0x6b, 0x20,
		0x24, 0x31, 0x70, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x32, 0x50, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x20,
		0x32, 0x52, 0x61, 0x6b, 0x75, 0x74, 0x65, 0x6e, 0x5a, 0x52, 0x30, 0x31, 0x42, 0x69, 0x67, 0x33,
		0x39, 0x31, 0x37, 0x4a, 0x52, 0x42, 0x69, 0x67, 0x20, 0x53, 0x50, 0x37, 0x31, 0x30, 0x48, 0x61,
		0x6e, 0x64, 0x43, 0x33, 0x33, 0x30, 0x43, 0x33, 0x33, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x52,
		0x61, 0x6d, 0x6f, 0x73, 0x4d, 0x4f, 0x53, 0x31, 0x6d, 0x61, 0x78, 0x4d, 0x4f, 0x53, 0x31, 0x20,
		0x4d, 0x61, 0x78, 0x57, 0x32, 0x32, 0x50, 0x52, 0x4f, 0x20, 0x33, 0x47, 0x57, 0x32, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x52, 0x61, 0x73, 0x70, 0x62, 0x65, 0x72, 0x72, 0x79, 0x52,
		0x61, 0x76, 0x6f, 0x7a, 0x52, 0x61, 0x79, 0x6c, 0x61, 0x6e, 0x64, 0x7a, 0x58, 0x50, 0x4f, 0x57,
		0x45, 0x52, 0x5f, 0x50, 0x36, 0x30, 0x30, 0x30, 0x58, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50,
		0x36, 0x30, 0x30, 0x30, 0x52, 0x61, 0x7a, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x32,
		0x52, 0x65, 0x61, 0x63, 0x68, 0x52, 0x65, 0x61, 0x64, 0x62, 0x6f, 0x79, 0x43, 0x31, 0x38, 0x20,
		0x4d, 0x61, 0x78, 0x43, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x65,
		0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x30, 0x30, 0x47,
		0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x20, 0x53, 0x45, 0x51, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x4d, 0x58, 0x33, 0x36, 0x36, 0x33, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x52, 0x4d, 0x58, 0x31, 0x38, 0x32, 0x37, 0x33, 0x69, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x52,
		0x4d, 0x58, 0x31, 0x39, 0x39, 0x33, 0x58, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32,
		0x31, 0x31, 0x37, 0x51, 0x32, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x37, 0x33, 0x51,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32, 0x32, 0x30, 0x35, 0x51, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x31, 0x36, 0x31, 0x51, 0x33, 0x20, 0x35,
		0x47, 0x52, 0x4d, 0x58, 0x33, 0x34, 0x36, 0x32, 0x51, 0x33, 0x74, 0x52, 0x4d, 0x58, 0x33, 0x33,
		0x37, 0x32, 0x51, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x33, 0x34, 0x37, 0x38, 0x51,
		0x35, 0x52, 0x4d, 0x58, 0x33, 0x35, 0x37, 0x34, 0x51, 0x35, 0x69, 0x58, 0x37, 0x20, 0x35, 0x47,
		0x58, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x58, 0x54, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x35, 0x69, 0x52, 0x4d, 0x58, 0x31, 0x39, 0x32, 0x39, 0x35, 0x73, 0x36, 0x69, 0x52, 0x4d, 0x58,
		0x32, 0x30, 0x30, 0x32, 0x36, 0x53, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32, 0x31,
		0x30, 0x33, 0x37, 0x49, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x37, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x31,
		0x31, 0x35, 0x58, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65,
		0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x4d, 0x58, 0x33, 0x30, 0x38, 0x31, 0x52,
		0x4d, 0x58, 0x33, 0x30, 0x38, 0x35, 0x38, 0x69, 0x52, 0x4d, 0x58, 0x33, 0x33, 0x38, 0x31, 0x38,
		0x73, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x34, 0x31, 0x38, 0x20, 0x35, 0x47, 0x39, 0x69, 0x52, 0x4d,
		0x58, 0x33, 0x36, 0x31, 0x32, 0x39, 0x69, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x35, 0x32,
		0x31, 0x39, 0x20, 0x35, 0x47, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x36, 0x31, 0x37, 0x31, 0x30, 0x73,
		0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b,
		0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x34, 0x31, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x2b, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x34, 0x30, 0x31, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x2b, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x37, 0x31, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x35, 0x53, 0x43, 0x31, 0x31, 0x43, 0x31, 0x32, 0x43, 0x31, 0x35, 0x43, 0x31, 0x35,
		0x20, 0x51, 0x75, 0x61, 0x6c, 0x63, 0x6f, 0x6d, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f,
		0x6e, 0x43, 0x31, 0x37, 0x43, 0x32, 0x30, 0x43, 0x32, 0x31, 0x43, 0x32, 0x31, 0x59, 0x43, 0x32,
		0x35, 0x43, 0x32, 0x35, 0x73, 0x43, 0x32, 0x35, 0x59, 0x43, 0x33, 0x30, 0x52, 0x4d, 0x58, 0x33,
		0x36, 0x39, 0x30, 0x43, 0x33, 0x30, 0x73, 0x43, 0x33, 0x33, 0x43, 0x33, 0x35, 0x52, 0x4d, 0x58,
		0x33, 0x37, 0x31, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x33, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x37,
		0x36, 0x30, 0x43, 0x35, 0x33, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x33, 0x31, 0x43, 0x31, 0x31, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x30, 0x39, 0x47, 0x54, 0x20,
		0x33, 0x47, 0x54, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x54, 0x20, 0x32, 0x52, 0x4d, 0x58,
		0x33, 0x35, 0x35, 0x31, 0x47, 0x54, 0x20, 0x32, 0x20, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65,
		0x72, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x54,
		0x20, 0x4e, 0x65, 0x6f, 0x20, 0x32, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x47, 0x54,
		0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x35, 0x30, 0x57, 0x47, 0x54, 0x20, 0x4e, 0x65,
		0x6f, 0x20, 0x33, 0x54, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x32, 0x54, 0x47, 0x54, 0x20,
		0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x54,
		0x20, 0x4e, 0x65, 0x6f, 0x20, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20,
		0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x39, 0x33, 0x4e, 0x61, 0x72,
		0x7a, 0x6f, 0x20, 0x32, 0x30, 0x52, 0x4d, 0x58, 0x32, 0x30, 0x35, 0x30, 0x4e, 0x61, 0x72, 0x7a,
		0x6f, 0x20, 0x32, 0x30, 0x41, 0x52, 0x4d, 0x58, 0x33, 0x31, 0x37, 0x31, 0x4e, 0x61, 0x72, 0x7a,
		0x6f, 0x20, 0x33, 0x30, 0x41, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x35, 0x36, 0x4e, 0x61, 0x72, 0x7a,
		0x6f, 0x20, 0x33, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x34, 0x32, 0x4e, 0x61, 0x72, 0x7a, 0x6f,
		0x20, 0x33, 0x30, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x34, 0x33, 0x30, 0x4e, 0x61, 0x72,
		0x7a, 0x6f, 0x20, 0x35, 0x30, 0x41, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x38, 0x36, 0x4e, 0x61, 0x72,
		0x7a, 0x6f, 0x20, 0x35, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x35, 0x37, 0x32, 0x4e, 0x61, 0x72, 0x7a,
		0x6f, 0x20, 0x35, 0x30, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x33, 0x39, 0x35, 0x4e, 0x61,
		0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x33, 0x33, 0x39,
		0x36, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47,
		0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x41, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52,
		0x4d, 0x58, 0x33, 0x32, 0x33, 0x35, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x69, 0x52,
		0x4d, 0x58, 0x33, 0x35, 0x30, 0x36, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x69, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x58, 0x35, 0x30, 0x20, 0x35, 0x47, 0x58, 0x35, 0x30, 0x74, 0x20,
		0x35, 0x47, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65,
		0x72, 0x58, 0x33, 0x20, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x52, 0x4d,
		0x58, 0x32, 0x30, 0x38, 0x33, 0x51, 0x33, 0x73, 0x56, 0x35, 0x20, 0x35, 0x47, 0x56, 0x33, 0x20,
		0x35, 0x47, 0x56, 0x31, 0x31, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x31, 0x32, 0x35, 0x56,
		0x31, 0x31, 0x73, 0x20, 0x35, 0x47, 0x56, 0x31, 0x33, 0x20, 0x35, 0x47, 0x56, 0x31, 0x35, 0x20,
		0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x35, 0x37, 0x31, 0x56, 0x32, 0x33, 0x52, 0x4d, 0x58, 0x33,
		0x34, 0x37, 0x35, 0x56, 0x32, 0x35, 0x52, 0x4d, 0x58, 0x32, 0x32, 0x30, 0x32, 0x47, 0x54, 0x20,
		0x35, 0x47, 0x50, 0x61, 0x64, 0x50, 0x61, 0x64, 0x20, 0x58, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x34, 0x4b, 0x20, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53,
		0x74, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x64, 0x62, 0x65,
		0x61, 0x6e, 0x52, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x57, 0x69, 0x7a, 0x70, 0x61, 0x64, 0x20, 0x56,
		0x61, 0x6c, 0x75, 0x65, 0x72, 0x20, 0x56, 0x38, 0x52, 0x65, 0x64, 0x77, 0x61, 0x79, 0x72, 0x65,
		0x64, 0x77, 0x61, 0x79, 0x31, 0x30, 0x5f, 0x6c, 0x69, 0x74, 0x65, 0x31, 0x30, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x72, 0x65, 0x64, 0x77, 0x61, 0x79, 0x37, 0x5f, 0x70, 0x72, 0x6f, 0x52, 0x65, 0x64,
		0x77, 0x61, 0x79, 0x5f, 0x37, 0x52, 0x65, 0x65, 0x64, 0x65, 0x72, 0x41, 0x38, 0x69, 0x2d, 0x51,
		0x32, 0x41, 0x38, 0x69, 0x20, 0x51, 0x32, 0x4d, 0x31, 0x30, 0x53, 0x50, 0x6c, 0x75, 0x73, 0x4d,
		0x31, 0x30, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x20, 0x47, 0x6f, 0x24, 0x31, 0x20, 0x47, 0x6f, 0x4d,
		0x31, 0x30, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x31, 0x32, 0x43, 0x75, 0x72, 0x76, 0x65, 0x50, 0x31,
		0x32, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20,
		0x4d, 0x61, 0x78, 0x20, 0x50, 0x4c, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75, 0x65, 0x5f,
		0x4d, 0x61, 0x6b, 0x73, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x6b,
		0x73, 0x50, 0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x31,
		0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x31, 0x33, 0x20, 0x42,
		0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x31,
		0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20,
		0x4d, 0x61, 0x78, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x24, 0x31, 0x29, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x28, 0x32, 0x30, 0x32, 0x24, 0x31, 0x29, 0x50, 0x31, 0x33, 0x20,
		0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75, 0x65,
		0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x31, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x36, 0x34, 0x47, 0x42, 0x53, 0x31, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x6c, 0x4e, 0x41,
		0x54, 0x52, 0x65, 0x6d, 0x64, 0x75, 0x6e, 0x52, 0x44, 0x24, 0x31, 0x52, 0x65, 0x76, 0x6f, 0x52,
		0x65, 0x76, 0x6f, 0x5f, 0x59, 0x6f, 0x75, 0x70, 0x6c, 0x75, 0x73, 0x59, 0x6f, 0x75, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x52, 0x65, 0x76, 0x6f, 0x6d, 0x6f, 0x76, 0x69, 0x6c, 0x53, 0x36, 0x35, 0x32,
		0x33, 0x53, 0x32, 0x31, 0x52, 0x69, 0x63, 0x6f, 0x68, 0x72, 0x69, 0x63, 0x6f, 0x68, 0x5f, 0x72,
		0x69, 0x63, 0x6f, 0x68, 0x5f, 0x6d, 0x66, 0x70, 0x61, 0x70, 0x6e, 0x6c, 0x4d, 0x46, 0x50, 0x52,
		0x69, 0x6b, 0x6f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x4d, 0x4b, 0x24, 0x31, 0x52, 0x69, 0x6e, 0x6e,
		0x6f, 0x52, 0x69, 0x74, 0x6d, 0x69, 0x78, 0x52, 0x4d, 0x44, 0x2d, 0x24, 0x31, 0x52, 0x4d, 0x50,
		0x2d, 0x24, 0x31, 0x52, 0x69, 0x74, 0x7a, 0x76, 0x69, 0x76, 0x61, 0x53, 0x35, 0x30, 0x30, 0x43,
		0x52, 0x69, 0x76, 0x69, 0x65, 0x72, 0x61, 0x52, 0x69, 0x76, 0x6f, 0x53, 0x54, 0x4f, 0x52, 0x4d,
		0x5f, 0x53, 0x38, 0x70, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x53, 0x38, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x54, 0x4f, 0x52, 0x4d, 0x5f, 0x53, 0x38, 0x53, 0x74, 0x6f, 0x72,
		0x6d, 0x20, 0x53, 0x38, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x50, 0x5a, 0x24, 0x31,
		0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x52, 0x58, 0x24, 0x31, 0x52, 0x68, 0x79, 0x74,
		0x68, 0x6d, 0x20, 0x52, 0x58, 0x24, 0x31, 0x52, 0x69, 0x7a, 0x7a, 0x65, 0x6e, 0x52, 0x6f, 0x61,
		0x64, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x61, 0x64, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x20,
		0x43, 0x68, 0x61, 0x6e, 0x67, 0x41, 0x6e, 0x20, 0x53, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x41, 0x6e,
		0x20, 0x53, 0x52, 0x6f, 0x61, 0x6d, 0x20, 0x43, 0x61, 0x74, 0x52, 0x6f, 0x6b, 0x69, 0x74, 0x49,
		0x4f, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x4f, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x4f, 0x20,
		0x33, 0x44, 0x52, 0x6f, 0x6b, 0x75, 0x33, 0x39, 0x33, 0x30, 0x58, 0x45, 0x78, 0x70, 0x72, 0x65,
		0x73, 0x73, 0x52, 0x6f, 0x6b, 0x75, 0x34, 0x36, 0x34, 0x30, 0x58, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x20, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6d, 0x62, 0x69, 0x63, 0x61, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x20,
		0x34, 0x4b, 0x20, 0x76, 0x30, 0x31, 0x52, 0x6f, 0x73, 0x73, 0x26, 0x4d, 0x6f, 0x6f, 0x72, 0x52,
		0x4d, 0x24, 0x31, 0x2d, 0x24, 0x32, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x76, 0x65, 0x72,
		0x50, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x20, 0x51, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x6b,
		0x79, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x20, 0x33, 0x47, 0x24, 0x31, 0x20, 0x37, 0x2e, 0x38,
		0x35, 0x22, 0x20, 0x33, 0x47, 0x52, 0x6f, 0x79, 0x51, 0x75, 0x65, 0x65, 0x6e, 0x42, 0x69, 0x73,
		0x68, 0x6f, 0x70, 0x2d, 0x52, 0x51, 0x34, 0x35, 0x31, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x52,
		0x6f, 0x79, 0x6f, 0x6c, 0x65, 0x46, 0x6c, 0x65, 0x78, 0x50, 0x61, 0x69, 0x20, 0x32, 0x46, 0x6c,
		0x65, 0x78, 0x50, 0x61, 0x69, 0x52, 0x75, 0x67, 0x47, 0x65, 0x61, 0x72, 0x52, 0x47, 0x37, 0x32,
		0x35, 0x52, 0x75, 0x67, 0x67, 0x65, 0x54, 0x65, 0x63, 0x68, 0x52, 0x75, 0x67, 0x67, 0x65, 0x78,
		0x52, 0x68, 0x69, 0x6e, 0x6f, 0x20, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x69, 0x6f, 0x4d,
		0x36, 0x37, 0x31, 0x4d, 0x34, 0x43, 0x6f, 0x6c, 0x61, 0x20, 0x34, 0x47, 0x52, 0x75, 0x6e, 0x62,
		0x6f, 0x46, 0x31, 0x2d, 0x54, 0x54, 0x52, 0x75, 0x6e, 0x62, 0x6f, 0x50, 0x32, 0x52, 0x75, 0x70,
		0x61, 0x50, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64, 0x20, 0x41, 0x35, 0x58, 0x52, 0x79, 0x74, 0x65,
		0x53, 0x2d, 0x54, 0x45, 0x4c, 0x4c, 0x53, 0x32, 0x54, 0x65, 0x6c, 0x53, 0x41, 0x4e, 0x59, 0x53,
		0x41, 0x4e, 0x59, 0x20, 0x56, 0x38, 0x53, 0x41, 0x4e, 0x59, 0x20, 0x56, 0x38, 0x20, 0x50, 0x72,
		0x6f, 0x56, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x45, 0x42, 0x42, 0x45, 0x53, 0x45, 0x45, 0x57,
		0x4f, 0x53, 0x45, 0x4d, 0x50, 0x20, 0x54, 0x43, 0x4c, 0x4c, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x47, 0x4f, 0x21, 0x20, 0x33, 0x43, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x4f, 0x21, 0x20, 0x33,
		0x43, 0x53, 0x46, 0x52, 0x53, 0x74, 0x61, 0x72, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x20, 0x32, 0x53,
		0x74, 0x61, 0x72, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x58,
		0x74, 0x72, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x33, 0x53,
		0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72,
		0x61, 0x69, 0x6c, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72,
		0x61, 0x69, 0x6c, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x41,
		0x75, 0x72, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x61, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x41, 0x75, 0x72, 0x61, 0x53, 0x74, 0x61, 0x72, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20,
		0x32, 0x53, 0x74, 0x61, 0x72, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x33, 0x53, 0x74, 0x61, 0x72,
		0x53, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20,
		0x36, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x34, 0x53, 0x74, 0x61,
		0x72, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x33, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64,
		0x69, 0x63, 0x74, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64,
		0x64, 0x69, 0x63, 0x74, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74,
		0x53, 0x74, 0x61, 0x72, 0x54, 0x65, 0x78, 0x74, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x54, 0x65,
		0x78, 0x74, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x61, 0x75, 0x74, 0x65, 0x20, 0x32, 0x53, 0x74, 0x61,
		0x72, 0x4e, 0x61, 0x75, 0x74, 0x65, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x61, 0x75,
		0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x54, 0x61, 0x62, 0x53, 0x47, 0x49, 0x4e, 0x58, 0x31, 0x30,
		0x53, 0x4b, 0x20, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6e, 0x64, 0x42, 0x48, 0x58, 0x2d,
		0x55, 0x48, 0x32, 0x30, 0x30, 0x53, 0x4b, 0x47, 0x53, 0x4b, 0x4b, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x4c, 0x59, 0x4e, 0x58, 0x5f, 0x4c, 0x55, 0x58, 0x45, 0x4c, 0x79, 0x6e, 0x78, 0x20,
		0x4c, 0x75, 0x78, 0x65, 0x48, 0x79, 0x70, 0x65, 0x72, 0x20, 0x58, 0x20, 0x44, 0x72, 0x61, 0x67,
		0x6f, 0x6e, 0x48, 0x59, 0x50, 0x45, 0x52, 0x20, 0x58, 0x20, 0x42, 0x4c, 0x41, 0x44, 0x45, 0x20,
		0x49, 0x49, 0x48, 0x79, 0x70, 0x65, 0x72, 0x20, 0x58, 0x20, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x49, 0x49, 0x48, 0x59, 0x50, 0x45, 0x52, 0x20, 0x58, 0x20, 0x42, 0x4c, 0x41, 0x44, 0x45, 0x48,
		0x79, 0x70, 0x65, 0x72, 0x20, 0x58, 0x20, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x53, 0x4d, 0x41, 0x52,
		0x54, 0x45, 0x43, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x61, 0x62, 0x53, 0x34, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x61, 0x62, 0x20, 0x53, 0x34, 0x53, 0x4e, 0x41, 0x4d, 0x49, 0x53, 0x4f, 0x4c, 0x45, 0x50,
		0x6f, 0x70, 0x20, 0x53, 0x24, 0x31, 0x53, 0x4f, 0x4c, 0x4f, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72,
		0x65, 0x5f, 0x55, 0x35, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
		0x20, 0x55, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x5f,
		0x55, 0x35, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x20, 0x55, 0x35, 0x53, 0x4f, 0x53, 0x48,
		0x53, 0x6f, 0x73, 0x68, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x50, 0x43, 0x47, 0x52, 0x41, 0x56,
		0x49, 0x54, 0x59, 0x5f, 0x4f, 0x43, 0x54, 0x41, 0x43, 0x4f, 0x52, 0x45, 0x47, 0x72, 0x61, 0x76,
		0x69, 0x74, 0x79, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x72, 0x61, 0x76,
		0x69, 0x74, 0x79, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x24, 0x31, 0x47, 0x47, 0x72,
		0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x47, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79,
		0x20, 0x4d, 0x61, 0x78, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x20, 0x50, 0x52, 0x4f, 0x47,
		0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54,
		0x59, 0x20, 0x53, 0x45, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x53, 0x45, 0x47, 0x52,
		0x41, 0x56, 0x49, 0x54, 0x59, 0x2d, 0x32, 0x2d, 0x4d, 0x41, 0x58, 0x47, 0x72, 0x61, 0x76, 0x69,
		0x74, 0x79, 0x20, 0x32, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20,
		0x32, 0x47, 0x6c, 0x6f, 0x77, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x79,
		0x65, 0x61, 0x72, 0x4c, 0x37, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x37, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x46, 0x4c, 0x4f, 0x57, 0x20, 0x37, 0x46, 0x6c, 0x6f, 0x77, 0x20, 0x37, 0x4c,
		0x61, 0x69, 0x6b, 0x61, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x50, 0x4c,
		0x55, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x50, 0x43, 0x20,
		0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x4d, 0x41,
		0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d,
		0x41, 0x52, 0x54, 0x53, 0x50, 0x43, 0x20, 0x47, 0x45, 0x4e, 0x20, 0x4d, 0x41, 0x58, 0x47, 0x65,
		0x6e, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x50, 0x43, 0x20, 0x47, 0x45, 0x4e, 0x20, 0x4c, 0x49, 0x54,
		0x45, 0x47, 0x65, 0x6e, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x50, 0x43, 0x20, 0x47, 0x45, 0x4e,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x65, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x50, 0x43,
		0x20, 0x47, 0x45, 0x4e, 0x47, 0x65, 0x6e, 0x53, 0x50, 0x43, 0x5f, 0x41, 0x4c, 0x49, 0x45, 0x4e,
		0x5f, 0x53, 0x54, 0x49, 0x43, 0x4b, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x53, 0x74, 0x69, 0x63,
		0x6b, 0x53, 0x50, 0x43, 0x5f, 0x41, 0x4c, 0x49, 0x45, 0x4e, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x53,
		0x51, 0x4f, 0x4f, 0x4c, 0x56, 0x24, 0x31, 0x53, 0x53, 0x4b, 0x59, 0x53, 0x54, 0x46, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x46, 0x72, 0x61, 0x63, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x69, 0x67,
		0x69, 0x6e, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x20, 0x50, 0x4c,
		0x55, 0x53, 0x41, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x45, 0x52,
		0x49, 0x41, 0x4c, 0x41, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4d,
		0x49, 0x4e, 0x49, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x4c, 0x4f,
		0x43, 0x4b, 0x20, 0x33, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x33,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x20, 0x33, 0x42, 0x6c, 0x6f, 0x63,
		0x6b, 0x20, 0x33, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x20, 0x47, 0x4f, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
		0x20, 0x47, 0x6f, 0x53, 0x4c, 0x41, 0x59, 0x20, 0x49, 0x49, 0x53, 0x6c, 0x61, 0x79, 0x20, 0x49,
		0x49, 0x4a, 0x6f, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x54, 0x47, 0x20, 0x54, 0x65, 0x6c, 0x65,
		0x63, 0x6f, 0x6d, 0x53, 0x54, 0x4b, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x38, 0x4c, 0x69, 0x66, 0x65,
		0x20, 0x37, 0x53, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x32, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x7a,
		0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x32, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x79, 0x6e,
		0x63, 0x20, 0x35, 0x7a, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
		0x72, 0x74, 0x65, 0x72, 0x20, 0x31, 0x53, 0x54, 0x52, 0x4f, 0x4e, 0x47, 0x4c, 0x45, 0x41, 0x50,
		0x2d, 0x53, 0x31, 0x53, 0x55, 0x4e, 0x57, 0x49, 0x4e, 0x44, 0x53, 0x6b, 0x79, 0x20, 0x24, 0x31,
		0x20, 0x24, 0x32, 0x20, 0x33, 0x47, 0x53, 0x4b, 0x59, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x37,
		0x30, 0x53, 0x6b, 0x79, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x37, 0x30, 0x53, 0x6b, 0x79, 0x20,
		0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x53, 0x55, 0x4e, 0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31, 0x53,
		0x57, 0x49, 0x53, 0x53, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x53, 0x43, 0x48, 0x4f,
		0x4e, 0x20, 0x52, 0x39, 0x50, 0x52, 0x41, 0x24, 0x31, 0x5a, 0x55, 0x52, 0x37, 0x32, 0x32, 0x4d,
		0x5a, 0x37, 0x32, 0x20, 0x67, 0x6f, 0x5a, 0x55, 0x52, 0x24, 0x31, 0x53, 0x59, 0x48, 0x59, 0x6f,
		0x75, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x53, 0x61, 0x66, 0x61, 0x72, 0x69, 0x63, 0x6f, 0x6d, 0x4e,
		0x45, 0x4f, 0x4e, 0x5f, 0x52, 0x41, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x4e, 0x65, 0x6f, 0x6e, 0x20,
		0x52, 0x61, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x52, 0x61, 0x79, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x45, 0x4f, 0x4e, 0x5f, 0x52, 0x41, 0x59, 0x4e, 0x65, 0x6f,
		0x6e, 0x20, 0x52, 0x61, 0x79, 0x4e, 0x45, 0x4f, 0x4e, 0x20, 0x52, 0x41, 0x59, 0x20, 0x32, 0x4e,
		0x65, 0x6f, 0x6e, 0x20, 0x52, 0x61, 0x79, 0x20, 0x32, 0x4e, 0x45, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f,
		0x56, 0x41, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x4e, 0x45, 0x4f, 0x4e, 0x20,
		0x50, 0x4c, 0x55, 0x53, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x45, 0x4f,
		0x4e, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e,
		0x65, 0x6f, 0x6e, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x53, 0x46, 0x43, 0x53, 0x54, 0x42, 0x32,
		0x4c, 0x49, 0x54, 0x45, 0x53, 0x54, 0x42, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x61, 0x67,
		0x65, 0x6d, 0x44, 0x49, 0x33, 0x38, 0x34, 0x5f, 0x55, 0x48, 0x44, 0x5f, 0x54, 0x4b, 0x43, 0x44,
		0x49, 0x33, 0x38, 0x34, 0x44, 0x49, 0x57, 0x33, 0x35, 0x30, 0x5f, 0x54, 0x50, 0x44, 0x49, 0x57,
		0x33, 0x35, 0x30, 0x53, 0x61, 0x69, 0x65, 0x74, 0x53, 0x69, 0x63, 0x75, 0x72, 0x6f, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x47, 0x54, 0x2d, 0x42, 0x39, 0x31, 0x35, 0x30, 0x48,
		0x6f, 0x6d, 0x65, 0x20, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x4d, 0x54, 0x2d, 0x45, 0x35, 0x30, 0x31,
		0x35, 0x4d, 0x61, 0x70, 0x6c, 0x65, 0x20, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x31, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x31, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x37, 0x22,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x37, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x34,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x4e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x37, 0x2e, 0x37, 0x22, 0x53, 0x43, 0x2d, 0x30, 0x31, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x37, 0x22, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x76, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x38, 0x2e,
		0x34, 0x22, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x32,
		0x30, 0x31, 0x34, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x32, 0x30, 0x31, 0x34, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x32, 0x30, 0x31, 0x34, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x20, 0x31,
		0x32, 0x2e, 0x32, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32,
		0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50,
		0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36,
		0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50,
		0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x77,
		0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x41, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20, 0x4c, 0x54,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x38, 0x2e, 0x37,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x38,
		0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x38, 0x20, 0x31,
		0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x53, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x34, 0x20, 0x31,
		0x30, 0x2e, 0x35, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x34, 0x20, 0x31, 0x30, 0x2e,
		0x35, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x35, 0x65,
		0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x53, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x31, 0x30, 0x2e,
		0x35, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20,
		0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x34,
		0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x35,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x53, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x38, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x31, 0x34, 0x2e, 0x36, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x33, 0x20, 0x56, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20,
		0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4c,
		0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20, 0x2b, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65,
		0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f,
		0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x31, 0x30, 0x2e,
		0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x53, 0x32, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x32,
		0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x32, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x33, 0x20, 0x39, 0x2e,
		0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x33, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34,
		0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x53, 0x37, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x2b, 0x20, 0x31, 0x32, 0x2e,
		0x34, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x53, 0x37, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22,
		0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x37, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x46, 0x45, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22,
		0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x37, 0x20, 0x46, 0x45, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x46, 0x45, 0x20, 0x31, 0x32,
		0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x31, 0x34, 0x2e, 0x36,
		0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x38, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x38, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41,
		0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20,
		0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20,
		0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x39, 0x2e, 0x36,
		0x22, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45,
		0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x34, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x38, 0x2e, 0x30,
		0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69,
		0x76, 0x65, 0x20, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20,
		0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63,
		0x74, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32,
		0x2e, 0x32, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x51, 0x53,
		0x4d, 0x2d, 0x52, 0x38, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34, 0x34, 0x6d, 0x6d,
		0x53, 0x4d, 0x2d, 0x56, 0x37, 0x30, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47,
		0x65, 0x61, 0x72, 0x53, 0x4d, 0x2d, 0x52, 0x33, 0x35, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x46, 0x69, 0x74, 0x53, 0x4d, 0x2d, 0x52, 0x33, 0x38,
		0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x32, 0x53,
		0x53, 0x4d, 0x2d, 0x52, 0x33, 0x38, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47,
		0x65, 0x61, 0x72, 0x20, 0x32, 0x20, 0x4e, 0x65, 0x6f, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x32, 0x35,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74,
		0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d,
		0x2d, 0x52, 0x38, 0x33, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x53,
		0x4d, 0x2d, 0x52, 0x38, 0x33, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34, 0x30, 0x6d, 0x6d,
		0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x36, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52,
		0x38, 0x37, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x34, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x20, 0x34, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x35, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x35, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x53,
		0x4d, 0x2d, 0x52, 0x39, 0x32, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x30, 0x6d, 0x6d, 0x53, 0x4d, 0x2d,
		0x52, 0x39, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38,
		0x30, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34,
		0x36, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x39, 0x35, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x20, 0x34, 0x36, 0x6d,
		0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57,
		0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x31, 0x35,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x32, 0x6d,
		0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x35, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53,
		0x4d, 0x2d, 0x52, 0x36, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61,
		0x72, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x34, 0x33, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52,
		0x37, 0x36, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53,
		0x33, 0x20, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x20, 0x34, 0x36, 0x6d, 0x6d, 0x53,
		0x4d, 0x2d, 0x52, 0x37, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61,
		0x72, 0x20, 0x53, 0x32, 0x20, 0x34, 0x33, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x33, 0x30,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x32, 0x20, 0x34,
		0x34, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x35, 0x30, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53,
		0x20, 0x34, 0x30, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x33, 0x32, 0x47, 0x65, 0x61, 0x72,
		0x20, 0x53, 0x32, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x36, 0x35, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x33, 0x20, 0x46, 0x72,
		0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x20, 0x33, 0x33, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37,
		0x37, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x33,
		0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x53, 0x4d, 0x2d,
		0x52, 0x38, 0x34, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x33, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38,
		0x34, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33,
		0x20, 0x34, 0x35, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x35, 0x30, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x53,
		0x4d, 0x2d, 0x52, 0x38, 0x35, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x20, 0x33, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x20, 0x34, 0x47, 0x47, 0x65, 0x61, 0x72,
		0x20, 0x4c, 0x69, 0x76, 0x65, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x20, 0x48, 0x75, 0x62, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x6c, 0x70, 0x68, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x68, 0x61, 0x74,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59,
		0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x70, 0x69, 0x63, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x33,
		0x4f, 0x6d, 0x6e, 0x69, 0x61, 0x20, 0x49, 0x49, 0x4f, 0x6d, 0x6e, 0x69, 0x61, 0x20, 0x4d, 0x4f,
		0x6d, 0x6e, 0x69, 0x61, 0x20, 0x57, 0x4f, 0x6d, 0x6e, 0x69, 0x61, 0x20, 0x37, 0x46, 0x6f, 0x63,
		0x75, 0x73, 0x20, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x46, 0x6f, 0x63,
		0x75, 0x73, 0x20, 0x53, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63,
		0x65, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63,
		0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x20, 0x44, 0x75, 0x6f, 0x73,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x20, 0x4e, 0x65,
		0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x20, 0x48, 0x44, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x6d, 0x69, 0x6e, 0x69,
		0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x48,
		0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x42, 0x65, 0x61, 0x6d, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x42, 0x65, 0x61, 0x6d, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x57, 0x69, 0x64, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x69, 0x64, 0x65, 0x20,
		0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x69, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x57, 0x69, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x45, 0x35,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x45, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x4c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20,
		0x47, 0x69, 0x6f, 0x72, 0x67, 0x69, 0x6f, 0x20, 0x41, 0x72, 0x6d, 0x61, 0x6e, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x20, 0x57, 0x69, 0x4d, 0x41, 0x58, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x52, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20,
		0x49, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x33,
		0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x6d,
		0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x56, 0x61, 0x6c,
		0x75, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x34, 0x20, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49,
		0x49, 0x49, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x4c, 0x54,
		0x45, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x54, 0x41, 0x52, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x59, 0x20, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x4b, 0x69, 0x74, 0x74, 0x79,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x46, 0x41, 0x4d, 0x45, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x77, 0x69,
		0x74, 0x68, 0x20, 0x4e, 0x46, 0x43, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x41, 0x4d,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x41, 0x4d, 0x45, 0x20, 0x44, 0x75, 0x6f,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x43, 0x45, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x43, 0x45, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x32,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x33, 0x20, 0x56, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x34, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x72,
		0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x35,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x36, 0x20,
		0x50, 0x72, 0x6f, 0x57, 0x61, 0x76, 0x65, 0x20, 0x49, 0x49, 0x57, 0x61, 0x76, 0x65, 0x20, 0x33,
		0x57, 0x61, 0x76, 0x65, 0x20, 0x59, 0x57, 0x61, 0x76, 0x65, 0x20, 0x4d, 0x57, 0x61, 0x76, 0x65,
		0x20, 0x35, 0x32, 0x35, 0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x33, 0x33, 0x57, 0x61, 0x76, 0x65,
		0x20, 0x35, 0x37, 0x38, 0x57, 0x61, 0x76, 0x65, 0x20, 0x37, 0x32, 0x33, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x7a, 0x6f, 0x6f, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4b, 0x20, 0x7a, 0x6f, 0x6f, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x56, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20,
		0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f,
		0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x20, 0x34, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20,
		0x4d, 0x61, 0x78, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x45, 0x58, 0x50, 0x52, 0x45, 0x53,
		0x53, 0x20, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x6d, 0x69,
		0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x2d, 0x53, 0x49, 0x4d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x44, 0x75,
		0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x35, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x35, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20,
		0x4b, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x36,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x36, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x36, 0x20, 0x45, 0x64, 0x67, 0x65, 0x2b, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x37, 0x20,
		0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x37, 0x20, 0x41, 0x63,
		0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x38, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x38, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x38, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x39, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x39, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x2b, 0x53, 0x43, 0x2d, 0x30,
		0x35, 0x4c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x2b, 0x20, 0x4f, 0x6c,
		0x79, 0x6d, 0x70, 0x69, 0x63, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x45, 0x64, 0x69, 0x74,
		0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x32, 0x30, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20,
		0x46, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20, 0x46, 0x45, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x2b,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x2b, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x46, 0x45, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x35, 0x47, 0x20, 0x4f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63,
		0x20, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x2b, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x32, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x32, 0x32, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x33, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x33, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x32, 0x33, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46,
		0x6c, 0x69, 0x70, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x74, 0x65,
		0x6c, 0x6c, 0x61, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65,
		0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x44, 0x69, 0x73, 0x63,
		0x6f, 0x76, 0x65, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x65, 0x6e, 0x74, 0x75,
		0x72, 0x61, 0x56, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x56, 0x69, 0x38, 0x36, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x76, 0x61, 0x6e, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x20, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x30, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x31, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x32, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x30, 0x33, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30,
		0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x34, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x30, 0x34, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30,
		0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x33, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x31, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x34, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x42, 0x75, 0x64, 0x64, 0x79, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x33, 0x34, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x35, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x32, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x32, 0x73, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36,
		0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x73, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x30, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x31, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x37, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x31,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x38, 0x20, 0x53, 0x74, 0x61, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x38, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x2b, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x39, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x39, 0x20, 0x53, 0x74, 0x61, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39,
		0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x30, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x31, 0x30, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x32, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x31, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x32, 0x31, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x30, 0x65, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x32, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x33, 0x20, 0x35,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x33, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x31,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x33, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33,
		0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x30, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x34, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x32, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x35, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x31, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x31, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x35, 0x33, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x35, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x35, 0x34, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x30,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x38, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x30, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x46, 0x30, 0x32, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x31,
		0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x31, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x46, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x32, 0x33, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x34, 0x31, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x46, 0x34, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x46, 0x35, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x36, 0x32,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4e, 0x65, 0x6f,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4c, 0x75, 0x6e, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x20, 0x6d, 0x69, 0x6e, 0x69,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x20,
		0x41, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x32, 0x20, 0x50, 0x75, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x4f, 0x72, 0x62,
		0x69, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x53, 0x6b, 0x79, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x41, 0x75, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x33, 0x20, 0x53, 0x74, 0x61, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x33, 0x20, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x33, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x35, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x35, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x35, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x35, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x36,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x36, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x34, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x34, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x38, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x2b, 0x20,
		0x28, 0x43, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x4d, 0x61,
		0x78, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x44, 0x75, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x37, 0x20, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x37, 0x20, 0x56, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x37, 0x53,
		0x4d, 0x2d, 0x4a, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x2d, 0x4a, 0x38, 0x20, 0x50, 0x72, 0x6f,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x39, 0x20,
		0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x39,
		0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4d, 0x2d, 0x41, 0x33, 0x32, 0x36, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x20, 0x35, 0x47, 0x53, 0x4d, 0x2d, 0x4d, 0x33,
		0x33, 0x36, 0x4b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x20, 0x32,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4d, 0x30, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x31, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x31, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x32, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4d, 0x30, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x30, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x31, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4d, 0x31, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x33,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x34, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4d, 0x32, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x31, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x32, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x42, 0x75, 0x64, 0x64, 0x79, 0x20, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4d, 0x33, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4d, 0x33, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x32, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x31, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x34, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x34, 0x32, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x35, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4d, 0x35, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x51, 0x75, 0x61,
		0x6e, 0x74, 0x75, 0x6d, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x35, 0x33,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x35, 0x34, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x36, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x57, 0x32, 0x30, 0x31, 0x24, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32,
		0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x57, 0x32, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x51, 0x75, 0x61, 0x6e,
		0x74, 0x75, 0x6d, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x6f, 0x6c, 0x64,
		0x65, 0x6e, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x52, 0x6f, 0x75, 0x6e, 0x64,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4f, 0x6e, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4f, 0x6e, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x37, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x37,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x35, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x43, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x43, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a,
		0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x5a, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x34, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x6f, 0x6c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x6f, 0x6c, 0x20, 0x32, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x6f, 0x6c, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x48, 0x61, 0x6c, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x6d, 0x70, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x6d,
		0x70, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x57, 0x32, 0x33, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a,
		0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20,
		0x46, 0x6f, 0x6c, 0x64, 0x20, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x46, 0x61, 0x6e, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x49, 0x49, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x56, 0x45, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47,
		0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28,
		0x54, 0x56, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20,
		0x4e, 0x65, 0x6f, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x34, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x65, 0x67, 0x61, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x65, 0x67, 0x61,
		0x20, 0x35, 0x2e, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x20,
		0x36, 0x2e, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x20, 0x35, 0x47, 0x41, 0x74, 0x69, 0x76, 0x20, 0x53, 0x45, 0x47, 0x72, 0x65, 0x61, 0x74,
		0x43, 0x61, 0x6c, 0x6c, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x33, 0x45, 0x32, 0x31, 0x35,
		0x32, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x33, 0x43, 0x68, 0x72,
		0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x43, 0x2d, 0x30,
		0x32, 0x43, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x2d, 0x54, 0x56, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x24, 0x31, 0x53, 0x43, 0x2d, 0x24, 0x31, 0x53, 0x43, 0x48, 0x2d, 0x24, 0x31, 0x53, 0x61,
		0x6d, 0x74, 0x65, 0x63, 0x68, 0x53, 0x61, 0x6d, 0x74, 0x72, 0x6f, 0x6e, 0x53, 0x61, 0x6e, 0x65,
		0x69, 0x4e, 0x38, 0x33, 0x4e, 0x39, 0x31, 0x38, 0x33, 0x31, 0x32, 0x44, 0x47, 0x31, 0x30, 0x31,
		0x53, 0x61, 0x6e, 0x6b, 0x65, 0x79, 0x54, 0x41, 0x42, 0x37, 0x41, 0x33, 0x47, 0x30, 0x35, 0x54,
		0x41, 0x42, 0x2d, 0x37, 0x41, 0x33, 0x47, 0x30, 0x35, 0x53, 0x61, 0x6e, 0x73, 0x75, 0x69, 0x53,
		0x35, 0x30, 0x35, 0x30, 0x32, 0x34, 0x53, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x42, 0x69, 0x54, 0x42,
		0x69, 0x5a, 0x20, 0x56, 0x35, 0x38, 0x47, 0x41, 0x41, 0x4d, 0x49, 0x49, 0x20, 0x47, 0x31, 0x47,
		0x41, 0x41, 0x4d, 0x49, 0x49, 0x48, 0x65, 0x78, 0x69, 0x6e, 0x20, 0x48, 0x32, 0x2d, 0x41, 0x43,
		0x61, 0x6e, 0x64, 0x79, 0x20, 0x55, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x72, 0x65, 0x61, 0x6d,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x30, 0x33, 0x41, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x4f,
		0x6e, 0x65, 0x48, 0x61, 0x6c, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x74, 0x6f, 0x6d, 0x61, 0x20, 0x41,
		0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x48, 0x6f, 0x6e, 0x67, 0x51, 0x69, 0x20, 0x48,
		0x51, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x7a, 0x4e, 0x65, 0x77, 0x64, 0x75, 0x6e, 0x48, 0x65, 0x78,
		0x69, 0x6e, 0x20, 0x24, 0x31, 0x48, 0x59, 0x2d, 0x30, 0x30, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x47, 0x31, 0x30, 0x31, 0x2d, 0x4f, 0x47, 0x53, 0x61, 0x6e, 0x79, 0x6f, 0x4b, 0x61, 0x74, 0x61,
		0x6e, 0x61, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x20, 0x58, 0x49, 0x6e, 0x63, 0x6f,
		0x67, 0x6e, 0x69, 0x74, 0x6f, 0x49, 0x6e, 0x6e, 0x75, 0x65, 0x6e, 0x64, 0x6f, 0x53, 0x61, 0x76,
		0x69, 0x6f, 0x53, 0x62, 0x65, 0x72, 0x53, 0x63, 0x68, 0x6f, 0x6b, 0x53, 0x63, 0x68, 0x6f, 0x6b,
		0x20, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x56, 0x35, 0x35, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53,
		0x56, 0x35, 0x35, 0x46, 0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x58,
		0x4c, 0x46, 0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x58,
		0x4c, 0x53, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x53, 0x65, 0x61, 0x74, 0x65, 0x6c, 0x53, 0x65,
		0x65, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x6c,
		0x65, 0x6e, 0x67, 0x61, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x78, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58,
		0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x53, 0x4c, 0x41, 0x53, 0x48, 0x36, 0x53, 0x6c, 0x61,
		0x73, 0x68, 0x20, 0x36, 0x56, 0x4f, 0x59, 0x41, 0x47, 0x45, 0x52, 0x2d, 0x56, 0x34, 0x35, 0x56,
		0x6f, 0x79, 0x61, 0x67, 0x65, 0x72, 0x20, 0x56, 0x34, 0x35, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58,
		0x5f, 0x45, 0x53, 0x37, 0x33, 0x32, 0x5f, 0x45, 0x58, 0x50, 0x45, 0x52, 0x49, 0x55, 0x53, 0x45,
		0x53, 0x37, 0x33, 0x32, 0x20, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x75, 0x73, 0x53, 0x45, 0x4c,
		0x46, 0x49, 0x58, 0x5f, 0x51, 0x35, 0x5f, 0x55, 0x52, 0x42, 0x41, 0x4e, 0x51, 0x35, 0x20, 0x55,
		0x72, 0x62, 0x61, 0x6e, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x51, 0x33, 0x5f, 0x52, 0x45,
		0x42, 0x45, 0x4c, 0x51, 0x33, 0x20, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x53, 0x45, 0x4c, 0x46, 0x49,
		0x58, 0x5f, 0x51, 0x36, 0x5f, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x49, 0x4f, 0x4e, 0x51, 0x36, 0x20,
		0x53, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x56,
		0x34, 0x31, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x4d, 0x41, 0x52, 0x44, 0x49, 0x47, 0x52, 0x41, 0x53,
		0x56, 0x34, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x72, 0x64, 0x69, 0x67, 0x72, 0x61,
		0x73, 0x53, 0x65, 0x6e, 0x63, 0x6f, 0x72, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x24,
		0x31, 0x22, 0x20, 0x24, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x37, 0x20, 0x56,
		0x33, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x37, 0x20, 0x56, 0x32, 0x20, 0x42, 0x61,
		0x73, 0x69, 0x63, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x37, 0x20, 0x56, 0x32, 0x45,
		0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x38, 0x20, 0x56, 0x33, 0x45, 0x6c, 0x65, 0x6d, 0x65,
		0x6e, 0x74, 0x20, 0x38, 0x20, 0x56, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x38,
		0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x39, 0x2e, 0x37, 0x20, 0x56, 0x33, 0x45, 0x6c,
		0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x39, 0x2e, 0x37, 0x20, 0x56, 0x32, 0x45, 0x6c, 0x65, 0x6d,
		0x65, 0x6e, 0x74, 0x20, 0x39, 0x2e, 0x37, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20,
		0x50, 0x24, 0x31, 0x53, 0x65, 0x6e, 0x64, 0x6f, 0x53, 0x65, 0x6e, 0x6b, 0x61, 0x74, 0x65, 0x6c,
		0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x54, 0x31, 0x30, 0x30, 0x31, 0x4d, 0x61, 0x78, 0x69,
		0x6d, 0x75, 0x73, 0x20, 0x54, 0x31, 0x30, 0x30, 0x31, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x69, 0x74,
		0x53, 0x65, 0x6e, 0x77, 0x61, 0x4f, 0x64, 0x69, 0x6e, 0x49, 0x6e, 0x69, 0x7a, 0x69, 0x6f, 0x49,
		0x6e, 0x69, 0x7a, 0x69, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x37, 0x30, 0x35, 0x42, 0x50, 0x65,
		0x67, 0x61, 0x73, 0x75, 0x73, 0x54, 0x68, 0x6f, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x6c, 0x79,
		0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x53, 0x65, 0x75, 0x69, 0x63, 0x41, 0x55, 0x54, 0x4f,
		0x49, 0x44, 0x20, 0x24, 0x31, 0x53, 0x65, 0x77, 0x6f, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x70, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x58, 0x78, 0x33, 0x53, 0x54, 0x54, 0x4d, 0x32, 0x31, 0x56, 0x41,
		0x50, 0x50, 0x52, 0x6f, 0x75, 0x76, 0x6f, 0x20, 0x56, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x58,
		0x78, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x58, 0x78, 0x32,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x58, 0x78, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x65, 0x61,
		0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x33, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
		0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x35, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f,
		0x6e, 0x65, 0x20, 0x53, 0x37, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65,
		0x20, 0x58, 0x34, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x57, 0x69, 0x73, 0x68, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x57, 0x69, 0x73, 0x68, 0x20, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53,
		0x48, 0x2d, 0x4d, 0x30, 0x34, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65,
		0x20, 0x34, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65,
		0x6e, 0x73, 0x65, 0x20, 0x34, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65,
		0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e,
		0x73, 0x65, 0x20, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20,
		0x36, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x37, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20,
		0x37, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x35, 0x47, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x44, 0x31, 0x30, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a,
		0x65, 0x74, 0x61, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a,
		0x65, 0x72, 0x6f, 0x20, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x32,
		0x20, 0x28, 0x43, 0x31, 0x30, 0x29, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x5a, 0x65, 0x74, 0x61, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x20, 0x51, 0x75, 0x65,
		0x73, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x48,
		0x2d, 0x30, 0x36, 0x44, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x24, 0x31, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x58,
		0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4c, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x52, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63,
		0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52,
		0x32, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52,
		0x35, 0x47, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x34, 0x20, 0x53, 0x49, 0x4d, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x56, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x20, 0x24, 0x31, 0x53, 0x69, 0x6d, 0x70,
		0x6c, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x53,
		0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x45, 0x76, 0x65, 0x72, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43,
		0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43, 0x72, 0x79, 0x73,
		0x74, 0x61, 0x6c, 0x20, 0x58, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74,
		0x61, 0x6c, 0x20, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x33, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53,
		0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x36, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x53, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x53, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x52, 0x33, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x53, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53,
		0x33, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x34, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52,
		0x37, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x55, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x53, 0x42, 0x31,
		0x30, 0x41, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x20, 0x32, 0x53,
		0x74, 0x61, 0x72, 0x20, 0x57, 0x61, 0x72, 0x73, 0x53, 0x48, 0x2d, 0x52, 0x4d, 0x30, 0x32, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x48, 0x2d, 0x52, 0x4d, 0x30, 0x32, 0x34, 0x30, 0x31, 0x53,
		0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x34, 0x30, 0x31, 0x53, 0x48, 0x44, 0x69, 0x73, 0x6e,
		0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x41, 0x30, 0x30, 0x31,
		0x53, 0x48, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f, 0x20,
		0x35, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x20, 0x33, 0x4e,
		0x50, 0x41, 0x32, 0x30, 0x35, 0x53, 0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69,
		0x74, 0x61, 0x69, 0x20, 0x34, 0x4e, 0x50, 0x38, 0x30, 0x37, 0x53, 0x48, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x20, 0x31, 0x30, 0x4e, 0x50, 0x35, 0x30, 0x31,
		0x53, 0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x4c, 0x65,
		0x69, 0x63, 0x61, 0x20, 0x4c, 0x65, 0x69, 0x74, 0x7a, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x24, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x70, 0x61, 0x67, 0x6f, 0x73, 0x20, 0x24, 0x31, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x4b, 0x2d, 0x74, 0x61, 0x69, 0x50, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x65,
		0x20, 0x36, 0x53, 0x68, 0x61, 0x72, 0x70, 0x20, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x61,
		0x64, 0x4c, 0x43, 0x44, 0x5f, 0x78, 0x78, 0x53, 0x55, 0x46, 0x4f, 0x43, 0x34, 0x37, 0x35, 0x41,
		0x4c, 0x43, 0x44, 0x2d, 0x36, 0x30, 0x53, 0x55, 0x34, 0x37, 0x35, 0x41, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x4e, 0x65, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x54, 0x56, 0x24, 0x31, 0x53, 0x68, 0x69, 0x66, 0x74, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x73,
		0x53, 0x68, 0x69, 0x76, 0x61, 0x6b, 0x69, 0x53, 0x54, 0x56, 0x2d, 0x24, 0x31, 0x53, 0x68, 0x74,
		0x72, 0x69, 0x6b, 0x68, 0x2d, 0x4d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x6f, 0x73, 0x20, 0x46,
		0x32, 0x53, 0x68, 0x75, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x69, 0x63, 0x6f, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x32, 0x4d, 0x6f, 0x72, 0x65, 0x5f, 0x33, 0x4d, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x50, 0x6c,
		0x75, 0x73, 0x33, 0x5f, 0x34, 0x47, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x54, 0x6f, 0x70, 0x61,
		0x7a, 0x4d, 0x65, 0x67, 0x61, 0x32, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x32, 0x20,
		0x4d, 0x61, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x32, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x32, 0x4e, 0x69,
		0x6c, 0x65, 0x20, 0x58, 0x53, 0x53, 0x52, 0x33, 0x2d, 0x31, 0x2d, 0x35, 0x31, 0x2d, 0x35, 0x4d,
		0x53, 0x53, 0x44, 0x2d, 0x31, 0x2d, 0x35, 0x33, 0x2d, 0x31, 0x33, 0x4d, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x31, 0x30, 0x30, 0x32, 0x45, 0x78, 0x70,
		0x72, 0x65, 0x73, 0x73, 0x33, 0x2d, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
		0x20, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x33, 0x45, 0x78,
		0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x33, 0x53, 0x69, 0x65, 0x6d, 0x65, 0x6e, 0x73, 0x58, 0x2d,
		0x54, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x51, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x2d,
		0x54, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x51, 0x24, 0x31, 0x58, 0x2d, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x24, 0x31, 0x58, 0x2d, 0x53, 0x74, 0x79, 0x6c, 0x65,
		0x20, 0x53, 0x24, 0x31, 0x53, 0x69, 0x6c, 0x65, 0x6c, 0x69, 0x73, 0x53, 0x69, 0x6c, 0x65, 0x6e,
		0x74, 0x20, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x70, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x32, 0x53, 0x69, 0x6d, 0x62, 0x61, 0x6e, 0x73, 0x54, 0x61, 0x6e, 0x67, 0x6f,
		0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x54, 0x61, 0x62, 0x55, 0x6c,
		0x74, 0x69, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x6d, 0x61, 0x78, 0x50, 0x69, 0x63, 0x61,
		0x73, 0x73, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x74, 0x6f,
		0x53, 0x37, 0x32, 0x2d, 0x42, 0x53, 0x58, 0x32, 0x57, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x79, 0x53,
		0x69, 0x6e, 0x67, 0x74, 0x65, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x49, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x49, 0x20, 0x4d, 0x69, 0x78,
		0x53, 0x69, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x53, 0x69, 0x72, 0x69, 0x6e, 0x20, 0x4c, 0x61, 0x62,
		0x73, 0x46, 0x69, 0x6e, 0x6e, 0x65, 0x79, 0x20, 0x55, 0x31, 0x53, 0x6f, 0x6c, 0x61, 0x72, 0x69,
		0x6e, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x35, 0x2e, 0x30, 0x4d, 0x50, 0x6c,
		0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x35, 0x2e, 0x35, 0x43, 0x50, 0x6c, 0x61, 0x74, 0x69,
		0x6e, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c,
		0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x5f, 0x34, 0x5f, 0x30, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c,
		0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x34, 0x2e, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x34, 0x2e, 0x30, 0x50, 0x6c, 0x61, 0x74, 0x69,
		0x6e, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e,
		0x75, 0x6d, 0x20, 0x24, 0x31, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x56, 0x69,
		0x65, 0x77, 0x24, 0x31, 0x53, 0x4b, 0x59, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x79, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f, 0x63, 0x74, 0x61,
		0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x20, 0x58,
		0x53, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x20, 0x4f, 0x63, 0x74, 0x61, 0x4d, 0x61, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x5f, 0x35, 0x5f,
		0x35, 0x5f, 0x4f, 0x63, 0x74, 0x61, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x2e, 0x35, 0x20,
		0x4f, 0x63, 0x74, 0x61, 0x45, 0x4c, 0x49, 0x54, 0x45, 0x20, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50,
		0x52, 0x4f, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x72,
		0x6f, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x35, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x69,
		0x74, 0x65, 0x20, 0x4d, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20,
		0x45, 0x35, 0x35, 0x4d, 0x61, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x45, 0x35, 0x35, 0x20,
		0x4d, 0x61, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x46, 0x75,
		0x65, 0x67, 0x6f, 0x20, 0x24, 0x31, 0x53, 0x4b, 0x59, 0x5f, 0x50, 0x72, 0x6f, 0x5f, 0x49, 0x49,
		0x49, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x49, 0x50, 0x52, 0x4f, 0x5f, 0x53, 0x45, 0x4c, 0x46,
		0x49, 0x45, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x53, 0x4b, 0x59, 0x20,
		0x35, 0x35, 0x4d, 0x35, 0x35, 0x4d, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x35, 0x50, 0x72,
		0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x35, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20,
		0x58, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x53, 0x6b, 0x79, 0x53, 0x74, 0x72, 0x65,
		0x61, 0x6d, 0x53, 0x4b, 0x59, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f, 0x33, 0x50, 0x6c, 0x75,
		0x73, 0x49, 0x49, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6b, 0x79, 0x6c, 0x69, 0x6e, 0x65,
		0x53, 0x6b, 0x79, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x6f, 0x78, 0x2d,
		0x46, 0x31, 0x53, 0x6d, 0x61, 0x64, 0x6c, 0x53, 0x61, 0x66, 0x61, 0x72, 0x69, 0x4d, 0x61, 0x74,
		0x72, 0x69, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x69, 0x6c, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x20, 0x49, 0x49, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x49,
		0x49, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4b, 0x61, 0x73, 0x73, 0x65, 0x6c, 0x53, 0x4b, 0x35,
		0x35, 0x30, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x42, 0x31, 0x33,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x61, 0x62, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x65, 0x78, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e, 0x53, 0x37, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x30, 0x50,
		0x44, 0x36, 0x44, 0x31, 0x4a, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x56, 0x33,
		0x73, 0x41, 0x44, 0x36, 0x38, 0x32, 0x4a, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20,
		0x54, 0x41, 0x44, 0x36, 0x38, 0x38, 0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20,
		0x43, 0x32, 0x41, 0x44, 0x36, 0x38, 0x39, 0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78,
		0x20, 0x69, 0x33, 0x41, 0x44, 0x36, 0x38, 0x32, 0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61,
		0x78, 0x20, 0x69, 0x33, 0x73, 0x41, 0x44, 0x36, 0x42, 0x31, 0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x6d, 0x61, 0x78, 0x20, 0x47, 0x32, 0x20, 0x48, 0x6f, 0x74, 0x41, 0x44, 0x39, 0x41, 0x31, 0x48,
		0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x47, 0x32, 0x41, 0x44, 0x36, 0x38, 0x33,
		0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x49, 0x42, 0x32, 0x36, 0x44, 0x32,
		0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x4c, 0x4e, 0x65, 0x77, 0x20, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x2d, 0x69, 0x4e, 0x65, 0x77, 0x20, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x49, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20,
		0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x69, 0x73, 0x61, 0x6e, 0x54, 0x31, 0x53, 0x4d, 0x38,
		0x30, 0x31, 0x54, 0x32, 0x53, 0x4d, 0x39, 0x30, 0x31, 0x4d, 0x31, 0x53, 0x4d, 0x39, 0x31, 0x39,
		0x4d, 0x31, 0x4c, 0x4e, 0x75, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x73, 0x4e, 0x75, 0x74,
		0x20, 0x33, 0x4e, 0x75, 0x74, 0x20, 0x32, 0x4e, 0x75, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33,
		0x4a, 0x69, 0x61, 0x6e, 0x47, 0x75, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x69, 0x73, 0x61, 0x6e, 0x20, 0x55, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x24, 0x31,
		0x4d, 0x61, 0x78, 0x69, 0x20, 0x31, 0x30, 0x4c, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x32, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x53,
		0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d,
		0x6f, 0x6f, 0x74, 0x68, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x36, 0x2e,
		0x32, 0x36, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x36, 0x2e, 0x32, 0x36, 0x20, 0x24, 0x31,
		0x53, 0x6d, 0x6f, 0x74, 0x72, 0x65, 0x73, 0x68, 0x6b, 0x61, 0x53, 0x6f, 0x62, 0x69, 0x65, 0x54,
		0x65, 0x63, 0x68, 0x53, 0x4f, 0x42, 0x49, 0x45, 0x54, 0x45, 0x43, 0x48, 0x20, 0x53, 0x4c, 0x50,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x33, 0x44, 0x20, 0x50, 0x72, 0x6f,
		0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x6f, 0x64, 0x61, 0x73, 0x6f, 0x64, 0x61, 0x20, 0x46,
		0x49, 0x52, 0x45, 0x53, 0x6f, 0x66, 0x74, 0x62, 0x61, 0x6e, 0x6b, 0x53, 0x6f, 0x68, 0x6f, 0x20,
		0x53, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x6f, 0x6c, 0x6f, 0x6e, 0x65, 0x45, 0x31, 0x34, 0x35, 0x37,
		0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x49, 0x72, 0x6f, 0x6e, 0x20, 0x45, 0x31, 0x34, 0x35, 0x37,
		0x57, 0x31, 0x34, 0x35, 0x30, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x42, 0x72, 0x65, 0x65, 0x7a, 0x65,
		0x20, 0x57, 0x31, 0x34, 0x35, 0x30, 0x57, 0x31, 0x34, 0x35, 0x32, 0x57, 0x69, 0x6e, 0x64, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x57, 0x31, 0x34, 0x35, 0x32, 0x53, 0x4f, 0x4c, 0x4f, 0x4e, 0x45, 0x20,
		0x41, 0x34, 0x37, 0x53, 0x4c, 0x2d, 0x41, 0x34, 0x37, 0x53, 0x75, 0x6e, 0x5f, 0x53, 0x35, 0x35,
		0x30, 0x31, 0x53, 0x75, 0x6e, 0x20, 0x53, 0x35, 0x35, 0x30, 0x31, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x20, 0x4c, 0x35, 0x35, 0x30, 0x31, 0x53, 0x75, 0x6d, 0x6f, 0x20, 0x53, 0x35, 0x30, 0x30, 0x31,
		0x53, 0x6f, 0x6e, 0x69, 0x6d, 0x58, 0x50, 0x33, 0x34, 0x30, 0x30, 0x58, 0x50, 0x33, 0x58, 0x50,
		0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x50, 0x35, 0x73, 0x58, 0x50, 0x35, 0x58, 0x50, 0x36,
		0x58, 0x50, 0x37, 0x58, 0x50, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x31, 0x30,
		0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x31, 0x30, 0x20,
		0x6d, 0x69, 0x6e, 0x69, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58,
		0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x61, 0x72, 0x63, 0x20, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6e, 0x65,
		0x6f, 0x20, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6e, 0x65, 0x6f, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x53, 0x6f, 0x6c, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x70,
		0x72, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x41, 0x63, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x72, 0x61, 0x79, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x58, 0x31, 0x30, 0x41, 0x73, 0x70, 0x65, 0x6e, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x50, 0x4c, 0x41, 0x59, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x63,
		0x72, 0x6f, 0x20, 0x53, 0x4c, 0x69, 0x76, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x57, 0x61,
		0x6c, 0x6b, 0x6d, 0x61, 0x6e, 0x74, 0x78, 0x74, 0x74, 0x78, 0x74, 0x20, 0x70, 0x72, 0x6f, 0x4a,
		0x61, 0x6c, 0x6f, 0x75, 0x4e, 0x61, 0x69, 0x74, 0x65, 0x43, 0x65, 0x64, 0x61, 0x72, 0x45, 0x6c,
		0x6d, 0x48, 0x61, 0x7a, 0x65, 0x6c, 0x41, 0x69, 0x6e, 0x6f, 0x59, 0x61, 0x72, 0x69, 0x53, 0x61,
		0x74, 0x69, 0x6f, 0x56, 0x69, 0x76, 0x61, 0x7a, 0x56, 0x69, 0x76, 0x61, 0x7a, 0x20, 0x70, 0x72,
		0x6f, 0x5a, 0x79, 0x6c, 0x6f, 0x53, 0x70, 0x69, 0x72, 0x6f, 0x59, 0x65, 0x6e, 0x64, 0x6f, 0x57,
		0x39, 0x36, 0x30, 0x4d, 0x69, 0x78, 0x20, 0x57, 0x61, 0x6c, 0x6b, 0x6d, 0x61, 0x6e, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x58, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4f, 0x2d,
		0x30, 0x34, 0x46, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x32, 0x53, 0x4f, 0x2d, 0x30,
		0x32, 0x44, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4e, 0x58, 0x47, 0x32, 0x32, 0x39, 0x39,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x52, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4f,
		0x2d, 0x30, 0x34, 0x47, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x34, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x63, 0x65,
		0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x63, 0x65, 0x20, 0x49, 0x49,
		0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x49, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x61,
		0x6c, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x31, 0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20, 0x49, 0x49, 0x49,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20, 0x49, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x50, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x35, 0x20, 0x49, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x20,
		0x49, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x4c,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61,
		0x72, 0x63, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x6f, 0x20, 0x48,
		0x44, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x6f, 0x20, 0x53, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x69, 0x6f, 0x6e, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54,
		0x58, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x20, 0x4c, 0x54, 0x45, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x54, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x74, 0x69, 0x70, 0x6f,
		0x20, 0x64, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x74, 0x69, 0x70, 0x6f,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6d, 0x69, 0x72, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x55, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x55, 0x4c, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x56, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4a, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x67, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x45, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x34, 0x47, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x43, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x50, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x5a, 0x52, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x4c, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x4c, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x31,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x33, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x45, 0x34, 0x67, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x4c, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x32, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x49, 0x33, 0x33, 0x31, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x33,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x32,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x32, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x32, 0x20, 0x41, 0x71, 0x75, 0x61, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x4d, 0x34, 0x20, 0x41, 0x71, 0x75, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x4d, 0x34, 0x20, 0x41, 0x71, 0x75, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x4d, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x35, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x33, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x43, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x34, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x35, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x35, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x33, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x54, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x31, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61,
		0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x5a, 0x33, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x5a, 0x32, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x57, 0x69, 0x66,
		0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x57, 0x69, 0x46, 0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x20,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x44,
		0x36, 0x35, 0x36, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x61, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x2b, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x76, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x5a, 0x34, 0x45, 0x36, 0x35, 0x30, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x34,
		0x76, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61,
		0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x5a, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x5a, 0x35, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x58, 0x41, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x58, 0x5a, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x31, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x31, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58,
		0x41, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x34, 0x34,
		0x33, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x73, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x5a, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x48, 0x38, 0x32, 0x36, 0x36, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x53, 0x4f, 0x2d, 0x30, 0x35,
		0x4b, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x20, 0x43, 0x6f, 0x6d, 0x70,
		0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x20, 0x50, 0x72,
		0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x58, 0x5a, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x31, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x4c, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x41, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x47, 0x58, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x53, 0x58, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x58, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x58, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x58, 0x20, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x20, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
		0x63, 0x65, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x5a, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x5a, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x5a, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x5a, 0x33, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x53, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x42, 0x72, 0x61, 0x76, 0x69, 0x61, 0x20,
		0x24, 0x31, 0x42, 0x72, 0x61, 0x76, 0x69, 0x61, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x35, 0x29, 0x42, 0x72, 0x61, 0x76, 0x69, 0x61, 0x20, 0x56, 0x48, 0x31, 0x57, 0x61, 0x6c, 0x6b,
		0x6d, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x75, 0x2d, 0x72, 0x61, 0x79, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x65, 0x72, 0x42, 0x44, 0x50, 0x32, 0x30, 0x31, 0x35, 0x42, 0x6c, 0x75, 0x2d, 0x72,
		0x61, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29,
		0x61, 0x72, 0x63, 0x6f, 0x20, 0x49, 0x53, 0x31, 0x31, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x24, 0x31, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x53, 0x6f, 0x79, 0x65, 0x73,
		0x53, 0x31, 0x30, 0x2d, 0x48, 0x58, 0x53, 0x31, 0x32, 0x20, 0x50, 0x52, 0x4f, 0x58, 0x53, 0x31,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x78, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70,
		0x65, 0x63, 0x74, 0x72, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75,
		0x6d, 0x56, 0x75, 0x6c, 0x63, 0x61, 0x6e, 0x6f, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x43, 0x61, 0x72,
		0x62, 0x6f, 0x6e, 0x6f, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x43, 0x75, 0x61, 0x72, 0x7a, 0x6f, 0x20,
		0x36, 0x2e, 0x30, 0x22, 0x44, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x65, 0x20, 0x35, 0x2e, 0x30,
		0x22, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x24, 0x31, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d,
		0x35, 0x51, 0x2b, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58,
		0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65,
		0x2d, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x35, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x56, 0x69,
		0x63, 0x74, 0x6f, 0x72, 0x20, 0x35, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x50, 0x72, 0x6f, 0x74,
		0x6f, 0x6e, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x50, 0x72, 0x6f,
		0x74, 0x6f, 0x6e, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x45,
		0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x35, 0x35, 0x48, 0x44, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20,
		0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x35, 0x20, 0x48, 0x44, 0x4d, 0x69, 0x2d,
		0x24, 0x31, 0x4e, 0x4d, 0x69, 0x2d, 0x24, 0x31, 0x41, 0x51, 0x54, 0x24, 0x31, 0x53, 0x74, 0x61,
		0x72, 0x4e, 0x39, 0x30, 0x30, 0x30, 0x53, 0x74, 0x61, 0x72, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4d,
		0x79, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x5f, 0x58, 0x4d, 0x79, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20,
		0x58, 0x52, 0x49, 0x4f, 0x20, 0x53, 0x54, 0x41, 0x52, 0x52, 0x69, 0x6f, 0x20, 0x53, 0x74, 0x61,
		0x72, 0x43, 0x5f, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x43, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x5f, 0x4e, 0x6f, 0x74, 0x65, 0x43, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x53, 0x74, 0x61, 0x72, 0x5f, 0x4d, 0x69, 0x78, 0x5f, 0x32, 0x53, 0x74, 0x61, 0x72, 0x20,
		0x4d, 0x69, 0x78, 0x20, 0x32, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x50, 0x4c, 0x55, 0x53,
		0x49, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x20, 0x53, 0x74, 0x61,
		0x72, 0x20, 0x54, 0x77, 0x6f, 0x49, 0x20, 0x73, 0x74, 0x61, 0x72, 0x20, 0x6f, 0x6e, 0x65, 0x49,
		0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x4f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x6c, 0x69, 0x67,
		0x68, 0x74, 0x5f, 0x52, 0x4f, 0x4d, 0x45, 0x5f, 0x58, 0x52, 0x6f, 0x6d, 0x65, 0x20, 0x58, 0x73,
		0x74, 0x61, 0x72, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x61,
		0x72, 0x2b, 0x2b, 0x53, 0x74, 0x61, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x47, 0x6f, 0x41, 0x73, 0x74, 0x72, 0x61, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64,
		0x20, 0x44, 0x31, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x55, 0x50, 0x20, 0x24, 0x31, 0x45,
		0x6e, 0x67, 0x61, 0x67, 0x65, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x61, 0x72,
		0x77, 0x61, 0x79, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x61, 0x20, 0x53, 0x24, 0x31,
		0x53, 0x74, 0x61, 0x72, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x57, 0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31,
		0x53, 0x74, 0x6f, 0x6e, 0x65, 0x78, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x78, 0x65, 0x5a, 0x65, 0x65,
		0x27, 0x54, 0x61, 0x62, 0x24, 0x31, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x58, 0x20, 0x4c, 0x69, 0x6e,
		0x6b, 0x42, 0x6f, 0x78, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x6f, 0x78, 0x53, 0x74, 0x72, 0x61, 0x77,
		0x42, 0x65, 0x72, 0x72, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x55, 0x50, 0x53, 0x74, 0x65,
		0x70, 0x20, 0x55, 0x70, 0x37, 0x32, 0x31, 0x5f, 0x50, 0x52, 0x4f, 0x37, 0x32, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x39, 0x20, 0x54, 0x6f, 0x70, 0x61, 0x7a, 0x53, 0x56, 0x36, 0x31, 0x20, 0x56,
		0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x36, 0x31, 0x20, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x36, 0x31, 0x20, 0x4a, 0x41, 0x5a,
		0x5a, 0x53, 0x36, 0x31, 0x20, 0x4a, 0x61, 0x7a, 0x7a, 0x53, 0x35, 0x37, 0x5f, 0x41, 0x5a, 0x55,
		0x52, 0x45, 0x53, 0x35, 0x37, 0x20, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x53, 0x35, 0x37, 0x5f, 0x41,
		0x4c, 0x55, 0x52, 0x45, 0x53, 0x35, 0x37, 0x20, 0x41, 0x6c, 0x75, 0x72, 0x65, 0x53, 0x35, 0x36,
		0x20, 0x4d, 0x49, 0x53, 0x54, 0x53, 0x35, 0x36, 0x20, 0x4d, 0x69, 0x73, 0x74, 0x43, 0x50, 0x45,
		0x39, 0x31, 0x53, 0x35, 0x34, 0x20, 0x5a, 0x65, 0x6e, 0x53, 0x35, 0x35, 0x20, 0x4e, 0x6f, 0x76,
		0x61, 0x53, 0x34, 0x30, 0x5f, 0x56, 0x49, 0x53, 0x54, 0x41, 0x53, 0x34, 0x30, 0x20, 0x56, 0x69,
		0x73, 0x74, 0x61, 0x53, 0x35, 0x30, 0x5f, 0x4a, 0x41, 0x44, 0x45, 0x53, 0x35, 0x30, 0x20, 0x4a,
		0x61, 0x64, 0x65, 0x53, 0x35, 0x30, 0x5f, 0x42, 0x4f, 0x4c, 0x44, 0x53, 0x35, 0x30, 0x20, 0x42,
		0x6f, 0x6c, 0x64, 0x49, 0x74, 0x68, 0x65, 0x6d, 0x62, 0x61, 0x41, 0x52, 0x43, 0x54, 0x49, 0x43,
		0x41, 0x72, 0x63, 0x74, 0x69, 0x63, 0x53, 0x35, 0x33, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x4b, 0x53,
		0x35, 0x33, 0x20, 0x53, 0x74, 0x61, 0x72, 0x6b, 0x53, 0x34, 0x30, 0x5f, 0x4c, 0x49, 0x46, 0x45,
		0x53, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x49, 0x46, 0x45, 0x5f, 0x32, 0x4c, 0x69,
		0x66, 0x65, 0x20, 0x32, 0x4d, 0x4f, 0x53, 0x43, 0x4f, 0x57, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77,
		0x53, 0x34, 0x39, 0x20, 0x50, 0x6f, 0x69, 0x73, 0x65, 0x53, 0x34, 0x39, 0x20, 0x4d, 0x6f, 0x6e,
		0x6f, 0x53, 0x34, 0x39, 0x20, 0x45, 0x63, 0x6f, 0x53, 0x36, 0x34, 0x5f, 0x41, 0x4c, 0x50, 0x48,
		0x41, 0x53, 0x36, 0x34, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x44, 0x51, 0x52, 0x32, 0x32, 0x49,
		0x4e, 0x4b, 0x4f, 0x53, 0x49, 0x5f, 0x50, 0x52, 0x4f, 0x49, 0x6e, 0x6b, 0x6f, 0x73, 0x69, 0x20,
		0x50, 0x72, 0x6f, 0x49, 0x4e, 0x4b, 0x4f, 0x53, 0x49, 0x49, 0x6e, 0x6b, 0x6f, 0x73, 0x69, 0x49,
		0x4e, 0x4b, 0x55, 0x4c, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x49, 0x6e, 0x6b, 0x75, 0x6c, 0x75, 0x20,
		0x50, 0x72, 0x6f, 0x42, 0x4f, 0x4c, 0x44, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x42, 0x6f, 0x6c, 0x64,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x72, 0x61, 0x76, 0x65, 0x54, 0x61, 0x72, 0x69, 0x73, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x44, 0x56, 0x4b, 0x38, 0x37, 0x4f, 0x72, 0x69, 0x6f, 0x6e,
		0x20, 0x38, 0x20, 0x54, 0x61, 0x62, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x53, 0x75, 0x67, 0x61, 0x72,
		0x59, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x75,
		0x6d, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6e, 0x56, 0x61, 0x6e, 0x53, 0x75, 0x6e,
		0x6d, 0x61, 0x78, 0x53, 0x75, 0x6e, 0x6d, 0x69, 0x54, 0x32, 0x73, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x53, 0x75, 0x6e, 0x6e, 0x79, 0x53, 0x75, 0x6e, 0x73, 0x74, 0x65, 0x63, 0x68, 0x53, 0x75, 0x6e,
		0x76, 0x65, 0x6c, 0x6c, 0x54, 0x39, 0x35, 0x5a, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x39, 0x35, 0x5a,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x42, 0x4f, 0x58, 0x53, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x75, 0x70, 0x65, 0x72, 0x53, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x75, 0x70,
		0x65, 0x72, 0x54, 0x61, 0x62, 0x4b, 0x37, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x53, 0x75, 0x70, 0x72,
		0x61, 0x53, 0x75, 0x70, 0x72, 0x61, 0x69, 0x6d, 0x53, 0x75, 0x72, 0x67, 0x65, 0x56, 0x6f, 0x6c,
		0x74, 0x20, 0x24, 0x31, 0x53, 0x75, 0x7a, 0x75, 0x6b, 0x69, 0x53, 0x75, 0x6d, 0x6f, 0x50, 0x61,
		0x64, 0x20, 0x24, 0x31, 0x45, 0x43, 0x4f, 0x50, 0x41, 0x44, 0x37, 0x45, 0x43, 0x4f, 0x50, 0x61,
		0x64, 0x20, 0x37, 0x53, 0x76, 0x65, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x70, 0x65, 0x4b, 0x6f, 0x6e,
		0x6e, 0x65, 0x63, 0x74, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4b, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
		0x74, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4b, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x4e,
		0x65, 0x6f, 0x20, 0x34, 0x47, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x32, 0x53, 0x74, 0x72, 0x69,
		0x6b, 0x65, 0x20, 0x38, 0x53, 0x77, 0x69, 0x73, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x53, 0x77, 0x69,
		0x74, 0x65, 0x6c, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x53, 0x79, 0x63, 0x6f,
		0x52, 0x53, 0x2d, 0x34, 0x30, 0x33, 0x53, 0x79, 0x6d, 0x70, 0x68, 0x6f, 0x6e, 0x79, 0x5a, 0x56,
		0x49, 0x49, 0x49, 0x5a, 0x56, 0x49, 0x49, 0x49, 0x4e, 0x4f, 0x56, 0x41, 0x69, 0x4e, 0x6f, 0x76,
		0x61, 0x53, 0x79, 0x6d, 0x70, 0x68, 0x6f, 0x6e, 0x79, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x69,
		0x69, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x49, 0x49, 0x52, 0x6f, 0x61, 0x72, 0x20, 0x24, 0x31, 0x47,
		0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x79, 0x6d, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31,
		0x45, 0x41, 0x53, 0x59, 0x5f, 0x4e, 0x41, 0x56, 0x5f, 0x32, 0x45, 0x61, 0x73, 0x79, 0x20, 0x4e,
		0x61, 0x76, 0x20, 0x32, 0x53, 0x79, 0x72, 0x6f, 0x78, 0x54, 0x2d, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x54, 0x4d, 0x52, 0x56, 0x4c, 0x34, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x56, 0x52,
		0x45, 0x56, 0x56, 0x4c, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x45, 0x56, 0x56, 0x4c,
		0x20, 0x34, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x35, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20,
		0x32, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x56, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x45, 0x56,
		0x56, 0x4c, 0x52, 0x59, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x32, 0x52, 0x45, 0x56, 0x56, 0x4c,
		0x20, 0x36, 0x20, 0x35, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x54, 0x65, 0x6c, 0x65, 0x6b, 0x6f, 0x6d, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x54,
		0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x20, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x54, 0x39, 0x36, 0x54, 0x41, 0x47, 0x20, 0x54, 0x65, 0x63, 0x68, 0x54, 0x42, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x49, 0x67, 0x6e, 0x69, 0x73, 0x20, 0x24, 0x31, 0x54, 0x43, 0x4c, 0x47,
		0x61, 0x6c, 0x61, 0x20, 0x47, 0x36, 0x30, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x49, 0x6f, 0x6e, 0x20,
		0x58, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x32, 0x30, 0x35, 0x33, 0x30, 0x34,
		0x34, 0x30, 0x33, 0x33, 0x30, 0x35, 0x33, 0x30, 0x35, 0x69, 0x33, 0x30, 0x36, 0x34, 0x30, 0x35,
		0x34, 0x30, 0x38, 0x34, 0x30, 0x20, 0x53, 0x45, 0x32, 0x30, 0x4c, 0x32, 0x30, 0x4c, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74,
		0x69, 0x6f, 0x6e, 0x32, 0x30, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x30, 0x45, 0x33, 0x30,
		0x45, 0x32, 0x30, 0x59, 0x32, 0x30, 0x42, 0x43, 0x39, 0x41, 0x33, 0x58, 0x4c, 0x35, 0x4c, 0x39,
		0x4c, 0x39, 0x53, 0x4c, 0x31, 0x30, 0x4c, 0x31, 0x30, 0x2b, 0x4c, 0x31, 0x30, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x65, 0x78, 0x31, 0x30, 0x20, 0x35, 0x47,
		0x31, 0x30, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x4c, 0x58, 0x41, 0x32, 0x58, 0x58, 0x34, 0x20,
		0x35, 0x47, 0x31, 0x30, 0x4c, 0x31, 0x30, 0x20, 0x53, 0x45, 0x32, 0x30, 0x20, 0x53, 0x45, 0x32,
		0x30, 0x20, 0x41, 0x33, 0x30, 0x20, 0x53, 0x45, 0x34, 0x31, 0x38, 0x38, 0x56, 0x33, 0x30, 0x20,
		0x4c, 0x45, 0x33, 0x30, 0x2b, 0x54, 0x36, 0x37, 0x36, 0x48, 0x33, 0x30, 0x33, 0x30, 0x20, 0x5a,
		0x33, 0x30, 0x20, 0x56, 0x20, 0x35, 0x47, 0x54, 0x36, 0x30, 0x33, 0x44, 0x4c, 0x33, 0x30, 0x20,
		0x54, 0x33, 0x30, 0x20, 0x35, 0x47, 0x33, 0x30, 0x20, 0x58, 0x45, 0x20, 0x35, 0x47, 0x33, 0x30,
		0x20, 0x58, 0x4c, 0x32, 0x30, 0x52, 0x20, 0x35, 0x47, 0x32, 0x30, 0x53, 0x32, 0x30, 0x20, 0x58,
		0x45, 0x32, 0x30, 0x20, 0x35, 0x47, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x34,
		0x30, 0x52, 0x20, 0x35, 0x47, 0x39, 0x33, 0x31, 0x37, 0x58, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x54, 0x4b, 0x45, 0x45, 0x20, 0x4d, 0x61, 0x78, 0x54, 0x61,
		0x62, 0x20, 0x38, 0x22, 0x20, 0x34, 0x47, 0x39, 0x31, 0x33, 0x32, 0x47, 0x54, 0x61, 0x62, 0x20,
		0x38, 0x22, 0x39, 0x32, 0x39, 0x35, 0x47, 0x31, 0x30, 0x20, 0x54, 0x61, 0x62, 0x4d, 0x61, 0x78,
		0x20, 0x34, 0x47, 0x39, 0x32, 0x39, 0x36, 0x47, 0x31, 0x30, 0x20, 0x54, 0x61, 0x62, 0x4d, 0x61,
		0x78, 0x20, 0x57, 0x69, 0x46, 0x69, 0x39, 0x32, 0x39, 0x36, 0x51, 0x31, 0x30, 0x20, 0x54, 0x61,
		0x62, 0x4d, 0x61, 0x78, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x73, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x4c, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x4c, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x20, 0x34, 0x47, 0x39,
		0x30, 0x36, 0x30, 0x58, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x20, 0x34, 0x47,
		0x39, 0x31, 0x33, 0x37, 0x57, 0x54, 0x61, 0x62, 0x20, 0x38, 0x20, 0x4c, 0x45, 0x39, 0x31, 0x36,
		0x36, 0x47, 0x54, 0x61, 0x62, 0x20, 0x31, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x38, 0x34, 0x39, 0x31,
		0x58, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x4c, 0x39, 0x30, 0x38, 0x30, 0x47, 0x54, 0x61, 0x62,
		0x20, 0x31, 0x30, 0x73, 0x20, 0x34, 0x47, 0x42, 0x65, 0x79, 0x6f, 0x6e, 0x64, 0x20, 0x54, 0x56,
		0x20, 0x24, 0x31, 0x54, 0x44, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x44, 0x20,
		0x54, 0x65, 0x63, 0x68, 0x4e, 0x41, 0x54, 0x2d, 0x54, 0x4e, 0x37, 0x30, 0x4e, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x56, 0x41, 0x2d, 0x50, 0x41, 0x30, 0x30, 0x54, 0x44, 0x54, 0x2d, 0x4d, 0x41,
		0x30, 0x31, 0x4d, 0x34, 0x30, 0x54, 0x45, 0x45, 0x4e, 0x4f, 0x54, 0x45, 0x4e, 0x50, 0x4c, 0x55,
		0x53, 0x54, 0x45, 0x54, 0x43, 0x54, 0x49, 0x41, 0x4e, 0x59, 0x55, 0x54, 0x49, 0x4d, 0x76, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x54, 0x49, 0x4d, 0x20, 0x42, 0x6f, 0x78, 0x54, 0x4a, 0x43, 0x4d, 0x65,
		0x74, 0x61, 0x6c, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x31, 0x30, 0x54, 0x4f, 0x4f,
		0x47, 0x4f, 0x54, 0x4f, 0x50, 0x44, 0x4f, 0x4e, 0x54, 0x4f, 0x50, 0x53, 0x48, 0x4f, 0x57, 0x53,
		0x54, 0x4f, 0x53, 0x43, 0x49, 0x44, 0x4f, 0x57, 0x31, 0x30, 0x39, 0x54, 0x4f, 0x58, 0x54, 0x4f,
		0x58, 0x31, 0x54, 0x50, 0x53, 0x54, 0x54, 0x45, 0x43, 0x54, 0x54, 0x4b, 0x2d, 0x54, 0x56, 0x54,
		0x54, 0x4b, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x32, 0x31, 0x34, 0x53, 0x42, 0x2d, 0x32, 0x31, 0x34,
		0x54, 0x56, 0x43, 0x4e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x53, 0x58, 0x2d, 0x53, 0x50,
		0x35, 0x54, 0x57, 0x4d, 0x41, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x53, 0x41,
		0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x54, 0x57, 0x5a, 0x54, 0x61, 0x62, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x4f, 0x58, 0x5f, 0x58, 0x31, 0x4f, 0x58, 0x20, 0x58, 0x31,
		0x54, 0x61, 0x69, 0x67, 0x61, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x69, 0x67,
		0x61, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x54, 0x61, 0x6b, 0x61, 0x72, 0x61, 0x54, 0x61,
		0x6c, 0x69, 0x75, 0x73, 0x54, 0x61, 0x6d, 0x62, 0x6f, 0x54, 0x61, 0x6e, 0x69, 0x78, 0x54, 0x58,
		0x24, 0x31, 0x73, 0x54, 0x58, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x54, 0x58, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x54, 0x58, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x65, 0x61, 0x63, 0x68, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x54, 0x65, 0x63, 0x54, 0x6f, 0x79, 0x4f, 0x4e, 0x20, 0x31, 0x32, 0x38,
		0x47, 0x42, 0x54, 0x65, 0x63, 0x68, 0x50, 0x61, 0x64, 0x53, 0x38, 0x31, 0x33, 0x47, 0x54, 0x65,
		0x63, 0x68, 0x50, 0x61, 0x64, 0x31, 0x30, 0x51, 0x43, 0x31, 0x30, 0x51, 0x43, 0x54, 0x65, 0x63,
		0x68, 0x50, 0x61, 0x64, 0x5f, 0x31, 0x30, 0x78, 0x78, 0x31, 0x30, 0x58, 0x58, 0x54, 0x65, 0x63,
		0x68, 0x50, 0x61, 0x64, 0x37, 0x30, 0x33, 0x37, 0x30, 0x33, 0x33, 0x47, 0x78, 0x33, 0x47, 0x5f,
		0x31, 0x36, 0x33, 0x47, 0x2d, 0x31, 0x36, 0x58, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x4d, 0x35,
		0x20, 0x24, 0x31, 0x4d, 0x36, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x43, 0x61, 0x6d, 0x54, 0x65, 0x63, 0x68, 0x5f, 0x50,
		0x61, 0x64, 0x5f, 0x4b, 0x61, 0x69, 0x6f, 0x73, 0x5f, 0x4f, 0x6e, 0x65, 0x5f, 0x33, 0x47, 0x4b,
		0x61, 0x69, 0x6f, 0x73, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x54, 0x65, 0x63, 0x68, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x53, 0x61, 0x74, 0x54, 0x65, 0x63,
		0x68, 0x6e, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f,
		0x70, 0x63, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x50, 0x61, 0x64, 0x20, 0x55, 0x50, 0x31, 0x30, 0x24, 0x31, 0x54, 0x65, 0x63, 0x68,
		0x77, 0x6f, 0x6f, 0x64, 0x54, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x62, 0x6f, 0x6f, 0x6b,
		0x20, 0x24, 0x31, 0x54, 0x31, 0x30, 0x54, 0x32, 0x30, 0x50, 0x31, 0x30, 0x53, 0x50, 0x32, 0x30,
		0x48, 0x44, 0x50, 0x34, 0x30, 0x48, 0x44, 0x41, 0x70, 0x65, 0x78, 0x20, 0x50, 0x31, 0x30, 0x48,
		0x44, 0x50, 0x31, 0x30, 0x48, 0x44, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x70, 0x65, 0x78, 0x20,
		0x50, 0x31, 0x30, 0x48, 0x44, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x38, 0x30, 0x50, 0x33, 0x30,
		0x53, 0x50, 0x38, 0x35, 0x4d, 0x32, 0x30, 0x5f, 0x34, 0x47, 0x4d, 0x32, 0x30, 0x20, 0x34, 0x47,
		0x4d, 0x38, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x4c, 0x41, 0x30, 0x30, 0x32, 0x4d, 0x33, 0x30,
		0x20, 0x34, 0x47, 0x54, 0x4c, 0x41, 0x30, 0x31, 0x36, 0x4d, 0x31, 0x36, 0x4d, 0x34, 0x30, 0x41,
		0x69, 0x72, 0x4d, 0x34, 0x30, 0x20, 0x41, 0x69, 0x72, 0x4d, 0x34, 0x30, 0x53, 0x45, 0x4d, 0x34,
		0x30, 0x20, 0x53, 0x45, 0x4d, 0x34, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x34, 0x30, 0x53,
		0x54, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x4c, 0x41, 0x30, 0x30, 0x31, 0x54, 0x34, 0x30,
		0x54, 0x34, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x35, 0x30, 0x50, 0x72, 0x6f, 0x5f, 0x57,
		0x54, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x38, 0x30, 0x68, 0x50, 0x38, 0x30, 0x58, 0x50,
		0x33, 0x30, 0x41, 0x69, 0x72, 0x50, 0x33, 0x30, 0x20, 0x41, 0x69, 0x72, 0x54, 0x50, 0x61, 0x64,
		0x20, 0x39, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x34, 0x47, 0x58, 0x39, 0x38, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x58, 0x39, 0x38, 0x20, 0x41, 0x69, 0x72, 0x20, 0x49, 0x49, 0x49,
		0x58, 0x39, 0x38, 0x20, 0x41, 0x69, 0x72, 0x20, 0x49, 0x49, 0x54, 0x65, 0x63, 0x6e, 0x6f, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x36, 0x2d, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x36, 0x53, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f,
		0x6d, 0x20, 0x36, 0x53, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x24, 0x31, 0x50, 0x68,
		0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x58, 0x32, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20,
		0x58, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x58, 0x50,
		0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x56, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x50, 0x68, 0x61,
		0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x39, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x38, 0x54,
		0x45, 0x43, 0x4e, 0x4f, 0x20, 0x57, 0x58, 0x33, 0x4c, 0x54, 0x45, 0x57, 0x58, 0x33, 0x20, 0x4c,
		0x54, 0x45, 0x54, 0x45, 0x43, 0x4e, 0x4f, 0x2d, 0x57, 0x33, 0x57, 0x33, 0x46, 0x34, 0x20, 0x50,
		0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69,
		0x54, 0x77, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x41, 0x69, 0x72, 0x20, 0x32,
		0x2b, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x41, 0x63, 0x65, 0x20, 0x32, 0x43, 0x61, 0x6d,
		0x6f, 0x6e, 0x20, 0x69, 0x32, 0x58, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x32, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x20, 0x32, 0x43, 0x61, 0x6d, 0x6f,
		0x6e, 0x20, 0x69, 0x53, 0x6b, 0x79, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x53, 0x6b, 0x79,
		0x20, 0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x53, 0x6b, 0x79, 0x20, 0x33, 0x44, 0x72,
		0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x43, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61,
		0x64, 0x20, 0x37, 0x44, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x43, 0x20,
		0x50, 0x72, 0x6f, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x46, 0x44, 0x72,
		0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x47, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61,
		0x64, 0x20, 0x31, 0x30, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61,
		0x64, 0x20, 0x31, 0x30, 0x44, 0x20, 0x34, 0x47, 0x52, 0x37, 0x2b, 0x43, 0x61, 0x6d, 0x6f, 0x6e,
		0x20, 0x69, 0x34, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x39, 0x43, 0x61, 0x6d, 0x6f, 0x6e,
		0x20, 0x31, 0x31, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x43,
		0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x32, 0x20, 0x41, 0x69, 0x72, 0x43,
		0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20,
		0x41, 0x69, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x43,
		0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20,
		0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20,
		0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20, 0x53, 0x43, 0x61, 0x6d,
		0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20, 0x53, 0x45, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x37,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f,
		0x6e, 0x20, 0x31, 0x37, 0x50, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x38, 0x20, 0x50, 0x72,
		0x65, 0x6d, 0x69, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x38, 0x43, 0x61, 0x6d,
		0x6f, 0x6e, 0x20, 0x31, 0x38, 0x50, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x39, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x31, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x32,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x32, 0x30, 0x43, 0x61, 0x6d,
		0x6f, 0x6e, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x43, 0x61, 0x6d, 0x6f,
		0x6e, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x35, 0x47, 0x43,
		0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x4d, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x58, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43,
		0x58, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x58, 0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x70,
		0x20, 0x31, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x46, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x53, 0x50, 0x6f, 0x70,
		0x20, 0x32, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x6f, 0x70, 0x20,
		0x32, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x58, 0x20, 0x41, 0x69,
		0x72, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x58, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x41, 0x69, 0x72,
		0x50, 0x6f, 0x70, 0x20, 0x33, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x6f, 0x70, 0x20, 0x34, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70,
		0x20, 0x34, 0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x50,
		0x6f, 0x70, 0x20, 0x35, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x58, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x20,
		0x47, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x43, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x20, 0x4c, 0x54,
		0x45, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x50,
		0x50, 0x6f, 0x70, 0x20, 0x36, 0x50, 0x6f, 0x70, 0x20, 0x36, 0x20, 0x47, 0x6f, 0x50, 0x6f, 0x70,
		0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x53,
		0x41, 0x31, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x33, 0x29, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x20, 0x59, 0x6f, 0x75,
		0x74, 0x68, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x34, 0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x35, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x36, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x36, 0x20, 0x41, 0x69,
		0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x36, 0x20, 0x47, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x37, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x37, 0x50, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x37, 0x54, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x38, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x43, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x38, 0x50, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x54, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x39, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x39, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x39,
		0x54, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x43, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20,
		0x31, 0x30, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x47,
		0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x43, 0x4d, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x38,
		0x44, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x75, 0x76,
		0x6f, 0x69, 0x72, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72,
		0x20, 0x32, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x31, 0x50, 0x6f, 0x75, 0x76, 0x6f,
		0x69, 0x72, 0x20, 0x33, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x33, 0x20, 0x41, 0x69,
		0x72, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x34, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20,
		0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6d, 0x20, 0x4a, 0x38, 0x52, 0x37, 0x20, 0x34,
		0x47, 0x57, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x45,
		0x43, 0x4e, 0x4f, 0x20, 0x53, 0x39, 0x50, 0x6f, 0x76, 0x61, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x4e,
		0x65, 0x6f, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x32, 0x50, 0x6f, 0x76, 0x61,
		0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x50, 0x6f, 0x76, 0x61,
		0x20, 0x33, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x47, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x34, 0x50,
		0x6f, 0x76, 0x61, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x4c,
		0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x65, 0x6b, 0x6e, 0x6f, 0x73, 0x61, 0x50, 0x72, 0x65,
		0x6f, 0x20, 0x54, 0x65, 0x6b, 0x6e, 0x6f, 0x73, 0x61, 0x20, 0x50, 0x31, 0x50, 0x72, 0x65, 0x6f,
		0x20, 0x50, 0x31, 0x50, 0x72, 0x65, 0x6f, 0x20, 0x50, 0x24, 0x31, 0x54, 0x65, 0x6c, 0x65, 0x32,
		0x24, 0x31, 0x20, 0x31, 0x2e, 0x31, 0x4d, 0x69, 0x64, 0x69, 0x20, 0x32, 0x2e, 0x30, 0x54, 0x65,
		0x6c, 0x65, 0x66, 0x75, 0x6e, 0x6b, 0x65, 0x6e, 0x54, 0x45, 0x4c, 0x2d, 0x31, 0x30, 0x31, 0x33,
		0x47, 0x49, 0x51, 0x41, 0x47, 0x69, 0x71, 0x61, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x20, 0x33, 0x47,
		0x54, 0x45, 0x4c, 0x2d, 0x24, 0x31, 0x46, 0x6f, 0x78, 0x74, 0x72, 0x6f, 0x74, 0x32, 0x46, 0x6f,
		0x78, 0x74, 0x72, 0x6f, 0x74, 0x20, 0x32, 0x4c, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x41, 0x4c,
		0x69, 0x6d, 0x61, 0x20, 0x4c, 0x54, 0x45, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x5f, 0x4c,
		0x54, 0x45, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x54, 0x45,
		0x20, 0x4d, 0x69, 0x6b, 0x65, 0x4d, 0x69, 0x6b, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x65, 0x6c,
		0x65, 0x67, 0x6f, 0x54, 0x45, 0x4c, 0x45, 0x47, 0x4f, 0x2d, 0x57, 0x35, 0x30, 0x33, 0x57, 0x35,
		0x30, 0x33, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x6f, 0x5f, 0x4a, 0x4f, 0x59, 0x32, 0x4a, 0x6f, 0x79,
		0x20, 0x32, 0x57, 0x69, 0x73, 0x65, 0x32, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x57, 0x69, 0x73, 0x65,
		0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x65, 0x6c, 0x65, 0x6e, 0x6f, 0x72, 0x54, 0x65,
		0x6c, 0x69, 0x61, 0x54, 0x65, 0x6c, 0x69, 0x61, 0x20, 0x62, 0x6f, 0x78, 0x42, 0x6f, 0x78, 0x54,
		0x65, 0x6c, 0x69, 0x74, 0x54, 0x65, 0x6c, 0x6d, 0x61, 0x54, 0x65, 0x6c, 0x6d, 0x61, 0x5f, 0x46,
		0x31, 0x5f, 0x4d, 0x61, 0x78, 0x5f, 0x34, 0x47, 0x46, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x34,
		0x47, 0x46, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x34, 0x47, 0x46, 0x31, 0x78, 0x34, 0x47,
		0x46, 0x31, 0x78, 0x20, 0x34, 0x47, 0x46, 0x65, 0x65, 0x6c, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x46,
		0x65, 0x65, 0x6c, 0x54, 0x65, 0x6c, 0x6f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x45,
		0x4c, 0x4f, 0x5f, 0x4d, 0x35, 0x54, 0x65, 0x6c, 0x70, 0x6f, 0x54, 0x50, 0x53, 0x24, 0x31, 0x54,
		0x65, 0x72, 0x61, 0x63, 0x75, 0x62, 0x65, 0x54, 0x65, 0x73, 0x63, 0x6f, 0x48, 0x75, 0x64, 0x6c,
		0x20, 0x24, 0x31, 0x4f, 0x70, 0x33, 0x6e, 0x20, 0x44, 0x6f, 0x74, 0x74, 0x54, 0x65, 0x74, 0x72,
		0x61, 0x74, 0x61, 0x62, 0x43, 0x61, 0x73, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x33, 0x54, 0x68,
		0x4c, 0x4b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x32, 0x42, 0x6f, 0x78, 0x20, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x42, 0x6f, 0x78, 0x20, 0x31, 0x54, 0x68, 0x6f, 0x6d, 0x73, 0x6f, 0x6e, 0x51, 0x4d,
		0x37, 0x33, 0x34, 0x2d, 0x32, 0x51, 0x4d, 0x37, 0x33, 0x34, 0x2d, 0x38, 0x47, 0x51, 0x4d, 0x37,
		0x33, 0x35, 0x2d, 0x38, 0x47, 0x51, 0x4d, 0x37, 0x33, 0x36, 0x2d, 0x38, 0x47, 0x20, 0x28, 0x48,
		0x44, 0x29, 0x33, 0x47, 0x20, 0x38, 0x39, 0x35, 0x30, 0x53, 0x50, 0x54, 0x45, 0x4f, 0x31, 0x30,
		0x42, 0x4b, 0x31, 0x36, 0x54, 0x45, 0x4f, 0x31, 0x30, 0x42, 0x4b, 0x31, 0x36, 0x54, 0x45, 0x4f,
		0x24, 0x31, 0x48, 0x45, 0x52, 0x4f, 0x31, 0x30, 0x52, 0x4b, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x31,
		0x30, 0x52, 0x4b, 0x54, 0x6c, 0x69, 0x6e, 0x6b, 0x24, 0x31, 0x45, 0x76, 0x65, 0x72, 0x79, 0x24,
		0x31, 0x44, 0x65, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x54, 0x48, 0x32, 0x30, 0x31, 0x46, 0x72,
		0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x5f, 0x54, 0x48, 0x31, 0x30, 0x31, 0x46, 0x72, 0x69, 0x65,
		0x6e, 0x64, 0x6c, 0x79, 0x20, 0x54, 0x48, 0x31, 0x30, 0x31, 0x53, 0x65, 0x72, 0x65, 0x61, 0x20,
		0x35, 0x30, 0x30, 0x54, 0x68, 0x75, 0x72, 0x61, 0x79, 0x61, 0x54, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x54, 0x69, 0x56, 0x6f, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x20, 0x34, 0x4b, 0x53, 0x74,
		0x72, 0x65, 0x61, 0x6d, 0x20, 0x34, 0x4b, 0x54, 0x43, 0x44, 0x38, 0x46, 0x36, 0x30, 0x30, 0x30,
		0x54, 0x69, 0x62, 0x75, 0x74, 0x61, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x64, 0x20,
		0x24, 0x31, 0x54, 0x69, 0x67, 0x65, 0x72, 0x73, 0x54, 0x49, 0x53, 0x30, 0x30, 0x31, 0x20, 0x53,
		0x24, 0x31, 0x54, 0x49, 0x53, 0x30, 0x30, 0x31, 0x20, 0x54, 0x32, 0x54, 0x49, 0x53, 0x30, 0x30,
		0x31, 0x24, 0x31, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x24, 0x31, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x54, 0x69, 0x6d, 0x6f, 0x76, 0x69, 0x54, 0x4d, 0x4f, 0x56, 0x49, 0x5f, 0x59, 0x45, 0x41, 0x48,
		0x5f, 0x42, 0x45, 0x41, 0x54, 0x59, 0x65, 0x61, 0x68, 0x20, 0x42, 0x65, 0x61, 0x74, 0x59, 0x65,
		0x61, 0x68, 0x4c, 0x49, 0x56, 0x45, 0x59, 0x65, 0x61, 0x68, 0x20, 0x4c, 0x49, 0x56, 0x45, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x58, 0x20, 0x43, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x20, 0x4d, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x20, 0x4d, 0x58, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x24, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x20, 0x55, 0x4c, 0x54,
		0x52, 0x41, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x45, 0x70,
		0x69, 0x78, 0x59, 0x65, 0x61, 0x68, 0x5f, 0x47, 0x6f, 0x59, 0x65, 0x61, 0x68, 0x20, 0x47, 0x6f,
		0x49, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x61, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x73, 0x69, 0x67,
		0x6e, 0x69, 0x61, 0x20, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x20, 0x24, 0x31, 0x54, 0x69, 0x6e, 0x61,
		0x69, 0x54, 0x69, 0x6e, 0x6d, 0x6f, 0x54, 0x6f, 0x6c, 0x69, 0x6e, 0x6f, 0x54, 0x6f, 0x6c, 0x69,
		0x6e, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x6f, 0x6e, 0x65, 0x54, 0x6f, 0x6f,
		0x6b, 0x79, 0x54, 0x4f, 0x4f, 0x4b, 0x59, 0x41, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x6f,
		0x70, 0x20, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x74, 0x6f, 0x20, 0x57, 0x34, 0x31, 0x38,
		0x43, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x31, 0x31, 0x37, 0x43, 0x6f, 0x74, 0x6f, 0x20, 0x54, 0x31,
		0x31, 0x37, 0x58, 0x31, 0x30, 0x31, 0x33, 0x43, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x34, 0x30, 0x30,
		0x31, 0x37, 0x54, 0x34, 0x30, 0x30, 0x31, 0x37, 0x54, 0x6f, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63,
		0x65, 0x54, 0x44, 0x54, 0x34, 0x35, 0x31, 0x38, 0x5f, 0x34, 0x47, 0x54, 0x6f, 0x70, 0x65, 0x6c,
		0x6f, 0x74, 0x65, 0x6b, 0x4b, 0x49, 0x44, 0x53, 0x30, 0x39, 0x4b, 0x49, 0x44, 0x53, 0x30, 0x39,
		0x20, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x6c,
		0x75, 0x78, 0x54, 0x6f, 0x70, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x50, 0x30, 0x31, 0x54, 0x6f, 0x72,
		0x65, 0x78, 0x50, 0x61, 0x64, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x52, 0x4f, 0x49, 0x44,
		0x5a, 0x20, 0x24, 0x31, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5a, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x33,
		0x67, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5a, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x33, 0x47, 0x44, 0x52,
		0x4f, 0x49, 0x44, 0x5a, 0x20, 0x41, 0x54, 0x4f, 0x4d, 0x20, 0x53, 0x44, 0x52, 0x4f, 0x49, 0x44,
		0x5a, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x53, 0x45, 0x47, 0x4f, 0x20, 0x24, 0x31, 0x45, 0x47,
		0x4f, 0x20, 0x50, 0x68, 0x61, 0x62, 0x20, 0x33, 0x47, 0x45, 0x47, 0x4f, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x34, 0x47, 0x54, 0x6f, 0x73, 0x68, 0x69, 0x62, 0x61, 0x54, 0x2d, 0x30, 0x31, 0x43,
		0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x54, 0x2d, 0x30, 0x31, 0x43, 0x54, 0x2d, 0x30, 0x31, 0x44,
		0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x54, 0x2d, 0x30, 0x31, 0x44, 0x54, 0x2d, 0x30, 0x32, 0x44,
		0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x54, 0x2d, 0x30, 0x32, 0x44, 0x49, 0x53, 0x30, 0x34, 0x52,
		0x65, 0x67, 0x7a, 0x61, 0x20, 0x49, 0x53, 0x30, 0x34, 0x49, 0x53, 0x31, 0x31, 0x54, 0x52, 0x65,
		0x67, 0x7a, 0x61, 0x20, 0x49, 0x53, 0x31, 0x31, 0x54, 0x41, 0x54, 0x37, 0x2d, 0x43, 0x41, 0x54,
		0x31, 0x53, 0x30, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54, 0x31, 0x53, 0x30, 0x41, 0x54,
		0x33, 0x30, 0x30, 0x53, 0x45, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54, 0x33, 0x30, 0x30,
		0x53, 0x45, 0x41, 0x54, 0x35, 0x30, 0x30, 0x61, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54,
		0x35, 0x30, 0x30, 0x61, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54, 0x24, 0x31, 0x45, 0x78,
		0x63, 0x69, 0x74, 0x65, 0x20, 0x41, 0x54, 0x31, 0x30, 0x24, 0x31, 0x2d, 0x41, 0x41, 0x54, 0x31,
		0x30, 0x2d, 0x41, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x41, 0x54, 0x31, 0x30, 0x2d, 0x41,
		0x53, 0x41, 0x54, 0x45, 0x4c, 0x4c, 0x49, 0x54, 0x45, 0x20, 0x4c, 0x35, 0x30, 0x2d, 0x43, 0x53,
		0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4c, 0x35, 0x30, 0x43, 0x53, 0x61, 0x74,
		0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x41, 0x46, 0x54, 0x4b, 0x4d, 0x53, 0x54,
		0x31, 0x32, 0x34, 0x33, 0x4c, 0x46, 0x37, 0x31, 0x31, 0x55, 0x32, 0x30, 0x41, 0x46, 0x54, 0x44,
		0x43, 0x54, 0x33, 0x31, 0x34, 0x4b, 0x20, 0x55, 0x48, 0x44, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x41, 0x46, 0x54, 0x42, 0x41, 0x4d, 0x52, 0x33, 0x31, 0x31, 0x34, 0x33, 0x4c, 0x46, 0x34,
		0x32, 0x31, 0x55, 0x31, 0x39, 0x54, 0x53, 0x42, 0x4e, 0x65, 0x74, 0x54, 0x56, 0x2f, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x6d, 0x61, 0x74,
		0x65, 0x54, 0x4d, 0x2d, 0x4d, 0x49, 0x44, 0x38, 0x37, 0x30, 0x53, 0x42, 0x53, 0x75, 0x70, 0x65,
		0x72, 0x4d, 0x61, 0x6e, 0x20, 0x38, 0x22, 0x54, 0x4d, 0x2d, 0x4d, 0x49, 0x44, 0x31, 0x30, 0x35,
		0x30, 0x57, 0x4b, 0x44, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x65, 0x65,
		0x64, 0x54, 0x52, 0x39, 0x39, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54,
		0x72, 0x65, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x53, 0x54, 0x31, 0x33, 0x34, 0x31, 0x36, 0x2d, 0x31, 0x53, 0x75, 0x72, 0x66,
		0x54, 0x61, 0x62, 0x20, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x20, 0x31, 0x33, 0x2e, 0x34,
		0x22, 0x53, 0x75, 0x72, 0x66, 0x74, 0x61, 0x62, 0x20, 0x74, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65,
		0x20, 0x53, 0x31, 0x31, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x54, 0x68, 0x65, 0x61,
		0x74, 0x72, 0x65, 0x20, 0x53, 0x31, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x20,
		0x50, 0x31, 0x30, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x46, 0x4d,
		0x54, 0x4b, 0x41, 0x57, 0x30, 0x31, 0x32, 0x33, 0x32, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62,
		0x20, 0x4c, 0x31, 0x35, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x58, 0x69, 0x6e, 0x74,
		0x72, 0x6f, 0x6e, 0x20, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x72, 0x65, 0x76, 0x69,
		0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x20, 0x56, 0x38, 0x54, 0x41, 0x42, 0x20,
		0x39, 0x20, 0x33, 0x47, 0x20, 0x56, 0x38, 0x54, 0x41, 0x42, 0x20, 0x39, 0x20, 0x33, 0x47, 0x54,
		0x41, 0x42, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x20, 0x56, 0x31, 0x36, 0x4d, 0x49, 0x4e, 0x49,
		0x54, 0x41, 0x42, 0x20, 0x33, 0x47, 0x56, 0x4d, 0x49, 0x4e, 0x49, 0x54, 0x41, 0x42, 0x20, 0x33,
		0x47, 0x20, 0x56, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x34, 0x20, 0x43, 0x50, 0x68,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x34, 0x20, 0x53, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x34, 0x2e, 0x35, 0x51, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x35, 0x20, 0x53,
		0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x35, 0x2e, 0x33, 0x20, 0x51, 0x50, 0x68, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x51, 0x20, 0x52, 0x45, 0x56, 0x45, 0x52,
		0x53, 0x45, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x36, 0x20, 0x53, 0x54, 0x72, 0x69,
		0x64, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x66, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x73, 0x73, 0x69,
		0x6f, 0x6e, 0x2d, 0x31, 0x53, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x53, 0x50,
		0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x73, 0x73, 0x69,
		0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x50,
		0x72, 0x6f, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x72, 0x69,
		0x6f, 0x56, 0x35, 0x31, 0x44, 0x54, 0x54, 0x72, 0x6f, 0x6e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x54,
		0x72, 0x75, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x35, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x34, 0x2e, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x20, 0x34, 0x2e, 0x30, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x34, 0x47, 0x20, 0x47, 0x65, 0x6e, 0x20, 0x43, 0x20, 0x24, 0x31, 0x22, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x79, 0x20, 0x35, 0x2e,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x34, 0x47, 0x20, 0x41,
		0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x34, 0x47, 0x20, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x34, 0x47, 0x20, 0x41, 0x64, 0x76, 0x65, 0x6e,
		0x74, 0x75, 0x72, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x41, 0x64, 0x76,
		0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x53,
		0x70, 0x65, 0x65, 0x64, 0x79, 0x20, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20,
		0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47,
		0x20, 0x50, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34,
		0x47, 0x20, 0x50, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x4d, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x54, 0x52, 0x55, 0x45, 0x20, 0x42, 0x45, 0x59, 0x4f, 0x4e, 0x44, 0x20,
		0x54, 0x41, 0x42, 0x20, 0x33, 0x47, 0x42, 0x65, 0x79, 0x6f, 0x6e, 0x64, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x30,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x43, 0x6f, 0x72, 0x65, 0x48, 0x50, 0x48, 0x30, 0x37, 0x49, 0x44,
		0x20, 0x54, 0x56, 0x20, 0x48, 0x50, 0x48, 0x30, 0x37, 0x54, 0x72, 0x75, 0x65, 0x20, 0x53, 0x6c,
		0x69, 0x6d, 0x54, 0x75, 0x43, 0x45, 0x4c, 0x54, 0x75, 0x6e, 0x69, 0x73, 0x69, 0x65, 0x20, 0x54,
		0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20,
		0x62, 0x79, 0x20, 0x54, 0x54, 0x58, 0x35, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x35, 0x20,
		0x48, 0x65, 0x72, 0x6f, 0x58, 0x20, 0x52, 0x61, 0x79, 0x58, 0x35, 0x20, 0x42, 0x6c, 0x61, 0x63,
		0x6b, 0x58, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x36, 0x20, 0x5a, 0x4d, 0x6f, 0x6e, 0x73, 0x74,
		0x65, 0x72, 0x50, 0x61, 0x64, 0x20, 0x37, 0x22, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x2d, 0x58, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x78, 0x5f, 0x53, 0x33, 0x53, 0x33, 0x45, 0x33, 0x4d, 0x65, 0x72, 0x63,
		0x75, 0x72, 0x79, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x2d, 0x58, 0x5f, 0x65, 0x70, 0x73, 0x69, 0x6c,
		0x6f, 0x6e, 0x45, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x2d, 0x58,
		0x20, 0x6c, 0x61, 0x6d, 0x64, 0x61, 0x4c, 0x61, 0x6d, 0x64, 0x61, 0x50, 0x69, 0x20, 0x34, 0x47,
		0x54, 0x55, 0x52, 0x42, 0x4f, 0x58, 0x5f, 0x49, 0x34, 0x47, 0x49, 0x20, 0x34, 0x47, 0x49, 0x63,
		0x65, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x2d, 0x58, 0x20, 0x43, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x49,
		0x49, 0x43, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x49, 0x49, 0x41, 0x71, 0x75, 0x61, 0x20, 0x49, 0x49,
		0x48, 0x69, 0x76, 0x65, 0x20, 0x56, 0x20, 0x33, 0x47, 0x48, 0x69, 0x76, 0x65, 0x20, 0x56, 0x49,
		0x46, 0x69, 0x72, 0x65, 0x20, 0x49, 0x49, 0x20, 0x57, 0x69, 0x46, 0x69, 0x42, 0x72, 0x65, 0x65,
		0x7a, 0x65, 0x20, 0x49, 0x56, 0x52, 0x75, 0x62, 0x69, 0x6b, 0x20, 0x49, 0x49, 0x20, 0x37, 0x22,
		0x52, 0x75, 0x62, 0x69, 0x6b, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x52, 0x75,
		0x62, 0x69, 0x6b, 0x20, 0x49, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x52, 0x61, 0x69,
		0x6e, 0x62, 0x6f, 0x77, 0x20, 0x49, 0x49, 0x49, 0x20, 0x33, 0x47, 0x43, 0x61, 0x6c, 0x6c, 0x54,
		0x61, 0x62, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x43, 0x61, 0x6c, 0x6c, 0x74,
		0x61, 0x62, 0x32, 0x47, 0x42, 0x31, 0x30, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x43, 0x61, 0x6c, 0x6c, 0x74, 0x61, 0x62, 0x37, 0x69, 0x6e, 0x63, 0x68,
		0x43, 0x61, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43,
		0x4f, 0x52, 0x45, 0x20, 0x41, 0x33, 0x33, 0x20, 0x69, 0x6e, 0x65, 0x74, 0x54, 0x77, 0x69, 0x73,
		0x74, 0x65, 0x72, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b, 0x69, 0x64, 0x73, 0x4d, 0x6f, 0x6e, 0x73,
		0x74, 0x65, 0x72, 0x70, 0x61, 0x64, 0x20, 0x33, 0x47, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72,
		0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x33, 0x47, 0x20, 0x4e, 0x65, 0x77, 0x54, 0x75, 0x72, 0x62,
		0x6f, 0x50, 0x61, 0x64, 0x54, 0x75, 0x72, 0x6b, 0x63, 0x65, 0x6c, 0x6c, 0x54, 0x75, 0x72, 0x62,
		0x6f, 0x20, 0x54, 0x35, 0x30, 0x54, 0x24, 0x31, 0x30, 0x54, 0x32, 0x31, 0x20, 0x4d, 0x61, 0x78,
		0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x54, 0x32, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x69,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x54, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x54, 0x77,
		0x6f, 0x65, 0x54, 0x79, 0x6d, 0x65, 0x73, 0x54, 0xc3, 0xbc, 0x72, 0x6b, 0x20, 0x54, 0x65, 0x6c,
		0x65, 0x6b, 0x6f, 0x6d, 0x54, 0x75, 0x72, 0x6b, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x6b, 0x6f, 0x6d,
		0x54, 0x54, 0x31, 0x37, 0x35, 0x55, 0x2d, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x45, 0x6e, 0x6a, 0x6f,
		0x79, 0x20, 0x33, 0x30, 0x65, 0x20, 0x35, 0x47, 0x55, 0x2e, 0x53, 0x2e, 0x20, 0x43, 0x65, 0x6c,
		0x6c, 0x75, 0x6c, 0x61, 0x72, 0x55, 0x53, 0x43, 0x43, 0x2d, 0x55, 0x53, 0x43, 0x43, 0x2d, 0x45,
		0x36, 0x37, 0x36, 0x32, 0x4b, 0x79, 0x6f, 0x63, 0x65, 0x72, 0x61, 0x20, 0x44, 0x75, 0x72, 0x61,
		0x46, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x45, 0x55, 0x45, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x50,
		0x61, 0x64, 0x20, 0x31, 0x55, 0x4d, 0x49, 0x44, 0x49, 0x47, 0x49, 0x41, 0x31, 0x31, 0x20, 0x54,
		0x61, 0x62, 0x41, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x50, 0x31,
		0x37, 0x43, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x50, 0x31, 0x38, 0x47, 0x31, 0x20, 0x4d, 0x61,
		0x78, 0x41, 0x31, 0x31, 0x53, 0x41, 0x31, 0x33, 0x53, 0x55, 0x4d, 0x49, 0x20, 0x54, 0x4f, 0x55,
		0x43, 0x48, 0x20, 0x58, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x58, 0x55, 0x4d, 0x49, 0x20, 0x54,
		0x4f, 0x55, 0x43, 0x48, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x45, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x72,
		0x6f, 0x42, 0x49, 0x53, 0x4f, 0x4e, 0x20, 0x47, 0x54, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x47,
		0x54, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x47, 0x42, 0x69, 0x73, 0x6f, 0x6e,
		0x20, 0x4e, 0x31, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x42, 0x69, 0x73, 0x6f,
		0x6e, 0x20, 0x47, 0x54, 0x32, 0x20, 0x35, 0x47, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x47, 0x54,
		0x32, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x32, 0x42, 0x49, 0x53, 0x4f, 0x4e, 0x20, 0x50, 0x72,
		0x6f, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x49, 0x53, 0x4f, 0x4e, 0x42,
		0x69, 0x73, 0x6f, 0x6e, 0x68, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x53, 0x48, 0x61, 0x6d, 0x6d,
		0x65, 0x72, 0x20, 0x53, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x5f, 0x58, 0x44, 0x69, 0x61,
		0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x58, 0x43, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x32, 0x43, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65, 0x72, 0x5a, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x32, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x53, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x32,
		0x5f, 0x50, 0x52, 0x4f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x33, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x35, 0x53, 0x41, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x31, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x35, 0x47, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x55, 0x4e, 0x49, 0x57, 0x41, 0x55, 0x4e, 0x4e, 0x4f, 0x55,
		0x4f, 0x4f, 0x47, 0x4f, 0x55, 0x55, 0x54, 0x4f, 0x4b, 0x44, 0x6f, 0x72, 0x65, 0x6c, 0x20, 0x33,
		0x53, 0x44, 0x6f, 0x72, 0x65, 0x6c, 0x20, 0x24, 0x31, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x37,
		0x51, 0x55, 0x54, 0x53, 0x74, 0x61, 0x72, 0x63, 0x6f, 0x6d, 0x55, 0x54, 0x69, 0x6d, 0x65, 0x55,
		0x5a, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55, 0x7a, 0x62, 0x65, 0x6b, 0x69, 0x73, 0x74,
		0x61, 0x6e, 0x55, 0x67, 0x6f, 0x6f, 0x73, 0x55, 0x54, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55,
		0x68, 0x61, 0x6e, 0x73, 0x55, 0x68, 0x61, 0x70, 0x70, 0x79, 0x55, 0x50, 0x24, 0x31, 0x55, 0x50,
		0x33, 0x35, 0x30, 0x55, 0x50, 0x35, 0x38, 0x30, 0x55, 0x35, 0x38, 0x30, 0x55, 0x6c, 0x65, 0x66,
		0x6f, 0x6e, 0x65, 0x42, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x24, 0x31, 0x42, 0x65, 0x20,
		0x50, 0x75, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x65, 0x20, 0x50, 0x75, 0x72, 0x65,
		0x42, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x65, 0x20, 0x4f, 0x6e,
		0x65, 0x42, 0x65, 0x20, 0x58, 0x55, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x36, 0x30, 0x30,
		0x30, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x72, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x74, 0x65,
		0x50, 0x61, 0x72, 0x69, 0x73, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72, 0x69, 0x73, 0x5f,
		0x58, 0x50, 0x61, 0x72, 0x69, 0x73, 0x20, 0x58, 0x50, 0x61, 0x72, 0x69, 0x73, 0x54, 0x69, 0x67,
		0x65, 0x72, 0x5f, 0x6c, 0x69, 0x74, 0x65, 0x54, 0x69, 0x67, 0x65, 0x72, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24,
		0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20,
		0x31, 0x38, 0x54, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x36, 0x53, 0x41, 0x72, 0x6d, 0x6f, 0x72,
		0x20, 0x24, 0x31, 0x45, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x24, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x24, 0x31, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20,
		0x24, 0x31, 0x53, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20,
		0x33, 0x57, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x33, 0x57, 0x54, 0x41, 0x72, 0x6d, 0x6f, 0x72,
		0x20, 0x24, 0x31, 0x20, 0x35, 0x47, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x24,
		0x31, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x65, 0x6e, 0x6e,
		0x61, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x50, 0x55, 0x6d, 0x61, 0x78, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x51, 0x61, 0x20, 0x33, 0x47, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x51, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x43, 0x20, 0x4c, 0x54, 0x45,
		0x31, 0x30, 0x4c, 0x2d, 0x50, 0x4c, 0x55, 0x53, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x31, 0x30, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x51, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x41, 0x20, 0x4c, 0x54, 0x45, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x51, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x35, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
		0x20, 0x54, 0x65, 0x63, 0x68, 0x53, 0x39, 0x30, 0x30, 0x50, 0x52, 0x4f, 0x42, 0x54, 0x53, 0x39,
		0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x42, 0x54, 0x53, 0x39, 0x30, 0x30, 0x5f, 0x50, 0x72,
		0x6f, 0x53, 0x39, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x55,
		0x6e, 0x69, 0x68, 0x65, 0x72, 0x74, 0x7a, 0x4a, 0x65, 0x6c, 0x6c, 0x79, 0x20, 0x32, 0x54, 0x69,
		0x74, 0x61, 0x6e, 0x5f, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20,
		0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x6c, 0x69, 0x6d,
		0x54, 0x69, 0x63, 0x6b, 0x74, 0x6f, 0x63, 0x6b, 0x2d, 0x53, 0x54, 0x69, 0x63, 0x6b, 0x74, 0x6f,
		0x63, 0x6b, 0x20, 0x53, 0x54, 0x69, 0x63, 0x6b, 0x74, 0x6f, 0x63, 0x6b, 0x54, 0x41, 0x4e, 0x4b,
		0x20, 0x30, 0x31, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x30, 0x31, 0x54, 0x41, 0x4e, 0x4b, 0x32, 0x38,
		0x38, 0x34, 0x39, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x32, 0x55, 0x6e, 0x69, 0x6d, 0x61, 0x78,
		0x55, 0x6e, 0x69, 0x71, 0x63, 0x65, 0x6c, 0x6c, 0x55, 0x4e, 0x49, 0x51, 0x43, 0x45, 0x4c, 0x4c,
		0x5f, 0x41, 0x34, 0x55, 0x6e, 0x69, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x6e, 0x69, 0x73, 0x74,
		0x72, 0x6f, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x65, 0x63, 0x68, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
		0x77, 0x6e, 0x57, 0x65, 0x62, 0x20, 0x54, 0x56, 0x4d, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x4d, 0x38, 0x53, 0x2b, 0x20, 0x34, 0x4b, 0x48, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x69, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x75, 0x64, 0x69, 0x20,
		0x4b, 0x53, 0x55, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x55, 0x35, 0x31, 0x33, 0x44, 0x72, 0x6f,
		0x6e, 0x65, 0x20, 0x58, 0x54, 0x55, 0x35, 0x31, 0x35, 0x31, 0x55, 0x36, 0x31, 0x31, 0x51, 0x75,
		0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x58, 0x55, 0x36, 0x31, 0x33, 0x51, 0x75, 0x61, 0x74, 0x74,
		0x72, 0x6f, 0x20, 0x53, 0x55, 0x36, 0x31, 0x35, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20,
		0x4d, 0x55, 0x36, 0x31, 0x36, 0x55, 0x37, 0x31, 0x30, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f,
		0x20, 0x55, 0x37, 0x31, 0x30, 0x55, 0x37, 0x32, 0x30, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f,
		0x20, 0x5a, 0x55, 0x2d, 0x38, 0x33, 0x30, 0x52, 0x75, 0x73, 0x68, 0x55, 0x39, 0x30, 0x33, 0x55,
		0x39, 0x30, 0x35, 0x41, 0x69, 0x72, 0x20, 0x35, 0x2e, 0x35, 0x55, 0x6e, 0x6e, 0x69, 0x6f, 0x6e,
		0x20, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x65, 0x73, 0x53, 0x50, 0x37,
		0x55, 0x6e, 0x6f, 0x6e, 0x75, 0x55, 0x6e, 0x6f, 0x77, 0x68, 0x79, 0x51, 0x4f, 0x4f, 0x51, 0x20,
		0x56, 0x24, 0x31, 0x51, 0x4f, 0x4f, 0x51, 0x55, 0x72, 0x6f, 0x76, 0x6f, 0x56, 0x2d, 0x47, 0x65,
		0x6e, 0x56, 0x2d, 0x48, 0x4f, 0x4d, 0x45, 0x56, 0x2d, 0x48, 0x4f, 0x50, 0x45, 0x56, 0x41, 0x49,
		0x4f, 0x56, 0x50, 0x41, 0x30, 0x35, 0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x41, 0x56, 0x41,
		0x4c, 0x45, 0x4d, 0x50, 0x48, 0x41, 0x4e, 0x54, 0x4f, 0x4d, 0x5f, 0x5a, 0x50, 0x68, 0x61, 0x6e,
		0x74, 0x6f, 0x6d, 0x20, 0x5a, 0x56, 0x41, 0x4c, 0x54, 0x45, 0x43, 0x48, 0x54, 0x41, 0x42, 0x37,
		0x51, 0x38, 0x30, 0x34, 0x56, 0x41, 0x4c, 0x54, 0x41, 0x42, 0x2d, 0x37, 0x51, 0x38, 0x30, 0x34,
		0x56, 0x41, 0x4c, 0x56, 0x41, 0x56, 0x41, 0x56, 0x43, 0x43, 0x61, 0x63, 0x74, 0x75, 0x73, 0x2d,
		0x50, 0x72, 0x6f, 0x43, 0x61, 0x63, 0x74, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x20,
		0x49, 0x49, 0x56, 0x44, 0x56, 0x44, 0x56, 0x45, 0x4f, 0x4e, 0x56, 0x45, 0x54, 0x41, 0x53, 0x56,
		0x47, 0x4f, 0x20, 0x54, 0x45, 0x4c, 0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x20, 0x56, 0x24,
		0x31, 0x4f, 0x63, 0x65, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x4e, 0x65, 0x77, 0x20, 0x24, 0x31, 0x69,
		0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x69, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x49, 0x44,
		0x41, 0x56, 0x49, 0x49, 0x50, 0x4f, 0x4f, 0x76, 0x69, 0x32, 0x30, 0x32, 0x32, 0x30, 0x38, 0x31,
		0x39, 0x52, 0x36, 0x56, 0x49, 0x56, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x56, 0x49, 0x57, 0x41, 0x4c,
		0x49, 0x47, 0x48, 0x54, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4c, 0x69, 0x67,
		0x68, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x20, 0x4f, 0x4e, 0x45,
		0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x4f, 0x6e, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x41,
		0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x20, 0x50, 0x31, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x50, 0x31, 0x56, 0x4b, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x56,
		0x4b, 0x24, 0x31, 0x56, 0x4b, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x54, 0x35, 0x20, 0x53, 0x45, 0x56,
		0x4f, 0x47, 0x41, 0x56, 0x4f, 0x47, 0x41, 0x20, 0x35, 0x35, 0x39, 0x30, 0x39, 0x56, 0x56, 0x4f,
		0x4c, 0x4b, 0x41, 0x4e, 0x4f, 0x56, 0x55, 0x43, 0x41, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x56, 0x75,
		0x63, 0x61, 0x50, 0x61, 0x64, 0x56, 0x56, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x56, 0x31, 0x56, 0x61,
		0x6e, 0x6b, 0x79, 0x6f, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x50, 0x61, 0x64, 0x20, 0x53, 0x24,
		0x31, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x51, 0x54, 0x61,
		0x62, 0x20, 0x24, 0x31, 0x53, 0x31, 0x30, 0x5f, 0x52, 0x4f, 0x57, 0x4d, 0x61, 0x74, 0x72, 0x69,
		0x78, 0x50, 0x61, 0x64, 0x20, 0x53, 0x31, 0x30, 0x56, 0x61, 0x72, 0x67, 0x6f, 0x56, 0x61, 0x73,
		0x74, 0x6b, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x20,
		0x24, 0x32, 0x56, 0x65, 0x6b, 0x74, 0x61, 0x56, 0x65, 0x6e, 0x73, 0x6f, 0x49, 0x73, 0x70, 0x72,
		0x69, 0x74, 0x20, 0x55, 0x35, 0x30, 0x56, 0x65, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x56, 0x65, 0x6e,
		0x74, 0x75, 0x72, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72,
		0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x43, 0x54, 0x24, 0x31, 0x56, 0x65, 0x72, 0x69,
		0x63, 0x6f, 0x55, 0x6e, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x55, 0x6e, 0x69, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x50, 0x4d, 0x2d, 0x24, 0x31, 0x56, 0x65, 0x72, 0x69, 0x7a, 0x6f, 0x6e,
		0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x31, 0x30, 0x51, 0x54, 0x41, 0x53, 0x55,
		0x4e, 0x31, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x38, 0x20, 0x48, 0x44, 0x51,
		0x54, 0x41, 0x53, 0x55, 0x4e, 0x32, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x38,
		0x20, 0x48, 0x44, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x51, 0x54, 0x41, 0x51, 0x5a, 0x33,
		0x4b, 0x49, 0x44, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x4b, 0x69, 0x64, 0x73,
		0x20, 0x4c, 0x54, 0x45, 0x51, 0x54, 0x41, 0x51, 0x5a, 0x33, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73,
		0x69, 0x73, 0x20, 0x38, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x37, 0x57, 0x54,
		0x56, 0x49, 0x53, 0x30, 0x31, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x4d, 0x69, 0x64,
		0x6e, 0x69, 0x67, 0x68, 0x74, 0x56, 0x65, 0x72, 0x6e, 0x65, 0x65, 0x41, 0x70, 0x6f, 0x6c, 0x6c,
		0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x58, 0x4d, 0x61,
		0x72, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x45, 0x54, 0x68, 0x6f, 0x72,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x65, 0x72, 0x6e, 0x65, 0x65, 0x5f, 0x4d, 0x35, 0x4d, 0x37,
		0x5f, 0x45, 0x45, 0x41, 0x58, 0x32, 0x5f, 0x65, 0x75, 0x72, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x73,
		0x65, 0x64, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x45, 0x31, 0x2e, 0x31, 0x56, 0x65, 0x72,
		0x73, 0x75, 0x73, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4c, 0x75, 0x63, 0x6b, 0x20, 0x4c, 0x20,
		0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x4d, 0x61,
		0x78, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65,
		0x50, 0x72, 0x6f, 0x20, 0x50, 0x24, 0x31, 0x20, 0x34, 0x47, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73,
		0x73, 0x20, 0x4c, 0x75, 0x63, 0x6b, 0x20, 0x34, 0x47, 0x20, 0x4e, 0x46, 0x43, 0x49, 0x6d, 0x70,
		0x72, 0x65, 0x73, 0x73, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x24, 0x31, 0x20, 0x24,
		0x32, 0x47, 0x54, 0x61, 0x62, 0x20, 0x58, 0x24, 0x31, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x47,
		0x20, 0x24, 0x32, 0x2e, 0x24, 0x33, 0x22, 0x56, 0x65, 0x72, 0x74, 0x75, 0x41, 0x73, 0x74, 0x65,
		0x72, 0x24, 0x31, 0x69, 0x56, 0x65, 0x72, 0x74, 0x75, 0x20, 0x35, 0x47, 0x4d, 0x65, 0x74, 0x61,
		0x76, 0x65, 0x72, 0x74, 0x75, 0x20, 0x35, 0x47, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c,
		0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x58, 0x56, 0x65, 0x72, 0x79, 0x6b, 0x6f, 0x6f, 0x6c, 0x76,
		0x65, 0x72, 0x79, 0x6b, 0x6f, 0x6f, 0x6c, 0x4c, 0x6f, 0x74, 0x75, 0x73, 0x4c, 0x6f, 0x74, 0x75,
		0x73, 0x20, 0x4a, 0x72, 0x4c, 0x6f, 0x74, 0x75, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x49, 0x49, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x4c, 0x54, 0x45, 0x4c,
		0x6f, 0x74, 0x75, 0x73, 0x20, 0x49, 0x49, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20,
		0x50, 0x72, 0x6f, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f,
		0x6d, 0x48, 0x65, 0x6c, 0x69, 0x78, 0x20, 0x49, 0x49, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50,
		0x72, 0x6f, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x49, 0x49, 0x4d, 0x61, 0x76,
		0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x49, 0x49, 0x49, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63,
		0x6b, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4a, 0x72, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b,
		0x20, 0x4a, 0x72, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x4c, 0x54, 0x45, 0x53,
		0x70, 0x65, 0x61, 0x72, 0x53, 0x70, 0x65, 0x61, 0x72, 0x20, 0x4a, 0x72, 0x41, 0x70, 0x6f, 0x6c,
		0x6c, 0x6f, 0x20, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f,
		0x53, 0x6f, 0x6c, 0x20, 0x51, 0x75, 0x61, 0x74, 0x72, 0x6f, 0x20, 0x4a, 0x72, 0x43, 0x79, 0x70,
		0x72, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x79, 0x70, 0x72, 0x75, 0x73, 0x20, 0x4c, 0x54,
		0x45, 0x4c, 0x65, 0x6f, 0x20, 0x33, 0x47, 0x4c, 0x65, 0x6f, 0x20, 0x49, 0x56, 0x4c, 0x65, 0x6f,
		0x20, 0x56, 0x44, 0x6f, 0x72, 0x61, 0x64, 0x6f, 0x4f, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72,
		0x6f, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4a, 0x72, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x52, 0x6f,
		0x79, 0x61, 0x6c, 0x65, 0x20, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x4b, 0x6f, 0x6c, 0x6f,
		0x72, 0x50, 0x61, 0x64, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x61, 0x64,
		0x20, 0x49, 0x49, 0x4b, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x61, 0x64, 0x20, 0x49, 0x56, 0x56, 0x65,
		0x73, 0x74, 0x61, 0x56, 0x45, 0x53, 0x54, 0x41, 0x33, 0x32, 0x4c, 0x44, 0x38, 0x36, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x54, 0x56, 0x20, 0x33, 0x32, 0x4c, 0x44, 0x38, 0x36, 0x53, 0x56, 0x45, 0x53,
		0x54, 0x41, 0x5f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x54, 0x56, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x54, 0x56, 0x56, 0x65, 0x73, 0x74, 0x65, 0x6c, 0x56, 0x54, 0x39, 0x37, 0x50, 0x52, 0x4f, 0x56,
		0x54, 0x61, 0x62, 0x20, 0x39, 0x2e, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x50, 0x37, 0x34, 0x56,
		0x54, 0x61, 0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x49, 0x49, 0x56, 0x54, 0x41, 0x42, 0x31,
		0x30, 0x56, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x37, 0x5f,
		0x45, 0x43, 0x4f, 0x5f, 0x49, 0x49, 0x49, 0x56, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x45, 0x63,
		0x6f, 0x20, 0x33, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x37, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x5f,
		0x49, 0x49, 0x49, 0x56, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x33,
		0x56, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x56, 0x33, 0x5f, 0x35, 0x35, 0x38, 0x30, 0x5f, 0x44,
		0x75, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x56, 0x33, 0x20, 0x35, 0x35, 0x38, 0x30,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x56, 0x53, 0x50, 0x31, 0x34, 0x35, 0x4d, 0x56, 0x65, 0x6e, 0x75,
		0x73, 0x20, 0x34, 0x2e, 0x35, 0x56, 0x53, 0x50, 0x32, 0x35, 0x30, 0x47, 0x56, 0x65, 0x6e, 0x75,
		0x73, 0x20, 0x35, 0x2e, 0x30, 0x56, 0x56, 0x53, 0x50, 0x32, 0x35, 0x30, 0x53, 0x56, 0x65, 0x6e,
		0x75, 0x73, 0x20, 0x35, 0x2e, 0x30, 0x58, 0x56, 0x53, 0x50, 0x33, 0x35, 0x35, 0x47, 0x56, 0x65,
		0x6e, 0x75, 0x73, 0x20, 0x35, 0x2e, 0x35, 0x56, 0x56, 0x53, 0x50, 0x33, 0x35, 0x35, 0x53, 0x56,
		0x65, 0x6e, 0x75, 0x73, 0x20, 0x35, 0x2e, 0x35, 0x58, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x56,
		0x24, 0x31, 0x24, 0x32, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x5a, 0x24, 0x31, 0x56, 0x65, 0x6e,
		0x75, 0x73, 0x20, 0x45, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x56,
		0x65, 0x6e, 0x75, 0x73, 0x20, 0x45, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x65, 0x6e, 0x75,
		0x73, 0x20, 0x45, 0x24, 0x31, 0x56, 0x65, 0x73, 0x74, 0x65, 0x6c, 0x5f, 0x35, 0x30, 0x30, 0x30,
		0x5f, 0x44, 0x75, 0x61, 0x6c, 0x35, 0x30, 0x30, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x56, 0x65,
		0x73, 0x74, 0x65, 0x6c, 0x5f, 0x35, 0x30, 0x30, 0x30, 0x5f, 0x32, 0x67, 0x62, 0x35, 0x30, 0x30,
		0x30, 0x20, 0x32, 0x47, 0x42, 0x35, 0x35, 0x33, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x56, 0x65,
		0x78, 0x69, 0x61, 0x56, 0x65, 0x78, 0x69, 0x61, 0x20, 0x46, 0x43, 0x53, 0x20, 0x45, 0x32, 0x20,
		0x43, 0x4c, 0x4d, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x45, 0x32, 0x20, 0x43,
		0x4c, 0x4d, 0x56, 0x69, 0x42, 0x6f, 0x78, 0x56, 0x69, 0x63, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x63,
		0x6f, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x5f, 0x56, 0x31, 0x35, 0x38, 0x35,
		0x56, 0x31, 0x35, 0x38, 0x35, 0x56, 0x54, 0x37, 0x35, 0x43, 0x4b, 0x72, 0x79, 0x74, 0x6f, 0x6e,
		0x20, 0x33, 0x4b, 0x72, 0x79, 0x74, 0x6f, 0x6e, 0x4b, 0x72, 0x79, 0x74, 0x6f, 0x6e, 0x20, 0x32,
		0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x31, 0x44,
		0x65, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x31, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x32, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x53, 0x74,
		0x61, 0x72, 0x72, 0x20, 0x31, 0x30, 0x30, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x30, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x5a, 0x34, 0x35, 0x20, 0x24, 0x31, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x5a, 0x34, 0x35, 0x51, 0x20, 0x53, 0x74, 0x61, 0x72,
		0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x5a, 0x35, 0x30, 0x20, 0x4e, 0x6f, 0x76,
		0x61, 0x56, 0x69, 0x65, 0x77, 0x53, 0x6f, 0x6e, 0x69, 0x63, 0x56, 0x35, 0x30, 0x30, 0x41, 0x38,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24,
		0x31, 0x76, 0x73, 0x69, 0x37, 0x71, 0x5f, 0x31, 0x56, 0x69, 0x65, 0x77, 0x50, 0x61, 0x64, 0x20,
		0x69, 0x37, 0x51, 0x56, 0x69, 0x65, 0x77, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x56, 0x69, 0x65,
		0x77, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x49, 0x46, 0x50, 0x24, 0x31, 0x35, 0x30, 0x2d, 0x33,
		0x20, 0x24, 0x31, 0x22, 0x20, 0x34, 0x4b, 0x56, 0x69, 0x6e, 0x61, 0x62, 0x6f, 0x78, 0x58, 0x24,
		0x31, 0x20, 0x28, 0x24, 0x32, 0x29, 0x56, 0x69, 0x6e, 0x67, 0x61, 0x56, 0x4d, 0x50, 0x2d, 0x30,
		0x32, 0x31, 0x2d, 0x38, 0x32, 0x30, 0x32, 0x31, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x32, 0x35, 0x2d,
		0x33, 0x32, 0x34, 0x30, 0x32, 0x35, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x31, 0x35, 0x2d, 0x31, 0x36,
		0x32, 0x30, 0x31, 0x35, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x34, 0x31, 0x2d, 0x31, 0x36, 0x32, 0x30,
		0x34, 0x31, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x34, 0x35, 0x2d, 0x36, 0x36, 0x34, 0x30, 0x34, 0x35,
		0x56, 0x4d, 0x50, 0x2d, 0x30, 0x31, 0x31, 0x2d, 0x38, 0x31, 0x30, 0x31, 0x31, 0x30, 0x32, 0x33,
		0x56, 0x69, 0x6e, 0x73, 0x6f, 0x63, 0x56, 0x69, 0x6f, 0x73, 0x56, 0x4d, 0x50, 0x30, 0x36, 0x31,
		0x37, 0x56, 0x69, 0x70, 0x72, 0x6f, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x58, 0x45, 0x64, 0x67, 0x65,
		0x20, 0x32, 0x56, 0x69, 0x72, 0x7a, 0x6f, 0x56, 0x24, 0x31, 0x63, 0x56, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72,
		0x65, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x20, 0x4c, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x73,
		0x74, 0x69, 0x67, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x31, 0x30, 0x24, 0x31, 0x50,
		0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31,
		0x56, 0x69, 0x74, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x56, 0x69, 0x74, 0x79, 0x61, 0x7a, 0x56, 0x69,
		0x75, 0x6d, 0x65, 0x65, 0x24, 0x31, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x24, 0x31, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x45, 0x56, 0x35, 0x20, 0x58, 0x45, 0x56, 0x37, 0x56, 0x69, 0x76, 0x61, 0x78,
		0x46, 0x6c, 0x79, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x79, 0x20, 0x34, 0x50,
		0x6f, 0x69, 0x6e, 0x74, 0x20, 0x58, 0x24, 0x31, 0x46, 0x75, 0x6e, 0x20, 0x53, 0x35, 0x30, 0x30,
		0x46, 0x75, 0x6e, 0x20, 0x53, 0x24, 0x31, 0x46, 0x6c, 0x79, 0x20, 0x24, 0x31, 0x46, 0x6c, 0x79,
		0x20, 0x56, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20,
		0x58, 0x35, 0x30, 0x31, 0x30, 0x54, 0x50, 0x43, 0x2d, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x56,
		0x69, 0x76, 0x6f, 0x58, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x56, 0x32, 0x31, 0x37, 0x38, 0x41, 0x58,
		0x20, 0x46, 0x6f, 0x6c, 0x64, 0x56, 0x32, 0x32, 0x36, 0x36, 0x41, 0x58, 0x20, 0x46, 0x6f, 0x6c,
		0x64, 0x20, 0x32, 0x56, 0x32, 0x32, 0x32, 0x39, 0x41, 0x58, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x2b,
		0x69, 0x51, 0x4f, 0x4f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x33, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x39,
		0x69, 0x51, 0x4f, 0x4f, 0x20, 0x39, 0x20, 0x53, 0x45, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x39, 0x54, 0x56, 0x32, 0x32, 0x31, 0x38, 0x41,
		0x69, 0x51, 0x4f, 0x4f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x32, 0x31, 0x37,
		0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x31, 0x30, 0x56, 0x32, 0x32, 0x34, 0x33, 0x41, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x31, 0x31, 0x56, 0x32, 0x32, 0x35, 0x34, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x33, 0x20, 0x35, 0x47, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x55, 0x35, 0x56, 0x32, 0x31, 0x38, 0x30, 0x47, 0x41, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x55, 0x35, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x37, 0x56, 0x32, 0x31, 0x39, 0x36,
		0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x36, 0x56, 0x32, 0x32, 0x33, 0x31,
		0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x56, 0x32, 0x32, 0x33, 0x38,
		0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x20, 0x53, 0x45, 0x56, 0x32,
		0x31, 0x35, 0x37, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x20, 0x53,
		0x45, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x53, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x37, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f,
		0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e,
		0x65, 0x6f, 0x20, 0x38, 0x35, 0x35, 0x56, 0x32, 0x33, 0x30, 0x31, 0x41, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x4e, 0x65, 0x6f, 0x20, 0x38, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35,
		0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x36, 0x20, 0x53, 0x45, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x5a, 0x31, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x31, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x5a, 0x33, 0x56, 0x31, 0x39, 0x31, 0x39, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x35, 0x78,
		0x56, 0x32, 0x31, 0x33, 0x31, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x35, 0x78, 0x20, 0x35,
		0x47, 0x56, 0x32, 0x31, 0x34, 0x38, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x35, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x5a, 0x35, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x36, 0x56,
		0x32, 0x31, 0x36, 0x34, 0x4b, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x36, 0x78, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x5a, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x36,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x31, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x55, 0x31, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x33, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x55, 0x33, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x33, 0x78, 0x20, 0x35, 0x47, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x38, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32,
		0x31, 0x56, 0x32, 0x31, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x65, 0x56, 0x32, 0x31, 0x65, 0x20,
		0x35, 0x47, 0x56, 0x32, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x55, 0x32, 0x30, 0x55,
		0x31, 0x30, 0x4e, 0x65, 0x78, 0x4e, 0x65, 0x78, 0x20, 0x33, 0x4e, 0x65, 0x78, 0x20, 0x33, 0x20,
		0x35, 0x47, 0x4e, 0x65, 0x78, 0x20, 0x33, 0x53, 0x4e, 0x65, 0x78, 0x20, 0x53, 0x4e, 0x65, 0x78,
		0x20, 0x33, 0x53, 0x20, 0x35, 0x47, 0x4e, 0x65, 0x78, 0x20, 0x41, 0x4e, 0x65, 0x78, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x20, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x31, 0x20, 0x35, 0x47,
		0x56, 0x32, 0x31, 0x35, 0x31, 0x54, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x56, 0x32,
		0x31, 0x35, 0x33, 0x54, 0x31, 0x20, 0x34, 0x47, 0x56, 0x32, 0x31, 0x34, 0x33, 0x54, 0x31, 0x78,
		0x56, 0x32, 0x31, 0x38, 0x38, 0x41, 0x54, 0x32, 0x78, 0x56, 0x32, 0x32, 0x35, 0x33, 0x54, 0x32,
		0x78, 0x20, 0x35, 0x47, 0x56, 0x31, 0x39, 0x36, 0x32, 0x42, 0x41, 0x47, 0x31, 0x20, 0x35, 0x47,
		0x53, 0x31, 0x35, 0x53, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x31, 0x33, 0x30, 0x41, 0x53,
		0x31, 0x30, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x65, 0x56, 0x32, 0x31, 0x32, 0x36, 0x56,
		0x32, 0x33, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x33, 0x30, 0x56, 0x32, 0x33, 0x20, 0x35,
		0x47, 0x56, 0x32, 0x31, 0x33, 0x32, 0x41, 0x58, 0x37, 0x30, 0x74, 0x56, 0x32, 0x31, 0x33, 0x32,
		0x56, 0x32, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x56, 0x32, 0x32, 0x30, 0x32, 0x56,
		0x32, 0x35, 0x20, 0x53, 0x45, 0x56, 0x32, 0x35, 0x65, 0x56, 0x32, 0x32, 0x33, 0x30, 0x56, 0x32,
		0x37, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x32, 0x33, 0x37, 0x56, 0x32, 0x37, 0x65, 0x56, 0x32,
		0x37, 0x56, 0x32, 0x32, 0x30, 0x37, 0x41, 0x53, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x36,
		0x20, 0x35, 0x47, 0x53, 0x31, 0x32, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x39, 0x30, 0x41, 0x53,
		0x31, 0x35, 0x65, 0x56, 0x32, 0x32, 0x34, 0x34, 0x41, 0x53, 0x31, 0x36, 0x56, 0x32, 0x32, 0x33,
		0x39, 0x41, 0x53, 0x31, 0x36, 0x65, 0x53, 0x37, 0x56, 0x32, 0x32, 0x38, 0x33, 0x41, 0x56, 0x32,
		0x32, 0x38, 0x34, 0x41, 0x53, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x37, 0x65, 0x53, 0x37,
		0x74, 0x53, 0x37, 0x74, 0x20, 0x35, 0x47, 0x53, 0x39, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x53, 0x39, 0x65, 0x55, 0x33, 0x58, 0x56, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x31, 0x31,
		0x69, 0x56, 0x31, 0x35, 0x56, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x31, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x56, 0x31, 0x37, 0x20, 0x4e, 0x65, 0x6f, 0x56, 0x31, 0x37, 0x56, 0x31, 0x39, 0x56,
		0x32, 0x30, 0x20, 0x53, 0x45, 0x56, 0x35, 0x56, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x35, 0x73, 0x56, 0x37, 0x37, 0x65, 0x56, 0x37, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x56, 0x39, 0x56, 0x39, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x56, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x56, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x39, 0x73, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x58, 0x39, 0x73, 0x56, 0x32, 0x32, 0x34, 0x31, 0x41, 0x58, 0x39, 0x30, 0x58, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x55, 0x44, 0x58, 0x32,
		0x30, 0x58, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x32, 0x31, 0x69, 0x58, 0x32, 0x31,
		0x20, 0x55, 0x44, 0x58, 0x32, 0x31, 0x58, 0x32, 0x31, 0x53, 0x58, 0x32, 0x33, 0x58, 0x32, 0x37,
		0x58, 0x32, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x33, 0x30, 0x58, 0x33, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x58, 0x35, 0x30, 0x58, 0x35, 0x30, 0x65, 0x58, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x36, 0x30, 0x58,
		0x36, 0x30, 0x74, 0x58, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x36, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x37, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x58, 0x37, 0x30, 0x58, 0x37, 0x30, 0x20, 0x35, 0x47, 0x58, 0x38,
		0x30, 0x56, 0x32, 0x32, 0x34, 0x32, 0x41, 0x58, 0x39, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32,
		0x32, 0x32, 0x37, 0x41, 0x58, 0x39, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x58, 0x38, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x38, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x58, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x59, 0x31, 0x73, 0x59, 0x31, 0x37, 0x59, 0x31, 0x36, 0x56,
		0x32, 0x31, 0x36, 0x38, 0x41, 0x59, 0x31, 0x30, 0x20, 0x54, 0x31, 0x56, 0x32, 0x31, 0x36, 0x38,
		0x56, 0x32, 0x31, 0x31, 0x38, 0x59, 0x30, 0x31, 0x59, 0x30, 0x31, 0x41, 0x59, 0x30, 0x32, 0x73,
		0x59, 0x30, 0x32, 0x74, 0x59, 0x30, 0x32, 0x59, 0x31, 0x32, 0x56, 0x32, 0x31, 0x36, 0x33, 0x41,
		0x59, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x31, 0x32, 0x61, 0x59, 0x31, 0x32, 0x69, 0x59,
		0x31, 0x35, 0x56, 0x32, 0x31, 0x33, 0x34, 0x59, 0x31, 0x35, 0x61, 0x59, 0x31, 0x35, 0x73, 0x59,
		0x31, 0x35, 0x63, 0x59, 0x31, 0x39, 0x59, 0x32, 0x30, 0x59, 0x32, 0x32, 0x56, 0x32, 0x32, 0x34,
		0x39, 0x59, 0x32, 0x37, 0x56, 0x32, 0x33, 0x30, 0x32, 0x59, 0x32, 0x37, 0x20, 0x35, 0x47, 0x59,
		0x32, 0x32, 0x73, 0x59, 0x32, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x32, 0x30,
		0x41, 0x59, 0x32, 0x30, 0x47, 0x59, 0x32, 0x30, 0x54, 0x59, 0x32, 0x30, 0x47, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x59, 0x31, 0x31, 0x73, 0x59, 0x32, 0x30, 0x73, 0x59, 0x37, 0x32, 0x20,
		0x35, 0x47, 0x56, 0x32, 0x31, 0x30, 0x32, 0x41, 0x59, 0x37, 0x32, 0x54, 0x20, 0x35, 0x47, 0x56,
		0x32, 0x31, 0x31, 0x37, 0x59, 0x37, 0x35, 0x56, 0x32, 0x32, 0x31, 0x39, 0x41, 0x59, 0x37, 0x37,
		0x56, 0x32, 0x31, 0x36, 0x39, 0x59, 0x37, 0x37, 0x20, 0x35, 0x47, 0x59, 0x32, 0x30, 0x69, 0x59,
		0x32, 0x31, 0x73, 0x59, 0x32, 0x31, 0x47, 0x59, 0x32, 0x31, 0x59, 0x32, 0x31, 0x61, 0x59, 0x32,
		0x31, 0x65, 0x59, 0x32, 0x31, 0x74, 0x59, 0x33, 0x56, 0x32, 0x30, 0x34, 0x34, 0x59, 0x33, 0x73,
		0x59, 0x33, 0x20, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x59, 0x33, 0x30, 0x59, 0x33,
		0x30, 0x20, 0x35, 0x47, 0x59, 0x33, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x33,
		0x30, 0x67, 0x59, 0x33, 0x31, 0x59, 0x33, 0x31, 0x73, 0x56, 0x32, 0x31, 0x35, 0x38, 0x41, 0x59,
		0x33, 0x32, 0x56, 0x32, 0x31, 0x35, 0x38, 0x56, 0x32, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32,
		0x31, 0x38, 0x30, 0x41, 0x59, 0x33, 0x32, 0x74, 0x59, 0x33, 0x33, 0x59, 0x33, 0x33, 0x73, 0x59,
		0x33, 0x33, 0x74, 0x59, 0x33, 0x33, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x59, 0x33,
		0x35, 0x59, 0x33, 0x36, 0x59, 0x35, 0x73, 0x59, 0x35, 0x30, 0x74, 0x59, 0x35, 0x31, 0x59, 0x35,
		0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x59, 0x35, 0x31, 0x73, 0x59, 0x35, 0x32, 0x73,
		0x59, 0x35, 0x32, 0x59, 0x35, 0x33, 0x69, 0x59, 0x35, 0x33, 0x59, 0x35, 0x33, 0x73, 0x56, 0x32,
		0x30, 0x36, 0x39, 0x41, 0x59, 0x35, 0x33, 0x73, 0x20, 0x54, 0x31, 0x59, 0x35, 0x35, 0x6c, 0x59,
		0x35, 0x35, 0x73, 0x59, 0x35, 0x35, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x56, 0x32,
		0x31, 0x36, 0x34, 0x50, 0x41, 0x59, 0x37, 0x33, 0x74, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x32,
		0x37, 0x59, 0x35, 0x35, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x35, 0x34, 0x59, 0x35, 0x35, 0x56,
		0x32, 0x30, 0x34, 0x35, 0x41, 0x59, 0x35, 0x34, 0x73, 0x59, 0x36, 0x35, 0x59, 0x36, 0x39, 0x59,
		0x37, 0x30, 0x73, 0x59, 0x36, 0x30, 0x73, 0x59, 0x37, 0x31, 0x59, 0x37, 0x31, 0x69, 0x59, 0x37,
		0x33, 0x59, 0x37, 0x33, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x37, 0x33, 0x73, 0x59,
		0x37, 0x36, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x35, 0x36, 0x41, 0x59, 0x37, 0x36, 0x73, 0x59,
		0x37, 0x73, 0x59, 0x38, 0x31, 0x59, 0x38, 0x31, 0x69, 0x59, 0x38, 0x31, 0x73, 0x59, 0x38, 0x33,
		0x59, 0x38, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x38, 0x39, 0x59, 0x39, 0x30, 0x59, 0x39, 0x31,
		0x59, 0x39, 0x31, 0x69, 0x59, 0x39, 0x73, 0x59, 0x31, 0x32, 0x73, 0x59, 0x31, 0x32, 0x73, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x39, 0x33, 0x59, 0x39, 0x33, 0x73, 0x59, 0x39, 0x35,
		0x59, 0x39, 0x37, 0x5a, 0x31, 0x5a, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x31, 0x69, 0x5a, 0x31,
		0x78, 0x5a, 0x33, 0x78, 0x5a, 0x35, 0x78, 0x5a, 0x35, 0x78, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x59, 0x37, 0x35, 0x20, 0x35, 0x47, 0x59, 0x37, 0x35, 0x73, 0x58, 0x20, 0x53, 0x68, 0x6f,
		0x74, 0x58, 0x36, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x36, 0x53, 0x59, 0x36, 0x36, 0x69,
		0x58, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x53, 0x58, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x20, 0x24, 0x31, 0x56, 0x69, 0x7a, 0x69, 0x6f, 0x56, 0x41, 0x50, 0x34, 0x33, 0x30, 0x49, 0x53,
		0x56, 0x2d, 0x42, 0x31, 0x31, 0x44, 0x35, 0x30, 0x75, 0x2d, 0x44, 0x31, 0x56, 0x69, 0x7a, 0x6d,
		0x6f, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x20, 0x37, 0x22, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x56, 0x6f, 0x64, 0x61, 0x63, 0x6f, 0x6d, 0x4b, 0x69, 0x63,
		0x6b, 0x61, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x34, 0x47, 0x56, 0x6f, 0x64, 0x61,
		0x66, 0x6f, 0x6e, 0x65, 0x56, 0x46, 0x44, 0x20, 0x31, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x56, 0x46, 0x44, 0x37, 0x32, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x4e, 0x39, 0x56, 0x46, 0x36, 0x38, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4b, 0x69,
		0x63, 0x6b, 0x61, 0x56, 0x46, 0x36, 0x39, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x46, 0x69,
		0x72, 0x73, 0x74, 0x20, 0x36, 0x56, 0x46, 0x44, 0x20, 0x32, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x46, 0x69, 0x72, 0x73, 0x74, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20, 0x33, 0x30, 0x30,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20,
		0x33, 0x30, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x37, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20,
		0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x45, 0x38, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x45,
		0x39, 0x56, 0x46, 0x44, 0x20, 0x38, 0x32, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x58, 0x39,
		0x56, 0x46, 0x44, 0x20, 0x36, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x37, 0x56, 0x46, 0x44, 0x33, 0x32, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x43, 0x39, 0x56, 0x46, 0x44, 0x20, 0x38, 0x32, 0x30, 0x56, 0x46, 0x44, 0x20, 0x36, 0x31, 0x30,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4e, 0x38, 0x56, 0x46, 0x44, 0x20, 0x36, 0x33, 0x30, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x4e, 0x31, 0x30, 0x56, 0x46, 0x44, 0x20, 0x36, 0x32, 0x30, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x4e, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x75, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x20, 0x36, 0x56, 0x46, 0x44, 0x20, 0x37, 0x30, 0x30, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20, 0x37, 0x31,
		0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x56, 0x38, 0x56, 0x46, 0x44, 0x20, 0x37, 0x32, 0x30,
		0x56, 0x46, 0x44, 0x20, 0x37, 0x33, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x56, 0x31, 0x30,
		0x56, 0x46, 0x44, 0x20, 0x39, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x61,
		0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x34, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x6f, 0x64, 0x61, 0x66, 0x6f, 0x6e, 0x65, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x43, 0x68, 0x61, 0x74,
		0x56, 0x46, 0x2d, 0x36, 0x39, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x47, 0x72, 0x61, 0x6e,
		0x64, 0x20, 0x36, 0x56, 0x46, 0x2d, 0x37, 0x39, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53,
		0x70, 0x65, 0x65, 0x64, 0x20, 0x36, 0x56, 0x46, 0x2d, 0x38, 0x39, 0x35, 0x4e, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x36, 0x56, 0x46, 0x2d, 0x31, 0x33, 0x39,
		0x37, 0x54, 0x61, 0x62, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x36, 0x56, 0x46, 0x2d, 0x31,
		0x34, 0x39, 0x37, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x36, 0x56, 0x46,
		0x44, 0x20, 0x31, 0x31, 0x30, 0x30, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x37,
		0x56, 0x46, 0x44, 0x20, 0x31, 0x33, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x4e, 0x38, 0x56, 0x46, 0x44, 0x20, 0x31, 0x34, 0x30, 0x30, 0x54, 0x61, 0x62, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x47, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x49, 0x49, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49,
		0x20, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x49,
		0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x49, 0x20,
		0x31, 0x30, 0x47, 0x69, 0x67, 0x61, 0x54, 0x56, 0x47, 0x69, 0x67, 0x61, 0x20, 0x54, 0x56, 0x56,
		0x46, 0x44, 0x20, 0x24, 0x31, 0x56, 0x6f, 0x6e, 0x69, 0x6e, 0x6f, 0x5a, 0x75, 0x6e, 0x20, 0x24,
		0x31, 0x58, 0x79, 0x6c, 0x6f, 0x20, 0x24, 0x31, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x20, 0x41,
		0x37, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x58, 0x47, 0x79, 0x67,
		0x61, 0x20, 0x51, 0x53, 0x47, 0x79, 0x67, 0x61, 0x20, 0x58, 0x53, 0x47, 0x79, 0x67, 0x61, 0x20,
		0x24, 0x31, 0x4a, 0x61, 0x78, 0x20, 0x51, 0x53, 0x4a, 0x61, 0x78, 0x20, 0x53, 0x20, 0x41, 0x37,
		0x4a, 0x61, 0x78, 0x20, 0x24, 0x31, 0x4a, 0x61, 0x78, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x4d,
		0x61, 0x72, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x49, 0x4d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x6c, 0x75, 0x72, 0x69, 0x5f, 0x4d, 0x37, 0x5f, 0x32, 0x30, 0x32, 0x30, 0x50, 0x6c, 0x75,
		0x72, 0x69, 0x20, 0x4d, 0x37, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x50, 0x6c, 0x75, 0x72,
		0x69, 0x20, 0x24, 0x31, 0x37, 0x50, 0x6c, 0x75, 0x72, 0x69, 0x20, 0x24, 0x31, 0x38, 0x44, 0x72,
		0x75, 0x69, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x20, 0x4d, 0x31, 0x30,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x20, 0x24, 0x31,
		0x4e, 0x61, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x4f, 0x72, 0x69, 0x6e, 0x5f, 0x51, 0x53, 0x4f, 0x72,
		0x69, 0x6e, 0x20, 0x51, 0x53, 0x53, 0x69, 0x72, 0x69, 0x75, 0x73, 0x5f, 0x51, 0x53, 0x53, 0x69,
		0x72, 0x69, 0x75, 0x73, 0x20, 0x51, 0x53, 0x58, 0x61, 0x76, 0x79, 0x20, 0x24, 0x31, 0x4d, 0x75,
		0x73, 0x69, 0x63, 0x50, 0x41, 0x44, 0x20, 0x24, 0x31, 0x56, 0x6f, 0x6e, 0x74, 0x61, 0x72, 0x48,
		0x4b, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x4b, 0x20, 0x4d, 0x61, 0x78, 0x48, 0x4b, 0x31, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x4b, 0x31, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x48, 0x4b, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x4b, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x56, 0x6f, 0x72, 0x61, 0x67, 0x6f, 0x43, 0x45, 0x4c, 0x4c, 0x2d, 0x35, 0x30, 0x30, 0x56, 0x6f,
		0x72, 0x63, 0x6f, 0x6d, 0x53, 0x58, 0x50, 0x52, 0x4f, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69,
		0x63, 0x53, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x53,
		0x58, 0x50, 0x72, 0x6f, 0x53, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x37, 0x2d, 0x63, 0x6c, 0x61,
		0x73, 0x73, 0x69, 0x63, 0x53, 0x37, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x56, 0x6f,
		0x72, 0x6b, 0x65, 0x56, 0x6f, 0x72, 0x6d, 0x6f, 0x72, 0x56, 0x6f, 0x74, 0x6f, 0x56, 0x6f, 0x78,
		0x74, 0x65, 0x6c, 0x56, 0x6f, 0x79, 0x6f, 0x69, 0x38, 0x20, 0x4d, 0x61, 0x78, 0x56, 0x73, 0x6d,
		0x61, 0x72, 0x74, 0x4a, 0x6f, 0x79, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4a, 0x6f,
		0x79, 0x20, 0x24, 0x31, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x42, 0x65, 0x65, 0x20, 0x33, 0x42, 0x65, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x74,
		0x61, 0x72, 0x20, 0x24, 0x31, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x24, 0x31, 0x48, 0x6f,
		0x62, 0x73, 0x6f, 0x6e, 0x41, 0x72, 0x69, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x72, 0x69, 0x73,
		0x56, 0x73, 0x75, 0x6e, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x73,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4d, 0x45, 0x52, 0x43, 0x55, 0x52, 0x59, 0x20, 0x54, 0x6f,
		0x75, 0x67, 0x68, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x4d, 0x41, 0x52, 0x53, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x4d, 0x61, 0x72, 0x73, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x4d, 0x41, 0x52, 0x53, 0x20, 0x4e, 0x4f, 0x43, 0x41, 0x4d, 0x4d, 0x61, 0x72, 0x73,
		0x20, 0x4e, 0x6f, 0x63, 0x61, 0x6d, 0x41, 0x71, 0x75, 0x61, 0x20, 0x54, 0x6f, 0x75, 0x67, 0x68,
		0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x56, 0x75, 0x65,
		0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x20, 0x53, 0x31, 0x33, 0x54,
		0x65, 0x6d, 0x70, 0x6f, 0x20, 0x53, 0x31, 0x31, 0x56, 0xc3, 0xb6, 0x6c, 0x66, 0x65, 0x6e, 0x4e,
		0x65, 0x78, 0x6f, 0x20, 0x54, 0x41, 0x42, 0x37, 0x57, 0x41, 0x46, 0x57, 0x41, 0x4e, 0x53, 0x41,
		0x57, 0x45, 0x57, 0x49, 0x57, 0x41, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x65, 0x72, 0x20, 0x54, 0x56, 0x57, 0x61, 0x6c, 0x74, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6d, 0x6f,
		0x20, 0x57, 0x61, 0x6c, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20,
		0x53, 0x36, 0x20, 0x69, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x72, 0x69, 0x6d, 0x6f,
		0x20, 0x53, 0x36, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x72, 0x69, 0x6d,
		0x6f, 0x20, 0x53, 0x38, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x53,
		0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x48, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50,
		0x72, 0x69, 0x6d, 0x6f, 0x20, 0x48, 0x38, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x52, 0x58, 0x37,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x57, 0x61, 0x6c, 0x74, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x6f, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x57, 0x61, 0x6e, 0x6d, 0x75, 0x6b, 0x61, 0x6e, 0x67, 0x57, 0x65, 0x62, 0x66, 0x6c,
		0x65, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x20, 0x38, 0x34, 0x37, 0x35, 0x57, 0x65, 0x63, 0x6f, 0x6f,
		0x6c, 0x57, 0x65, 0x65, 0x6c, 0x69, 0x6b, 0x65, 0x69, 0x74, 0x57, 0x65, 0x69, 0x6d, 0x65, 0x69,
		0x77, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x33, 0x57, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33,
		0x57, 0x65, 0x6c, 0x6c, 0x63, 0x6f, 0x4d, 0x57, 0x65, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x20, 0x44,
		0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x32, 0x30,
		0x31, 0x30, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30,
		0x29, 0x57, 0x65, 0x73, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x65, 0x78, 0x6c, 0x65, 0x72,
		0x5a, 0x45, 0x4e, 0x20, 0x34, 0x2e, 0x35, 0x5a, 0x45, 0x4e, 0x20, 0x34, 0x2e, 0x37, 0x5a, 0x45,
		0x4e, 0x20, 0x35, 0x5a, 0x45, 0x4e, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x41, 0x42,
		0x20, 0x31, 0x30, 0x51, 0x54, 0x41, 0x42, 0x20, 0x31, 0x30, 0x69, 0x51, 0x20, 0x33, 0x47, 0x57,
		0x68, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x4d, 0x31, 0x30, 0x31,
		0x30, 0x56, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x33, 0x57, 0x69,
		0x65, 0x70, 0x70, 0x6f, 0x57, 0x69, 0x67, 0x6f, 0x72, 0x57, 0x69, 0x6b, 0x6f, 0x54, 0x33, 0x56,
		0x6f, 0x69, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x55, 0x31, 0x30, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x55, 0x32, 0x30, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x55, 0x33, 0x30, 0x43, 0x69,
		0x6e, 0x6b, 0x20, 0x50, 0x65, 0x61, 0x78, 0x20, 0x32, 0x43, 0x69, 0x6e, 0x6b, 0x24, 0x31, 0x43,
		0x69, 0x6e, 0x6b, 0x20, 0x24, 0x31, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x20, 0x50, 0x75,
		0x72, 0x65, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x20, 0x53, 0x74, 0x61, 0x72, 0x48, 0x69,
		0x67, 0x68, 0x77, 0x61, 0x79, 0x24, 0x31, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x20, 0x24,
		0x31, 0x49, 0x67, 0x67, 0x79, 0x46, 0x65, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x69, 0x72, 0x77,
		0x61, 0x79, 0x52, 0x69, 0x64, 0x67, 0x65, 0x20, 0x46, 0x61, 0x62, 0x20, 0x34, 0x47, 0x52, 0x69,
		0x64, 0x67, 0x65, 0x20, 0x34, 0x47, 0x52, 0x69, 0x64, 0x67, 0x65, 0x52, 0x41, 0x49, 0x4e, 0x42,
		0x4f, 0x57, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x20, 0x24, 0x31, 0x44, 0x61, 0x72,
		0x6b, 0x73, 0x69, 0x64, 0x65, 0x44, 0x61, 0x72, 0x6b, 0x6d, 0x6f, 0x6f, 0x6e, 0x44, 0x61, 0x72,
		0x6b, 0x66, 0x75, 0x6c, 0x6c, 0x44, 0x61, 0x72, 0x6b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x53, 0x75,
		0x62, 0x6c, 0x69, 0x6d, 0x4f, 0x7a, 0x7a, 0x79, 0x42, 0x61, 0x72, 0x72, 0x79, 0x42, 0x69, 0x72,
		0x64, 0x79, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x4a, 0x69, 0x6d, 0x6d, 0x79, 0x4a, 0x45, 0x52, 0x52,
		0x59, 0x20, 0x4d, 0x41, 0x58, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x4d, 0x61, 0x78, 0x57, 0x5f,
		0x4b, 0x33, 0x30, 0x30, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x33, 0x57, 0x2d, 0x4b, 0x34, 0x32,
		0x30, 0x2d, 0x54, 0x56, 0x4d, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x34, 0x4a, 0x65, 0x72, 0x72,
		0x79, 0x20, 0x32, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x47, 0x65, 0x74, 0x61, 0x77, 0x61, 0x79, 0x4b,
		0x65, 0x6e, 0x6e, 0x79, 0x47, 0x6f, 0x61, 0x46, 0x72, 0x65, 0x64, 0x64, 0x79, 0x4b, 0x69, 0x74,
		0x65, 0x57, 0x5f, 0x4b, 0x34, 0x30, 0x30, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x35, 0x4c, 0x69,
		0x66, 0x65, 0x20, 0x33, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x4c,
		0x65, 0x6e, 0x6e, 0x79, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x65, 0x6e, 0x6e, 0x79,
		0x20, 0x24, 0x31, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x53, 0x75, 0x6e,
		0x73, 0x65, 0x74, 0x20, 0x32, 0x53, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x53, 0x75, 0x6e, 0x6e, 0x79,
		0x20, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x33, 0x57, 0x2d,
		0x4b, 0x32, 0x30, 0x30, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x6e, 0x6e,
		0x79, 0x20, 0x32, 0x57, 0x2d, 0x4b, 0x33, 0x36, 0x30, 0x2d, 0x54, 0x56, 0x53, 0x75, 0x6e, 0x6e,
		0x79, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x2d, 0x4b, 0x31, 0x33, 0x30, 0x2d, 0x54,
		0x4d, 0x56, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x34, 0x57, 0x2d, 0x4b, 0x33, 0x38, 0x30, 0x2d,
		0x54, 0x56, 0x4d, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x35, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20,
		0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x20, 0x33, 0x54, 0x6f, 0x6d,
		0x6d, 0x79, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x20, 0x32,
		0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x57, 0x61, 0x78, 0x48, 0x61, 0x72, 0x72, 0x79, 0x57, 0x2d, 0x56,
		0x36, 0x30, 0x30, 0x48, 0x61, 0x72, 0x72, 0x79, 0x20, 0x32, 0x57, 0x49, 0x4d, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x57, 0x49, 0x4d, 0x50, 0x75, 0x6c, 0x70, 0x20, 0x46, 0x61, 0x62, 0x20, 0x34, 0x47,
		0x50, 0x75, 0x6c, 0x70, 0x20, 0x46, 0x61, 0x62, 0x50, 0x75, 0x6c, 0x70, 0x20, 0x34, 0x47, 0x50,
		0x75, 0x6c, 0x70, 0x52, 0x6f, 0x62, 0x62, 0x79, 0x24, 0x31, 0x55, 0x20, 0x50, 0x75, 0x6c, 0x73,
		0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x55, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x55, 0x20, 0x46,
		0x65, 0x65, 0x6c, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x55, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x55, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x56, 0x33, 0x39, 0x39, 0x31, 0x41,
		0x4e, 0x55, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x46, 0x61, 0x62, 0x56, 0x69, 0x65, 0x77, 0x20,
		0x32, 0x20, 0x47, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56,
		0x69, 0x65, 0x77, 0x20, 0x58, 0x4c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x57, 0x43, 0x33, 0x30, 0x30, 0x56, 0x69, 0x65, 0x77, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x76, 0x31,
		0x32, 0x66, 0x6e, 0x6c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x57, 0x5f, 0x43, 0x38, 0x30,
		0x30, 0x57, 0x5f, 0x43, 0x38, 0x36, 0x30, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x57, 0x5f, 0x50, 0x32, 0x30, 0x30, 0x56, 0x69, 0x65, 0x77, 0x20, 0x47, 0x6f, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x2d, 0x56, 0x38, 0x35, 0x31, 0x56,
		0x69, 0x65, 0x77, 0x20, 0x35, 0x57, 0x2d, 0x56, 0x38, 0x35, 0x30, 0x2d, 0x45, 0x45, 0x41, 0x56,
		0x69, 0x65, 0x77, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x2d, 0x4b, 0x34, 0x32, 0x30,
		0x2d, 0x45, 0x45, 0x41, 0x57, 0x2d, 0x4b, 0x32, 0x31, 0x31, 0x57, 0x2d, 0x4b, 0x35, 0x32, 0x31,
		0x59, 0x36, 0x30, 0x59, 0x36, 0x31, 0x59, 0x36, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x2d,
		0x4b, 0x36, 0x31, 0x30, 0x59, 0x36, 0x32, 0x59, 0x38, 0x30, 0x57, 0x2d, 0x56, 0x36, 0x38, 0x30,
		0x57, 0x2d, 0x4b, 0x36, 0x33, 0x30, 0x59, 0x38, 0x32, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x20, 0x34, 0x56, 0x69, 0x65, 0x77, 0x20, 0x34, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x57, 0x2d, 0x56, 0x37, 0x34, 0x35, 0x2d, 0x54, 0x56, 0x4d, 0x52, 0x69,
		0x64, 0x65, 0x52, 0x69, 0x64, 0x65, 0x20, 0x32, 0x52, 0x69, 0x64, 0x65, 0x20, 0x33, 0x4b, 0x2d,
		0x4b, 0x6f, 0x6f, 0x6c, 0x57, 0x69, 0x6c, 0x65, 0x79, 0x66, 0x6f, 0x78, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x2b, 0x57, 0x69, 0x6c, 0x65, 0x79, 0x66, 0x6f, 0x78, 0x20, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x58, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x58, 0x53, 0x77, 0x69, 0x66, 0x74, 0x20,
		0x32, 0x20, 0x24, 0x31, 0x53, 0x77, 0x69, 0x66, 0x74, 0x20, 0x32, 0x63, 0x72, 0x61, 0x63, 0x6b,
		0x6c, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x47, 0x52,
		0x41, 0x43, 0x45, 0x20, 0x56, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20,
		0x56, 0x57, 0x69, 0x6e, 0x6b, 0x57, 0x69, 0x6e, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x6c, 0x61, 0x72,
		0x48, 0x34, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x20, 0x48, 0x34, 0x57, 0x69, 0x6e, 0x6e, 0x6f, 0x76,
		0x6f, 0x54, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x24, 0x31, 0x57, 0x69, 0x6e, 0x73, 0x74,
		0x61, 0x72, 0x57, 0x69, 0x6e, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x51, 0x39, 0x33, 0x53, 0x57, 0x69,
		0x73, 0x65, 0x61, 0x73, 0x79, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x50, 0x6f, 0x73, 0x57, 0x6f, 0x6c,
		0x64, 0x65, 0x72, 0x57, 0x69, 0x61, 0x6d, 0x20, 0x23, 0x36, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x57, 0x69, 0x61, 0x6d, 0x20, 0x23, 0x24, 0x31, 0x6d, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x24, 0x31, 0x6d, 0x69, 0x54, 0x61, 0x62, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x4c, 0x55, 0x53, 0x6d, 0x69, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x57, 0x6f, 0x6c, 0x66, 0x67,
		0x61, 0x6e, 0x67, 0x41, 0x54, 0x2d, 0x41, 0x53, 0x24, 0x31, 0x57, 0x6f, 0x6c, 0x6b, 0x69, 0x57,
		0x35, 0x35, 0x53, 0x45, 0x57, 0x35, 0x2e, 0x35, 0x20, 0x53, 0x45, 0x57, 0x53, 0x36, 0x32, 0x36,
		0x57, 0x36, 0x2e, 0x32, 0x36, 0x57, 0x36, 0x32, 0x36, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x57, 0x36,
		0x2e, 0x32, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x53, 0x35, 0x53, 0x45, 0x57, 0x35, 0x20,
		0x53, 0x45, 0x57, 0x53, 0x30, 0x36, 0x37, 0x57, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x6f, 0x6e,
		0x75, 0x57, 0x6f, 0x6f, 0x53, 0x50, 0x35, 0x30, 0x32, 0x36, 0x69, 0x2d, 0x53, 0x63, 0x6f, 0x72,
		0x70, 0x69, 0x6f, 0x53, 0x63, 0x6f, 0x72, 0x70, 0x69, 0x6f, 0x53, 0x50, 0x35, 0x30, 0x34, 0x30,
		0x2d, 0x43, 0x61, 0x73, 0x69, 0x6f, 0x70, 0x65, 0x61, 0x43, 0x61, 0x73, 0x69, 0x6f, 0x70, 0x65,
		0x61, 0x20, 0x49, 0x49, 0x57, 0x6f, 0x72, 0x74, 0x6d, 0x61, 0x6e, 0x6e, 0x54, 0x65, 0x72, 0x72,
		0x61, 0x20, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x57, 0x6f, 0x78, 0x74, 0x65, 0x72, 0x4e, 0x69,
		0x6d, 0x62, 0x75, 0x73, 0x20, 0x24, 0x31, 0x69, 0x2d, 0x31, 0x30, 0x31, 0x5a, 0x69, 0x65, 0x6c,
		0x6f, 0x20, 0x24, 0x31, 0x58, 0x2d, 0x41, 0x47, 0x45, 0x47, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x58, 0x2d, 0x42, 0x4f, 0x58, 0x2d, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x57, 0x69, 0x46, 0x69, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x58, 0x2d, 0x54, 0x49,
		0x47, 0x49, 0x5f, 0x4a, 0x4f, 0x59, 0x31, 0x30, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x6f, 0x79, 0x20,
		0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x5f, 0x4a, 0x4f, 0x59,
		0x31, 0x30, 0x4a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x4a, 0x6f, 0x79, 0x20, 0x37, 0x20, 0x54, 0x56,
		0x4a, 0x6f, 0x79, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x70, 0x65, 0x20,
		0x24, 0x31, 0x20, 0x24, 0x32, 0x48, 0x6f, 0x70, 0x65, 0x20, 0x38, 0x20, 0x4c, 0x54, 0x45, 0x48,
		0x6f, 0x70, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x70, 0x65, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x5f, 0x4a, 0x4f, 0x59,
		0x37, 0x5f, 0x4d, 0x41, 0x58, 0x4a, 0x6f, 0x79, 0x20, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x4a, 0x4f,
		0x59, 0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45, 0x4a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54,
		0x45, 0x56, 0x32, 0x38, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x31, 0x38, 0x20, 0x70, 0x72, 0x6f, 0x5f,
		0x41, 0x56, 0x31, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x31, 0x31, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x50, 0x31,
		0x35, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x31, 0x35, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x70, 0x20, 0x24, 0x31, 0x58, 0x2d, 0x56, 0x69,
		0x65, 0x77, 0x5a, 0x45, 0x4e, 0x20, 0x55, 0x35, 0x2b, 0x41, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4b,
		0x49, 0x44, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x50, 0x72, 0x6f,
		0x74, 0x6f, 0x6e, 0x5f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x48, 0x44, 0x50, 0x72, 0x6f, 0x74,
		0x6f, 0x6e, 0x20, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x48, 0x44, 0x50, 0x72, 0x6f, 0x74, 0x6f,
		0x6e, 0x5f, 0x4e, 0x65, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x4e, 0x65, 0x6f,
		0x6e, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x4e, 0x5f, 0x4a, 0x41, 0x44, 0x45, 0x5f, 0x32, 0x5f, 0x50,
		0x52, 0x4f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x4a, 0x61, 0x64, 0x65, 0x20, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x2d, 0x56, 0x69, 0x65, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x58,
		0x38, 0x38, 0x58, 0x38, 0x38, 0x70, 0x72, 0x6f, 0x31, 0x30, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30,
		0x58, 0x39, 0x36, 0x58, 0x39, 0x36, 0x41, 0x69, 0x72, 0x5f, 0x41, 0x31, 0x30, 0x30, 0x41, 0x69,
		0x72, 0x20, 0x41, 0x31, 0x30, 0x30, 0x58, 0x39, 0x36, 0x4d, 0x61, 0x78, 0x5f, 0x50, 0x6c, 0x75,
		0x73, 0x5f, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x39, 0x36, 0x5f, 0x58, 0x36, 0x5f, 0x49, 0x58, 0x36, 0x69,
		0x58, 0x39, 0x36, 0x4d, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61, 0x74, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x39, 0x36, 0x4d, 0x49, 0x4e, 0x49, 0x5f, 0x31, 0x31, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x31, 0x31, 0x58, 0x39, 0x36, 0x51, 0x58, 0x43, 0x4f, 0x4d, 0x69, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x58, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x58, 0x47, 0x49,
		0x4d, 0x49, 0x58, 0x59, 0x20, 0x41, 0x75, 0x74, 0x6f, 0x58, 0x63, 0x65, 0x6c, 0x6c, 0x58, 0x63,
		0x72, 0x75, 0x69, 0x73, 0x65, 0x72, 0x58, 0x67, 0x6f, 0x64, 0x79, 0x58, 0x47, 0x54, 0x5f, 0x45,
		0x45, 0x41, 0x58, 0x47, 0x54, 0x58, 0x69, 0x61, 0x6f, 0x64, 0x75, 0x58, 0x69, 0x61, 0x6f, 0x6c,
		0x61, 0x6a, 0x69, 0x61, 0x6f, 0x52, 0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x52, 0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x64,
		0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x20, 0x38, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65,
		0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x20, 0x39, 0x58, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x33, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x69, 0x61, 0x6f, 0x6d, 0x69, 0x42, 0x6c, 0x61, 0x63,
		0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x41, 0x57, 0x4d, 0x2d, 0x41, 0x30, 0x42, 0x6c, 0x61,
		0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x48, 0x65, 0x6c, 0x6f, 0x42, 0x6c, 0x61,
		0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20,
		0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68,
		0x61, 0x72, 0x6b, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53,
		0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x20, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53,
		0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x42, 0x6c, 0x61,
		0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c,
		0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68,
		0x61, 0x72, 0x6b, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53,
		0x68, 0x61, 0x72, 0x6b, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x34, 0x47,
		0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x31, 0x53, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x48,
		0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x32, 0x20, 0x33, 0x47, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69,
		0x20, 0x32, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x32, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x6e,
		0x67, 0x6d, 0x69, 0x20, 0x34, 0x41, 0x4d, 0x69, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x69, 0x20,
		0x39, 0x20, 0x53, 0x45, 0x4d, 0x69, 0x20, 0x39, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x65,
		0x4d, 0x49, 0x20, 0x43, 0x43, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69,
		0x75, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x45, 0x64,
		0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x4d, 0x69, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x31, 0x31, 0x69, 0x20, 0x48, 0x79,
		0x70, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31,
		0x31, 0x58, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x31,
		0x30, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x54, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x54, 0x20, 0x35, 0x47,
		0x4d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x4d, 0x69,
		0x20, 0x31, 0x30, 0x53, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35,
		0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x69, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x69, 0x4d, 0x69, 0x20,
		0x31, 0x31, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x54, 0x4d, 0x69, 0x20,
		0x31, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x20, 0x4e, 0x45, 0x4d, 0x69, 0x20,
		0x31, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d,
		0x69, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x32,
		0x31, 0x32, 0x54, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
		0x69, 0x74, 0x79, 0x31, 0x32, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x32, 0x53, 0x20, 0x50, 0x72,
		0x6f, 0x31, 0x32, 0x53, 0x31, 0x32, 0x53, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x31, 0x32, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x31, 0x32, 0x58, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x33, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x31, 0x33, 0x31, 0x33, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x69,
		0x20, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x38, 0x20, 0x45, 0x78, 0x70, 0x6c,
		0x6f, 0x72, 0x65, 0x72, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x38,
		0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x39, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x39,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x39, 0x20, 0x54, 0x72, 0x61, 0x6e,
		0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
		0x69, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x35, 0x73, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x58, 0x69, 0x61, 0x6f, 0x6d, 0x69, 0x5f, 0x4d, 0x44, 0x54, 0x32, 0x4d, 0x69,
		0x20, 0x35, 0x58, 0x4d, 0x69, 0x20, 0x33, 0x4d, 0x69, 0x20, 0x24, 0x31, 0x43, 0x4d, 0x69, 0x20,
		0x34, 0x57, 0x4d, 0x69, 0x20, 0x34, 0x69, 0x4d, 0x69, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x4d,
		0x69, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x69,
		0x20, 0x41, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x41, 0x33, 0x4d, 0x69, 0x20,
		0x4d, 0x69, 0x78, 0x20, 0x34, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x33, 0x20, 0x35, 0x47,
		0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20,
		0x32, 0x53, 0x20, 0x41, 0x72, 0x74, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x32, 0x53, 0x4d,
		0x69, 0x20, 0x4d, 0x69, 0x78, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x50, 0x6f,
		0x63, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x46, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x35, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x32, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x32, 0x41, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x53, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x38, 0x41, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x38, 0x41, 0x20, 0x24, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31,
		0x30, 0x58, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x39, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x39, 0x41, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x69, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x39, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x41, 0x54, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x39, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x54, 0x20, 0x4e, 0x46,
		0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x43, 0x20, 0x4e, 0x46, 0x43, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x41, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x31, 0x30, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x32,
		0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x32, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31,
		0x32, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x5a, 0x6f, 0x6f,
		0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b,
		0x33, 0x30, 0x53, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x20,
		0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x20, 0x34, 0x47, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x69, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4b, 0x34, 0x30, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x53, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x20, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4b, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b,
		0x33, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x32, 0x32, 0x30, 0x34, 0x31, 0x32, 0x31, 0x31,
		0x41, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x35, 0x30, 0x32, 0x32, 0x30, 0x34, 0x31,
		0x32, 0x31, 0x36, 0x49, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x35, 0x30, 0x69, 0x32, 0x31,
		0x31, 0x32, 0x31, 0x32, 0x31, 0x30, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x35, 0x30,
		0x47, 0x32, 0x32, 0x30, 0x31, 0x31, 0x32, 0x31, 0x31, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4b, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x32, 0x33, 0x30, 0x31, 0x33, 0x52, 0x4b, 0x37, 0x35,
		0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x36, 0x30, 0x32, 0x32, 0x31, 0x32, 0x32, 0x52,
		0x4b, 0x39, 0x33, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x36, 0x30, 0x45, 0x32, 0x32,
		0x31, 0x32, 0x37, 0x52, 0x4b, 0x34, 0x36, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x36,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x59, 0x31, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x45, 0x78,
		0x74, 0x72, 0x65, 0x6d, 0x65, 0x58, 0x69, 0x61, 0x6f, 0x6d, 0x69, 0x5f, 0x4d, 0x31, 0x38, 0x30,
		0x35, 0x44, 0x31, 0x53, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x37, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x34, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x41, 0x31, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x41,
		0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x41, 0x32, 0x32, 0x33, 0x30, 0x32, 0x38, 0x52, 0x4e,
		0x43, 0x41, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x41, 0x32, 0x2b, 0x51, 0x69, 0x6e, 0x20,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x69, 0x6e, 0x20, 0x32, 0x43, 0x43, 0x31, 0x31, 0x43, 0x69,
		0x76, 0x69, 0x43, 0x69, 0x76, 0x69, 0x20, 0x32, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x35, 0x4d, 0x69, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x50, 0x61, 0x64, 0x20, 0x36,
		0x20, 0x50, 0x72, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x36, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x34, 0x4d, 0x69,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x32, 0x4d, 0x69,
		0x20, 0x50, 0x61, 0x64, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x4d, 0x69, 0x50,
		0x72, 0x6f, 0x6a, 0x41, 0x31, 0x4d, 0x69, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x20, 0x50, 0x72,
		0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x31, 0x35, 0x30, 0x22, 0x4d, 0x69, 0x20, 0x42,
		0x6f, 0x78, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x24,
		0x31, 0x4d, 0x69, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x31, 0x53, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x34,
		0x53, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x51, 0x31, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69,
		0x63, 0x6b, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x4d,
		0x69, 0x54, 0x56, 0x20, 0x50, 0x31, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x52, 0x31, 0x4d, 0x69, 0x54,
		0x56, 0x20, 0x34, 0x41, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x34, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x69, 0x54, 0x56, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x46, 0x6f, 0x6c,
		0x64, 0x4d, 0x69, 0x78, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x32, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x54, 0x44, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34,
		0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x6b, 0x65, 0x6e,
		0x7a, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x41, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x41, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x53, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x58, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x39, 0x54, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x39, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x54, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4a, 0x45, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x53, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x44, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x44, 0x69,
		0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x52, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x34, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x53, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x53, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x54, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x37, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x24, 0x31, 0x4d,
		0x49, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x5f, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x4d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x51, 0x69, 0x6e, 0x20, 0x31, 0x73, 0x2b, 0x4d, 0x69, 0x20,
		0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x69, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x24,
		0x31, 0x4d, 0x69, 0x20, 0x24, 0x31, 0x48, 0x4d, 0x20, 0x24, 0x31, 0x58, 0x69, 0x6f, 0x6e, 0x43,
		0x45, 0x24, 0x31, 0x58, 0x6f, 0x6c, 0x6f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x2d, 0x31, 0x58, 0x4d,
		0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x31, 0x58, 0x45, 0x72, 0x61, 0x20, 0x31, 0x58, 0x20, 0x50,
		0x72, 0x6f, 0x45, 0x72, 0x61, 0x20, 0x24, 0x31, 0x58, 0x45, 0x72, 0x61, 0x20, 0x34, 0x58, 0x20,
		0x32, 0x47, 0x42, 0x45, 0x72, 0x61, 0x20, 0x32, 0x56, 0x45, 0x72, 0x61, 0x20, 0x24, 0x31, 0x43,
		0x75, 0x62, 0x65, 0x20, 0x35, 0x2e, 0x30, 0x58, 0x6f, 0x72, 0x6f, 0x54, 0x65, 0x6c, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x24, 0x31, 0x20, 0x41, 0x33, 0x20, 0x34, 0x47, 0x54, 0x65, 0x6c, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x65, 0x67, 0x61, 0x50, 0x61, 0x64, 0x20, 0x33, 0x32, 0x30,
		0x34, 0x20, 0x56, 0x35, 0x48, 0x4d, 0x54, 0x20, 0x24, 0x31, 0x48, 0x53, 0x54, 0x20, 0x32, 0x36,
		0x30, 0x58, 0x73, 0x68, 0x69, 0x74, 0x6f, 0x75, 0x58, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x58, 0x39,
		0x58, 0x42, 0x6f, 0x74, 0x20, 0x24, 0x31, 0x58, 0x50, 0x31, 0x30, 0x5f, 0x57, 0x69, 0x66, 0x69,
		0x58, 0x50, 0x31, 0x30, 0x20, 0x57, 0x69, 0x46, 0x69, 0x58, 0x74, 0x72, 0x61, 0x74, 0x65, 0x63,
		0x68, 0x58, 0x4d, 0x31, 0x34, 0x47, 0x49, 0x67, 0x75, 0x61, 0x6e, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x58, 0x4d, 0x31, 0x34, 0x47, 0x58, 0x31, 0x30, 0x4d, 0x54, 0x31, 0x36, 0x58, 0x77, 0x61, 0x76,
		0x65, 0x78, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x59, 0x41, 0x53, 0x49, 0x4e, 0x59, 0x45, 0x4c,
		0x4c, 0x59, 0x4f, 0x55, 0x54, 0x48, 0x59, 0x45, 0x50, 0x45, 0x4e, 0x4d, 0x32, 0x30, 0x32, 0x30,
		0x31, 0x34, 0x31, 0x39, 0x58, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x59,
		0x4f, 0x54, 0x4f, 0x50, 0x54, 0x59, 0x55, 0x20, 0x46, 0x6c, 0x79, 0x59, 0x55, 0x48, 0x4f, 0x59,
		0x55, 0x48, 0x4f, 0x5f, 0x56, 0x61, 0x73, 0x74, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x61, 0x73,
		0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x59, 0x31, 0x5f, 0x41, 0x43,
		0x45, 0x59, 0x31, 0x20, 0x41, 0x63, 0x65, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x59, 0x31, 0x5f, 0x53,
		0x54, 0x41, 0x52, 0x59, 0x31, 0x20, 0x53, 0x74, 0x61, 0x72, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x4f,
		0x31, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x4f, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x59, 0x55, 0x4d,
		0x4b, 0x45, 0x4d, 0x59, 0x55, 0x4e, 0x44, 0x4f, 0x4f, 0x59, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x59,
		0x61, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x32, 0x2d, 0x30, 0x30, 0x30,
		0x30, 0x31, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x59, 0x4e, 0x44, 0x58, 0x2d, 0x24, 0x31, 0x59,
		0x4e, 0x44, 0x58, 0x2d, 0x30, 0x30, 0x30, 0x53, 0x42, 0x59, 0x61, 0x72, 0x76, 0x69, 0x6b, 0x4c,
		0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42, 0x30, 0x37, 0x2d, 0x39, 0x32, 0x30, 0x4e, 0x4c, 0x75,
		0x6e, 0x61, 0x20, 0x37, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x37, 0x63, 0x4c, 0x75, 0x6e, 0x61, 0x20,
		0x54, 0x41, 0x42, 0x32, 0x37, 0x34, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42, 0x34, 0x37,
		0x34, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x31, 0x30, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42,
		0x31, 0x30, 0x2d, 0x31, 0x35, 0x30, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x31, 0x30, 0x63, 0x54, 0x41,
		0x42, 0x30, 0x39, 0x2d, 0x34, 0x31, 0x30, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x39, 0x2e, 0x37,
		0x54, 0x41, 0x42, 0x31, 0x30, 0x2d, 0x34, 0x31, 0x30, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x54, 0x41, 0x42, 0x30, 0x37, 0x2d, 0x34, 0x38, 0x35, 0x4e, 0x6f, 0x62, 0x6c,
		0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x37, 0x63, 0x54, 0x41,
		0x42, 0x30, 0x37, 0x2d, 0x32, 0x30, 0x30, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x37, 0x69, 0x63,
		0x54, 0x41, 0x42, 0x30, 0x38, 0x2d, 0x32, 0x30, 0x30, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x38,
		0x69, 0x63, 0x54, 0x41, 0x42, 0x30, 0x38, 0x2d, 0x32, 0x30, 0x31, 0x2d, 0x33, 0x47, 0x58, 0x65,
		0x6e, 0x74, 0x61, 0x20, 0x38, 0x63, 0x54, 0x41, 0x42, 0x39, 0x2d, 0x32, 0x30, 0x30, 0x58, 0x65,
		0x6e, 0x74, 0x61, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x63, 0x54, 0x41, 0x42, 0x30, 0x39, 0x2d, 0x32,
		0x31, 0x31, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x63, 0x2b, 0x58, 0x65,
		0x6e, 0x74, 0x61, 0x20, 0x31, 0x30, 0x69, 0x63, 0x54, 0x41, 0x42, 0x31, 0x33, 0x2d, 0x32, 0x30,
		0x31, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x31, 0x33, 0x63, 0x59, 0x65, 0x73, 0x4d, 0x36, 0x33,
		0x31, 0x59, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x4d, 0x36, 0x35, 0x31, 0x47, 0x5f,
		0x4d, 0x59, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x32, 0x4d, 0x36, 0x38, 0x35,
		0x59, 0x34, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x33, 0x59, 0x65, 0x73, 0x74,
		0x65, 0x6c, 0x59, 0x65, 0x7a, 0x7a, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x24, 0x31, 0x59, 0x65, 0x7a,
		0x7a, 0x2d, 0x41, 0x43, 0x34, 0x45, 0x49, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x34, 0x45, 0x49, 0x41,
		0x52, 0x54, 0x31, 0x5f, 0x50, 0x52, 0x4f, 0x41, 0x72, 0x74, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x41, 0x52, 0x54, 0x31, 0x41, 0x72, 0x74, 0x20, 0x31, 0x41, 0x52, 0x54, 0x32, 0x50, 0x52, 0x4f,
		0x41, 0x72, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x50, 0x49, 0x43, 0x20, 0x54, 0x45,
		0x70, 0x69, 0x63, 0x20, 0x54, 0x4c, 0x49, 0x56, 0x31, 0x4c, 0x49, 0x56, 0x20, 0x31, 0x53, 0x4c,
		0x49, 0x56, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x41, 0x58, 0x5f, 0x31, 0x5f, 0x50, 0x4c, 0x55,
		0x53, 0x4d, 0x61, 0x78, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x41, 0x58, 0x32, 0x20,
		0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x6e,
		0x64, 0x79, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x24, 0x31, 0x2e,
		0x24, 0x32, 0x20, 0x24, 0x33, 0x59, 0x6f, 0x6b, 0x61, 0x20, 0x54, 0x56, 0x4b, 0x42, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x59, 0x6f, 0x6f, 0x7a, 0x59, 0x6f, 0x74, 0x61, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x6f, 0x75, 0x69, 0x6e, 0x59, 0x6f, 0x75, 0x2d,
		0x42, 0x6f, 0x78, 0x59, 0x6f, 0x75, 0x77, 0x65, 0x69, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x35, 0x47,
		0x59, 0x74, 0x6f, 0x6e, 0x65, 0x59, 0x75, 0x59, 0x75, 0x70, 0x68, 0x6f, 0x72, 0x69, 0x61, 0x59,
		0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x32, 0x59, 0x75, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x59,
		0x75, 0x72, 0x65, 0x6b, 0x61, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x32, 0x59, 0x75, 0x72,
		0x65, 0x6b, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x59,
		0x55, 0x20, 0x36, 0x30, 0x30, 0x30, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x59, 0x75, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x4e, 0x31, 0x30, 0x31, 0x59, 0x75, 0x6e, 0x53,
		0x6f, 0x6e, 0x67, 0x59, 0x53, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x75, 0x6e, 0x6f, 0x55,
		0x4c, 0x58, 0x2d, 0x24, 0x31, 0x59, 0x75, 0x73, 0x75, 0x6e, 0x4c, 0x41, 0x32, 0x2d, 0x54, 0x59,
		0x78, 0x74, 0x65, 0x6c, 0x5a, 0x48, 0x26, 0x4b, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20,
		0x4a, 0x31, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20,
		0x24, 0x31, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x41, 0x65, 0x6f, 0x6e, 0x4f, 0x64,
		0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x41, 0x63, 0x65, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x4e, 0x65,
		0x78, 0x74, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x50, 0x65, 0x72, 0x72, 0x69, 0x4f,
		0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x4f, 0x64, 0x79, 0x73,
		0x73, 0x65, 0x79, 0x20, 0x45, 0x76, 0x6f, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x56,
		0x69, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x53, 0x77,
		0x69, 0x66, 0x74, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x54, 0x79, 0x74, 0x61, 0x6e,
		0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x53, 0x61, 0x67, 0x61, 0x4f, 0x64, 0x79, 0x73,
		0x73, 0x65, 0x79, 0x20, 0x53, 0x61, 0x63, 0x72, 0x65, 0x64, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65,
		0x79, 0x20, 0x50, 0x6f, 0x70, 0x6f, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x52, 0x61,
		0x6e, 0x67, 0x65, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x47, 0x6c, 0x61, 0x7a, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x47, 0x6c, 0x61,
		0x7a, 0x65, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x48, 0x69, 0x67, 0x68, 0x4f, 0x64,
		0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x53, 0x6f, 0x61, 0x72, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65,
		0x79, 0x20, 0x45, 0x72, 0x61, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x53, 0x45, 0x20, 0x52, 0x49, 0x53,
		0x45, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x52, 0x69, 0x73, 0x65, 0x49, 0x4e, 0x54,
		0x45, 0x4e, 0x53, 0x45, 0x20, 0x48, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65,
		0x20, 0x48, 0x79, 0x70, 0x65, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x53, 0x45, 0x20, 0x47, 0x41, 0x4d,
		0x45, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x5a, 0x49, 0x46,
		0x52, 0x4f, 0x5a, 0x49, 0x4b, 0x5a, 0x54, 0x45, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x20, 0x31,
		0x30, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x33,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x32,
		0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x33, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x20, 0x49, 0x49, 0x4c, 0x69, 0x62,
		0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x20, 0x49, 0x49, 0x49, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f,
		0x20, 0x53, 0x31, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x46, 0x33, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x41, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x70, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x31, 0x4e, 0x39, 0x33, 0x39, 0x53, 0x63, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x41, 0x37, 0x31, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x76,
		0x37, 0x35, 0x34, 0x30, 0x4e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x32, 0x20, 0x35,
		0x47, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x20, 0x56, 0x69, 0x74, 0x61, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x31, 0x30, 0x20, 0x56,
		0x69, 0x74, 0x61, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x32, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x41,
		0x78, 0x6f, 0x6e, 0x20, 0x37, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x41,
		0x78, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f,
		0x6e, 0x20, 0x31, 0x30, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e,
		0x20, 0x31, 0x31, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x41, 0x78, 0x6f,
		0x6e, 0x20, 0x31, 0x31, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x41, 0x32, 0x33, 0x32, 0x32, 0x47,
		0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33,
		0x30, 0x41, 0x32, 0x30, 0x32, 0x32, 0x48, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x32, 0x30, 0x32, 0x32, 0x50, 0x47, 0x41, 0x78, 0x6f, 0x6e,
		0x20, 0x33, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x41, 0x32, 0x30, 0x32, 0x32, 0x50, 0x41,
		0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x32, 0x30,
		0x32, 0x32, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x32, 0x30,
		0x32, 0x33, 0x50, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x34, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x41, 0x32, 0x30, 0x32, 0x33, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x34, 0x30, 0x20, 0x53, 0x45, 0x41, 0x32, 0x30, 0x31, 0x36,
		0x41, 0x78, 0x6f, 0x6e, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x45, 0x67, 0x41, 0x6c, 0x6c, 0x73, 0x74, 0x61, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x35, 0x43, 0x74, 0x79, 0x6f, 0x6e, 0x20,
		0x41, 0x39, 0x56, 0x35, 0x47, 0x56, 0x35, 0x53, 0x56, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x20, 0x4d,
		0x61, 0x78, 0x41, 0x76, 0x69, 0x64, 0x41, 0x76, 0x69, 0x64, 0x20, 0x35, 0x37, 0x39, 0x41, 0x76,
		0x69, 0x64, 0x20, 0x35, 0x38, 0x39, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20, 0x32,
		0x54, 0x65, 0x6d, 0x70, 0x6f, 0x20, 0x58, 0x57, 0x61, 0x72, 0x70, 0x20, 0x34, 0x47, 0x56, 0x69,
		0x73, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x52, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x46, 0x6f,
		0x72, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x54, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x51, 0x2b, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x51, 0x20, 0x4c, 0x75, 0x78, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x47, 0x46, 0x33, 0x57, 0x61, 0x72, 0x70, 0x20, 0x53, 0x79, 0x6e, 0x63,
		0x57, 0x61, 0x72, 0x70, 0x20, 0x37, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x42,
		0x6f, 0x6f, 0x73, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x2b, 0x4d, 0x61, 0x78, 0x20, 0x58, 0x4c, 0x56,
		0x69, 0x74, 0x61, 0x6c, 0x56, 0x35, 0x20, 0x52, 0x65, 0x64, 0x20, 0x42, 0x75, 0x6c, 0x6c, 0x47,
		0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x65, 0x6d, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x37, 0x37,
		0x39, 0x4d, 0x4a, 0x6f, 0x65, 0x79, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x20, 0x32, 0x56, 0x38, 0x30,
		0x37, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x43, 0x56, 0x38, 0x30, 0x39, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x43, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x35, 0x32, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x54, 0x45, 0x5f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x5f,
		0x49, 0x49, 0x49, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x49, 0x49, 0x49, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x38, 0x38, 0x32, 0x4c, 0x6f, 0x72, 0x64, 0x56,
		0x39, 0x36, 0x37, 0x53, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x32, 0x47, 0x72, 0x61, 0x6e,
		0x64, 0x20, 0x58, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x56, 0x39, 0x36, 0x35, 0x56,
		0x38, 0x30, 0x30, 0x30, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x34, 0x5a, 0x39, 0x38, 0x37,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x2b, 0x47, 0x72, 0x61, 0x6e,
		0x64, 0x20, 0x45, 0x72, 0x61, 0x55, 0x5a, 0x54, 0x45, 0x20, 0x47, 0x52, 0x41, 0x4e, 0x44, 0x20,
		0x56, 0x37, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x56, 0x37, 0x56, 0x37, 0x38, 0x38, 0x44, 0x4b,
		0x69, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x33, 0x33, 0x31, 0x4e, 0x38, 0x31, 0x38, 0x53,
		0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x20, 0x46, 0x72, 0x65, 0x73, 0x68, 0x20, 0x35, 0x4f, 0x70, 0x74,
		0x75, 0x73, 0x20, 0x58, 0x20, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x20, 0x32, 0x4f, 0x70, 0x74,
		0x75, 0x73, 0x20, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x32, 0x4f, 0x70, 0x74, 0x75,
		0x73, 0x20, 0x58, 0x20, 0x57, 0x61, 0x76, 0x65, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20,
		0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x32, 0x30, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x4c, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x4c, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x33, 0x20, 0x41, 0x70, 0x65, 0x78, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x4c, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x34, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x4c, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x36, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x4c, 0x37, 0x41, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x24, 0x31, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x28, 0x24, 0x32, 0x29, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x41, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x31, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x41, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x20, 0x4d, 0x61,
		0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x53, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x53, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x37, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x44, 0x20, 0x4c,
		0x75, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x32, 0x31, 0x30, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x41, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x56, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x37, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x31, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58,
		0x31, 0x20, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x24, 0x31, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x58, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x35, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x38, 0x51, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x53,
		0x45, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x56, 0x39, 0x20, 0x56, 0x69, 0x74, 0x61, 0x5a, 0x54, 0x45, 0x20, 0x38,
		0x30, 0x33, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x33, 0x30, 0x20, 0x56, 0x69, 0x74,
		0x61, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x33, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56,
		0x32, 0x30, 0x32, 0x32, 0x20, 0x34, 0x47, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x33, 0x30, 0x4e,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x33, 0x30, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x33,
		0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x33, 0x30, 0x5a, 0x54, 0x45, 0x20, 0x41, 0x37,
		0x30, 0x34, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x30, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x5a, 0x54, 0x45, 0x20, 0x41, 0x37, 0x30, 0x35, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x56, 0x34, 0x31, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30,
		0x34, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61,
		0x5a, 0x54, 0x45, 0x20, 0x38, 0x31, 0x34, 0x30, 0x4e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56,
		0x34, 0x31, 0x20, 0x56, 0x69, 0x74, 0x61, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x34, 0x36, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x54, 0x45, 0x20,
		0x38, 0x30, 0x34, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x30, 0x20, 0x44, 0x65,
		0x73, 0x69, 0x67, 0x6e, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x34, 0x35, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x56, 0x34, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x24, 0x31, 0x20, 0x56,
		0x69, 0x74, 0x61, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74,
		0x5a, 0x38, 0x32, 0x30, 0x4f, 0x62, 0x73, 0x69, 0x64, 0x69, 0x61, 0x6e, 0x5a, 0x39, 0x38, 0x36,
		0x55, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x33, 0x5a, 0x36, 0x34, 0x31,
		0x30, 0x53, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x73, 0x5a, 0x36,
		0x31, 0x30, 0x44, 0x4c, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x56, 0x69,
		0x65, 0x77, 0x5a, 0x39, 0x37, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x5a, 0x39, 0x37, 0x38, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x50, 0x72,
		0x6f, 0x5a, 0x38, 0x33, 0x39, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x61, 0x6e, 0x74, 0x61,
		0x67, 0x65, 0x5a, 0x33, 0x31, 0x35, 0x33, 0x56, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x61,
		0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x32, 0x5a, 0x39, 0x33, 0x30, 0x4c, 0x55, 0x6e, 0x69, 0x63,
		0x6f, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x39, 0x36, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58,
		0x5a, 0x36, 0x34, 0x30, 0x30, 0x43, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x32, 0x20, 0x4d,
		0x61, 0x78, 0x5a, 0x39, 0x38, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x5a, 0x20, 0x4d, 0x61,
		0x78, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x39, 0x38, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x5a,
		0x20, 0x4d, 0x61, 0x78, 0x5a, 0x39, 0x38, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x20,
		0x4d, 0x61, 0x78, 0x43, 0x69, 0x74, 0x72, 0x69, 0x6e, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x79,
		0x6d, 0x62, 0x61, 0x6c, 0x2d, 0x43, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x32, 0x33, 0x33, 0x56, 0x43,
		0x79, 0x6d, 0x62, 0x61, 0x6c, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x32, 0x33, 0x32, 0x54, 0x4c, 0x43,
		0x79, 0x6d, 0x62, 0x61, 0x6c, 0x2d, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x33, 0x35, 0x33, 0x56,
		0x4c, 0x43, 0x79, 0x6d, 0x62, 0x61, 0x6c, 0x2d, 0x54, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x37, 0x31,
		0x38, 0x54, 0x4c, 0x4a, 0x61, 0x73, 0x70, 0x65, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x49, 0x53,
		0x20, 0x49, 0x49, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x69, 0x73, 0x20, 0x49, 0x49, 0x20, 0x4d, 0x61,
		0x78, 0x4b, 0x69, 0x73, 0x20, 0x33, 0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x79, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x38, 0x39, 0x39, 0x56, 0x4c, 0x4d, 0x61, 0x6a, 0x65, 0x73,
		0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x5a,
		0x38, 0x32, 0x38, 0x54, 0x4c, 0x4d, 0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x61, 0x6e, 0x66, 0x61, 0x72, 0x65, 0x4d, 0x61, 0x76, 0x65,
		0x6e, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x5a, 0x38, 0x31, 0x35, 0x46, 0x61, 0x6e,
		0x66, 0x61, 0x72, 0x65, 0x20, 0x32, 0x5a, 0x38, 0x33, 0x31, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20,
		0x32, 0x5a, 0x38, 0x33, 0x32, 0x53, 0x6f, 0x6e, 0x61, 0x74, 0x61, 0x20, 0x33, 0x5a, 0x38, 0x33,
		0x35, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x33, 0x50, 0x72, 0x65, 0x6c, 0x75, 0x64, 0x65, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x5a, 0x38, 0x35, 0x31, 0x4d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x75, 0x72,
		0x65, 0x20, 0x33, 0x5a, 0x38, 0x35, 0x32, 0x46, 0x61, 0x6e, 0x66, 0x61, 0x72, 0x65, 0x20, 0x33,
		0x5a, 0x38, 0x32, 0x38, 0x41, 0x76, 0x69, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x38, 0x35,
		0x35, 0x41, 0x76, 0x69, 0x64, 0x20, 0x34, 0x5a, 0x38, 0x33, 0x33, 0x41, 0x76, 0x69, 0x64, 0x20,
		0x54, 0x52, 0x49, 0x4f, 0x5a, 0x46, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x5a,
		0x35, 0x35, 0x38, 0x56, 0x4c, 0x5a, 0x46, 0x69, 0x76, 0x65, 0x20, 0x43, 0x20, 0x4c, 0x54, 0x45,
		0x5a, 0x35, 0x35, 0x37, 0x42, 0x4c, 0x5a, 0x46, 0x69, 0x76, 0x65, 0x20, 0x47, 0x20, 0x4c, 0x54,
		0x45, 0x5a, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4c, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x39, 0x31, 0x36,
		0x42, 0x4c, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4c, 0x54, 0x45,
		0x5a, 0x39, 0x31, 0x37, 0x56, 0x4c, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70,
		0x20, 0x4c, 0x54, 0x45, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x33,
		0x5a, 0x4d, 0x61, 0x78, 0x20, 0x31, 0x30, 0x5a, 0x39, 0x36, 0x33, 0x56, 0x4c, 0x4d, 0x61, 0x78,
		0x20, 0x44, 0x75, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x39, 0x37, 0x30, 0x5a, 0x4d, 0x61, 0x78,
		0x20, 0x5a, 0x39, 0x37, 0x30, 0x5a, 0x39, 0x38, 0x36, 0x44, 0x4c, 0x4d, 0x41, 0x58, 0x20, 0x42,
		0x6c, 0x75, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x20, 0x32, 0x41, 0x78,
		0x6f, 0x6e, 0x20, 0x4d, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x32, 0x30,
		0x31, 0x35, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x54, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x43, 0x32, 0x30,
		0x31, 0x37, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x32, 0x30, 0x31,
		0x38, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x37, 0x73, 0x42, 0x32, 0x30, 0x31, 0x37, 0x47, 0x41, 0x78,
		0x6f, 0x6e, 0x20, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x5a, 0x36, 0x36, 0x37, 0x54, 0x5a, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x53,
		0x6b, 0x61, 0x74, 0x65, 0x20, 0x32, 0x47, 0x65, 0x65, 0x6b, 0x5a, 0x37, 0x31, 0x36, 0x42, 0x4c,
		0x53, 0x63, 0x6f, 0x72, 0x65, 0x58, 0x35, 0x30, 0x31, 0x47, 0x72, 0x6f, 0x6f, 0x76, 0x65, 0x46,
		0x2d, 0x34, 0x35, 0x30, 0x41, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x72,
		0x4d, 0x6f, 0x6e, 0x6f, 0x56, 0x38, 0x36, 0x35, 0x4d, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58,
		0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x65, 0x6f, 0x20, 0x51, 0x32, 0x56, 0x65, 0x72, 0x67, 0x61,
		0x74, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x35, 0x56, 0x65, 0x72, 0x67, 0x61, 0x74, 0x61, 0x72, 0x69,
		0x6f, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x54,
		0x45, 0x20, 0x38, 0x30, 0x31, 0x32, 0x4e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30,
		0x32, 0x31, 0x20, 0x35, 0x47, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x30, 0x30, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32, 0x30, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x30, 0x30,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61,
		0x4b, 0x49, 0x53, 0x20, 0x43, 0x33, 0x34, 0x31, 0x4b, 0x69, 0x73, 0x20, 0x43, 0x33, 0x34, 0x31,
		0x4d, 0x45, 0x4f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x41, 0x38, 0x30, 0x41, 0x78, 0x6f,
		0x6e, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x31, 0x30, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x5a, 0x58, 0x56, 0x31, 0x30, 0x20, 0x42, 0x38, 0x36, 0x37, 0x52, 0x45, 0x47, 0x72, 0x61, 0x6e,
		0x64, 0x20, 0x58, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20,
		0x58, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x34, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20,
		0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x2e, 0x38, 0x54, 0x72, 0x65, 0x6b, 0x20, 0x32, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x78, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x24, 0x31, 0x5a, 0x54, 0x45, 0x20, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x32,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41,
		0x36, 0x31, 0x30, 0x5a, 0x59, 0x51, 0x51, 0x36, 0x33, 0x38, 0x51, 0x32, 0x36, 0x32, 0x34, 0x43,
		0x68, 0x65, 0x65, 0x72, 0x20, 0x33, 0x47, 0x51, 0x32, 0x36, 0x30, 0x32, 0x54, 0x56, 0x20, 0x4e,
		0x65, 0x78, 0x74, 0x51, 0x32, 0x37, 0x32, 0x38, 0x5a, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x51,
		0x32, 0x37, 0x32, 0x39, 0x51, 0x32, 0x36, 0x38, 0x38, 0x51, 0x32, 0x36, 0x32, 0x33, 0x57, 0x69,
		0x6e, 0x20, 0x33, 0x47, 0x51, 0x32, 0x36, 0x32, 0x36, 0x43, 0x61, 0x72, 0x65, 0x20, 0x33, 0x47,
		0x51, 0x33, 0x36, 0x32, 0x33, 0x42, 0x72, 0x61, 0x77, 0x20, 0x33, 0x47, 0x51, 0x33, 0x30, 0x32,
		0x32, 0x51, 0x33, 0x32, 0x38, 0x20, 0x6d, 0x39, 0x51, 0x33, 0x32, 0x38, 0x20, 0x4d, 0x39, 0x51,
		0x33, 0x32, 0x38, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x33, 0x47, 0x51, 0x36, 0x36, 0x38, 0x54,
		0x56, 0x20, 0x49, 0x34, 0x4a, 0x37, 0x37, 0x51, 0x2e, 0x44, 0x65, 0x65, 0x51, 0x2e, 0x55, 0x70,
		0x20, 0x43, 0x35, 0x51, 0x2e, 0x55, 0x70, 0x51, 0x2e, 0x42, 0x6f, 0x73, 0x73, 0x20, 0x50, 0x39,
		0x39, 0x51, 0x2e, 0x44, 0x65, 0x65, 0x20, 0x52, 0x30, 0x39, 0x51, 0x2e, 0x47, 0x6f, 0x6f, 0x64,
		0x20, 0x4d, 0x39, 0x51, 0x2e, 0x48, 0x69, 0x20, 0x53, 0x31, 0x51, 0x2e, 0x48, 0x69, 0x51, 0x2e,
		0x48, 0x6f, 0x74, 0x20, 0x50, 0x37, 0x20, 0x33, 0x47, 0x51, 0x2e, 0x48, 0x6f, 0x74, 0x51, 0x2e,
		0x4d, 0x65, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x33, 0x47, 0x51, 0x2e, 0x4d,
		0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x37, 0x51, 0x2e, 0x4d, 0x65, 0x51, 0x2e, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x52, 0x39, 0x39, 0x51, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x42, 0x37, 0x51,
		0x2e, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x4a, 0x32, 0x51, 0x2e, 0x54, 0x6f, 0x70, 0x20, 0x58, 0x38,
		0x51, 0x2e, 0x59, 0x6f, 0x75, 0x51, 0x54, 0x41, 0x42, 0x20, 0x54, 0x61, 0x62, 0x34, 0x51, 0x54,
		0x61, 0x62, 0x20, 0x54, 0x61, 0x62, 0x34, 0x5a, 0x59, 0x51, 0x2d, 0x51, 0x38, 0x38, 0x51, 0x38,
		0x38, 0x5a, 0x61, 0x69, 0x74, 0x68, 0x5a, 0x61, 0x6d, 0x6f, 0x6c, 0x78, 0x65, 0x5a, 0x61, 0x74,
		0x65, 0x63, 0x57, 0x69, 0x6e, 0x64, 0x5a, 0x50, 0x4c, 0x41, 0x59, 0x31, 0x5f, 0x32, 0x30, 0x31,
		0x38, 0x5a, 0x70, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x5a, 0x70, 0x6f,
		0x77, 0x65, 0x72, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x50, 0x6c, 0x75, 0x73,
		0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x50, 0x41, 0x44, 0x5f,
		0x31, 0x5a, 0x50, 0x61, 0x64, 0x5a, 0x65, 0x61, 0x6c, 0x6f, 0x74, 0x5a, 0x65, 0x62, 0x6c, 0x61,
		0x7a, 0x65, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x54, 0x48, 0x4f, 0x52, 0x20, 0x50, 0x52,
		0x4f, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x62, 0x72, 0x61, 0x5a, 0x65,
		0x65, 0x6b, 0x65, 0x72, 0x5a, 0x45, 0x45, 0x4b, 0x45, 0x52, 0x5a, 0x65, 0x65, 0x6d, 0x69, 0x5a,
		0x65, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x47, 0x6c, 0x61, 0x6d, 0x41, 0x64, 0x6d, 0x69,
		0x72, 0x65, 0x20, 0x47, 0x6c, 0x61, 0x6d, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x65,
		0x6e, 0x73, 0x65, 0x2b, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x77, 0x61, 0x64, 0x65,
		0x73, 0x68, 0x2b, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20,
		0x44, 0x75, 0x6f, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65, 0x20,
		0x4e, 0x65, 0x6f, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65, 0x2b,
		0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x4e, 0x65, 0x6f, 0x2b, 0x41, 0x64, 0x6d, 0x69, 0x72,
		0x65, 0x20, 0x44, 0x75, 0x6f, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x68, 0x69, 0x6e,
		0x65, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
		0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x64, 0x6d, 0x69,
		0x72, 0x65, 0x20, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20,
		0x47, 0x6c, 0x6f, 0x72, 0x79, 0x2b, 0x5a, 0x65, 0x6e, 0x65, 0x6b, 0x5a, 0x35, 0x35, 0x31, 0x37,
		0x4c, 0x65, 0x6f, 0x70, 0x61, 0x72, 0x64, 0x6f, 0x5a, 0x36, 0x30, 0x30, 0x31, 0x4c, 0x69, 0x62,
		0x65, 0x6c, 0x75, 0x6c, 0x61, 0x5a, 0x35, 0x30, 0x30, 0x37, 0x4f, 0x73, 0x6f, 0x5a, 0x35, 0x35,
		0x31, 0x39, 0x50, 0x69, 0x6e, 0x67, 0xc3, 0xbb, 0x69, 0x6e, 0x6f, 0x5a, 0x35, 0x35, 0x31, 0x36,
		0x5a, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x2d, 0x24, 0x31, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x5a, 0x66, 0x69, 0x6e, 0x65, 0x72, 0x59, 0x39, 0x30, 0x30, 0x5a, 0x69, 0x64,
		0x6f, 0x6f, 0x5a, 0x69, 0x67, 0x6f, 0x45, 0x6f, 0x6e, 0x34, 0x35, 0x69, 0x45, 0x6f, 0x6e, 0x20,
		0x34, 0x35, 0x69, 0x5a, 0x69, 0x6e, 0x6f, 0x78, 0x4b, 0x69, 0x64, 0x73, 0x4c, 0x65, 0x67, 0x61,
		0x63, 0x79, 0x54, 0x61, 0x62, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x4c, 0x65, 0x67,
		0x61, 0x63, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x70, 0x61, 0x64, 0x2d,
		0x58, 0x38, 0x2d, 0x50, 0x52, 0x4f, 0x5a, 0x70, 0x61, 0x64, 0x20, 0x58, 0x38, 0x20, 0x50, 0x72,
		0x6f, 0x5a, 0x69, 0x6f, 0x78, 0x41, 0x73, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x20, 0x34, 0x47,
		0x41, 0x73, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x41, 0x73, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x44, 0x75, 0x6f, 0x70, 0x69, 0x78, 0x20, 0x46, 0x39, 0x20, 0x50, 0x72,
		0x6f, 0x44, 0x75, 0x6f, 0x24, 0x31, 0x20, 0x24, 0x32, 0x5a, 0x6f, 0x6e, 0x64, 0x61, 0x5a, 0x41,
		0x34, 0x30, 0x39, 0x4d, 0x75, 0x7a, 0x69, 0x63, 0x5a, 0x6f, 0x6e, 0x6b, 0x6f, 0x4b, 0x31, 0x30,
		0x31, 0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5a, 0x6f, 0x70, 0x6f, 0x43, 0x32,
		0x20, 0x49, 0x49, 0x39, 0x58, 0x58, 0x20, 0x51, 0x75, 0x61, 0x64, 0x5a, 0x50, 0x39, 0x38, 0x30,
		0x2b, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x65, 0x72,
		0x6f, 0x20, 0x32, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x37, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20,
		0x38, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x62, 0x65, 0x72,
		0x6f, 0x20, 0x48, 0x44, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20,
		0x43, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x53, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x46, 0x32,
		0x46, 0x35, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x4d, 0x35, 0x43, 0x32, 0x20, 0x43, 0x6f,
		0x6c, 0x6f, 0x72, 0x20, 0x4d, 0x34, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x58, 0x43, 0x6f, 0x6c,
		0x6f, 0x72, 0x20, 0x43, 0x35, 0x69, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x68, 0x69, 0x6e, 0x69,
		0x6e, 0x67, 0x50, 0x69, 0x6c, 0x6f, 0x74, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x58, 0x32, 0x46,
		0x6c, 0x61, 0x73, 0x68, 0x20, 0x47, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20,
		0x24, 0x31, 0x5a, 0x75, 0x75, 0x6d, 0x41, 0x4b, 0x55, 0x53, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x6b,
		0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6b, 0x75, 0x73, 0x20, 0x24, 0x31, 0x41, 0x75, 0x72,
		0x61, 0x20, 0x5a, 0x43, 0x4f, 0x56, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x4c, 0x49, 0x54,
		0x45, 0x43, 0x6f, 0x76, 0x65, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43,
		0x4f, 0x56, 0x45, 0x54, 0x20, 0x50, 0x52, 0x4f, 0x43, 0x6f, 0x76, 0x65, 0x74, 0x20, 0x50, 0x72,
		0x6f, 0x43, 0x4f, 0x56, 0x45, 0x54, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x43, 0x6f, 0x76, 0x65, 0x74,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x43, 0x6f, 0x76, 0x65, 0x74, 0x24, 0x31, 0x4d, 0x41, 0x47, 0x4e,
		0x4f, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61, 0x67, 0x6e, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4d, 0x41, 0x47, 0x4e, 0x4f, 0x2d, 0x53, 0x4d, 0x61, 0x67, 0x6e, 0x6f, 0x20, 0x53, 0x4d, 0x61,
		0x67, 0x6e, 0x6f, 0x24, 0x31, 0x4f, 0x4e, 0x49, 0x58, 0x20, 0x53, 0x4f, 0x6e, 0x69, 0x78, 0x20,
		0x53, 0x4f, 0x4e, 0x49, 0x58, 0x53, 0x54, 0x45, 0x44, 0x49, 0x53, 0x74, 0x65, 0x64, 0x69, 0x53,
		0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x50, 0x52, 0x4f, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61,
		0x72, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x50, 0x4c, 0x55,
		0x53, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x65,
		0x6c, 0x6c, 0x61, 0x72, 0x20, 0x24, 0x31, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x4d,
		0x49, 0x4e, 0x49, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53,
		0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61,
		0x72, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x53, 0x74, 0x65, 0x6c,
		0x6c, 0x61, 0x72, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x47, 0x72, 0x61,
		0x76, 0x69, 0x74, 0x79, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x41, 0x55, 0x52, 0x41, 0x20, 0x50, 0x4c,
		0x55, 0x53, 0x20, 0x4a, 0x4c, 0x4f, 0x41, 0x75, 0x72, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x4a, 0x2e, 0x4c, 0x6f, 0x41, 0x55, 0x52, 0x41, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x4a, 0x4c, 0x4f,
		0x41, 0x75, 0x72, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4a, 0x2e, 0x4c, 0x6f, 0x41, 0x55, 0x52,
		0x41, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x75, 0x72, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x55, 0x52,
		0x41, 0x20, 0x58, 0x41, 0x75, 0x72, 0x61, 0x20, 0x58, 0x52, 0x4f, 0x4e, 0x49, 0x52, 0x6f, 0x6e,
		0x69, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x20, 0x5a, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x5a, 0x52,
		0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x24, 0x31, 0x55, 0x6e, 0x69, 0x71, 0x4c, 0x69, 0x6d, 0x69,
		0x74, 0x47, 0x52, 0x41, 0x4e, 0x54, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x5a, 0x79, 0x6e, 0x63, 0x43,
		0x6c, 0x6f, 0x75, 0x64, 0x20, 0x24, 0x31, 0x5a, 0x79, 0x72, 0x65, 0x78, 0x5a, 0x54, 0x32, 0x31,
		0x36, 0x61, 0x63, 0x74, 0x69, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x6b, 0x32,
		0x31, 0x54, 0x2d, 0x30, 0x33, 0x61, 0x6c, 0x74, 0x72, 0x6f, 0x6e, 0x41, 0x4c, 0x2d, 0x35, 0x35,
		0x35, 0x4f, 0x42, 0x2d, 0x24, 0x31, 0x47, 0x49, 0x2d, 0x36, 0x32, 0x36, 0x62, 0x32, 0x6d, 0x44,
		0x65, 0x63, 0x61, 0x64, 0x65, 0x20, 0x35, 0x33, 0x62, 0x6f, 0x67, 0x6f, 0x42, 0x4f, 0x2d, 0x4c,
		0x46, 0x53, 0x50, 0x34, 0x4c, 0x69, 0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x34, 0x44,
		0x43, 0x42, 0x4f, 0x2d, 0x4c, 0x46, 0x53, 0x50, 0x53, 0x4c, 0x34, 0x4c, 0x69, 0x66, 0x65, 0x53,
		0x74, 0x79, 0x6c, 0x65, 0x20, 0x34, 0x53, 0x4c, 0x42, 0x4f, 0x2d, 0x4c, 0x46, 0x53, 0x50, 0x42,
		0x53, 0x35, 0x4c, 0x69, 0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x35, 0x42, 0x53, 0x42,
		0x4f, 0x2d, 0x4c, 0x46, 0x53, 0x50, 0x53, 0x4c, 0x36, 0x51, 0x43, 0x49, 0x4c, 0x69, 0x66, 0x65,
		0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x36, 0x51, 0x43, 0x62, 0x71, 0x53, 0x74, 0x72, 0x69, 0x6b,
		0x65, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x4f, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x20, 0x43, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x53, 0x43, 0x6c, 0x65, 0x76, 0x65,
		0x72, 0x46, 0x75, 0x6e, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x20, 0x53, 0x45, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x20, 0x4c, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x50, 0x72, 0x6f, 0x42, 0x51, 0x2d, 0x38, 0x30, 0x36, 0x37, 0x4c, 0x48, 0x6f, 0x72, 0x6e, 0x65,
		0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x51, 0x2d, 0x38, 0x30, 0x35, 0x32, 0x47, 0x42, 0x51,
		0x2d, 0x38, 0x30, 0x34, 0x31, 0x4c, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x38, 0x34, 0x47, 0x53, 0x69,
		0x6d, 0x70, 0x6c, 0x65, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x36, 0x31, 0x47, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x73, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x35, 0x31, 0x47, 0x45,
		0x6c, 0x62, 0x61, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x33, 0x36, 0x4c, 0x48, 0x6f, 0x72, 0x6e, 0x65,
		0x74, 0x43, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x32, 0x31, 0x47, 0x42,
		0x51, 0x2d, 0x37, 0x30, 0x31, 0x30, 0x47, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x30, 0x36, 0x47, 0x55,
		0x6e, 0x69, 0x6f, 0x6e, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x30, 0x33, 0x4a, 0x61, 0x6d, 0x61, 0x69,
		0x63, 0x61, 0x42, 0x51, 0x2d, 0x36, 0x36, 0x34, 0x35, 0x4c, 0x36, 0x36, 0x34, 0x35, 0x4c, 0x20,
		0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x51, 0x2d, 0x36, 0x30, 0x36, 0x31, 0x4c, 0x36,
		0x30, 0x36, 0x31, 0x4c, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x42, 0x51, 0x2d, 0x36, 0x30, 0x32, 0x32,
		0x47, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63,
		0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53,
		0x70, 0x72, 0x69, 0x6e, 0x67, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x42, 0x51, 0x2d, 0x35, 0x35, 0x32,
		0x32, 0x53, 0x69, 0x6c, 0x6b, 0x46, 0x61, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x61,
		0x73, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x77, 0x69, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x77,
		0x69, 0x6e, 0x57, 0x69, 0x64, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x46, 0x6f, 0x72,
		0x77, 0x61, 0x72, 0x64, 0x42, 0x6c, 0x69, 0x73, 0x73, 0x41, 0x6d, 0x73, 0x74, 0x65, 0x72, 0x64,
		0x61, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x34, 0x47, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x49, 0x72, 0x6f,
		0x6e, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x53, 0x65, 0x6c, 0x66,
		0x69, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x69, 0x63, 0x65, 0x20, 0x32, 0x4e, 0x69, 0x63, 0x65,
		0x4e, 0x69, 0x63, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x61, 0x77, 0x61, 0x73, 0x61, 0x6b,
		0x69, 0x56, 0x61, 0x6e, 0x63, 0x6f, 0x75, 0x76, 0x65, 0x72, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74,
		0x20, 0x32, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x56, 0x69, 0x65, 0x77, 0x56, 0x65, 0x6c,
		0x76, 0x65, 0x74, 0x20, 0x56, 0x69, 0x65, 0x77, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x42, 0x61,
		0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x53, 0x65, 0x6c, 0x66,
		0x69, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73,
		0x65, 0x20, 0x32, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x65, 0x6c,
		0x69, 0x65, 0x66, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x20,
		0x4c, 0x54, 0x45, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53,
		0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x45, 0x61, 0x73, 0x79,
		0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x32, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x45, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x51, 0x2d, 0x35, 0x30, 0x36, 0x30,
		0x4c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x20, 0x34, 0x47, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x6b,
		0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x52, 0x75, 0x73, 0x68, 0x48, 0x69, 0x67, 0x68, 0x20, 0x57,
		0x61, 0x79, 0x42, 0x6f, 0x6e, 0x64, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x69, 0x63, 0x68, 0x52,
		0x69, 0x63, 0x68, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x6f, 0x6e, 0x74, 0x65, 0x20, 0x43, 0x61, 0x72,
		0x6c, 0x6f, 0x53, 0x70, 0x6f, 0x74, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x45, 0x61, 0x73,
		0x79, 0x50, 0x72, 0x61, 0x67, 0x75, 0x65, 0x42, 0x51, 0x2d, 0x35, 0x35, 0x36, 0x30, 0x4c, 0x54,
		0x72, 0x65, 0x6e, 0x64, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x42, 0x51, 0x2d, 0x35, 0x35,
		0x36, 0x35, 0x4c, 0x53, 0x79, 0x64, 0x6e, 0x65, 0x79, 0x4c, 0x6f, 0x73, 0x20, 0x41, 0x6e, 0x67,
		0x65, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x68, 0x61, 0x72, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x6d,
		0x62, 0x6f, 0x20, 0x49, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x69, 0x6c, 0x61,
		0x6e, 0x54, 0x6f, 0x6b, 0x79, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x72,
		0x65, 0x61, 0x6c, 0xd0, 0x9e, 0x73, 0x61, 0x6b, 0x61, 0x56, 0x65, 0x6e, 0x69, 0x63, 0x65, 0x46,
		0x6f, 0x78, 0x20, 0x56, 0x69, 0x65, 0x77, 0x46, 0x6f, 0x78, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x44, 0x72, 0x69, 0x76, 0x65, 0x47, 0x6f, 0x6c, 0x66, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x6f, 0x6e,
		0x64, 0x53, 0x69, 0x6e, 0x67, 0x61, 0x70, 0x6f, 0x72, 0x65, 0x46, 0x6c, 0x6f, 0x72, 0x65, 0x6e,
		0x63, 0x65, 0x53, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x67, 0x6f, 0x44, 0x75, 0x62, 0x61, 0x69, 0x4b,
		0x69, 0x6e, 0x67, 0x73, 0x74, 0x6f, 0x6e, 0x42, 0x51, 0x53, 0x2d, 0x34, 0x35, 0x30, 0x31, 0x20,
		0x42, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x6c, 0x42, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x6c, 0x46, 0x6f,
		0x78, 0x20, 0x45, 0x61, 0x73, 0x79, 0x46, 0x6f, 0x78, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x68, 0x61,
		0x72, 0x6b, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x55, 0x70, 0x21, 0x4f, 0x72, 0x6c, 0x65, 0x61, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x6e,
		0x67, 0x68, 0x61, 0x69, 0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x53, 0x65, 0x6f, 0x75,
		0x6c, 0x44, 0x75, 0x73, 0x73, 0x65, 0x6c, 0x64, 0x6f, 0x72, 0x66, 0x56, 0x65, 0x72, 0x6f, 0x6e,
		0x61, 0x43, 0x6f, 0x6f, 0x6c, 0x4f, 0x78, 0x66, 0x6f, 0x72, 0x64, 0x41, 0x73, 0x70, 0x65, 0x6e,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x6f, 0x6d, 0x62, 0x61, 0x79, 0x48, 0x6f, 0x72, 0x6e, 0x65,
		0x74, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x51, 0x2d, 0x31, 0x30, 0x33, 0x36,
		0x4c, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x74, 0x48, 0x6f, 0x72,
		0x6e, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x72,
		0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x61, 0x73, 0x73, 0x69,
		0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x73, 0x69, 0x6b, 0x61, 0x48, 0x61, 0x77, 0x61, 0x69, 0x69, 0x47,
		0x72, 0x61, 0x63, 0x65, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x41, 0x71,
		0x75, 0x61, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x34, 0x2e, 0x35, 0x4a, 0x61, 0x76, 0x61, 0x42,
		0x51, 0x2d, 0x39, 0x30, 0x35, 0x35, 0x4c, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x51, 0x2d, 0x38, 0x30, 0x38, 0x38, 0x4c, 0x45, 0x78, 0x69,
		0x6f, 0x6e, 0x20, 0x53, 0x75, 0x72, 0x66, 0x46, 0x69, 0x6a, 0x69, 0x47, 0x72, 0x61, 0x63, 0x65,
		0x20, 0x33, 0x47, 0x4c, 0x75, 0x7a, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x6f, 0x6e, 0x46,
		0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6c, 0x74, 0x61, 0xd0, 0xa1, 0x68, 0x61, 0x72, 0x6d,
		0xd0, 0xa1, 0x68, 0x61, 0x72, 0x6d, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x72, 0x6d, 0x6f, 0x72,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x4e, 0x65, 0x78, 0x69,
		0x6f, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x37, 0x30, 0x38, 0x33, 0x31, 0x30, 0x35, 0x36, 0x4c, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x2b, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72,
		0x6f, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4f, 0x6e, 0x65, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20,
		0x4d, 0x61, 0x78, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x45, 0x64, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x33,
		0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x54, 0x56, 0x5f,
		0x42, 0x51, 0x65, 0x4e, 0x4f, 0x56, 0x41, 0x65, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x54, 0x41, 0x42,
		0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x22, 0x20, 0x4c,
		0x54, 0x45, 0x65, 0x53, 0x54, 0x41, 0x52, 0x24, 0x31, 0x20, 0x24, 0x32, 0x20, 0x51, 0x75, 0x61,
		0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x47, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x48,
		0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x24, 0x31, 0x65, 0x53, 0x54,
		0x41, 0x52, 0x20, 0x47, 0x52, 0x41, 0x4e, 0x44, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x4d, 0x45, 0x52,
		0x43, 0x55, 0x52, 0x59, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72,
		0x65, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x20, 0x63, 0x6f, 0x72, 0x65, 0x65, 0x53, 0x54, 0x41, 0x52, 0x20, 0x42, 0x45, 0x41, 0x55, 0x54,
		0x59, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x65,
		0x61, 0x75, 0x74, 0x79, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x65, 0x53, 0x54, 0x41, 0x52, 0x20, 0x4d, 0x4f, 0x4f, 0x4e, 0x20, 0x48, 0x44, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x20, 0x48, 0x44, 0x20,
		0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x47, 0x65, 0x53, 0x54, 0x41,
		0x52, 0x20, 0x42, 0x45, 0x41, 0x55, 0x54, 0x59, 0x20, 0x32, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x65, 0x61, 0x75, 0x74, 0x79, 0x20, 0x32, 0x20,
		0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x33, 0x47, 0x74, 0x61, 0x6b, 0x65, 0x65, 0x20, 0x31, 0x54, 0x61, 0x6b, 0x65, 0x65, 0x20,
		0x31, 0x65, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x63, 0x6f, 0x6d, 0x69, 0x2d, 0x43, 0x68, 0x65,
		0x72, 0x72, 0x79, 0x69, 0x43, 0x68, 0x65, 0x72, 0x72, 0x79, 0x2d, 0x43, 0x32, 0x35, 0x36, 0x43,
		0x32, 0x35, 0x36, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x33, 0x47, 0x69, 0x2d, 0x4a, 0x6f, 0x79,
		0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x61, 0x20, 0x4d, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x61,
		0x20, 0x4c, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x61, 0x20, 0x58, 0x4c, 0x45, 0x6c, 0x65, 0x6b,
		0x74, 0x72, 0x61, 0x20, 0x58, 0x58, 0x4c, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x53, 0x79,
		0x67, 0x6e, 0x75, 0x73, 0x44, 0x65, 0x6f, 0x78, 0x69, 0x2d, 0x43, 0x61, 0x6c, 0x6c, 0x20, 0x24,
		0x31, 0x69, 0x2d, 0x6d, 0x61, 0x74, 0x65, 0x69, 0x2d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x69,
		0x2d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x49, 0x51, 0x20, 0x24, 0x31, 0x49, 0x51,
		0x20, 0x5a, 0x20, 0x50, 0x52, 0x4f, 0x49, 0x51, 0x20, 0x5a, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x51,
		0x20, 0x5a, 0x20, 0x42, 0x52, 0x49, 0x47, 0x48, 0x54, 0x49, 0x51, 0x20, 0x5a, 0x20, 0x42, 0x72,
		0x69, 0x67, 0x68, 0x74, 0x69, 0x42, 0x61, 0x6c, 0x6c, 0x41, 0x6e, 0x64, 0x69, 0x20, 0x57, 0x69,
		0x6e, 0x6b, 0x20, 0x34, 0x47, 0x41, 0x6e, 0x64, 0x69, 0x20, 0x35, 0x47, 0x20, 0x42, 0x6c, 0x69,
		0x6e, 0x6b, 0x20, 0x34, 0x47, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x44, 0x44, 0x2d, 0x31, 0x47,
		0x42, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x44, 0x61, 0x7a, 0x7a, 0x6c, 0x65, 0x20, 0x33, 0x35,
		0x30, 0x30, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x33, 0x47, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74,
		0x5f, 0x58, 0x32, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x20, 0x58, 0x32, 0x53, 0x6c, 0x69, 0x64,
		0x65, 0x5f, 0x53, 0x6b, 0x79, 0x65, 0x5f, 0x30, 0x33, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x53,
		0x6b, 0x79, 0x65, 0x20, 0x30, 0x33, 0x42, 0x72, 0x61, 0x63, 0x65, 0x20, 0x58, 0x31, 0x69, 0x54,
		0x41, 0x42, 0x20, 0x42, 0x69, 0x7a, 0x6e, 0x69, 0x5a, 0x69, 0x54, 0x41, 0x42, 0x20, 0x42, 0x69,
		0x7a, 0x6e, 0x69, 0x5a, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x6f,
		0x76, 0x69, 0x65, 0x7a, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x42, 0x65, 0x72, 0x72, 0x79, 0x69, 0x42,
		0x72, 0x69, 0x74, 0x69, 0x35, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x36, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20,
		0x58, 0x5a, 0x32, 0x4c, 0x69, 0x74, 0x65, 0x5a, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x46,
		0x35, 0x31, 0x69, 0x44, 0x61, 0x74, 0x61, 0x69, 0x44, 0x69, 0x6e, 0x6f, 0x4e, 0x6f, 0x74, 0x65,
		0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x36, 0x69, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x50, 0x41, 0x43,
		0x48, 0x45, 0x20, 0x47, 0x36, 0x41, 0x70, 0x61, 0x63, 0x68, 0x65, 0x20, 0x47, 0x36, 0x52, 0x6f,
		0x79, 0x61, 0x6c, 0x20, 0x56, 0x35, 0x42, 0x61, 0x72, 0x6c, 0x20, 0x58, 0x37, 0x69, 0x47, 0x65,
		0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x31, 0x30, 0x30, 0x69, 0x48, 0x75, 0x6e, 0x74,
		0x43, 0x79, 0x62, 0x65, 0x72, 0x20, 0x44, 0x4f, 0x47, 0x20, 0x34, 0x47, 0x43, 0x79, 0x62, 0x65,
		0x72, 0x20, 0x44, 0x6f, 0x67, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x6b, 0x65, 0x5f, 0x48, 0x69, 0x31,
		0x30, 0x5f, 0x32, 0x30, 0x32, 0x31, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x48, 0x69, 0x31, 0x30, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x28,
		0x32, 0x30, 0x24, 0x31, 0x29, 0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x50, 0x52,
		0x4f, 0x20, 0x32, 0x30, 0x32, 0x30, 0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4f, 0x6e, 0x65, 0x5f, 0x20, 0x4c, 0x6f,
		0x76, 0x65, 0x5f, 0x4f, 0x6e, 0x65, 0x20, 0x4c, 0x6f, 0x76, 0x65, 0x54, 0x69, 0x61, 0x6e, 0x20,
		0x50, 0x33, 0x30, 0x30, 0x30, 0x54, 0x49, 0x54, 0x41, 0x4e, 0x5f, 0x50, 0x31, 0x31, 0x30, 0x30,
		0x30, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x31, 0x31, 0x30, 0x30,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x49, 0x54, 0x41, 0x4e, 0x20, 0x50, 0x31, 0x35, 0x30, 0x30,
		0x30, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x35, 0x47, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x31,
		0x35, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x54, 0x49, 0x54, 0x41, 0x4e,
		0x20, 0x50, 0x34, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x31, 0x54,
		0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x34, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x38, 0x30, 0x30, 0x30,
		0x20, 0x50, 0x52, 0x4f, 0x20, 0x32, 0x30, 0x32, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50,
		0x38, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x54,
		0x69, 0x74, 0x61, 0x6e, 0x5f, 0x50, 0x36, 0x30, 0x30, 0x30, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x69,
		0x74, 0x61, 0x6e, 0x20, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x20, 0x50, 0x36, 0x30, 0x30, 0x30, 0x4c, 0x69, 0x6b, 0x65, 0x5f, 0x33, 0x5f, 0x50,
		0x72, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x6b, 0x65,
		0x20, 0x31, 0x32, 0x20, 0x50, 0x52, 0x4f, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x48, 0x69, 0x35, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x24,
		0x31, 0x4c, 0x69, 0x6b, 0x65, 0x5f, 0x34, 0x55, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x34, 0x55, 0x69,
		0x48, 0x75, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x6b, 0x65, 0x58, 0x33, 0x30, 0x30, 0x20, 0x45, 0x6c,
		0x69, 0x74, 0x65, 0x53, 0x36, 0x30, 0x5f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
		0x5f, 0x32, 0x30, 0x31, 0x39, 0x53, 0x36, 0x30, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
		0x72, 0x79, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x53, 0x36, 0x30, 0x20, 0x44, 0x69, 0x73,
		0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x36, 0x30, 0x20, 0x44,
		0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32,
		0x32, 0x53, 0x36, 0x30, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x58, 0x4c,
		0x69, 0x74, 0x65, 0x32, 0x30, 0x32, 0x30, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20,
		0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20,
		0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20,
		0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x32, 0x30, 0x32, 0x31, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x5f, 0x58, 0x5f,
		0x41, 0x70, 0x65, 0x58, 0x5f, 0x32, 0x30, 0x32, 0x30, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58,
		0x20, 0x41, 0x70, 0x65, 0x58, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x6c, 0x69, 0x65,
		0x6e, 0x5f, 0x58, 0x5f, 0x41, 0x70, 0x65, 0x58, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20,
		0x41, 0x70, 0x65, 0x58, 0x53, 0x24, 0x31, 0x20, 0x41, 0x70, 0x65, 0x58, 0x41, 0x6c, 0x69, 0x65,
		0x6e, 0x5f, 0x58, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x53, 0x32, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x32, 0x30, 0x32, 0x31, 0x53, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x41, 0x70, 0x65, 0x58, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x32, 0x31, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x47, 0x20, 0x32, 0x30, 0x32, 0x31, 0x53, 0x32, 0x31, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x47, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53,
		0x32, 0x32, 0x20, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x53, 0x32, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x53, 0x32, 0x32, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x53, 0x32, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x61, 0x6e, 0x64, 0x61, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x32, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50,
		0x61, 0x6e, 0x64, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x69,
		0x4b, 0x6f, 0x4d, 0x6f, 0x69, 0x4b, 0x6f, 0x6e, 0x69, 0x4c, 0x41, 0x69, 0x4c, 0x65, 0x70, 0x6f,
		0x69, 0x4c, 0x69, 0x66, 0x65, 0x4b, 0x33, 0x31, 0x30, 0x32, 0x20, 0x57, 0x49, 0x46, 0x49, 0x4b,
		0x33, 0x31, 0x30, 0x32, 0x20, 0x57, 0x69, 0x46, 0x69, 0x57, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31,
		0x5a, 0x65, 0x64, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x46, 0x69, 0x76, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x46, 0x69, 0x76, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x69, 0x4d, 0x49, 0x56,
		0x69, 0x6e, 0x33, 0x20, 0x53, 0x56, 0x69, 0x6e, 0x20, 0x33, 0x20, 0x53, 0x56, 0x69, 0x6e, 0x33,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x6e, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56,
		0x69, 0x6e, 0x20, 0x24, 0x31, 0x4d, 0x65, 0x73, 0x73, 0x69, 0x20, 0x24, 0x31, 0x69, 0x4d, 0x61,
		0x6e, 0x69, 0x4d, 0x61, 0x72, 0x73, 0x49, 0x4d, 0x41, 0x52, 0x53, 0x20, 0x56, 0x45, 0x47, 0x41,
		0x20, 0x58, 0x37, 0x56, 0x65, 0x67, 0x61, 0x20, 0x58, 0x37, 0x56, 0x49, 0x56, 0x49, 0x5f, 0x38,
		0x56, 0x49, 0x56, 0x49, 0x20, 0x38, 0x4d, 0x49, 0x4c, 0x4b, 0x59, 0x5f, 0x57, 0x41, 0x59, 0x5f,
		0x4d, 0x32, 0x4d, 0x69, 0x6c, 0x6b, 0x79, 0x20, 0x57, 0x61, 0x79, 0x20, 0x4d, 0x32, 0x69, 0x4d,
		0x75, 0x7a, 0x6d, 0x75, 0x50, 0x41, 0x44, 0x20, 0x24, 0x31, 0x69, 0x4e, 0x4f, 0x56, 0x41, 0x69,
		0x4e, 0x61, 0x76, 0x69, 0x49, 0x54, 0x50, 0x2d, 0x58, 0x44, 0x38, 0x30, 0x4c, 0x55, 0x2b, 0x20,
		0x50, 0x61, 0x64, 0x38, 0x69, 0x4e, 0x65, 0x77, 0x56, 0x33, 0x43, 0x56, 0x33, 0x2d, 0x45, 0x56,
		0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x37, 0x41, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x36, 0x69, 0x4e, 0x6f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x69, 0x4e, 0x4f,
		0x20, 0x53, 0x43, 0x4f, 0x55, 0x54, 0x20, 0x32, 0x53, 0x63, 0x6f, 0x75, 0x74, 0x20, 0x32, 0x53,
		0x47, 0x49, 0x4e, 0x4f, 0x36, 0x69, 0x4e, 0x4f, 0x20, 0x53, 0x39, 0x69, 0x4f, 0x63, 0x65, 0x61,
		0x6e, 0x58, 0x37, 0x53, 0x2d, 0x54, 0x58, 0x38, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x70, 0x72,
		0x6f, 0x58, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x38, 0x20, 0x6d,
		0x69, 0x6e, 0x69, 0x58, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x58, 0x37, 0x53, 0x20, 0x45, 0x6c,
		0x69, 0x74, 0x65, 0x69, 0x4f, 0x75, 0x74, 0x64, 0x6f, 0x6f, 0x72, 0x69, 0x50, 0x45, 0x47, 0x54,
		0x4f, 0x50, 0x49, 0x50, 0x45, 0x47, 0x54, 0x4f, 0x50, 0x69, 0x50, 0x72, 0x6f, 0x4b, 0x79, 0x6c,
		0x69, 0x6e, 0x20, 0x35, 0x2e, 0x30, 0x53, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x4b,
		0x79, 0x6c, 0x69, 0x6e, 0x35, 0x30, 0x69, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x35, 0x30, 0x69,
		0x4b, 0x59, 0x4c, 0x49, 0x4e, 0x34, 0x30, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x34, 0x30, 0x4f,
		0x70, 0x61, 0x6c, 0x20, 0x34, 0x53, 0x4a, 0x61, 0x64, 0x65, 0x20, 0x24, 0x31, 0x73, 0x41, 0x6d,
		0x62, 0x65, 0x72, 0x35, 0x53, 0x5f, 0x50, 0x72, 0x6f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x35,
		0x53, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x36, 0x41, 0x6d, 0x62, 0x65, 0x72,
		0x20, 0x36, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x37, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x37,
		0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x38, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6d, 0x62, 0x65,
		0x72, 0x20, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x38, 0x53, 0x41,
		0x6d, 0x62, 0x65, 0x72, 0x20, 0x38, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x38, 0x41, 0x6d, 0x62,
		0x65, 0x72, 0x20, 0x38, 0x42, 0x65, 0x6e, 0x6e, 0x79, 0x31, 0x30, 0x42, 0x65, 0x6e, 0x6e, 0x79,
		0x20, 0x31, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6e, 0x69, 0x78, 0x35, 0x30, 0x53, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x35, 0x30, 0x53, 0x52, 0x75, 0x62, 0x79, 0x35, 0x53,
		0x52, 0x75, 0x62, 0x79, 0x20, 0x35, 0x53, 0x53, 0x41, 0x4d, 0x42, 0x41, 0x36, 0x35, 0x53, 0x53,
		0x61, 0x6d, 0x62, 0x61, 0x20, 0x36, 0x35, 0x53, 0x5a, 0x61, 0x66, 0x69, 0x72, 0x6f, 0x57, 0x61,
		0x76, 0x65, 0x20, 0x34, 0x2e, 0x30, 0x20, 0x49, 0x49, 0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x2e,
		0x30, 0x4d, 0x45, 0x47, 0x41, 0x37, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x37, 0x69, 0x51, 0x26, 0x54,
		0x69, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x67, 0x20, 0x4f, 0x6e, 0x65,
		0x69, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x69, 0x52, 0x6f, 0x6c, 0x61, 0x44, 0x58, 0x37, 0x35, 0x38,
		0x20, 0x50, 0x72, 0x6f, 0x69, 0x52, 0x75, 0x6c, 0x75, 0x69, 0x53, 0x57, 0x41, 0x47, 0x41, 0x63,
		0x74, 0x69, 0x76, 0x4b, 0x72, 0x6f, 0x6e, 0x6f, 0x73, 0x4c, 0x79, 0x6e, 0x78, 0x4d, 0x65, 0x67,
		0x61, 0x4e, 0x65, 0x6d, 0x65, 0x73, 0x69, 0x73, 0x69, 0x53, 0x61, 0x66, 0x65, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x24, 0x31, 0x2e, 0x52, 0x47, 0x69, 0x53, 0x74, 0x61, 0x72, 0x69, 0x54,
		0x65, 0x6c, 0x57, 0x36, 0x35, 0x30, 0x32, 0x4c, 0x36, 0x35, 0x30, 0x33, 0x53, 0x31, 0x36, 0x20,
		0x50, 0x72, 0x6f, 0x57, 0x35, 0x35, 0x30, 0x35, 0x53, 0x32, 0x33, 0x41, 0x36, 0x36, 0x32, 0x4c,
		0x4d, 0x41, 0x36, 0x30, 0x73, 0x41, 0x36, 0x36, 0x32, 0x4c, 0x41, 0x36, 0x30, 0x57, 0x35, 0x35,
		0x30, 0x34, 0x50, 0x33, 0x33, 0x57, 0x35, 0x35, 0x30, 0x33, 0x57, 0x35, 0x30, 0x30, 0x32, 0x41,
		0x35, 0x37, 0x31, 0x57, 0x41, 0x33, 0x37, 0x41, 0x36, 0x33, 0x31, 0x4c, 0x41, 0x34, 0x39, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x35, 0x53, 0x36, 0x36, 0x32,
		0x4c, 0x43, 0x4e, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x53, 0x36, 0x36, 0x33, 0x4c, 0x53, 0x31, 0x38, 0x53, 0x36, 0x36, 0x31, 0x57, 0x41, 0x35, 0x35,
		0x31, 0x4c, 0x50, 0x31, 0x35, 0x50, 0x35, 0x35, 0x32, 0x57, 0x50, 0x31, 0x37, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x35, 0x35, 0x31, 0x57, 0x50, 0x31, 0x37, 0x57, 0x35, 0x30, 0x30, 0x33, 0x53, 0x33,
		0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4c, 0x35, 0x35, 0x30, 0x32, 0x41, 0x34, 0x34, 0x20, 0x41,
		0x69, 0x72, 0x4c, 0x35, 0x35, 0x30, 0x35, 0x41, 0x34, 0x37, 0x57, 0x35, 0x30, 0x30, 0x36, 0x58,
		0x41, 0x35, 0x31, 0x30, 0x57, 0x41, 0x31, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x36, 0x30,
		0x30, 0x36, 0x41, 0x34, 0x38, 0x41, 0x35, 0x37, 0x31, 0x4c, 0x41, 0x32, 0x36, 0x50, 0x36, 0x35,
		0x31, 0x57, 0x50, 0x33, 0x37, 0x41, 0x33, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x38,
		0x31, 0x4c, 0x50, 0x33, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x36, 0x35, 0x30, 0x31, 0x50, 0x33,
		0x36, 0x50, 0x36, 0x36, 0x31, 0x57, 0x50, 0x33, 0x38, 0x4c, 0x35, 0x30, 0x30, 0x37, 0x41, 0x32,
		0x34, 0x41, 0x35, 0x31, 0x32, 0x57, 0x41, 0x31, 0x38, 0x4c, 0x36, 0x30, 0x30, 0x33, 0x50, 0x41,
		0x35, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x36, 0x30, 0x30, 0x32, 0x50, 0x41, 0x32, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x4c, 0x35, 0x30, 0x30, 0x32, 0x50, 0x41, 0x32, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x4c, 0x35, 0x30, 0x30, 0x32, 0x41, 0x32, 0x35, 0x41, 0x35, 0x30, 0x37, 0x4c, 0x53, 0x4c, 0x35,
		0x35, 0x30, 0x33, 0x41, 0x34, 0x36, 0x41, 0x36, 0x36, 0x31, 0x4c, 0x41, 0x34, 0x39, 0x57, 0x36,
		0x30, 0x30, 0x34, 0x50, 0x41, 0x35, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x36, 0x36, 0x31, 0x57,
		0x50, 0x41, 0x35, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x36, 0x36, 0x31, 0x57, 0x41, 0x36, 0x33,
		0x31, 0x57, 0x41, 0x35, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x36, 0x30, 0x30, 0x34, 0x4c,
		0x41, 0x43, 0x36, 0x30, 0x57, 0x34, 0x30, 0x30, 0x31, 0x53, 0x56, 0x34, 0x31, 0x57, 0x34, 0x30,
		0x30, 0x31, 0x41, 0x43, 0x31, 0x33, 0x57, 0x34, 0x30, 0x30, 0x32, 0x41, 0x31, 0x34, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x57, 0x34, 0x30, 0x30, 0x33, 0x41, 0x31, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x41,
		0x35, 0x36, 0x20, 0x4c, 0x54, 0x45, 0x57, 0x36, 0x30, 0x30, 0x31, 0x50, 0x33, 0x33, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x57, 0x35, 0x30, 0x30, 0x31, 0x50, 0x57, 0x36, 0x30, 0x30, 0x33, 0x41, 0x36,
		0x31, 0x31, 0x57, 0x4c, 0x36, 0x30, 0x30, 0x35, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31,
		0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x38,
		0x32, 0x4c, 0x50, 0x33, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x36, 0x35, 0x31, 0x4c, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x53, 0x4c, 0x36, 0x35, 0x30, 0x31, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x36, 0x35, 0x30, 0x32, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x36, 0x36, 0x31, 0x4c, 0x47,
		0x50, 0x31, 0x30, 0x58, 0x32, 0x30, 0x31, 0x39, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31,
		0x69, 0x74, 0x24, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x31, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x74, 0x65, 0x6c, 0x20, 0x69, 0x74, 0x31, 0x37, 0x30, 0x31,
		0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x69, 0x74, 0x65, 0x6c, 0x20,
		0x57, 0x37, 0x30, 0x30, 0x31, 0x4b, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x31, 0x69, 0x74, 0x65,
		0x6c, 0x20, 0x57, 0x37, 0x30, 0x30, 0x32, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x20,
		0x31, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x24, 0x31, 0x41,
		0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x37, 0x2e, 0x30,
		0x22, 0x20, 0x33, 0x47, 0x69, 0x56, 0x41, 0x4c, 0x61, 0x6d, 0x63, 0x79, 0x20, 0x24, 0x31, 0x69,
		0x56, 0x69, 0x65, 0x77, 0x37, 0x34, 0x34, 0x54, 0x50, 0x43, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x37,
		0x34, 0x34, 0x54, 0x50, 0x43, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x56, 0x6f, 0x6f, 0x4d, 0x69,
		0x49, 0x6e, 0x6e, 0x65, 0x6c, 0x6f, 0x5f, 0x31, 0x49, 0x6e, 0x6e, 0x65, 0x6c, 0x6f, 0x20, 0x31,
		0x69, 0x56, 0x20, 0x35, 0x30, 0x35, 0x4d, 0x65, 0x20, 0x31, 0x69, 0x32, 0x5f, 0x4c, 0x69, 0x74,
		0x65, 0x69, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x69, 0x32, 0x4d, 0x65, 0x20, 0x31, 0x2b, 0x4d,
		0x65, 0x20, 0x24, 0x31, 0x69, 0x57, 0x61, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x58, 0x54, 0x65,
		0x63, 0x68, 0x69, 0x59, 0x6f, 0x75, 0x69, 0x5a, 0x6f, 0x74, 0x72, 0x6f, 0x6e, 0x4d, 0x49, 0x37,
		0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x42, 0x65, 0x74, 0x61, 0x4d, 0x49, 0x37, 0x20, 0x48, 0x65,
		0x72, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x69, 0x62, 0x6f, 0x77, 0x69, 0x6e, 0x69, 0x76, 0x76, 0x69,
		0x69, 0x76, 0x76, 0x69, 0x20, 0x50, 0x36, 0x30, 0x5f, 0x58, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x36, 0x30, 0x2d, 0x58, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6d, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x61, 0x6e, 0x49, 0x54, 0x51, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x6e, 0x4a, 0x6f, 0x79, 0x6e, 0x65, 0x6f, 0x43, 0x6f, 0x72, 0x65, 0x4e, 0x31, 0x20, 0x47, 0x31,
		0x45, 0x31, 0x2b, 0x45, 0x32, 0x6e, 0x6f, 0x44, 0x52, 0x4f, 0x50, 0x4f, 0x55, 0x54, 0x70, 0x68,
		0x6f, 0x6e, 0x65, 0x4f, 0x6e, 0x65, 0x74, 0x65, 0x58, 0x65, 0x74, 0x54, 0x4d, 0x2d, 0x39, 0x37,
		0x34, 0x39, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x37, 0x2e, 0x31,
		0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x39, 0x37, 0x34, 0x36, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x37, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x38, 0x30, 0x35, 0x31,
		0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x38, 0x69, 0x20, 0x33,
		0x47, 0x54, 0x4d, 0x2d, 0x31, 0x30, 0x35, 0x38, 0x58, 0x2d, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20,
		0x31, 0x30, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x38, 0x30, 0x34, 0x38, 0x58, 0x2d, 0x70, 0x61,
		0x64, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x38, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37,
		0x30, 0x35, 0x35, 0x48, 0x44, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x54,
		0x4d, 0x2d, 0x39, 0x37, 0x35, 0x38, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x68, 0x69,
		0x6e, 0x65, 0x20, 0x38, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20,
		0x51, 0x55, 0x41, 0x44, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20,
		0x51, 0x75, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70,
		0x61, 0x64, 0x20, 0x51, 0x55, 0x41, 0x44, 0x20, 0x37, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61,
		0x64, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d,
		0x70, 0x61, 0x64, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x32, 0x22, 0x20, 0x33, 0x47,
		0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x20, 0x38, 0x20, 0x33, 0x47,
		0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22,
		0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x48, 0x49, 0x54, 0x20, 0x33, 0x47, 0x58,
		0x2d, 0x70, 0x61, 0x64, 0x20, 0x48, 0x69, 0x74, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x22, 0x54, 0x4d, 0x2d, 0x39, 0x37, 0x36, 0x37,
		0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x30,
		0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41,
		0x56, 0x49, 0x20, 0x37, 0x2e, 0x33, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x30, 0x39,
		0x39, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x37, 0x2e, 0x34, 0x22,
		0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x37, 0x2e,
		0x35, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x38,
		0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49,
		0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x38, 0x35, 0x39,
		0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x38, 0x2e, 0x32, 0x22, 0x20,
		0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x30, 0x34, 0x39, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x54, 0x4d, 0x2d, 0x37, 0x30, 0x34, 0x39, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x38,
		0x38, 0x37, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x61, 0x64, 0x20, 0x54, 0x4d, 0x2d, 0x37, 0x38, 0x38,
		0x37, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x38, 0x30, 0x36, 0x36, 0x58, 0x2d, 0x70, 0x61, 0x64,
		0x20, 0x52, 0x61, 0x70, 0x69, 0x64, 0x20, 0x38, 0x2e, 0x32, 0x22, 0x20, 0x34, 0x47, 0x54, 0x4d,
		0x2d, 0x34, 0x35, 0x30, 0x33, 0x58, 0x2d, 0x51, 0x75, 0x61, 0x64, 0x54, 0x4d, 0x2d, 0x35, 0x30,
		0x30, 0x36, 0x58, 0x2d, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x4d, 0x2d, 0x35, 0x30, 0x30, 0x37, 0x58,
		0x2d, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x4d, 0x5f, 0x35, 0x30, 0x31, 0x31, 0x58, 0x2d, 0x4f,
		0x6d, 0x65, 0x67, 0x61, 0x50, 0x61, 0x79, 0x20, 0x24, 0x31, 0x47, 0x50, 0x61, 0x79, 0x20, 0x35,
		0x2e, 0x35, 0x22, 0x20, 0x24, 0x31, 0x47, 0x54, 0x4d, 0x2d, 0x35, 0x37, 0x30, 0x32, 0x50, 0x61,
		0x79, 0x20, 0x35, 0x2e, 0x37, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x35, 0x37, 0x30, 0x33,
		0x50, 0x61, 0x79, 0x20, 0x35, 0x2e, 0x37, 0x22, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x4d, 0x2d, 0x35,
		0x32, 0x30, 0x31, 0x54, 0x4d, 0x2d, 0x34, 0x35, 0x31, 0x35, 0x58, 0x2d, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x58, 0x2d, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x32, 0x54, 0x4d, 0x2d, 0x34, 0x30, 0x37, 0x31,
		0x58, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x54, 0x4d, 0x2d, 0x34, 0x39, 0x38, 0x32, 0x69, 0x58,
		0x2d, 0x4d, 0x61, 0x78, 0x69, 0x69, 0x58, 0x2d, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x4d, 0x2d, 0x35,
		0x30, 0x31, 0x30, 0x58, 0x2d, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x54, 0x4d, 0x2d, 0x34, 0x30,
		0x38, 0x32, 0x52, 0x58, 0x2d, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x54, 0x4d, 0x2d, 0x35, 0x35, 0x30, 0x33, 0x58, 0x2d, 0x4d, 0x61, 0x67, 0x65, 0x54, 0x4d, 0x2d,
		0x35, 0x35, 0x30, 0x38, 0x58, 0x2d, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x58, 0x2d, 0x46, 0x6f, 0x72,
		0x63, 0x65, 0x58, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x2d, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x58, 0x2d, 0x50, 0x6f,
		0x69, 0x6e, 0x74, 0x76, 0x2d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x58, 0x53, 0x20, 0x50, 0x72,
		0x6f, 0xc3, 0xb6, 0x77, 0x6e, 0x46, 0x75, 0x6e, 0x20, 0x24, 0x31, 0x46, 0x75, 0x6e, 0x20, 0x35,
		0x20, 0x34, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x75, 0x6e, 0x20, 0x56,
		0x61, 0x6c, 0x75, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x20, 0x56, 0x61, 0x6c,
		0x75, 0x65, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x4c, 0x54, 0x45, 0x41, 0x73, 0x70, 0x69, 0x72, 0x65, 0x20, 0x45, 0x35, 0x2d, 0x34, 0x32, 0x31,
		0x47, 0x41, 0x73, 0x70, 0x69, 0x72, 0x65, 0x20, 0x45, 0x35, 0x2d, 0x35, 0x31, 0x31, 0x4f, 0x6e,
		0x65, 0x20, 0x31, 0x30, 0x4b, 0x35, 0x30, 0x49, 0x4e, 0x4b, 0x35, 0x34, 0x4c, 0x54, 0x72, 0x61,
		0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x72, 0x61,
		0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x5a, 0x65, 0x6e,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x58, 0x35, 0x35, 0x30, 0x4c, 0x42, 0x58,
		0x35, 0x35, 0x33, 0x4d, 0x41, 0x58, 0x35, 0x35, 0x35, 0x4c, 0x4e, 0x58, 0x35, 0x35, 0x36, 0x55,
		0x51, 0x4b, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x45, 0x34, 0x33, 0x30, 0x30,
		0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x6f, 0x6e, 0x20, 0x33, 0x35, 0x34, 0x31, 0x58, 0x50, 0x53,
		0x20, 0x31, 0x35, 0x20, 0x39, 0x35, 0x33, 0x30, 0x58, 0x50, 0x53, 0x20, 0x31, 0x35, 0x20, 0x39,
		0x35, 0x35, 0x30, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x20, 0x50, 0x72, 0x65, 0x73, 0x61, 0x72,
		0x69, 0x6f, 0x20, 0x43, 0x51, 0x36, 0x31, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x43, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x20, 0x50, 0x72, 0x65, 0x73, 0x61, 0x72,
		0x69, 0x6f, 0x20, 0x43, 0x51, 0x36, 0x31, 0x48, 0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69,
		0x6f, 0x6e, 0x20, 0x78, 0x32, 0x20, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65,
		0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x78, 0x32, 0x48, 0x50, 0x20, 0x4c, 0x61,
		0x70, 0x74, 0x6f, 0x70, 0x20, 0x31, 0x35, 0x2d, 0x62, 0x73, 0x30, 0x78, 0x78, 0x31, 0x35, 0x20,
		0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x20, 0x50, 0x43, 0x48, 0x50, 0x20, 0x45, 0x4e, 0x56, 0x59,
		0x20, 0x78, 0x33, 0x36, 0x30, 0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x62, 0x6c,
		0x65, 0x20, 0x31, 0x35, 0x2d, 0x62, 0x70, 0x30, 0x78, 0x78, 0x45, 0x4e, 0x56, 0x59, 0x20, 0x78,
		0x33, 0x36, 0x30, 0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x20,
		0x50, 0x43, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x48, 0x50,
		0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x64, 0x76, 0x36, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x43, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f,
		0x6e, 0x20, 0x64, 0x76, 0x36, 0x48, 0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f,
		0x6e, 0x48, 0x50, 0x20, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x65, 0x20, 0x78, 0x33, 0x36, 0x30,
		0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63,
		0x74, 0x72, 0x65, 0x20, 0x78, 0x33, 0x36, 0x30, 0x48, 0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c,
		0x69, 0x6f, 0x6e, 0x20, 0x41, 0x6c, 0x6c, 0x2d, 0x69, 0x6e, 0x2d, 0x4f, 0x6e, 0x65, 0x20, 0x32,
		0x34, 0x2d, 0x72, 0x30, 0x78, 0x78, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x32,
		0x34, 0x2d, 0x72, 0x30, 0x78, 0x78, 0x20, 0x41, 0x6c, 0x6c, 0x2d, 0x69, 0x6e, 0x2d, 0x4f, 0x6e,
		0x65, 0x20, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x20, 0x50, 0x43, 0x32, 0x33, 0x2d, 0x66,
		0x33, 0x36, 0x34, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x33, 0x2d, 0x66, 0x33, 0x36, 0x34, 0x20, 0x41,
		0x6c, 0x6c, 0x2d, 0x69, 0x6e, 0x2d, 0x4f, 0x6e, 0x65, 0x20, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f,
		0x70, 0x20, 0x50, 0x43, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x64, 0x20, 0x48, 0x65, 0x6c,
		0x69, 0x78, 0x20, 0x33, 0x37, 0x30, 0x32, 0x47, 0x35, 0x30, 0x2d, 0x38, 0x30, 0x49, 0x64, 0x65,
		0x61, 0x70, 0x61, 0x64, 0x20, 0x33, 0x31, 0x30, 0x2d, 0x31, 0x35, 0x49, 0x53, 0x4b, 0x4c, 0x65,
		0x67, 0x69, 0x6f, 0x6e, 0x20, 0x59, 0x37, 0x32, 0x30, 0x53, 0x63, 0x68, 0x6e, 0x65, 0x69, 0x64,
		0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x34, 0x22, 0x20, 0x43,
		0x68, 0x65, 0x72, 0x72, 0x79, 0x20, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x74,
		0x69, 0x67, 0x65, 0x20, 0x54, 0x48, 0x2d, 0x33, 0x36, 0x30, 0x52, 0x31, 0x32, 0x2e, 0x33, 0x32,
		0x43, 0x54, 0x57, 0x46, 0x42, 0x4d, 0x44, 0x2f, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74,
		0x65, 0x20, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x31, 0x47, 0x69,
		0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x32, 0x47, 0x69, 0x50, 0x6f, 0x64,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x33, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x34, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x35,
		0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x36, 0x69, 0x50, 0x6f, 0x64,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x37, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x43, 0x6f, 0x77, 0x6f, 0x6e, 0x46, 0x69, 0x69, 0x4f, 0x4d, 0x31, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x44, 0x4b, 0x75, 0x47, 0x6f, 0x75, 0x4d, 0x69, 0x63, 0x72,
		0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x5a, 0x75, 0x6e, 0x65, 0x48, 0x44, 0x5a, 0x75, 0x6e, 0x65,
		0x20, 0x48, 0x44, 0x53, 0x4f, 0x4e, 0x4f, 0x53, 0x50, 0x6c, 0x61, 0x79, 0x3a, 0x35, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x34, 0x2e, 0x30, 0x59,
		0x50, 0x2d, 0x47, 0x37, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x65, 0x72, 0x20, 0x35, 0x2e, 0x30, 0x59, 0x50, 0x2d, 0x47, 0x53, 0x31, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x33, 0x2e, 0x36, 0x59, 0x50, 0x2d,
		0x47, 0x49, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
		0x20, 0x34, 0x2e, 0x32, 0x59, 0x50, 0x2d, 0x47, 0x50, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x35, 0x2e, 0x38, 0x59, 0x50, 0x2d, 0x47, 0x35,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x35,
		0x30, 0x59, 0x50, 0x2d, 0x47, 0x42, 0x37, 0x30, 0x44, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x37, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x68,
		0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x68, 0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x4d,
		0x36, 0x53, 0x79, 0x6c, 0x76, 0x61, 0x6e, 0x69, 0x61, 0x57, 0x69, 0x7a, 0x7a, 0x41, 0x4b, 0x49,
		0x52, 0x41, 0x41, 0x4b, 0x49, 0x52, 0x41, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x41, 0x4d, 0x43,
		0x56, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x42, 0x42, 0x4b, 0x20, 0x73, 0x68, 0x65, 0x6c, 0x6c,
		0x44, 0x45, 0x58, 0x50, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x44, 0x69, 0x67, 0x6d, 0x61, 0x20,
		0x53, 0x68, 0x65, 0x6c, 0x6c, 0x45, 0x43, 0x4f, 0x4e, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x48,
		0x69, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4a, 0x56, 0x43, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c,
		0x4b, 0x76, 0x61, 0x6e, 0x74, 0x4b, 0x76, 0x61, 0x6e, 0x74, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c,
		0x4c, 0x65, 0x62, 0x65, 0x6e, 0x4c, 0x65, 0x62, 0x65, 0x6e, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c,
		0x4c, 0x65, 0x66, 0x66, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x6f, 0x76, 0x69, 0x65, 0x77,
		0x4c, 0x6f, 0x76, 0x69, 0x65, 0x77, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x55, 0x4d, 0x55,
		0x53, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x20, 0x53,
		0x68, 0x65, 0x6c, 0x6c, 0x4e, 0x6f, 0x76, 0x65, 0x78, 0x20, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x53,
		0x74, 0x61, 0x72, 0x77, 0x69, 0x6e, 0x64, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x53, 0x75, 0x70,
		0x72, 0x61, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x54, 0x43, 0x4c, 0x2f, 0x54, 0x43, 0x4c, 0x2d,
		0x54, 0x65, 0x6c, 0x65, 0x66, 0x75, 0x6e, 0x6b, 0x65, 0x6e, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c,
		0x59, 0x75, 0x6e, 0x6f, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x46, 0x53, 0x2d, 0x41, 0x52, 0x53,
		0x2d, 0x30, 0x31, 0x42, 0x41, 0x69, 0x72, 0x74, 0x69, 0x65, 0x73, 0x41, 0x6c, 0x74, 0x65, 0x63,
		0x68, 0x20, 0x55, 0x45, 0x43, 0x41, 0x54, 0x56, 0x49, 0x4f, 0x35, 0x35, 0x44, 0x31, 0x36, 0x32,
		0x30, 0x42, 0x61, 0x6e, 0x67, 0x4f, 0x6c, 0x75, 0x66, 0x73, 0x65, 0x6e, 0x42, 0x61, 0x6e, 0x67,
		0x6f, 0x6c, 0x75, 0x66, 0x73, 0x65, 0x6e, 0x42, 0x65, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x4c, 0x43, 0x2d, 0x36, 0x35, 0x43, 0x55, 0x47, 0x38, 0x30, 0x35, 0x32, 0x45, 0x43, 0x72, 0x65,
		0x4e, 0x6f, 0x76, 0x61, 0x43, 0x4e, 0x56, 0x30, 0x30, 0x31, 0x44, 0x4d, 0x4d, 0x44, 0x72, 0x65,
		0x61, 0x6d, 0x62, 0x6f, 0x78, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x52, 0x4f, 0x4e, 0x49, 0x41, 0x46,
		0x26, 0x55, 0x47, 0x6f, 0x47, 0x45, 0x4e, 0x47, 0x37, 0x4c, 0x45, 0x35, 0x35, 0x58, 0x37, 0x30,
		0x30, 0x30, 0x55, 0x35, 0x30, 0x41, 0x44, 0x45, 0x56, 0x54, 0x4f, 0x4f, 0x4c, 0x35, 0x30, 0x41,
		0x36, 0x38, 0x33, 0x46, 0x45, 0x56, 0x53, 0x35, 0x35, 0x41, 0x36, 0x31, 0x30, 0x30, 0x45, 0x45,
		0x35, 0x35, 0x55, 0x36, 0x32, 0x51, 0x47, 0x41, 0x56, 0x54, 0x35, 0x30, 0x41, 0x36, 0x35, 0x30,
		0x32, 0x45, 0x41, 0x4d, 0x49, 0x43, 0x41, 0x4c, 0x49, 0x44, 0x56, 0x42, 0x36, 0x38, 0x38, 0x36,
		0x34, 0x39, 0x44, 0x32, 0x39, 0x30, 0x30, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x48, 0x4d, 0x53, 0x31,
		0x30, 0x30, 0x30, 0x53, 0x48, 0x4d, 0x53, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x53, 0x46, 0x56, 0x50,
		0x34, 0x30, 0x30, 0x30, 0x54, 0x46, 0x56, 0x50, 0x2d, 0x34, 0x30, 0x30, 0x30, 0x54, 0x48, 0x47,
		0x53, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x47, 0x53, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48,
		0x44, 0x52, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x44, 0x52, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x53,
		0x48, 0x44, 0x52, 0x34, 0x30, 0x30, 0x30, 0x54, 0x48, 0x44, 0x52, 0x2d, 0x34, 0x30, 0x30, 0x30,
		0x54, 0x49, 0x6b, 0x65, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x6b, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x74,
		0x6f, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4b, 0x55, 0x42, 0x4f, 0x33, 0x32,
		0x44, 0x31, 0x36, 0x32, 0x30, 0x4c, 0x47, 0x45, 0x58, 0x55, 0x34, 0x33, 0x57, 0x54, 0x31, 0x38,
		0x30, 0x4e, 0x34, 0x33, 0x4c, 0x4a, 0x36, 0x31, 0x34, 0x56, 0x2d, 0x5a, 0x41, 0x35, 0x35, 0x53,
		0x4b, 0x38, 0x35, 0x30, 0x56, 0x2d, 0x5a, 0x41, 0x4b, 0x45, 0x59, 0x30, 0x30, 0x30, 0x30, 0x32,
		0x31, 0x33, 0x46, 0x31, 0x7a, 0x4b, 0x45, 0x59, 0x30, 0x30, 0x30, 0x30, 0x32, 0x31, 0x33, 0x46,
		0x4b, 0x45, 0x59, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x24, 0x31, 0x4c, 0x4d, 0x32, 0x31, 0x55,
		0x33, 0x32, 0x4c, 0x4d, 0x4c, 0x61, 0x75, 0x72, 0x75, 0x73, 0x4c, 0x69, 0x6e, 0x73, 0x61, 0x72,
		0x4c, 0x6f, 0x65, 0x77, 0x65, 0x4d, 0x53, 0x74, 0x61, 0x72, 0x24, 0x31, 0x4b, 0x54, 0x56, 0x31,
		0x38, 0x24, 0x31, 0x4b, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x4d,
		0x61, 0x6e, 0x68, 0x61, 0x74, 0x74, 0x61, 0x6e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x65, 0x6b,
		0x4d, 0x65, 0x74, 0x7a, 0x4d, 0x49, 0x52, 0x41, 0x59, 0x4c, 0x45, 0x44, 0x4d, 0x2d, 0x33, 0x32,
		0x32, 0x4e, 0x49, 0x50, 0x4e, 0x6f, 0x72, 0x64, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x50, 0x45, 0x41,
		0x51, 0x50, 0x52, 0x4f, 0x46, 0x69, 0x4c, 0x4f, 0x56, 0x49, 0x45, 0x52, 0x41, 0x20, 0x28, 0x24,
		0x31, 0x29, 0x44, 0x49, 0x47, 0x41, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54,
		0x56, 0x20, 0x28, 0x24, 0x31, 0x29, 0x53, 0x43, 0x42, 0x43, 0x53, 0x43, 0x42, 0x43, 0x35, 0x38,
		0x36, 0x34, 0x33, 0x44, 0x31, 0x38, 0x35, 0x30, 0x53, 0x45, 0x47, 0x53, 0x57, 0x54, 0x56, 0x53,
		0x4b, 0x57, 0x45, 0x32, 0x30, 0x45, 0x32, 0x31, 0x53, 0x61, 0x62, 0x61, 0x53, 0x61, 0x6c, 0x6f,
		0x72, 0x61, 0x24, 0x32, 0x4d, 0x61, 0x70, 0x6c, 0x65, 0x5f, 0x32, 0x30, 0x31, 0x31, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x53, 0x65, 0x6c,
		0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x43, 0x2d, 0x24, 0x31, 0x42, 0x4c, 0x41, 0x2d,
		0x34, 0x33, 0x53, 0x6b, 0x79, 0x5f, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x4b, 0x44, 0x4c, 0x2d, 0x47,
		0x52, 0x31, 0x4b, 0x44, 0x4c, 0x2d, 0x47, 0x4e, 0x24, 0x31, 0x42, 0x52, 0x41, 0x56, 0x49, 0x41,
		0x20, 0x24, 0x31, 0x54, 0x4f, 0x4b, 0x59, 0x4f, 0x54, 0x4f, 0x4b, 0x54, 0x43, 0x4c, 0x45, 0x44,
		0x33, 0x32, 0x53, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x75, 0x7a,
		0x77, 0x34, 0x30, 0x35, 0x34, 0x74, 0x74, 0x67, 0x55, 0x5a, 0x57, 0x34, 0x30, 0x35, 0x34, 0x54,
		0x54, 0x47, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x6b, 0x61, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f,
		0x54, 0x72, 0x65, 0x6e, 0x64, 0x24, 0x31, 0x20, 0x32, 0x38, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20,
		0x33, 0x32, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x34, 0x33, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20,
		0x34, 0x30, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x34, 0x39, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20,
		0x35, 0x35, 0x2e, 0x30, 0x22, 0x34, 0x30, 0x46, 0x42, 0x35, 0x34, 0x32, 0x36, 0x34, 0x30, 0x4c,
		0x32, 0x36, 0x30, 0x30, 0x56, 0x4f, 0x58, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x77, 0x65, 0x62, 0x56,
		0x69, 0x64, 0x65, 0x6f, 0x57, 0x65, 0x62, 0x20, 0x54, 0x56, 0x57, 0x45, 0x4c, 0x4c, 0x49, 0x4e,
		0x47, 0x54, 0x4f, 0x4e, 0x58, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	}
)
